{
  "_id": "@aws-cdk/assert",
  "_rev": "425-38602a72bee48f8f11d7c5a8bb530bea",
  "name": "@aws-cdk/assert",
  "dist-tags": {
    "latest": "2.68.0",
    "next": "2.0.0-rc.33",
    "latest-1": "1.204.0"
  },
  "versions": {
    "0.8.0": {
      "name": "@aws-cdk/assert",
      "version": "0.8.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.8.0+bb95676",
        "pkglint": "^0.8.0+bb95676"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.8.0+bb95676",
        "@aws-cdk/cloudformation-diff": "^0.8.0+bb95676",
        "@aws-cdk/cx-api": "^0.8.0+bb95676",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/var/folders/n2/6v4_tbz97ws0h4bn5gbyvzb0m8vcjb/T/tmp.RsFoCAtz/y/npm/@aws-cdk/assert/assert-0.8.0.tgz",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "homepage": "https://github.com/awslabs/aws-cdk#readme",
      "_id": "@aws-cdk/assert@0.8.0",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "eladb",
        "email": "elad.benisrael@gmail.com"
      },
      "dist": {
        "integrity": "sha512-KbhXprbUFqFViOpZ8ZW+JlABfhhMvNCaHE+ktFKKkuQ2V338QCoY5Gs/pUnvdzeoYg2dQozrQAhsc0hFTgh/Ug==",
        "shasum": "85b76a071b44fba9a055413637e5ef8355df71bc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.8.0.tgz",
        "fileCount": 30,
        "unpackedSize": 93404,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbYGOiCRA9TVsSAnZWagAA9egQAJvz/h9qTD9qXA1aTm+c\nsFQvbFVqVI2HNdRrMC0ATvpuNE0fVy59xOs+nuB7YTi1JjLoPJalBvAz6Euz\nnlB+1G+cTfpnMk734QZuaTRYE1fcnsL6+MgCV9yJgM2VsGgFcF91HIJqEI/z\nec70+ld0qw5Qr2i2gttOoevsMmqPqodLGF4e6aTQZvZpMlvrbmPMuo9qikqo\nmX+bDv6nCstXC6dECf4UygE3Hp9ZPA4SSUkt5QLu+uSO+GMLePRXEf4LnyUM\nvqxs1kn/nVgVdrRy9wGaCWGWTOtEXPTGnjgwI5D8DmX8YnBjOM4EvMb0uuw6\n/KiI0rr00E+IWe3+b/mmB94A2Skyha60yshED7j41Z4ZqADKHUuu6dVlbLmq\n0I88rsf/8js6jzgdT9+3M/+DROpMXtdzIWkxaEwDGcAUfwwl8G/ZJFBae5gx\nHeH8Uj2OfaSSO1Y0ZciCSqFIF9EhfctqozWHEGw7KQ9G5KHuVoVdbQbMbSWO\nqzOrEakbai6la1DccAg7T7t1wOkMonMvfNfMB+D5nrHCenWD6+oIE5RceFfY\nc+2H42OuEnJ9DmuxkCBWiesVxjqgwIrzSaIMVvzRj7XDkY2uHkT9LjvlGr62\niXsJBGqvPHnOkihhw4I6aNyaEKFWW17rDJuv3G+mMJYJphluAfwIJl6JPH3F\nTmct\r\n=OvnZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBXfsn86NAhSDC2JZlf18z7U9eTY8v3xEMZvPz0atcXHAiAdb3m1FT9KOZF+Hl3PevzMOFCxmNx0+NeEQ5Iav2s4ig=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.8.0_1533043618624_0.4493588198073297"
      },
      "_hasShrinkwrap": false
    },
    "0.8.1": {
      "name": "@aws-cdk/assert",
      "version": "0.8.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.8.1",
        "pkglint": "^0.8.1"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.8.1",
        "@aws-cdk/cloudformation-diff": "^0.8.1",
        "@aws-cdk/cx-api": "^0.8.1",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.8.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-2BuwptShfCKacnj2nNcLa5EPslBQVupFM/vZVvjCi2KrULNZ09nGPX+dSv3NlC2RGZ2eGzZUYsQQB7OJcA/G9w==",
        "shasum": "262cdd83c6f0515b9257f7a0d92bbf1cc17b9587",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.8.1.tgz",
        "fileCount": 29,
        "unpackedSize": 93722,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbbA+eCRA9TVsSAnZWagAAjHYQAJUhgyrHXyms+hHEFZp5\nA6Xfy3H7vEarKjBVMaDtbm2FAGimZXnC7ZCi0O0IJMYWdbEXmJKom6fxKGCM\niEIDfP7rgpvMSNXxVWhIV346y9NEnzp3O/1x5+NlcYl6xcMIYrP/xRwp3v0l\nOue3JWQj7JM8SbWAEwGMMqmi/zS/tLRZgkPsAjMrUxqPwZKfLCyDQjCRESqH\nZ9Meel3cR0FNzTIZmL4bedwdKQ8OxcVX7JsvNSV752JMhn0wcztOljSIW9GW\nf2GphJw+fQs2qv68wt60Juz+KpMEeYH+kCB5EhFLHIgaxfYBUSVWLxiVmvpB\nJaH7sdB/w8lpyntd9SKr9g14asvq3ZVSF0LWzoYqmZn0FpVCpwImlUETwZUm\nxA4c+04NSG4FncIi258xXtwsGOH9NsKPxXBJmJVV29mw2mjntn7JB1gde3TZ\nbZQVt2PkyHNsrCxWfSezlg1apS2us5clBDd74YzXQC3A9ehU/NgzRN2s24dL\nS1FUaCKMmnVvnU4kM32uBf9tSPScnpn6hHwS6VF46Y9tLufElH7YLbD1Weaf\nx12wHXTAokk/XD7/LaXQruu2G+RSVodWSW+w/IP2ZDzyN+JgrJ2Ja6QSs2FD\nSnuMpCJQAUalb9XYjSj0I1EvHgIfYQ4Lpfd6On9PzGMMoazfnuqYaUCWlG29\nVvuG\r\n=3Mtk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDCpNLWYfTk3OkuV1vpo0s3k7T6AzySvS8Gr8fpllDX1AiEA890+U8jLEhqHXzGGFAdT/DLqdMMNkyyQUNAjmOhJ97M="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.8.1_1533808542115_0.8823134303744253"
      },
      "_hasShrinkwrap": false
    },
    "0.8.2": {
      "name": "@aws-cdk/assert",
      "version": "0.8.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.8.2",
        "pkglint": "^0.8.2"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.8.2",
        "@aws-cdk/cloudformation-diff": "^0.8.2",
        "@aws-cdk/cx-api": "^0.8.2",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.8.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-DRBQqyjxxM42D7KAaBMvyqlnl2G3D+IsS02rkpKTXpf8bmqoTOJJsmwnmErXWxTmR/kEZ387OcVBQnTZkjJP5Q==",
        "shasum": "6b971ebb8ddd7afeacb36d2325a6ffe11ce88bfa",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.8.2.tgz",
        "fileCount": 29,
        "unpackedSize": 93722,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdD2vCRA9TVsSAnZWagAA/QMQAJJBqeH6RVMbgFz5FjI9\nsebMBgdNFNE3Dg7cHKT1dkE2BjM+f0tntzLbcWnRjibyb4YD4gc+beVbc1q6\n7/xhnGrZ+mS9gIx7pJckmV8F7T9MFJyoR187l820brvNbmdLxkATNh5Xc0e0\nZ0pLyN3by4dWeck83tb3HxqyvEgtlPzPA3t5QHBugPtsM2Azvq3YTFCrWCxv\nbIPgUlUV6nC2aO5xdtOjRMVXsZUSlvzRQYiCH/PKYihJtE+7FAGtIuZSBeCS\n2+NCjAlI+XU4hx/IjeCoDSOyw/XVGV+z981HteRWL8dkq1NCZw0L2d3jrAHk\nOi2LJDZiCEvNUg9rqTt7pU9MDrqWSdC2uQ8AKEbDm7PxrY/Pde0OAvMFhDgI\nRCDvoAV+DbxWkHnsouA4XOzeWdPoZIKpEru9F1YID9ejrooVWTmecnVH604q\n4BjuvayXl32mgWFl2E5bY3GORQBnJcnaMsaKyOZYMfiHaZAfjdOqWLqCvgrr\n6TipnZ4U8AmsUpXfTjV4vxNi2xt52mHTZmUXmck6ssgUZEoa+gsRI63gHc5j\n3q2hbcPQiNumCiqJp3zIIp009wLXqADHk6SxnsVJCxUk7Udnij2utPv9yZUs\nwVkEPmamtDpjenMklMu0JolCCIdTokYogRbaTm5AbpPTrm2Qto9mRjBNcGH6\nTUaM\r\n=+I4B\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCCGYpYK5Tl6YsU5dU82kR/YmOX7qk4VQNSfYOwW0f+7wIgcKjbPUrl865yN4d3avmfu/i2fjhMEP96q9U5M2fjhsw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.8.2_1534344623748_0.9706272994267218"
      },
      "_hasShrinkwrap": false
    },
    "0.9.0": {
      "name": "@aws-cdk/assert",
      "version": "0.9.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.9.0",
        "pkglint": "^0.9.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.9.0",
        "@aws-cdk/cloudformation-diff": "^0.9.0",
        "@aws-cdk/cx-api": "^0.9.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.9.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-+J4nxEd5iPHrYd41FhFwJu+TkBq7I8pT0gg+URp8Oeqn0t9K3i04rqHCohGcGg33F0RkHMvSi8Lp5gDf7KDg3w==",
        "shasum": "c51047bfd794679e98c9af03cbf55af866df50e6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.9.0.tgz",
        "fileCount": 30,
        "unpackedSize": 96617,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbl6oDCRA9TVsSAnZWagAA2fMP/jB9JwBH1+DBfVD3mFFe\nDH146oLA3PGVkzwo50rYwU4OG6hKvRjvxfGPNT4+uJs8fUkDphuCDpvZcGqy\nL/QhKpxAI+DjnZzNOoCFkX1TBSb2aoHzzmhBfmGACyktZhHcgyt7npU1Bvmv\nK43u9HOIEQxzSoeuGOe93sGpdjKu7dvV58j8koHOUgA8DwXrMB8YnE6vXUNe\nn2l482VGNbwwBKYiHGjSi/KPHGxvwVy2+0J5EgYNiFyaeTWxVaixGnwx4hxF\noEnGjBMu/Mlz6CKYr5r66Exo/Y7TWsmo50seAc9bwyaCmvgrH74h7iyvtN9O\nRYIu4H3nOTPoEnYL5/Ixu8KA+woSjoUdh0wdP2siTNESNe9i40q3jFexK5aZ\ntIPn1uRYwBB2gjdhr1T/MZsEI/FK1ew29JA6glXdIy+FaCbpwV/9erALWhOI\nz/tDpx2CLMwKCAhSRV1/XvwaJFLLBAmZHdL6lrAApMJCn8eD5xBX1PiWrqNQ\nrJ5p2Thk4AwG/ieYoKp2E//e+Jw1mb2uHzKjfQeUMEFsJ3HeSXrejYrxofKs\nL++7pOJYikx3e3B9sVxW3IvouKWBzk43Lg70izhfmsueaxE0eZZO7vHH/l0H\nnD73XRmFLPpUjDO6cHPHcdyybpIXk5zIQFNex2U19h77FsNr95Sq2pOdCJX+\n+gPn\r\n=hXCR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQChOgujiRQcbDbulY1BvCgZ8VNEELrf5SxHRZYKtau44wIgB004tNkfRwnAprJKSPTgobubsH97kMscGTLeKexcgrk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.9.0_1536666114930_0.6691252991674101"
      },
      "_hasShrinkwrap": false
    },
    "0.9.1": {
      "name": "@aws-cdk/assert",
      "version": "0.9.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.9.1",
        "pkglint": "^0.9.1"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.9.1",
        "@aws-cdk/cloudformation-diff": "^0.9.1",
        "@aws-cdk/cx-api": "^0.9.1",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.9.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-wlhUPfBscWv7abB5spgL6wbH3o111vcY5aQyvp3/p5h5cTbGbEGPxWj+ZPA4ZkJRbucvtLofGff4SSxQAJGjOw==",
        "shasum": "63f090e3bc9ded3c3e5cea81b11bbe0fc131a625",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.9.1.tgz",
        "fileCount": 30,
        "unpackedSize": 96617,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbm4LuCRA9TVsSAnZWagAAWdMP/Ap5HRKvd3cnm+/lXYy1\no08sgR90Mxagl8pWri7UU/cbCEYHPtHxUw40HjRV7jpLdQMesIU8tU0rL57v\nTFR2+cZP+NNfPn4Myw08Hu4FE8yXmB7kktKnOrRft9Cc+MU93BxenFR54Isz\nBrrOgz74cmBiUDGc0WC8YIAXxWqRyvpVVaqJiNKM1vtAi58aWuewbIrI90He\nkCmyCpE+uXswKRLJiylAYAi+Pf8wyznDINyvocM9u5ZKxeZB74EJbBw79hpX\n38BiT2GHAAY0bGiOqQhLy4A22N5fIognaoFX9Z0iSptTyvH+yhQ5o0GuoPaZ\nWeRo7DPlNMDsL8h1RiddrB3e4qLn7g4J1tgbOMlo/RCp6Dc1WKWhe1ef85Dy\naLayUIx3k1o6HujoT+Ui9TwKPNP2EMkAaRPP8zOdc92KQDcJSDbww4+301T7\nB+8cdenx/YgnQi9E9mEL+ugaFp5SliKIeMRlOvFafdGPmPYYPJkH3/1wKquG\nAOE5dF5n79z7dAsvlFiAD/E0ZdMbgTT6++lIj//LMkn2kCMYVuOHgwpxCpzw\nLMDfbncaL+lsXDivJKDyFVc/9Rh6ZY32/sPCJH0YWBs8GBWGAV5orJMjtfZH\ng8uUEKYXKPcOQS5iVCQjxfg90kLW/rzoGXGgVvDmxIR8q/W3TaksTOKq2zWX\nXizj\r\n=V6YI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDsSHvgoHh0WHQE1MP7qXckrcDwwm4pNfE8SGLdMBwRuAiEAqAig/Rj6yNQOd+tqd+F7yzI2TDlMnSleWlNQ/WaPWVo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.9.1_1536918253751_0.17957468876426774"
      },
      "_hasShrinkwrap": false
    },
    "0.9.2": {
      "name": "@aws-cdk/assert",
      "version": "0.9.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.9.2",
        "pkglint": "^0.9.2"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.9.2",
        "@aws-cdk/cloudformation-diff": "^0.9.2",
        "@aws-cdk/cx-api": "^0.9.2",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.9.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-jYF+Ic02hp/z4t3xc6+Y+vjUwMMm6v3rYZWK4Of2cKXl0PaFUUZFD5VVUb1RJWWl3Pxr3CYkEzSmrAd83MyZ/Q==",
        "shasum": "73369dd5b69f863302370f473d03d24e336f8d62",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.9.2.tgz",
        "fileCount": 30,
        "unpackedSize": 98005,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbpAwrCRA9TVsSAnZWagAAUf4P/0FL/8E42C+DJGfvc1pH\njWzCW/iuzEaFS4JscNd5wXJYgD9XYbHh2n/E3tpZtbhpbt29Pw+mJInY5jj9\n34yVCJw6FtK2QTKaTPZ0AqJbryir7GRrU8ZMidmj/Ip/1c3d1GdxbSaHDuXe\nhpsz9Z8PnJffaLqNScVH87CVpK0439D7vnm5ozQR9V9Hf84iNdcmQGqX5x2V\nkow245XUfiB9doxhX9LOsLU1wmQFjjdrRaxbZUSKv8oL2D2t+TkpCEJoyTOX\nZrM2esghxciIppHk+GN/r3PZvLasCIXxF9G0T4vzZvsJRz1TQU5Eh22+IlJE\nKt2Zbu1zvQNFSDx3cUwC7XGFQXsnwl2B1KouwhK4ltZn8l+c5L5YFQalV52w\nbPyhSUKEdLRT8HVH3CxbcLeuQidiTjE5bmz3WRCHCq8/XKHZYUMaon8LsXSG\n4D6fBYZOFespqsMvsjtubZG12tL3A0r4f+AXAe6bWni9SP3zjaOKR0tBcgN0\neHfU6nGm42I9bilunr9Qvm/SecxJV+QWhM5vzcRFPSTyUMvDLwoheU6kzLCZ\nwpT9+7tpeB5/GcSpUfICPeJXmH7oWieoqDj84rZ18sYo7/c9leG33X0WuESj\nGKpTVR8V3DmJ2eomIRI2K1FbbUVOS0Y38tM2Jg03SD2dYyKs3bKUrV2xZ5nV\nHjdX\r\n=ZqOq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFmP8JWXgn6UihKvDo+rlrUtkg2mqcuMSW5d4awJz/mCAiAaeQTPDruyDfBsm3SjUbxWhFa9BlTXOQQJFXPfIKCnlA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.9.2_1537477674426_0.01562141421103913"
      },
      "_hasShrinkwrap": false
    },
    "0.10.0": {
      "name": "@aws-cdk/assert",
      "version": "0.10.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.10.0",
        "pkglint": "^0.10.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.10.0",
        "@aws-cdk/cloudformation-diff": "^0.10.0",
        "@aws-cdk/cx-api": "^0.10.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.10.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-HtReFWOkvUtkebnQKPmg1XBB/IQLmWCIX195WV97FbMP9GSPaJk4VZUGaIVYvlo6YQUXXRJ9R7n4IDetpPGOww==",
        "shasum": "c54dd63135f1534251e80bde2598becc4bc98d6a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.10.0.tgz",
        "fileCount": 30,
        "unpackedSize": 96379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrVPWCRA9TVsSAnZWagAAazkP/0B2J6Lz/ZzbTH11CwAq\nvCJ6xuUIdnAe/1SS4BhYp9xWq92etEiOkaFj1fe9Yf9X+orlTwYqYk2WnqmO\ny+YSEMQxqzeJ5zeYh6Nn6aUVA1ow+YbUUSePh/Tp5zJ448EkNwNP1EZzvu1p\nMDX3o1I0uKFilVymVnNKrwyqeLRxZ9Jyj6D8xQKH9N/1p8tvbeXGicvvjO2E\ngRzQfYAmiZV9z+0k/kTIaAzl+pfE26E5Zh6kRdTAVMR5QscA9KyM4h4PQrjC\n9+Il85R30mIsicVJPxehE9hhihWrFqiedKGseKPraSJQvDUZjqht9gsXA9pf\n1WHip/kavxQI63lPcopCHE0Ccod1V7a4Y+oO4/FP2pDiBl5DIlRqE52flkjD\n7icTafhsnHQ5ZFaKi524pKTTdRgrjm+MUG/chy6TPUleuRj8V3Ma7oiqTdnL\nTayT7Ls/TaDf/b+vf4bDsSrLW0BY0NgsNzhUOop+MMuEITTZ4uhc8cWkjkUc\nTOC9OrI+b4bUhFWxAEODdGUxJ3b03fTz0IxPvQf7iUITn6c02xeLcqBGgvJ3\nO4sjRHCqq3HcpxUNw/fDscOtqI6gqiWNOK/eI1pfQTZFedqn5EehfIOt8NtC\n0VpRkCp+zyOcOTJPSkRO/9oybNo6rt4lynbY04ya6afHufRKwKHoKfi1lvHs\n/0YE\r\n=vq6U\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDwwbmhjILrrFTKqXph4jYPhay3Am5Y0llUY3p5ZjC4hwIgMTkQq96CKbyGQzdoGB1QtI3vSdM3PmsjwHWuyWzEgcI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.10.0_1538085846104_0.8783842036926464"
      },
      "_hasShrinkwrap": false
    },
    "0.11.0": {
      "name": "@aws-cdk/assert",
      "version": "0.11.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.11.0",
        "pkglint": "^0.11.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.11.0",
        "@aws-cdk/cloudformation-diff": "^0.11.0",
        "@aws-cdk/cx-api": "^0.11.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.11.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-Wg8tiBjF3iP41MZZ2gzBbntaGUVyahspY/eU548orew/BZaPw+JYrl6BM+ubXktpVWLb776q5b1Fe4s6h6d+UQ==",
        "shasum": "d89efc3d98aea33238ffa36269b1cb761b2d3ddf",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.11.0.tgz",
        "fileCount": 30,
        "unpackedSize": 96763,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbv5Q3CRA9TVsSAnZWagAArSkQAJu6K92PHoj2B4QXFCzh\nLR+9ozI13yWPi7B2PuAMfnrG0roaIokj9lK47Jl2j/Mc91BCJfwZUZt1A3hO\nOmFF8XYVnfwC5z7psXK8KZ28K7RjCofIz0/fhsrmmiJZKeF7d37WfQttgCuk\nbZR83AX//BGn7sw5CZQSeQcHM9mW+Jfqnq8BCCWDbPxq4h3EwsMNppid++Db\nM3t5k+02u3UXcngZOWedv0IKfqnNlWmsHVmveMiVPYUKtdtA6jTvQUqYvH1X\nFUSnlZ1tOY8GisEkNiesPEw2D56YTHEQ9NoX5AHTeTxIZ1FkZ1mQ1VX0lfOl\nBXi2bOw76DgVN9US2RX6NgSfaaNKY1vjLWj6/N2m5+fi+/WIGeMGKYrVWjwh\nN9AvAX9AYoatGHRQ3Dk1I2eePOhVoAilOrWhuVzW0lX5RuTdXQS3FwFv4X9X\nd+T+H9OfaGkg4RXzAkST2KEIetATxcTRwz93wGQ2iVvlW6hkvhlzo6h/KAEh\nGuDhMoEJMOFis9S270IN6t4/1oKVVTDZBB8oKJvNigL9Q6mGkpQoEfdev0xu\nHExBvfIa9Sl5KGlkIUzbwiuYqWmDrEcX+o/0h0pZYT1otQQgy1+iqTfeeetS\nNN6ob031Oh6XdZJq0gEk9bKYV/VEgm9ONXyvB1MILtR06I51MURkVKKb4H8E\nmZ8b\r\n=8iUA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCtGftZTcBudb+JodGkw+ET1wWdgobX6yHOulsQ8ApnrAIgfm8No6XHwl0cg49JDgzES00XsvG+eLWpkfzpzpU4bow="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.11.0_1539281974792_0.2767125705091624"
      },
      "_hasShrinkwrap": false
    },
    "0.12.0": {
      "name": "@aws-cdk/assert",
      "version": "0.12.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.12.0",
        "pkglint": "^0.12.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.12.0",
        "@aws-cdk/cloudformation-diff": "^0.12.0",
        "@aws-cdk/cx-api": "^0.12.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.12.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-OfQ3ts1NqsCLEjEsyOm+n/5AwIua14jCKtoKao+hOS4becwEPjfx0uHgMt2pS6aHezq3rqQfC44sbZSab0ngsw==",
        "shasum": "36dbde5e0f9cbfcf6001a004ad17d5fea514ad1e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.12.0.tgz",
        "fileCount": 30,
        "unpackedSize": 96763,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbwHQTCRA9TVsSAnZWagAAprQP/AkjWmFEXauPGWua7LxC\n20+BewuKQjFkzRT7Jr6kFjqDRcys95/wGfFQl2cIE5Y+aH7amg0niOKL/k8D\nNmR1YiYygOIxbVaUeuWaOTedNezecNMBM0M6B7q6rGV40dsb/aD6babC9qa0\nuckKuN0rswA+48O+1oShOuVgG/iJmNh+1WQaio+LSWWLBDgQj9PGpEmW7KD0\nK0mHSMBaVxQVDljcPSYQSm+aWStV3+bLtMXwvaiDvk8qd5uPCalMH2/v6X+t\n3BsgtVM74MqLRMvW3nmc+ux00e5uMLc+6+ST9evTWsT1IRAZsiWFVyti/j5k\n6a67nLJnBo+m3z9FhFyBW3MRUUoDLZ+mXSJ2/kk2kXFKPSKo1mzXBgq20M1G\nZP7HlFmNRw/Yjx3yc6xfnUURsd1T1fE9AlWza59soZPIptvigoWEt4c9Dxpj\nEt2R8+t5/z7DcO3Bnrco1br/qJLBTMcrSFGBJGwUnewKejtZKn029m91dSKB\nA3sf9VKIjmDuFbxlGhImGk6KHjNCh+kVtIZbWpuGhjIrztNzrBEkWzAlIAbj\nEe9Ag2JcX8rVhrPzRk2/8XDTJOnZXXf3SR+ek2XMlYDg2k2yENHySy8EV+TF\nHXPq/N8uVJLP5acSjJWkAHg5ZKC4UwDfwqXQkxx2uIb5UBpD6Azwhr6naONB\nox0u\r\n=NDcf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHcN0odKlE9rFWRD1nbM26/0B8dLvZvprpzo2yikEWVFAiAF0sa4tInt5m7ABC2s7unukWnLssj92xju0M3GeDN7SA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.12.0_1539339282570_0.5589286049317823"
      },
      "_hasShrinkwrap": false
    },
    "0.13.0": {
      "name": "@aws-cdk/assert",
      "version": "0.13.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.13.0",
        "pkglint": "^0.13.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.13.0",
        "@aws-cdk/cloudformation-diff": "^0.13.0",
        "@aws-cdk/cx-api": "^0.13.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.13.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-uGJC3DYtobqVOCK26oxhvggJfsc5zJyTI0MsMtMbVacHqk2gH3nkQMN8sIxYTKK60hYc/gN5uL700HlE6OCbyQ==",
        "shasum": "b507e4bdaac18f49393072cb602a4dee79ae93af",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.13.0.tgz",
        "fileCount": 30,
        "unpackedSize": 96763,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbyehWCRA9TVsSAnZWagAAcy4P/RKM7DL+Nw32nZv5pVxZ\nl1GBnK5WjNm5ffWPJkauoyGp780YvxDAYlP1NVxAmiOCtfUQb0zgGCRvb+0M\nUF1Mi0IJpBMzxTwl6gEbL+ES+rqN7skslovsjFLT5Pv6UrlnW478WY3HXwWo\nYbH4Ke/EAgFT41vfs5zwgBVqffsGIcz3e+JDZ+qbe0z2CFlZjLOmKaZQvz6C\nK8ivJj3VZ4U8nc/lPP66UN/k5PPH73OrjEZn6EpLx03pX5MrT7nEGh3xSnMs\nTBAARbHiCkhjeUvaqD5/BC8ttYyJmjn0kcSZrmg3RUYd2yMKg8nTe/1eVZc4\nGg7YnOZjOOSZJc0Gh5jAbJRPXwoUeBowC1rB+uwozQ4GYYNFIhXdWlQKMQUQ\nQ6gZbysIuUxA177E/FMJxrqs30FhXByMENmkLf/6If1y/ZIAvTrLIEYZ4BAb\nGOqS2t4zNwnsnB/wWOqcM+55N47Ojhc+2lm6zGDOTbqMjJJ7w9xzUhnjUytQ\ngPcdCKGs6BY4j6dd3ivOQXUn71EpGubQmQ4yzEsQ7u1T0GPd37bwC1W09tgM\njkL9e8sBqazupp+SrD5N6CxB0RhCQmVpVBVUSmvQZNDbAkXsOaNY65hEu//D\n0T2+21unxQ7MpA6sAt52eY+alaQKt6tKNqpDZCF+Tyi+cGQe71M1HDCtoUVT\naTuF\r\n=mY1T\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDYNWU3AmdmksQie3nVB2fVEZTlUVYK83ZzCq8FCLwWtwIgY1Low+fYQhyrklYSuHc31L2b0vtgIvn4NYG1ul7MFuo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.13.0_1539958869675_0.2378056223937981"
      },
      "_hasShrinkwrap": false
    },
    "0.14.0": {
      "name": "@aws-cdk/assert",
      "version": "0.14.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.14.0",
        "pkglint": "^0.14.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.14.0",
        "@aws-cdk/cloudformation-diff": "^0.14.0",
        "@aws-cdk/cx-api": "^0.14.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.14.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-5Nc1tpETjwgFhQmF591/t1Q4d7yN5ce9JJJfEtsrdX+7LeSjHly9uFWVuedI7mZhHjmItDZwjE94ylu/XMwasg==",
        "shasum": "d44b821605713b1c502565e598c41b85f8bd752a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.14.0.tgz",
        "fileCount": 32,
        "unpackedSize": 105449,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0xtGCRA9TVsSAnZWagAAhyQP/iA7raGpPYAjZSltj/9M\nxLAjYQ2bwjweJuT8gFiWrZWzjOSbm9Q+39ywz8YsDIvITrBam6IVMeRx6PAc\n8jQVQ0Vndu6gIbzEkkRQZhktBmiKBpu2zikAvTXOlIhwjJgo4PS2v0diiPBl\n2A9JiY0YsSNeC/eA8ZiUiEQKir937v+UhBAiP/7RJtRQ30/xAfLMPXuF3lnf\nain4zXigK2jO7VNrr9lN01nWHr5dl+i9JGtqF3oda65OM6YgM6EnvZ2AoOkp\nrazfbGaiE54YLve/j48zx3CizxG1kS0xjD8vN+CRjplB2zjyXFmq2g462/0Z\nJ+AXKJLjTjpLb2NYUzCBppVf2gQtPEUypdEhxsIf4bdn5tnvoYqvdiynpR97\nqmuWS3g7eb+LySCrrGEWTDPSQ4SRep5vTgs1zt/xWFrud6GMNr8AWMlKf8HA\n10GR6ZIT+CssaPvJOkyn0HYyhtc6XfhvnUEmezbc1TLqOSwDb1Ln0IkNtdvU\njGreU9D7E4kx8zR4iI/g7VJlgVCdwNlhaw226NJA2Us40XOmY4NsDk9hBPP/\nSccKmfNnboTfjuVsXfkZv3F3TuPD9n5LMtxLWl0ikOeKjwCa6xdnFJ+3YMXO\nrK05shXCZ8PjrO+zLjUZ/LfC/gv+RZcg0bR9DNWiPQeRbPNiEza/Jbgt9QKc\n32p4\r\n=/gh4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDtzi75MNarfiTdHwDyucmDdGFp+DlB8wogy4dLPwyeLAiEA0acgStI5YeY/vwCFTAxK3mLPAFLDFfqXfaUyED4KoV4="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.14.0_1540561733744_0.19928252467835472"
      },
      "_hasShrinkwrap": false
    },
    "0.14.1": {
      "name": "@aws-cdk/assert",
      "version": "0.14.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.14.1",
        "pkglint": "^0.14.1"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.14.1",
        "@aws-cdk/cloudformation-diff": "^0.14.1",
        "@aws-cdk/cx-api": "^0.14.1",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.14.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-i8NVmzxRZclQH/kPsN2vjtFB1jkwkuqCS7psYvqpccli9U6uF5SrwdrM21YfqpPo8w0AI+4bUuct5u9W6CvSYA==",
        "shasum": "30e8dcc324f9865a551a90736cd5c04cfd1503e7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.14.1.tgz",
        "fileCount": 32,
        "unpackedSize": 105449,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb01sjCRA9TVsSAnZWagAA6kYP/0KlpoHzooVFJaVd8D0E\ndaxOvjbD0E76ii2ds+j88gieL+AtOfZpqNHQnTidKQHhAheGesTxKEuAAqRG\n2n81ZYV4mmf5SRSzlQNcCDQtmFnf96sYFbF2HtvL/NpFL2FQ3R8QOriFa7ea\noOlJ2Tm/9IUbhWZu7Dq7jvUfwIGeJ9+vEjmA25Rw1Kw8zY+ttETTubAdAict\nkmubyD2BeWbt5wFgQmcZQDV/Y0C86ZYNdVGu3fFgrbTCSG8+rk80Vrk/oIoR\n84B9CuKSyhnkrFBYSOCbOEPuC6viyR7jKHtbK1gumchm4P0WAI90NELx4njC\nKa9qf+8+/LyVKrn0hgyv2ccKFrrINjhhnlxE0ozcK+mWf2aiaoXfTQ1z4Wrm\nDQho7Lef2udwnW8+jYw2Czc3asNlkdPFO62PP54huOLm/n4xnnngfYMaUipe\nkc6aZSrcEDS4gTqdknLrMZo60TrTkcjRuL/woVu2CA3OSZayDOghg8WvQyXU\niBhROZoG2OQhTPmnOuOLGNJh5eIGJLdKGDHoDWGMYuV39xtxLYxiXTWtiE3j\nr9zO7M9c5o5BIvrC7EylpUtyMWJVpOLfL/M1eTTF1E47IklSnsW2syHOGts9\nqh81Vo+K8hlHipsHKzfyi6RCFIeFN37+m26WrlHvoiY7wKKwOjiS8c+Jia8l\nUB4g\r\n=nyz6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAKUXElWDQYwTxNSmdbxD/nVIdJaFgXgYlG8VkzmHcHTAiEAq+tcFDpYwWl8jacoGD2pa1g+tGT8JGiB/Ru6gZqcvsU="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.14.1_1540578083141_0.4367157085928084"
      },
      "_hasShrinkwrap": false
    },
    "0.15.0": {
      "name": "@aws-cdk/assert",
      "version": "0.15.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.15.0",
        "pkglint": "^0.15.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.15.0",
        "@aws-cdk/cloudformation-diff": "^0.15.0",
        "@aws-cdk/cx-api": "^0.15.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.15.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-HcoIrQADVlcepcLUvUR0zVbe9F/pL8+sc60H/Z4TeMrOpuWh3ORGCTKNcL+82Z55jyIQhfpxd88hCsGl0zr6Cw==",
        "shasum": "c99a29ed4e24aa38856e6778a01360ac0f63d521",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.15.0.tgz",
        "fileCount": 31,
        "unpackedSize": 104853,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb4dSyCRA9TVsSAnZWagAA8oQP+waWnr0YLwDsQA5IfISr\npP0vYN8gswo6yWnH4fxAb0DpZaM0xx00P3be9apX6R/nVf5MnHGoyJ3O1bhH\ntQCvXheQjwIn8nAgkSV6Q6e/DMEAISL47misUuCdQI7KaTsLPK7MThY75jaY\nw82Cjxoz+zZERXkMzKt8RevcgPNCXOhLzChP9/1lfO9pmP1q0HrrRG5km9nj\nH3UjfqJoKg0GqPJCJViQG5CE3VpfoZX5JnGJ7igb5goCnXaHQh30zdacmMQS\nSg8C7pja8OUqNnAK/+31b7GZ5w5Y9phxqyaaWSI3znj4bWulq8lcy6GtkWEd\nV9MoVrI8qwY79I2I8/i4h86msvwLkxF5QrgYF42oex2RdG2OySzCIMtR6W9N\n79NvmJGCyK59OaUqz6ENZNHg5HojiX0cF4DZHOBE8jWldmdFNvwBrU64fu5K\n1Gw242VBEGYApDW/FWE9z2NV3zaj+vEdurciyK/iZBZav/+YwzI9THOhXKV9\ncuI4QzcRYbKUx17EqesVUN821k5uPSmdO5r/E1PZUCtZvDN1Nac9FBawbdsn\ng6LNbXoDjRs9+ZtuW9cyOaK0ORE9Aj+IYEcRb4LO5oaCnFEZ/N4t+ARt45mB\n2bxznwUj/y2zMacDdg6XF+/CgSEbAylsKWjX4yxwnZ5CtJWOikI6NdJ7ViG7\nAhx0\r\n=aiHQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDoaJJetrSne2KDM4JZ2OqwOnsA4wTZlvQUbSg0Y5IzLgIgBNdxV+/TQ1EcY8xv86TirG6nyIjLFW0IQld6cGAjWY4="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.15.0_1541526705421_0.14590059370246644"
      },
      "_hasShrinkwrap": false
    },
    "0.15.1": {
      "name": "@aws-cdk/assert",
      "version": "0.15.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.15.1",
        "pkglint": "^0.15.1"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.15.1",
        "@aws-cdk/cloudformation-diff": "^0.15.1",
        "@aws-cdk/cx-api": "^0.15.1",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.15.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-13/FwgnW1AWQ7Y6GgxMNdaQ4U6irnL1L+7gr4+5d8iKfGRKmT6jhI1Kiud1m5Lw3qr42mLw9a7ZSwpm06osQJA==",
        "shasum": "a52ce77a694bbc2a038119de60689677e6a0d742",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.15.1.tgz",
        "fileCount": 31,
        "unpackedSize": 104853,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb4gmGCRA9TVsSAnZWagAAcWcP/3FKIHg9VbcRUhQQxx0K\n5Y/IERsAY7x+lbl3nAM1tKaM40r1Ka89E6R9jOMiajVY4GrB2unGuHjiG5Wl\nCozu2T6dhfYTKQjR9PK4IT+RCFSRt3dXWGN/pYIBeweSomfakckpfsJaFspK\n0JM0W5fbXZ1UINOra13yJXDxN6HY2E7BXiVyaJ9bSuf8IMxPulUbCslbO+33\ndNYyowZtOYGDfAopplzmWbvGADm4sRpFlJ9IXmXg9H+kmMvsFOcUXCckLtrg\nwBdR4JrdWghfke4X4yPbr/yeOCKP32KKOIJ2gU+amvwp90nGUCVzFw1U669D\n0RRgLAEZVMAyrg6mDXv4qpk5riAcbrUVgzurWS5/K38dRh8J1QaUH/eM30Wg\nGoW+vKZO7uk3Lrv+ptEmu6xeZVJ/ysHN62MugUYDC6ZpzbHeSnovcBIrALb3\n/CueG8lxxjiSxmTUsYx5jMJYzT/NgmmAQTiVCD+CH9EeGeg+dMaFUOHSdoGh\nrIwbjui7nal7nqzOEvMytV/2o072hUrbdiil2FbhZed51tkzxKomcmS4keF/\ntO8zS1ioakf6ww63NrYh0fGfcaz2QLkN9a/oAV4D39aFYHtF+HY4G738N9dj\nCDHt7v9lNSoVhdLLnmZK4IA8qR/CbCT+qGgwbathg2Pk6oZGrSKJxHGvbT8G\nNnO5\r\n=kN2s\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDp2xQPfyMQBaRlAr7BQSjvMlqbsC4T9Y6hKJyqmVT0qgIgGhTB2o70XbpAhRQWwHjgqyUB8StTXPBtaTzfUTXFwkY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.15.1_1541540229639_0.9314448237239854"
      },
      "_hasShrinkwrap": false
    },
    "0.15.2": {
      "name": "@aws-cdk/assert",
      "version": "0.15.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.15.2",
        "pkglint": "^0.15.2"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.15.2",
        "@aws-cdk/cloudformation-diff": "^0.15.2",
        "@aws-cdk/cx-api": "^0.15.2",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.15.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-RaJbjFd1uoPj5pbqNVYnrjfF9O/kZtNaoh7P54pAa6j3c/2feGMDNCnnwm6VeCrKa+6OQ6CTCGGayEzmnXeyLQ==",
        "shasum": "19238fe1eb00928701eb0853cebd8bb1dc01a8df",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.15.2.tgz",
        "fileCount": 31,
        "unpackedSize": 104853,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb5DtCCRA9TVsSAnZWagAAeRMP/1aiUtYWORN4DnI2gXrC\nLJOkDB37AgAT/KdnoANZZtxd1c+JVT5vrEBLpvvSTFhtTBdhieKU4UZmlXRm\niWILfixq77e+a5L6qmc3a+6/+D6KQ1IbLMvQSTqb5OBvEaC8RgAG0BKEGnK3\nJUEUlBg+7vY5jPQ2MFhsR58WRtG5GgnBovHHZiF62ly78Dr8hK4xZdJpFZq0\n/HX0C7/wYK63wbIr0CdI3QdIRW9IS5wAVR9E5mqXCn97UqcAhhj9OlOMLqpk\nKS/fMkRY0Qm+I4G7g9j2TUagT50YDwfcTyIKnibxnaUxl2k1rP/zieyvSfN/\nCRpJhqf6MFEdjEBi/rIhBpdl7PTpTL8NedluZtrmCz1yNzyV12/JQPJRFVll\nrQDP+zIR/GXNodSYEuTakv9zKTGG9cKGAyyu0ls0Ov8RrTg3VJBAQCMUmOBL\nnJTgiI8uJwSqKyU0K5ZYtTgeF34JctRFJQylxdqMOxeDJy8sn/2BOFoBZnle\neo97l1YmpOlN4LTsH4/onhMgy7tiHytkqt1m38c/dlYgESbfpdBYIU8Mg+D9\ndjkXLBF/saCeBagJITFwdvMxA1+YZJOygveCpDLSZgWJyG6Og38ti8syEZUY\n+ZhlWgKCECu9lF3BR/5mPdCUzQL4dQXikMX+Acem/b6nxOTT3sVVQ76Vs8Zk\n9jZO\r\n=wPvu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFpzeIr0vfspltFQrW9D3iIEcgSEnhuMykD4a3VWed/gAiBHs0SmSQ+DDE4Lpk1tOEhVPIfZoohrAKnS25GM3ML9nA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.15.2_1541684033843_0.9535622538289326"
      },
      "_hasShrinkwrap": false
    },
    "0.16.0": {
      "name": "@aws-cdk/assert",
      "version": "0.16.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.16.0",
        "pkglint": "^0.16.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.16.0",
        "@aws-cdk/cloudformation-diff": "^0.16.0",
        "@aws-cdk/cx-api": "^0.16.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.16.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-+zgO4zw5lnI+aFyvLF5vVpTMn5HljgQMj1ceS4L5UfaoIr8YdLMQYFeOHOKehvOnYH2KZR0+UOlVndZAbNCRqg==",
        "shasum": "18fd6b41b207806ac14f81772cfb1efad9735da5",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.16.0.tgz",
        "fileCount": 31,
        "unpackedSize": 104853,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6eDQCRA9TVsSAnZWagAA9DEP/iLlHyYECoHmQa4O8XtZ\nCpInshb2pwr4hCvGqVwCuE+j5UTSHbnRp6+KTpsmwpe6VDKCCq2GjxeJY4XG\nuVUPX71Uw97JMjierCUsmt7zulp/ReO7PgXGliZqs78ZAiSNFRef4AVuU5gA\nrWH7O8/LCmI0RDjS2AGIfT0vbIn6Re12nciBRIIWOL8yAPL0cQYmfGcitIVK\nR0wd33cgpSadBcATlweMtRU1Vr+4IFmunM4BsWZSvzs6sRWIgWVsWOuXmnTV\nr9NaYbXxseWqJGzBuQDgMYnUIWIgqrjGN1wESlCrBOqxQz0mF0FXabhPiO+k\nhGMx0r1+2zzCAr5/PT+/dBQaoRV1PNToDuzNbw1FOs/9SL0hSzRAU2m+kgvQ\nyNH6AhCYK10+WoyMcQVHDEgW+vfo1K+57Ds1ymrrpaZh6NzE4uLYIHL7AFgY\nuHRU5THP8qJY2zkRLn1aqQqHIEnc2EdhaYafPqWK8LKfEyIANw/mPruuc99e\n4+JftrWnhn5i+HHkDZnyWg5iTQmQx6Jp5S0L3ATjrwC5ZfAH4688dgi500iN\nZ6QYbIUKM1QTnBCwvMzg2Yp2UgOgInpelYJykW5sCvtxdRXiRl4Bv0BvtTa4\nBoO81A6+eaMAkx0HdyrpXJ0F3o64tkxHmZfNjgl7KxHxyOcnMuDfTPYXVXq8\n1cpf\r\n=SROK\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFWP2nu/W65ct7q91TEJb3/9Ro++hsl2K+muGhG6n6fcAiBSYmUUx7K32Zf8ocQeBktF6vPszXUfArwuJC7pJflANw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.16.0_1542054095390_0.8532892052486147"
      },
      "_hasShrinkwrap": false
    },
    "0.17.0": {
      "name": "@aws-cdk/assert",
      "version": "0.17.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.17.0",
        "pkglint": "^0.17.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.17.0",
        "@aws-cdk/cloudformation-diff": "^0.17.0",
        "@aws-cdk/cx-api": "^0.17.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.17.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-wej3NGX4677nzOwqKIhUu1KU3ykRF0hJsvCr0ppjYw09kl3WFVSu/cMF8TC2bu82e188r+6LsIf1L4Zt57pibA==",
        "shasum": "6ed7d43df0b9487b3025b50d43cccf5a0c847e3d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.17.0.tgz",
        "fileCount": 31,
        "unpackedSize": 104853,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6/XpCRA9TVsSAnZWagAA62gP/1tnQ5E1II7+TPa00FGK\nTvi4bi0R64MolwLMIoicCr7xCoJHD1pKexHBAUUDZ1qV9/HuGlocKnhyK+Yj\njyfSd1Xa7/jVgtMVKgK6XG5zg/LZJ7ZSrgYpKHHNKhYr4tbPE00lBozPa54q\nrYjcnyP8Wexi/Txie0jol0J6TjDNxj9v+rYQigwrxnkVHlTun84wrFULriTu\njhHarOl2/N+wv7Z2hc+Pg+mCCqy+jRjW3vxF4PLqvo0g6lw6HhH6Bp9y2g4f\nK+R9U0xvlSX/XtW6ZR5OnnMrpxEYbcfA90QzNyvhwx3vYCN5DA5NxWONvP+t\nbPHGYgG+HmYSB+PqIGYE4j3cinjr5dpACYzXTLYNDVFLf4pYXQQmagpIxFYf\nqvky97eNOmaoqx961nOWxuLK0tbSKULnVZCAik5jXHqNCBt0BZdE2bCgCILX\nLAbM/YWPZpxMkDnDu4BAPrJGKsgsYlGaTaVJNXbpMMMTbotjLINwCoagtOW4\nz5u5QoDJDpIDBXgV6Zp2qwal9wzLx6qfydU/yn+xyMSYEIvmkxiayJzHIiTH\n/33Ji/6hZqrRGGUhBQrhDzkXgozzsk3+O9em5hVaqaodc6Rb7xPWin0yfwYR\n/w8PBVsDrEg/wi98MykZtdiQzxU4GizZ63xpO/6/QQkW89jQFm2ludeMW8Lq\n/wXq\r\n=XSjf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDS030GmBOTG0j9h0oDxZPssRF1Fiame2OY23mrt3G3MwIgY6T4D8ayPkVB+xJhHj0kl2Ggh5CDNs0ZDfoV/C55XkE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.17.0_1542190568548_0.6783156157843235"
      },
      "_hasShrinkwrap": false
    },
    "0.18.0": {
      "name": "@aws-cdk/assert",
      "version": "0.18.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.18.0",
        "pkglint": "^0.18.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.18.0",
        "@aws-cdk/cloudformation-diff": "^0.18.0",
        "@aws-cdk/cx-api": "^0.18.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.18.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-ufj7S5lar3SqIAumtGFH3bN3Im6T4YWNb2ESPh5+AmPlPBd2OuaOuQkMlMqlj4BPqDvV/eyR4dMpEhwinmAK7Q==",
        "shasum": "f1855110e88d99299e3de46ea899a4202afec667",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.18.0.tgz",
        "fileCount": 31,
        "unpackedSize": 104853,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb8r+8CRA9TVsSAnZWagAAJJcP/0189DaAKIjgRmScNzAB\ncp36EXgPBdpjrmBTOMrEZKyCUxSGOu6fwucJ9+XjK1RSzJatu4cMgF5oeCdE\nP4TCYrBLl9LJG4WOceyWrSLZjgK0CcJklDLIMlMFHLopWf2Sjr21dNyKu4yI\nIhCFwe99FSvEca7UW4dVh6036N1cfVCNsjogWyxShJmmonb/D49hUYcBi3EU\nyMpl0UWVzdYfaIBKqkxOZEF0I3TBNBgGLO4fBwlN4Gv/vm0GLhbNEcjHqdZ8\n3WCzPnekjNR6KyhQxIRwR+i7iPgrdNvShjP1TbC0FdufdFuqcjuPiFa9c5Ry\nJe17T4g0mkyRQWYv9k47XhS5GyjdRQc8woaW7NvaShm3zYdDfI0WeQZls7ka\nZ1udXePISWBmgX6Aab79dPXgGRC+Ym7lVM26CIhkDoiJQG5IPgsm3Vdfoark\ns8UaRCidSc5KOksMbiV/FK/sN4BvQztwZFgtYXjDEbuOY4m9dnklL7rI8EPb\n/6HbYaonhrHk7RgDVOfbYijV1eF1L9Ni9N8hu3k85CwECdkooG/P1erMMVhm\nINoZ2ggE4V05QJGSfq8/Wvasq6j0/CDHDH6kYCqBd2D0/H37OjZXsa08fWbf\nfscdDtXY1qr7mBOape+QmGccAQg63z56qFc0fQleATHpjg9t4f5RsIEjMJak\nYwJP\r\n=/8bX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCT1pK72kuscmgObOU/OLR6Dzwn5Z1SUfElk86LxSgacgIhAKGqkK/hHp1/Qu0UECD6yQ9oYsNDjJHmpMUb5oxaUx5X"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.18.0_1542635451770_0.3879055927426489"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1": {
      "name": "@aws-cdk/assert",
      "version": "0.18.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.18.1",
        "pkglint": "^0.18.1"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.18.1",
        "@aws-cdk/cloudformation-diff": "^0.18.1",
        "@aws-cdk/cx-api": "^0.18.1",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.18.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-Xm34I85407JLLZZvG/6CBjAXH0k7CbV+OoLEMR+lRLihiSN0B2bPYJVKP04K1TlB/p2sHCnzhaMbE0JQPIsBDA==",
        "shasum": "aff63b96238134df97ab9225217a6f52ea9f0791",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.18.1.tgz",
        "fileCount": 31,
        "unpackedSize": 104853,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb9ViRCRA9TVsSAnZWagAAR7MQAJ/dixlTtpPrqBykjGdH\n1A9qH2S6P3J6LEG9n1bpWnGgLs4zh7eKRkAca3OXBoarRbSttOI4dDZsvpi0\nNw8p/jxnHqbvjP/F0YcpAh2SgpDwVkn5BDOcAD4NpgMenuLq/xZ2Vdj9AtSz\nEvEsfnQjHTj8VC7nv3huLuZz8xF15IF7U2ZoAGMgF7G2TnDdTvnIf1cYRHWk\n7HwprutezdPOUtrUG8idBj6CUinOh/lMcpmUmVI2AmCBCsNzxqjYSPib8E8l\n2QpZL8kHbyNcYeX2OjElYgAckrw1vk00crb2l83X+iIuoV4bJQFD0gwrwyuf\nti5ZjTRfsl/1xrBMJD+50twcUgFurdqxJ/t7wWefer08qu0jPgpsYMw6hrZ2\nuQaLVAvIWbikuAnkRxpqklPTeJt5N3Js6VvJawSSaLUEd5AqF1ZRYPwru41H\nlXefaZwhuuwmGeuTNdHf1IA4AOCFQtiSipiXRahnTh4Izej/ZdqLnZWF4Jfl\nD316C8afMPWHQDyrrVLzFiiSad29Or/sxm6Y+P1lu3yqNRgtIJq/p8UmwYtz\na4xupV3q2CKjykHlWUZzrHRgBRNav696EiCZe88tXo1UXKqASlTBNgcFcO77\nVe0kr/u+uW7M7mePM48Ove9W0A3IIOFifF8B+U9IyKliNSv3f95YD5h7xVv6\naWzy\r\n=jEPq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD8VWzAAz2c6SvqTyEA4X6ggN13LLybR7WH/p7d/HnE5AIgcdvWSqpfFbDRaDW4VHlM+WK8c0L5S4TbdNDBeq6cz/Y="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.18.1_1542805649002_0.878179810421789"
      },
      "_hasShrinkwrap": false
    },
    "0.19.0": {
      "name": "@aws-cdk/assert",
      "version": "0.19.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.19.0",
        "pkglint": "^0.19.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.19.0",
        "@aws-cdk/cloudformation-diff": "^0.19.0",
        "@aws-cdk/cx-api": "^0.19.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.19.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-Vb7yWnEuNqvmrolP6t01vPUt6y9Wx5+gluT9PWmXNTGif1h9vqoiYfZAypD4yDurSNYD32LtwqGXHotyVB6KfA==",
        "shasum": "aa8204b2f9ab8699f42a25a073d3490b471314cf",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.19.0.tgz",
        "fileCount": 31,
        "unpackedSize": 104853,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBndkCRA9TVsSAnZWagAAd98P/1kgTCdeDRKhYQhgZV0B\nOhC9m/lpeshO2JbHVaRHyOiogcAkit7Hw7LB0XCsYMHVbt4BVBKRsDHLVYYY\nZGByfN/qNwImiCJgArKQANqeTY3aUf9mAQXu8AKZjM6DuD08GkYZzg0Wctb3\n0U6oLgm7wc7FXxFI3dY5RGwl5Noll9Ydd/80o/W4dhW3FAYCZA2NLEMbXury\nvk2MTznH8kgPxOwFuntL7FvTI1xZ+bgrDJP50t57osWY23Psq8C4z/RCTcRp\n3++FBU0J+GiKMerjjvXhY+mcvOy0B8WlzoThTdU77KgCm0+v6UbwhdLDd5Lv\n8jiMdhGszIy1nUDAUdTGni+yGM+jSFNJ+NUD5Cy32iLOt9n5hyRUMXaYNoYL\nOTjjcOhFbVsWeGaacPaZPixO10MDNnTNjeGYdlB0t44IXMHeUvjwAr8Zoi7O\nIubRnTD49Xic2sa5Vu+fE1ji04miXRTGrtAIpy/UmjVduYZcHjhuS32qYaNT\nREsAiMBm8IVEdfx4vqed1zKJlYx2V+bZkq/SSPbU1HLLEOISRRcLDgoROLlY\nwaMuIaelw4v9cVG0A6bgtSRRX5TzYNNi26lapsklX/3MOum8+zDyxlm1vHnJ\nSstcSjMIo3sj8wwOUiU0fgbnVdzt7MQa3xrHsEhAdsqW7eQneigq2MEB4pvf\nEE1A\r\n=lrAQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIASUR/5+RMLq/05JrJwV7kQI66ePqUijYNkhTkd88xnjAiBeRvzEsc0VDGovKLahF/lJWgWwaPxANMURFvqSPXzFUg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.19.0_1543927652000_0.5444205598120815"
      },
      "_hasShrinkwrap": false
    },
    "0.20.0": {
      "name": "@aws-cdk/assert",
      "version": "0.20.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.20.0",
        "pkglint": "^0.20.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.20.0",
        "@aws-cdk/cloudformation-diff": "^0.20.0",
        "@aws-cdk/cx-api": "^0.20.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.20.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-3wrVD6Rusiv/JGHklVTNRHVOVFlERJ5zr7he3B8md4uvWn/YgtTQXdQ+riwvnexg+UGc6A1WBmujH3OEP3zjhA==",
        "shasum": "00a7f03f8348d9a05c8b7f3fb8014765afea6b5e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.20.0.tgz",
        "fileCount": 31,
        "unpackedSize": 121953,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcEjnfCRA9TVsSAnZWagAAG6QQAJPHAj/ao5ZFbaaRU4lF\npzPQ1cXPtnr/dqQTbUQHr4M69DEnPACw2ik/jK1XxFYFh5cCdyMGJKN9R0Os\n8fkXEp4kGJTC0i/t8yn5NH1GB3VFjXTUyKc8GqYcubd2P4e/bM/aRb0iunaf\nFDB2Zr4mqZxfgaQcMRbT9oewRE4H1vGYHgdq3YTIyA+FMT/Q/wdK/wUGdUJS\nlXKFvFy5bxqixaJyD3lR/+q79gBm3eZ5H4M4v4R3I5kWv9SOpU1tfLZ2g7Hx\nWRMUxuyWfcAkbB+B7kDvyEtzoCadtqhGBFVuAA6niG4hQx3F7b0ZVvyjUOzm\n+2Mc/du1boVWGLkUDBLw0PTnjwk3vbScMeUKGz4/nD9K99Gs/zdgXAzU4RI2\nlESC7YqscDU4ir5qy9blPwQ1ogA+lZPVHSlqEquBqF4Goa/3z67St1uJjuuw\nR+JoWg00QGar4uxu2ceJEg4tkbIBWUsyM8Zf4Ec3iTQilKy8o63hP909vM9I\nse6BAYjC+DWp0YLCl8Jd9ndJ5WfW/VAI3cX1d1rp06R323B1Tg+sbopTIwN6\nZ59qvDm+hBfOuBvcmrWLnesFGpnJqXRxO5RmN+kZcMbh6QsO0U/GTu77KbwT\nLL0WV9jMh8LKXHFvSsmVbHyukjU5n+oQaPDxj9ZYM+xCGZvN/YNpBWdReJaA\naVwI\r\n=cT0i\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDY3d5cyaCF3cSsWksN1WNw9F+RTk9GiefyfIsDXUbfmgIgQJu0N/RHCnG4k3bODHxALs1p0IL97+fzUgj0uN5rw5g="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.20.0_1544698334733_0.36429914550775866"
      },
      "_hasShrinkwrap": false
    },
    "0.21.0": {
      "name": "@aws-cdk/assert",
      "version": "0.21.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.21.0",
        "pkglint": "^0.21.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.21.0",
        "@aws-cdk/cloudformation-diff": "^0.21.0",
        "@aws-cdk/cx-api": "^0.21.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.21.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-gks4nbcGvL03Idb2iK1j8uGPsgYUjxzaywPgCXhVXksD2uZRxm5SBH1TjkeTyP3mCnsu8X2+v9BC9ZtYKKemdA==",
        "shasum": "ca99a825858c588e5548972f504697310d034401",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.21.0.tgz",
        "fileCount": 31,
        "unpackedSize": 121997,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcG6CbCRA9TVsSAnZWagAAHGgP/351vFg6MCr+4iqQN7WZ\nBlrewBOHIIG4pP3o00sRUFImcndn8CVmZ6cPExdFV+EFbjlphSsbaq5zTA52\ncV0ZrcSh5EOQ911/JN38aK+QhbK5xSo9nHu1DwEg08Gj1B4uIH33itP1YObl\n0GtS98MbMGw6g6GnWbbg7iMDc1tAxvjez6j9pVDkf4v+ocqlftuIIirUzcx4\nFi10A2n3/XFoESR6Nq5pyVfsszxEWqsIPwjLjbw4RJyCEDqgi60ALpL6l8Yx\n3kF+BJJX7XhbhD3D5uklxrs4jLML6HARAEt6xVMwpO1XMXPNY5rb/1I7wG2e\nbuPD8zKg8Z/XPPPZ0WQJ/rzNVzN5szKngJoL/EZXFO1oy982if9taZDyRy0t\nmyvF2GIzU5ykbmJH9miY6NEi3rWk0+95mv6BECck9nII1NlDeZED2mbET3Qm\nvkD/8r9opC45uzO1PpJyQha/KwymWbFaOwAr8cdsa1pOm8nI96oJFQAxZomA\nta37s2TaWjYgMM2z0i9futYxMx6zKIsRLEETOHICxNH7DT7tplBMuYfXm97b\nGBCa5YzVxOzH0u70KOtyIoazC1hPAmhkTneLqxopEznBvPtJ+dhs7swWgfBU\nxNdHdpkoNr8MiiKQblS9JXxVBB4xmHIQx7dr6N6K0sOzV1PPkYe9LPjICb/E\nJtzD\r\n=ou9I\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDMBH8s24UauXhEojRIx1cbmzd1d4VOSWRwzlGxBz671wIhAIgKxgyn14M1iyGyZlCs67gHbf/hoT4jOBk8Y6uRzdFw"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.21.0_1545314458927_0.23102106388003008"
      },
      "_hasShrinkwrap": false
    },
    "0.22.0": {
      "name": "@aws-cdk/assert",
      "version": "0.22.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.22.0",
        "pkglint": "^0.22.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.22.0",
        "@aws-cdk/cloudformation-diff": "^0.22.0",
        "@aws-cdk/cx-api": "^0.22.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.22.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-EPrcb3RHFPTSUkPhDbg4DCOjg/cyAx+bSHV0k1vwZyRZgP2szNpK1/a9EGo+rZ1fwFhZPjXHu3V6iDLiochNwQ==",
        "shasum": "8a3b20552b1241d5a0dfb9d347242623bb8aedb3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.22.0.tgz",
        "fileCount": 31,
        "unpackedSize": 122589,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcOG7BCRA9TVsSAnZWagAAR5kP/RlQjS7Akv3ziDdDTbtn\n6WDwnnNwHP9wKqVJJVveuMCxblc+BzbVCKLh4HI8XXzQQL/xflDHI+A1U9Be\nuadywud1UGHT7JEaIAz6/Y2JuaYec99T12dNo4ky5fJa6Hou7UJrE/188SJU\ntzYkltueW0YXUkkk0LVPeSNnaaq03AU54vkkryECMnKvtLsjO35rCH1iIvKv\n4RNcMgcBke2xGQjj1VTKBZ7Rf40p2GF6JBCCftPdNewx64SlcBn8gzoULNZE\n6qM8FzOxB4OnedA1WVDnCeeyvNhOWhO+NnSA/0+WLb71Za0HayAu7bQ4x6e5\nBNNi9tK+wMbSsHL85mcJ3rcAZ/qKuGntxFRiT5R9ioIlc+3G5gxnzHjJyPA+\nNRoorv7QmmEeGHeZmuP5cosRko3rGQJSSut5etzT8EGyJrJJMo4RQK85hBmF\nq35KNxWxdh9vKyypT3gFnWxAax435LhiUscwbc0r7SJqRNG4T3Wzjd/7D/hZ\nABeg21dlUHH3zvKq+hQcAJYfQQF4hVJ8ZhCB5SZ5kb+43UhcErl2oUXOtcEW\nzKpxJtLOgbCsepSQDV9smYPHEAsCbII/LFI1YaUSnlgCgdhL5n5uYee9sK5f\noTzMEDf8VRoRHO9DDlosuzmRZh/wOsZS3zGoSRkqv0xnRIo2xERN8c44TH19\nsBvn\r\n=0tfV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCWCRGe7WGsX4nQSWTWV3OVUzpSJskMg1/XWBtI7mxQfgIgQQFxbvjJbX6L8W/pgCA3p0hmXjJU3s8UCuGMNvy36RY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.22.0_1547202241166_0.3582107135726065"
      },
      "_hasShrinkwrap": false
    },
    "0.23.0": {
      "name": "@aws-cdk/assert",
      "version": "0.23.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.23.0",
        "pkglint": "^0.23.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.23.0",
        "@aws-cdk/cloudformation-diff": "^0.23.0",
        "@aws-cdk/cx-api": "^0.23.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.23.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-S7nB+r9tGBAMcMkZZlXXI2stTudfHl994y76RyF6iw2cJDgZtSLiptOBZatngtq57ITPdoTvEX3suBY02CcYEA==",
        "shasum": "21fe7e1cb35afa636632c738b1cbcbf364094020",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.23.0.tgz",
        "fileCount": 31,
        "unpackedSize": 125804,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWFh1CRA9TVsSAnZWagAAWaUP/09oqMUTlD4iTLS7f5sV\n37JAF4/T8P5jDyrSo/u0lc7BAlJKMxj4MJ9T3C/yLkoJODwT0WZZqW+F2j7P\nyyeSTpRcGKDsrde8EzvWHRzHmqShudRCFbhYNy0jMPkD1MbEXUglXVBDyPpk\nsTX+3hHTaGIMUbPgzrtBsEKW1vb7/I0EHb8i3rOgAWn0TXhSArIeowr0OTCJ\n52bcaUutf6HqWXqBVJjcrsi4gWKjoSm4wwNNXoF3i7//Jz9FNn2wJqb9iiwy\n295ZMviVy64wZ7F8PeT9lNaZ50uyWtS0pmU1LF507m9znwtgkXoyfvzVKU3J\nyVSbU0RlFa8eyU4D3WHcBVA7qudwXft1reYGsxX47wxO35wMwDMP45aTOJun\nNpm4R+9SF5XQbVPupF0Etja+nri8jAqMxLJXcEzXva62vsPa4KbB4WKt7qGQ\nZZbz45pEkKgakDaFvIrA3RCQqA6TuiUdWWp+tZxHNHndsS83esrKjjQb9zzB\nOMJdwuMBKu0Fvg+DcncD6/ZDa51iuu9it/ucrCkl66U0HDHZeo5vwoim734v\n0XHLDoWYB6UDUTkBbAR1PaDfNe2zp/vs8AaBQlLUcd2krPVc2vvL8zpy98VF\nZYje9ovio3W2x2WOK0jIlglvMnars7dXhrBB+4FXIhaWjQDKvXvebVY2wMBy\nnt7H\r\n=vyes\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICAj5jFvc2NSRA+bMNWNNR2dRaLP6uuBSpbWSgW+K9gWAiEA3OB4+4L5KTVhPLQQNpw4qyGMF+tIDG+QqcthMx5gQQE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.23.0_1549293684737_0.23411397049867233"
      },
      "_hasShrinkwrap": false
    },
    "0.24.0": {
      "name": "@aws-cdk/assert",
      "version": "0.24.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.24.0",
        "pkglint": "^0.24.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.24.0",
        "@aws-cdk/cloudformation-diff": "^0.24.0",
        "@aws-cdk/cx-api": "^0.24.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.24.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-f5yx+Rt0TRcQK79VvvCc5i5M4hM8U7AtGhK99svpSGf1lHZFlS3ZPHqs7RYZQE2pY/y3gJL/I3gYwRXOyJVaCA==",
        "shasum": "fafcd12eb0a486e7aca8985f91e727a97b9ef0bc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.24.0.tgz",
        "fileCount": 31,
        "unpackedSize": 125826,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXBnzCRA9TVsSAnZWagAAtYcP+wb2oNNCvLkrElAfGqdy\nyln+HJCSyf2EcMJwNCh8wIg/uLJsjM1+MrQB8OGQrzSdshHFIC9ST6wdSUc/\nM2KjwRDGKtfJ72d8nVSmk9ZFu3S7ZAYZ5KLK5hMQ8mu+FT9WzkToUNmPe9VL\nY7NK2tD0e4ghVmKYFFW8621OmVRBqJobabFPIIQiU/V9vrfvxcKmE+JNYVUY\no9B2qRu9eBghnSPj9SFV0HqSbb0WeorZR97/SkfO8sIYOLX5JbP8ebx2xsIX\nk8TkjtNufmxh0pyEA9zKCaGb/ouXiGDAvt5Bo+Ue1c2Aio6G+USL23LCXDS7\nqalud/3RmDzl1GCX5v/4faPFGuXcRF1ewswoQmetyK8NnW6xrfhCVM8Rm0hS\n8VzgwCtWxQM8uFzQFSwJk+msF/wmQN3AD4mD1yrYwPhKkW9/QEVY7jJiFr28\nmbx24U0jLt2lUg9U0eaMNehWeBnScE5TY29/1qZ6i4hHlabGGzDZvgUBaHMn\nEv/MwtomO3yoJ8Kt+b43mXgt0kghSpx1wczex65pP+2HrXBxCVtTRaV0cpng\nkNmosEHvXPPc30LyaA6cPWxH4jRHUhgybW9ZFLaEknYm8tw0fUrbLZhNksZJ\nXCRVOrEhcZAr5M61H7G1mq523JoihXYJF4p7KNmIkWZFPUnBkQdHMtTyBFwc\nC5hr\r\n=8G8S\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD0dLfCKcYdpK/4+r4AFyr9eWIV5uuvRoD3GAmv6LSMtAIgZCo44Wz/7PZTLMSGjLWQ828JrWuebJkbEpgr9ANZh20="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.24.0_1549539826421_0.7216862913518136"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1": {
      "name": "@aws-cdk/assert",
      "version": "0.24.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.24.1",
        "pkglint": "^0.24.1"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.24.1",
        "@aws-cdk/cloudformation-diff": "^0.24.1",
        "@aws-cdk/cx-api": "^0.24.1",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.24.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "rix0rrr",
        "email": "rix0rrr@gmail.com"
      },
      "dist": {
        "integrity": "sha512-/G8d/98nDZ1pCIKEZC57F+735FzpQyUXTdtyDWz6LZKgmOtJBTfv1gCavx6QSqxMUhem4EUi2y9QHjED9Kr2kg==",
        "shasum": "8e4120a167785bf93f97faa415926a65b70ba417",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.24.1.tgz",
        "fileCount": 31,
        "unpackedSize": 125826,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXGo+CRA9TVsSAnZWagAAvKsP+wTQayxJFaTzuT4gF6y9\nDprz5xAMObyvxniipMIrljTTsiq95uwmWYfOmtkvVpn2RcMmq2r+vWfw5qo+\nEXD3nSrn1+uI8Qd5e7Y5FdGIKxb6wuGK0hm/qLa+uPfpyaknh3L9nS6UqVDl\nzySiMIU39qWpGzXOhir/5ZV2hMbSeYPVsJVtes2VqGYB+tYObSQbWKFq3yGr\nBwBN16OFgvyvrjLKrtHGfY/rudttvKwEtvQAJgdjQhDJHDdiUb5iMWe53U1V\nyFevHixUUKPf9OvJcb9bB/TBkXYL4BPY+TLPIGnpYYXgPZbCPZlacf6sgxwU\n7DIa5bRFdOLyreYgCjwh5FTEOC+XcpEvLIGyYsmPwW71ZXqmus4uRRS9PZrq\nEH60ri+E7m2dO4RTIiybSoPdn6ENaUs3wmzw7duCWg7uSirJpdOzGM8xiHf+\ngyjrIUTISdQV/Eaze/zLssHPOhGm5wXZehydQfLcjrGaKoD9Rr1D089IbqXT\nHxsbEuyAWLDJNcTeiPp56YZe4wzDleZBVWPlLV8FQXrWwImpqYWCj2r0Drxl\nIOpZRE/CPehrm2Tr77P+ube9zwvXCHkOpX1debGseYSmUEM34ZwSABLEjN7l\nd6rSNlybasRt9AsRqyvbCYcn9+LT0GR040adEWZJJS7gocAbJVW1kG50QtCH\neIFz\r\n=p6Cp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDHQJxcig5wHDihBezuweU8SyO41au5ObnecG5v6u/13AIhAMq4fPiFVRBR/JeF4tPegaA/cjINshBVsxdQh+Q/acTB"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.24.1_1549560381787_0.6522315485475998"
      },
      "_hasShrinkwrap": false
    },
    "0.25.0": {
      "name": "@aws-cdk/assert",
      "version": "0.25.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.25.0",
        "pkglint": "^0.25.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.25.0",
        "@aws-cdk/cloudformation-diff": "^0.25.0",
        "@aws-cdk/cx-api": "^0.25.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.25.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-SePzGvJ3rPXtJkltABp6ASody1kH1QnJpKZKE57+zZhxgOx/FKnDhJYiTHTqd/ifdyJNJeOpRzIEblFK9Fbiuw==",
        "shasum": "621f694e405b9a8467114ce65faf1d02b9f64887",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.25.0.tgz",
        "fileCount": 31,
        "unpackedSize": 125826,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcd88/CRA9TVsSAnZWagAARdQP/RDC9wfa4I8IExU+SzRI\n/2CF2r5ZX+F8uIzi9oAHWhQI/8/vchXE2r5Te/Afq9D3gSQQJLCpWlG2+ZgZ\n+AQko+cfpWjBagrp+ltFbAVUQAnwBj/zqY/ttNA1S7Tlw39usN7ol6r6Tu0G\n8FnXh8qU2HUYlk+8RHifXo0BAB50+0nGViScyPc5AkqVD7oehVGo245WZkLg\n00cD+P4Xycyvza6L8IZQzcFqS28t+vadwdx6O+fULhVoBj4tHCbw1EiiG09C\ny4k/Az/l1mrwFoB39rjHJRSTv6ZclwXuYUjhQkhlydOQgvUU+EggSnE23RUt\njfOqOoH8DvGHGqrAK2cYyD9dNqlSi6c+BNwKrfa2vE0qrx2BvndyfCmUe0JI\nRkwB03yLWhZsd0rhBicrDvFQqtr6HJ45o22wEczqbmn42ToYJg9uWaGRNocB\nrLiIN2nUuWrPn5XsUW7n0qYNYD2kQAYZlhybF4VG8hGna34cxc+rMo8mO5FG\ng7rewLzm4KqJtQw7/FEzCe/goZoUhS9GzNREclyUJU7hzUG4NsDGZrZVNECq\n6UVZ8s8Rt5grozCLczq6ol+9Kch2tWPERa1TvcNvzbcuDwlDG3yHn/M5nzup\nVbzTPsnbpNi0d59LLXAEOhzh/lDeiic23fjCv5stMAS2wuZ2UHhSEK1STT8A\ngrZj\r\n=0qh1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD+cSZ7d7w5OC4T+pLRPpjfk52wjbe8jRqmRQXn9Fe6zQIgX0htusenEOLI1/OpNRPvqwkE7JyRKjseR5EDAUXXpUo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.25.0_1551355711350_0.7086997218799704"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1": {
      "name": "@aws-cdk/assert",
      "version": "0.25.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.25.1",
        "pkglint": "^0.25.1"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.25.1",
        "@aws-cdk/cloudformation-diff": "^0.25.1",
        "@aws-cdk/cx-api": "^0.25.1",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.25.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-5b4+xyraEHWGXh4pRZW4N+PW2Wmera+2VOezw8KzH3IlaarPAU6kUKg7x29AH6TqETMw2ojOyzZsUt0o6+LBuQ==",
        "shasum": "0f2c4e9d0709baeafc08d5fae7c75e9992e867b7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.25.1.tgz",
        "fileCount": 31,
        "unpackedSize": 125826,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcfcXqCRA9TVsSAnZWagAAvtsQAJ6BAa8zPhyzBz/AYtyT\n6XDrN47EzgJvX0vigd2Au9Ku7PSul8GBi/CVzbSiLr70+gKh1Gb8g07H0BVD\nJzkLUVX8VqnKjVwEgfWeKMLAgUz5CpgObrEx1VYHeZYJwxszG5k/Gj4DJM/O\n/brsmB1hlX89CQwFdXCzMK/pPrHVWtAimIvn5irl0C3A0ctRwt9hh1+8w8kc\nN2UYdEPUbCr2tY3FO8OA24P079I6qpLLVgfrHFbf+MaxWY9je+0GtPlTVaOp\n/cFC40WKeHxoLuqGHJCFbBEymUMgB5a1WoroIbuLTE1sPz0n2OK3I3FZ/Eu2\nyOYN0Y+rvx/Fmqt+HV54GyedZWG+4raYDqZAD5qVPSabrR/m22F41RCOeuI+\nTFzCiVguBldcjsrUUXtnsSyWCZO/oNpK4ZDM2kfFpZNjT3WyF0Be0XIhD+BC\nJlJbtCX9wAr6rkEsUdlxujzyqjLiSKQVmhRGh1JK9k77ZrixWzvbf092eZOr\nhjRYDeKRaYA2Z91pVpWh5pt1x/7/x+CiwJfu9u/m8kcnEFLkbKHZocyaQLcB\nPY2DzMkOYwg/Bjd7Onvs6WjnUvpBZ47JBmbcKdoEE58lBi3QoNekqMrX1Y3f\npu1A9B89NIo4UvaQxGhIUvdoB8gL+wspnIwE42WmTAYxNMgDbFeaDmEgn9a8\nbX77\r\n=RNtS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEs/nje1mot2FFHJ43q4BB+4TWZbkv/ZeB27mz3TV0adAiEAwMeYxhdS/VfbHhGR5eJtS5b/bHshJ6SxbvYShA0fyfQ="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.25.1_1551746537965_0.511232607275008"
      },
      "_hasShrinkwrap": false
    },
    "0.25.2": {
      "name": "@aws-cdk/assert",
      "version": "0.25.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.25.2",
        "pkglint": "^0.25.2"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.25.2",
        "@aws-cdk/cloudformation-diff": "^0.25.2",
        "@aws-cdk/cx-api": "^0.25.2",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.25.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-cO+pmPF45RLVp1KU4Y0AahBXdKBrGkhVXlNgluB1Y0qwie2RT3D6hk/dkIgM6oFvzWO2xIQhahrthiJJ5/IwIg==",
        "shasum": "f7f57e3eeac1dc56af2ee4a8c8aa8e58fbda7574",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.25.2.tgz",
        "fileCount": 31,
        "unpackedSize": 125820,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcgaEVCRA9TVsSAnZWagAAfgEP/3eQjs26k2yi7O+5XLvc\nkYOFEE+gfaBOEloZTteNxlP2SymrGE9FdlsoNhRyYE1AgDCir95CGpGQU8iS\nwQ/JdhJpSvsr+LotgR2fPE9hj0xVesj7N1Qy/Tgkjwd5eVb/uCY9N9sbOkS9\ndb0U4ejM8EP3uvitHZRM3fm8XLjT8yG3aKlDBsO2R1FHpwgcxbAsuTirGu5P\ng4nXZdfW1Vx5qRpMTJot+AIOyOoqzQQg+NFyO9FINIxleRgJxGvRUHFezzPN\nnz27YCmWxqzBoHdw1RObTtOjlXJCBoTDqwEW8ctmkzPneQQY5M+Ehe4rRRO2\neYfSHAR/4jvsYqzNrtN5TkQmT/OdCCL0zezVUtffbKcC2+P6eTV9CmPQT6mG\n0UrfnM8qWTVzhcwKBF8UDT0xrJcjtHrX5CWmclcrCuAN66cw5bTe+YfvQX8W\nrdbwGnO1S6leY0E7Fhj7lmHXELaNHWWDrrCam94L/Bjsz9yTKGCui7h6uRGJ\niNjKAOzO9Hjzrz5Bsqf71USOD4qjzqDykYiBgudocyIyXPh6f+z868U10r0i\n/w72WwiIKFKIUCAnzCsFhUm/CsXjmVoI4CNiwx3zo9Hzf1Bp4h63MsZG23lK\n+pRuClk6E++Ke1dVKcaAMAofD1HXgTPWiGdVzoRqaw42ittL6MS0yuZ5mdWg\n1ds+\r\n=Palr\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCMcX31+SsEfOS0I3DdVUxECtBtmPnsN9AolaSD9ky18AIhAIwcAvKqPqGPGxxZ2cSv+4vZD8bc1Xp2r5xDmJ0gXuyK"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.25.2_1551999251934_0.3576541298800051"
      },
      "_hasShrinkwrap": false
    },
    "0.25.3": {
      "name": "@aws-cdk/assert",
      "version": "0.25.3",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.25.3",
        "pkglint": "^0.25.3"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.25.3",
        "@aws-cdk/cloudformation-diff": "^0.25.3",
        "@aws-cdk/cx-api": "^0.25.3",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.25.3",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-t6iEkdOlF+9YNEy8AowjZ+tdLxtW51k9e6QBuKsZUqSFgsP7Exnzp2sL2YkMRkcTQjCBPvCjxm1v7msGsmJA0A==",
        "shasum": "207439a6549fc65eb40917e0d020989a7c7a9780",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.25.3.tgz",
        "fileCount": 31,
        "unpackedSize": 125820,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJch8vaCRA9TVsSAnZWagAAtYIP/21ZgFz2S3nSvfmRsGiw\n/I/MzwHJzfCjIrP52McQSCbKbHh4LHJFH++asHmhVORbZfeaABRA0nEiMipG\nHcjQ+4JJZUHOyldBEtmnPpiyJKZQOJqgnlulnOov/eSZzOeZb0HSk6RCO6io\nQIZaF9SiPucJDlpyX/hchqXbo0UaB3ULXQXBG9Lw+koDphVHG+Qf4RMtfTSW\nIDTWREMQdFw6Ztxp40pTlCNDAg1f3DAi7MlXZPPX1yTskm0sggXGwHDq/jDp\nQsuls8KYAEgQfAFKlUAQibcyQJ/eYUoEaV06JrO3oY5Hvk/gTCPctBvD4RI5\nZWkC1NmQFynIkqYLq38wklPAtl0jBWUxTIEBxdmKIeeY4NKwmXu4/l9wbYx/\ngOeA9ZN5aqjGE2hUYciDL3q944OgwLe5uF4A4VLk43YxqnwRaO3EJK4RYbvd\n/ExgQVMZjW6c4ZIq9ffhmHUqs1igQlaQi3gciwnrp53K/q8Z68L7aO6LbNju\nwpHfz5pMDn6mqs39BtzWs4+1F5QVVgDLRHrGaM2xe32HU/OtMOrQ3DrE+vA+\nc1+55p73ZbAGj7H3JRx4Znz4VqMOLKcqeguDlCOZG8uRafFeSKjyR30vSMPG\nyeJGlTNgFZOakbTyhYEACElEDv9IwRcKGLbvRy/Y4YUJwLl6MTaFEInxqdL0\nRawJ\r\n=dS8F\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCsy2FNBwpVeQRmmaufkd/nksmQ9MkvGC8B7rLSLFBgLwIhAKu2gZDumP9i2qQPFQ6IYp4i8owSJPWu3hfSbcxPynJN"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.25.3_1552403417520_0.8968132559224917"
      },
      "_hasShrinkwrap": false
    },
    "0.26.0": {
      "name": "@aws-cdk/assert",
      "version": "0.26.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.26.0",
        "pkglint": "^0.26.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.26.0",
        "@aws-cdk/cloudformation-diff": "^0.26.0",
        "@aws-cdk/cx-api": "^0.26.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.26.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-sEBWNmsob81MBrAihKjcjK8ezixtXwJpcVmVXjLDZpAbr/Gf97j7mO7qtzl9UuRX1gG7NHvRaq/46dw3zkULEw==",
        "shasum": "381301a05fb8b456049a468af5b3c689d009af0a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.26.0.tgz",
        "fileCount": 31,
        "unpackedSize": 126908,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJckkLxCRA9TVsSAnZWagAAXSwQAJ7uLqwVfrz09FcUHbB1\nN643KKo1KlcEOaE+U3vrftXEenNut4w+1SrAr2um9FagdcEE+vONGPWYb6xQ\nTBPG6eXJb2mcpgoS3nYgJoQB2iRnVJIG79hHqRu06106MCd7UkJtEvBwm1U/\noVxVIHrQxQW9S0xXOEnu0Nz3Vns5R1Hn/+zFIC90EXMzlhzLtHecfA+TYugT\n7Nboll7KzAHC2czILLc/6t8mA7xmO2Tb9PQYoPPNijJN5NV5wc6QrOb+PWzD\nYomUt+Qz7gaKcJzOaecXC2g/8u0x2uWAGmN4SYKDt3WupRurJEih2NPkl3TF\ngEvcFTdldC5s8LddEV8UVwcAlN0G0N7ugZPXHMPqt5iLrUNBPAH5nEk5IHea\nAeaFSp0+ls29P048MlK6HM/dm15vsGCyXwRhrdeAYe5PaKZR3i2Pdn5C1EgP\nMBg0XnZalRSaIn7u6i39cxLPZwPjlZWWgAZzRDzgER8cBO2X8UlZYzY/XOmp\nS0acnSBTTJzVRpu9jCJ4h4Mt4U29Br/54uqN1fDi9Xvx+MXxuVRlOoZIuSRx\nmyrA5/xn6KmJRWp+g6z2hda02ZBFjxeB+DaylFUidaZ57Q4S7KrPGyYingP7\nfMA7EOP/4aNyq7DFT7hBsZtaJO6/T4FT5I5HJQsz5LukE4uU+nHJwlxxIY+e\nJR1f\r\n=rpeu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDbx55+g7EdGwe4FAShhBTe47A5vRjF9aPt61dEk31YWAIgXT54gykPQJHaaDqOadHrOrFiNIV1UB8acY1daI1G+uI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.26.0_1553089264706_0.40297190610157374"
      },
      "_hasShrinkwrap": false
    },
    "0.27.0": {
      "name": "@aws-cdk/assert",
      "version": "0.27.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.27.0",
        "pkglint": "^0.27.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.27.0",
        "@aws-cdk/cloudformation-diff": "^0.27.0",
        "@aws-cdk/cx-api": "^0.27.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.27.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-7c5sagwZy2GfG585rayL5le1KUS9Q/M+jaG1LRrCH0N4iLWKkNuLMJYs3OVE/LQKpWToij2z2qFhePCsL6LRwg==",
        "shasum": "f5b929435f1594103e0d5d03765cc957b639178e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.27.0.tgz",
        "fileCount": 33,
        "unpackedSize": 128928,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcnUnJCRA9TVsSAnZWagAAok8QAIOjO7ArWnIX9Z5BMxqe\nBVcfOdsgfwy9Km7HpR2Kk8HQiVYiB8s3COCcQNeoh0nbAL/sWr0zNwuTLuvz\n8t/X2J4L9RV023bd3VKEswds7wJbg2vUDmeaKmJ6NMyvsTg8m4vWXqxrcw8O\nDXg2PhRr/O3QmQI05YeehxjHtt7VoxSRLX+nw3qPht+zxkoFOL8SXimlUu3L\nTL0lN9ilyMxO7zSlYMJAdpSU4DP8aiQ2xh0UAaj+3Tx/2MRQoWEz+coY8vee\nyJiaY7qeCdUCY5VvpnLRATWzMyQ/yWX22znLBrwTZHT9l+S1oJy4xMxSQF3D\n9wYsfD3b+jDgcgekDKPJItY+05hW6TTzDTT5aqsYoMqgPgdpxPMV/5R4GwZn\nl/q4vd89W9dJuAy3e9gA2p1uGBX01CtKKRBcGIUfSspxULuWw3GZcxzGUfgF\nEyJizMq4N+jDYUxTXtBYRblEEL8Hq3MBOljRAvKEdJ4+qvHIoxTZUXP73es4\nNDy4/fRg6/iNWVRDGfJWbfCPOPBeqytl54+86w54pk16xqCGLk9mk/OycPos\ni7911Vg7HS4hcmODL424ll9vxFOlAl1RVYVo3ku68FMIMC8jNgtavcMfMK7c\nyRlQfP/i8nzGeN5xxDO6tt/CY2lUdANRQBaQoB6/lDyZ75FPSq4M06bUnf7c\nxPmG\r\n=tzgn\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD+Yx5vJbIeIPE3pGX0omGOqPVccm6n7z+HRmJQP54qRQIgJgeZBnRB9v3x+pwR6zq4oSiPtCJxUZPD/7M8hG8G13o="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.27.0_1553811912657_0.7385194948132556"
      },
      "_hasShrinkwrap": false
    },
    "0.28.0": {
      "name": "@aws-cdk/assert",
      "version": "0.28.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.28.0",
        "pkglint": "^0.28.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.28.0",
        "@aws-cdk/cloudformation-diff": "^0.28.0",
        "@aws-cdk/cx-api": "^0.28.0",
        "source-map-support": "^0.5.6"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.28.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-nXN0nmpByK0aW6DzHwO8ocZDFQWA2+ZqJ5ZSVAaGNC2/cNymuNXqKzC3TcMdeMuAwO+XPmo6LV7a/VqHLwvAfg==",
        "shasum": "de01228d1906850d190aa5a8972565d56fbf17ef",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.28.0.tgz",
        "fileCount": 33,
        "unpackedSize": 128928,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcpip0CRA9TVsSAnZWagAARaAQAKAqaJ/bZkFBhtTeowXZ\nUYIaElF5wuSJiPd2L93OLKEGhXPvJUSx9nRqB7l30ykuitkhZ9RU3n8rDJa9\nqQW0a+Tei63MhkNZlzK1acn8Vz+O7U5+VBsFyN0wvvDd4vh8zjUJli0nd8Aa\nACp5uizPxxPjoA7zh6Ir9KIMPkovYvY+nmN2xnbWO3H9WqjdhQMiEGRI3Xs4\nymB+lBSt6nR5hk2k4gtCuxJYqifUGxVNaU2Kw+8/CbHAO4r48ykHVA2RUCCs\nu4WvWspdlMSEgBiJzhSLOZ55c74kv3NzCFjV8KWvBE7o25bpHBDhRazBNCMe\nb+QgmGV/0e8bsjvdLnz9fbcqprTOLo7QqvLUygRI2DVHexijb1OdXu2l4OAV\nMEc66TQONiQIMHSZ/dN9r6bLHb5c+6YY4p9i3l/Yy8gFRcPMGt4/P8OkG7w4\nAIpStwG0rhbcBPjARKKefGwmNS4h5C5//3OJkRMeSi3I2p4gbO2/ZNEGpRmi\nl6XO9yWeU/WzeX/KB8fJA6EaZdQtkoADOo1AJ/+vgdRp4m1TF06gyer4MxZ4\ngSnNjr+e8gIjTKnxYkazDcxT1Y7fyoaOXhvbqiF/FJsX/mukOR/oe/uBmZU3\nFsjiZ7g+CbSafETn3hOLFv3DfAlZ1H13hNSGdEQI0F98wX2Kx/71jQKTVBvQ\nfoFG\r\n=Lso1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHxBPt6ajbGJrHvbGIewlu2E3+5xAdY2nIbkNsOBd3VqAiEAhGNrn+DOtRDwmQrC7xgCFuWbMb8qaHPjNHzobtYKmsU="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.28.0_1554393716160_0.9109548473118037"
      },
      "_hasShrinkwrap": false
    },
    "0.29.0": {
      "name": "@aws-cdk/assert",
      "version": "0.29.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.29.0",
        "pkglint": "^0.29.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.29.0",
        "@aws-cdk/cloudformation-diff": "^0.29.0",
        "@aws-cdk/cx-api": "^0.29.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.29.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-SnyMlxX17fYBVnGrXPySwD21MHpovNHiAU6L90M4ozY4+LIAWLAyC96oTCqfg7Epq5oxVCipEQ5Azdy6q5Hgrw==",
        "shasum": "0995c777cf4e9c96366c21992113f73b248bc6f9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.29.0.tgz",
        "fileCount": 32,
        "unpackedSize": 128085,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcwNkzCRA9TVsSAnZWagAAdzgP/ReRpIAcaeObCyNFwGsj\nRoplO3ulaQQlGiuUfKKcNSoerIPkwtOw4+ca3GHsDOYG+nkHZEelUK9h7lHX\nzQm1Pwr0OOQTgNSFJc1NlIG/iN7AhtBbTFeyUP193ZAiXbVb9R+Kg4UnGv6A\nSdiUTKoGH6TXTujf/PB3lSnllBftlYgR43xBvjhuxFItTiCSC3UQj0BfCitM\nRq26bnzZuNw29bthz2Du822/yzFwoctMGsFYSljcMvblJe0Zm8TJNwiw7U3S\nQFbVAywd43GUZVpBVyngr8/CALi6ydrAPhAc+e3bECsrSiMJuSqEeqpB1od6\nYpc4OwMLyxRLXeTCcJvW3QyCr26x9KQ1hXdntZsNbnDSRZbZEoVqGnwUbzd7\nVnHPnjiROrCrop459y4IBN6w2c0+0bCFbhXN+5K76USWiR0BAk4Z999ABELI\nTyTSxDYxqFt5Y4R5OkG1e8LT6jsA1zvEjG3N5iMj0AH4pvwTCoAq1yQj1kKr\n1ueWAu5FYWoTqDOC8637Gq4L9JBphUGBnrTpcgtOILXVSsrL14OAPjTIwqt1\n2M3kGQtM/2eIfkBl2yUzFtRUyjimkj81ELXBHB3AGjRdp3euVehoQ3z9taao\nnbeEque949WM7v9ASzt19V1ZKfyvm/AQ5Naf6rHihSzfa6CIkvbeYrl2BnrB\n3rdJ\r\n=6nka\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIALs8O2V+fWzioRDI/Ug8Ty8h5Yc4WAPWZk4kvTbbKF+AiEAp0w7qmIMgC6dTI4otAebZa58yw3c38MCCbk2t9NYAaE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.29.0_1556142387350_0.7700661075349249"
      },
      "_hasShrinkwrap": false
    },
    "0.30.0": {
      "name": "@aws-cdk/assert",
      "version": "0.30.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.30.0",
        "pkglint": "^0.30.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.30.0",
        "@aws-cdk/cloudformation-diff": "^0.30.0",
        "@aws-cdk/cx-api": "^0.30.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.30.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-O5HzsnlnyHqZ9ys7A360vJ2RvLLF7lB9P7WAsKU84/Jaa0fLthtLNSzu7igAFQPgF1OzhQ4unUmbk2JqB7kAQQ==",
        "shasum": "baa15262e70a02df60e67388078b6091a81cbb12",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.30.0.tgz",
        "fileCount": 33,
        "unpackedSize": 128974,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcyszBCRA9TVsSAnZWagAAFXEP/2c4cUccxs5sRWdPuFgz\nx7Z1PuQQkPOQTknbR/EZCGCxtefj84MsqbKeldXWwslHC2LALKLSZFWDSp1W\nUnwEOX0dLO7ZMMZmujNbFKYmNIV2TKqyYFHZznBwMFIiaTZN2+Ns07xEAOCx\nvzEQkGjCRyWt1OJkXbxLhprLmt1JqdDr8t0xJlhSioavVstkveCaqYSU2Ndl\nqe9ch30Oli8S/LyTaaf6g1iw2cmtwZbYiZ8lwmWcWy0d4z3BA5e5BuKY+Psx\nwunIanGIABWx3Mmdg3cEe2fu3MOH6wuXyoPfEucHWFBH9MWx7lxOdHSrmjN0\n64zQ+3p+23AUsI61nRnIRR/WgeQpG0khpYsqBC+inZTHaeJN7Y8PHrxMmYpT\nFcPVbqHVWfUNv6tO9quR6K+nUD00jib3wfD971Eyh6oB9ks88sFlhr1aWzXG\nyq7Hj5ScMGsMptctAob0eaGf1teg9xx5bKnAtN7rl8R9fRX8xPbhdFjkaMQ6\ncCTVN/btHoKZRGwRl7CZQ85y0e5hIYY8ti/1ALCWWt96nxi+bXehQFCzM6dg\nHx7QIHzwn2/ToK4t71ljDPKUobAm3YiiSUqiBNlZoPCk8kEOtxQBwkeEVepb\nFXKZE4pgUdSWDL208afyfPgMut0DD07XUhvuqtwnvT9TvFHX+gvnHpANfG7I\n+Pqi\r\n=jDyM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC6haSDdxwm0TkNbfyNagsdA7b1rWZF0AeyS9MoIye2WwIgG+F2RWSeAhbWooOFFY/79X0ncZOZwTKcYJof2qGzCjA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.30.0_1556794561002_0.1102286482649395"
      },
      "_hasShrinkwrap": false
    },
    "0.31.0": {
      "name": "@aws-cdk/assert",
      "version": "0.31.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "cdk-build-tools": "^0.31.0",
        "pkglint": "^0.31.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.31.0",
        "@aws-cdk/cloudformation-diff": "^0.31.0",
        "@aws-cdk/cx-api": "^0.31.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.31.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-yU3T+LqnGDstQlnVx3zgEM3bX5YtkKIJsXw/H0sKzYJiQI5UI64RGFg+ur6EXjD6cwn8FkvEr3FHqkDcFmnpxA==",
        "shasum": "10ddfcfddd50e572439a3bd5d1f620518a805d8b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.31.0.tgz",
        "fileCount": 33,
        "unpackedSize": 128974,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc0T5eCRA9TVsSAnZWagAAuxUQAJr8kMFLaM5zhWlQOxMg\nZgVeAnHj7ol4h2VfkfLDBYqIfXJDU15yfFWNmbRWMLvF90q7Du3QJIQ1owQ8\n+SWb2JSManUNPZYT/u2OryaT9lYJeSU03HdVRx6eo5Jg5D/FPBM6ZKB7+I0Y\nV0sXJtLlp8BcnTzvWSx4z5XcxhX2ArPoSrwL0ROmddRIw0Alwd/JdHqOKbBo\nMjI+DWQD9KnQ2kjGkoABZbgVm/uv/yUOpzJaRodxTo11qINrI3dwpwcZYWmZ\nhHBeI9ZubfgYP/gMotHk7VKIv9/8zLYF8S/Baex3my5xdR6Wk4F/RS1/L5hA\nzjIGKz1l0KH9aH4bkFNJhpXpYPISvoSI0cxImHCafemXpXUo0IhJkWKU8FM4\ns6UcowHuOJ3tkhs6D0pWj6fs+ZTpULuhQnopProB45SDDZD5epR0RfQPRkJY\nfr/X7EF4fXGk1uG7fx4QNDMrMygn8AwOm5zmYUIeXUwWfPjhwyC8wmex9gLb\nshDy1nneBFM0gkLHpJ+yfZJ3b4lSQh2+NMe5uQcu9ecXFlu1vh9KCoh0NFEg\nKxlFQuy57BP2A4epuIeHrXTXCXnNHQfiZkTpKv+zArPJcJQ/iHffe+haWeLf\n7kaFkkzfLRtCoyVnRWcNP/0S4NZlfinxzcLdbwObd892XkuWWI677j/54P6a\nFuLZ\r\n=flgp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHa3NfXpX4BcLd0QV7cXphgt64ylJ+K2ftMM9AM1WfFtAiAaBemog5JudTw0PkmRXMnDM1dhfKys9BRu9qbAEMyTiw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.31.0_1557216861809_0.24349252287512435"
      },
      "_hasShrinkwrap": false
    },
    "0.32.0": {
      "name": "@aws-cdk/assert",
      "version": "0.32.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.11",
        "cdk-build-tools": "^0.32.0",
        "pkglint": "^0.32.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.32.0",
        "@aws-cdk/cloudformation-diff": "^0.32.0",
        "@aws-cdk/cx-api": "^0.32.0",
        "jest": "^24.7.1",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.32.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-TI9dj+rgFj9G1llI2TOubXmsERtEhHykoN6o3S91dU8BBwLTlDKrxUkFICq8u5MJHFCvf/L2tswyqkyqV0/Gww==",
        "shasum": "aa3c698df63983b970bb2418d266829a8041bf03",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.32.0.tgz",
        "fileCount": 35,
        "unpackedSize": 134948,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc58//CRA9TVsSAnZWagAAb0MP/jXsBOmC2A1T7mtWa+oe\nC8YEasMjQjUEa6sAQELg++5m54jWcCPHIxI65KdN7jgQNsoFYtxdaZuV8aMA\nsg97mMBHrTT1eM6r+XqtpmAs8/dlORtcO95w3vubQclKEfYadrKIXMf06TCf\n1hS32bCC7BTawQwhBC4uVdKsEPV/FKaBiZdqZDMOgZkQHf3jiME7YIxlpUf1\ncpgBIiAgr8IQg3Aql3UJviFA21QhbplqstjZAKV7gZN33pKTbQQS2bFBATdm\nfr4i4HO35MVRPIilJh5j/5/JK8Zox0yyBS0x9sm+Ma1aVlvpKjDtcItBD1Ao\n0JdPbCdgcA1c0WKIdaKhxISWwvB8cVvl7Xh8CRepp9wOpY1SxTiY0yYDHoSW\nTb7tetQOIBkW0DOZuSv3zfZ0GbTsbU8zFyrxVHpQL5vAJTmraPgdHTYl9ben\nkZKDV2HBnmA0S7+nd7HFkItyIZeOdcfU5bYEyE3jZWwyXpRWo6B1/2wxyMFa\nnfVRTJyamIRwfDgeyRbjU3yGAX3ln+Bbja8etCv9kQxNYwfGCGWzBDOynG6o\nrVB/H4x8DCmtm23pxo5ijjQpZZRLitAF3UezksXvxUwoSDXXWdZzHuak+PEb\nzAn3teYzcahalLEnWPqXmgC7E6Gm61fyEW1z63YNbSNXnNqkKRzAjJzDycY+\nnlSy\r\n=r38G\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCHd0O59undFRzbcFdYgkbbKf+DDxEzhzy+Ty1jTJYJhAIhAJHEXKgydWIiB9IJ+2jM+NPqn1yj4swHsmNkf1QaL1XL"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.32.0_1558695934885_0.6289396685534996"
      },
      "_hasShrinkwrap": false
    },
    "0.33.0": {
      "name": "@aws-cdk/assert",
      "version": "0.33.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.11",
        "cdk-build-tools": "^0.33.0",
        "pkglint": "^0.33.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.33.0",
        "@aws-cdk/cloudformation-diff": "^0.33.0",
        "@aws-cdk/cx-api": "^0.33.0",
        "jest": "^24.7.1",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.33.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-2vko+60TGL65Hu4JqQy3jwsqfxnOifLxatebs1GrAALO4r+uLIMT3Nvb5/CQp73b2KlSla+BLzF1Y1AYgLQ2xg==",
        "shasum": "80b417b995a9cf17a66dbe7082087d695664b767",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.33.0.tgz",
        "fileCount": 37,
        "unpackedSize": 140574,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc7/1dCRA9TVsSAnZWagAAYPYP/jE3R/B/B2a8ajrko459\ngwnWod5j4judU95UNwuWjPBcfV5y0fFdiaNbTbr3KtgKsBK+iweOgPCqs20a\nFWgYiy96oZM71yd6LF2KHf2XReGL79S5hhPioC4cIazrFszr17aOyx3WAIG4\nbzKBkYvZFaVajzPIe6sjBzySNxKP4VvY9zXqcfPYN8Y3eaOl0+PLGC3VX8uW\nU9Qu6kBq+OtBhRpZzZZSf+VMu0gct9VNu1KUJfkZUmR3UPayPaDyfPJz2fDR\nKbHRb5yg6QEjqv8Ehuu//YZ8Ar0D8RZnQWLq4gqNO9lHnQ7ZrIaDzLOGzonY\nOZecd4EGb/u+dQxkuaDg5tH7gqo1qQ0e6UryCAaNu2sGybTCGc368L0eHtpP\nW0BLWkxDLpyEzoDQMKzfTErlZE30ACaHyLQehRiToVDIRgQhnbzpftv0pTdg\nM+RcpfN09oaB7Wo8pvYeMbQ3bzbj+4QYjKVRvK/Md5LD+Dd/TSmt7D7ZQhWj\nhrh7ysRyuvpaXDYqMmLsx3mxg0qbXYGvkR0GUCtmYWKB7XFsffpHL2pRCV/a\ndhFPy0N/wOCtOw2Ds6JESGYxfn5PjRyRzUWOFWsgwtP5mJWj8INdabG5InZ4\nmupTb8ntQDw4mTNdV4FkYE8FGJLQSMzTrx/W9hHnVLJIMEPKmTyVl1xh8zAn\np4Ez\r\n=PYVY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCrgduvy7pajOklpOfkJQw0404+kG2R7hMmekdekIVsbgIgJvBNGLztV/1Rllue0ml9jWDk8DxLmQnczzhcTkrjafk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.33.0_1559231836909_0.187326804030979"
      },
      "_hasShrinkwrap": false
    },
    "0.34.0": {
      "name": "@aws-cdk/assert",
      "version": "0.34.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.13",
        "cdk-build-tools": "^0.34.0",
        "pkglint": "^0.34.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.34.0",
        "@aws-cdk/cloudformation-diff": "^0.34.0",
        "@aws-cdk/cx-api": "^0.34.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.34.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-yetaKar4B6048Zlc3iC6Ka+oYEMp9RYHq+v3x0H9tmG90FTdYKA1uC4E8xPUAgs9qldZNehr54sANxr8UtcXDg==",
        "shasum": "46142d3d7047118c67962014179c93e237424b70",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.34.0.tgz",
        "fileCount": 37,
        "unpackedSize": 141256,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc/nuJCRA9TVsSAnZWagAAVAUP/2eQY9MFeGlEs2U8l7BX\nF3pDiCQEPmOvkucgg1f2rlobx2QMeaakQMhSL/DxK1vaia8n6weizk2YbsqR\nkQjIgiEb6JljTqSw1D0GJpkjiWl2dK41X6Y4YjIkocqtN2wA/mXEYyR+8Tfk\n5syImdOScogi2QmHgKXSeKd7P8KFuIczt7dgVDEDnr5grO0SKyhqZOuSMOXx\nJJPGJ+hH0IR+2SDnAdmD1jd2iwN1YISCpH1kzw/1IKCN040h81tcj9Xg4ssr\npD3HRsSo/msR1m+nINlWpVCSAZUPtkD7PzXa8Pk7qfsVIavmGdZb0pdLMM/b\nJMorVvtjo3ItzHou6WDRPFopvWGcWlz3rz4eTRB0RKbe/BgLxoBMK9eUBZ4T\nxPk2WAoWR3i9yJjSh42g+amGkiT5Y17KwaxZ5qap+JcFivxQSweuVCasyzG9\n/xqOlxChKxFyX9xhUvgE/3CK+LHOFLcEmI0mu1jguZ2ksYhPNLwneoCBdjTX\nugqFQsr0ktuIgEyx4ClkLUKK/Rg8CLbVGDnlHj+J5WB66hnw91FMTe6vzGZJ\nYOP0DgfyNb6NgMWoo3UY3EZXXVHgGep1jKYqx+rY6roDU+hz1nlmZZh0tBr6\nWLhjSpwkjuJGcSfCd6VKqX1/SOMnlrWyxSKXDbUN+AIcTctBtpi+4++Gsf12\njjlT\r\n=nPcA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFT4p7Xcloo/P8WeZICTQpaAvL9UMOsttBeqKXEMjGM4AiATaAvEuIYOynt4vJxkM7/Dv8E+pQSdkzLBV6eeSm6VuQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.34.0_1560181640777_0.7274558800528514"
      },
      "_hasShrinkwrap": false
    },
    "0.35.0": {
      "name": "@aws-cdk/assert",
      "version": "0.35.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "^0.35.0",
        "pkglint": "^0.35.0"
      },
      "dependencies": {
        "@aws-cdk/cdk": "^0.35.0",
        "@aws-cdk/cloudformation-diff": "^0.35.0",
        "@aws-cdk/cx-api": "^0.35.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.35.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-TiMmg6kZrAFJHLo3HZTVOos2ceIUrFq5tlW6LxX1t9kJWn4NqnzHOUE01Xki5dnykgCC+CyJop0eTlkeRsHv9w==",
        "shasum": "ceb3ea9116c667a9e9aca889f16e514af73ae47a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.35.0.tgz",
        "fileCount": 37,
        "unpackedSize": 141424,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCm0hCRA9TVsSAnZWagAAJvMP/1cgpCgTFS++1Opxlsp2\n/KdXRKc7jHc8r8ZGpHIXtiNcHCeOOHgGPLFQI2k732ybF4I72g1MJcZ9BNL+\nXISjVkqpOGe3Ki55YHBeOp9UYsqlK9LkbdR4GcYIpGwKZf5cLC7L5h+T80QA\nCnfigIwIPFdrvzO1RrqC9RrUYkzmePh8nCGFJ4ZYKXpVTVOzz7xuTzuh/zVu\nPbA7fPT8YD6I9qLtBMssd2aBB61AJ/2AvSwiIohNyLAt5vFNCSfoihtebQ/z\nadvPUV72/MJuC/T8YPwM+YkRjBPDMO6PCJVjjlRgCKXv2S7LihuAwHhg7z+G\nQ+1pXgYQOzw1afdo+MOpiQ3savfcTHtSGvtUPCZU6P+vAlnDXG5mCcYAWzqD\n6FAO00eB81zEx4IOY07Hxh6J2YPcnn9w5qkOTikI9Vc5jLc4+VIVLXR4qM55\ndq+ngHMSKwBX7Z3aulJsO2xtEe85lEN938vALHDnH8B3wX4JSLmK9oHNUgZJ\nB/xiKCkJXoP9/8GIFl3ymNqh0wfBWqR8BVw5hoN+FMHXs65FUpFaOxv5McOI\nUj4pC0ILT7fQ6GDjeQPDGoKPO88v8mRCExYq8T+AsopzBLhesXB0MWueX+6i\ntjgYEpEPljkPjoJcll2M5yK4J3Y3Tyx7xJdsylS1uuZoHgXlmQLjmfd9yxqv\nXAIk\r\n=5s9O\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDfZtlr8gee+NjcNrL8UPP6js2xWkfnooUR6efFWdKn1QIhAO2UzoUd5hcvU1ScgrMN73dRhXpVAnDjnBJ3TCzYWAPP"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.35.0_1560964385090_0.7931851315418048"
      },
      "_hasShrinkwrap": false
    },
    "0.36.0": {
      "name": "@aws-cdk/assert",
      "version": "0.36.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "^0.36.0",
        "pkglint": "^0.36.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^0.36.0",
        "@aws-cdk/core": "^0.36.0",
        "@aws-cdk/cx-api": "^0.36.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.36.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-51M8KOGTZweMhMJ5eBQ08yo+spsdBseQvQtS/mfZrmKsvlhPN4AXVB9G1nBhxTx+RejjsGjXjfE/sJFeWYafGg==",
        "shasum": "4f9f48311e2023c3f5a65ff320d2228f58ef5326",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.36.0.tgz",
        "fileCount": 37,
        "unpackedSize": 141451,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEjrcCRA9TVsSAnZWagAAYOAP/j4POgX5eDBShCUNE6mY\nfRMaCtmQHu8QqKfEdOnjODijxt3Zc4yV9h5HY594rGLGmiM+7skP8Nqi4Ujj\norwI/1LymxoDmj8YdqKgk8T3RYWfLz0rexNJUr3uVVCjYnTIsCo3ZUpzxg9U\nHAU/s/JHey0NUoDdc2E5Pbzpn0cQCrheX7AxTOoa4KkSY/8ENNxJrMp8m+6a\nP6MdhdDXtgWCMxIskFcb2LRi9jDpitxU5Nse6xkf8b1th1scCgXxC1rL3dH7\n9HOho13Bl0y5abzjnLeawTxYciTVVG0wR4X9taUpPJMQtyPdQceqRrxvI547\nD/t5aNIpxczb5k2z+wFHUPWjCTPEJZDs9kmJCmF969rbjxw8TsQUU2zOYHeq\nY6iAh5zc6umfkGFBM5YUGHOkc+69TdTISPJqz+gf4/2BeZ2jdHQWC9sGFqBe\nE5KxixPW/Fa2HicTdmKs9BPEcQ8M9VPt12BATg/vm00QWmK0TUhkXOGB1w2v\ne5O8UPdNPE2qMwdpRLl/A1MP7v8S/vJW6vVufAbH3G9/xVi1CFPQo8SeQNCD\n+YjP14SxLCjEaHp7gwuLSFE+cffaygQCEi9gF7mdiA+7bPzhV2Xy5+m+Vi5Z\nbrs3hwhRJMn53mvoLLakIqqvBXh5WJEkWi86IVjSXgjGIGQlR67/f8OPK9FI\nA2uh\r\n=43vE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFXClCmZQDWiCJ0HqBsu/9T2hExOHYCoF8+wVkkJ1+MMAiEA9UMKyv6ownqji3a7pDwnL/iHEMswhM4TaMeHFuKopv0="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.36.0_1561475804010_0.10789146487444823"
      },
      "_hasShrinkwrap": false
    },
    "0.36.1": {
      "name": "@aws-cdk/assert",
      "version": "0.36.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "^0.36.1",
        "pkglint": "^0.36.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^0.36.1",
        "@aws-cdk/core": "^0.36.1",
        "@aws-cdk/cx-api": "^0.36.1",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.36.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-oMI5tHq4fC7QYlJsQto062IoEG8buUFeJBHSsL0alAG6/ipkH1Q/kvOe/1VL06fs7jBqpaIReESrK+dRcvdYoA==",
        "shasum": "8223cedd0e8011939b462f66a43b0338ea3f432b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.36.1.tgz",
        "fileCount": 37,
        "unpackedSize": 141451,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdGkzbCRA9TVsSAnZWagAAoJ8P/jP4K6emMRRCKOpU3wsy\nq/eEbXPWN4tnLXxu7smm5sArmCf03GD2F7Ryv2q6paKsbVzQRFagZdpYWrqI\nLR9X2tW1ImZWTYgNhr94ZjeeWWzuS9wqkv0icik8gDyiseO11mgCPe5gScDM\n5TEXlO4qYEwrkkuxWVNyFKHiUg5baGAWCp/3W41tZhKPzkF+bq1Yrp4x5AQI\nYbisO+3+2rKDg0LpyT8vw510l7ASq5G0vGq++t/lzWLk77HEr8zx5ko630n7\nQNj2KQK8l3Y2LVjBS87Uk4sfx+hFz82da/RWaUjt8l3tJ2Sz9TDPAIAoRkBS\n0UFW8JMVOdcMLK1pDW+OKqtDycg6ZrkeeWOK4vt08Atpyv/fqkjZ/+PI+Yz3\nmv3wtFmUtffxBa+/lqTd9oNekMYRGqMQ3aVSdcHgIw8fsCb/SD4z6+1QO2vX\nenTmsPu9ErxH3UmKVNSHuPf6+bl4qdWEsRUg403jM3EsjlAKblnuQJUi/jqa\nB7i5oYT3jHPDXHqiHpbsU0tQZEjrqvYxt68OAoPZLVJRVabqszFGdGdrRA+0\npK2oXeHUc0w0thH5V69JBDaGfSH1EQOvMQEWf1+vZ8irj/O89HKlZFx8UwWz\nd0s/1f+eJhN3byPQIS6szxJSrBZpQa1FQYWxyjKJeEH5+rOmjUaDw+lA4uel\nIX1y\r\n=NImr\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICTIyotyJm1N/YikND/KLHOgR9ttrMAAVO5r4uWAJjLPAiBzqUvKbpeVVN7+Ng1WXyTHul4uaQuX845VzDY8758XgQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.36.1_1562004698334_0.8193661558700882"
      },
      "_hasShrinkwrap": false
    },
    "0.36.2": {
      "name": "@aws-cdk/assert",
      "version": "0.36.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "^0.36.2",
        "pkglint": "^0.36.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^0.36.2",
        "@aws-cdk/core": "^0.36.2",
        "@aws-cdk/cx-api": "^0.36.2",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.36.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-elzwezw2SKpieGdbjg9oeedn3NxxNIxYWcBS/8vf/kkDWWzUnibBcmcSQPhTeUOss3jcL8qrhy8vb/4ijIe1lA==",
        "shasum": "74daaf5594590af56ea21bbd1ceed1b9a2543fcf",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.36.2.tgz",
        "fileCount": 37,
        "unpackedSize": 141451,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdHLEiCRA9TVsSAnZWagAAgBYP/iuRFw2oiPxazbijJ2UV\nMWpUfa8lYLSDFgXF51IrRO6LJSiyX2USLtdFqJ+oenPUp6rvWsi9RCdFXtrH\nTOgqyoYIqIBDp9P/wzDzs9zhZ57MS0y6c3kcJLK7RpPV01AfsDUj8t030Aqz\n6cWOC1iT7YOwZsNYZIyHvtMWU3bnW3vmPYBQdAtJEmhXM4eUNnKcxzSOg4z9\nK7lCTD4ebdQiBbqpGUZCD6Kwpa5dFd1uRhzPYe4hUNjsiKESSFx1QmpRRbcc\n6Q/ujDCfpdxYxQYG+Mt54Q6Qlg6/nPO69L6nTP4Tn10QfHryZAg72z0DCWq9\n/69gAFHJ5lbMBAJL/8Ci4N4tV9v7FEkJyUdrdq5KiP/2dVoo/qMcIRk6PJ0+\nl8r6LxtklAeonPS95Ylp/cHYc7uPhueZXF1EPi768UrZbj0NcC1y2SmoaPtT\nWC2X1sdfcmyHJy27dvkBNzA7iTOTgkmd2LZtFld/n3CM8XDG68qTtNYs8KSB\nIWMMu5ED3emZpyCASfYEO/jEEejKv7GwJDJdww1iT2f4E/jf82Ve8Lv0N+Ll\n9mISwDKv6y52YFLkFX4qxkJHcjUypM8z5Wn0qdD72HefogXr8BzmZjy1nJis\nBeXLxygFqo7LBEf+njeFbBvoWbHRuax/lhr9F2g+1OTxzcdcrXuFzezgO6Ky\nFCfQ\r\n=Dst8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCqv9rbrswdlfLG4Fv9hJzYgRn3N2WwWRR+Guiq6JafRQIgDh3h1hTQSkYyQ7GaxkTiiLnKhMA8OoElqY0yJKeqxnE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.36.2_1562161441990_0.07678315326634877"
      },
      "_hasShrinkwrap": false
    },
    "0.37.0": {
      "name": "@aws-cdk/assert",
      "version": "0.37.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "^0.37.0",
        "pkglint": "^0.37.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^0.37.0",
        "@aws-cdk/core": "^0.37.0",
        "@aws-cdk/cx-api": "^0.37.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.37.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-H0WBzqNY5pSHwjztelA8tph3VNjnWEjPE0k3C5v8XD2ho60SUwoWvMi58yPyPSdD++ktL4O4wZphXHKRpbRVcA==",
        "shasum": "628fd1a918ab8abb160ce077ae7bd348d175f506",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.37.0.tgz",
        "fileCount": 37,
        "unpackedSize": 141450,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdHmN6CRA9TVsSAnZWagAAhtkP/RxJci7Wy1pEsf6N9V3b\nerptNH77KrxEO8bxpfWzfWHuEMv1oP77mKec1xaV1MFcOX1/xlLDvNSZ2bdv\nr3OJvUiiSqMZCwkfdBoosTzDDCvRSvhKW47UTYXl36Jq5W49/JK1nY+MUBTT\nCvzkA+SasbgrfrIE0ruHG3LX4EAxnwRGJD3qUOWu32A3JsKnz+1mQ8Nq6BZ8\ntIpjlUuFKxaP9fWrzUxPCUB8MSawqW792DwzyuP8TDrQ+DsD6N86gEglYNHw\nXu9dUCsYbrPscVDCwRi90wOQJGy3oNscowg2K53pY7HjoH4v9N9Rz5k8u42M\ncf3KDZMos4oIPhdtJ2+yPpXxxGv1BrgNlAcjprqf8QfEkiJ6WJVre/HPF03S\nEjEvazFlHS8wb/LB90sqjzT7iA7o/7+WyubS+1w9xOkfkzRVQUik/9HhZ5Bv\npTfAAKd3v+N5kXAKxDZevbXCnc7OBqm6ECjLy7PZU+5yklAFucgU0/G00uR4\n56ZPjgFtmFdCWeP4rTv/yAME9EsqY+TmtlwFCKGAsqRxhCDNYL+7YTftjDnz\n4tVJtQoTf+aUaKXwSqt1Z9wZ37aAbjH4u3t6vDLKUwGoTwmNEPMDKkcMQE4+\nG/J0ABilH1HZzhKiOCQKwOcNFpg8+70moqBpXCdm2gbK64Sq5fN3+Mqx2oWQ\nEo60\r\n=SXgn\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDBDpERW8igy6jTH0nWqrOrX6CyQ5bPzHalEhiU3J87IwIgXnK1LdAtCovmNd1puzl0a/xfFwFYY2099tUKq6obDjk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.37.0_1562272633785_0.847165043423703"
      },
      "_hasShrinkwrap": false
    },
    "0.38.0": {
      "name": "@aws-cdk/assert",
      "version": "0.38.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "^0.38.0",
        "pkglint": "^0.38.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^0.38.0",
        "@aws-cdk/core": "^0.38.0",
        "@aws-cdk/cx-api": "^0.38.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.38.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-lLOwADPNRoTfDD2fqATmokhlioDt2RKcvKOovpxRjwFn8NkH2G/0Lx5/ziwVLEDMBvA2luqENpbiTJj5S+JrDA==",
        "shasum": "e90eacae00c5b78fb15bf716a292b6b1a319fc87",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.38.0.tgz",
        "fileCount": 37,
        "unpackedSize": 141450,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdI1EkCRA9TVsSAnZWagAApysP/jxGZroeXBvR+9WR8ASq\nce7dbxbDxNUnKocjX6bON1DZ/e7LWGf3Exm/edH8YUxO7loZl0TjptPZ1/ch\nwbaohb/td1VT3wVMs8PAsfa2/1NaDD1wLG7KMCosNzH1wrv9UTd86Q7Oc926\nYGt4Nw3zUbo4/rh/UPCQK6EbBvgqRyflXJlhJ2hrLANraNLtdCnrGFahc4iv\nlHOB9H8C8VKfq+apBDs1DfMC7wiq+sEfDDHq1RUHPz5diWum8lhGHpNrjRX0\nYE1rRYcs20SgUmms6PBIbbXvzg/Hh/ba6WO39r+5cWprOgbeNNFNBXPP7Pig\nMNRLtpuL3PBh0x0DaZ7Vz3FAPfPvmxd7eUBpxy+ZO6MeZYJKwtDqwCpcxipw\nKjViROe6ikbmWcHt7Y8GcwieNdT2tk1xE5P4QykRBz8oMKN0mYo9SGJ7yGx8\nIOLVF/3rxCWgMeDn/5NBqP8y5YPoxmJaiNIKjEeLkl7CNbfLrNMyF3dRaeXf\nAcFzlMDqccs+dNGBql/fdroimKIzgpO1rJq8gG6eMQTQVjS/losPRRYRNQos\nrIsfFHvnjiybiQhsxMPZltqkd4l+Ih5NH0/s/r8rUI86KT30GohTidV/9OVe\nY6BJ9Hke84rT2gYSPd4IYhxa8GE+W7q8n9nj5RNt7J/ERz1mfz3xKHNmQ4y8\nJRoa\r\n=sIgT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD94IhWDwtTj+MVcGpAtXJlecrDC/bGF1CwBPu43Plb+AIhAK5a2pwkDPDcY64bw/ACj/SqXI7IZzvtlp/Z0U9j54Nx"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.38.0_1562595620137_0.7704630264625381"
      },
      "_hasShrinkwrap": false
    },
    "0.39.0": {
      "name": "@aws-cdk/assert",
      "version": "0.39.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "^0.39.0",
        "pkglint": "^0.39.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^0.39.0",
        "@aws-cdk/core": "^0.39.0",
        "@aws-cdk/cx-api": "^0.39.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@0.39.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-+MdtySV7zb30nARmWfTDtOK+lHDh8I7JeHa2YHobWaOxGxI40+ZDw8dQniUmXhHfT8b90LTT7LUhT7Nk7QQQXg==",
        "shasum": "56f88af2e541ef1ae7789a180c47619cb8c9ebd2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-0.39.0.tgz",
        "fileCount": 37,
        "unpackedSize": 141450,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdI+MYCRA9TVsSAnZWagAA8QAP/jLNVCfwkNYGiRr1saS0\nSPR2KUW2E40DF0KYPQB2WLg2rSTKC1i7Ujxo4kpTKzBvS0x+/TnP6qnHSAmB\nopQdXMHKo1bnICWiSbLDHsMNkLwWkzy9xIC6z2rhH0Yp+y4AvqZnQVRZZ+Qy\nJ353UCC8VNfNkUpNSz+DITasZDLD0sDlX0KaDfWoOUZzgzba1XOjdiSnlcHs\n4MDpeKz5XKL6Lm1zPn7/pStYsXj/8eDseURROFaDeIbMsGIk6MIsjyikGH3k\n9uDgNbva7Hc8u3gFKuRAlQz0Y5wmP78qF+bxdmZrtT8GPQ3Qo1Qd3Qkm3GP1\nlNKZADqaf+sJu2zkGsZp4p2Swff7n/2YMkdJfpGtI0AuUppzk7Bi8oFPllJ5\nhEFD/2i9IrI32Tqk1kErVSfe1Fl95Ea/EREk+5iuWLBYAEZkQlZ4f73+HeOf\naqhNnsdeu/Fp2P42/rshC9MAGlLZ1xL2LMyG3jmg99KXs2+zTOS8h+PGosSh\naY3PTEbyTmkXLSeJV2NwVIADEMdLGGaCqLDrdcg8TbNyetBc295NrntU+Z2j\nADdF7Fp3Imbca1IpeMuBNP4dHB/8oUBcX3vLfcq2dqmDuvo4P18dgC3YQAoY\nvYkFOJyg3iFYgLBExqevf/ixgh9YJL8pHgAsDLlq8emhlgdo/06XVm95fJzQ\n14mT\r\n=wnwI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHOzJv6hoL8UOoFoKJwz09kqY2P5bY/tBgAAXDvVjlLtAiA8Ev3gS2iM8CrTdDe4sNAHXL46hSOgUxd6ccinLchzdA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_0.39.0_1562632983186_0.5980684413555863"
      },
      "_hasShrinkwrap": false
    },
    "1.0.0": {
      "name": "@aws-cdk/assert",
      "version": "1.0.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "^1.0.0",
        "pkglint": "^1.0.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.0.0",
        "@aws-cdk/core": "^1.0.0",
        "@aws-cdk/cx-api": "^1.0.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/awslabs/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/awslabs/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/awslabs/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.0.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-z3bdXn2hygj14Qb3rmlkZNLnR5uCauSFiHMMm8AI9rj2TSiQNJ1Z/RYfmRZWWAQ2DS5Y/E3acYcuXhOkeoVoUw==",
        "shasum": "065025af2b74022114090e830e8ce4fa47579b0e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.0.0.tgz",
        "fileCount": 37,
        "unpackedSize": 141444,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdJ1M0CRA9TVsSAnZWagAAS1oP/ilL1ldRrk5bWwd36eku\ne9TfCxYT6rR++eMoDHsVr1gUg1aWVDQijIzBKV9maThguE0KJbE+l0ZVQCLx\nU85ly+PDEVcyc4a9502q0LNOVYjJGa7ZIP70gPRxhZxNI3xCRpQHDcTfYOw7\nq4hUKhvAmsK/DU0qvQSkpS/JzNQWrxPMTNpkF0IWARrNejA458bnUWar3FZ9\n1s1KPuHltwqvh+bikVJ67lcfQwxEMPQfm7nB3mXyWmRJmxR1FYRY0/5jNDCv\niUSiJyQu3PpRBKVcxyiwLWNJfhdRRxgC76H2k9BtIvNL7HN2oRecQ9yh7wIp\nYfQRavE6Y9QqkXsT+UC6NORUZdu0ogl0pqdQj83tJJM3nXEfv+0NfC/Wbi0B\n2mJj+90hsC8BAhaaoussRHG/qHFHCY5vp6bZ6cVMCQeoqvVNTKHrNxkZuRt+\nDOFrN8pQilZ4a5RsQ4meSlBcBF77I6ceyidl+XdPGGXIdhl3xtOcp9NJW6i+\n9yfQMM0JIJpSHJKjpvyski2Uc2t/fV1GHDuW1pAg1aP/2IS0lxglj3D9XEQQ\nNGWuVg4umdonlF0HPvOXQHdZ7o4TUw/IvvHhlyGrnfKueB9IuqRqSNcZ6pkZ\nGbR95Y5fiRcGI1i2LZaDvPKGWhg6rAK7She374SdclNjzgOLxpuWqx5HXFfn\nH0I8\r\n=UNO+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICVJKR4uTS+vMlDPuHC/e2TaMiLZ6ZJd1q7HNxE9F4b2AiEAxKF+zUG2UNXTh+bKTX48illQ0G+IrmJWqXyNRjBQ+yA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.0.0_1562858291347_0.6526331621569774"
      },
      "_hasShrinkwrap": false
    },
    "1.1.0": {
      "name": "@aws-cdk/assert",
      "version": "1.1.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.1.0",
        "@aws-cdk/core": "^1.1.0",
        "@aws-cdk/cx-api": "^1.1.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.1.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-sgtwp8NDQJAzo87WzwNJlI/jrhGyIwzv299NqTkNvmMD0lTMaB4u9p23isPOiSpVh+b1RFFzorP4c+etGDuxuw==",
        "shasum": "3f7477b5903de08efe0e6deab3a7fc0e6e03d5a0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.1.0.tgz",
        "fileCount": 37,
        "unpackedSize": 141486,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdMjczCRA9TVsSAnZWagAA3/kP/2b1STLND4LKRjcI6/In\nvgxMDYZzGbAKRxWTMlEFJ7CE1tXvAzR6ZCKC6ffkzNtga7NLZal71p9m+SX7\nvlKpZymUK3p9lZVkPDccFJ7Yc+CWH8IQIK6az6hagBDCfe6e9e0fBa4/mj3h\nYIpMr64gJQ+9WyoT48i3WnaFtbFzg6DmqUOiq8uMpac9DVUb6hVRtSn7Odoe\nYMkdHybMTynFqiZ5xiXSuC6mJYsY5idSRFYD/efiG2KLh9YcdBtzh0MohHbo\n2LdCRgtyEjjHLioL5CasD9z6m5KyeZfVIAkqMm6D9wlMWkwJWgOeFHCyhXuq\nQSY5TU61VNbRgjjQbeLZSqNjxagdWGWXHgii8UX5JFy2Lm9rzhIjltA6iZ6B\n/Hm/jgz9aFJIQCrnMHRVTIqgUNvQHaDTHmN21ImFuEYpIo4utOxr7FL6rBt9\nuTLvuMFjPQlYzaa52NUJjwVLRb7hom/8QPbxir9CH+ivoKlFZ9v0/TkuATEE\n8jEDdJwddZUzxq4AVmfxF8XtrmmxXuXc/XXvFhw5dlCKHmkIKHYyQ488KNfp\n45nIpYs2aHEh33ZH4w1P4NaV4Zw+hWYRJxOrgBHO7gW8tzL7uWzmoQWkpamr\nXp2KULKcb2mjyp8lA0+Vq5qGGrahmfdu6EhYUUES/k5rx06XoOWrtKj6hSzj\n/UXk\r\n=3Jvp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIESxFDZuY8buVEgV0cyrM5ZMdLVj40RZf6yC2mvaX3LJAiA/yVdFYwJqnVKelGxi67Ngu47otVnnUy3ZAc6+zBQoKw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.1.0_1563572018514_0.4779742289799358"
      },
      "_hasShrinkwrap": false
    },
    "1.2.0": {
      "name": "@aws-cdk/assert",
      "version": "1.2.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.2.0",
        "@aws-cdk/core": "^1.2.0",
        "@aws-cdk/cx-api": "^1.2.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.2.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-paymzRJD6zs/DKLMi5ZddnwUBv3leCrsjlFTqC/+TzxIgXPoBzZ8aJdbBDPh8ylAEE/uuwJn6bZswB2fRlOSdw==",
        "shasum": "46ac9b952d752328365487262ad364ded8666262",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.2.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152373,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdOe1oCRA9TVsSAnZWagAAOLgP/Aroitk4YLOXksr2xu9U\nvuH9n+oSy5/FFgmbcrnj6wg1btv6G3i6mnm7LNyMICtJO87tT6y377KopnIq\nITLUL7bnynq1LyIm3n/dQJs90gmCmmsm4hzYI/OGBAL5f1ZN+RSeJFdS1D2x\ndsfOfk7yNSD9JgW0zuUgLnTV6Gp4mPyndFoU59shloc2T+jSJbCyVylcr25G\njery6pI+OSjwe2nZdtwRra5FP8I12yOizKSRp5jP3SDN2M+htLl6Ut1bO/3Q\nE2Y1J4haihG3x4LXCJtrSD+Yxrbnz+jg924oST+wdI2uln6Vs5rtkklp1aZu\nr/kREOlmQH1nqSy+7l/3KR6pGbz83ClQWXBBkE0WqRNAoT4bes5vMcj8OSP6\nVF4edT6bD8972/bihQZ17+EFawfAEJqXXp3F4vnNOIx3l3pAq0iRrdtnPtfh\nySy1tgqRNc+xQVuHA7s/EnLqGHG7cBuNGSrJB9Ynpx1tQGmSdWtcs9tRIlru\nzyHoJQ/URRb/vEUxsXT5dui2JK7ir3ck0Na4HXMx+QIsOkrFLgHPCViogdxY\nCdVqve7g4Bl170jD9NmlyOWmYC7Tm5YX5bUPF/Q00RxONX97fitbx8N2illT\n9C3hi6YHXivXIZXxViSYmSJ6099oaMSBLnUHegb+vqohCkq6b0iCckynKY3X\nDSZ1\r\n=zPFb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICsYG2CgjcXi0If7SbzrRTh2FxypslEFw3Nu5p0YJUDzAiEAtLpPUMJAGJt/FkTwjMf9BlNODYuysRhupNksd4DBN6k="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.2.0_1564077415773_0.5591619379732025"
      },
      "_hasShrinkwrap": false
    },
    "1.3.0": {
      "name": "@aws-cdk/assert",
      "version": "1.3.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.15",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.3.0",
        "@aws-cdk/core": "^1.3.0",
        "@aws-cdk/cx-api": "^1.3.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.12"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.3.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-WUeR1fau/YMz0pHh0TzK81yOwzylHY5Mkm+IS9WJ8ycnr74py16tNRG5hrr+uQ7iMLQcsstC5P9huSOMV37ukw==",
        "shasum": "13462f43779f93f2a12a137239164eda457ab204",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.3.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152373,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdRBt6CRA9TVsSAnZWagAAXjgP/3uTTIhcH8wT6X1L4j5U\nQvgaIR9eCZW6p0ypwZTzIuwNDQCU3WLdgqveg7H13rtrCVr9wsUboxPN+/cg\nPOQWlFflspAnZn2AsNkwZ8MHsFMy8TJWCN283Pw6dT7Eflj3rlf3MQd9nYNz\nocUWz7fx6h9vYyq9mnosvPAa/IG9axXw1iwEP3ZW6gTMrIwDAj4T3AzJ3SFd\nkqPGCoSug55WKdH0/UshFyyCBqqlQ6BYPYGdszcFtgB0wXFPAVg3ZpYB8lGL\nAoFCpa55PB8AYhIe9KNfP5H289alXx693yVknwpPP0rE+4IqMLbXGuI+u/bg\nvpigwHRULv4hUrSfekoKjg7h7Mv0MHL2TajAO4fsXmCIARjJRSiwziEz1f58\n7ZtsUUDfL34Tw1Rsumv6BvrMToKPDYFvnnqsf6Bml5kM/d9YRgkpdLQQj0Bj\n3nwvTtmNCqIs8cO4XhuaJLgOOO3EdMYeWMctFGqai69a4nZ9QpC2Ogg6qUCm\nEgToymlnmazry5UiXlPirPkLx5lbt1ysNiPM1wL1YXQCFvZArIDP27M23IfC\nTmrOHK/wOzaPM5TIspZKfHibrsl1TQvGhgx7oRamGKr33dka9oGBUCSGxL9Y\nuuozVVw4u3f7Z0P5FQm2gMoAw8FOcfXaZsFKT4mjiWEX45N47CNJBDeQVrz3\nB1fo\r\n=Z2j0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICi8zKT3/Sr/Bv7J7pxN0wgQMVHSU/A03CIt9dZMTKSiAiEA0Dy7vtVUInR/17zDeZUc4GtEZX01Nt4C4dVwTPdYiT4="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.3.0_1564744569316_0.6337922225480546"
      },
      "_hasShrinkwrap": false
    },
    "1.4.0": {
      "name": "@aws-cdk/assert",
      "version": "1.4.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.17",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.4.0",
        "@aws-cdk/core": "^1.4.0",
        "@aws-cdk/cx-api": "^1.4.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.4.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-jgKJhKd36uNDUauhoxCTY1P2WOQHkyGDBcfN7ORUTA1GIkPguv/1UEJusehiiFPow9L9SX/Zny/itOn2JXal1Q==",
        "shasum": "ff50276cca3f9d6c1bdbb709518c03977fb975bc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.4.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152373,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdU8SPCRA9TVsSAnZWagAA50oP/16zvW/Q98PEwJwz0JJl\nP5vIcaukrnsSCrsZymQM4vHszuXXdIv74ZPNR5PDMY70odqffOduRedrgy8S\nuN+Qwkzvdb4BSGXKBCZHdQrQnJY3xQrSd0wBNTVV425wYdEibo02vrBIac7F\ndGCYQFsItXL53H9M2LFzN+e8xb/qoSOwqf3ORrYWpFrIyM2sQlILapKcnS2v\npoS0dmFwQfzjzXLFOMmY1jt347CmcysXZqHOG4jNuR10iGwbGe/nd1GFk0vE\nHWBvuFw+9MD5ZTu7hWdnOKRayWE8PfyaK0pu/jWZT+FZbTwjp5BaVAnLlfud\nWyoXTHP4dN4b9ve9ka0lHP5gtIKGcnh1KQ5CsEv7dZh6h3WyXhUDzxr3CtiJ\nUXjrt/YOGs6W2/lQwgygo4S+JBPS+nd4peE5Z1P34xP+sAbFs5AjyulgYUvS\nQ/2ZyDzrvG8o3k+j3ct7NJjlw4Wm6L+09MkrOkkjXZjIuLyewCgkVzrPzZ2Y\nn222nK5jGwmi5/5m3D9lGpTMrntgBnprcRiKef6m7KKfft5vseTuplbYvvKx\nzxnihg5uRKA3OmagbtOVleTWxl3hOdjWVS2DcCJB2+60+9Qarjwy0UQ8Ew1f\n2vP7zHKUaA0h5ZP+g5rlTCW+bUTggfg2ORSK/lm3LtPfODZdXAKE3lrzJ8RE\nHweg\r\n=9s7C\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF90QtSJvAbaG6NcmnAh6Fk3HqhNLcjeV0Y0TcnY9bLpAiEAxOmgR6AC3HWuTbg9ikIqgJ+N/HtnYZkIeevkY6h7kPo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.4.0_1565770894421_0.1561323996778483"
      },
      "_hasShrinkwrap": false
    },
    "1.5.0": {
      "name": "@aws-cdk/assert",
      "version": "1.5.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.17",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.5.0",
        "@aws-cdk/core": "^1.5.0",
        "@aws-cdk/cx-api": "^1.5.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.5.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-MfzfpoLKQ6P5A4YtCe/RmiwHAaTiywAEjZ9cjGhxlFWKB+PNbUdswx7Ptq+iYR1ic5zC39dWwSbECBoAPSuG5w==",
        "shasum": "7e982d1ddebcd5a5cfd1b03dc55174834ed762c0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.5.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152393,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdXSuwCRA9TVsSAnZWagAAvs8QAJXDLmG8AebTu2MEjpMA\nXGLmdnJwfQNqNFGBy6938D2aze448ECVqk4H/tHtkmzH36KfEudqoVFRqSdA\nFSu83oo9lGtavkunTYNPz2VLb5URC7JBcgMt/Y6fuuo+23mEkQSafaXpXRmx\npixNii9isKMl4L0LUOQrccpvrM0JMBlJGbj85V70wrZh8cSlPrJFvfnjN8dW\nSSd1qiRQWGPGPhaQ7flVrbCZFrarBV5VjbnRFSRuRgQnlD9DckL9U0pBg9R0\nI5H6nsSPgXmMdvTZDRLszfY/EBUs/AJyKium6N8Yp1+1ZJlGrvEio6vWuI2B\nofHubNhlZNagMG2DxM+w2jLE08hCAPusdAyK8E9yvuP2B6Pc9CvS+O8AQlVY\n2sLvn5mrMhuY+k54JWEUf3KBFkYKxantpMCUobLpX5s+K1FvBKZlpGVGlFxU\nSAD/lOnWGoCkmRWPu/NNIHt2ne1h8VrM2q+JZp08I3UL0lPtAlBld+3DsGDv\n3mxK1JSxzpQ36fEjFlQXqiIy9/qwUqx5vO3DL73qeil9pvPjTrvZPynDPrY0\n0Y+69qlBYL1ZA2c6hJme2/Pq9wdUtiPiUg4qrpUE1M89iqGBwwTbzEqenhP1\nUMYr33yhKumlzDA4pFPeRYUUrAuMmLZfbfJHkjiqT73iXfyunAIZgfKhJjJr\nX61M\r\n=8ihj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICBrBkjOMIngh/8MjvOkhrMI1rXRbPjVobRIr57HSRCcAiAvSNgOifaEPf+zofCRzQRWtB5pPh0f27jR5k0zvePnfw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.5.0_1566387120116_0.18460123537784856"
      },
      "_hasShrinkwrap": false
    },
    "1.6.0": {
      "name": "@aws-cdk/assert",
      "version": "1.6.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.17",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.6.0",
        "@aws-cdk/core": "^1.6.0",
        "@aws-cdk/cx-api": "^1.6.0",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.6.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-A3j+R3ahkAXUcA8iV4G1s9mNDYR9Uwld7W0VZEyLRD/JfsYFZYQS6ax6qa2yVtRGoqNixW3291AdWbYxwY8Qog==",
        "shasum": "6d5e414d0c05fa80d7e2781d347a2c2e21c3aba7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.6.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152393,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdZXRECRA9TVsSAnZWagAABwcP/00tHgyHGsaT81ASF4J1\nHpJyBtuOiR5nmVRlUpMlrRO2tlxmM6qI+TgKUz5QjV/yLzYO5afSqxc1wkTV\nBhov8NfJA3XWchCC1ueVejY7BGYr6Wm0jko8hxjTz/QzMlTTe3BLvIBNIwk4\n2LGCZqtZq4fU5JXE33HeonwqJUfAQGvKzSocN+VkaQHfS5PSMgONVcoqFxke\ngQwCZ7jqzPHB5S+3Qj+uXL/AorGEAWKZQfrCgaOSl7PJS3MeXUkmzTsqILO8\nv0uDmOHf/FKo/WTXCbkmd32OKqsXAbWJdDCy9qBppWp+JiO1FE4CMbzx2TT4\nDA0xQ+Uie+ZlwUXh+/WQQWakRPeYvLwotYb/2z0970bBCyuzYehzAJv7kWJI\nhDDLcAIBUtDdm119iwj3d3VpvptS0rAuu4kuI7RIl70wNZuIul54xyNrbNag\nOYK4xIwbSAD69Bfr0OykkNpBKqrhafcYUd1P7XKHUXxGDSLYe30NHxkq9f9r\nKokcV+BhXIiYI3VAEw42FL+g2jWe1dFHM5JGRKlJlL5KWdkfNvFSYD6WQ0wN\nAkqezeB2ctv8+xh8+1tp8RZFcrxknFrXSNTSKVkCVwD3d9DudkJDLXWNtPh6\nOtxoKoXczS6Miq1fO1pSGX9/Bf+T2eXijw5XWzCJauqjwURg8h6dKWK0tffg\nOnBq\r\n=1b30\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAuzjOPxzFS08ZqfGhNEyY0Z3ZjCOzkG+u+noig9aWEyAiBvPUwbod2+CLoKQMklrBa66ZLtbTxdVRMjFa/M/8Qdig=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.6.0_1566929988365_0.046308325456280386"
      },
      "_hasShrinkwrap": false
    },
    "1.6.1": {
      "name": "@aws-cdk/assert",
      "version": "1.6.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.17",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.6.1",
        "@aws-cdk/core": "^1.6.1",
        "@aws-cdk/cx-api": "^1.6.1",
        "jest": "^24.8.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.6.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-R5qfTahYeN5KDk1THhjfDrAWhkSPzLV+rkN1biDqTbFu7Af2SGOGmyntJEsB/i7P1TDkmlrCY07GNf7qo0ubTg==",
        "shasum": "58488f4d431c7c4e39d206117875c28d2b505827",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.6.1.tgz",
        "fileCount": 37,
        "unpackedSize": 152393,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdZ+PZCRA9TVsSAnZWagAAcNsP/2Pz/F3JteqIgbiBuHe5\n/Ki0H1PZbFqgUx9imIXvueXnrkiTDxMggWpsFKuHfCW8bpci3+R5C0EzpqZK\nRcFvSF0lu7mHobJg0KDaRA7NhshgOUr9ghnRfHzti3y+RrPIdg2Gns2gJkRI\nbSh3HBRBwmMZsNelWuwc06oDZ3GZtbijcVeY1TGZgoP1JV9Bgo6aNwJ96nNn\n1uM0m04wwxx8ln9Xd+xXig7O7KiXLlnpXNtH4YtS+aThKhIBTIBghp849LC5\n4hl91wOWX33Xw/Mym5XBE52G+2KeF0XDDgxz8DvzhAjzoxRewfqICpJeEkVv\nPqgjpIa63PFGkuzjCF3ZvW3SYApm5CUvB2tkoGlAKFf2JlqWn2CqBZ+xfXL3\nrXOQ/m5rrGu0zVN+SjFKJM7XkkjGN8CZnMsnYPxaD43PhLV/jnRvgjhtha2Q\nyzcvU9tQ45Kl9zB1b7k34Gl3envUWzKd19HpfCUpWxGkpAJPrfH08hPjL6Cx\nVet634lwpTM3mYwrub3uPx0VdFGiMLhnWqiwOKOCIYctU00sWLr25zXbGZEA\nHhDYgU7xkea+NtYC91gn49IS6Lv5aa1SwdP9lxdI2V9QjYAbtY1oPJPSjaix\nqI7UcMxpngHho0F3Nxj+BnCKn2lXL51WnXvfr6KYqXBv/7gsmSwzjQ4ZCLwJ\nN29s\r\n=Lf5X\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFLA/rcU0+BwTSzMKAbTHKDvSDsF60UfEjpxEiTWB6szAiEApOgHEUheW8sno8ByIg20lIW1hM6ztaYEy0XZzRxhnOs="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.6.1_1567089624492_0.31393795660692314"
      },
      "_hasShrinkwrap": false
    },
    "1.7.0": {
      "name": "@aws-cdk/assert",
      "version": "1.7.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.18",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.7.0",
        "@aws-cdk/core": "^1.7.0",
        "@aws-cdk/cx-api": "^1.7.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.7.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-aswFoqOPwlotk00Qi+CFnLX076n8XqeScr9qoNeA5v30FMY80wDUd2HsYn9HFmsowzOiLNA97jecMHxd6CW2HQ==",
        "shasum": "57576398c3ff22da005665664f6492fe188c1489",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.7.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152393,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdcb2qCRA9TVsSAnZWagAAARMP/jAigM+mXqtWlXZrwSkX\n85cqHCDGhRJgHsNfUDK3Qvuc78qY0DdF24Pq7+oCY2n9Ls9fVgKyEw3ClVje\n5UTufYUdD8h1BzJfRRXiCduBTADpyit8OKzhudnmQWCBauDTxc5gFeCQzKXO\nDiF90n+9Bz5sffGI7SKgY+B85OY6uFtsnCXb7I8SF7cbqWykjgWNuIUyPzSQ\nNf5UWUwtn61Gp5Fjoc+bqtV1Cof6NDkEWJzMoVoHy54g3vFzDZMXJYOx2OSK\nrdEM+2Giu7pI/4l2RFsgBqbx6oLtUIeQhLpFQWXRRRYy9bvWd3CD60voqIRB\nzFHHLP1/Dp78zXSNjY8Tf4EAf3iQ2vinsAO+XDLAhZvjX2bz/7e14Ge6GFG0\nZ4R7pp7Zb0I4tTrun343hxOm7Fdo3ITqndrgZwWIqgXB5Ax2seBnWAbZ9qQ1\nU51TSLIvd9SEeivAd2SplO7bB1AN7WS310nRJrUpihieL8kbA+U0CR3Dn7PD\ngGtp6qC5GY4KYToC+bHohH1nHoiWWNOmPBtwHJ06E9YYW0dSg/YYZLafKzW2\noxSSqImJ6PesaQGS/lr7s+8bZ/ysr7OmyKe0sEYnXZGla+uTXqOuaPE+B+Gs\nMUIZfvTc/azhagzAZCMuKjvT+4hWe9sXOA1tYaLTvH8UjwZiQjS4bTC19rbA\nB0XG\r\n=VXLB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD9T8sD+8+133FlhgSHIHY3ZguH/RujfeMsuZTHyR+xCgIhAMbUJF7AhlHP8VNyAA+Q8YQBr3ub1UZ9TG2RL/xWC+et"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.7.0_1567735209567_0.24386200401401537"
      },
      "_hasShrinkwrap": false
    },
    "1.8.0": {
      "name": "@aws-cdk/assert",
      "version": "1.8.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.18",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.8.0",
        "@aws-cdk/core": "^1.8.0",
        "@aws-cdk/cx-api": "^1.8.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 8.10.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.8.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-ZwVmY+g8XsGfnqrNqmTfoghyxwtAZ2hUd0WNgJrf7PBAlenSxWlOUo/d4GPJOuowftWKs301Q7xkW552BPHscA==",
        "shasum": "225bc3d40cb76117141114bb231995752911326e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.8.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152734,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdeB8+CRA9TVsSAnZWagAAx44P/iTS9TZogok9eh8n8jXb\ntD8R/BG3oZHdJHXUI9uWsnn5C+PclLBB3vXpwXDw+AAZyvcG8IP90vW0o6sK\nHDCMX/WGQqJqck1bXZ49EdViNuSi2d6eSCybg5XmY1wEXiMvrdEyx99A0EeC\nJjMaKKLsaenlpQo+yyg5VRHKKDCnDTRMY3fjA7m0ys6fGapnB77Tj2nqgP4Y\nla1zukE03rQfSutT9XdamltBcbKr/b+2Nl3ji+uN6MACvMrHx1Ek3dpVyBTa\nV4nzKPKlmzZSOMYoVnDJrDuamFw+0YLatRmZvQVRDqVG99UfoxCNC4w32Dqb\nVhOAU9oiQagKN0aj6Ndkw7i8H1ZW3EVgo/jAeSORUV1EsMmJURAjji5b0g9H\nYfpiYQP4kG94Dl6SeUAFtJadCZWKDsfzr5orRDCZBKKWQy7bkkFkLxmArnh/\nAFyuP6yPqRz3TTmXFvZwnB/vjxhOp0SyCxff6MiXTQz3cfr3wLx9CutfI1Bm\nFwriL9zvn3hNx+L1ArZ1xdz1lS0Rha44RV+qkgrXmd/lDzCLDdsVhPsrXeF1\nrN7YSKdsFSaR2fqMBTGb8KEHqKBmw62DYGj1jXjC1LFKeQ+X/iv69fke2Jvm\niaSJ9YVOZFPe+tNJOx5Z+MMSkDqFEeNzHhpkF2Vsb5MqhaHGcMpNEaxcY+jy\nkUJU\r\n=+cEw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCTjlATiCyaCDIEXFSu/KYziUEyPg+OvMZo0p7VRDYSywIgW9DqoUSxLQ88VXBdNryl6VuZqvF/CgHE7LjumQquu5Q="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.8.0_1568153405749_0.18133922073660247"
      },
      "_hasShrinkwrap": false
    },
    "1.9.0": {
      "name": "@aws-cdk/assert",
      "version": "1.9.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.18",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.9.0",
        "@aws-cdk/core": "^1.9.0",
        "@aws-cdk/cx-api": "^1.9.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.9.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-5Z2X/pd48/chUAX6fBmK0l01wlCT+IUXfTAElZS/z3jNVYp4w6KcrtyAhHMwxoqG6RVoAqSyyM8GwpQAHKzNLA==",
        "shasum": "52cf0cf0909ba7272b61e5b1c8c36055433177ab",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.9.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152734,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdhK5cCRA9TVsSAnZWagAAzEAQAJLowcysKfoOMNZGVkry\nnWOKptfFiEx+rxqb+750jUXCuY/xzN2GdZMGpq3AN9Hd00eEubbQFSC3sUkL\nZVgOH71JUgsTDLoyMphwfRbRnTgT+GJeoe0ittHK+hHL7BDpJdT2ZSZpXmXw\nxTnCwPsr4m80kSY6EkBO1IDa0V0GrsMO4fRORmFpfJMx9suOlKgkFrAkSLf3\nF+eGE4bw57kWBREUm/pikgmvaxhj1cpt8Q3pCMAfwxMX3L+8PYVEiNLp/mdK\nDyNjX/CtDDHKeDfxVTduyIMHcMUzEbv5GpukNPqP1ui7HoJLNpgLOPq6/VYu\nHhEJ2lQX2snTGR1RRZD4AYfJ0ojj0x1mIXZwUStYh7G+dDhuKRIaOkF/yXKd\nnCCjBpWhxnDiXv+9PELpU2KekSiOfMEJ9ALgodIeNEixClaRQMymK/Y60bW5\n6Tyv3umVEg+t4QuFyjrighlm0RBppGAxN/SIljm5//oQUsgXnBVqSyby25gR\nm24mfYuMGsODvRrbKlIaQouFLFOiyJEj9y5dnW2RhbjeeLHBMgbLcC4hzeFJ\n8W2siZzaFB+a0A4HcPzHPuMLnNEc9DIdMeok5iaOH9CF5UIHFQT+Ym1AhMnu\ncqvm1H7Lu/6fKsy/+/HTv4fHzPSQaS//KUm9ux3kWtPoJ7ZYaDywW7FlTsRo\nC6P+\r\n=nrlw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDwCi3a1b+Kl9jK4bnxmlNaadMM13ZtxNZN7UL87A30eAIgQOqhh72IA5rJUtKca7ONfsQ+duHwkUNOaG1+T2HB6iE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.9.0_1568976476232_0.762461168729097"
      },
      "_hasShrinkwrap": false
    },
    "1.10.0": {
      "name": "@aws-cdk/assert",
      "version": "1.10.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.18",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.10.0",
        "@aws-cdk/core": "^1.10.0",
        "@aws-cdk/cx-api": "^1.10.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.10.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-XXKiOjiorZH+bbjqozJkdMnGkkJR2cmJ640MLeBGIDAlOLHh8/sOfMt8uToiRXhgfnwJey6Y42aUlk1ehocAAQ==",
        "shasum": "2ddd5f0c06d30ec023dbf05e5206dada9b6e8eff",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.10.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152738,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdkcl7CRA9TVsSAnZWagAAsBwQAJpImGM3chvUkfEOsZ7d\nFzd0MFyJD1h7BORqmyKaOaF0lyNl+LoPAPbAEQoWw3rHTdLL/OyBdKtUdSZZ\nY6DMuXhyKyoEs7XrPtFCIZO58ZP+NxtRbvcvGLXVSDSIZQoRTOmRq9GZGQ1o\nTuYcKmCWWFcEY31H0gheCjhwLE00JbKADeA0IaOu+TfAmQDjnnI/XeeeFYxj\nmZ/aQBn2QQIqwWYZ6tzbMRIWHZ/gxNRO+BPR9C32v8X6r9Q6mH1XboXU4MWE\nPUKgwX9D4Joir6XAhUzESh4netOLhW04CrmpxaPeKIOK5y30t2EwCRm2KMfb\n0vUdnuDv8pwFI/l5esePikcJ8iPOvPY0nhDS/1qJi8pMUK5ADTRRbnjP8uTp\nJXNeaXqBKoORhRmVmJWDkXeN4YfdG5Dj0G+Q2DrunlJAmmYmt0pzRusSwdDc\n1Iy069gQuCLEl5qCqwqXrozPxOMZZBq2bVpSy1IqpW2SDKNBNLM66iZZJxqA\nelftOq0bmoeRhTPdsq1L1ko/DfQkQYhVk74tk9UXBJ5e44k7YivOIgSzKgOy\nTPyUczdkAgW19h0Trcyl9iCEcQ2XwptFoXVC0bLJFtOnvCvkVoXcH62ucO6h\nvq4cf8R/Vmy5jg+jnudJfSGe/27JH6XjfEMNNkvHgnOdW7J/5jZT8G12nv4a\nQ4hU\r\n=WDtZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDPDyVMRPPsuLzn+oGmYrrFOIDtRmIFLo5GRGazH+2brQIhALHsB1CytAsaK2G4mU4V5wL9R38fjMbytB/IBWW1D13N"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.10.0_1569835386502_0.7438650580482356"
      },
      "_hasShrinkwrap": false
    },
    "1.10.1": {
      "name": "@aws-cdk/assert",
      "version": "1.10.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.18",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.10.1",
        "@aws-cdk/core": "^1.10.1",
        "@aws-cdk/cx-api": "^1.10.1",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.10.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-q/yiaSTVSt7hkhTY5tacKeibbjMIyloMLWmF9r3MJmY1I6VPZjpB3CiW5XzIM0VCHxURGK4fk6u4FO9Ti3LU8A==",
        "shasum": "8442b15f214da62af29b84b29bec83ccf8e0fd74",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.10.1.tgz",
        "fileCount": 37,
        "unpackedSize": 152738,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdk3GhCRA9TVsSAnZWagAAzfMQAIir0bpfiM1afPGopGnV\n+BrOh8BWenJ3hARJVslSYpcCoAjNF+ZKTHhQW1ckx/tFvVZ4kDO85GoPpzC/\n3r0Xjufp7Zoq5WCizg0ez2q6p/Z1mzK5gYKXs/wlDJa3LgPIb6nfxdRGM0ul\nZ7rn4zTDBZRLaXDKPQXs4JulFaAYNYec3787YW6GuDMFfNgS725LlSnO748Z\nxXjPkDom9i4rFPgDnsA9V++9xuRRe84DgJQAxVyoDL6RGUe5iPQpz5O+aiAn\nzySSRWcZwlKIK1epFD3I7kEBn/l81qv926KAnqRmoGAuFal5qV7T438tFJfY\n7uvpFJtyUuWB1Y8Q8mwkXrVkKg8EJB5KtVR6gWFEq5njs9+KSztRe6E+Jd86\nbKDR15pgsCeM5sDt39L/Nez3xZAV9gaI0mDIpkBptcaLvbqY77qZuvOti8dB\n4E9dw0+ItUwGaLrYCBOSRvlfU8njx5qxovJURO2Zmj9wLkHpAFFpjOCXFbm1\n7NN/SU2bBBr46SAcRyPfftMIkctxqzHck9pHMW9UT/yjfKpyXX1+D3W5WQ9Z\ng06Ncy+D0X9BpSZzmk75IVSzGniTT4y1yRHGWqwyinspUJhBAaWPDazqzsE0\nHq6S9HryHjZMj+FVIAIrT0GiFFly0cK1cNNdBXgN6PM26UjS1lnDTtqcESlQ\nhCNr\r\n=Xzo6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDHbIR7edDsWf223/KQe1KbV4bsHNYAkfpZJbw9eqMOvQIgFP5kjUlWiiXTqOqF3oG7WjO3HBu3M/aAapn085TGmAk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.10.1_1569943969085_0.8254651389137198"
      },
      "_hasShrinkwrap": false
    },
    "1.11.0": {
      "name": "@aws-cdk/assert",
      "version": "1.11.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.18",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.11.0",
        "@aws-cdk/core": "^1.11.0",
        "@aws-cdk/cx-api": "^1.11.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.11.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-jVI3ltstjFlvYaKwmZoPyYRYuIQah5khnv5RdJn05fRrsC/V6TxUc78ItId3Kr+3NKT+PptIOY2jM8t/VU28WA==",
        "shasum": "90f26efc343133b56f47fb0abb2d79adb7cff33a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.11.0.tgz",
        "fileCount": 37,
        "unpackedSize": 152738,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdlPcFCRA9TVsSAnZWagAA5RYP+QEIrWavo+ZJBk+V4M+u\nIhYnwHZhYPtqYFccynVsNfb1pSyAPle1wjw4zabRhfunYSSWoGA1GfmkZ2XS\njo7Dk6HbbhPD0EWnAsABm9TOwH1a0IASS5EmuQ92oBOtzEqQ+LMIiw2vHu+4\nSjStZjsOnbsGyo4Y6b65w+pMAkI97ek5xddytRASS1CO5umyNncpKHcyIDBK\nObxBWSwqHCyKdflJXsZ9YzcwqS66iT4W9prDWcyNRbFV9Aox95+twBKmdUnH\nZAAxPpUehgn+U6gbVOW1j0HcJhkarqMhbTchQl7hw/OssISNZNBFjMbDS9ma\n5P7unh+GJlDWo1+RqR3fSCI/c1yAR86LLN8jV1Q+UWJsDDHzcDTpOI1Au8MQ\nGXTELBGnQk9Xv2cDgSTlPH/939GiWsAmt+OeNBOkOtHPDMh4qlMzDFIOFVvR\npweFYAUZWRrZ9ow/n1uv54RulRrjCRk2cizM26sABr3nFTlWsWeudIe+/hwG\nj3D3fsd7b8EmjL09zTjlCfrad3N5waORGUoF9ogJIdaZ2UjwoMqqj4vjIbA3\n6SLiVfOl0arvzHtmxbhOU6ICGaruhiZX6tEy3P1uFJl12UF8hBDPbh413lvY\np0cF3+T2Nw7Wm+BpMf4wlMa/ivMU3kd6FpVk0mGgfRgF72JHR7VqQ40cXK8O\nHON5\r\n=QN0H\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFNs8gaeuyT9nQzDcPwS2QIIz22l0ArR1lldJ7je9V/QAiEA/m6foSpTk1xADS03kWsW9OetDV2PRlPUCIRJbueyUO8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.11.0_1570043653083_0.9643506114430427"
      },
      "_hasShrinkwrap": false
    },
    "1.12.0": {
      "name": "@aws-cdk/assert",
      "version": "1.12.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.18",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "^1.12.0",
        "@aws-cdk/core": "^1.12.0",
        "@aws-cdk/cx-api": "^1.12.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.12.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-q4FTHJl4uQxk8/vp9sf7D47QqICl4GhxdwIsnClk8HK1sJoCVfpfquhvcPtco6EtHl2j1yHX6T1Q2xhn1LkTvg==",
        "shasum": "36dd4d136674672ac4f4e9eadedb752345ce04d0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.12.0.tgz",
        "fileCount": 37,
        "unpackedSize": 158103,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdm2hECRA9TVsSAnZWagAA8REP/jtnA3ctMox/N5CFmpfV\n2KmPLWzbWy6pR4EAP7mumrLeiTnUo4lLbMvoezH12ofeHO7PBLChu8bKECjh\nYcZ8Mp9At2/7mYzmG5Cw4maBBrLEi5Scs/sqtW0FzLbi+LWtEnJT3RfWfIeG\ngL0esqvTEjRqZR1xvXpc5+KjtTpJfdkDpwnLFrUzEcMVJtfjwLbkgVsr3Arw\nzmfGNVh4oqRJq84LREEFJ9WjSzJjkxoosGKz3ve6Qr9ekdGLIibdRB9AytbM\nk12JDNJl7XNHMx5zsr6g3F8bjTGScHUZJanICAn0Xtfn88ePzkyIUWsGN5ye\nIDUXlkKMFYTX8wXXAwj5Jpg6PEXtUzRrFtl1rS88bQvFcb8FHKcjwKzWRUpn\nCcV5MxbzWgiMmzBceNpNxcxgq2hQ/uPWsy8U40M4I3Fvbo7pxk/gU0FF+N+6\nV30IXTfd4g5IrSzHj+/Ar5pMFDrcO2mUDbhytl7OV0mqrdT5IibCDZJ5G2NZ\nTeI86KtZDYveOqFN2HzadSc8bGfa6Iknf80nWNTi/4OnBhyrS6B4kIhFeeqO\nms7+Os+LHGyserTZPH8INpfPMcwGaXvVFEiVnNPG6qaiSTW6knpGwZJLU/2e\nVVuT6vlyIjK3thybdrmMqg2I/8KePRRW2zg0E4NoYLaGhWkVyWE/X4uNOvJ4\ncFpK\r\n=2jvi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCtJTsSESsNtLcQ0/+d93d4DRBmnFhGarcZuF06EenywAIgCA3sAL00cWxm3EbcawVArWMZ+sYzCVpEKIyTbNyG6CA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.12.0_1570465859592_0.7393806360378383"
      },
      "_hasShrinkwrap": false
    },
    "1.13.0": {
      "name": "@aws-cdk/assert",
      "version": "1.13.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.18",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.13.0",
        "@aws-cdk/core": "1.13.0",
        "@aws-cdk/cx-api": "1.13.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.13.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-g/D9WefwlRfKKPQD6MuHkXhB0hgPgpfnLDPt8Jxa468gL4+kPprq2ptlDk2UUD0KcuA8FE7a/NkXljRkXE9bKA==",
        "shasum": "7964c481abae0fb1458ac8a08ce4eb3c5ef0cd22",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.13.0.tgz",
        "fileCount": 37,
        "unpackedSize": 158100,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdpcdiCRA9TVsSAnZWagAAF40P/AgmH9QJG2mTzJgG+HLv\nndGZ/n5IBm2gBApPfvuDw06Ep2snpFNGXGewsv/EFgmWJ0NbyYvgfcWjSNuF\n8gfoMURg/uZ+9hoBabLNvV3kv8HXDrJR8RiBnbzlzXPtySo94XXCveczrUJF\ncipjYeCmKBYhJTr2yfeCzVOsH+lJbxZNvxMbU8GjZTA8ECyuAdYwmVsFnGOb\nUPvSBh8uZfX4n6VAO62dhs/d5dctL+oBJcZn58ytWNp4nokro/1D2Ikth2Hj\n7ko/GwJ0HW2qhYsmA9z/sx3TnRd1416NN1y1COUR1BeuNMLx2QGJwGZhKamD\nFVoVjP6RAlA7OMqSxw6sY7M2nzf5kUQYumxpqA430NRP3FtobJQU/YOxVnOi\ns+YRuVypSTF28hrOmaMZcUcTeSo/VWG8Wt2uUc2E+HQ9poAs8y9wGSn32evK\nCqDmeZZjymdC16rTqamSOwxLrA8MnAyINDr5N0BEoGVk1/VZObie2jLGHclv\nwxNHtIoA3fHlLd/RFXTEcrgxv8D4yjcS9Yk3IFOaOwaUzCqJZtuCf/ZWqwPF\n7kyov9z44ZH/tFPmnYr0Mkvxywz69lyyljJ3KrHOFfoOYtP7t3RGvyobzC42\nf9aMrMePhO0URJxj0j9IeTVSP+W7q3YhnNW/VHKKccg2pU6vsC+1dT9VnfRZ\n2CnM\r\n=mhMV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBk+qPno63gH0ceZvh8RmTGPMcH1iYTOTHWM4FNviMAnAiEAokvdMCBIMiWxtBwopNUTysTLnV5EFtfoA21MyRr9R10="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.13.0_1571145569677_0.4733307847490944"
      },
      "_hasShrinkwrap": false
    },
    "1.13.1": {
      "name": "@aws-cdk/assert",
      "version": "1.13.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.18",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.13.1",
        "@aws-cdk/core": "1.13.1",
        "@aws-cdk/cx-api": "1.13.1",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.13.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Q9FfWwEpYL4JwpvZ3HJKSauTI/ykNwr1wt+Uwi4w3RKXJCegRtx/TYCle68gO9DRlF44a4yReD4yjuxk2U5PSA==",
        "shasum": "a8a0ce2c52fd6b5accb5c8145d3c4608b8094fec",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.13.1.tgz",
        "fileCount": 37,
        "unpackedSize": 158100,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdpi8cCRA9TVsSAnZWagAArQIP/0I0/CWtTCmyhbywo7CS\nx62RnJCgYK50LZuSq8YIE/113AMl9SDVxGqYMoabwnCoyRTBpjKbPWox2eHg\nCQJWnJyAYmZGirvakCWP+qGWBk4a4VHonl12bRD1rl41hCqO0ejwHIa1/UsV\nOfo06s2hXFk+Q3c5KHVy+qU5Lf7S250QkmfDxDMcqO3Novc1wupjEGJACORR\nD6OGNUbHHhvhtiVgbl5xDQqfegTBLGjVJXq7MT51+3yY7in+zkJawDBZ644J\nqvHv79m65zQEATOmdawoysm4fiIE0Bv8/849+lLM0djFnz1GX6CCBoXz65xa\nYwI0Aa1NqtQhxkNAEIGx21I3lvxVuZzuxFXSKzcrq7h3OsQMjDx4FiuQe7SI\nVz7u/kjt9HrULSArqAlHr99L5rOV0hiSYPDQeHrZIOsiOcCYk3Esycae37vY\nLQpFs+0rFLPG5JYEJEcBftW3vpVCDpLavWDqHLRiBWDZSJ4tC3C8WovbSsYT\nYOppyugn34dMeA9I4cbWldOoBo0kmk+j8khwcChO9s/O8M0KV89PqiRIIn75\nnEB74d7F1AlzWDhI90RhGaKE61uufR5T7aKxaoJz/8a6xQuLmfL7baUexKwE\n7P/lVLDOUOJ1uKYRA12+vFpuQXrtALUYmKJqc6CK0oc1UigVpbDzj1Vhx2f7\n9CNn\r\n=RVbZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDN8vwgF5NhViqVNTd6TxsJxaHiXBawIv8IKozZHNr8YAiBujTT1Ap00U6oCSLpYJ1bWe5PAIoYppAmclqPnb6oTKg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.13.1_1571172124006_0.837891630621102"
      },
      "_hasShrinkwrap": false
    },
    "1.14.0": {
      "name": "@aws-cdk/assert",
      "version": "1.14.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.19",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.14.0",
        "@aws-cdk/core": "1.14.0",
        "@aws-cdk/cx-api": "1.14.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.14.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-EnTcllLJG7PBRTwz8hYMXTGS0GuqarqcwZvLrTHWuEEJ7N49U6ZUqmuWQKVY5rxAzxCHKQRxcT0zmsuQXVaglQ==",
        "shasum": "10009d7a30a5bd53b47aff026658a282dc89aba4",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.14.0.tgz",
        "fileCount": 37,
        "unpackedSize": 158100,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdrrIxCRA9TVsSAnZWagAAdooQAJkx9h2mLiiMPdlXsSUL\npYBeAl2lX75eqweAxT0JO3Y1V0/C2D1bmctc1Azro3FQtEJG13tLS52YPxmk\nCqIvpaAj9n2ilIUrDDzTWlqZ0KXkyjHFQL+hr0RK8qEXoer6WrAaxxownieW\npdC7NmrUnK7rkpnQ0rBRJScWekk44UnlrxN2aOlxx432uaFbO/PUvH5dueOU\neHWnn2p0E+gIp9lCLw/KyR07CWhDBXr+CbUFSKDB5T8yU2OWy08znuL/Cb3b\nUMi/G4iaUSoA0B8g/KQviuuEJIyY5Sl4dN+WJf0F2pL8bVzRpUeLRhOBqqX4\noDB0+TFQMEttpWiXpqzT5owLlvCSsbfGr2B6EEYtlg/yLbTXWue5/Y5Bk+9d\nmBeJQPniwfJcDdOUX+x7lLCFODjfPrprrpO9o4jI4utls+2aXljHVlWBk20D\nmlY78JdlMNm9zngyT59oY5qzJiBJ+Oqsrixg4LNHKSY3Y1BXzkzqiCO1prU3\nrxAPcjga63XC3fUgRp6Yi2Vs3F/PW7oIYM+WJhjCKmTJITBTmQalKyshjBTa\nECZ6jO15lSb1H6tLPdz8uc0XagzZMYJs5fy6wrc6zuKPplf0NYdsldlLloDI\nR2dDboNt5os7nZ6HPzCdcpelJmX34KmI+ZnKl3encUFhlw3A8dAE5bizmJoC\n7EIk\r\n=WOul\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDOaCdlsZ0S+3gh6ouYGv7ydUh7f9ysyQeaJzYL3WqcUQIgIM3B1BK89jkSl9j4hPi4FYt9Nn2n1bA2ZfydOtzgcdw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.14.0_1571729969165_0.5230979743617179"
      },
      "_hasShrinkwrap": false
    },
    "1.15.0": {
      "name": "@aws-cdk/assert",
      "version": "1.15.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.19",
        "cdk-build-tools": "file:../../../tools/cdk-build-tools",
        "pkglint": "file:../../../tools/pkglint"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.15.0",
        "@aws-cdk/core": "1.15.0",
        "@aws-cdk/cx-api": "1.15.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.13"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.15.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Q0NHltfvipzeR9Nm+8nV7ImSwGyt3jpiALzF4pEd0du4WzcexrTgR1a5CphveffAbWWwILRFZk0/Py9KO7pOjA==",
        "shasum": "d72b39199f6c05d1276077e1229792de93245d04",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.15.0.tgz",
        "fileCount": 37,
        "unpackedSize": 158100,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdturQCRA9TVsSAnZWagAAOuYQAITJAQ6VZQL4Wmxq0iky\n4+4mwY/Tdz7hYA40LfywotWpYcYX2dy4mFUO6b1QWu7RXuZh7QxiBaGgcxzA\nXsm0aeLbGLoMIEiidbz4Nz94FRy/rHav50McUhZfDZkVjUqIrwldjeEw0HjL\nAwfSk2QXF1TRmr56natXHNceJWX0zZvw4fAJLB0IbFroScPHFZ6WuPFFtNIE\n2cw1qJtY9oxGupC2ftMYGY7S2FLr6Pn8U34zGCUsuHRzUmMt/8NQG6Gq21/B\nBcxkFrdwzFOBh6KqYjQAG091YozX0OPs004QIYFJ7tLhPVaSij5raw1NLlcU\nrROUb1TfFCyUIAlQlq8sV4h7CQCyp2FwpNZkgxYERoZVECRPZL5xZyP9Uy+6\nJiQSWM/T8ulmVsgzGcDc5EN8nBLF4zV8Bp6VXPihG9/veoHiWdXCpEb1KCXt\nJlWljXWbO7Cj0TwoFV5dhxxksh+idd1INyTq6VyyrvavnBCaXOxKNXWn1iXY\noc5LdLF4z958tA6JtbMJxpzaDvCPNoUkGT2YVP2pC6zAuUrrOBsFsVdo1E4J\n0oZKVG67+N3fdCd2p5xoyiUqf1C+DnzydvxcLS2KP3kCpgWndj5DUxRYL+6Y\nJWkOm16W8zxI0Vy9LL/+GM/wk9OsYxlCVUy1ZJ55xjPaYzW1XHquWOwdQV2C\nbkZ7\r\n=B3lZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICuI5p1/ZRBCzKPCWObsUo7yz+/TZFMrpQUSpsxN0aYUAiEAwclZc+lHpLIQDe/+x5a8IKyRa/e8P8RfAPtYNpRvEK8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.15.0_1572268751619_0.016523361465187403"
      },
      "_hasShrinkwrap": false
    },
    "1.16.0": {
      "name": "@aws-cdk/assert",
      "version": "1.16.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.22",
        "cdk-build-tools": "1.16.0",
        "pkglint": "1.16.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.16.0",
        "@aws-cdk/core": "1.16.0",
        "@aws-cdk/cx-api": "1.16.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.16"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.16.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-9rOQDvisHABMkpd10sJmFpLLsp6sB/jhXZdccpkIwrWuidawr68TgS/cL8nl135F/0+BOENHfUfaMR2FirsXZw==",
        "shasum": "00291e0919596e37874d3517809d5a11ff962ae2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.16.0.tgz",
        "fileCount": 37,
        "unpackedSize": 158092,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdyaUkCRA9TVsSAnZWagAAvOQP/0XWQG3BlObwBGjlOI70\nqOq7hf63UbjPIIOSmdyu+nvi2JBmzi5DE2ApUPousGU3ZY5DHSBsN3txORe0\neEWl8LQjZzQxvcLoq30DG9yEf47PRSdKuDkcpBCKvipW5cpew8zMuz8wB68o\nw8UbJjAJKot9WRJ4xOLhm8tWigfhQIqEYjoxi/25bAGeLKNzrodBGoGfz1FJ\n2fD/5KMqoNXOUl2AjJ8LzSpFNSt01Vy4h7SC/p9hu6txm0A8xiqTz/dcnpuc\nWcOLq8KZG2CIocjpDndUMPKCOGwPBOmZ4DSYWB2UOoGhoduxOtbTYWIm5j9h\nCI0D/GFx9biXGxlFrzpJOtin4UGh+4PykkofcJBV/wu/k6mOD1usYEq+NyZx\nAqDL971IZXwhjr6EJ5XZGTpKlu1nBl7/WYSzX/bKC7A7pgtdcoJQ7bVkCYbn\ncp35lvHIm4FKrEz+JkD8TfUUnfbublrgU1TG/thICqaZDdKciNNj4Sd8Zn2A\nllF+DBxXhkXaydMTvQ5cNUuhvbfQvE/ZjKzYl4K2CnFc9l11gs0kQgSLW5dp\nBu1BiBpyTAHNoWouwUK9EOFwyQEiD3dNpV3yj2x018NEqHr0ok7CFpdTc3fI\nnv5OTSDDBFhJvZgJkiwf12jBNlyTJwl/hUtovcUURIEQN3SDDad9Sw/9cEqT\nSPHX\r\n=77et\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHUBx2wiwXhm1wfIeaibRF8APsphKGkMnLIn0kH82LYyAiEAoEtSAASHmcovHaF+Vv4Rpv5UClJqtEcQhpSST5/uqms="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.16.0_1573496099883_0.7285072138420603"
      },
      "_hasShrinkwrap": false
    },
    "1.16.1": {
      "name": "@aws-cdk/assert",
      "version": "1.16.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.22",
        "cdk-build-tools": "1.16.1",
        "pkglint": "1.16.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.16.1",
        "@aws-cdk/core": "1.16.1",
        "@aws-cdk/cx-api": "1.16.1",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.16"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.16.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-wpzikAhGKwEnhFG3Sp1L4mM3n7SsavbtrQvQDqKV6iVrM7HHl1OB3W8sS07/p2XlUuoGsJOIjp0nvq7OS8pWNg==",
        "shasum": "3779209423b802f66cefb145d1a6517bea879045",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.16.1.tgz",
        "fileCount": 37,
        "unpackedSize": 158092,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdygJoCRA9TVsSAnZWagAAS/YP/iyp8HMWRwOov6F28YMV\nN4++EFtyQXRcNJe2uqTHefIys/TIy6wVdkdytKsei1kZHf9bW4ndvid3E1YQ\nySpRKPehGZFf+htwX+NnxDqKrOvQtrAUzGHcv1EVKzreMwsdQ/x8rAsAAmil\nNDb14O3mKRGQEVStTf3kmnNE5eguCNE/XVlHhnkZ9HsvsXIVDvHi/PfTpQhT\n8msyRmoTfisVccAsF+SczC6SUAAXAXPSlDOdRHGyROnVybUI9A0djKONP7AG\nBeU0OEy1esFn2D629NcMWHt2iQoHRHZQBMmicm2Bb/3w2djrYoqeevjLvZk8\n13YD/VdIp5I5Mc+J+zB1zXs38E6DLbU1RfL6TeVZWB6v6g95jxis61fmjon3\nKb/TJYuyxE1kEcSYsKblGVnqDOu1xwNsvctJuSRV/lcRAIGvM9dKBH1NpjUr\ncUNhtSrVtE0Xmkq+07qJRoDccB2IkslTvz4cu2Jh2/xVGYeByMF3Pnbe0FZN\n+4zYXeHeVLs80KCDOk9X7EdZi8cGY4BW9fdQZJ9U2MUJd26/yqwUEa2ppO7N\n9g0ehw+3/sk3ZB8XDrlHPXHE6PSSvUHoxoGqGqMHmRLb12srZnkumcjD1ftG\nWK1xNsmZC7YID1xPzQ5DD+yMZEgKc8a+OM+sEZGo2PWC4ROGuInX5HmEoTjR\n4nHL\r\n=PwTN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQClZcmDHgBJIBxquQOypBRBGSz8y+r+3veUAhtqpylcNAIhAOtCOzFQuE98Fq7C50LePtRCDxYZdP5Rvqhe6O8fKsAE"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.16.1_1573519976350_0.20108337270272636"
      },
      "_hasShrinkwrap": false
    },
    "1.16.2": {
      "name": "@aws-cdk/assert",
      "version": "1.16.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.22",
        "cdk-build-tools": "1.16.2",
        "pkglint": "1.16.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.16.2",
        "@aws-cdk/core": "1.16.2",
        "@aws-cdk/cx-api": "1.16.2",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.16"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.16.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-WJfPwzLVutCbG6Jf3v3pSBbylu6nI9Zea81K+HQc8VncVK9O6L+rTmXExgUqB/6WAGLaqoyNlcbArqUGLGEbcg==",
        "shasum": "d03b8cafcf11112864bf9f7c433d9c701b9cde96",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.16.2.tgz",
        "fileCount": 37,
        "unpackedSize": 158092,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdyqykCRA9TVsSAnZWagAAD6AP/iXFznp67hgHikzCeTTP\nLMmDMCjyk9xTBbgPwG8raNo5WMn4sAZwbbH0XlZrAhcR3CEEXhQtzMotZ3lz\ncXMjaVBU4EIEQxUKMye5yPkG3lq/toUdipG0vuRJt5PTri99OiVKeAPbQlf8\nNnE9oZyBQJC5ywsr/F3QRMBSeFLPeY16JVuBmeV36acdn+ZAnDsdL20DzKTi\nnBGEobohGTxUHvjUmrSaMz/nBYYH7W2pU7OCK8j9i9IFSj0UEeW3M20qMS+n\nVVJouIL6/hK/8i0ePSbA27L3MEUokpC4uG/yEK+KUADX665dtY3TXqZvvpqe\nptKso+cSfphf07fDNbqP2lJmRHx5HI414Hg62J9lrSV02Cwp/TWZMlpVvn50\n7xTHjPp9uWjqzjbf9CXfNpoDSLMrTs/tNQr71KVPC02YoIqGsNhDnfwUF2Hc\nXb221z1mnQS1ShSzm5RCBrcr+zGpLI8Zw4GHTCugyq4ZRnsPhib3RtpgLys+\n7PYal29jO6PUh4BtiPH4qZSM03J4AJ1XkEg3xE7bkTuw2DtHRdZ3/XF0RsLx\nZoPrkkwdE6WAPDqaVNICiLpyE07iKiSzWM1OLDUUEuvvTIugTpiEz3zPf0I+\nTWV6I3jq+0+qLxvMbrs0cGZIg3+v+k6TWKyDz1DnBncIm7cq3TDuCtT8CpRv\nHRkr\r\n=OM/Y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBDUJPGMxP2f20IgIf0txVxCZ00yefzNIH9FOSqdsUD3AiEAuyIV0sAQWpR/UTfQq9W67LrwoUyNyKAtTaMpQkx4PgA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.16.2_1573563556376_0.04626333593806642"
      },
      "_hasShrinkwrap": false
    },
    "1.16.3": {
      "name": "@aws-cdk/assert",
      "version": "1.16.3",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.22",
        "cdk-build-tools": "1.16.3",
        "pkglint": "1.16.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.16.3",
        "@aws-cdk/core": "1.16.3",
        "@aws-cdk/cx-api": "1.16.3",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.16"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.16.3",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Glz7tKCvc7hW3tQtvY0lZIwa6Jl6MXs5c0mbpKfJjWyziiQ9CymYUWC43L1OBmk1hpot90Q2VCNvJBCV9ZBakQ==",
        "shasum": "f828b240cccbfdf05455a12080fb0ce839e5157d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.16.3.tgz",
        "fileCount": 37,
        "unpackedSize": 158092,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdzCK5CRA9TVsSAnZWagAA8OsP/RRBIwy9+mIx8cStAecv\nhnPN6hYkn7wZWLO1sd4Vg1dPwE0Af1CQhODUOJ7niCcloAtCX+5R3Fl0QWtm\nQkYRxbUNPO0D8QafzDywIXgJ6+xSBW208ypxmWZJbPs2hl9qw5W/C76W2ar+\nvi40aCmp+c5SiKEvWzgXdDNfMh+m9uVK8zJWAIky0oqP0XVYvM0xhJcxEh6v\nGi7HXPz2asDt04sZ9RiUEgpAFSiUMJjGEUl1qlSOPasYYC/zM4y20M52wJVA\nkcSzkhmwZJz68ZdBGTU2P6rNukZfcjlJQp9wroaCKKb8A5H93Cdmzt5harKl\nJS4/2xd3Hqe1DNhVhKyi1arY0pc6UxJph2UnNmHiVkdC5sF5SAywrMDKyxt5\na5JKNlby8BFUFEqDlQ228c9mDv1L1B/VLb9peL02ilMh10W+6KWpgfy2XBnk\nFRS5sr9uVISIZH24Pw0beuc0JxFuJ5G43hLr5+nfRP0lG1Cb4JVJwJsTvnP+\nuCRbfxSmtCZ8utLdUGhASB5ygSIlhFnfqx0c6SF07Q++V4OJPfB06NvjsLIR\nK/51B6VhsHp6FFsOzwQghA6JZkciwrgG8dpl9T95TXYRQVQPizDe+bqL0Y0A\noAHSX6kj8e6CvAxMZUY3sWsEFF9gCY5dSqyjU6asJI3ZqnllJsiwwyeqBf8t\nyL+6\r\n=bA7c\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDVB5OUA8fYaQM3XPGSjATVwxWJQHzwHSNLBv0l5+wDoAiAL/AU3QWYRhWYPjKd+terwvySkcy3I+1Qvunhe2xDLsw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.16.3_1573659321139_0.8432905116660911"
      },
      "_hasShrinkwrap": false
    },
    "1.17.0": {
      "name": "@aws-cdk/assert",
      "version": "1.17.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.23",
        "cdk-build-tools": "1.17.0",
        "pkglint": "1.17.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.17.0",
        "@aws-cdk/core": "1.17.0",
        "@aws-cdk/cx-api": "1.17.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.16"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.17.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-2R/aVTsZlzH3ITKzZJDVZR9ybnC1dQ+p4eIJq2yfc3qrOv1p73XXCQk4U2Shak6wK4bk6D/JKZ2U57VeK3uUyw==",
        "shasum": "dc4d20a5b0672f5b029ed9b7d13faf8b9f399126",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.17.0.tgz",
        "fileCount": 36,
        "unpackedSize": 157202,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd1C8MCRA9TVsSAnZWagAAihsQAIn4ea5OvIorC92WGwoA\nRk61j/na6IKcs5DXfqp35QEUozno7xJUllhYguNeS2Fm5ROqhWIELW+3A9ew\nT7pI+/m9F97fUiknEycCJkaxrkl5/FGv68a4PeGewYDXKS8xSTIlglkzqO0G\nYSOYx/lm4hwgG5bTPp+kNh9PdZU2n5ikokcWlZiHsKwj4oHScr9w0tgbijvM\nGeBYYHXtebYdBi92GTTIXzTJBHPbBbNeZlgIhngFPAAdl15h82ANsAWTQ5m+\nSMxnzKmG4iL+6BG2fUtFC3THHtoqZRbMN7Nhul66JiW2+/KYB9jEtYBaWGbB\nRSLRrHJHry83+y9EaMTrWKKO+yl+hFwparkp6s/LZmPicmTGROsPs5V3wv5K\n7KvaYlgMztSC6zWeNcrmZVnqVlInpLqEefutEEHz4G/7oXghlXb9BpNJdwKb\n5yF34TWpy9+exYcuxZU1nBcfxuzOBKXInYIavfokp6+wbrSbn4/7V1LXz/RG\nDh3Epr+36Zhm77WPFmAKmwgWnF+GrOey67KBUii/xgMzGjZeLaIPDulRbzUZ\nclxW+p05qxm8IoVPCX6ug9Eq43mpd8lqGQKGawIvM2uR1BfzUAgsHy/71KAJ\n1Z3r3REZsiiW8uHq7hjMIvVpF1PgUrz1K1LQwsQRfTyOcfI2K+tTt4hRS6Qc\n4ggg\r\n=p7OO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGUERUcSooksRkqB4k/yGXed4iqsR41Zbct1VJv0e9BFAiAceg0ZXPoCMDhEIugTl1qmitdWZVWXcnKHXY1D4SfOog=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.17.0_1574186763905_0.5550097667481455"
      },
      "_hasShrinkwrap": false
    },
    "1.17.1": {
      "name": "@aws-cdk/assert",
      "version": "1.17.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.23",
        "cdk-build-tools": "1.17.1",
        "pkglint": "1.17.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.17.1",
        "@aws-cdk/core": "1.17.1",
        "@aws-cdk/cx-api": "1.17.1",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.16"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.17.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-uyVHji4hrCbOLnuJfkwd7lE0OgO50baVnm0A4/zGpsQXzs7Bahn4rXzb6UaslGrr8bENxOsATyaSlwt0WmPTnw==",
        "shasum": "0d18f11f21386af2218d5ab5b8318a755f7e8475",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.17.1.tgz",
        "fileCount": 36,
        "unpackedSize": 157202,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd1GZECRA9TVsSAnZWagAApBAP+wcvsi95X0M3aWE0aKGg\nRyhx5q6BJq5qLfhriagI9NmN6m9iu9rUHwfDNrGJpnWqNYtG4ucuUITqcYrx\n935CaSeRh4qEd/W5P8Azfxyuv0yn04jE3y64Rb2GLnaedNYfOPoe5dG72M32\nhf3vQhcyKZC8Uo7h54+AH82AtoHCUtPfgICb7YZshuM5fvKXycR29YMXmLva\n3E0dTyKVRHUotOn8dlrv9gHKJV1bOXz0+r9C67GVX9ymSbEkdOS+mXjukS48\n2xE3Daep2PB+39eW8zOl7Bq7Yrn5bTJqoB/A18SRRWeqSlzmykYDJ+cv4XDA\noHprBW9kc5Bzy3bFz1d8M+OGXUliFc2QtYeJ8Dy0lQ8NWLKi3Z8ZXaJ6QitP\nMWI5ihJgPg3FQlAuL2+FGWFXl/Fkk5ul61tgLb+dmF+WpvwX48FKg+F5YadN\n6Rkh7uGBuGeIOqrb0oMPkP5nqDPnAzTG75iPkmYvEj47nl3dYQox57hJOk7J\njim0MHVE7FSwW/t5wMwRKoqRNo48vnZPGJR1pN4OyemaqQ8ldM5vd0iHMJ75\nbyqdH07FGbxKwa5vVQ/E3frhNQDPuzHaQ7NLw9pU9yQk+X/eIFVWiUQvvsfS\nNhmWV7IseydROwg3KFBwcL8owbsES42vL36O4YL4PD9zO7sX6+5mzyCH4IxS\nN8q3\r\n=MQ2M\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDW7S/QtKCEs8rkC8Oy77lgowiApvYCYKBPbZcX3GfIjQIgc+3kOXHadE6anPVVVWPlrfSBhzNFt9B64e0HjBWsu2I="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.17.1_1574200900065_0.5255480230834879"
      },
      "_hasShrinkwrap": false
    },
    "1.18.0": {
      "name": "@aws-cdk/assert",
      "version": "1.18.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.23",
        "cdk-build-tools": "1.18.0",
        "pkglint": "1.18.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.18.0",
        "@aws-cdk/core": "1.18.0",
        "@aws-cdk/cx-api": "1.18.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.16"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.18.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-kgg+ei+qUeIEU7aEeMDg1YQGowljmwFbodkArAoQYaueDSvZMvjUDW19P73H4aZ6216mKzqPpyyNqJeRcs3nrw==",
        "shasum": "cfbfab5ea4a794b555c9e13ed5f69d24dda79dbb",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.18.0.tgz",
        "fileCount": 36,
        "unpackedSize": 157202,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd3AWtCRA9TVsSAnZWagAAbE0P/1O90X9v7rPlXZMZ/Wg4\n3gF6T+GyT1BLn2zWAIOzmZsC7yrup1QMDOVfvNl3dNbwSRsqol5snlwixIyE\nNXTWW5e/4RivL0dTgpu+g+PfTVdhRa1+jL/sZ7n26uiqWYcihQoGVp2NY+iW\nBen+v9uOMJ+DMszDaW6nSIKl8td8EQKiAtwMHRwrQm7DEZ2bj3jRAsVLBLeO\nu7n1UawgachSaS83cmbvp4YrOf+LYSSybJRi5DRi8uSCgn9qCF8y8kd1hqHG\nzgqfgltlBNfEeNrRG2HmI8yDOAVdvstGP6EERnjZQYQahTgopFJhFzuEbUQr\nYcgAA0EyenvmtMb28mqXH0J8vHNtiCXt2xuRZRjZ15sJAtRuRSoScvflnaQ8\nbF54n2zGxg9U5a/dz7rYjvvuy70/1BgWuySbUvC5mObdDBKE18bE2XF/kB0Q\ngFegiGL9GdKugSW/pJrBn2hRNNyIjY4gz+shHu2tI5KhlUHLY8UetmDVpJuY\n3EdOTZ2nL8/1z7WEaZhzQ9Rm9lf9WqVp0EAhYf05egDeny70aPpAFOC6wheM\nHTQiWW1fNEksFSiG7aO6eUANIhRgyjlHC+TdFEpmCyQw2K9rpm1UcqinZejs\nYxeM38te1KnJ/7zf3mywJZs8H02ec0wsqEFx7n3PxPjX+kgfbh5wzNFN2Kp+\n6O0B\r\n=b7nt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC53sZgZ+/b3TgPdqXfuG67JPs9RQ3leSRl4mZvUzBS8wIgZEwjwJct3vz6+wey6Lmzq8dkHq0k096d582TgAZWV+4="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.18.0_1574700461035_0.30535566436830996"
      },
      "_hasShrinkwrap": false
    },
    "1.19.0": {
      "name": "@aws-cdk/assert",
      "version": "1.19.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "nyc": {
        "statements": 40,
        "lines": 40,
        "branches": 30
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.23",
        "cdk-build-tools": "1.19.0",
        "pkglint": "1.19.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.19.0",
        "@aws-cdk/core": "1.19.0",
        "@aws-cdk/cx-api": "1.19.0",
        "jest": "^24.9.0",
        "source-map-support": "^0.5.16"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.19.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-O8PV63G1/0ZGpGJITrRU7kbodkygepIOYIGjYxOrJtBLRyuNFZ/6ALw1VvsaM56J/1pAZD28IAZrSIX7DU1wYg==",
        "shasum": "183eafc39e33c6dc89d06dc7dad7f1104fbea56a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.19.0.tgz",
        "fileCount": 36,
        "unpackedSize": 155459,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd+PBGCRA9TVsSAnZWagAA/A8P/jy4fJhoRtE+BaOwU+rK\ncunD1+VIzn4c296ct6yfm/B1QIxZEPp8i+rS0cQMjsQXCeFHnlEEoZYUxMal\nkOU+2iOK052SkWvFn8eniwD8zwEEgV7gjZYu847C9lD8nuQh0IMjKKvUMihI\nG4xls0WDVUEW1y9nm2hEZ7I8/y7MzZqNLpMR7Ogg9QmX1m9DSVAD41Qd4Cww\nkikvvyInCPlO+faodD93gmIeXJFpsjxEkA0TohVnLd/C0IXUm5DC0ygXcvbg\nIrk5ltVep1z700kiXB00+SqoA9IF4iWhCdBnhvKSDkizcSwHXtZ4gK0jXs3Q\nwVm1L/nMkAQGTknb9QCtBcHtIOqa8Tli83mukoilUuK/Dh/tT7jNTc4QlnrH\nnaVZtXJ6/FaBOMkoZOYoZ5VqjmAEaI+kzyl4ZmvusAtXiOMCXX+RTROHUMvR\nrjbPldwKkEZq8k8oymaWHbloIoo0jIQqno5WtsH89XYQiLc5c93Bv8RHIUr6\nzW38kNt+gdfzPQnQWGowm2wDfQ/cs+CwRhtaQrl4IiqH8zHtPFHNT/SO7Qi9\ny3IwbMfSLWeMcT29DI56Eu5t2ICdUNGlpwX2ktimbZ0Eup8oHyYvmN/ELMER\nvKvkkgUldyI68PEn5JDMLpDnH23xUuJoEuxu9w8QPrBwaT4HkOMkBxVyfbh5\nf9i9\r\n=4XT/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDysmcx214phnhISbJyJSRRf00PJw2m3q/b0oFP/S1tcwIgeboeA6Ur7yWLmu3Ur10Sgu+mjPdrSmKBcZ5D10g6Mnw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.19.0_1576595526395_0.015090124408302819"
      },
      "_hasShrinkwrap": false
    },
    "1.20.0": {
      "name": "@aws-cdk/assert",
      "version": "1.20.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "collectCoverage": true,
        "coverageReporters": [
          "lcov",
          "html",
          "text-summary"
        ],
        "coverageThreshold": {
          "global": {
            "statements": 80,
            "lines": 80,
            "branches": 60
          }
        },
        "preset": "ts-jest",
        "testMatch": [
          "**/__tests__/**/*.ts?(x)",
          "**/?(*.)+(spec|test).ts?(x)"
        ]
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.0.25",
        "cdk-build-tools": "1.20.0",
        "jest": "^24.9.0",
        "pkglint": "1.20.0",
        "ts-jest": "^24.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.20.0",
        "@aws-cdk/core": "1.20.0",
        "@aws-cdk/cx-api": "1.20.0"
      },
      "peerDependencies": {
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.20.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-EKmVe0kgFos9ij2PHrPwodt5aSjJHnx+WaCgjRlHTY/b1FNMw0yo74g+8caDXUXRIPPOW/GPtmLtCyNAqoN0Qg==",
        "shasum": "96585aa5b89f29ec71ab692b4c05f67f507ffdd6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.20.0.tgz",
        "fileCount": 36,
        "unpackedSize": 154044,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeFR03CRA9TVsSAnZWagAAUzAP/1L/00ikXcF9WDztXOwk\nHQzBIjDh6adhXo+t19CgyzsD+veTNjaFQgJpxXLlyTJiP6+8Iy2BHSfgl0fu\nhBrtXXyJggle6W4CvoEZBYZbZ9H9yLUH6V37BpWJiYr3dK8qdOdsW1xcAOAO\n9XwfYLcL2rJo9/pKKi5bhg2COhCBDvGgLlA0V8+ZdKEWW3ePdUm/E8ZZ9ieq\nGcKzlUSsdv5G6v9dKO94UkMTqvzbI2p2/bn/XRKwaqRVHNSj/In5CLjBR0wl\nxpJJAKr2AtAPToVxz5PCY2jioA58GEDuVnhse9wB3aGaYT/7c4YZxzf6g9dr\nKzJmVFXkdXfPZsjTLTxnsZSBfpqbRWOALJKz04x4J9BoGQiZPyLUeqQk8q5y\njMTDNasw6LYt7rW34/YMkKQalqpklVvSZEFnALfiNZLVbk68odnUHsZwFsA6\n4FmLCEARjhHIe/Nrmcfrz3JUmoHG6TIiLROu4jWNo3ARWZeC4TMQp3nHlTOD\nvARJP7x5gD+S13GKXTSh5YF/oay1WEGOGIRY6hLnpZdK7+Mr/6mOibvAV+Zc\nhmDguSXp5YqhaiDx9R5zznpaizOpyd160doraOuQ/yAM9yoDVmsO+AaLlcv2\nj/nkL7iRcMeOrcfgLKCKtnZGIdWR5rwEI/7qVvKTFxlsFpdFs2DAdfSGuSff\nVjVt\r\n=PovM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCD510JsQXgN3bAu2ODpqs4Mm+D13EdLUOmN5Mbu6l31gIgNOB9YWo4+0KrMDnjS/IwOfMsCUvB/D/loiQrg7ykHAw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.20.0_1578442039010_0.8111058099561161"
      },
      "_hasShrinkwrap": false
    },
    "1.21.0": {
      "name": "@aws-cdk/assert",
      "version": "1.21.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "collectCoverage": true,
        "coverageReporters": [
          "lcov",
          "html",
          "text-summary"
        ],
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        },
        "preset": "ts-jest",
        "testMatch": [
          "**/__tests__/**/*.ts?(x)",
          "**/?(*.)+(spec|test).ts?(x)"
        ]
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.9.0",
        "cdk-build-tools": "1.21.0",
        "jest": "^24.9.0",
        "pkglint": "1.21.0",
        "ts-jest": "^24.3.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.21.0",
        "@aws-cdk/core": "1.21.0",
        "@aws-cdk/cx-api": "1.21.0"
      },
      "peerDependencies": {
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.21.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-mOT+551OAp6RoqakWxPJVnSSIXN0lSZUZG0hPggM5cURlfcBOkpsuEuMqfaXsi0ylltu3nv1fUDkh2G7iNgPOA==",
        "shasum": "44d86220db2e2154c0f79bb7932e5ad32ae6f89d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.21.0.tgz",
        "fileCount": 40,
        "unpackedSize": 188119,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeH9CcCRA9TVsSAnZWagAAzeAP/0SQ+lj4dFc0I0s0xw8y\n4OPhoZz1TgSJz888eZmdXNQu9isko56nFp99f9vTD79ZAu/bT/x1OQvNR70d\n8F5DH4l/iwrcF1zigeXj/dB34+id6XK4F2XzvX6OKPa7x/2AwCV6/3U05s6h\nnC3EXnYOW7sIFpGIWznWXeHubHkpTe0xnyDlhVfIHnGY9Qn0OcaXgweT+fd5\nDNkoW4rIGnyDx7mCBcV2zbu2Ukz5B/BJ6NE8OQrNGdnyscQHqOQXPqRQ2tMP\nt5t7weWD8EeCq5w8aaJWFmERG1R59iHJMiSGuM5XLGaZ9MGiaF7NH+/I/eJZ\nMKNr1B5zXwMBgpEhIaITA/L82ns80IScPlIwZb1D22H+j6RtMua/gLRQD/qc\nIEIasOAXviX9u89277rQjzK6eypbdfUa1pfuvzTGI/TefA/RukGQx2jRAzPC\n7qroE5pTq5clG6RfENFRZxTbM+pq9kRAupanAtOnR7+MbgiW0fPN82xPZ19s\nY3M2FKVjwMMuPxyh5XegPYs/AyxaOWCUXdl9adeP8Ul7uZmnAi1rghm+XqK5\noeOGCyh5bPwrqsSAy3Od9SglciAkMlBEDKnX1AP78BQe+hdhDJW86VJRScAg\nfQDqRT6NyduSSSQObFXQVHcfhjNYBgBA1fHHQNP0XPKEamaBJ1IAzeJHIgzX\nb6NH\r\n=YB9a\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEaXQZ9YT6XlX7yoS1riUJrAzXqUJUYBeITprtq9DmDSAiEAqoIFMW9WZ2AtNMDwSE4CMg+/IJyHMZRqrL6jg34vjNc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.21.0_1579143324006_0.8618438938355983"
      },
      "_hasShrinkwrap": false
    },
    "1.21.1": {
      "name": "@aws-cdk/assert",
      "version": "1.21.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "collectCoverage": true,
        "coverageReporters": [
          "lcov",
          "html",
          "text-summary"
        ],
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        },
        "preset": "ts-jest",
        "testMatch": [
          "**/__tests__/**/*.ts?(x)",
          "**/?(*.)+(spec|test).ts?(x)"
        ]
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.9.0",
        "cdk-build-tools": "1.21.1",
        "jest": "^24.9.0",
        "pkglint": "1.21.1",
        "ts-jest": "^24.3.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.21.1",
        "@aws-cdk/core": "1.21.1",
        "@aws-cdk/cx-api": "1.21.1"
      },
      "peerDependencies": {
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.21.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-CBqx4JxS4Ebo3+sToz4gN2SlKl3Q8c6EAoXXAmjqCkohBl1/icxewIsvCQzKl4nkku31o7rC8+2EdsHD66dVlQ==",
        "shasum": "e2731847feee2181ddeee3c11d18b82943b6e7e9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.21.1.tgz",
        "fileCount": 40,
        "unpackedSize": 188119,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeILv2CRA9TVsSAnZWagAArAUP/RQIHmdBR7kZ6ctFuBSf\nlgBtubKzM9nj56HSzJwGyY4fEW213ez0QtDpjCZ4rTvBEmGZyqYGzdnd/rRJ\nHxXvB8zqdJFU6USGe9yd415KtaqRkV+5/B58cQHgSg5lVOdlJs3aXiKZv6ro\n7yzmEZZQCiQO70KZ/b2TRCqrAtuaowhuMtk2vB3eosMkTinPPSKQQPeLsGS+\ndZ2l120G7rh9NWFHENLGFTVh0sM/UfO0waefLhzZhLRBMq8RjDt5gR3W9yH/\nVhpTsEiEFfj6IMs10Uk5O9Nec9ClSSIACE/Ddvkuhz1SS5Tl1WqcV45g7tTu\nzcHwuuAZTY0uv6dNtT3FMQyUxKqtgf4/piYmRnNV3A0M0MGvkqHJZoqVDSm3\nId1KOSIgWrJ6EslLv1N/Cr9zufSTwbjrU5EwbTq2oZe4/5hL4MOysQAB5BQx\nKvQMzcRVkr53dp/b+wrGtpFSn2FHum8IujElgn2R7OZSJtlZvvilLeI0XSCi\nFWjEBRtBj8iogeEV3BgpLYVGW+VmUgttDYyNsvfUy/yyRxmwLnbSzJXTjzVH\ncDgqzCfd8/PYlPimWT/YFsR9EKrrrU8AP+4C+fKsOqWhe7WCROZYC84eHa2W\nJixk2kvH4e/BJSTOS42AP1aY+db292tsJXAH7HDc74fFXPEeNEtrctrTSupS\nMc9J\r\n=owNL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICd7yutQwXAiYmK3vyqyHgE/CmNZ8LqpEgBUveVd5tcFAiBDlQa0qOdGfy9V3Rnede6Oe0kKu4jMuFS7kpQfYGE3Gg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.21.1_1579203574001_0.5673712451728028"
      },
      "_hasShrinkwrap": false
    },
    "1.22.0": {
      "name": "@aws-cdk/assert",
      "version": "1.22.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "collectCoverage": true,
        "coverageReporters": [
          "lcov",
          "html",
          "text-summary"
        ],
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        },
        "preset": "ts-jest",
        "testMatch": [
          "**/__tests__/**/*.ts?(x)",
          "**/?(*.)+(spec|test).ts?(x)"
        ]
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^24.9.0",
        "cdk-build-tools": "1.22.0",
        "jest": "^24.9.0",
        "pkglint": "1.22.0",
        "ts-jest": "^24.3.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.22.0",
        "@aws-cdk/core": "1.22.0",
        "@aws-cdk/cx-api": "1.22.0"
      },
      "peerDependencies": {
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.22.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-f0dzutxLHYAldKLfdGDedx4ot145Jr2u1mj26FaO/W+DmqHP8ev3bq4yJZv8ZdvaiLlIrXyodtJGxuW7mVKpIg==",
        "shasum": "b9b7b2feefdcea63e8755a13484a332e215ab40e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.22.0.tgz",
        "fileCount": 40,
        "unpackedSize": 197748,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeKfC3CRA9TVsSAnZWagAAF/UP/0EfWo6iJiyJ+kLDL0oO\nQMPmhXxtixgy7i4TgHBaQvkPPRtsTEozZPvRHH2GLvsZaCMVzVuBFnFoOfDl\n71YfWkBU1/m5wJyHn4EwEbzu3AcL++cQF8hHqLzVJNHCuStS0LliLMmRuVUF\nYoP+9nlkI2demjApW4yIQJphFPYtu/BQfvhwaJJmFKzHc1i9rosf4+pT+fzF\nLHHLHrBM+aFHJwTM/gsgR9XFH8KxiJsI0crohB+uyCNFvIHIpmRZJfjo1rEJ\ncrX3CX8YG4mEZf0BmQFK4UalWycSq/EqZx9RqeM2MvDRt1imjpOzcXdOLSFN\nJxAe5mbjj69FOVgC541pFw15RwFEhUlZRXUAcTT/P3dXdZKI3ZJ8gqvXUgvJ\n6HBzaUQJ83got72DaNc7AetimFaSBhblShpnPIFDFyjxMc3vwT/RinHlXU16\nKppoCrSHUA7Z/GVtfsGk70DafoaYQs7coR8kHrqjV9B7+6E6L6zCSjIKDgp3\n90XVNOTRAWj/Tnq9IAN1DXlC3xYXQHZ35XYfxTv1TCgl/ITFeu0AVUQnT78U\nnd2npJcA1nMMRAEzpjXbJjdkPd6Ta7mD0Cakm4QdxxAmVhl+Mq6CO66a9m5z\nhM62mLBs6WDvYWK9wSPBVEvghc6xT96nqw5nIHxA6oP6WsH05eWDW3yaDUn7\nB6st\r\n=+fX1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCXtEukJD8B9OYlm28x5C7hVBJqZ2ztotxrb203k0+nLAIgFPlZWC+dW/MEO6/41FI+aQl29pRTmKguucTFoaitakc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.22.0_1579806895834_0.0751203275117891"
      },
      "_hasShrinkwrap": false
    },
    "1.23.0": {
      "name": "@aws-cdk/assert",
      "version": "1.23.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.1.1",
        "cdk-build-tools": "1.23.0",
        "jest": "^24.9.0",
        "pkglint": "1.23.0",
        "ts-jest": "^25.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.23.0",
        "@aws-cdk/core": "1.23.0",
        "@aws-cdk/cx-api": "1.23.0"
      },
      "peerDependencies": {
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.23.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-LknkUwdINU6T+OMAlsuoabooOw+wsoOKJZ6TDaeS1wqJz9GlToofcMpT1MGh0wGLJhV3y4ZC93m/zw3ycgrERA==",
        "shasum": "a9587b9a4bda0d9f33896e76339f15333dcefe46",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.23.0.tgz",
        "fileCount": 41,
        "unpackedSize": 197773,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJePN7qCRA9TVsSAnZWagAA0o4P/34J3HkA9TCc7zsKEb9o\nQkaUShVHd9aJoq1nGvGYG9P2dbkSQXkX0//G0iP1+XxA6WQ4VUajZQqJt6T2\nekfCZVnWb0/rA6j8pBy5J05h/0lv1VsB/Y3STge6ZoWf3be7Lxgx5ldWqtl0\n3GMMU+NkeZ96Ywjq0c9PLApWlGRgM2Jp8CYXLAfuUQVuBlpUzxJM4FiUJFE3\nBvrY3hy1Nou+dG5egLfKI1vnhqZ3+lTZduPTKgsXW7mdd4GmPvQ4VZCG7IwI\nRFlWdwFIuxqQuPE2uvnDqnfLbry3Slb0+66iXHyO3K+h/lmEfttya4DtCmpT\nv1z2hgHmYBcY2FV5rybnHu6qJGCTycG0cocokhwHgaUYTNo6SkGYocGTw9uM\nmeuBFkgyfYpezXWjxIe7CrKL6n+2EBhOws1Ll/EpnqzRqNzNiMC78tCoAgfi\nR1aNxdeQJWi092rRu4NkXUjUKhHtyZ9D9M5vPVIAM/6EBMqlZpbkhwdIZbZ+\nlyAm5fbQ+2nVXRo+h3XQvn0k7AjEUXkU2w7fC3adV6cWk2DQoXnvpwfW73U8\nkEx7LYnLjHDl7FEqgu5Xu1s+Fr1y3yNO5A+3Y6sMJV39i8epWkfy1sP+2jW6\nZRfI6QhvN8uAUbIsrogqBtEo/ZjjfuJ38lmAk8eMzGs4bTxG5atj5ag4J18e\nb6yD\r\n=qr0b\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDzZCqvp5QeleNzaIAoltHTG48HykQewcgXlHIObnKQUgIgT6gjBa6g2i7S5o5GoSSQcLdIv+XyHo/rqEcrHQA7M3I="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.23.0_1581047530199_0.5308363815880417"
      },
      "_hasShrinkwrap": false
    },
    "1.24.0": {
      "name": "@aws-cdk/assert",
      "version": "1.24.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.1.1",
        "cdk-build-tools": "1.24.0",
        "jest": "^24.9.0",
        "pkglint": "1.24.0",
        "ts-jest": "^25.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.24.0",
        "@aws-cdk/core": "1.24.0",
        "@aws-cdk/cx-api": "1.24.0"
      },
      "peerDependencies": {
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.24.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-1CsDK3eRPalNiXNF3p6PkZHgjznum2F7NcG6FacRIfTp/zlcEc4AsGYYU0mrejK6fi/xwYC4672qISLN3cztiA==",
        "shasum": "6af09955298a05e283031dde6b8113c0d37c8995",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.24.0.tgz",
        "fileCount": 41,
        "unpackedSize": 214947,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRnQqCRA9TVsSAnZWagAAYzcP/21NUvKIcTEiCa2hRuyg\n1PLB4QrmgK7ywOe4iKvHaT0TFj4+YflpVhntFkg8+273wCQ9XqlqEvrq1SI0\naqSRFH60d4pTo3K+ZOm6s3nhMo23zZF0JaCEZXOTtPpP006Z2GS7dS8bFiwA\nYW8uLtDu/8evV5EcYFTx6Mvucb+NJfTd2R+nWMt+bCar4ocAvZob5RoOJJ9P\n4MYotSmZX7L8rUUDeRMAINd7ZTNSFdx6C9NJuMw38ziCx+6A9GZYEERph7NN\nnNX2/YaJmstOoatHPM7gpMYPZoZKSvoRUbFOpCsVbW1rTZvGVXg2sCWvW29M\nQHe6nxRSaWt2YszTrJ5wM20YJ+zcmLotrJlmCTuzg7OKlOfMH3/AoCvk4SVl\nZ7FIfs2EDIq2Vo9n6FatxNkPj2O78uAoJGHhpZWj9lbAIpp7DatPulfwaGf+\nX3Mmmns/DkhuMmvM/4FslIeWccuCR9TXMfL2dttLCgxkI/VDYDZa9XkfHw9o\ndH6mvo3M5kp1IzDwXObqL9vUzvsRiB4aYV0hcDUHtF+3ywG2FulS9piJFoxI\nW7UqTXc6/MHDQq993TnuG1RRC1n0upv5RDGv7EFA0eOAgfDuoIpuXi/HSK43\ney2L9NvpezogQIJieWpIGf+hjg2ekRy/w6xYQNX55qRRC7JX8MMKNhBGcbhR\nPLRK\r\n=gi8m\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDJcLupvOU/p6NOceNaF4TjmLovscEYmvJ0314nt5EJUgIgdKdK90TrAZrmsH9LmnOwSzz61uId3RUTXqSB/llBZ+M="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.24.0_1581675561747_0.5558888927608854"
      },
      "_hasShrinkwrap": false
    },
    "1.25.0": {
      "name": "@aws-cdk/assert",
      "version": "1.25.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.1.2",
        "cdk-build-tools": "1.25.0",
        "jest": "^24.9.0",
        "pkglint": "1.25.0",
        "ts-jest": "^25.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.25.0",
        "@aws-cdk/core": "1.25.0",
        "@aws-cdk/cx-api": "1.25.0"
      },
      "peerDependencies": {
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.25.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-t95kiBYkJ7J1wwDPdK4GDodZNjmr6ohSm9FJDjUBuiUY4ofGX+ivL84niP/ANSfoVI4ZhWDDPxO1DRLHrjsLxw==",
        "shasum": "2bdc32c8df7dbadc7982f902bca2d65b90d74c0f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.25.0.tgz",
        "fileCount": 41,
        "unpackedSize": 214947,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeTQbaCRA9TVsSAnZWagAABO0QAJx0L9DKKTcLi0x2pTT7\nEXEraEby3Lt1LX8PGJaZg3t2S1DydQUgrySeOLJHLFX6Nj5VttI2f0EO6CrK\nmwJ7SH4b/TycB1H681IrzIccul8gnno3xB5Lri3JQyNwul4qkPRQDr+0ASr0\nS9ips/+fT4JAoXQRj2z7FNo0zphOp5X+gOIqrm0BJ5d5wfvipxAye8dHsw/u\nIX4Q4VnG8q0600a6QBwGq6t/Dq73XrBR+ID2uEuvwdEdwBEAVyRXdGvCtyaw\ntLhA87bAE/tZNKowACOT8hAqyhMzOGMyPKomwhTTrBcKkxYZAdro8OpitOBM\nGk2k3rrghNOeGCTi0i7UZQpTeEYVcG2Ak2gZ4gOWF+oq34Ozz8XsESSjXB0H\nN0xnyZ264FhCn/ZIcOAUzNcNOFakXe0mpsmkMvr+uvCRXZtsNbtFI9fwkYKz\nSC2ZdJruop9bbi6dJHm1fnQu+U0oRFqC6wRBngZxB+QYoAJ/8ghvbX3euUbR\n+TmzwxbLWcKFU3ViDTQj0wV2KMViYzyy+FCW0ti8QqdjgwXpbtk1O5GQhQiw\nwSCzyMXtjkUC36aomWApvXZqGATpQZOQuDWiSc+3/0GFC/W5pqFCUJ1BvElQ\nHXSpd1G/CVne9KTKziV6lGLAZBW0BdJYZEn4Sa2WDHE6dSlxFleAOVaCNGZK\n+beQ\r\n=rGPq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGGMuPit7cy8h3K0XYM6spb6Os0xUX5csZWSLomQYVJoAiApvfJCAp9zNjCMXg8ZTv4MHFplGin+G0d8OOsaSLDmvA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.25.0_1582106329571_0.6631633767073528"
      },
      "_hasShrinkwrap": false
    },
    "1.26.0": {
      "name": "@aws-cdk/assert",
      "version": "1.26.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.1.2",
        "cdk-build-tools": "1.26.0",
        "jest": "^24.9.0",
        "pkglint": "1.26.0",
        "ts-jest": "^25.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.26.0",
        "@aws-cdk/core": "1.26.0",
        "@aws-cdk/cx-api": "1.26.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.26.0",
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.26.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-kP1K/0O2VBRDYmzZdeXz/QP3/e39+10oj3SoXn3sZn1WH8M/W/rmuBeChV1Ijd+WGouf/1xefaNXQu2slO9IDg==",
        "shasum": "90f77e31bfd4205a1bfa1f40d5b4e32dd20fd5e0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.26.0.tgz",
        "fileCount": 41,
        "unpackedSize": 215096,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeVkJ+CRA9TVsSAnZWagAA3VsP/jG2GNy3WnKqfJSlA+9h\nzav98QnPyr9Mr0uPNkDb1LK0Y6ELsO/zrRdnY0Z63wvxq4wWiqdVMjT28xyD\nJV7/fRJXRHSTG2HkVIGKgy9FmlJJ7Gv4c0CIb93K/WviGM91zJdMdr+liB8k\n2dz4D7vAly/8kqdEQftmKiwtjkyDt1XJRG/zR/OEueMtjD4pGc4RveWJIaxQ\nGXd2sQ+HkUgttcf9oqeyNAUZ6Njn2GMop5KtMiIzXoJ4XNeN6KTMNYGg64Aq\nYZUQnWGuLibRjTb0BMjBqH1lmQsAqfFllq8/zF+hjpNJ5llurX3p6ycqdB57\nXPdKJtstmhSOB3KtsNt0cuu0DeRdsZokIQGzIkO8gIKmYF+h2A1bk1b9+7hf\n2SyecmW8zKkXUwGtUS+aSppjJvvxI15NI3pzCLcKTIdfwMLoWopLzTERq2ad\n9u1fFy3i3aedA3QL7I1WzlMUUlN/DpJOsJoPfbTg+ZtmE5750xwaj3NS6CUi\nH/3FqW8HVrl6ffovsf7vrgLJQwtFabBcdT9v5YvNhYm5qMLB8WuoJ3h//cMd\nNPtBpPi7SiK3lnhwy/KV0gW1Y31cANuebaNmfGUBsGAy8rainYtx5W817EIw\nuBLD+26RQOvk3Z3mvt2d7hg+j2lN8Rb+C6wS5Lr14m80VUsk4PoPRH/Hg7GW\ntJbw\r\n=VOOQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFf7TUJADM0ywr3UY7+go36NxjSB2mY5OsCJCUGu7jOcAiEAl0OfG3P2H22cXe9EiKs70/QGJtmeIevE5swyUar5OQI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.26.0_1582711421760_0.12633716094587588"
      },
      "_hasShrinkwrap": false
    },
    "1.27.0": {
      "name": "@aws-cdk/assert",
      "version": "1.27.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.1.2",
        "cdk-build-tools": "1.27.0",
        "jest": "^24.9.0",
        "pkglint": "1.27.0",
        "ts-jest": "^25.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.27.0",
        "@aws-cdk/core": "1.27.0",
        "@aws-cdk/cx-api": "1.27.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.27.0",
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.27.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-vA78/ttLD0k0toArMwNXAFx7TtRCUyDs+YjI+KN7jXv+D9QkwOtD0KBEWJ4DYHgQlEwghd7fKFWypBlDSYdTHg==",
        "shasum": "228768b99399a288efaca82b46bf4813987a8c0f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.27.0.tgz",
        "fileCount": 41,
        "unpackedSize": 214734,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeXlJNCRA9TVsSAnZWagAAds0P/jSscqe+j5CMobMmgN3J\nZ8XEO2eIJJJV8kDfJBmvTVixIvtW/ZwpFYO9gSBU8UlcktIVcurKDWr6emTF\nFqUBIZb6lKjO0W5TlBNffBMLWKMjA8n3UE+ZbYLQU61179y1QiraKrndxII5\nkv4N95+4U7pA/jzo5/GaSNV8JSxvabkUTU1sz7FQhjKK8LPR9rD4kkpXNf23\nMELxnpbbBlTqT0qzILOOfP8vi72BUKTaM+uQOQBQRdEddSd8L4wz8mCSmcN2\nK9+ZDuo8QN7Jkw/sAWD+gg4s66NLbYOlKle8Ugcid5HTRMz+A7ZgSb6vD05T\n8qD7GhZSfmHUqPDQCb2IdmTjC/s/+zyzWwH4Jq98gxzJLqKq0cC0nw8N9dM0\nbboy8msUDNSPgzaoJHHEZbuzu3T5iATDU5w7tBlzvlDv9yjMDUBLWXIlYL1J\n6G54Wh67FXiMf5EqZirbcWkXAzTRYeZrZrMPcjY0xPGxjJoc6wrq5AQR/1Bw\nVMzNdXjAXcApx/9w7A1k4HBLYG/XFo9/3zdSDN4UJGCaHoasqTuPBzg+NNN7\n7nzFbKPXHQiAAWRrV75POYm39v0ZqPvTmIFA/uxV0ETgzTh1uXKB671YIeMt\nEymlW7CVee3AndfzC2dL3evExMWWZH5M5j0/MrC4ARnAdDQSsoomRlgdnP+1\nOAgC\r\n=xv7h\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGuU47xhoO6Qi/zaR06rPBlhBShEUharzeyoS/AU9RD7AiAk6yHtCTyls6yB0orgCHntRy8MeS/bfBJH/vCDn8mEcw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.27.0_1583239757190_0.9065049077166427"
      },
      "_hasShrinkwrap": false
    },
    "1.28.0": {
      "name": "@aws-cdk/assert",
      "version": "1.28.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.1.4",
        "cdk-build-tools": "1.28.0",
        "jest": "^24.9.0",
        "pkglint": "1.28.0",
        "ts-jest": "^25.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.28.0",
        "@aws-cdk/core": "1.28.0",
        "@aws-cdk/cx-api": "1.28.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.28.0",
        "jest": "^24.9.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.28.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-R5dgdYSlFwqDQOYxXIACQz+m6zob/m9VM1KVFa67EEiXseFUkK+vSNcpX/u2NXOfLucmIIfAAOLL9gzbzzLOLw==",
        "shasum": "fcca30865b324432a32fae3650ccc21a517e7cfc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.28.0.tgz",
        "fileCount": 41,
        "unpackedSize": 214734,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeb0r6CRA9TVsSAnZWagAA+7YP+gK3yB3A2/UzbE0GppGx\ns3RoHfKxtWjxO4yUrcewKqaU0TeIy27bCR466MlZO7jYfR2M3ESK0rqXSQl3\nV6yS/W+oit1ZHO0FR13Jp8CH/gwLdtSFnH447X0kRUIRoG7/trfgvnRIpqO4\n14jLGDRQKMkhMXW2/pts33lB/teiI2qKqxM2bU22+EmuyBfE8qA34uChvsZX\nzhF9GgdCj9O7I8XB4oyLM+OHuUHins5HmEQL/ZkElJQZGN0Fw4OXuTYbk+V5\n7GIJlOc6Z8GnTyfcSh/KRdaylifV3rTMR3itMyD2fV73DOEG2IXuj1IrdUIS\nzBkhLrEeRZqNfD6m7IBgYIPK/y+M+qPaczUTS5miw7+1VK37xFxqJ6+fg37z\nT6oZRevO/ke3IukW8Sze/Zy4KYjW2YItpOYWbAlNm+objR3+HXGgeC58HF51\nEAHrgnxtGBA48NLGlmO3x4VgSCgeoiFHqKE8T1r1ux8QCJjear0l8KgEOeak\nYcD0cTYksyD6Ko9SqAP4lpd0j9AtI+9nzj+zuvWLWWXdNiKOKxG+rRtHiz/C\nEi57imqcdZh4nY4ipyUjvQs4h66IGDjb+NWxMLtKRZwjsVCLx4tw+CTGhiEV\nQ85ctGasumGFeracLbaq4FjSEYnLhj5Djt/+3WGi/lBMFGEhkelv6H/Yj60d\n3+kf\r\n=G6D/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHWxG8AOz+lHuHkF3ChXpaN+jBlfAdyKPJipEYAL6WfpAiBeDmXLedmswlYkHA63W6CHJ7c9/v0E2+UMElcNXKe0pA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.28.0_1584351994042_0.18505883813594282"
      },
      "_hasShrinkwrap": false
    },
    "1.29.0": {
      "name": "@aws-cdk/assert",
      "version": "1.29.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.1.4",
        "cdk-build-tools": "1.29.0",
        "jest": "^24.9.0",
        "pkglint": "1.29.0",
        "ts-jest": "^25.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.29.0",
        "@aws-cdk/core": "1.29.0",
        "@aws-cdk/cx-api": "1.29.0",
        "constructs": "^1.1.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.29.0",
        "jest": "^24.9.0",
        "constructs": "^1.1.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.29.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-DiIOxI8171L1ci4//rUsBpdkezk9NquDh0iaSnVsDv+OlFfDzgs5tJ7QEmGK0OMvGNQb8GAlMzTOD4S+R6HrJA==",
        "shasum": "09f4e6db470c3e1286aee74d35a7392a0c430ecd",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.29.0.tgz",
        "fileCount": 41,
        "unpackedSize": 214790,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJecgbCCRA9TVsSAnZWagAALR8QAJkfmUQKk2UOUCaEL8jd\n2PIsvkPgF5XeEPVwWu0OYT8phhOE3v50c0iws4yp5LrB4ozbQTNnh3Ev04Xf\nBIgmBGldHxAHOyutce44vPmcdGGp0s+SG93aUJwtzi2IJNSxtGg1c+Wbavkc\nRb9hrGFJKA9YEtE5MZTc/SEkfOf4tHAlnSZTAxaD2EJ4qyqLsfMFRIkt8p9D\nOnvGVh6rfPPmoKjqqMbkZeLsbcGdHRwufb1EK01ZIL2/dVaCEC0xaN65Yjyt\nhvrnBsLi4dwA9oROkXjAqkvtVExsG388hcVzeVYY3zb4I86RAGAO+bmrnpLb\nf2RI+zjuYwSu2ORXK3Wt08CF5siIc6zrctKcSE/4EpJmK9yOjLRWqUAiltO/\nzf8V01ewqfHI859Jgb3gU/GIVsMMMQGakdIgr8HyY090NBjlPEAQ+D752OYe\n99z59wCRTVWfCARo5pAi9UB9Ujcrtm4+VpZPRyh0FMyRMTQwxFwg3ySdKJ98\nl0J2uyLtZWQ6mKVSLScFkIwj3pZCp85ze/tm3KRUJfdNj6i9mhR0Ts+jnzQn\nnlqfbx/WYF6n3ua646T1vwB5ErY11dedG7Iu4Pu6islISVLHo+wsfRhPh8nk\nWqWjTSQgtXdlPhIWnijS4BBcNiu+R7zpyP17XkubadSxLtqM5x9UHU/Uqqhi\nJiCI\r\n=vyLP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCID/2lls9IjN48hTj+3OdeA2pxafYhAZCHmhD8RXr1iORAiEAh2GvrPQas3j/FQ0/xGRQrulH2x3RjdZ8+oCuy3rLa5A="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.29.0_1584531137994_0.18849688372760598"
      },
      "_hasShrinkwrap": false
    },
    "1.30.0": {
      "name": "@aws-cdk/assert",
      "version": "1.30.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.1.4",
        "cdk-build-tools": "1.30.0",
        "jest": "^24.9.0",
        "pkglint": "1.30.0",
        "ts-jest": "^25.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.30.0",
        "@aws-cdk/core": "1.30.0",
        "@aws-cdk/cx-api": "1.30.0",
        "constructs": "^1.1.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.30.0",
        "jest": "^24.9.0",
        "constructs": "^1.1.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.30.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-bFTXa7xfiCC2djJ2HAvtKrGQailPGmW4t2hDn5lBOFZNllrE/w5dikQ+pkwYnnUEk5jcavM17V8HYzht5TarJw==",
        "shasum": "2e382e54a5cd72f672a1a779b0da13ba2dac0dec",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.30.0.tgz",
        "fileCount": 41,
        "unpackedSize": 214790,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJecmRYCRA9TVsSAnZWagAArw0P/0Ih98xpXMsWtHi3w9kx\n7KLQ/jMH8HpSbU7aThKGRBzt2dVX75xa4Pfe7ALx2RUUc9JvjTWGLhT9jMlx\nc+0mZXZizHs/4wYya8c6TtcnI8FnwipfAmQvA/dD7hHblcvWRtu98xa5v3oe\nzxNmnLwpDDu5nhNSNOhOiWXLh320AKKTfWseHXCA5uPg+Kg3xnr/4jrkRS6B\nc6H7mA+51/MMpOoRcyKN7cAcPrC9SxAMdtB99riavsG8FyUokfJACZapcNvi\nzyPHrpYT9Nxr4aRG7SNigBQmWfhwqBSwYVnBJuO6f+QP09JeGPkiD2wiPysJ\npelUYwBz+YuddeCpO6Kvj9O1EcTAtXI/ypu6lXF033wzHwog5le1zju7/eB1\nUeFgnbp6Dk6J8ckSloZNBT6zD8xvuloFIkjRzWAVMxl9uTURr8ZqTJoUDkv7\nkYoA3myohf5ywb8PSKgKF8NBkNywoWgiDUbsVp5jar7Git2hrW1hxyB0AKOY\nP7A/77i+DCO+5z8orFhLI3QKIB+Q44DjoMi3S+/FYgN7XpiV8SQnjt2S0Jip\n9KL4MWz9ds/9Pjfjger5SEoK4zzsinufINPEFeG6JEKO27q8jI0iDRlJzjfg\nmi5IFoSQi2YsDAJOQWOrfrZcgcsgo1i12iuPunN6k/+ESHPsxzVjLSG/wC9y\n53HX\r\n=vXBw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGBbdXAlK94rqR8blf7OkPsp3//gikLzniHvVf0t8kKZAiEAsXW7ZN0kg5VN9kXdKk6O5Mlo6YScawsR4f45SejGRKQ="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.30.0_1584555095563_0.2798887093618221"
      },
      "_hasShrinkwrap": false
    },
    "1.31.0": {
      "name": "@aws-cdk/assert",
      "version": "1.31.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.1.4",
        "cdk-build-tools": "1.31.0",
        "jest": "^24.9.0",
        "pkglint": "1.31.0",
        "ts-jest": "^25.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.31.0",
        "@aws-cdk/core": "1.31.0",
        "@aws-cdk/cx-api": "1.31.0",
        "constructs": "^2.0.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.31.0",
        "jest": "^24.9.0",
        "constructs": "^2.0.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.31.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-i+QlEc+QPCTs09Tz8K+Uc1bkgchnz00oprNs3v5stom0s4LcrA93a0TL0itnJSHh7rPq2NIrzJurxi2rTr/nGA==",
        "shasum": "64b636a4aeabfe767382e35c7f5dbf3617865b97",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.31.0.tgz",
        "fileCount": 41,
        "unpackedSize": 214790,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeenoWCRA9TVsSAnZWagAAzpoP/RXccioDFoDfF0kzrasL\n0VvdsHcrMQvpquEa30REkk8JtSEESqFRzkjEM6SlkejWHKkEPUYzw6DTN3TM\njxTUO0UKJmq812khtfUeqnFeH+wj1UD2AH5+2hebCCDW4yVD1vd9rAFqrFhu\n3+KT3IzrBGtpH1HJ6jbyiPYEA0yCNLi7GqXNMAMHBVbRNODbRP6k7LmGgP0H\nFqHuB4+iU6bIm2vFOT5KCzvojFVCDRNLkWNa1oscRQA4xamzgVedQdKKr93i\nGmUDnC3rseA75qTbg7S3kk1T0EWp8Y+nkmkI9/mvaO3ndgF39+tZm/UebuE+\nTni9iojzMxPREhOf4ZyEWcGJKzJXV+F+oOQcsV6+4Mhi0gpcfM2WYsrQqI2H\nvxJsLx7TUqchiEiAWou59k0RojpnrrDRLdAsJV7JyeUiOFLblZUuzlfrzlNC\nfQjzTa+90O3vwETmIeOmaH5tXZKAmjJ/4a+pM2IJ2wcUnPBOB93g4RZmBahG\nWpKGxTvYNBkPmWSQue52ZaHzrK/coSbp/6JHy8i3qaCdGawt6ZZ42ZEHGyRt\nEgv2v79clgKfjbgtiLH8GW7KUz2WvszuSfbEAN6vRGzcm9TUHgYWR7AhQ0do\nG0DcgnmCh0sSpmYFgnyXnJy6MFsjkf7qkuZaOZ/H4Jujuh7WTp4XiY+/eEya\nPQIC\r\n=581R\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCskZ/56wnDRmOfGSVpAYlgaH5Pt4TBO+QVLNfyN1cNEAIhAPTxHgLbJA9EPVbrQcScMG1gAbd1/JZnrQHLFcwwgHfo"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.31.0_1585084950141_0.9490076446572364"
      },
      "_hasShrinkwrap": false
    },
    "1.32.0": {
      "name": "@aws-cdk/assert",
      "version": "1.32.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.32.0",
        "jest": "^24.9.0",
        "pkglint": "1.32.0",
        "ts-jest": "^25.3.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.32.0",
        "@aws-cdk/core": "1.32.0",
        "@aws-cdk/cx-api": "1.32.0",
        "constructs": "^2.0.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.32.0",
        "jest": "^24.9.0",
        "constructs": "^2.0.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.32.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-b40exxNv9xY02QJy9jTTp4cv/U89o/3kFxAxBXhEIRhk4Oh3iEiZqJjEizO3kRmqRWxhUIsn+xD6LFbcgXVHvQ==",
        "shasum": "33a3071453735416a14b7628db9256e1294e7b10",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.32.0.tgz",
        "fileCount": 41,
        "unpackedSize": 214394,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJejICWCRA9TVsSAnZWagAAdtwP/j9xPqMQ3uviMXfKh1OA\nEqYd7Oh5IRhB5sqbBJ9PWgor8g3f2tSjpe6UgAoa39M3T7XE/wZ15wZgXRIa\nKihrN1kYD4XOZ1H2vfMo6GaJGgXFvO/v7+eF0HhPNqmBbLnsXhjbvtNn+ksS\nQBpInYj4u4aDOsZ/WNsT+70TiVsTz27D92ptNa6U0x/RwD5tvInriCoEtC4a\nQ3L1QLyJy6iC/5mfZLohHDeo9eQwfJH9dE6KkQ9ChFsr3f3c8TlgQV05//sM\nbAbZV5tv7CuCzAQ384yFwr1sv53I/mrbDbop9v8W2ts96hFbIzQvYx2waLZ8\nz7+VZfpo4tm43h/p9MGkStICdXbx6UPJ9t0RRHeAP07U/13rdrD8Je41d0Ps\nIXWcZzzlc5p8JOUfPjmerNuLhyd9y9/dvjraon1XxSjZcYvHk9PSiB2QhbtC\nHA/dF6n+rtEyMrIWcr+p1BLf8RsLAbNYxIDXQs9PnEfRJ1cZw1ncxHaU2dVL\niG90FUPLtBzZOkqBcftHxEcXSV25RUBHxRE3BQyWG8/UpwI28F0Q8eFGwPLs\njiru1taCfwt74Xn/OH+Ka8znCWPC9pHFBn0d1lCAa1Gx0/x5zSU1KOsXoJRa\n6Gq7mnLCVyAf2kuKhNjbZAER+H9ThbfHXEAH3v8UN7ABIFHRIVPgGLdRHLFP\nlD1d\r\n=wNg3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD7gZpiV2i9ChJSAYhXwGIv2LEnn+xr+fFNICfFiL+Z7wIhAN/IZ/7jXY+VQaGbNpoo4+RoEHHhGdBM5IvHHP916ko+"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.32.0_1586266262262_0.41728966344062557"
      },
      "_hasShrinkwrap": false
    },
    "1.32.1": {
      "name": "@aws-cdk/assert",
      "version": "1.32.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.32.1",
        "jest": "^24.9.0",
        "pkglint": "1.32.1",
        "ts-jest": "^25.3.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.32.1",
        "@aws-cdk/core": "1.32.1",
        "@aws-cdk/cx-api": "1.32.1",
        "constructs": "^2.0.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.32.1",
        "jest": "^24.9.0",
        "constructs": "^2.0.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.32.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-I/SseyZrbw+kMYzX+oOdpQHkX80WB+uymukvxmLr73fbCYtTaLchKZts00celTmzGr8PuuPKUaQtd3pkPrcU5Q==",
        "shasum": "7855366aad9ead64f0a1ef7f88c28d4f51635bb2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.32.1.tgz",
        "fileCount": 41,
        "unpackedSize": 214394,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJejxn7CRA9TVsSAnZWagAALOYP/ROenRaYeC974vUaiUPt\nN9T5z/H4SUT8RjaGrgOP2gDVG08mrqVsnx3No9E3i4Zx4rZq4DyeHNyCF/aq\n/T7BzPIVSyLo1hzEn4GHkBeJFlP8cfm4OdxoVqb22cOQKDXTSBMAIz+OxTEa\nRBE1tYipSAPJRRaw5cJLq0DCLXYtzbGyQrVlm1HhNYDL2IGRmYE3h7d3X1lk\njIYvcexNHalxm+zQf40j1nrABYATEyptr1jHNDTWkoXoyub/C87dcy8wHtma\nRA/aY9WQH4oVawgZm/x6LYcLoeqJXt/D0BvwRbWnOv8iDt0Oppsy5W8mR/rf\nO8x4W9kGFe66VTYkN55T9bRLJDTEonN2TkMtBkpCjHG/RuBqRV8UUm70w3VZ\n4TEPU9PQj4J40Fq90uOke5M9KNkDvN5jQyDY2+fBa2Cj3mFu6DiRbfGbLGLO\nxmrDqmRljOQoqS6DOIlD8zW2jdmBOszhPtZTj+fMBm8dzKj4L9DJlflsVJfQ\ncGzLP3qKNsNQTqrEXyA73kSNgIok1lmpI4dHAs9XnVK0iF3PxQxoYYIpv6l/\nw3MuAfYUq7rw77fVfZaujwWLNlbW5fpEwZ5fxCgtrEyVpx5GxYsejgpjnwg/\nMqlXe4kVoJBcuIhH3fg8GCkrP6F6oQ87aa899FqVcvVsa2Ej597IydOGBV3T\ns3+q\r\n=TyA8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCID/Iz4OebNYU6Ts17HtwUWrNgVLk7bkO9mYBSa6v3SUJAiAbGtXFTeckxWTCwkVw2Am4rpajeEvqT9SY0NCwxNB8VQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.32.1_1586436603322_0.45551700621264946"
      },
      "_hasShrinkwrap": false
    },
    "1.32.2": {
      "name": "@aws-cdk/assert",
      "version": "1.32.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.32.2",
        "jest": "^24.9.0",
        "pkglint": "1.32.2",
        "ts-jest": "^25.3.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.32.2",
        "@aws-cdk/core": "1.32.2",
        "@aws-cdk/cx-api": "1.32.2",
        "constructs": "^2.0.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.32.2",
        "jest": "^24.9.0",
        "constructs": "^2.0.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.3.0"
      },
      "stability": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.32.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-1hqO/N/MMIaIjglKahxdup6/DSOM1pJqlz7iDl09z177DbJ6dpz7soKaOYwFkLeIyh07TreRCyyQevChEdunIg==",
        "shasum": "866decbbeb2cefad3352f99b151e0f92f98bf7c7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.32.2.tgz",
        "fileCount": 41,
        "unpackedSize": 214394,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJekJLICRA9TVsSAnZWagAA6acP/ix4Xuznrv2mFwiuA2VR\nEifTKskMJY5g6H9Vb8/0qlTKgr3iJ5rhoTVxk9TelAYAkKex1dn4gQAoZtCR\nSDMWjygfCg7GAY1bj69DuVFBGwaeDcWh0okwWAlv4V+HdEINtlBOacviMWPQ\nWjNKnWT57UNhFZzo/YA60odql1VRTCg3N96NxD3wCsdsS9aWJZfbiKc8j9ZQ\nGtwDV1dKmzeKd/XX2kEI6FVAqwMcINpc0uEcMFOCVWg5MNneq0clQmxRthlV\n19q96ILlQxWY30ewGb48cw5/c42rx1SKsMFSvQUdrLSgVMSe9ohvAm5Jirpg\n7h4O5YgOfKXkj0X2T4ryUd5SKoEkWz+Kt7jv9CeDJj3NR2SqKjIwIw5qxWcg\nGp8HVXeoYA5fpt7xqboiaqiAmQtfDMXG2NNYuYEvNT9uCWlcGgY02Ksh228N\nYzMZNKmEozcDyBMpG+N4mNkCQ4YmUv2emOAD3QKsfEPbs1GH/w7ya9x1/U+0\nBcVE12VpKyROdFOPSStjogQfYWfSbwcorUUFToSHJeczGd+c92avcdXPUCkC\nJ6IDGe4xH1V5RshYKoEBmWqKCHbksYmArOxEF3OKZM9uit15la4ZKNrNF7nJ\no+f1s+TNElnwiYL7x0o+Z3T+G0nczMbqvGGtVY2MlHYipfRWWZBI3q9/5e1z\nhWOl\r\n=Lm7k\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCurGyRChUguvuyirBIP7K6+H+JdhiDxC1IVvxEek4vUAIhAOYKGIq9MxnHM0fTJoon0z4EtxwuPf2TRatglMvhmbms"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.32.2_1586533064254_0.15474504273774792"
      },
      "_hasShrinkwrap": false
    },
    "1.33.0": {
      "name": "@aws-cdk/assert",
      "version": "1.33.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.33.0",
        "jest": "^25.3.0",
        "pkglint": "1.33.0",
        "ts-jest": "^25.4.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.33.0",
        "@aws-cdk/core": "1.33.0",
        "@aws-cdk/cx-api": "1.33.0",
        "@aws-cdk/cloud-assembly-schema": "1.33.0",
        "constructs": "^3.0.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.33.0",
        "jest": "^25.3.0",
        "constructs": "^3.0.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.12.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.33.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-yD5HV18KQoVXap2yj9COsnoq9gPS35vBmxs2nIDWLKaCyGob8bExZuc4E6VVoAEFUJSfzHVd1FptO7u0s1O0og==",
        "shasum": "2f6e1a987b3d655c89fb23ea993b40c2b82d019f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.33.0.tgz",
        "fileCount": 41,
        "unpackedSize": 214867,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJemg9bCRA9TVsSAnZWagAA+HoP/1BEZvUh6GQbxfRc2SuC\n+Jrz+ncqczEhyhOj3O0yu7ZdD/pkOxCo6LAWqLeoMvBjpjFLP1F0P/kEzzch\ng317GDZOjEJY1hh9QipeFxUVDs5SAKfhpyTGKk0I2QzOGtHLkSwS8O4p+9hy\n46+qFOxFd70PhLT8IHwxJuQbjUOhnRRpHSyqzj3EeIdAbwiybkUcOdS/fp7V\niDDyqIbaBwfB0TPAZ0kr65QisviISRjNTrTf+2/R8OtX4pQaDncSZ3jEzpaL\n5ehunAnHFc2/DaPfBD5YXOKyP4u7dcLt/MAmvItuRHQXGBvSf6s0rvbttliw\n00OKW2DaoJ0qHS5s88h53S51nX8IpkHCJMzfE8hFN7BC36OG2/d22Lc16eOa\n77Raqh9p/sSd8Vuojcmthtf64ps4wRIU4peb7yW2NpOc3HMf7MNhAH4njRuX\nmYNxm3DHRPDuCiKgkufW50ZP6f3JtJrB8Ie6THBYNYfeMhn4/CJfUI0Ml+VA\nUYQrKCGwAv+P872hJe2AS9xVdHnNyC52+vP4TgcnVImCtgEH0OHwlUynO6CJ\nHrW2qJ4tUIVqtN61zkPXC8GjQXnalhU+S1b5guz+3A3ZnDJ70WuD1jmN/7J6\nJP5NOx9vij9bY8MPoohtJTzAzQd31dnAHVwdIeA+XM0Rilw/bk2/5mmgrShg\n2XWc\r\n=ELN1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICLuk4JrwTHbpc2eq++3Z2Iu5fcVwG6kOWg7IgUaPkZmAiEAmQoWZLCXZlxFF2o0mxhCDfJmXS3htc/xUvb0Dr3x4M0="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.33.0_1587154779104_0.3729536755527352"
      },
      "_hasShrinkwrap": false
    },
    "1.33.1": {
      "name": "@aws-cdk/assert",
      "version": "1.33.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.33.1",
        "jest": "^25.3.0",
        "pkglint": "1.33.1",
        "ts-jest": "^25.4.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.33.1",
        "@aws-cdk/core": "1.33.1",
        "@aws-cdk/cx-api": "1.33.1",
        "@aws-cdk/cloud-assembly-schema": "1.33.1",
        "constructs": "^3.0.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.33.1",
        "jest": "^25.3.0",
        "constructs": "^3.0.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.12.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.33.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-0jzyOcIudDUJtTdrZtO3n4YkkidLXVSST3EFJC6SpgEJvkUHywQkOmQBEb3rpQ3/6/+gVF9/WcxuYALvrGiBLQ==",
        "shasum": "56224dced5780c8018f7e91d242bc6f2cb3ca3ac",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.33.1.tgz",
        "fileCount": 41,
        "unpackedSize": 214867,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJenFqxCRA9TVsSAnZWagAAe2QP/3CJl/hyJhBbvMdEcwMl\nKuvnffu9y6BVGycAtAkhys/tJPvm39cs2LFyyXxf4qyr3p6ceLkkkpmcxJk0\ni7YFIY1XW8GI8eWBGF7Rdq0pp644hwjBMCpAJPMu63CiDCuDu5InwUGL7zPr\n8A95TEF3iNWTl7s/MzXrEznP5I2ThZ4OQpdHS3JyNN+QaSmK2lNeq+ccdyEf\nw0Eg9ZItN0SxL+R+wmNISl+F1mlyWWRL4GARR10lBlOPhgjqg2zsLekutUd5\n/aFLzv1aLAUfarcFp+LsmgCWIWRwHoXW1ib/f1YInf8/TQgfLsk0DSmEiLTV\nAZtr7HOZW3qDJ4Six3FKFHNgJTMFcrWtHczf3xTSC46GNhtuZRGLL0Hj4OiP\nIDuVWLAyPk7D2gnbmrrWilToMWCindiRO34ZgsWnnonoOC9P+Xu88Y579TK7\nawqx82l1v4zRNzzTYzEth+bYWvrKE3rmR+9f1jPNiILHai5dWVE4c/FQGf5i\ncDByHOC5zlgm1CXiIUtmDpGOOJxl21kuja1K3pYWc3HhuHJ/in/RhZlnivK9\nA1t32iysCktFh+MKqiTGFqtoVvZ0D9Gj13754oOFdpY+EJ6025Ohr81aL6H0\nG/OxdaOQyb+be8tZL8hbezGprhZjmvSP60rPp7sZSlTYL0/8xQNyOLBsbBSy\n23zD\r\n=bEVZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCID964YSIYBB3A8/jU7fEUE4jg3fp7tX0S7XV3nt4M/O+AiEAvTD1Um/2uk8ZxRoWdIkIq2FSwZMJnFgOF0PnXEpbfKI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.33.1_1587305137129_0.9922135678762971"
      },
      "_hasShrinkwrap": false
    },
    "1.34.0": {
      "name": "@aws-cdk/assert",
      "version": "1.34.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.34.0",
        "jest": "^25.4.0",
        "pkglint": "1.34.0",
        "ts-jest": "^25.4.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.34.0",
        "@aws-cdk/core": "1.34.0",
        "@aws-cdk/cx-api": "1.34.0",
        "@aws-cdk/cloud-assembly-schema": "1.34.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.34.0",
        "jest": "^25.4.0",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.12.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.34.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-E8G8cZBHcpOCBv8LkHGDnt6GbCYhVsBGroNsyJPFnuyKpAyySCeKQw3yggyIQpDlw9/gDiemNegYH6tYnhK9aQ==",
        "shasum": "12b5eb000af4efcea596b237bb898bd70f7aff6e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.34.0.tgz",
        "fileCount": 41,
        "unpackedSize": 215102,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJenzlgCRA9TVsSAnZWagAA2tEQAI5tq8ePGOsayiKLiGPV\npchnvD2f/EHwsFVqON6nTOLQbxxsheptQG3zysR8QW9AgrXPFMhnRD0gR+GF\nhial+qPNLNiOZ1VZ9xusIk/Rk42ew7CmNei0Z3wNLTQjSqe+tCtBaUr+Xo+9\nD3xJpEHnQ+JnTt0dkQIWef6voN92XfBNuPtiuzRYe2RAUQOyCR81JI6Rb5Cy\nrtEEIk7CEwOIp7fw8gIbjXKsGPGi4tNY/5eGLTLm0qAQ1FljPyG9M683/rzJ\nhLu92nbrAig0VTFKzr6RH0MNlBnDsJRmbGeZt7vsWxTREHtZABoBoCv4hK9X\nb2OznFVcxWVsV6bz5vn12djBnJVxfk9yO28N7xTxLraZ8wShtLwt3XTqchkV\nHtxgOdTKxsOrUYer8saktTh/IDj4AoSKjDiXMwNbxorZcCNpjAyY8GS1A4a7\n7z0qwxqivB6mAHCmLV7ISJdl4YfYD9Qm0uRNQF6TefqgkEgC8ylet8q0tUPT\nIh1Tv9PcRDG++rpzot9FLRyc83q2RXmgnWR4zI9oLvqkK5xXKz0MbDYOdWwl\nRdHdS1GKHGws2Sd8MD61hFx6AVBBzwiiyj/sNmonjkAezXVH9utbv5yLS5m0\nROU/HK4bSiS/tqY3wsCWFXyAqSqHeWulAnxsj8a5MF0gSzhWEBOPyBQew7SE\ny5Hq\r\n=SPCe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEzRdWCyvLhU/PjjXq7B9IwukuUm34abXdMub6EbBUjNAiA1TtwWuzU6pqJAikrB6ug6UMm6Ro+eZsULhYgPEh84pg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.34.0_1587493216298_0.14025409184664395"
      },
      "_hasShrinkwrap": false
    },
    "1.34.1": {
      "name": "@aws-cdk/assert",
      "version": "1.34.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.34.1",
        "jest": "^25.4.0",
        "pkglint": "1.34.1",
        "ts-jest": "^25.4.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.34.1",
        "@aws-cdk/core": "1.34.1",
        "@aws-cdk/cx-api": "1.34.1",
        "@aws-cdk/cloud-assembly-schema": "1.34.1",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.34.1",
        "jest": "^25.4.0",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.12.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.34.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Z+RXQtaR8sKcNNsYSycW18P1yU73WO19JaHEFDSfR02Wvz14ikPvBBZ6x9OmrwnGg126pCtieNhqIBTptTpPIQ==",
        "shasum": "6414799504dbe5e5b63cd4c76c2e3005fa4f22ce",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.34.1.tgz",
        "fileCount": 41,
        "unpackedSize": 215102,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJen8zXCRA9TVsSAnZWagAAr1wP/3RDPPr2yg2hxZvLuB7O\nt7b8vDumQbrAN2KZiK4qTRz5D2oiD/MnwqY2uTj2tqfBAlqTgjeMTU6NKFXR\naRagkRBROet/3cPw+GZlDTno0mbPU3LWxZFxEvpC6kZd+yTySXxy556PQHwZ\n3SQYNceHLvpV4Lh7uFN4jOF/+Vq+NK+1yqCGComyjZ7z7yUorXaJqHAVTojw\niCXr9nIdvtJvJ4PxN+PsEuQqyvncN1Sd0aTq6ATT1zRYhqn4q6hGE5K28tY9\nehZ2T3qsow56bPs5MKoRULhyoenbgQ4UvS8e0Ny6cPP5zQz0QYC3D9e/O8Qv\nn9+RxWDkXuOgpmuveqhbXo3kRUIW7huTD0if8dyplRZXeMxNcn/YudkUdIFq\nL407+QsqjCHZfyk6FU5b9EwGlKpImWdatd/U0QI0Vbkvo9x30msqe2rPNC1C\nZw/1iBnimHCI5G6EgxIyv1domlKonfl7GKahjpqrjRD0z8ZtWCeSWBqghxVX\nOgp5RSCqdeMbtqR7dTF7CIA9+j5WUVkLnIAHBNEuiqjXN71YR7PPdopERBir\n+thNpr1t8Fz3EjSfhfPH2+SS/Ndwbg39HvzJx7r4jKXX7yUgn/2b08PHANGr\nZdD++alz7ucZayKiM3c94oLjMyPgm0tGFnI53Salq9kORiVp3TOxE3LZHvxI\nVy/e\r\n=4cO3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH+J+DQRTCTqUD/UyfpZhov5EUU8aCaoL6zfupHsxMr5AiB1Nu4rKdAD91azrebXLILbhR9wabxJ/nDyBBEhu3U7KA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.34.1_1587530967242_0.7295361663882503"
      },
      "_hasShrinkwrap": false
    },
    "1.35.0": {
      "name": "@aws-cdk/assert",
      "version": "1.35.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.35.0",
        "jest": "^25.4.0",
        "pkglint": "1.35.0",
        "ts-jest": "^25.4.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.35.0",
        "@aws-cdk/core": "1.35.0",
        "@aws-cdk/cx-api": "1.35.0",
        "@aws-cdk/cloud-assembly-schema": "1.35.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.35.0",
        "jest": "^25.4.0",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.12.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.35.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-0NaRvr1RD1ld52cgOmOZRCJVhQ07Np4GleaLaESZjRinUkqI5OAAW5B9XNqX4mUdasH9tnM8JcWIOaOJ23bS9A==",
        "shasum": "3bbf2ceaa398b820458f5516adbf71a986cb9261",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.35.0.tgz",
        "fileCount": 41,
        "unpackedSize": 215102,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeot2kCRA9TVsSAnZWagAAkq8P/3bbOckBxMR2k92IVFnD\nJ0NysbaPfvKv9m/FnKHeji5nD2L166t5/H64p/bvYjn34z7QkIAUfAvdb5w6\nTSkitwsdmUUOZYucvR2UmQWmeCwULDeZjp+p3Jy/dn171Ubcip6R50pP/0/w\ngoj/CLEAX/vAKHWCssB9Dw4Rs+cU32VLFtsggxf4UowW4inUbgj7Uz6jgRAr\nUx7ozAFqCXo0Yg68axaSW8ykFzg0qblnqqTSjHGHAmO3saf6Mviao/eF1WWR\no7aJcs9YjzM4MpnQTlUok/e2/ugra56UUhH5X9tJmG0l9y1kcipQ3CMuMcNy\nlbVE6KlDWELV7sudT3XMjOpbmWa9msAucgQKyhSjK1YS8iRsln2g+krAgpxO\nsC61cwFcmTPkIciL+milVBzjGITKyg4FxSosQahtIoQXStKQz0gXLMxMnjaJ\nuUF85yZY9CcdQHXvs2l1DyUYfH019UZvw6EDtpb2XetN7bCwJoiZegi41X+R\nqmz8hayEyJnBIfGZP7r1H+qi1XxetrruF4HfGgHGz/kp4YWEIBnQILq5sdZt\nCGvyM6O/PQQG1CyYGk8FZkst+J0X7/7mBYLVtD+PRtDg0iCaepMx3NxytiNE\ng6j1MpO/CgiLJg/K3kmuAIwvRopYFzm6111W1S0U0EXFSUuTpiw8aiIGz928\niE2K\r\n=cgXu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCh35BH8nu7HwNTGRGdySylufMOIaIMTj+MFBuT22dGjQIgTo5daBMsl3TcKmmnO25b0ZajvjJ1ocBgwn/RLyXcc/M="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.35.0_1587731876444_0.8892887756487033"
      },
      "_hasShrinkwrap": false
    },
    "1.36.0": {
      "name": "@aws-cdk/assert",
      "version": "1.36.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.36.0",
        "jest": "^25.4.0",
        "pkglint": "1.36.0",
        "ts-jest": "^25.4.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.36.0",
        "@aws-cdk/core": "1.36.0",
        "@aws-cdk/cx-api": "1.36.0",
        "@aws-cdk/cloud-assembly-schema": "1.36.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.36.0",
        "jest": "^25.4.0",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.12.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.36.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-0nF4QZM08vYsWoHiVYEAGNxjDXVpq0ghUIoBCNKPy7t92umvw027672e8LQTijbAnqbHuCmJKDwwmsEraqh7NA==",
        "shasum": "05c5072071c170eba90a94ddb295b76ea866c7d6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.36.0.tgz",
        "fileCount": 41,
        "unpackedSize": 215102,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeqB1/CRA9TVsSAnZWagAAe2EQAKOcj6Bddld/WcSx7esZ\nokqVQritaXcPH7VjcgFHCrhyGZf4UhdSl+RDDpmqklTIN9uXuNys1U+QukhP\neSmkBqx/Vw9bTSxYtDJskMiJv8UgBBUZEx7avWWcMtnVBG2Mnp3Reb71VY25\nlmc20G1Saf21SImhZXivkvPoVZDM+EARke6BnCBo/feALsmy7KICn/y6gykl\nYs49lKoAoksBPq8bDbsAcw7pL0D+OngCdMzl20H9sl5GSC7Yg8qip8UCiLQL\nGtpIFjbCxgcl6rfW+9klF00zu+5ellipEFGlfPI5dez+2tupH72LBnN+PMSz\ncbSsUH7k92N5COA3QbkKyue4BH8ofMgasicsdUmTdteDErnn+7RnH+Z2c2bs\n1POj89WpXFtW7nSvx7mxf3YNOEZVGD5rlFUjN0DnrZ329D5sE+tvnv8MtjkW\nuqx3OPXxBzGiBB6SFk8uw1+Jg0sDiDeR+aXrIZQJrvpKYwIDrRcX1gbqQsFM\ndpPXc6rDCCjvAbEuGKI0V2gY06ivgVsS+JHq4RnTvfznqvzEAAz73d8empDj\nC89UUq/Oq2twOGWBCdAztEp8H16+iXOKDGaWdWDzHFawSVbgi5vrUK5BD5Y7\nVCCIIUN+rLHJT3UB7SZ8lWdu657bJqxhFoGQSzZ2Er3I3shsO2KKGNsZmlH2\nc0y1\r\n=nTB/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGRCKjiYxAJ5gqI5IvPUpdlH0Y9BSLh71l+1AA+bWPvHAiAJJgFhwhZKBcpeauUW2U/6iu5Owjv/iM6yYLIQn1nczg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.36.0_1588075903311_0.06961439889053977"
      },
      "_hasShrinkwrap": false
    },
    "1.36.1": {
      "name": "@aws-cdk/assert",
      "version": "1.36.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.36.1",
        "jest": "^25.5.0",
        "pkglint": "1.36.1",
        "ts-jest": "^25.4.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.36.1",
        "@aws-cdk/core": "1.36.1",
        "@aws-cdk/cx-api": "1.36.1",
        "@aws-cdk/cloud-assembly-schema": "1.36.1",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.36.1",
        "jest": "^25.5.0",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.12.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.36.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-JIDLkT8xR93Lg7a25IlsImIpeAXcvwNmyDgk9LgbJQ3p+h4YmqL2wmJf/4PRuA6eg5+yTyhw67qqyiFnoGt0HA==",
        "shasum": "3e504e05b50287c922b000633cbd92bd1ab9335d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.36.1.tgz",
        "fileCount": 41,
        "unpackedSize": 215102,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeqhSHCRA9TVsSAnZWagAAl/0P/iLDNbqgoNwukD0pV8oa\nElH+DubiuPvuCE3ETX0GggPWU8zbQlXfYj/faCJ8eb2bxoMzFElLan/cR9wl\nMCqxQ+M6LLe+eu8ZVjzIFzy+56stEIljSyaF9dLdhmzVXYm08zWlVaiWH4hw\naavGppeV/DgKY3OU4YEKnTTSNoxUULcQXJ5oXwemTOE9/pocgjTCOq7nqZMO\nvMOcshSsl4yEyjomVwocYvx38V8h+llzi5qVyjKBaHx6QNDsQhfQQnDLjClb\n80bz7/9vEjkMMf2XAuTI2GjEshZ6CeIjV1mDVgAHFbTtKWSzhET2Ho6FJvoc\nAmi+1rAsDd3sl8f1nIa7sprEP4Cyl3sXzRSR/QkdklSMLyHISuJyQqzfQigL\nauUIuj/vZG+iROuNfzKmLeJS/vXYJ3OKmfq/2vcyDskNdcSq+6HWtwrIOynz\ndenRWcNsTuvGwjkM9jl2ndntcS5HW53YRAkLdXsqmkoOdUh4Gq5GD/8hsNC/\noBnqtDUKEPz3KWsBBB+tK79Wiy0czgLszDoPNqngmxRxFWRBzb1hWPW1pf+J\nJcndEKBV3goPZZOe5/lW7sYru7ayl4K2l4UmgMMI51GFeLROXcGu8k40679y\n5VyDoxlObXoxdKaGLBnrE6I6P3flzncqsiTG8MFEZkXHmYmh8cdCl1EnImqf\nEjQO\r\n=eBgC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAZa1CN1hILocwdjssP17AjXc+hRd5eyZ9ca6noaiECgAiBsY6Rgqm+yMkD9KExVzNU+RVsWlYkA/P9r8Xvj+dZlCw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.36.1_1588204678947_0.5225927766845331"
      },
      "_hasShrinkwrap": false
    },
    "1.37.0": {
      "name": "@aws-cdk/assert",
      "version": "1.37.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.37.0",
        "jest": "^25.5.4",
        "pkglint": "1.37.0",
        "ts-jest": "^25.4.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.37.0",
        "@aws-cdk/core": "1.37.0",
        "@aws-cdk/cx-api": "1.37.0",
        "@aws-cdk/cloud-assembly-schema": "1.37.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.37.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.37.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-GM5xG9D/mwMNc4Awe6NDfve+i8suD+Yqkr2v5zzJoFtZ8/WmytGTBtIqh0AlQZhSdy5bUzG9ypcr2DIpfBxStg==",
        "shasum": "3518d120efd96213387c7b3ab0710f802e4b2fdc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.37.0.tgz",
        "fileCount": 41,
        "unpackedSize": 215102,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesZkWCRA9TVsSAnZWagAACREP/1GS9GzNiemFRrAfgKzg\n0ijS/f0plgBvLs19Itm9gGN5sESWsvWz0/baH9pBCMOvTLHjDfgVuP2NkMPQ\nGplGCJMgVATq7POkGGYyUDZjzqGHB7JQd7z9hPb4dM2WpusoGRhPC8I8E1Xw\nPn/E2xcJQZpmXoLVCBJCABrbc1yBpAr7V/VsDuDwgkwOl/LumrqXaKMPvnMt\n4ZIlOuS2L14yK+xaWCZyD+Y0WcPQc4T+Q1BflDkGUQ2lOsDfz888uSaNZxVy\nrc2iJcYmLPsF6Bcn6/pHOXEM9sA9TW0Rm/Q9GFr5dU1Mj6zZ0TBwwgsbU0Jz\na18GxTLlAqssJLywyzF+JpMQw06qejcKWi8NQJqVXWbj8vTUJGwD1386oopd\nRr8ClzRNHXtVkr/y+5BqOK7L1pUPNq9oY2xuHwkzPZQKZi7g0GxuSdUYeINS\nEKdZn31z8cxz1QfKgx09p+CxIlQBQWVWStkGNgvKwyuujrJf7fhvMUmJw3RW\n1wX63dC54mRgQFgVaB/s8KhWaMMRUkyZvdZyDuxVTe73LJ2C+uq52urrF6OK\nYfs1b7sW4gySYh0RQ9sbzZ0NGq9PwlcEsfFmUCCNcUx41Khohj/CLcA5m/3F\nI1WkubCZeLXKcDDtKNmJ6ZrO0Gg0Cg44WuOAnjP5ZTN4dz1OMoJ05Y3cMSaS\ny6UI\r\n=Ntyg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDVVLhHFx4X/NYJChGgUbokfrmohssoqtqAphS2mDUaYgIgEE4sOkZeqZslaW4qF7DB63ENEtOU6gOw5+GhFQIyjZA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.37.0_1588697360495_0.7552546814986298"
      },
      "_hasShrinkwrap": false
    },
    "1.38.0": {
      "name": "@aws-cdk/assert",
      "version": "1.38.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "jest": {
        "coverageThreshold": {
          "global": {
            "statements": 75,
            "branches": 65
          }
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.1",
        "cdk-build-tools": "1.38.0",
        "jest": "^25.5.4",
        "pkglint": "1.38.0",
        "ts-jest": "^25.5.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.38.0",
        "@aws-cdk/core": "1.38.0",
        "@aws-cdk/cx-api": "1.38.0",
        "@aws-cdk/cloud-assembly-schema": "1.38.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.38.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.38.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-EU0cndULZMT9F+NpDJ6wjP+y22I0s3wHv4rbRuvyQBuHVi9FpV45hJbLicuuxnsTr7UlnghsKmdyTJG85GlUig==",
        "shasum": "e1f70beb7c645eb8386d8e30300abf0d7c4fe984",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.38.0.tgz",
        "fileCount": 41,
        "unpackedSize": 215102,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJetP5DCRA9TVsSAnZWagAArVEP/1bdnWnOtiI3uNbTeSti\nsGmzbuCdmJ9VYaAPBF5VhQMHD747EeH01U3OnhNbnrMA5YVVO8PmDWaJLNF3\nmVKr6wtU7JqS/I+KXGcsVdSaBRbsrp8YfNhygOyMP9m5rbvm/4v1nIxGjYfT\nIJHVTz+r1k7v6h/vTqltCb3re8tK8oXWT7Nq+uKoi2SdTfE9I2hz+FjrHhSu\nUcXLYaVEPaPYair0+deG/r/fLOIyI9VAYIXpb6cik4L/FdXuNoAkpcysw9h9\nJQGiuq0h3FgkMrKH8LnpN/P3y7eXQmxeiA4RPp2wi45zRCDXBNVCMumSQqSL\nmBCqIG0oIo6gSi8kxs0GiwaB/uP2iPI4AEAWYPPI+QIwlAsg9c5RzWCgp/1n\n2rmSqXnD4v/AT+waaxWtYQtAPUoZzVqO6SZPWNEuutHfcXRGMg3cw9Hjc5iF\n2FtUX6y/Hu3DFHJiuA/7g6P9+t2qt4gPJf730XcTnzx5XDQ0nqjhUV7KOLa5\nPhzwRgGF+cx+4cLN4eAM3HgWh4O/ZbArMTQ3Jcf3tq7JIJuexws/Y6onFRkk\n70pnReaPRbsoj238T9GICxs8PJTdWgemDZ+4cnGaoVb/awCR6KAIQpJc4cvQ\nYFdj0WAVeTuZ8XGBbeW2+U2MafQHKMbx/SuP+yS0GDAC7Qhht20qqn3zGJty\nrgfs\r\n=UagQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAwPlNx0CA4utht7snH0BoZuw7KEd6OixojZ++HMyQEPAiEA5ojW40nQ4a7D1JmBqs7UKYcBHwVcCsLFip6UZjFezh8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.38.0_1588919875063_0.30830424401736756"
      },
      "_hasShrinkwrap": false
    },
    "1.39.0": {
      "name": "@aws-cdk/assert",
      "version": "1.39.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.2",
        "cdk-build-tools": "1.39.0",
        "jest": "^25.5.4",
        "pkglint": "1.39.0",
        "ts-jest": "^25.5.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.39.0",
        "@aws-cdk/core": "1.39.0",
        "@aws-cdk/cx-api": "1.39.0",
        "@aws-cdk/cloud-assembly-schema": "1.39.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.39.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.39.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-lzIHigYlGrYbkbRL/SY0/l7kT6IzlfWHprHKm5e8K550JVQnF8NAFGlNuDYyB7U6pxOJl0OzEal+Lag7hUnkQw==",
        "shasum": "005f6b8e7ab7c89c62977eb9c632b492953966f9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.39.0.tgz",
        "fileCount": 40,
        "unpackedSize": 214774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJev0dsCRA9TVsSAnZWagAAaJ8P/RmPpxGYp71oJ1WSFmEh\nUTZZATjaj4bQiisG/2FyqC3ZE0IvRqdQXSyfZEHWU2wPkfQdOL2FZvuJ/jc+\nL7ZS8/e8XYAkDdZNPewEzeeCC9ZULafheMupPiKRxjw3NztL/cx0Xxxq5CEt\nAGCkqaqmyhc1mnFDTnqjJPzH7pOBvfJr1IWApiQFMHNxGfvPXhi6bipE42pK\n4MCka0UpoI754XU9XG/s9Ukf98hwS+If4w7qfWiNmlqZHPk3xZgfCHZDwU0k\nMlgLDPTDZMkOVfmiVfKcRcnLcRDdGOvYSzuR0Hn6sJC28WbcWb5e6PWzBBnj\nLIqsuN60TF6D657plLilHTm8pJPrSJpEObo6kEnWA6sizOLXsF1m3JYYq+ih\nLuyu2RsaGdPfLZ2PSnrTRVC8G5liXwcHbiUxEiZUD5jN1eDYrXkkDtLpGLTz\nYrJlBwefTeW6sI1TcDwbPXQBtJ1tSQfkyJYCn7gZ/im896JuFUUNPAG+ELA1\nsHkoKQE9VhktwIyMvtYYoDb5g3swm3HauMrTqB7F2Uapa3Z9bGOezr9Y3UV8\nZXs3/2uv13b/JXbTNPcWijV+CXAhBnLZrED72jB8wpGeeB/9u2JNZ8kHXfkA\nFpWkshZXJSu5SDNP1a3nxUQbbs9rFbnh5j4JqmkHy0I5Wk7cfo8b9OaxW8AH\nueMg\r\n=Hp2G\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE3FDVYFHrgrrRhmfE7sJQ5esrZDu+QQKpw0dIrT0aUMAiBhuZKLHZDD3NLfJ9evO3HDNb4L0lxTs1xUZXinXFOIJg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.39.0_1589593963954_0.4609094105546798"
      },
      "_hasShrinkwrap": false
    },
    "1.40.0": {
      "name": "@aws-cdk/assert",
      "version": "1.40.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.3",
        "cdk-build-tools": "1.40.0",
        "jest": "^25.5.4",
        "pkglint": "1.40.0",
        "ts-jest": "^26.0.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.40.0",
        "@aws-cdk/core": "1.40.0",
        "@aws-cdk/cx-api": "1.40.0",
        "@aws-cdk/cloud-assembly-schema": "1.40.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.40.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.40.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-2rSKDa40Irv+gOeeEO7q6Hyt4Qhap5H5VBZgAXEE8QiFfjRuS6yDQzQinfP595bdFqCtwEBlxmtfX+Qm60AqSg==",
        "shasum": "e910985dc312c780be796283acff6ec3716ac490",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.40.0.tgz",
        "fileCount": 40,
        "unpackedSize": 214774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexUMPCRA9TVsSAnZWagAAYfUP/jo+KqiRBmobda+5XUJ8\noE8ikVYpYwNKxXh/xLqB0+4Rmb+kOUFVFU/7Mf1a3NkeZ/U8QNrpDXBWb9ZN\nInNhFmUDAU1j5v92n50Dt67igXlq7Aj/g1BG/NwiEck3+EYfnakPWasO1DTm\ne/cSlZFKsInUT2X7yFjfGnXntSRfqFhCIvNhX3GwACaRp7RjBWMds1OSLdpS\n0kRgWRr4rfFJaY3V7B/0DjbJX16OI6Dsq0Sl1Q6qGuTJ9qljXV6RROUSa9Fb\nmjCflCp0MUjz3GKQYYVjKq8Kta+u6sN7Y0DgXtTk74CuNKxvVj9E3HoLkZPW\nobzB63PRt9s2RFT35TtVrueiIrZVoitHYI8Wsj/ZrGAakLpuQAmNV1hWSh83\nL0z5ZnxiNGD+m96SLNJ1BgaJ3l7JqUsJl/2/N8B33aEG3oZM4spjYut0Ux/B\nnQFKChGjn92HZr+07McxhTAGQCP8+HEOMln3+LNCWjWgE0vfAgV0/59lv0Ec\n33NHnX1jQpLdlpSmL8KTBkkwlJVT7UPd/mumvs/+fPUDC3C5+7z20UnzSSzV\nHSrhxzvr1tQsqcCVD+k0W0wuDoy/AlO0BVwyBvsJhbCtsB6skjg9RzJ2NyVo\navQBRm7tYb+Bn+C2pBsTmnN3tqHQbpLbL1Be9rcAYEhG2r99Y0SbHfBxNyUz\nKQad\r\n=/6x/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCO6KXp+edu97IzYfApcbFSZxt2PIJPrgNbHQRfeIqt2wIgOfdSIjcZUetk+VSrO6rBJTZTQQj1KWnSz/BpU1JHLp8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.40.0_1589986063235_0.8393197799581309"
      },
      "_hasShrinkwrap": false
    },
    "1.41.0": {
      "name": "@aws-cdk/assert",
      "version": "1.41.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.3",
        "cdk-build-tools": "1.41.0",
        "jest": "^25.5.4",
        "pkglint": "1.41.0",
        "ts-jest": "^26.0.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.41.0",
        "@aws-cdk/core": "1.41.0",
        "@aws-cdk/cx-api": "1.41.0",
        "@aws-cdk/cloud-assembly-schema": "1.41.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.41.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.41.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-UhOkDRYnV9efAv8Js8g+j+YPEY1N2UPDv9FHZC4owV98ymY2uLott+XGXW7Q6qTytXNCmAQBwRQzrQUaqYsbQg==",
        "shasum": "51a63eae32000d037d854757f23f861eb532279e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.41.0.tgz",
        "fileCount": 40,
        "unpackedSize": 214774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexnChCRA9TVsSAnZWagAAY10P/1SIjM/iiVPg2sjucCBm\nMIro/591vQ1Tr7Hn6SNjtoAjMUrbLEu8WXxcecdNsRhI0UCt9zjZNWj8GvO5\nRwwXq+0mqRz+M1d3IZcjFsM2teelgnqXx27tUjCrb6D7kGHr9tgUFi0GS9TY\n9BcSTNGRV0qGkd6QACpmdbp/j9QyPe8orjRqFjb2aSkLtoExNa5lt2w5PzUW\n4yiy5EXmGSXrIsSnzIS9cjDdniymnK3n86T4SilX013FWxuz44Yel3axBjCd\nc9t1f1vGztbEup+ULEk2UJGSShvS7UZnrzdl1fYP3zqSnRF6UF8aVpjYEolX\nXPqWXwmKudq/H5vEi7ThgcIUiKIEsJV21z2Wl52iIO6zB/FkZrbedpgu/Kiv\ndfXTrXfxd00ebPQoSNIhPLAiwzMhqKeMbHBFM+KeTIDWPs99TjfzdAFneZoc\nf98o65aZ6vg6xj6g7EzUwU6hUZS0sl/ut7KxdqbVMdM/RJ4wH8FZlxtK9/XY\nTcgqQds4wbNIGXRJDdEnd7cwpMOzMqcG2yPJ2OUBHa2dPfu2kguRbRJilitV\nxMCGpfUR0PslJj7/fAHRiNom7viwGdPnawUd/WGD1Vw2OZu2YMIFTl5mo5By\nF94f3n05SY2Qsh6N+iUv/1InVcxxlUEzNNY0NBd6Ltv84KX8f4sJO18Hrlm5\nL8hG\r\n=uBWL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCenV0qQuUKA+ev11yr7V++poCpAinSBT9wbSB6lUOoPwIgUL3nYHzN6/8aRWsTgkbaQAZEnqLp4AjOkJAGsKRQJfI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.41.0_1590063264804_0.15498507304378983"
      },
      "_hasShrinkwrap": false
    },
    "1.42.0": {
      "name": "@aws-cdk/assert",
      "version": "1.42.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.3",
        "cdk-build-tools": "1.42.0",
        "jest": "^25.5.4",
        "pkglint": "1.42.0",
        "ts-jest": "^26.0.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.42.0",
        "@aws-cdk/core": "1.42.0",
        "@aws-cdk/cx-api": "1.42.0",
        "@aws-cdk/cloud-assembly-schema": "1.42.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.42.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.42.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-J7WbMgsyGmY51eJWwCZZUO4ilM5h1qdoBmr9CtGEBTiq79pgH+hhJLBdmkFdeprNUcatPGS7ihR8ukh+QIP+1g==",
        "shasum": "ff85d9f9a590d88b807843aa0d7c3bf92dcaf51f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.42.0.tgz",
        "fileCount": 40,
        "unpackedSize": 214774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJezl9KCRA9TVsSAnZWagAAtrsQAKAUVQoOE+ND90mZwaGJ\nr/TJNHeGW6xILGNsPYoSp3bRg+FmvTPrESV7yn52TqVHOEG6xZyiBKdeOgGw\npUrVYWZ1N4B3qHwDDczIUlj/A0OJI9nvORdF69jWcsBgx+BMvxz2EV47+UIx\nj0zGdzflOAEohskvCquMXJjgyT0KvH+IulKOeqtRu6FtYxSq0FC/ZpWGrC+8\nXj/BBMRTgrW6lTC1FcEdFOkhBBXFftCm0G3cX5qpvg0gAr7inAoqy97nnZG/\n/8vzBjLnauY6Gkth4SNZ7Cdy2moUtocRJDsWjCrYdDlPy4a4t7Q1A6QBbJrI\n9WKIkQ7LY8rF61WgnPBN3sbeXFYx06hpvqOQgdujmfJXA5FHAkVN/uUov2Fa\naYz2ELZjXxPtr3oqk1t5QXl/kTxWtuJJtgpKE6w1cZL48lx6/5ejR9Gkxq6/\nZF2PmmxX6/fhaBiOJrcTj781G5t5enYDbue1L9An5Gx/e42kW6XNV+mAp1Zf\nXK5WL5UJTZyy2wkuAFTPqd6N9VFYkb+OQ69kFF/9etqp58VQZIFbb5z/Bq9l\nnwGESoJJj0rtQIIFT0mv722/5ifhE7r27kGiS6OZoGAmW9j80XvTLMAut6y9\nswrNEwueP3yB21+BWXiE4pGHGRrMlNHu/x0nRFxEvgjdv7c8ysLkFayWHeS1\nSIWT\r\n=+mRm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCUXVKoMyoJSbeSovSjeAjwyppsbhujnrRf9zx1+D+i2gIgN1VJ4g8hBCPhAYR+xSPf+D6P2YRMc6Q6adoAHi5qtaM="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.42.0_1590583113877_0.7842962211297568"
      },
      "_hasShrinkwrap": false
    },
    "1.42.1": {
      "name": "@aws-cdk/assert",
      "version": "1.42.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.3",
        "cdk-build-tools": "1.42.1",
        "jest": "^25.5.4",
        "pkglint": "1.42.1",
        "ts-jest": "^26.0.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.42.1",
        "@aws-cdk/core": "1.42.1",
        "@aws-cdk/cx-api": "1.42.1",
        "@aws-cdk/cloud-assembly-schema": "1.42.1",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.42.1",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.42.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-M4M+E9YDQMx2G65PCTiUSbCOzqyyv+8EH7goktdNWoeZziyE1D+GuMHqWEDU5EIdXVIKLx+7udsZfx6XcW/wtg==",
        "shasum": "fae03e9d14632dba531b98c71beccd4a48ae1b97",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.42.1.tgz",
        "fileCount": 40,
        "unpackedSize": 214774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe1UFXCRA9TVsSAnZWagAACcQQAIEhy2y/RvF4wjCWmLN5\ngpbHKpZ34nDI5MYV3iYobChbJ+4owgyd/Q66V0qGtfBo8m/2bTHklkr/kDHT\n1JcpUkAUe//x5MCOvAy381CWVvNIQuz+eTGppgpSrEVu53k1iRQVne2/Vsfz\n+NIQj6YhRyjBaEbipWUlwZtGDAOBs8iRcIsRDIurmgp3oNTqgPBCx4bUL2Vd\n4liLhgThb7XbVRRr54cmZrP/FgbMio8H6UoZWGH6bQ1qNeZiQIME29e2jQ8y\nBu389RiRKwDJjoQHicb0cXtfUfz4EdCY96m7WY00MqIJCpN/uDvRR86Qi/lC\nNUgspcq/t1QZjI1uiUBvi8VgCHpZk5QYq3zBM+bAsZKDJmh3PGcmcz30BJLq\nt51bqua4dQySNNUuv+tPt3m8FCJuWC8hWDFvwVEsoiH8nt7i4lG+PsleCO3n\nVjappv15XVQB0DYtBZnWybDTEGjb/MaWKQZgMjCxpA3cIEg+NwV6rw4ew2MD\nxRCy3kuc55+4YguRSmJgna5GslA5j1hGnoGk45mdCdXat77OzJd/5WijkmAg\nJZu/b3GcnKw8McquNIaPJ3ISpW3UWNQhozwv6Q0vUR5UXIiY18t28r2E1gOH\nS/wtk0+6ac/r+qkL342G6rBMkGd64QhpQ1+OOSLNS+H2y/oHqetpVwXlL+mL\nMKRQ\r\n=sku3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDeTGBxwcCESuswDdX5ilTvgmo5y7kgOYkKlb2gbpBSTgIgcgcqzUjtuiolaYdUYszXEDh6lrEcdno1tc8TO2d6O8M="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.42.1_1591034199248_0.9324774023339624"
      },
      "_hasShrinkwrap": false
    },
    "1.43.0": {
      "name": "@aws-cdk/assert",
      "version": "1.43.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.3",
        "cdk-build-tools": "1.43.0",
        "jest": "^25.5.4",
        "pkglint": "1.43.0",
        "ts-jest": "^26.0.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.43.0",
        "@aws-cdk/core": "1.43.0",
        "@aws-cdk/cx-api": "1.43.0",
        "@aws-cdk/cloud-assembly-schema": "1.43.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.43.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.43.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-QwUH3oDOroMKBNzfWc0d2ohdr1UD16mReFgcqEk49VGXM6qWGCuS0i9K2bl3RBP1sxFuk98rpU7Fbx/DzKK2Tw==",
        "shasum": "5b93c9cbcc869e6401ef294a42795dc329404f9b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.43.0.tgz",
        "fileCount": 40,
        "unpackedSize": 214774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe2FfOCRA9TVsSAnZWagAAqGoP/R4EbruMJHi/8qtNJYlA\nuPrVYO2R7uSf4EkwuQLsRn4sljLfOfGr7JcDVnRQ1lk6RrsqUfgxWB+8pT4z\n916Xlxl7/dDXo58qQu8aM5G/UnU0CYELt5iQnlgzk60YHVlYxuFbJv4nJrXw\n2O/mkbvYlaUv5JgzkWi8n4fmnK4n+oyXVLMvd6S/nLxHu4Pf1SXropJwrLor\netQvKvGNE2A9VfgdKIGc5nVxqjqJaHIJGDIbEjPEfdjhk8hHOzVB7I7as/NL\n389RAK3mK3dHFduZFPh17XoORAow1vthwoXlSYVU/zTYrfk03k8FTQQVFSOl\n8PEjQ3GdJx6oXKbhRpIEY5+49sbq44Ap7Ml+tmlMZgSonvPzvCBFx3NNTkt2\n/sXAmdIsYsi7v13u1H3bKsiW0yb7egwlZ06oNe7SDqzLeOTSDE3B+4k24qh3\nPVkZhc71yHwbmjkc0EyXeOWQ9FnNRIQT33b799dKAdWye9KkQv/PFLXp18J9\nkp/k2q9zDD7eB4MH0MXG4jJdvb6zhJDBnX6Vl0BG8hzlshrs+dGf84ygkQqw\nBgzbYKko8BOR+CufEvHzcVUSvfoht7cO6YMUEFnow4JJBXwBMeAhNVcSVb+o\nd95eiNXQu4xWJVbRXsGZub1b5uj35CU1oJeMur8QNJv+01kvlSPqZ10K5ERs\nllgi\r\n=unZR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC3SEYOg4mHy+bJUQdl5lajKvyrI7LBBrS1ghf5MUaOogIhAL6SHg5BDvVS3Wi6qnvTYiuQm+wCu8hA2Qn0OqGQTs+Q"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.43.0_1591236557708_0.9975018629776602"
      },
      "_hasShrinkwrap": false
    },
    "1.44.0": {
      "name": "@aws-cdk/assert",
      "version": "1.44.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.3",
        "cdk-build-tools": "1.44.0",
        "jest": "^25.5.4",
        "pkglint": "1.44.0",
        "ts-jest": "^26.0.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.44.0",
        "@aws-cdk/core": "1.44.0",
        "@aws-cdk/cx-api": "1.44.0",
        "@aws-cdk/cloud-assembly-schema": "1.44.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.44.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.44.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-1VKLuOoFxrU+DLsFAgnHzHymqGSUdFbIhmfLYi9q1cQmHFHNfg/CocULZLOZJGUJ2fM2HR5FUafiiIbbj+Mtxg==",
        "shasum": "3123849061cd9b3f652dfe4a49136e5d58d32f68",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.44.0.tgz",
        "fileCount": 40,
        "unpackedSize": 214774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe2RR6CRA9TVsSAnZWagAA0TUP/A+thcWcKxrPJi4kIEBF\nLlMzFJzJdanI7afgvl+wLoq0OaXIJMq//SVFwW3tvv6UGNQJBaZsqAIjRTS0\nOTVVnzlU/XMMLqhq2uWV600Qwtdvz3+e67P3OiE1MiEWpiJt9o7h6didkPfY\n/LpQT94UqUeL/FhqQnL61YLZBvU6uasX3sFZlIkgLnR/DeHZf/XCKvt4qLag\nMOPTtaqhlG72hZ4vjPNFlKgoajsoM2qXq0Dbzx03VN51k2CzsHbG3R/QZAK8\nTEtFTTn0J/Zs6K/kDj98ebcq5lZ5AeSjmAGnsHTfBPdxFVG+J5MrOX60huVY\ncQ4IMsf2GCzJlqqsKZ3mJix5US7Ek/VlI900hOa32vz/TcPfhF48m0Zhg11G\nyCL1KJYbPvtkb0GQ9XGf8dYfADyhDPzwLtDw6SaxC4Z3otgtfJlBqFonrx/V\nzY3Bw2yhoE6WB33RIqArdSXyaY2qBFqbUpXG9OQWg26k6+HVTgYSmN31XHgd\nWmBLMbqscz2ram8HG8nGfpn1aTYG9fHqpOyVeHDWHXIvAuD48YA2+TmFfEOg\nkyKV3+sit1vsTYNMS0s00eeJSG0CqIpsXgcYN2/eGssMGrcOck1IOBkJyF3b\n6v3T5bcjLGbKyW5TRgGv4nNJJ7UYkqEDRcbdePaXlbt/klRKrgLIg/FTyPls\nuSNq\r\n=94Ji\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDnSuqAq7VEuqJghLGxIn+Y3UvpPuFEoBcq6z5v1HROAAIhAKKp4p/cFW/PdLW+FNEw4L4SeDV8VCaOeGAHpsvJpCMd"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.44.0_1591284857668_0.7310643917329449"
      },
      "_hasShrinkwrap": false
    },
    "1.45.0": {
      "name": "@aws-cdk/assert",
      "version": "1.45.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^25.2.3",
        "cdk-build-tools": "1.45.0",
        "jest": "^25.5.4",
        "pkglint": "1.45.0",
        "ts-jest": "^26.1.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.45.0",
        "@aws-cdk/core": "1.45.0",
        "@aws-cdk/cx-api": "1.45.0",
        "@aws-cdk/cloud-assembly-schema": "1.45.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.45.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.45.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-djZKkqkJklwIUUV37CeALNqaRHSTmEmomnb8cDaqH15smET7Upi5mbtXOQJpNHRblpiBUWkg1dkzm7yf8lpSjg==",
        "shasum": "65373ed12d1470f82afe52af93e5fe415ab4795d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.45.0.tgz",
        "fileCount": 40,
        "unpackedSize": 246764,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe381VCRA9TVsSAnZWagAAh7QP/iJA/fC7C7UjEhZccTir\nq98I/MQWfHCly2EH2J5gGyWvsjxW4RftoXwXrh+ZhxFzzyJixlgIJJcBwafT\n1QM5gvAthJHc7C7aT3PpH/a8iocybi2GbzKbGT3IzYysFZjNjLxXJQEqNv1B\n5DL8Ktdle9FkTlFz1MOB5FcL2kJEpMEKDoWjWZXl648Usdxx35Awi+SZJzD7\nVrCCRoyCoS71FfJ5EvDLzf2VVTadYDNYQ1F+tjfYm3/UV+zkjlIfFSXX5PMG\nHL/2GhxuFL+2qjDz8SXveAYBXEivBXTWLw0nzERIi1FYQOzH9QgDSrrPflBS\np3dCHeYj/FtAV9zw4omfgJFgzywZ2Mki3UuYkDC7RleYANfAv8ogrJLZO4mp\nNeO16Hae/xYxvftpzfhi9n9h66XCGgzpr3zjTPaiB1kZPQhvWGZ0tON3W9L+\nQRZ2Au2USPjFTDH1rfTJVtO+5J/CGrEKi5uUO9pB1zrc9JJk7DxNkfE/bpLu\nHkH+BcS2gG4GPL5dgmIBt+415QlKECswfKmCIiJ65psHUoqMmE1Jy4rmiDIS\n03DA0zbunN53fwrmcL8a48kT4Q1girasVmaqojU7AE9hgXH8uCyW7w/UqWoM\n8TNsGg0dC4elGBuc2c/SnnhPseVQ0CLYun4wQYOeueyNIZjSdAJWCm5ebaek\nQTjX\r\n=XiXW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIC5/n0t70RU52Ch/vWxq2i4kiNzTdhz5tmsE+tLTW4+dAiEAz1WWYWn5ztryrhXNEK7ir/xRBSN/hSlQBlCjLXKqITg="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.45.0_1591725396909_0.29403061205951153"
      },
      "_hasShrinkwrap": false
    },
    "1.46.0": {
      "name": "@aws-cdk/assert",
      "version": "1.46.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.0",
        "cdk-build-tools": "1.46.0",
        "jest": "^25.5.4",
        "pkglint": "1.46.0",
        "ts-jest": "^26.1.0"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.46.0",
        "@aws-cdk/core": "1.46.0",
        "@aws-cdk/cx-api": "1.46.0",
        "@aws-cdk/cloud-assembly-schema": "1.46.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.46.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.46.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-AfOy8P1RBj2eV8cHPYMa2gS0Esnk35eddTnOrhmNkgHLTAo+sgg4+CAdAsdeZ1VzLcwGH+Vb0tJ/6TSAweTRzg==",
        "shasum": "37376ccd94fe0f397797da8b87ce21b566602d10",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.46.0.tgz",
        "fileCount": 40,
        "unpackedSize": 248138,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe7Xx1CRA9TVsSAnZWagAAWQMP/igMVB3EpIzYaXQdSlkq\n1VX6p/NfIOC2nwDjD3dmQCD369YCju0gzNUZOCGb/aX3ns93NpEHyMKOKfMG\nv2O8DFbMAdpxM1xRZ+O3Eo2K4t0htk4f5ioBL0WZRMjOZitKVFTCejc5li8T\niSdtAtkymtoxWnh9OBy30As0OCi9jQepyVqIdDOL8CEwZq4m1qENxpvBSS/1\nAPSizS4/b2Cr2GfEjTaWoMQaTnhXcKhjUzbFxAy7F+m712i1gRY+dBl38lnw\nzSphSENA2CwbjxmNmay/iVz9Eci/NTpm3Bnm5MU1M9dtA4tKwTr8vrCRlKtM\nim8vgyFSv/xT4tXPdee9OU68VnrRsGveFHB7FIwQa4WXwLoRCKQK1kfYFEf6\nyKFcnJftXX3QUk7zxse5O1ljAA5+RXq1/WaN8HPpXgMSge9igksHKHExz1fB\n7QGe7G2wpA6YeZi7gzcKo4NjJGZNbaaA4BSrs2rfIslreNe389duNxMfatRL\ncB/fwVfM4z2SBr/TnIjvy0fnWvTyks2T3Si+wVV3GZop+XhiIooxSx/3s7Lh\np6t8954O9TaXicbEE8Wh3t0A7o6GNP90CWrLRjvsEQPGrL/NLj21uWbcNq3M\nG+H4L2Pwwp2z62Gm/c45/i3dZ5l9KE9jx+TIjfunwrElZ9anLbuo3qbxOS7r\nPfg0\r\n=IPpD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGtXbApNd4UQEP2FSu5r68QqCecwHnNjsIBw7UU12OqTAiEAwDojyAuCBFxwXY1dBusjGJMlSZYcREflhyCCYuLF6Zc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.46.0_1592622196494_0.011211621897784685"
      },
      "_hasShrinkwrap": false
    },
    "1.47.0": {
      "name": "@aws-cdk/assert",
      "version": "1.47.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.0",
        "cdk-build-tools": "1.47.0",
        "jest": "^25.5.4",
        "pkglint": "1.47.0",
        "ts-jest": "^26.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.47.0",
        "@aws-cdk/core": "1.47.0",
        "@aws-cdk/cx-api": "1.47.0",
        "@aws-cdk/cloud-assembly-schema": "1.47.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.47.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.47.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-MXUMvV9zDxw29PPAW7+ve9PCwJfY3/kYEEF16YFa9rNDh6kwZQPWcB4L8yxCOFEbUd+6WQFaNnd8Np9sQMPLkQ==",
        "shasum": "393b9db489beeb2090451418b7a3f50d4aa7bb04",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.47.0.tgz",
        "fileCount": 40,
        "unpackedSize": 248138,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe87NECRA9TVsSAnZWagAAlr4P/3vy0wxMNvhH8vNxHHtx\niA9kesmR/jacZHbMSAJeKnSTI7lO7sHj4+M55NvijHfck8hByil7C9Pgcvou\nkRcCc/+UnRYoN1Ob4WpDvWTGYzb2Ymvskg0J+qUnthjAeMvAU+86QYSyDmbT\nq6nh7pg10VS1nd9L/frA0ESdcy65NoUQfzr55EfdXsdFPyzQZv1dft4stcze\nd7R/J4Njxh0dRq1gQgMtLhFrig1LAxZeKpZzvTUJRgbJ2pLmk6LFEm4P8JkJ\neZp0wPJtETD/h+j9E7oEl0c71H/t2Ddh50BQz4V7kIazEyGZsalXs1NbM5fy\n+zgIlIxRBKieaSP0NpJXeKGH7g1PdOEJQrNbK64lgpjH2ddO2ITxakH+pcsS\n/sS0JaEoy0G/Yk5FFeG2wRnlwHLwfiJWp8mHejr7O1lpuM5tPOR2KLwZn/4l\nNYbt2lGCxxf264yMJo7M2jjQi53FSLbyb+O0MykBc3Y7WTi3Gdcz95bNv3e4\nQfTxDMfupv8naKoQrBOhExiQ4jfcktrFHqchSRjc8NKlWvJoqLSv/tqZdZIk\nHciK4+1phU1LrP93DUPD3MbvXt4XC6DFulQhkiy5y4/XH6LX9W2IPH3AoZOI\n2W49BLsr9aCr+vnlWkTZSpPiUSgAgmhVpa9+V+JLk1mCPnfxvohldLxzxW1E\nnej3\r\n=l86E\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC/p4h0P3KfGkgwVqrKNgoSWi5t7K41dt0gQYlkMR2SkAIgK73oXW3dF2rjdJtUcBCIjgj/+lWoN0eWEnTqefujXkk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.47.0_1593029444038_0.20485279107238008"
      },
      "_hasShrinkwrap": false
    },
    "1.47.1": {
      "name": "@aws-cdk/assert",
      "version": "1.47.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.0",
        "cdk-build-tools": "1.47.1",
        "jest": "^25.5.4",
        "pkglint": "1.47.1",
        "ts-jest": "^26.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.47.1",
        "@aws-cdk/core": "1.47.1",
        "@aws-cdk/cx-api": "1.47.1",
        "@aws-cdk/cloud-assembly-schema": "1.47.1",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.47.1",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.47.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-loQdDWj80hlIRXoInUpOcCrdg6g7YjsVKRvCz8xB2Bii28b4bTw6GiuLoR8diOHWHMWJFjPwT6aQSzxXUi41OQ==",
        "shasum": "3575061b03d7247bac05e52d58bccde65fe996c2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.47.1.tgz",
        "fileCount": 40,
        "unpackedSize": 248138,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe+yZICRA9TVsSAnZWagAA/TsP/ip2lOrlhBKWZw/QMgrw\noq6sTSQ/u3gM1DpRd/pYBsNx0YIx5CYPfLxbwM1YxCIs78HseR8CNhgqdKqQ\nG5sFQUQMVl67V1T35pXQ81+PM3ZOEejH67mYBA4uVDoGaTKxw0yvpsmeNH9x\nd4I5PC+UXRPbBV5pThgUxziK5wL0OVEAsrgsWphLgVmo78wMA+ftcDHUp7u2\nZWi0U/MTQSa04aVHXOiH7wAauUKalYkPITQRouHD/TYUqwEtnRfQcCenPaJx\nLcUCrHxRGBV3XfPNvzBhxEcczqJRvyVIXiz7WJha2kWNKM94KgngDqbPfnD0\n7zUlxD1bWBGSH2uo9q8Mb8D0BkwlCF/5RL/3zyfDmdk9VRKmpcHrbK8I9OqQ\njPydPDL2tZJG7HdJW58AH0X2OuZI8tyPho2HasKgPHPuBGeISj8pTNT2vfJ5\nVfnpFeuAaU+wYwldn2SM7ATWeIzSX1D8VoKod8ClqK2pUU02A0HBesrl3rvQ\nEMZb1e5mdSYFDnZdcDE38uVXMipSoeqSJf7oCPxHo+LzXFf1ofccbRs0p8/n\nacV8dIs4OIm4fF49uJczBNQnHlmEI3YbfZCa2NJ6waRQkiolUAskETnc5+cN\nAc1IrunPQU/ACYME4xlPzgV5nWp6E9rykKcY1GjoB6o9ufIZEjXJMue1dud1\nGdBu\r\n=eyGe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDWB6GFhflKW4+eePvhYORAzQdO0cMeYApOVUgEA1dLIAiEAm0Z4vutm92Fltyl5/CXAo4YuXimqZPeICJBrRdlclBE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.47.1_1593517639413_0.8713741191940163"
      },
      "_hasShrinkwrap": false
    },
    "1.48.0": {
      "name": "@aws-cdk/assert",
      "version": "1.48.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.3",
        "cdk-build-tools": "1.48.0",
        "jest": "^25.5.4",
        "pkglint": "1.48.0",
        "ts-jest": "^26.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.48.0",
        "@aws-cdk/core": "1.48.0",
        "@aws-cdk/cx-api": "1.48.0",
        "@aws-cdk/cloud-assembly-schema": "1.48.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.48.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.48.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-orbpID/ERMsNq+yH+UIbkQ8u/PIYMC2UQ3YDbV1EDAyXI5F8ASBKxEXVJLXvUB2TbB1LXafZmcI9LffYBr/Vlg==",
        "shasum": "186a1e539eafe8aaad83fdb063bf3c4eb3429595",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.48.0.tgz",
        "fileCount": 40,
        "unpackedSize": 248138,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe/GyVCRA9TVsSAnZWagAABUgP/18bqXebyVM0+yEx870+\nQkzB9ouKCpY9CPD0criGWqVFMTajCBjnUkjzQJNeF4dZVhvlnqJpL8+B+8XV\nxFyR9ntOFS3sn38/sf5Bxb6rTTG+uwlYt7gYXEwyOjVBZGu3l3noni1UtsGY\n1bfpu+/0zyheP07cUV9gRsJi9QGABdbd8zyxaOMR1XOTJsIKvZb0urVziObU\n9T/NAl92EYyk8QSeDF7sFTWJi0FFZp7c+UT2eF4f3JtM7JUfGmefJAYaedIH\nooIHP4p4Jok+CTs7YvRV/K+bSLK7y34Sz0ZX9hyY9k9RL5LNQ2ketRASIBpC\nOcYW88owgrnbu0zd5Qiqj8LS30Q5+eMYUGcQSCEN5vfb4dDyzd++xRceWS6/\n0Or4IqsorZun5ZkIAsY2EImJRYsLi2eL8AVkfP1U0NIQSPPXUUX+sX6qVq0v\nnHKyO0FnY3ErfqUGjTSG715BU3lsxoUgAWHt4UVYYOIEs0l41h9pBgLgDmd0\nnbxqhVGLAdYp/JjYituaxflSN2ppzaKnR8+piqWMdn/VZwbWc8oiZqg8lpSN\nQ0aIaYldOOKJA4xhoncX/kXLVs+H4LKVgW3zCeO4PQZfjZqgMPD7opnfdNTO\nKDSfy63Nklxw/WrnehIWaJmKRA3HPsUOAE7fUHy9YVZ4lFlRKWivij7Uvq6n\nIvJM\r\n=wacl\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDxUGrgYRflWQ+GF2qk71mwFIKFg5wrlcP3O7fsme/jkQIgN1veF8jyXAAij3NSYkx3zCCmJGf3OI7WyVUOHnhye6Y="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.48.0_1593601172881_0.5131712702214808"
      },
      "_hasShrinkwrap": false
    },
    "1.49.0": {
      "name": "@aws-cdk/assert",
      "version": "1.49.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.3",
        "cdk-build-tools": "1.49.0",
        "jest": "^25.5.4",
        "pkglint": "1.49.0",
        "ts-jest": "^26.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.49.0",
        "@aws-cdk/core": "1.49.0",
        "@aws-cdk/cx-api": "1.49.0",
        "@aws-cdk/cloud-assembly-schema": "1.49.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.49.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.49.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-66i54r48tF6SSZQJPXDvFjyWqUsMdcELqKlSE/E31JjMDJnFUEaafwY218k5uO79/BR9BELalrBdAXWykWQIOA==",
        "shasum": "deea5a7285e81affb2ec48856d88a90ebed8e52d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.49.0.tgz",
        "fileCount": 40,
        "unpackedSize": 248138,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe/d/eCRA9TVsSAnZWagAAs7sP/RciR03a23Lgzi0J4HKn\nzm0Qd/+JTvezFBSDV3hoRMoB+LH+w4eP4tFWSjR5WHO7DbOkeijHnq7QYJyv\n6B26aR0adHIv9r3Kxa4QU1YNaTts0AGmWMyPBgUAnRg9vMU+bx7ksJxSAxWz\nEF5mojDeIB/Wwco7TiVmcDFrlfKFPLj9zRmOsvqhjVWBZQo1mDx+5eyA5Kjv\n9a8SDrxgCCOOdgn6lfdU/x5k9R/0WdJ4tzwdFAwku9h9EbKDl7PFyKgO57wF\n0U/dQUT6fp6KO6FdT4Zqj5jZFZojradAnepvT/TyeovXohF/C7N6ldvy0QcJ\n5oZ5COh1hjocOfWmQYMXhbZFO+BnVjT7Fa+owJ8CPPhT457oRdov3CwlbtTv\nsFrbbduP+/T1OWcDVijvNXyaddWFzOD3j3i4MCQLQQutAJ1TZAxqvx6mzHg4\no9N/P6XYWhziA4qISBkrg9xxhmnKfkwiFR9ceL7jQ+BSbtI2qZMHZrZKPhNj\nCtqsPSxRcTW3O1cgOaM7z/ubQ2VMjKtUX5Aod+LM0t6Zbc1zAw6tt8uDVqz1\n4AHbWQZEPuAqrpGth6g/YnD58cw08RtQrMJyKx7/gd4YvPfRUDpg4/pBzHBN\nqqXMfdxDMsQ2AxqM7+e+ET+GsoDGGUENTBKlagJOPhXIDiTO9lCTjQUkysW8\n9Gcl\r\n=VOZ1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE2KtB2TtFrxbuhIerRpD7rFm6imk3Y43MeY+pkEN7ToAiBL3GshdhrEZsLDUD9B4h8tPxtiy6K0Te5WijJey3SicQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.49.0_1593696222237_0.014122556847053103"
      },
      "_hasShrinkwrap": false
    },
    "1.49.1": {
      "name": "@aws-cdk/assert",
      "version": "1.49.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.3",
        "cdk-build-tools": "1.49.1",
        "jest": "^25.5.4",
        "pkglint": "1.49.1",
        "ts-jest": "^26.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.49.1",
        "@aws-cdk/core": "1.49.1",
        "@aws-cdk/cx-api": "1.49.1",
        "@aws-cdk/cloud-assembly-schema": "1.49.1",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.49.1",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.49.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-JyEk2nAjmDz4lIVa6TZS2GMkO3D433lgzgTmy10IpX6B19wOWXLKgnVheOb1uE9u70jeKPbM9yT7Nf8i4LQNqQ==",
        "shasum": "5fc7fd28339cc618a50f5c065bdfea94ff3ca6b5",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.49.1.tgz",
        "fileCount": 40,
        "unpackedSize": 248138,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe/jEECRA9TVsSAnZWagAApTUP/jGt1jA1DusY9xstXYWj\n6eFsyCCYLJ6+h/LhWRnf5Y8yX7X2V30H22HKUnc3DW/4oICOTPEAc3PU3DYn\nrJtu5kLu2rOkCMpRJHWKv/RkIYh/aV8hgtHQcQtyFtqzZCid6kGGtcPHgDH/\nC1/hJMBpUxsguAmnv7HiAAi4KUFSS9CsMwFznfmaf3PGNKf+slpqSQwELkyP\nEqxptYoiGp4PdQv/7dh3UGDIyDBcwI5kb7KXh2i3vF5eXqqbuINmr1uBxcvC\n4suaV2VwdDhGOd0JDoazfBBWEuvkDJXhGvRmwdlz+jKPU5XT5y79coQxq0LZ\n6sOW1EWpyQSNuIlClllFyEoRLFSUkcmJQE6TyZRVlTCfe7aLnYjyGhzAPj2k\nRaQvqE5QLoX4S11byRQkzIwnTSKuFM1JcTbDT0fl2EeGv22bXfEV9iAoCgZg\nT/HUV7HiuGCXIOYIgbJwIop5jV8rG7Cg8lT590043K8PZdWTqm9prLIfDIYA\nUv70UAaWcyckDnmc35BKS7MRiynQOoJbH8yxdbG1XVHmEANZIU/uJ0q2cLqc\nX4CxTHDsa0shZSshp/AgHr/nq9Hi0XwGPgSF0FfUzVAvlto24hl65VE8jWyp\ndZykl4GDQsfyLo5GgiCs/jYR/IthM6jgW5zzGnFGocJnXkiDzAWosJU+n57s\nN4T2\r\n=Rwyw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBB6PnnUJjGWBOZDGvn8LTMchFhICLAJ/VugtKXuHuD3AiEA7FOxvKwSd5MzfuxZS7PXePAR4AQ+wn7DIJWzlkerXHg="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.49.1_1593716996331_0.6045113642505111"
      },
      "_hasShrinkwrap": false
    },
    "1.50.0": {
      "name": "@aws-cdk/assert",
      "version": "1.50.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.3",
        "cdk-build-tools": "1.50.0",
        "jest": "^25.5.4",
        "pkglint": "1.50.0",
        "ts-jest": "^26.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.50.0",
        "@aws-cdk/core": "1.50.0",
        "@aws-cdk/cx-api": "1.50.0",
        "@aws-cdk/cloud-assembly-schema": "1.50.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.50.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.50.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-VueUeqY5ON7+UsWyyy1X1tVnRJK0hQkWvtteqrd7Y9PmydLENTmJG/gNu4YkaLu2xAZ78xTRTNQEzrCwPhtc3A==",
        "shasum": "9ada5eaa50360df962f8dd7bcaa923581296652d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.50.0.tgz",
        "fileCount": 40,
        "unpackedSize": 249368,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfBIluCRA9TVsSAnZWagAAhPwP/17ROdQTUvSbs0ucQcxQ\nq5jHsg9/ytJNmf9PFht+HrdHd7V5DHFF8JL7hDklIjBErj7a8AWbnoaeiUbX\nxW3+UmT4ym4by8FpKsMAEP/enQGtgdX+v0wGCkVTNz/zZpuHirBhQFnlSAxV\nl1aABWaqaBFDZ1UhBdLsH8aUumVu3ohWBlULFW6IPkQJXqfEgOgCp81/NJzB\n4wsmloL9boeiCIE2/SGyES0bPs2tGxhfuo4GzJ0S+vVn5e4hbuFGvlthd07x\nFEMFxE294fhnkOwJkcvbCdiGF91tI9ay77QSUairxPmsrbclEl+UsGUiFGPE\nhu5tDa7RVMHymF/gaTzv2+wMK+UBdsYy9SRE/9ljfeAdbgyFF59A2sLcSNC9\nHyeQcRGDTxQO9C29PpLXRBlcpNUMUvxDIRCSfhOF/zeDyX7M48ZZ6bSXbRf0\nc3CzCVD1jzmE4lB4YJmfjMGz5cAQith7YFcnCW/3H33TaN7FoEyhTrtt+mlG\npppIJTz895M/qrgN3Pa2r8qVy1ZlGtlg9fucs+spBlHnzrzLR3s6PQrM5Gxx\nc9FGkay00K9tseg9ZYLRhLjpRcbjqNfOW7YbjPqsUkiarSlAG43bQECIb2zT\nL/vx+aRS3kMy8bq/GAZO4WrICAogh8mnBKiZy1z1kX6vJSSAR2dbKe9nKOdG\nVpav\r\n=W6j6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGaxhXb1j9VscrhyElXphbXsWrA3Gp01xMQMh+ejLEKKAiA79zlvA17Yukx4HiyNFyjusFFKCwxh5v0cEsOpxpEn6w=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.50.0_1594132845797_0.04338482941237065"
      },
      "_hasShrinkwrap": false
    },
    "1.51.0": {
      "name": "@aws-cdk/assert",
      "version": "1.51.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.3",
        "cdk-build-tools": "1.51.0",
        "jest": "^25.5.4",
        "pkglint": "1.51.0",
        "ts-jest": "^26.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.51.0",
        "@aws-cdk/core": "1.51.0",
        "@aws-cdk/cx-api": "1.51.0",
        "@aws-cdk/cloud-assembly-schema": "1.51.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.51.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.51.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-42A72TYLGR9wNApoNVE2JT21lspEEC0jb7fltt6JaHX+DsD4FlQ3foXTc2lwUA3oKRRTnUouHo3fsCpsaMKT3Q==",
        "shasum": "7a95f3a8b3f6ca0915742b5283a1f454afd93a53",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.51.0.tgz",
        "fileCount": 40,
        "unpackedSize": 249368,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfBy1OCRA9TVsSAnZWagAAW0gQAJTsp4Zi2N2/d3tA8/9p\nsEuQh/W1TkY8QfJW3S4XrG9csHTvPDYBDq1IKrwBooNKtKJrV/a3yR38SCOI\nDEEx1wjPlnsZpkKISamP62vZCHBZa7liHuWWGqm8I6LkjNkOEdk2KgTbGMGU\nowNqXD1KYmuQNsu6hg8XPraXGbCBQ9d499/Aj52yN1GXDoNZ/uO1J3nRblLo\n1sInn9SyQJRZanMbU6MrPvcfsaq4Rv0AX3Q0yhxzwhR3VexT++5P9m8Yd7z9\nqWYm2MVmWIuHOrupPupAd/2MQV6x370dSHtFB2fiDeLNiKRzQXV4LH1F98rF\nvqR9/KF9gsOl0hegcLHQdiKkMV8Uy2l71cc7KDhSNmDjAQFszkxqZI3VLZi8\nINhkp81uXnHcvlQLPY6/Jf0Rh+78VkJrgaMy+M6LEPU+9nEtLROhtLlxso8L\nnqb/l6J1u5LJcm8g6YaNi3cwRQo6x+XLGF6NJnix99GKbd0RNmF0n9hVrV5k\nymTR93nf+ZFvXcXAs4XjEdXX6xzffUmrCAHcfpfX0PvyxMSWJ+qJzhEvr5zn\nG0BKrSGREgDVAxIvSEPIgadSZm7pxYRWdfiHuMLk5TcKzFYnMuCescI5PnHS\nQkabtOf/pc7csJ1EUX2fKYzWjCucXPjMXiSy/sYGkbuVweEILSbLWealhSgY\ncFBC\r\n=ceUx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFcjt5ixkWrdcKkAiGUaDUlGf/Ndm2NoUtHvxVSVPBxZAiAgODOzPdpukE1uBql7j78rRvkGmzGG+g39QqD/lzd5IA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.51.0_1594305870374_0.7104512796382614"
      },
      "_hasShrinkwrap": false
    },
    "1.52.0": {
      "name": "@aws-cdk/assert",
      "version": "1.52.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.4",
        "cdk-build-tools": "1.52.0",
        "jest": "^25.5.4",
        "pkglint": "1.52.0",
        "ts-jest": "^26.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.52.0",
        "@aws-cdk/core": "1.52.0",
        "@aws-cdk/cx-api": "1.52.0",
        "@aws-cdk/cloud-assembly-schema": "1.52.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.52.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.52.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-txYo/EbyjZjTAuZUV+HXTP8Nj9z9dympUeDLQQnHsB2UyMSlsSm+Ea443Hk4YdC/0Mm5demgIVIIe/F6oZ4QGg==",
        "shasum": "f3d045191b07692998904d7b00b6c7b053bccddf",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.52.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285040,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfEmXuCRA9TVsSAnZWagAAHwsP/1WB9z3j9y92He5YdxWQ\nt2Ua4aX39saNUh7aZx3E038GrsADtvSo/dzG/qmghbMsNqt/pk4gl2AyYZ7G\neOZVwbLJW004p8IX2114WcikpJN3QAWoupUm5o+xq3dJR7NK0a3Bxtr1599A\nrmfMYiq5b42Bs0ibqyLyb4HPdNh/2zKHtcgW3CIJ357/N2Fz+d9e2YqtgOrA\nd/anSr/9h19Z6qGmPMl08eC0aIWX1Hm4A6ibGjjo4wDnMbf9jJWomGsqesYD\nmfGk8jY3SGrfEnib37MUq035903dqw1XrHoOpHb67M+7ZnkQqolGg31gefYb\nERhj6nuy8H/uZq2bRfKyTKpNBBD2bLp5sBYwygp3y4rxcSSOcbU8j++lzbf9\nL3+yndjW2vbCt3GAFjtt3DqnutJ6bnK5FrHdfDZFZex7LYckS1g6FV/xyrCh\nz7z6LbR7+liROKN8j70roZN2DTwSoBNGbn/M8fs/65M1Nd+LRQAHjLjzDemo\n5oTMgk/YG1IrTwXesf/juWYzd9H7ioHvlZ4NXj2tZ+s45n1USCKFO9M9ny5u\nRcO6FoMZFQr0corqf+180HpSOAV/2KQ8z4MUoRW4hsjURpqmMxIIJ+eehUzK\nugl0XWmvi2mAtNNltp87e5lKDkaDZaQ8oLj+rg7Vb9hXIq0eqqpWg0YLhD32\nO/9/\r\n=YrqH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDyE2Z0JKkE3Elq40arHGIEEPar65WMqcnPjGjMd8x6uwIhALxgbml59Y8RsqViVozTkmx5rlTO7A5E7aWoswcRvZj+"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.52.0_1595041262286_0.563949789343593"
      },
      "_hasShrinkwrap": false
    },
    "1.53.0": {
      "name": "@aws-cdk/assert",
      "version": "1.53.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.4",
        "cdk-build-tools": "1.53.0",
        "jest": "^25.5.4",
        "pkglint": "1.53.0",
        "ts-jest": "^26.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.53.0",
        "@aws-cdk/core": "1.53.0",
        "@aws-cdk/cx-api": "1.53.0",
        "@aws-cdk/cloud-assembly-schema": "1.53.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.53.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.53.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-C59rB7ui4YsEZgtzD7WbSwNiKd0dQEXDhvDRn9sbHB5bdQkjRuiIpMOJEbx0TnFEFCAaaTNudGQTTnaVm4kq5w==",
        "shasum": "731afb286c7b0927ee202ca948d45ac0ea563383",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.53.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285040,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfFYsxCRA9TVsSAnZWagAAF+cQAIlSidzoNLYs/3lxtOwv\nWU9CVJnd8IQFeKP4tZbuzQNPqNUmyAhoYUpYFfABSwHCml5DbLkiYsTYHYtg\n4as5sFHMkrdDSKh8hXU/U39GVjY691KKQMCl4qKYdXKaH1Hu/iA5atpA3uzn\n5/y/y2JzszdUilcr9E4qsdELVph2tPdfF17bdxP+Q76aLTI2SUSlimIxTZqL\nG0qY9V1asXLAxZigQJkIsu+k2xZKsWn5Em5skhUhBiFqn8zpYzHzFTdHPORl\nTHbB1tif+XCyrNM6CPigDlnhcqEzseL6vxmy7R1m5ACO9mk/MnRX79Qq7RzZ\nEj6hA2cjL/Q9qxiIlO8tuOjUHG6FIUlUVTzDOEfK6xrUA+A34BEFx1aOxJWG\nYwIizpGBoQT1ipOzC3YmS21h9k6CRnrRT4bsmr+3HnIatXrGQgR9kALPPxDV\nF6txHs26bLsWz+aqKzAFhcWUXnI9XnSzg/5UkvHUJFRVEF/LFudEJ5e3p9y1\nGB+rPCkiQL4JN96lHE3UcvBm30jDpqzMewVDzSFg4SGC5lZ2Af6Vghy0lU8E\nwRhWhOKUsjrKBvb+vtQA7GJh3Gdo5nKD07Fz/iDjPnbJFkm0EfQjhQ/vimu1\nfxuKPebNt2LiOWn/UPwIuazZJvM2Ks0ZlZk8Lls51lJ4tIz9fx8NVv2gwHnT\nr5AZ\r\n=Jgxb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHWYP4Q1oayMSoO/d4AUWRxH2D7eqd5Dfp4tWjgrfCgAAiEA0fLPm2hUrJIa4TXezj1ZYi9Yvo094vu5PGGiVHqY4jo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.53.0_1595247408692_0.010201861368083653"
      },
      "_hasShrinkwrap": false
    },
    "1.54.0": {
      "name": "@aws-cdk/assert",
      "version": "1.54.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.4",
        "cdk-build-tools": "1.54.0",
        "jest": "^25.5.4",
        "pkglint": "1.54.0",
        "ts-jest": "^26.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.54.0",
        "@aws-cdk/core": "1.54.0",
        "@aws-cdk/cx-api": "1.54.0",
        "@aws-cdk/cloud-assembly-schema": "1.54.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.54.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.54.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-JJ5LXeKGzZzP3epMQQlpVGxNhoj+wsqWZehdsHyciRX+ZUeX3xz37EA3zoDEI3aq/yzN+MVvbl3LjAnfsdrQaw==",
        "shasum": "2ff77ac7fdd13c3ee136b1fc9b3018641f5ee8d4",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.54.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285040,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfGB+eCRA9TVsSAnZWagAA3YMP/RW1YgbWGwx16TzYDRUM\n+L8/YYlkqdRA3b+C0g0btfJnnX7cLyj0B/Z/pfuALtgSOu2W87rP/D9MTqED\nh4z0B4g3xS3H7uLt/zcxQeVhhBcH2UM9lAX3D+GN7f1SPN54Cz9JCgsBgSKH\nsgVGkyjoa7kfmeLn/spWWMaY/W5pTXlBZ3U1eqEx7oWByeWPgqfHdCb9j12c\nCtOsYP17hh/c39d4wR4ORSEaPlKVXqPZaCZ/g0LnSnNuz7uDECkJhbSLx1tD\ne6FV9XaX4V44hlF6rUsU3CKEQ49iGKAW5lprNEVLD0gI/vfr22HOdXalL1ay\nMWDQFMMe0h+hF0xx3zknk31xk+xtO+0MR0uftKsZjhIykpLGuGu7Q0yYHabm\nxKR10DgpshcJKhhUmRwydvTjVEVmXQmjAXT5H08O4lmKDClx+FScVkASODz4\ntddkI0+WVjP1Mn8NF1XP1Y9WSOe34UgH+YTnpPlzU1kKXI3YbG9aKBX7knc1\n8LRgx2/5KHJ0eMl6qms1WlMlwC/fZYgaTu2D0IITBPnOLCuCHIVOsaxe6Scy\n4qjnFFwCBe4DZrC8Nl+mCmCmeVK0IFsFG6Gk8ze8wqPeLZarOPJQnV5zuBwj\nbeEaUVwXi0jFgBnDFK1r8uwOf6j8yiTgd5CPxHs51qj9HzAexYu/fdKqhVC2\ng+yd\r\n=1jD5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCalAWaQ4btikD/6NuHhaHlkMeZ6xZ7y68rIA3srs7RXAIhAPqJRuJqcN1cCuQkr9sRn5DPNiJB5uUh1E7DJlHBCadR"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.54.0_1595416478372_0.12236102746980015"
      },
      "_hasShrinkwrap": false
    },
    "1.55.0": {
      "name": "@aws-cdk/assert",
      "version": "1.55.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.4",
        "cdk-build-tools": "1.55.0",
        "jest": "^25.5.4",
        "pkglint": "1.55.0",
        "ts-jest": "^26.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.55.0",
        "@aws-cdk/core": "1.55.0",
        "@aws-cdk/cx-api": "1.55.0",
        "@aws-cdk/cloud-assembly-schema": "1.55.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.55.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.55.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-f+EXzBpFPl305EnGXH3DJLY/X51cU/u4enCE9BdCq4AnyR3/eqGpKuhav3lxZ0Yu704j9wZKd2M+3Hn2PPjWvA==",
        "shasum": "04114356c911afae0c26b99f6cd91823c2676e9b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.55.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285040,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfIKnNCRA9TVsSAnZWagAANZUP/i7Et4VlnRVii+rU3LZG\nuVeAhhtvYyfNLdUng5/4MPXKdxP5b6NmSVtGOKf/cKsEzybIJ8SsxsyM5DNu\njQSejnvXBdTMYjGuffaRyah1fevwFwUewS7nTvSFquH/gTxm0u77RdTID7PQ\nVl6WezwZdfgPGJoRZo9Iq784gGlJiUUwwLpsUk/peYOCLfHCF3d3Oc124a4N\nYHzMIbzde/hepXcGMsZChUc1OU0LuGavAPK0wqkdJeC7B+HXLrzCmp60JlES\n1CsFbnDvvWl860u+SXrstgqc2QWU5iPq+B/XUjNOwIG6FRcD15lypvJeAfdo\n2xHwkivqaZCm3DzbIazPGDhZi8oY2ExQadGzoYz1z8+i79b8pPgOp48XwTIJ\nmwedoBReWvn7gLUobEO+acttCCUTC3/7i1Pytj7sgL4XDqwHtV2SyE5cRuJ4\nNKhm2Jmx3JctPwyNzPY6pRfYFeQ7HGMG2R24F0zgxEyrrAtmELzmPr8MHeyb\nRkMGdwfL+4Byoi26BskEFem9049+6XnoFwb+dGSx7gkl7jJdgOHrjhmvTYgC\ny2afVTVfi+/OU1D/Dy1OwNcTE+cm1zpqD/WVamHZ7zS7ujn+rSvgvw/KFa/n\ngmrmAKtNJNRjQ6Xs1icbgT2jx/oWruRTNl6MKl1G+xtNBYnTDosrUCphnb9V\nzCau\r\n=H/E+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFETk5b81evwYlM54cDIPBYvm44UbW+oFWGbjhFdGQYUAiB4DIPsTCLda++FDdiA7Z68UTN1FDvSjM+ujQa8+FEJgg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.55.0_1595976141483_0.415464286408743"
      },
      "_hasShrinkwrap": false
    },
    "1.56.0": {
      "name": "@aws-cdk/assert",
      "version": "1.56.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.4",
        "cdk-build-tools": "1.56.0",
        "jest": "^25.5.4",
        "pkglint": "1.56.0",
        "ts-jest": "^26.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.56.0",
        "@aws-cdk/core": "1.56.0",
        "@aws-cdk/cx-api": "1.56.0",
        "@aws-cdk/cloud-assembly-schema": "1.56.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.56.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.56.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-bhFwl4xD+svvdJvSlJgKcv/IsTMUXOeLIPVzXcFRGWegBzwVCmhQmtpEhptUfyIGJEe1SSlgWdja6PvS+w2EuQ==",
        "shasum": "781fab8de8c97c3dcedf5b204b94f6d84a32d40d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.56.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285040,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfJL2KCRA9TVsSAnZWagAAvK4P/id57DOwi8JjZ9shAfrn\npc2jmoUVx9eJE/zfaT7+4zhJI0VjU1Wz/xfw8KvHmxijYp6jwyf1yJ35dlKN\njiaf3E4K3QAU40QeXR3j5nf/f4YWPRxhVoyRVeCeVNxac8Yjc9s3dHzE80ND\n+Or9A4Y24fv+yV1Ffjip/c/ktepN/z54HiqJrTGjDPJuEnFTsK1i2nZ2odgQ\nd7La4T423uhgCxr5dZNXAXyaVirDLNvd08RWNfCWoG4viQ+l3gIBPzNv8Gs1\nBNFJ/Va3kg0MiRzdvWVK1xCWxRzhRIdZMS0s9JBuzep/J5zceW1tt8zhBXFf\nSR5HkASD5KkXCi33qtavrGFQ+P891URDYpA8RV6QM2m+0AG+BE1hP0mfURch\ne59p+ffY+Wfd7AwC31EOlHgmBnAO2p0WDeGPgQIyPQKLG1kZKPlNxcp9Ps2z\nVKQchZh4Cf0ECGTEnVSQyJ7xsPZwnNwOuZ6mouRR7h43qSjyEETMG5U2Ra9A\nwDLzdW2dL3pp/nWTV2prq3SpuQ14HWK6G7E/2wQIkj3IwwDIMGxeY1nFDd8h\nGpth0ZL4zswE/8UAFRZQvA3oQqif8IES9D10B0ZKxxJ0YlQc6eg8/ZnL5hTv\nJ50zkC0iO2gz9Dp9hDn1ZYhCqqXkxssj9Pjr+MkDUCISqzxY1TZpOCBQRLaF\nfg60\r\n=K2DI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBkzjEIiLkdX6lC59qxNPnBSJSgx7IsbEc5SwY45NmXeAiAk0ZVSZrv/6e1BkFH2y54QOHFmKcqUldyks8ifu8HYaw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.56.0_1596243337811_0.06843502644319699"
      },
      "_hasShrinkwrap": false
    },
    "1.57.0": {
      "name": "@aws-cdk/assert",
      "version": "1.57.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.4",
        "cdk-build-tools": "1.57.0",
        "jest": "^25.5.4",
        "pkglint": "1.57.0",
        "ts-jest": "^26.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.57.0",
        "@aws-cdk/core": "1.57.0",
        "@aws-cdk/cx-api": "1.57.0",
        "@aws-cdk/cloud-assembly-schema": "1.57.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.57.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.57.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-sl/Zwcwo3G8unfz3RZ5I3EsUSgKnCYqakNVRYbTVZm9wObBZsbQ81QhmpAxiHCws9Z8rrbRYOJ5UI7vZ1y+U7w==",
        "shasum": "a9e961ca090a259a19581f650e836c230c06d82f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.57.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285803,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfLcGmCRA9TVsSAnZWagAAoEoP/RUdfDgiCYEPGQ4frF92\nsWKHwdzlJzc+rTCEO1UTE96fNoCiz2BA96AEOVhgNzA1McggzrgPZFF5WdIy\nFA19xsF9RVNw6L7t7ifgkJhFae0gP1aTLY27a4+KVoqX064fI91Po3tegZ3G\n8pAOc9kMD7i4jucUxCWG/5K9LNBgM/WLvR9MIEXHnjDDks+j/fajoEoGZYbE\nfdQ6zRh/t3McmVdpqDdPARBJwIXTbDLpObZ3iA4/femYzHFGkRPqNZaKwkbq\neZ0RJgs0oJUKFOCIw3jpDqg5l+9JCLVaIkXnYBoIdNWE8iTL8OiDtP0c9SwU\n6CKpKOuNeMA+roqu1xRXfVlbV9Cs4u+cFq5kgFXTVjfOPQZhVnHWFbYElNR+\nfN8plTcyLU38fpyGrlUzI/y6mRRbllmdEM0d9T60ic36m20b3p4Y8Yq6Frns\nSBdhOlvRkZoR4CmtgekANXZoR+1bVpVamvnG5ZI33XUBxZIv4nI5mI6StcnC\nQxbHLVSE3tTovKOdPhq8YT8V2SQAaEljlkU79+8M46wh0cJnkh1Hn+75MaoE\nbCiqHq66DS4kUb71m+Uq2EZ5E2xKclEKKpiMOlDDOTAObBr5pn3+8l9DDrSC\n/jpbx6i343QRLypHNCuavWWzNYUi1NeOuSqaVRz+f6InuZcxX61yY1Zo5b0S\nagEY\r\n=kB90\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGkaaCYjLwoXJJplARXGeKWvhgba/TfhNtq/KezZqyE8AiASeoqhDQFCuht1XOtAu7B2P0An9W+LcO40pDQ5UxO6Dw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.57.0_1596834213942_0.03695143775545273"
      },
      "_hasShrinkwrap": false
    },
    "1.58.0": {
      "name": "@aws-cdk/assert",
      "version": "1.58.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.4",
        "cdk-build-tools": "1.58.0",
        "jest": "^25.5.4",
        "pkglint": "1.58.0",
        "ts-jest": "^26.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.58.0",
        "@aws-cdk/core": "1.58.0",
        "@aws-cdk/cx-api": "1.58.0",
        "@aws-cdk/cloud-assembly-schema": "1.58.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.58.0",
        "jest": "^25.5.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.58.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-otuTRvyFUhxipA/Zw+S6HIewLsm4W9dyavXZlTULLJVUQpTfY+uScPB0R6ajJfkO3fFrOTZP4LglRGmm7e4zsg==",
        "shasum": "2dc777d0b558df6f338a4e8dafeeb43702650aad",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.58.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285803,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfNE+4CRA9TVsSAnZWagAAClMP/2G4EYesG8CXHqhmtyDp\naz7bFGXf8SDRvy9nJONyacnxbvBRHyb28m9QPp/Wn26Yny2xJxhil59MoGEi\nO8BL8bHYxVm2TkwrmzvdYlwbWSQxakgNptPGjijJRVg1nr95FkSARcgzuUTg\nuZinPMpp6NLXuWmDNd1aTqfhaTYLkxbbhX+fK/sn77ybYgnCaKiWyRdyPSTl\nCwhxjdX022c3B4PKBtee3rVzEBfe5rBtkxfMayKx1WIARiuf7PoFja15y7NY\nF5wadY3K8Niv1NuWGdUaQCfpZajVkcZ2LS31quxbtDbb/rTW04uaaE+DhHFX\nr1/PeXj0hadNXT5opKwfWscIoKQGjvlUjxMU7zss1MvzcbeMJOPecEMxjBuY\nMk5Gci6KerePGq+y0jRWFCKJ8H9wRzHVT/r6iPElvqEIei067ORKvk0qj67R\nlFgEyL/e8LurSGop1nvhXpirSGod8wefeUl1JdZ7dW6iBeNe0xJsQaN2wmlh\nu6A1BbMTyo4AQ5pKV/ipxHboZdS5riOwoWsmB+oyNBtwfROc9rkzxEz1SKnP\nzgfuE3Ssc1s/s4Y5P++d2TclVgnBz6EgStkkUVTpZlY9QaPtO7mGmy4yxFs1\nBr9lDNoMvFKVMbXTfCF0+rh1Bww7u3mw240ZDmnPtwQq0Q25WJhvQ5zA1FfB\neq1p\r\n=ePLH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBK8KbfPwRfinuDaqpiCNgYLNMUM3vqCORExw64CFZUqAiEAjVQcIcnj1EcydeA96MVOYN+l9McOFijkp8BUIPqMDI0="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.58.0_1597263799927_0.23442845017832892"
      },
      "_hasShrinkwrap": false
    },
    "1.59.0": {
      "name": "@aws-cdk/assert",
      "version": "1.59.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.4",
        "cdk-build-tools": "1.59.0",
        "jest": "^26.0.4",
        "pkglint": "1.59.0",
        "ts-jest": "^26.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.59.0",
        "@aws-cdk/core": "1.59.0",
        "@aws-cdk/cx-api": "1.59.0",
        "@aws-cdk/cloud-assembly-schema": "1.59.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.59.0",
        "jest": "^26.0.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.59.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-60AWONWt47O46GXOIa80jaUHwLG20pHM2gee0rwM1DHP4nOBcDBgRAIHP9qSCkASXSi/VuDbaXZPYpHohI0BUw==",
        "shasum": "df41ef5b500e54a3b41d17fd36ea3a710fbe1625",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.59.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285803,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfNzTrCRA9TVsSAnZWagAAyLcP/iP8LSXTlQxIN6ZhwLn/\nOxtYORYhtltpoyDApGv1wzSNhymxdHdHmrPYwenGVJbQPPPtsxvC0A587IMm\nFdLFa2Mau3EfouqLwml9dtXWI2iGJpwEn/1krRSKUMvMaGiI2XE1cP49jWFm\nrgNPEXqFLAINaigXbfcx+dKa0I61sWQKi1/B9QG/1BD3mcTK5Sh6TzDJqRFp\n3a/1iKHzfLgKKzP6sdIlk/5bNO/40pz3eB5lwHIdbWdxBqd8mvgUtUKoYD5c\nmtBThgq+A2a42QbPVn3qesBU2MY8hSv4Qu4duVvLYVY5P+/GjKp6jZpqu/ru\n3F8TOyfBIMDZySPeW+OeeTicdS3+jeP38EUGqsCp8YeuZ3ReyJcVw+SJFfnF\npVUYFZ67saK7BoWLva2spDA5skE74a0q+CQ4PrdXg0/uGrLGBVaKayfmjl4/\nWxzX3H4ZfeVeCQ/47hU+P+pMqy0lfhXxAp2rujrDZ9545AN91Wnc8bLzzWec\npo6GzpaeZkg86gbjBSyOKhoImKX3CIIxBiP7tUhyyf6S6f3kV1tF1yZ44zjO\n/iF8C309m2Hl3QUYGmxO/AiLpqfD3OAbYn8Kj/6LQ90TU/IgrFqaA/iw4CxG\ntIHi5O/ZOIxRogxYDsvJNeFtxntQQmadHF201H9HRiz/P5I/d8rb2JU7uwdz\n+Qg0\r\n=ZdnZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAEmVZcjpPXMJQ/hEq6H7ZJm9ovEQYqNNsJ/ePeDrGSNAiEAypYHGztdKjbh3mFwDCkV/VZf66M1HHo2ItOpz6bJEBs="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.59.0_1597453546641_0.7216767657584335"
      },
      "_hasShrinkwrap": false
    },
    "1.60.0": {
      "name": "@aws-cdk/assert",
      "version": "1.60.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.4",
        "cdk-build-tools": "1.60.0",
        "jest": "^26.0.4",
        "pkglint": "1.60.0",
        "ts-jest": "^26.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.60.0",
        "@aws-cdk/core": "1.60.0",
        "@aws-cdk/cx-api": "1.60.0",
        "@aws-cdk/cloud-assembly-schema": "1.60.0",
        "constructs": "^3.0.2"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.60.0",
        "jest": "^26.0.4",
        "constructs": "^3.0.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.60.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-lH4GUD0425VPiIy9s0FqSvuluuAgWrt7zK9mtEiOAhK9/DBVOeGSubRDZAMo3L5n7lesA5aS0TpFa+wTaBKzFg==",
        "shasum": "a1e186df89c6325c209ce36f1361fa15f14c027e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.60.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285811,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfPcnHCRA9TVsSAnZWagAAlRoP/34G6ymmbu5ipeYHrc0k\nYK2e4aIjadUztgL2a1Y1DuXZMfdQ9ZPb07BG3dxI17NGlwVtoMYIuOcqUt5T\nX9C/O28naPX4uYXit2CkcL3sLmUuxkl6IuB0B/iIxSc+mui8flCWZl907IYj\n32PbCPWFmJdBDOLT1seLali2coaiIPxJjpjWZlIr6mO2mkV3FId9zwVH+asw\nCnsmNsi+iBPcFTSRW/qRo15beA3gaSt0WZt7kIDEFmNZPbl96/mtm7NllORB\n4KqqmR9Z+RLbRAfAWJ3/fQmoAITwLkp4DYr5CVDeobmeJzKqbUjMMWf2zPsI\nUolublQlofHIifB1mxfIj0A/aVRV77JuTp5GmbTlsPqHXPM3Dw3TsO8Gders\nJ9TG1Biuces3cW359SUrHnF66ZkNJSAu0JhLysQhtCzmHVE7Sl9KNYBkS6cI\nURfSJns1wHrpIaY69qaPNbOVyNC46SzePZ1iE+vxsfRSqVGygpj9qtxJwenm\nEC+sz/20u41N4o+W79oE7hc6RVlv5jjPmVojuz0dds6X/+Pe3VFEyfoHAoqz\nUnazMv4yLjYTz3RgvxAxj6nnzGUc2GVHZ+lTF5KWAw6l5ts+jLzakoMBTLs8\n3h64u48+2mNXk9mj5gwlRK4TDB08NptcnZ1B0an3FMebsyB56Q3RUPj/UYxC\nxa2O\r\n=NE9y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIArwoQVJAZUwIg0jzhQO/f9QxhBh+KA5jaYn4rdigNwdAiBqPfGFlLNrRmH17eGl/rlYIgO2Eja4VwMKuQEflBK8Hg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.60.0_1597884870503_0.6930411642911507"
      },
      "_hasShrinkwrap": false
    },
    "1.61.0": {
      "name": "@aws-cdk/assert",
      "version": "1.61.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.10",
        "cdk-build-tools": "1.61.0",
        "jest": "^26.4.2",
        "pkglint": "1.61.0",
        "ts-jest": "^26.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.61.0",
        "@aws-cdk/cloudformation-diff": "1.61.0",
        "@aws-cdk/core": "1.61.0",
        "@aws-cdk/cx-api": "1.61.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.61.0",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.61.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-avvDVpyd8zLMT0HEW1K2ngP5U8CHu+BtPinUkLpLXVJ+Cr5K12plnk84+BOWe1NhM9/bqC4b1KA0c6MzIzgREA==",
        "shasum": "c1dbbf71fd64beb067a6e6237e03686319acaaa7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.61.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285812,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfR4OQCRA9TVsSAnZWagAAi80P/RA39SJOo4e86afhNmgd\nWWHXdAvaSlf5ogv7+9xmM6r1yeGPURq4Kq0/0f/JXW+dIoGFjX+aUL7LtOoC\nROW5DsqUDmNiYO3bXRmcnHL/b+muGhX9aG+gcuHyEuQOUaW9EVU7z2qHA8Gg\nGGefeHFlJEPlzNzqRZhCN4/7QKZj9u/X9oVcAvjvkCj3meraeNu5Yw7fLTLV\nz+9YBOZ6N17kIEs5Ls/sZi/WgYx9qfO7RSBKhOwTyf/F2CBP9EVvg18om/GR\np2QvbAYo8FSEJjKiaO+nOJmnmDWCl87uCMvu94QJi42KIy1JPqwHaoXl7Y5a\n1p/gMj2E5DcwkiqdsTzaR7M4k3SSAtFYsMzqNBgNci2GKxlEn4WPrK2qmgaV\n1uEnRcWSDIDJ+G43jvzBB6IDnFO64NNOgqUQFX3/xxqbPz8YJFshRXhUl0cP\nDfhyhApBZcVgiQL7AUKOCKhQxzx8IMSenOrCbYxb+LB1EKvnK76UpEviyVY5\npk8ITk0nZ8nItyLjL4HSHB3b8zFI7B5S8YVzq0HuXUEoLWabVYVWzlt+xL+i\n8NvBF47gsF+wgSP3+vQaaGvyT/YgbqMXMTGwDuUhfmOQzebUhatE9zlnakHk\nAqPC1D6Y78rScAzhDm4WGB+n6bTs59+c9/Q5btze4H5bf4bjDU+f8IO+Fdb3\nHvJD\r\n=U6hO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCNIeNtWlZH8Vztr0/o93fvj8mY6ElXeZmTHCx5h6vFNQIhAJTG6+5VNoivfcQuWHbRvkK5nS/W/0vUUlqDRlKqJC8U"
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.61.0_1598522256122_0.46036390520407555"
      },
      "_hasShrinkwrap": false
    },
    "1.61.1": {
      "name": "@aws-cdk/assert",
      "version": "1.61.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.10",
        "cdk-build-tools": "1.61.1",
        "jest": "^26.4.2",
        "pkglint": "1.61.1",
        "ts-jest": "^26.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.61.1",
        "@aws-cdk/cloudformation-diff": "1.61.1",
        "@aws-cdk/core": "1.61.1",
        "@aws-cdk/cx-api": "1.61.1",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.61.1",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.61.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-OMyVAUkeCKuoSfFpWx7JIefXeJefpof8r1T0TG2gVbtZCuc7Abafz2CXLh5+0ETq0k9ZXHWtqTxmL/9LXkaiFA==",
        "shasum": "05b1a404b21318b4865943ecb87bd4e23ab185cf",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.61.1.tgz",
        "fileCount": 46,
        "unpackedSize": 285812,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfSO4BCRA9TVsSAnZWagAAwAoP/0THtCv3Y/GBC/gGg4TT\nTc/TEcx/aFxwjcX3X2wMKlRiqMP3iltjdtROOjtMMxC6XjM56rer8qGKMQno\njhMcs2qVUh3/1hGAplY+q7CPlm7cQhRtROwAROX2EufA8A5gQnmZH7cRS2pV\nTx3SVP2ZPqMR3ZD47ZXfD2leZDXHOjQZ/AMXpWCE5Y/pfzH1JaxWI01Obc+N\nROjyJecEXsyEJR2TNenR2NSJ2FzTsmPk1Y1xnHV5sM48tlpSvkPliL6C7tMz\nYgv1u5hPNWqpsAAS0C4SkK+9AJU32iraC938sJLViKWlwObxbJ+7XRMryXWA\nkeo9mz7YhkSmvYyFeST5ydHo6GhVAealAQNUqw2NjHW/MFdIEDw30eKYwr6Q\n3yC/rCbI43QA3JV3lnlGoAR9LWonU/FNdeYILkn9hNDnS6QvNsNwATBCcSgW\nSXvVo2KzEJZKeL6E2bsGmrCgTTvFhHCsGwe0DGicjPkQl+xnADznKtx0Lh3j\nctWwGdL6YFMn3VhmeBMKJYx6uoOBmhQUZsD687tX95suTZ2Xtmdgb+4Kvntp\n0Xjo4E4cOadOfSnIOheXa1D+1KcTD4maITlfJdU6Kn3zKJ0UZq/vdjDFTjeF\ndHRuPQVm2RWXlIAvIGvY0l0V8sQIIFAQH0Vrqpds3YfDj0/uMIBmNHpGFiqM\nhUu6\r\n=cA5m\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEJitDfPfSjuMvVBeS7nr9CH3v3O7UdQs2GKlR8muJOlAiEA3kggOGFHWsSto97kybCE9Te/RRqAl+XtG6TZge6lO2Y="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.61.1_1598615040972_0.21459619570399435"
      },
      "_hasShrinkwrap": false
    },
    "1.62.0": {
      "name": "@aws-cdk/assert",
      "version": "1.62.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.10",
        "cdk-build-tools": "1.62.0",
        "jest": "^26.4.2",
        "pkglint": "1.62.0",
        "ts-jest": "^26.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.62.0",
        "@aws-cdk/cloudformation-diff": "1.62.0",
        "@aws-cdk/core": "1.62.0",
        "@aws-cdk/cx-api": "1.62.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.62.0",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.62.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-tlVlSTW/ci8vOpyG+bqhB+GnM8AJa9KORt8WBhh77IZrBJb63qjgBl0qIWhD6DzVvOK46S7Jv35f8iTBU1l/HQ==",
        "shasum": "2db420ab53946ed784e776446b3b4f67008f9029",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.62.0.tgz",
        "fileCount": 46,
        "unpackedSize": 285812,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfUfR+CRA9TVsSAnZWagAAWG0QAJ1YeRQLnerP0WuxE/RY\nb8JSEZBw98fD8L+44TDyL0ceC876QC50laucxSI4lVdCUqTwUVl131EibyWZ\nA3FHIGncP/idN1zvtpy22it4f5LzeENfcDs8T4tZD8Z3e0DGToqhK3tY7z7/\n79fnJpChxI9rVOhzGJlYzvBJ38P2iOYK2UVjiQY83i70OwDcYuX+ePl0Z3pW\nY/VGyOiYQLBRxmIhP2ZI0hKZl1rnXkHLe7Dv5d3LNU015LAtJBVEDDkMjXHG\n1n/N8xhAytkZXh1dLyFgDJtZR/PQpzqX1lzDj8k7vdBNWc4JjnxAxSzIXaNg\nK7n4zt3rCU7jXX803td4awviX6EhN9yHSm6ViOpMddz5IPUjFr1dK05xxnaC\ndXp1L5UCTArUY30aUTaf/6Yd3JzRMhFIBLuQ0uBOoMvv/Xl0kECJspOCmqHN\n4PtkON7JITeTpjOeOa5f/5EQ8lXBqEkg44616vPn+Tkld0aSlxh2wqKI6Tak\nfTlCErf+hzhHgcnALWApwEM3DgabOnxSXmqOiIdnQBb0+NYTGz6IycuYkHfM\nE1flIiKcyhE0SISFU3UMA7EGpIu8ehYq0HKXxKn7wnXn3vkwyPbpaZzp3xZ9\nFf9Kd31VBHxkRGmf0tG3n8WSLZyPsnppLLL0tJfKRW1hEl6qAQNla4/rEXSJ\nqOw0\r\n=UKWy\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB+09x/S4f260DkQiQ/w18130Kkxlrmsc+jDKoQ3UHGJAiEAyHmcnqXuSCUz7TDgp500TaVFmOaT0helR9j3OkyiIew="
          }
        ]
      },
      "maintainers": [
        {
          "email": "osa-3p@amazon.com",
          "name": "amzn-oss"
        },
        {
          "email": "aws-cdk-dev@amazon.com",
          "name": "aws-cdk-team"
        },
        {
          "email": "elad.benisrael@gmail.com",
          "name": "eladb"
        },
        {
          "email": "rix0rrr@gmail.com",
          "name": "rix0rrr"
        },
        {
          "email": "romain.muller@telecomnancy.net",
          "name": "romainmuller"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.62.0_1599206525399_0.843621439406288"
      },
      "_hasShrinkwrap": false
    },
    "1.63.0": {
      "name": "@aws-cdk/assert",
      "version": "1.63.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.10",
        "cdk-build-tools": "1.63.0",
        "jest": "^26.4.2",
        "pkglint": "1.63.0",
        "ts-jest": "^26.2.0"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.63.0",
        "@aws-cdk/cloudformation-diff": "1.63.0",
        "@aws-cdk/core": "1.63.0",
        "@aws-cdk/cx-api": "1.63.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.63.0",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.63.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-/GHq8BmJf4IZWr5iFswpuyxLkY+lQo6hRxHvZu803k1edX7cm66B2W2iQIlwmuY5BCWOgKx3EjVfezJq4eriHw==",
        "shasum": "a4543a6332e015093d9622def625fcf1c4ceb233",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.63.0.tgz",
        "fileCount": 46,
        "unpackedSize": 298888,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfXzNNCRA9TVsSAnZWagAAfL4QAIPytbtw6pK5bEiAylwM\nosIb0/9fzc11dm7J7Wff1iI/Ou73JX4HWZFBn5vphNkbw/IlFeSP8OPkFckj\n7GUzBwC843+Pc8I4NpY2JRsZXG5Z082e6YV8/nOlDu8LXA09/MMMSmwXphXl\njLESEYqWRFWkTKCox3W/OxZyfod3AxMPyfAeyUl0D64Hx7xK0nUaR3TElvUa\nac4VBSy+CxyHOV4iCqC1H3RfirHV7dJZACcTehUf6rTiZwBXRGZHW/7tBki/\n9nAbOV5WCwdnyxRQxqkPR00bvOTx/B4/lJLcyj35A/SJJL50rk3zkleCeQd+\n9pEPQXrZgH6NDDOhdbXzQeQQHnnIXcKOtaxhAyRU3D7egz9XNlrA4jU8A9cG\noeoxTbGxo7p26+q5awZTPBhPMSAdUDV+7VMy1DzUGvhAjGqMWefazrOEwN4M\nhrs+Qm9Jch2tOmqXqKqxWBkz7v2QQshbLM1gkdzIaAyhg8ft6zf9ASJLWP7d\nAuoMhiLDP4qPugRsWqHrtoXc7AeFS8DDI1Nj7leA6T9DQzH04QXobWpOtOfs\n6mvqECTq/Akx8Isg6vj6F4mSfJAVUdAHF7XlACzYXoHnEq5qh2g+ceSa5eym\ncOq740y4TPVGGI6zrK+11NeLt+C+/r+8nvl8bOCMq6PwrUeTenovgGMxzqEo\nUHni\r\n=mc7e\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDMi7Dn9shIZAw8OcMz/VOOh2cObtWoUyIDpQDE2azI4wIhAL0wkOAdE4K8sGbrC/exDlAzlfwXhaeFrwp6S0JgSqXG"
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.63.0_1600074572909_0.9884407356543163"
      },
      "_hasShrinkwrap": false
    },
    "1.64.0": {
      "name": "@aws-cdk/assert",
      "version": "1.64.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.14",
        "cdk-build-tools": "1.64.0",
        "jest": "^26.4.2",
        "pkglint": "1.64.0",
        "ts-jest": "^26.3.0"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.64.0",
        "@aws-cdk/cloudformation-diff": "1.64.0",
        "@aws-cdk/core": "1.64.0",
        "@aws-cdk/cx-api": "1.64.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.64.0",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.64.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-thB2vTXSsdoVw80JyPkkofsdSxt6e3MCotfrfnp8Xx0BgybJflyhuCvndQlZXGykX+xoa6Fu+Y8ghlrZ9UDd3w==",
        "shasum": "6e02e58007abf90f46da26bad3abd62dd467a3cf",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.64.0.tgz",
        "fileCount": 46,
        "unpackedSize": 299049,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfbFySCRA9TVsSAnZWagAAOmgP/10wwRdfORS1JWizWIZZ\n7DKZvlMzs0sPnVXKbBzn/KCQGbfAkPwYZ//9LyvSJ7u38hzFhwKYVR4Baq6j\nwg7TxJGm11D4hQ+PO/tuPoT0zdipt/xxdtwUsxRgO/IA0EwjYA6Hqhx+C1q8\nai3LkUXO55TOZx4jXFdG0tfopF3XuJGJ6JW8j7hyuM7n5AkReftf0rdy8ZjC\nSJp3WbrDmHaGkSF6NOPiRCPgecht+luKpt4euPXswdJrUD0+7eSm1If+NBKI\nj5w00vvVsiQixpHtQQWamrzE1RY7wYgYedACSJG1Ew3SxUV+renOu8DisE1h\nlKIAXp5thlaYbH/ZymgFiOXAwKzKMf7PnTbhqC5wUS7/i91m5Fmg/TM9O8t7\nWipW8Ei/2KL2omJHCZ6ouCMxrw+Z78ubsdBjKCAjEK7C7RUnjjukWvQzH789\nkV7HeBgrcVfkh7sZDbKZAGuOzU0wa2mNaM7hkA9+OKaYgwN/IvEW8pouLNBN\nGNKaJ38owk/U5gTbD65AKgwQ+Ogil0ZQXPC0gfBF3mTKTgsPMiV3uaYcGczi\naRQJLziMHjbzSmOXRllgRlhcWvFUOF9LsDQk6RRxLbn2PA2PluVZGB2McHE9\nubQ6H+aD9X1rkPeKQiQCRXn9LTXrS41AE2bQeKxQUTA4TObeQu0agQR35L/3\nWV3/\r\n=BXLD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDUodnTcmntggx4Ss2d8FTfLeaqgzULfd8k7uD5MBwpkAiBNdC2wXOBvN3pj9YRTqELz5WAp/OFDKv5J8O9WuEGHPg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.64.0_1600937105739_0.961365704132626"
      },
      "_hasShrinkwrap": false
    },
    "1.64.1": {
      "name": "@aws-cdk/assert",
      "version": "1.64.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.14",
        "cdk-build-tools": "1.64.1",
        "jest": "^26.4.2",
        "pkglint": "1.64.1",
        "ts-jest": "^26.3.0"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.64.1",
        "@aws-cdk/cloudformation-diff": "1.64.1",
        "@aws-cdk/core": "1.64.1",
        "@aws-cdk/cx-api": "1.64.1",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.64.1",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.64.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-BbiJvaapBoCJR0KvB5b/lEZxfxBceBufYDt0xGJlYKkjM+j271sLT44GRzgTwNMeCL0GiLDnJwb4asNhdSjPDA==",
        "shasum": "c977a5ef856b67a79d42a4b20b7e9c378a3ee0f5",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.64.1.tgz",
        "fileCount": 46,
        "unpackedSize": 299049,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfbkRwCRA9TVsSAnZWagAA6GEP/2yRyNA3/49s+UofQzZO\ncd6bqbXbmOaW0wDlgfIiYGRgfOOLUa5G19mxvJGxULYQN4WLlAfd31NQBQNp\nmvvjWlUgAXrEsHV9NtbgfN8My6ZhvdYPihO7t8vWhBKGWNAmGL3AudGyBvCR\nu5qFcLgMp560A9SPhYRlgegW3wcvm3TZRiOJ0i66Dq1H8P9V5Syhx3S/z+ea\nDwbV6ETz7ihtT0Wyww8B3A8jQ0Mi6NycV6Wf5332WLERhPY9vqqGso07FbQ0\nwQ+bydTTuLQCBk6lWKdkGQPltxs6OjcajXdABY/t1BYQRuPUyj0DND3oKhkr\nfVflGPIcIspvLvHH/zwSjPqKuBUSeFU/o/LkyAyqmzIScq/6B4I6UivA1cEZ\n0hfNEKXxdw/VmvsvieJFJrVGSd8/jk5zy71HOJsZuS+8+wYOuR8GlvETdF0n\n/5f8VoQmcToPQOwE7bPLf48lG8S/qgy4dzuniGQQppjRrUqVCWZc2IJggkOJ\nTKOEjifzMDQm8Gson3mxJ3qR2oEhHstARkN277Z95T/E+vnf+Zba/ZbJKgls\nyUpgRwKdtUk+HwSp6R3uuA/XqIq8ry4JRUL4AnpOK3g7xgso0Z1Z9XBLt26j\niccH6OMUKnufk/4PyEGVdIvOjsjhNs73HcZfa359GM33+T7PV9bK0pA7lGJ4\nxXKX\r\n=3DuT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD4fqJ/IbPo5mhHsN4Jq4Qw9ownxDKY4n3/RTQ/8GsKmgIhAPdceQMnl6wY+2I7vVA0skdJ4WGMsRoeZD5mVKnox+B9"
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.64.1_1601062000408_0.9876084879994103"
      },
      "_hasShrinkwrap": false
    },
    "1.65.0": {
      "name": "@aws-cdk/assert",
      "version": "1.65.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.14",
        "cdk-build-tools": "1.65.0",
        "jest": "^26.4.2",
        "pkglint": "1.65.0",
        "ts-jest": "^26.3.0"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.65.0",
        "@aws-cdk/cloudformation-diff": "1.65.0",
        "@aws-cdk/core": "1.65.0",
        "@aws-cdk/cx-api": "1.65.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.65.0",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.65.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-x8svU6/TFT/VdG0PgLyKHGxpN4WnpilsQS+4/Jzuh3i6XcJuUXBvKlMmstUWuzn0Kc3h1PHlPjB3ldx+qMV3ew==",
        "shasum": "cb742e6815577f8d303e47a099215d0830ec3b64",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.65.0.tgz",
        "fileCount": 46,
        "unpackedSize": 299049,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfdUwNCRA9TVsSAnZWagAAfmcP+wa1CdJufTW9hAB80U5Z\nxB7ZGVQnna0aWnIPXxRBc59MzkwkfXkVyY/r92Huv56Lin6f41X1jwllFhWa\nIvsRW07Z0BaecKio3UEV8AI9CWnL3TWV7MzZOejnKagjqozyf37OuV/1bsZi\nAgpp/acNbGP+7VwOe/HoQVJdud+98ni4jsPFcYz5yz9xy+Os8xLl5sP5mcKk\nJBrIgERXhY3y+jyysYeLTqvyyJk/GoWk5MizjbAZUeuBxufZ9Jh0CivRC4BZ\nqpFewK6LeAydaT1Sk46Y+nYeFUKP/wGOAUP/FkX303JFfrXXQBk2RLKzUrKh\nhRUUWySawefT1y6t2cH+GSV1f6hy2u2jch3hwe8hM7gC+KdpVG4+Byx18hGa\nsUmPsoIjXtu8YYxpO5mE3IKPZGwyEM6fjVPcnhmjlSrOLj9SzTkcXvRot/aT\nxf/FqAB9piXIABNNNO+I9O6FKt7/zJk/1wwu0oWh0sxKxeG6qdqQuPJ+E3Ap\nTKlu/KsX/5dYoYS0qYSLfJjd6fsCHngqOBZIYCk1HZJNXQKbwN3WzhbjDHAZ\n+/GrXyjF9A9Cnc31Z/Fzz57QLA/IIymdAViV0ZGpbAJvrqqDPmzys/KAYdva\nspvpqHuxMdY4+PYB4ay2tBHYdHg0vuDomozY/m8bCJiKZCllU4eIHdBvc+Zr\nqf3z\r\n=ZS6H\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAdEIPb8XozwFgsfQqt/RZ5BPZBfV/Kcdt3OXIAIkEbDAiEAgCRAyBsTZDEOHkOxLLKk7S+3+GOXohXi3wumK+SNUpg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.65.0_1601522700740_0.22406531721496625"
      },
      "_hasShrinkwrap": false
    },
    "1.66.0": {
      "name": "@aws-cdk/assert",
      "version": "1.66.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.14",
        "cdk-build-tools": "1.66.0",
        "jest": "^26.4.2",
        "pkglint": "1.66.0",
        "ts-jest": "^26.4.1"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.66.0",
        "@aws-cdk/cloudformation-diff": "1.66.0",
        "@aws-cdk/core": "1.66.0",
        "@aws-cdk/cx-api": "1.66.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.66.0",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.66.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-/BH8eCJr3Mn/XjurqhhbIskFTypPts0zzwtNnE+qhgJ8BaLl6b9OjKrVpeDNBcRWBpYsR7v7nYlzsI+Rat0JfA==",
        "shasum": "3cfafbfbabf7e2a4f23008f939a67b78225b157c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.66.0.tgz",
        "fileCount": 46,
        "unpackedSize": 299049,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfd6C2CRA9TVsSAnZWagAAe68P/27out4YP1VM6yyX28ad\nq6G4/PDjlmETj3Gk7kKfVwdL4Daa04EPL55ggJjWu2+pfYHBKkKqTOEZ8brL\n+ffM3vYzMpMKjfGKBnbEGumaIcsQfCHZ8aEBAgBU7nz/U5lMcby94AVtypkh\nLYzscPlz4FgyfdpzIBD/irl2MJYYx9MNN/eBcD5cemPkPDgFwGc+7bQVybYZ\nk96H+iw/5Hk6gSn155auoAsI0ecNmNsMCa8fYBcWdpP0eKyIchPp2m684i4C\nW5CfZm/ZhpuizMJc2TLwT8H6xM050wGMnMLMgPcvUK233lZHSlPBf1jWF4sN\nYnvINIIBycYgl9xr8YBF2V18IzFejl9/U7msZQDyU/LlRRYwFWp1+x/Xsy53\nZ64V4GNz8wzcW4MSRmX0gPmumTnaNiCFIcWy0O677uv3uUL7NPKnr9N1Fpa/\njDbTJ1Bf1tPCNZgB+8RYTXXR1tdWrkFYLhz3x10MMvjQ4rfnfegxMtagcHPD\ngn/7GdXQPIRMCGQ3x01Okw1tij2YMHadmpiqHykQbEzHA+Sx1k6133RRYo1l\n75LHmNRMIhzPOVt5Ra8R17h3L5CYQ0T8kSwkjXzMOkXu8pkb+a1fvSGKAkgf\nAbuti13n+2buthAES6mRwhDNNMrW6c1JC/vGEswhsaRV4eTfnuABo6QSkWKx\nBbNL\r\n=n4h7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB8iFzUMKGxiW58jlGx4VCkvrPhs5SPr6DgUVxau6KQDAiAGRSuuN27u4i3UPGJQLgQopwJVuvRHQiQTMgfrKGxk3w=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.66.0_1601675446043_0.8563331761565058"
      },
      "_hasShrinkwrap": false
    },
    "1.67.0": {
      "name": "@aws-cdk/assert",
      "version": "1.67.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.14",
        "cdk-build-tools": "1.67.0",
        "jest": "^26.4.2",
        "pkglint": "1.67.0",
        "ts-jest": "^26.4.1"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.67.0",
        "@aws-cdk/cloudformation-diff": "1.67.0",
        "@aws-cdk/core": "1.67.0",
        "@aws-cdk/cx-api": "1.67.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.67.0",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.67.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-p3BkrfXpCwSwiZ3K8fPvKUbr4FKQY4lBSr3ZzmqeMPwgk0b9nlBk3QBFdY60zkBpJpoDwZZ3qi4+vooJrpev3w==",
        "shasum": "4ea3b4e2c4b0f05f1b239f0c597b42094b39cac3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.67.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJffjW9CRA9TVsSAnZWagAA+CsP/2rMrNNmbzYO6CQy3iVU\n9xQ2MzftbhGZGiT569T1A34dELlZ58xRsP6/sitBU1M2PzMtREt1DUQo4MdZ\ndxr5lOLptWHctGsJdgcZ8+LUrxtHS8OyEBhUuW/ZgOG8mzVazSgJbhJf1tPv\npAl7EqR2zP68Y23zwtSrLAbPUr2kySLjSwh6m2MNVw86mZ78bcMqGkX2ot7h\nf+xvWdK8m4Bl/pUHFkYddJuna4Es4v9fid2f2zorepTkbiGbt75clAfeP4Lb\n9KC8PTK2XGJExXucObzYLHOxuwCAruk4H0p5Lijxxff7m/3A7QSf1HEX1hyX\nVHYWextyQzcuW18DsY0wGf2LMiBNBW2kW5EVbElQ4eZevDL8XHU4E3yc2n1Y\nVAEBgjtdCQhod975H/u12UXa38nPvzllfAjl9dcgDZFSvjbcYBJLe7UAdHoD\ntUr/PSEwDT0yYxJ8Qk95RY94V4hZ0vDhF6ukXFEZj2/S0H9oBrB6IExT9Dya\nTJg96UUFU3Zc88v69T9+xKhxigwYUgA8ozun3P/nxWNU+jg+GetVk4waUaV6\n6AQ8FhQyKyhzXdMxvZWS9Tq38ZuAHQ/q/gX1ix2/zvCUznN1ujnrn/gJtInF\nKom313J7n1RynpYEUOP76056CrXG5twHQXcDDlTxf1mzQEQaWMj78Ok8WA7d\nszch\r\n=2+QS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCqRDdYv8EqeN6jl/a2dflRED/qrpP4CxBQjfxgw4L5NAIhAK06sHOsQljBon+VDJpAnV4NaBDBr2PEyp2QZW9H7J+f"
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.67.0_1602106812700_0.8223292350149389"
      },
      "_hasShrinkwrap": false
    },
    "1.68.0": {
      "name": "@aws-cdk/assert",
      "version": "1.68.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.14",
        "cdk-build-tools": "1.68.0",
        "jest": "^26.4.2",
        "pkglint": "1.68.0",
        "ts-jest": "^26.4.1"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.68.0",
        "@aws-cdk/cloudformation-diff": "1.68.0",
        "@aws-cdk/core": "1.68.0",
        "@aws-cdk/cx-api": "1.68.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.68.0",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.68.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-KHL0Z+7jzGzpZnjlCXmGONS0nBecU4eMWOQaUaMXtzQ5iwEEMq/GCwdy59m0TM919UQi3RgPvGV+YPY/Laptxg==",
        "shasum": "fd2da1b854a11973f0658fc28cbe44c0cd7f9334",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.68.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfiKmuCRA9TVsSAnZWagAAo9UP/ibhbOfpGpC/3c77/qKH\nNPFPfwhLUhgpflyHrMCs/0u9A5KEk/RhqLIfGtCZ44+MwDGcWIkf0XyJ5FT7\neM9IUl0CxKQlv2c6YPAMZ60Zv8DYZJDDB1GMMa/pJSjPZoaYmbHk7oqbXyft\nvSzS21u5eumvzYd+qoFJs75lex8Lk5Nl4ys7cSqk+l9/0lhAWPzzsqsk7o96\nFlMW4LDA7ftDWaWHhdOplDj9Dj8MkLaFulCOgVwCCWL6OPDD8ZWfLPvPzvj1\n6Bjjib0slqEQKfo1IyK2bAR3VlE3aOPLYTqvc1GOCPljvyhh6A8BFXxUhlwG\n7DuAi2jCkTjmwmPumctREebULyhFoSm5XgRACj3E0oWHsnUXU2UFMeFD0fB5\njVdeA8OJWAbZ2aSpPAZf6+KxH/FWwEsZzaE0fJh0u7ArDTZgBVJXxcS/MdCa\nQcZYpTiGMq46qBvkm9wnvI9IWjutR7/Z7wQ9Io3jI0V6LPRstluathnIHSjO\n7R603I5hmwGEit3MhDpXxhBApIemV5zRoCCWcHRUXmpphfZ6tts518lFVU0w\n+ppa7ury+0fRs7tkEHqpGNk/4vgqnjobE7Qv8poZz19sUKwhTvY4hydexIgz\n9g1gjNrEOLDQs1ktlf/jFcSr5vxMjj9uQfpxsujh8PY2FQjRZts4Iy1o4Kw7\nqrgT\r\n=Ad0/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDXkl3wZ6aqgZZdsuweEyfGB/jcVBcYXqIwgEDTyaoY3AiBpMVCGyT358l0jb3YAn0e44ESgyWnBeHjnavgaej91zQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.68.0_1602791853570_0.4980995276943321"
      },
      "_hasShrinkwrap": false
    },
    "1.69.0": {
      "name": "@aws-cdk/assert",
      "version": "1.69.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.14",
        "cdk-build-tools": "1.69.0",
        "jest": "^26.4.2",
        "pkglint": "1.69.0",
        "ts-jest": "^26.4.1"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.69.0",
        "@aws-cdk/cloudformation-diff": "1.69.0",
        "@aws-cdk/core": "1.69.0",
        "@aws-cdk/cx-api": "1.69.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.69.0",
        "constructs": "^3.0.4",
        "jest": "^26.4.2"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.69.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-VGjF1sNx05ez5/dwQ8Gn1Bc72X4Tjg1zOPRXq/1LOan2PFWz7WiwHvpww85dRWK1N0R462k6ntUshU8U3TSOBA==",
        "shasum": "6d9873d2daf2b8b9a37389dd79461ac1f85f0e97",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.69.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfjhAvCRA9TVsSAnZWagAAPlIP/jcmWg8zJpJ54qr1JsTB\nsGoJTNA9DzdEw+DARu0boxab9G4cnQmXKLG3DFuLl2DYW7bB2vctflKq/rvP\ncOqEE9yfhEc/al8MC34rMooyBGgc1/5RXjGi2cGknLz2OT4YpHsT48EPm4eN\notEYEmigQLlv87Wa2t3nOePcuMD7BjX0+ZMRWTZHjAJ7CRDapIeUFvz1LJ+N\nkKt2sOTbslJilfjJzeqpQRHRIXv4aoO9L71K2WC8JWHm6/uQkXfEt4L7U6KH\nGOmifAZjHdI/+b8IRPv01gQV9Smu5JR1PoAFanKQ7D0XWc72lzmIQKaoXUoP\nFAWLwNo3k6ZHpdSwkJyUUhxBhIBczxK7GR9/3A1jtCxR0UyU73sTwTEeWh2W\npo7mUTyj1Npn3xGih93tm6K0hx5gNqWNJPI/Gjnh+C5kKYMYIHuxYi1k0wd5\nnrRCD3H6f4i45aHnfpr8h3vtHX/VnGW+GZiTWbdsNHIVEvGYQrrhn/E19rJ4\nxzg/QpstUu4AigmhUZ7xKF8ii2Yasa2mIHKE+epI15mLeEFk/MK4Wp9+wBeP\n2Zlq24eV3vH931fwkaUREjS2That1Gc40DYOh5XUBA69NI2sixuypg6IfMPY\nMwurvc4ub34TfO5RnukIgOX7cb2hDFO3KNUMRVdkhzeQuTRykKLj6oG0ck/z\n7jPT\r\n=otBh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC/hJmNvgGqolrHjXJ6vR9hKnnWkXMJiFYbHHvSN9HhjAIhAItcxjoD0vIveevv0Li1N/z5i4MYBAdMJFnhQB972VVO"
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.69.0_1603145775434_0.38682683179764044"
      },
      "_hasShrinkwrap": false
    },
    "1.70.0": {
      "name": "@aws-cdk/assert",
      "version": "1.70.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.70.0",
        "jest": "^26.6.0",
        "pkglint": "1.70.0",
        "ts-jest": "^26.4.1"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.70.0",
        "@aws-cdk/cloudformation-diff": "1.70.0",
        "@aws-cdk/core": "1.70.0",
        "@aws-cdk/cx-api": "1.70.0",
        "constructs": "^3.0.4"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.70.0",
        "constructs": "^3.0.4",
        "jest": "^26.6.0"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.70.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-vjj5Vj3J164NdXRmx05zoGRvHD0BVX8twfPmsojI4Jchgn+1bIoVB/LIqX7IjdmLlzpByJGONkP7cqfAtG9fig==",
        "shasum": "afa6ee1a4af3b44c7957c5e29171c542c5e2b83e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.70.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfk3zpCRA9TVsSAnZWagAAb70QAI7W3alddJyIvOM4afDW\nyaA8RGodTR+2E6gwPgNo0n18Lq+C5uBlxERyE+1kObp5XH4TIUuV0BibTsal\nO9ak9b6vyEi0+0uXb2GW2BUwuA6aLqfJCYh0izPHO7GVRAX/HW9jfjCwOyF7\nVVZTVSPIbKkKwnyoYI5LoabBGXfBYdHJyucjmm0FjWn3eZJF0wSUkaBez0mX\nurx6yRr6HAL9101PDpt2oEojdwLMfgd7awkn+9k6zM8GKi7//86dg00Nj7QH\nzkjHiHFV9ZERKLOzzlnGuPMu+b+jGqVhx+pqd5ZeTXXPNrrFAS8V6Pm9OzGB\nuIhpX/l3C2wFF5UEafDt495U9rY2fD7UKM80ksngnjkSTOa6MPkNXyEuOnVc\ncEK6S0TcVJLGDGaMqscqjkGh1DyKq98Nw1r8aE0dmp3mfD1eVbtaEH2+iVQw\nHRDewy037dznIjF6BRdlro2h34U9d8qDj+kZjn2H6EhPTa5W4McqrtlfZNoX\nZqBoXwjeyOYNkAvqrJUBmWkFkdxsXFOmUEICsaf6cZro6s8Nq/ErFerUFXVa\nKs0/Z6Bbr2E/Bs4WXPkjbwBYKm9V6asQlEAhF6njSFssi3s+y1G3nDf4+YAV\nCTIMQdv9+nqMA1AxIjqMR6YQwQVTIQu9xPsYDBSxDLr8+XhoIu80MyOSFnBU\nTgIw\r\n=JpsW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCYLletiqHZEVjXeRNJdhY91abGO8QQ9de82jEpPE+nigIhAMVnra3rAXYlGgaDZD16Qiw4/sFUS7DdE1IQ3aUuKwyW"
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.70.0_1603501288451_0.3448429200925671"
      },
      "_hasShrinkwrap": false
    },
    "1.71.0": {
      "name": "@aws-cdk/assert",
      "version": "1.71.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.71.0",
        "jest": "^26.6.1",
        "pkglint": "1.71.0",
        "ts-jest": "^26.4.3"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.71.0",
        "@aws-cdk/cloudformation-diff": "1.71.0",
        "@aws-cdk/core": "1.71.0",
        "@aws-cdk/cx-api": "1.71.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.71.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.1"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.71.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Q5SzTYOeABL6VrXBNFt5zaWJU9ctjLDO7yiYSVNE1RhhYWbRQ6gBQ9XUxXZpm0l0xMqWqUPpeJhdprMPELYwHw==",
        "shasum": "98c44210ffbf4b68020a46a59b0a3d3dda8fbfea",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.71.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfmyNWCRA9TVsSAnZWagAApnYP/3QK4HXJ9wrVv1P0fGUC\nIoX0wuV5r1UE/vHLIxGtFb8PNfaTbs4ti8cMMNnnNQmn1e32J/kV+haR/QoN\nAlCaMkAQL2gqzySKE10h8lrqZAfASWMz5mLXIRCe8mW+YSmYjesWrM0fHP5G\nwBKetLh102l4F891lAAxD/hgKk/sxsZuXa7rCmW+3qUHEyFWwhVhx99xJPkF\nO/bZbuk4NNZoYfLVwrELYmerAdyV54W46/tNtV1ddNtpxs/WQRGWoAZ5WfV6\nVPC+gRdt640kCG2sqeDVxfnOSQqAqdhKn8btJsaHhCy9/byfQQwp6sMRW0Vj\nW6iwOiFe3kwh66KJpgtjR2YRcGlpkULh4jURBT0jWyRCBdWtFBcyC8G/BvwS\n7rPziN2+/9wTtap971Vw/I4sYGu0JcuGVH1x7uN8kpFZrMnRC5E9sf0Ati3F\nGf1ArQt+j6blLd2DqNmf9xktfiqRaEEirmxBW9dLr7wKywImQ0RwYz84ksU9\nRUiDY6YKW8eHat+U7jzpe4N6TV2dxaNfqjdvL4WFTog9VkM6VaIFH1TuV5QB\n63Pnhrp/wCE6QVh2dPJE/RlgvrCvBYHFr/K0cqEad7ncUAOIVDXU/TB9YKxf\nowU6puqXyzlQI2lI0/udRZ+ngb2ssMo5ugqTI0AHJMHjAGm1LBHiX0VcuvGa\nPKxR\r\n=RkKW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDuvpKOR8QTgvL/NdMaxNZk7CLeVs7ur5dXMyiYLwimcAIgfu9u2iI/F63BuOVAvjMvaH5zkqnQqoWKiYxI4sjCvU8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.71.0_1604002646124_0.4924515123508739"
      },
      "_hasShrinkwrap": false
    },
    "1.72.0": {
      "name": "@aws-cdk/assert",
      "version": "1.72.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.72.0",
        "jest": "^26.6.3",
        "pkglint": "1.72.0",
        "ts-jest": "^26.4.3"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.72.0",
        "@aws-cdk/cloudformation-diff": "1.72.0",
        "@aws-cdk/core": "1.72.0",
        "@aws-cdk/cx-api": "1.72.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.72.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.72.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-ikzkFtpTyJeJdQb9ajxa8/wVouEp6dKGU2NhaBrn1gR3r7Qekp3VFZHYytz8RRsf9vLy3P7vzqlT3k8WLeUm4g==",
        "shasum": "2811b89536a34d970ba43f73f9c77228a73c90ca",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.72.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfpOOkCRA9TVsSAnZWagAATokP+wWE9iLr+GK+TCqwigXJ\nhuaXFB37ZXBRkYCdEmvZwLx2NKE6cPVuJm4lLXQNkwEiJsBNJOD8DKAjEB+g\nZaYvADH1MB6Chs3X3z2ZL+cv92CVGP4fMO92Q6+u5ZFAgPMGtLpkQgt5IWQN\nva51QAFAxll204DIZRSLin7WqeLt1pAMYqsaFQ0saOcy+KgGomsztDjQbims\neG0ANqrk+SkkA8ndB0mZtp688bethsnfs/XKZgPem9K2gMJupHFWNYFbs5xn\nZ9fnpKDm6fikCgX0mW1mw8LZ+B0JMudpMAdU9IeC+sCs0ol1gaZ7zw2tLoNq\n+1xj1ADEIO8JcKj8M7RGVdIxmDlL16m+iC0ulv62EAa1UPKM6TFyV8p2AWKz\nZnpAiUbyGoUukTuDO6yFLEI5twEBp810vjtb6R5GarSsGvWMDM49IK7OitKJ\nmBpglSpLRXtaXbreqIBalEIVtG7Dhm/9N3ruraEFrzivb12scsBw7ZGM9mOq\n7ywo/4ncO3QhU8KPVriVzsaCs+3XQRS9AnKJyagB29Nl4bdF8BPx8ZwOJt4F\nANWvDoEkq7zsqbnjRPn1bkiI0asgte16YIzD6N0twkClz0mvUMBFlPZnqxLc\nwgI043O9wY1UI13VWljhBXMGX0yTbySpPoMAhaQ+UZqW5q7Ok2cwQ864Tbkt\n9mOc\r\n=bYGn\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDFJ8HFQm+a1uRLK/yt6q9fD4Kz5tKVg53WzemghBqbSQIgTwupvM+7JYNVGG75Ds7mrNRPULs7n1uAaiyES63uDpg="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.72.0_1604641699401_0.9160293606343672"
      },
      "_hasShrinkwrap": false
    },
    "1.73.0": {
      "name": "@aws-cdk/assert",
      "version": "1.73.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.73.0",
        "jest": "^26.6.3",
        "pkglint": "1.73.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.73.0",
        "@aws-cdk/cloudformation-diff": "1.73.0",
        "@aws-cdk/core": "1.73.0",
        "@aws-cdk/cx-api": "1.73.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.73.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.73.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-2Jezcl/V+F+/IdOT/zuprERu3c8V+f8FfX0vkITW3/0bQTJiS48q8OTu3KcEDi7x9B/1R64WZzEJyohcnzjNiA==",
        "shasum": "64e58271544804a1839584edf4541fcd66480ace",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.73.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfq+4PCRA9TVsSAnZWagAA/cwP/0saDVS4HqRfJG1spizv\nPF1jVL4B65dnJ6iRpfxiHVZqQbREIxzlsaXUSfKr+xbNJ+2tQuv16w1W6uO0\nj0d7pT+gFISwutVVFi3l9mwLkfTbHlCD01a1aNzNW7EUfyyo5CWd0YL7oj0+\n0Od9WTLKt2FdC7SSNr5h4nSi/4oysiYTxgaAhtWgGLk8OjU9I0WMDABWdD3+\nqK5JW1FjGOKc4ChKB3iX5QghmAipIDAAiazO2rASIIS5TgCW8zQGDxPIJt8y\n/bsQ1/I0DowsvKxWMUvbeD9+W7jaewavTvOxc3Jk0o6yOJTHKvGXSxBYY7d/\n6EO0KWh1KmPGwCjikr5nyM/Op4/UptH+ggdcn5//DBxs51Q0FMKPxDa+3cL2\n8gI3uk41+HElpCIm7pHdSkDyIZQUIZusMi39dK4eWalIiO7SEdJD4iEsBK/s\nc5AjREod3M7LxaY2B7qbB6QCbkjEQAV0CD+wCEiEhSHw71BdQLOh78IikVt3\nXCh/LE8IqfptRTTadQI15WxQv4otp3KOw54siguLcUPHXUf/JBLkr+4u96VJ\n1myD1vfVsjvzGVC+5tIm9ctKhF//I+AznXcYjgtCh6OcMVm/+SjyMPTLjTUb\njVt7vlhmTeBfEl6x48UyLTWgtCtkyUWQwVZBGZL21H0p4BT7KDDcP/Pt75/k\nQtwn\r\n=NwsE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAgxveyeBmluoO7/U0JbSatL9THp3LMzfjUeqHp5VIqaAiAvsAR3BFjILnEEyhPR/Hz/mfwd+2gILWk+LDoiU1z4nw=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.73.0_1605103118915_0.16973061478817542"
      },
      "_hasShrinkwrap": false
    },
    "1.74.0": {
      "name": "@aws-cdk/assert",
      "version": "1.74.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.74.0",
        "jest": "^26.6.3",
        "pkglint": "1.74.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.74.0",
        "@aws-cdk/cloudformation-diff": "1.74.0",
        "@aws-cdk/core": "1.74.0",
        "@aws-cdk/cx-api": "1.74.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.74.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.74.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-5M3M4lcSS2dGPgVANhv5GjqC6nNBy9bL1XECAJj3lg7q+6zJ00+0wq4bB0wyvm/mE+S0axkGZ4LVHF5QA2gCfQ==",
        "shasum": "82795a3bb21ede93288a60322804f6f4e2d4959e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.74.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfs7z8CRA9TVsSAnZWagAAvj8P/1MG3cEXEe6G2H3HkJD1\nki9KqAG8ibKF4eYG1zAoqNSBZZD9qiWyfI0zjLzA1Ctdv9bgMW66bvOIh38B\nhhWbmk0Sjbb0Ht4Fa8Q5gW/8w2orRwXIiUyxGccvKcZxpsaII7/mD0bQZCPs\nRtgEMmkcSOMMqMryvvSSG9CMoQPspu7HSbuTpTnI9j1RIaOyfiSKw+Pe7pFo\n6wQiE5p4Nw/w8fwuOBRAcsnxBG24oQLPNmLSK1l+FdpVhll/9jUz/zPhJaz5\nzapcC07+q4NzRlcU7vTpSISrnzxwJgGLUb9On+uVpbMG3LzPYvQ+J+fcnrVy\nj0I5ZLDs/sax61G2ZxFFZF3cZ1cCAJ5sMCqoZ8S8pabzzLN4PJPLNp3DWrkq\nY+D7obqMEa3UauwLidgj3dn8iEdEmtr+LPDHYX44lKxxtmL8DN5GGlpfo9aI\n/9WxZrdBiYeF41UerR61a8Oll4A+OshQ6WbvW0vFq/0bROyPohiFS7HUr1u0\nqhZzktl+tqutNb5Vjz17On0fVMiIfuUk/3X3slQszzmHfoRySYkSlK2j3p51\n3mCSuoIpbY46POIVc9eKyKbgmPwdkfysCM6AD96xq9OZFQ5zpR9rg7HaDysL\nhKJ86XMRztWaOk6LmZ1WDqDEYAj/4RZ/iSuADBMY6THGDdbg8OvXRFLcXhvL\n7HCl\r\n=6C8O\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDwBGHnVnx2KtdEPnUtM/AjTj/E/6naQu3JzicZeVWjaQIgIwjdRtI/vH0l4ZhrDo3YLu92GXvs4E+d/ZH+lQTdMG8="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.74.0_1605614844365_0.10798904912271623"
      },
      "_hasShrinkwrap": false
    },
    "1.75.0": {
      "name": "@aws-cdk/assert",
      "version": "1.75.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.75.0",
        "jest": "^26.6.3",
        "pkglint": "1.75.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.75.0",
        "@aws-cdk/cloudformation-diff": "1.75.0",
        "@aws-cdk/core": "1.75.0",
        "@aws-cdk/cx-api": "1.75.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.75.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.75.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-FcdjgXhksztrI8n7z/NrziZ5ys8lYWc1QILM275jYxONxnaLYWxwKm3LIl45S35SACTzcnooZY7A7k91wGVWqw==",
        "shasum": "4ca8c3651898a7097921770191d66fb4aa4c408d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.75.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfvZmICRA9TVsSAnZWagAAduwP/j03LEQU+i8VDBrUUdfP\naSK0zu6OjFjfce1m+KJ9o0ARAvooCyZ03rMWmGYwktcnYpJwPjvwOxh2dCvS\nm6nqQATnA9AL67RUSiOMwM2csvM+ayfBWrUL7GMfDsHTDJWoUOlW/R7H1OdW\ngVaureD9sMO1GKmAw/yy+5N/od+bKwTC81WHVXWlyenrzP18VjSfdp0qa0yl\np5fokxPhoqWQQEuoUXvmmrMvkR1tiR1P5JmroOqUUm4BX5+ZLA8yBqlugC0K\nuA1eyqlzd79s6Pa9NNjRXs06p3XXHF+t6bPeINGhc6QjpmPuxOZzbRYQUmS4\nQ53c+9LzQCoFiWGc4WOooVlYZom8wuJPXHhxCUhCohTQ1H09Ee7iPKeRH9za\nMmpiDVr0WbmkA13RPJCha8TqyWpnGVhwnjiN1DJ52J+52Lm6VlTOisVn31Fv\nXEfqQuVzn6mL/mh1EhMxCryqbzSe0zpfVphSstCiQnM6mpOtnipE1S9iCQ/u\nZg4ztVSIjFwe6C8kR+MiFLGDk9dWvHAP/uuAioDOvDi6njP1s4TC4t5SyYvp\n8ztKzjGjgdn8OB68XUvNHfGQq3H6O41lvD6gXwKNRIy+wdvyO30GEtqQCvpy\nhN7juC30UIQeo9qNr7kMkQTNq2Seiq1LSiFQH6lfpMS7quD2H+YhSSkxBeAB\n/2PM\r\n=N1LQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEMCICEyQusHUxl7GDWfTL9SMnncGfMplRSeUpofyGsG+pXQAh86OE6eC3M3WEA+CcpyxNGvkULxJZHnjrey5tZyvQeV"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.75.0_1606261127775_0.8415014352089578"
      },
      "_hasShrinkwrap": false
    },
    "1.76.0": {
      "name": "@aws-cdk/assert",
      "version": "1.76.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.76.0",
        "jest": "^26.6.3",
        "pkglint": "1.76.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.76.0",
        "@aws-cdk/cloudformation-diff": "1.76.0",
        "@aws-cdk/core": "1.76.0",
        "@aws-cdk/cx-api": "1.76.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.76.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.76.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-1k7eHgH0ZPWSudIBAK8rLc1AhU1+G193IFT3J8AfmNBfq+52EJF07Zwg0z3iv08L7vDqDRLjew95IoV85oZbYQ==",
        "shasum": "83fb547febff423e81b956a241f67b04cdd3d40e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.76.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182397,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfxp4BCRA9TVsSAnZWagAA5bsP/jfd8S1qoKAZj8Ervv9C\nVJ0UQwoyZhKrw5SBM7uqTQ87ccOKFcyxS/yiXGdhYi7/SpaC0Ubj/qyU7Ael\nOU0AIhnYE/e2VhIpl/QIhmoweHNtfD3pE6o/AXpTWUzH1OpawERj6AQKCApt\nNUdQ3MqqNN+lGidyteOOh0J3p1ZRgeoaNHdcobQdwFSAVSEsrLo37jP23Yrk\nFqo6tSfLmI1WxRORXFpgic3DzgnYJ8aqr8X0JT4BuTxlB7K41b1LaL1TXTx7\nw0xXWWehGrq5uIe+Ayod10kos45CXl09r4bSRnXskUbPYhq+RgnMT2Q3XA+a\nZnXW6tqCtJHG6qXKTcpFEZt7FUHPsOAol/Xabx/C3HlvUREQWDRGjKbpFPIW\n6bN7BCIQl+yEWkaeAUdaEGrE7oPFin/EFJZrSG7s0KsNkxrCyokUYVBkis1/\neWsWIpOW03sX+018c70wqAUTp8PRHYy51Brh/uQKuTkwsCFT1OxvKspBOzYa\nFzPfR2+cTkigdsjHQKR1GPAiiDB5JVLAndyPn60s9wuiF571ZIFoCES72ciQ\n5G+WAtlCKYphLemcqW1nx7p7Ka+9bQqZ4nXxGODx+sVTFK8Lyh6ZbONRWaf/\ndw6WApUtnTeCk6QB20N8IZqVKawnfhC2mV/iDNTvi51suTsTBdz9k4ztowUW\ndxMl\r\n=RvPA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIADiJAHlNItKN8NiqBzTKTVw0jQc2jTNgv37C2danGSzAiAT1TDMq49HedUVCBReMi0F1zN+mpJ6XefEyeJ+VlueAg=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.76.0_1606852097261_0.9469601464109401"
      },
      "_hasShrinkwrap": false
    },
    "1.77.0": {
      "name": "@aws-cdk/assert",
      "version": "1.77.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.77.0",
        "jest": "^26.6.3",
        "pkglint": "1.77.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.77.0",
        "@aws-cdk/cloudformation-diff": "1.77.0",
        "@aws-cdk/core": "1.77.0",
        "@aws-cdk/cx-api": "1.77.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.77.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.77.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-zZOUWfpyZcUYjgtFvXMK+D4GWKyqllQEhksqPXB/omggrlveIJ7okU5BCoGLFj1bVO6S0thLKzBqyhXRHLe9Ig==",
        "shasum": "981bb64122814f30688379068281aec461c68360",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.77.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182401,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfzi6NCRA9TVsSAnZWagAAPl4P/RwqXLBRoJzhoDi72WJ4\nk0iDpGHCoFdI0ty/VzBKZiZSCksunXEb/rzSbcPc1x9Bm930lGC3WqNjvRh7\nxX02sXCaqrLZaz0jUdhknuSqmg3f/8ciLGo+8HMrnj17nUNj0izwrVe+2HkW\nMJtNVlkSXIk7aXnXbL1e5Gv420LcH04J1Z4jr3f7bMesPtwpjziFVEDyyoAL\nq9zaJ91pxxMMY/xhwbX5Scz+lobGxNtQdWm/tZ48kcFyopFn+jyDn44+FueQ\nrt7Odjf5widosxG8YcBfCVClX1IvqiPfDwzOv7i2VQykHx90pTC2UsnR8aFu\nyzJH724sxxG9k5YAnrnCiGn+0+/CFTfvNYG9alDxCIBh36NEJJLN/kozc+ZC\nxidnPTWzEGf4nsBQpWRB0G1s9Ud4XaXnZFZRWmJreO2fIkRJJAY0acFKRNKc\n4jg6ut9+ExcJmfLf8kRgNOKwWrzaRvN6ZaSBpnysvan35228L5i/4twavuSI\nFfIG3CHvejCVTVMSYgMDWcT3gwtDlG+W/G/Y6YVRTYgrghCeF/8qtHIQ95Z8\n+A7GkTKQulj2cOkesy4rGfPOZc4F5e2H1iU59sfgBmaN+qhT8PoJbNGP6cJy\nZSehSrbOc2Etyzf5ky9h4BLF7CvPy3UK38YezciKcgYJ/qg9lZu4SgT4i+ng\nemo5\r\n=MF2B\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICn+ESNOgqW1P7cD4ttslsbqFqW4b+1jV14LrtCJbRGkAiEA53FxfqtUdaukj6pRPPET08jU4OqPvYfP+lSi8zzXvXg="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.77.0_1607347852797_0.36574870872316656"
      },
      "_hasShrinkwrap": false
    },
    "1.78.0": {
      "name": "@aws-cdk/assert",
      "version": "1.78.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.78.0",
        "jest": "^26.6.3",
        "pkglint": "1.78.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.78.0",
        "@aws-cdk/cloudformation-diff": "1.78.0",
        "@aws-cdk/core": "1.78.0",
        "@aws-cdk/cx-api": "1.78.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.78.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.78.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-6XUz4ecxQu/YxY1cPJWdU1qwq0NRhrZKe+kckZMN22PfVChJYX/phh/z9dV05Mv+vk7T3KUIPxBqbKFZKpoP9g==",
        "shasum": "306881b4328d902a80865d5ed2f38edc2680f894",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.78.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182401,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf1DUPCRA9TVsSAnZWagAAddcP/iPWzm8daq2h6Uz7vWry\nC8A10csbYMq0Y8Dy1gtQw2IkBOcFdinGptabp43Mr9zBxbAbo8PiKH28Za9V\naRM7/z8UnEkrw2mDmQYNDEsyPd/xTm+9Q2AtSOJzp7NIp93TyYBXVHPdJDF9\nGzG+uHWsMlNxbjMs4+Pr+tNmLJhex72F8MBmO9nOit05CBLWqu29bbtSz89F\nYK2vA5f14YuedmfGIk7VH4R+KYTTdhWDfERf5V4YqJlBXDa5dCz0CYxccNUa\n9cnEnOWghsLTJNoBg4SjkXiUkq4MW0kjwUls4N5qt/FMpo6yRcHweSbyMNE0\nEiupRYNfxnHbK+Nux0uGVLRiMdIwyTr4upUuqEDa0FP3htPv1lBABVVfsMGg\nl8rGxF9GlHVKtQyC3XU7IBXI0Dk8+/0TN0QI41tFBPVtjTXt+mrjY70jyicl\nbrFk1WvKsQrsbSUE0rF0ACHDlWr7XOENzlmo5eUN66s6MXaBzLyZRif4pVHc\nwB41ynttygUezwobm38BAyp+ySoj5MEjlTLGNJLcaH0LEForEYjWZwuZdTqL\nA++FcEhP5245xjlNhwkHqe/vgUPF3ah7fM1n5OJ0Im1oSD/SR5fXf+FL6ZDe\nj6P0YQb16xyMt4jpPt0Ka5B6mSQckYBrVktnggAhgtIKCAHw+vZ+7u2BTxUk\n1oYc\r\n=w85F\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB9qD0XLNPBHLWJ/6/B8Ew5+F+Q92ccrmY5O0R49GFTdAiEA/qqBrHc+h4wiifHUHIPNx/W3GYWdEuZJ1SBPyfGZrE0="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        },
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.78.0_1607742735216_0.633036876085542"
      },
      "_hasShrinkwrap": false
    },
    "1.79.0": {
      "name": "@aws-cdk/assert",
      "version": "1.79.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.79.0",
        "jest": "^26.6.3",
        "pkglint": "1.79.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.79.0",
        "@aws-cdk/cloudformation-diff": "1.79.0",
        "@aws-cdk/core": "1.79.0",
        "@aws-cdk/cx-api": "1.79.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.79.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.79.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-wCiMyxhtUz82blUlSnfoqpHdSjgFOkjpunjgxT2aG5Y6RTN0ExOOm9pdKDdXnul0zml6ZvfOL51wDG0Udg7zFg==",
        "shasum": "c30e904bff8dbabcc3ca6ee01904da1fc7a980e7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.79.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182401,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf20sKCRA9TVsSAnZWagAATqwP/jpKgUGKize67pqelhYe\nyDoYaQekjlEhtGDNcqE9F40uk0nGR+6dYj2WuN30mPtJxEfDW8zcT/9wVu/s\n7D232T6VOgxS++K6wP9CiSqZFfB4uYkSL+EvgcUTtVn3ZlVsFa3/V7IcPX9u\nWMAzNwBwNlBB40+PB0CF4MtmOvyhRTGpqsNnsxJzZQabX3gCb0rnSvAtTJ1b\n4MTLEgvYdFwnpMX82l1nRwb2//Y77p2SLjAWAPy1z8ISU0fI/Qx1bsi9pPCd\nZtECesuwfU9DZddBLHhXna8WfBuOKCrmKB8LsJRbql+zO9C7AEZvBj6bbDmx\n0Qha3iP5u5ts3jOk/JdOXb1/2Td8h2WxtFz44ba7QpajuJ/ARQ5bNILd6Ldo\nSArq83Sm+RMNYu8gPI0IsivbdAs2WU7tQmHAlFu7W4A4ne0skx10O+3CILNv\nppJXRXZhfGMMu+rkhdGmtbrqM8/Hdc/xLlsaDfqUc1J1DLw0BwW75zRpYx/l\n4OIjiw9Sx4EfyeQjdUBLSyjvcy9hML4JOrN1zpIXR49ebg2PV3IrH6xnUyuC\nRjy6wxSzkkTQktTENZ2CTo+4rWmEzvDypcFqKq+4622nFn2QH7JQeicOBiW3\nQzfiohys4/aG6BMGdZO6+T3dYj7n6GHB+Okk84pZlz2lMGAGZdTfiio+tesN\nMqvb\r\n=0KV0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICeepxFIxRV2UBkmoefq0zX7+yZ/55fhYHZRrp/Y4H3BAiEAoYcbO7gBRgu0c8ooGy48/WNlhYZYQyTCW58J453zgSU="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.79.0_1608207114570_0.5556754182547541"
      },
      "_hasShrinkwrap": false
    },
    "1.80.0": {
      "name": "@aws-cdk/assert",
      "version": "1.80.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.80.0",
        "jest": "^26.6.3",
        "pkglint": "1.80.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.80.0",
        "@aws-cdk/cloudformation-diff": "1.80.0",
        "@aws-cdk/core": "1.80.0",
        "@aws-cdk/cx-api": "1.80.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.80.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.80.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-8eO9zICd+47crb1P1pPd1iovLXu74ddr02giVctTF7WlduaLCiRgT7ffPWLr246qAEHPoR9HwtTh2H6L/o6J5g==",
        "shasum": "d2ba3b3835d7a502e09c38803b0b703060e9ccfd",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.80.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182401,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf4fUQCRA9TVsSAnZWagAAtAAP/3RZ7y0SOAQmXqExhcBs\nkA/TMUqHPHjjerbWEVbDPsfAtl0qS8xzLQ6anZdlqmVqVauKy4Sv16L/b/dv\nI4Hh0svv18pb443xk4B1WtQ1ZANUzoUY0YO+vDAFc9qr4byYd30ZU27B30Ft\nwm3GYeDUyRinc67gsJzrZEmfDvIN8m+wEMxfm+3pZmfKbz5yxO2uqmfhtXyV\nTZO+VaeuspR0FLgWY6KLNhOCzexiWNaK4Dbdp5bQLCH/gK6zC2gfgzCpdDsH\nZ3cgErEHzWW968OJtyQ02F1txmokvTmacAMc3AMPITXi1S/JszH13O4S8boA\nqJJcaNe9y877C2TrQTJQvOiNy8mHvIflPmbmUK1yt7blyjsdT0HsRrkeACHN\nrZAtBpGzWYZqVBQsP//mc7hA7lhs4Sy8dMcCHfyCnm5sQsJlrLFxJmT1EVax\n/lE//F5/nojQOC9owJgxQZp6qIGg3SsH4JCgCABLcMLL4IMS+m/PW7LnCr34\neB5qQq3yx5Va+7mN+GasuRrsHWSZA6sTMFixtbtRkCBKsUGyAxRDTV4AXoxm\nCWQ/zIqrPAULH2kb3gmJ1x01zvK4ye31q9uyKWyTZmJBLPSob6PeIi/FF/8/\nI22cySmQMsTtC/kEFaELCvbY8x3Lj2PX7Xr98WDDuperHzYKP7MuZcFiDyxj\nDlgF\r\n=cr6u\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHoPFb5BfkUTD4VD7TfUHR0RB+qSkKGBRTuT5YgSYBqkAiEAiKEWUSqd0VR3545Q7tefJwflI/KseqsspRZ3MNH1yY4="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.80.0_1608643856382_0.333642701639155"
      },
      "_hasShrinkwrap": false
    },
    "1.81.0": {
      "name": "@aws-cdk/assert",
      "version": "1.81.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.81.0",
        "jest": "^26.6.3",
        "pkglint": "1.81.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.81.0",
        "@aws-cdk/cloudformation-diff": "1.81.0",
        "@aws-cdk/core": "1.81.0",
        "@aws-cdk/cx-api": "1.81.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.81.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.81.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Q1FVubf8FLotX19hLSfNZDobryWcQkDSEaV0traTIoVL3ctkt8+JteomcXko8Ycd+elV2Zq6WTGUI5rbR1KNlA==",
        "shasum": "d3baff087fa6d726c47d0e891abb179d17bf079d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.81.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182401,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf7RhoCRA9TVsSAnZWagAAf4AP/jnKeZ615474VgVzpt7P\nvSe0iuw7sMxSCTOkckRtu3LWDWikySPFkZFtNXVaGzrVJvRqwoSxl35ZF5Z4\nBiIvXfsTtIhVwj5DdQXRE9/wk6dS0OCVUA/55vfPBlqhQ9MOEVvVQhN32pCl\nkpXJAoN5gfyw4oXGUiN1jvAd16Kce3qXytrRw3/6K8HEDEEusp0qPGd3kLTZ\n1g8cHRWToiwsfDHcH2t9+lDbLiRKj1NmjIqoqu/jhMFlZZ1i4ywpGU+wKtg2\ny7v0x9af/Ehvn8fwcXz7bGrz4VIcP+oUHHjaSeKYCJtWqnlfbqyQXuyOh/Ny\n8lkA5hfQeOtzj7+g1ab0PfYXzpRvaNfI4SMm3mRNwFZCye1auhJljkTpaQ5g\nRXCxsStdyGPm+BD9nlku5cv68+lVkWsE0YdE6q7eTYsxsl6w7D2CXSujfUtL\n7P5SOL8kzxTbt8F0uZkRdCRCZYpddmoj3/cQ/fXuByQqF8QZTU8q01k8cXOM\neOuNbT4lr0PEtz6tgWKHEfHElUaF26WwTTxasNAum7EAsLDnyyo6LM9g0zDV\nDw/xlQGIG5N4SXEYdzO9a23Yd2t5KjW0ulu9CuQlH5A7MI8zaVGtsmB6uwGP\nfOhHYYMbjVBfxaEv86E533eOC8s13sJgzXeUYBeBWQqnRK+oqgnXNyn7CMy9\nRBpI\r\n=p5oO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDH3LnOatBnZ/VEpUKLgvAEfj+noDkWf780IvAJwOSopgIhALHnK9K/lZESh9OGw15rNKFvjVLSO5wdfiY7lagRJRh5"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.81.0_1609373800395_0.8400287760772822"
      },
      "_hasShrinkwrap": false
    },
    "1.82.0": {
      "name": "@aws-cdk/assert",
      "version": "1.82.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.82.0",
        "jest": "^26.6.3",
        "pkglint": "1.82.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.82.0",
        "@aws-cdk/cloudformation-diff": "1.82.0",
        "@aws-cdk/core": "1.82.0",
        "@aws-cdk/cx-api": "1.82.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.82.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.82.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-hsVsIRfsPRGH9rnS82/CepZQgQHxD81hXu8HrqDF/qEPXCKlGtEDGKxZ78yKoYv9mX+A02YX2FmoeYJzkCsG2g==",
        "shasum": "92fc406d0ddb54db171b685a51594c5a7f16564d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.82.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182401,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf8aMmCRA9TVsSAnZWagAA0hEP/0wX8oQXTzUFUPa3ftsP\nmFdI3LYANeyan11tDdTGVSmd/eMxTgxAMFHzZ6LDMwA+asr+6E6DoukQ6IpZ\nHdE149b34DkBFKdpSBQulppt0JDufQQsOeFzjBGjA4u7z6oTidssgDsEgv1f\nJnJTIrYaQUsdwCLJXP5n8cdNL8OnSbFBeNLCoYJwyubhcdDVAGjIAnoqfi7d\nOuqGeKD6RQGFnU3QII+tdOCjimtQ0QakIx2nJDEaGdHVuPtGS3IvQAG1OnZO\nZmQGGZu4wsICdhlhMKTi13QTyDX6LLDcnpli0Pwrv5GULSmYgHuqp743Zznh\nO4hKAqwmSGHva4ENiItcrWgMuzTlnhMjnVGOCFpQu3TTnruaVbLXnzjkeXdJ\nE4DaeIIuN3d/GB19fEdOOtqSdmdzxbLZg9djMLj0rNOcd1UZJukDuEVujUb9\nMzoqFXQ08g8TQBzsV2Cdml8Xijw/D9Wzxy2hWWKxaxP87NBtyuQiETic9FQ2\n7w0sEYZDVAcULDkLBM4xRfR7k+8q50P1ZKRexu4DES0ZcWL9FXgll0xnsayI\nnUro5pmmFUyS3WPkALrWITL/2CqHaL7Z+Qmf2tsX02WU4BULR6xOWheUSFU0\nlct7FeiaLatHEUJKQH8bsfXMj7IIX1o/GcWiNJmoji1TcTnFdFgslBu7xKcL\nOg0C\r\n=ztjh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDm5E7Zfsd0cxWkPZMny5Wks36l9XzHxS3kh/Sxm4JrpgIhAMZbXRpqLEIorQfQ4eBr0Ez3yvlTjlg6sNzUN+QaV6F0"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.82.0_1609671462082_0.5931865146302608"
      },
      "_hasShrinkwrap": false
    },
    "1.83.0": {
      "name": "@aws-cdk/assert",
      "version": "1.83.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.83.0",
        "jest": "^26.6.3",
        "pkglint": "1.83.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.83.0",
        "@aws-cdk/cloudformation-diff": "1.83.0",
        "@aws-cdk/core": "1.83.0",
        "@aws-cdk/cx-api": "1.83.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.83.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.83.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-o6T6C9nhctd6r7BB8bnp9A89dPBg9OvMjhlFrLDPE6SEHL/pcmSrKmcPW9a96/U3Yi6/uulEUdRwPxiuzDdUPg==",
        "shasum": "fa44344e9e6abb34ac809d1dced56a051346f39d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.83.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182401,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf9eb5CRA9TVsSAnZWagAANnAP/04SgCF/TEzeHrQa9SCi\nZ/sKMmNqFD0DLtaltlEfadlZesQrHWSrt+hADBP+sMtuaBqHove/QPfFrYMx\nUXdlzNl2NiRrUnVFApSZnkVuFLv6mer3W8NK4DW9vZ38Xlx9ro/PnzXIPwPu\nGyPJaUNwqmxnZdL3YbjECF8r9bWsTI//9toNHAxh29VnCamAVikaems0wLV6\nVYV2RmQIuPTziDG1W8NPc0YiM2vzgVDqCjVARxZ9M0s97u5KUVtIK+lUtB+k\nYT0y5WYswrIwwi9hKmnOmAH4D7DxLcqJqEnX6YoFDIwUC/OMnpbGnVSs1Diw\nuVqr54SvurEK0YnQLKDzZGFaSCbkmznKMD6vebg5+ba9JSm6aMw0oB6wtELI\nZX20h+kLkpspHY9bQLuavyO+0SYiQypyKoGST8rGhxdZ1PLlgvSLUpYwF7N7\nNE8Vc/Ztny1BahdujbELo6CKezTDWjQmAlNzWftbtI0bj9f26cjCHPuft7d0\nlZGky1NvoU+yyJNvwJK/qHXO/lqkgIoWW5D827+lqJubpYSqR3JLbU1smFJU\nMCFsViHG1LwzyWCJS/tW8hxftdfbAR+8eJpiogNGMAma7FIOrLiCxlfdz1tI\nNNotpsjB8pb0pHE89AeLA8w3k9dnaR4qGJPORGOdZrnrtqBWO8ueD1EYobP3\nCmku\r\n=TZke\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCSowKA6uxiLvwMFsmQm/ct3e/5q9wSZ7DRQVPlp6JmVQIgbXXO9h/qG7y14bb8YRmzJmAJE3xmH+0AuffEZRKT9E0="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.83.0_1609950968664_0.1251406164731852"
      },
      "_hasShrinkwrap": false
    },
    "1.84.0": {
      "name": "@aws-cdk/assert",
      "version": "1.84.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.84.0",
        "jest": "^26.6.3",
        "pkglint": "1.84.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.84.0",
        "@aws-cdk/cloudformation-diff": "1.84.0",
        "@aws-cdk/core": "1.84.0",
        "@aws-cdk/cx-api": "1.84.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.84.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.84.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-fzc2ok+rN7uQ9+AT+91ozxIDzeWfRNX15SZJ3ffj0Dm4iU3TEzQPlHPTkDaNCqzpRzGwmxM3hxh2aLrLUBJaRw==",
        "shasum": "d25d72d1bdafdbf8c6eec800fab9affa575d5c1f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.84.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182401,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/iEcCRA9TVsSAnZWagAAKyAP/1uyNRgAxgVrds16BNq9\nYgXSBVXFxsccc4VIBHGPtEr2A33HIK5/4cNvg5qyU4WS1iF+VxnPSjcwE8KM\nlxgVWNYP0CuuLvVHfdlkIVaHuRvuX5JPv+AyrICCNscrrq6wxWESdwRGoXQK\nzEqhUcMEDMUuSJeYkIqAqsM87TD4RtrukPFlMJfFgEr5pRHOka1N9zKSG8td\nKyCWWxdpLORZKc97wpVwyK3PakApG47AHT0nP5BRbFB5FqbUM8/wIDbcdNFX\nEcSrTBjDDoHEe4+gJ4+Aa0M8ABFWrLhixCUVKPJtQ57LjebZk7BZG44tMWq4\nIHUSvZaCIn1y7v6QzCD+jIsaDzzpGgjhqpxTS77hdiOieWe2RRLvUTNNP7KH\n+UR9KsDvTCmykIrw5k/0uDuuLaBV2pMfJr0n0Qteo0AogCs7Q6OEXzoA2yqU\nEKD9K10sfhgs3N/8IAqdSWSCgoejwQ0mvE9z2k/f2LEJypeZ3N56KHg9IrVO\n4+t8ZUHgve1bE2AseU0xD1mt4L3s/HtjR7Ezax8Eq6BGmDQf++vc2KcrMJp+\na9O79W4d1j6tt75IwB0zAxHK47ET3lSTdiwJNsfk2pKPbLN1UA54hq8YaTMv\n+mK4R2e0aWOU/530ZqQTZpaT4YHDJTngdPca4bTRxQQHF9V6hnYDtdPFk8rZ\nbDYa\r\n=EkC2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCID8gvp78SzwSDZu7mVeBpzMiBU/uqbTn9RBGBRswKnYgAiEA8WUc8k9plDw22hRgpOUBl9g9/wm/BrJKtpSx4btLOC0="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.84.0_1610490140204_0.26173389048393125"
      },
      "_hasShrinkwrap": false
    },
    "1.85.0": {
      "name": "@aws-cdk/assert",
      "version": "1.85.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "npm run build+test && npm run package",
        "build+test": "npm run build && npm test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.85.0",
        "jest": "^26.6.3",
        "pkglint": "1.85.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.85.0",
        "@aws-cdk/cloudformation-diff": "1.85.0",
        "@aws-cdk/core": "1.85.0",
        "@aws-cdk/cx-api": "1.85.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.85.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.85.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-4d+zLeRPd9g0lLSWFIREjQfssfwExe9oUU6pPLd+oExj7be/5/lP8RhOJswA5Dw+v3ncoBx5C4EI1Uee1vI+Ww==",
        "shasum": "f6b55102a6c593e0db9c46e5599def5598e9e767",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.85.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182401,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgAMTdCRA9TVsSAnZWagAAPnAP/RuTBBeLRupIwFczafme\nBS46RT4+QOjSFW+0HGc19Xwi7Pix7/9HX3PwEeSGBZffkoZEXrU9kwZkPOYJ\nXGJvxFTtAWKOKDyVSFjBc/U7sBDGaMuNXnEk5X1ANsOFMLbFeMxR9ERnwti5\nNXhGt0uhiGH2UOKX6P2q8ph6xi3i+QCtyJ6xnh+YXCTorgWqOGss9dqZb4jL\njGlyK9Ls4gQnyWAUwek8HmUhJ6KFRPUJHQIPkRmcCcGrCLoI26Mufo1wcNW4\nMNq07vqJvB48r5oFlK2JFpcWGUBEUgSRVNmhQ4uTXgeIYdryYjU8nLPiO65K\nalgV6JDcBH20Lq/wRBuX6NGjxOfzx+c8dzDwJPcm0Qt8UsUjSG/NooJzqHkT\ndYIIhX45pS9BIV7PeecygWm+E86L2gL3rl0nhJilqTdhyCfxYn5PdQ97Xq8C\ndOswTQIdhVMAJ5zMWzrERKTt9Zfl78v67c0V8/VR/07iyW0D3/UVvkXNCF2n\nBfHJo3EzflzznBaKiwwWYyetu71Ge5nkjHIQNwHxTCqd2wCFfQiPH0Feydd0\nii08BIJaRxs/lLR4dOe+SCriy1dCS2icg01vy8J7skZgz1MrI9wkUpzoFtl/\n/9f+UMm8AqImRR7VFfK7D/QjTuax8/5MsxRNqQqkGm7AwTCPFpM6mlRcU81J\nbNHT\r\n=+uUM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDdbPC/2RbBdfqPxmWhOtZRXGpK/XBv3sEgWnOGTx0jgwIgFnMgynp/JMTMWnU4lnyoIHBCqQQ6Xs/RCTHpeb+bCpo="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.85.0_1610663132926_0.7216467547602923"
      },
      "_hasShrinkwrap": false
    },
    "1.86.0": {
      "name": "@aws-cdk/assert",
      "version": "1.86.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.86.0",
        "jest": "^26.6.3",
        "pkglint": "1.86.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.86.0",
        "@aws-cdk/cloudformation-diff": "1.86.0",
        "@aws-cdk/core": "1.86.0",
        "@aws-cdk/cx-api": "1.86.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.86.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.86.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-2XXhM8hXQQKB5luFiMae2mtWns1529piawBo9gBa6R79Lwbi2F0qodS7BFaDbyOUD8wNwUX6XDgi8sznIPRtew==",
        "shasum": "3faf5cc911d76d50a50a4779c724c1041fb1e866",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.86.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182393,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgCZnqCRA9TVsSAnZWagAASxwP/2k8e53Wc9zwc04LgH9Y\nyqX+gkCNML7MXOUIcUZHJYKg2nswa2tlPjBhkSc+NC++YiaJXg/IpX4NKlkc\nrMAIwLxJco3B/14WkC+uuyQv33cWngsvZPxrUaRFUfIrOw5rnfnX26FEK9GN\nC5+3ETY8aV2zgEvHS+s9P8xzaV0wrN9/gmm5PyT4uCZcQv8ErJhdzBd7RfP8\nOL3jdRuTHqLiBWlGHB6w8MhC/RRNV6P5uGvV4Q7sal9b4zeaIEFqesLIqZfr\nBA1FoXkAyEc0RYRDD4ATPDkoNUAzOVyrkDGUjmPM9UOCPEMHzXQkvRX8lgYw\nNefxzTa3NdEmOJBcic3p/yEJAPIptACqNQA+ctZuVdVTjhjbyH3mgk08D4Ir\ndSWIv80HRSbBh8yqhDmCUa4kxJUYNgCmF022EHt0wXIzEYwPqaAY7GsX9joT\novN5SxT9h4f8tYxEwqHKguayOg9TRPvDkmCgr7JLBbzZrechEqTt2k4Q97pd\nWuBAmdLF9vBvLGhGppnSpNF3mgy+bDn/g4wZe2Fg6NQ7zeBH/NK/1OHOEk2H\nJFlIziMHBdjVt3pXksdrr/QxVJhTnQMXpXyLFd3llGlMJuPCqQznVPOJGU9q\ngUxfjMOJQr5RA234Y1r+PxvNLG7+FJNGTdeH3pnDmP/1u0ApXVp7qDtXFG6+\n7IWC\r\n=DYBr\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIER2YriOm64qoExDfXfU7Iak9LoBUUbiF7L/7YuLrU5vAiEA3tMFV+gJoyO2mFRpTzIdFpYOweOQci+ZYNRuh5IDLVI="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.86.0_1611241962033_0.3399773631197922"
      },
      "_hasShrinkwrap": false
    },
    "1.87.0": {
      "name": "@aws-cdk/assert",
      "version": "1.87.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.87.0",
        "jest": "^26.6.3",
        "pkglint": "1.87.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.87.0",
        "@aws-cdk/cloudformation-diff": "1.87.0",
        "@aws-cdk/core": "1.87.0",
        "@aws-cdk/cx-api": "1.87.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.87.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.87.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-jT/hzAqnC9w9Sug4ejzWGHsdcWUX+9+9ww0X2GPL0XOyMqr7Z/yuHf+ewJ1dFAd95HinLIJ0YoVENdSjTH2QlA==",
        "shasum": "9a81b32e503c98caca3eeec654e91d22bd7442d6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.87.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182393,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgEV7ZCRA9TVsSAnZWagAAbOQP/RkKEyH8BC1sp2mSaCFW\nawpduT8bRkPz7Og06rRPRBNpkz1s+L0Wek4/b4P6PIlvnqpxgIxMmhNjU43D\nsqV1ActG926oazFWbwgoJKDzSt/r74CZxdzjgmqA9FDb1xWd1iYU4govCNp2\nHqMwjOcWAWrJpU7DuwxkpdMvFcAd9qUYJek8FsJsEeMFBcxJfa99H+TUNpDD\nvCtVN6+4l1TrRiSJRNLtiVvnIylZRQXcVSufvCRUVWHUEq6rDfI9jaktsY50\n0dZrcIwKj2VsaMBMS42ZMI/nfHmIIjVfeDQR6SBkAJXAqaURpN19nZIRLrTj\nc1x9D+rhiJrWfWk2a9xNzjUArMRrduDOjHIxHYMCIP7FrJo2Ha4Bm392Zqcy\nNzwBZ9k5SuwRV4Tstmio16NlRAoHP7kCuq94EnkX4IQGGEGvzRu8k/XelU/O\nWKBC+SDSwkOgEIIRgEYHfdnw0lH+PzP86Qmjs8zCVgCsVIyiU8cBv4M8P1uI\n4DcSbtkdi3XOsLexPFfVRL3wxybc+9xprVVkhOnONUe2uAXkW8M6iWxAbqiE\nVRZKQy9O2Qdw+ljJ+Qvta3xSvBYDwq7JhMwaQdvvR4S1K9mzsxV0EHYZyaOA\nRh1s52E8jOZgq6j5M07K1JIU2i5sccdpfaQ3Y1kF+/8xqBG46+NX4CVfJqLC\nQw6V\r\n=FzJn\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCKxSgou3fiSv6IZ4Cu2AIy0Pia25CcS7pFB4A7tvAMswIgf/o9vdj0wG8dU+uxGxZkBPL/A4+mjSDuTDBDVjNqbWQ="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.87.0_1611751129077_0.8558655196545404"
      },
      "_hasShrinkwrap": false
    },
    "1.87.1": {
      "name": "@aws-cdk/assert",
      "version": "1.87.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.87.1",
        "jest": "^26.6.3",
        "pkglint": "1.87.1",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.87.1",
        "@aws-cdk/cloudformation-diff": "1.87.1",
        "@aws-cdk/core": "1.87.1",
        "@aws-cdk/cx-api": "1.87.1",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.87.1",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.87.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-X1Cv1LBdkdHQXtgrw8rRSW2PuAmODq1mKUtnGVgyNf0hGGhHvU/N0Y//SG6Rw6iMxA4orj7IKQXUTiGchsqiSQ==",
        "shasum": "947f56c438e1f125e770c947d828372ee7ccb601",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.87.1.tgz",
        "fileCount": 36,
        "unpackedSize": 182393,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgEvpXCRA9TVsSAnZWagAAp6MP/1kYhCooJSSB217nDFSf\n2Qxy7NpKrd1cC0BuX9KFMyQp6JbuAfWK/WvisvvrWcGiOLpkPKWNRImjogRK\nwKb2CSHd4CnUIyejuO1oWSYisohsPMJRsKIUCL5pDuna0lxuyPzmELPbfi/f\nDJAnwI7CZo2Prl0IxULpGxxl3PR29v1aVNPcdgLGp8UhfunEQwHg4Fw9UoXW\nYMvD+4gSAuqUB9KIJy99nhWZZWJxBV6lKHwQh2oVXnPzWZpTELAIblcRBmj0\nedk5Kz4mxCIK7KGpex6qu0QNTyoXd59tYhafVVox7GpDE3TPbxRVeMWI0I3G\nXxGLJvsX5OlAcZ/00nD8ZCg2E+G+iKvgmJVdPCHIS1+amoVch0Bdu0grJBUw\nLWZe3IZ77QY9U9m/9Wd3BEQYafd0YExefB35NJUYe1FSTbZJhQNu6aFqH3Tu\nILGL6Z0wl5sqoyOJOLbWF04dzgImks8LsoWJl06hpme3mO6nkL9zfH2NB4np\nyKSFlnZLfHzAfGNbA21pM0Gsk2sDPVL4IXHn0olztW8XHOQ3/BlOhJdte697\nQ0o37FIDKk5r706UfTYF0ve6Ixw/edgQ7cuu14KooYekUVfGFNtS5Trcf6Ey\nfPNGyQdJ98t3Yv/INzBWw52hlCtacRz08jrNgUPlDAuKYIH8vFq8+GzjdkZE\nzWkT\r\n=ykM+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAHuHWERFe96nRcxmDASuP02bHzqQZi2a7UZVSeSi77lAiEAr5HjSvDI/6UGoajmTmJiZZCt58oBDENhQY/ixKngWSI="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.87.1_1611856471376_0.6463439400940671"
      },
      "_hasShrinkwrap": false
    },
    "1.88.0": {
      "name": "@aws-cdk/assert",
      "version": "1.88.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.88.0",
        "jest": "^26.6.3",
        "pkglint": "1.88.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.88.0",
        "@aws-cdk/cloudformation-diff": "1.88.0",
        "@aws-cdk/core": "1.88.0",
        "@aws-cdk/cx-api": "1.88.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.88.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.88.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-P4bHrQu6ewSewojpu4Vw1RzmAMjeFrIWZj1KnAglWU4CqoEN3OOMvzn0iS3aff15PtBOLa2YrW/OT3IKD82/vA==",
        "shasum": "680095a13c6168aa456a5c7a7ccc4cd130a074e8",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.88.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182494,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgG0fFCRA9TVsSAnZWagAAcy0P/2DxkSHx5IxM136CxRG8\nnV9l3wMAt0Gr7t2MCZ6r3DZagpVdZKyiJHBUBeP3n9Vu0mJMPzaY+sv1LIw+\niepv4E6VcBVUr2Bgg7WMkg949hbvyrmbVZ/inkrnlLp6rNUQcaYfJGslxgN8\nbEp+tgnialCI3RW7zKoszHvQAPb65Q3Q4X7oHAr/P9vAGEAkKladXwFpdJMf\n2IjY34Fy66Rxb+SpLl+on/CJGhC/8v35trmn5DPpS0br8bRB1gyekQwYSegc\n+XD6AZqSTLJH7KRP5sqoR3S0dM1qD5h6WkFOuc0nd05C8IGZb9aVlClwTo4H\nkZrU4jWBi5cTnPe/m3UhnjaCU+8svIq1a1QDjoj0pTuB4qiJJ33fAWKbUzhw\njUCiJZYzVY6zqSWe6xSXpAUIAjNqrgzdG75DgexuhF0EpigdYW4woA2dvVa6\nHFsHlF9v2K4d+nTzN9NzkcWZ82kAPxbmIn+5Dx74dsSOOY9QWea0WERMZrs3\nWZmuzOtxKmbLwElVHQBQWOJBzg53jGwC8Uto75lzmQB1cZ5eDgjSdfslrDp4\nsJx7FCig0/F3+H0QpgolPp9ovvMW5XNSFk2cOZpVc0WE1z9ObIPQs+05IIvI\nvbVrUt3H+d8T5hu/IDvxX2vb37irAKhU/HkfCpJn/3J9ML32T1EUsCqd4nIw\nGaY3\r\n=x1p2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDmY0GkTIFu01Rf23gyRZWBwrg+hgcqaVgtqi0iDWWK3gIhAJkbEJCFVe7pt6y8GQVbGMzw2pG1tXDwDdoBqcfUALZB"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.88.0_1612400581302_0.653769224042841"
      },
      "_hasShrinkwrap": false
    },
    "1.89.0": {
      "name": "@aws-cdk/assert",
      "version": "1.89.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.15",
        "cdk-build-tools": "1.89.0",
        "jest": "^26.6.3",
        "pkglint": "1.89.0",
        "ts-jest": "^26.4.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.89.0",
        "@aws-cdk/cloudformation-diff": "1.89.0",
        "@aws-cdk/core": "1.89.0",
        "@aws-cdk/cx-api": "1.89.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.89.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.89.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-F/MnBkOqpTHBynxaoK6yW8vtTlOUdNO/uQjbfrc9EYqDnw5lRn62fwCcK9HIy82tFpmDNuyGWSzU/HzfRoSOVg==",
        "shasum": "1f03fd6c49823a4e33612ddfdf65af16c9dd8b0c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.89.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182456,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgIrsiCRA9TVsSAnZWagAAoLIP/0JxeOgOwDdfB7O8UwFH\nVXvG0f9QZRjZzfEqMRzyYpfNVPuGbGUg++EIuyrAkODA/c3PvB/VH+akthGy\na+86yxTyYaPfr4YLcIr4Lo5l+EBbQ+TSo3Jjy8oVngF1I3Q7pEGROkIsChx7\n3SgHEWiuWphs7FrmosJkt53BBBsGHyOOu01f98mK1MYrbnhuml9rdubW0mBO\nPC7MfJllM7M1l43U5JzChWAt32dCfM/IkALx81utnw7jZ+4VXcs9BFRIqGXp\nAqI8z+cZJzyo+npjhXSOZWI8HEdC+jE3DHMSJpxHDihT5ypdZbYW1RHzbvek\nvGPdvuxyeENQE7Yj10p6Z6YPKMGwFUp+8wJjtuAbN8gnCmz3LZUqHWbrte2Y\nPPHQrhW/BdyYGuT4HPMHRRhqbzNpXnTwfBQWXlfyGS2ss/GXVx/47m9AHTr6\nNDTU0MkdqAsBxcnRxKnabkoBDSKcbsqUIUf1HmwDOaYhFeXt13OUBraF7MJ3\n2K8cfyO0fkRfIqLQN9hMKyrPLpct+pDa9l2jLBOF1ZvXi5CWM6tta9MeCvBn\nh7svZV3gxQm20R3RSVSzQPiW6aRR8kTTj3KAgb68Azx2fdxoHpS9TdoDDjjf\ne4e39jjWoBPurSgtB73UoFNK90HFyMu1AfY1WzZ7AN9dq8vaa1wXoCSee6kW\ntWYM\r\n=ybtq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDxe42YjD59G2W9wFXVvObccWPaKCusouekqtmdZzLfDAiAyAWRJoAReT+8R8DQG3OC88O+Pgmdf6IiwnHIpMITYlQ=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.89.0_1612888866423_0.5830117613060526"
      },
      "_hasShrinkwrap": false
    },
    "1.90.0": {
      "name": "@aws-cdk/assert",
      "version": "1.90.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.20",
        "cdk-build-tools": "1.90.0",
        "jest": "^26.6.3",
        "pkglint": "1.90.0",
        "ts-jest": "^26.5.1"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.90.0",
        "@aws-cdk/cloudformation-diff": "1.90.0",
        "@aws-cdk/core": "1.90.0",
        "@aws-cdk/cx-api": "1.90.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.90.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.90.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-p5ncf3u3rmodysEYBGBMoj0XVOlfPG+2slvXnI/nM5lpq1zZVYzVvH1kAxCbufjcxp16gtCczOHdgHmD6k0dLQ==",
        "shasum": "12719eb7927ef76532d4354e1f57662349cf3baa",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.90.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182502,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgLa3CCRA9TVsSAnZWagAA6CoQAIuYe0LrbQK/pOdQk7ai\nPo03LhkxZrkMCNw4LXufgsrxxJQl7xtopIHmDzaAZ3LrJXWK+/DDhDOAZv/i\n5yvSeMQB7nR7ZtyUz5g1YXeYLRiDyGjGzJ87+xjqyyIys7jEyCsEO3JQfrBK\nYJjVrB/CVynC29e1e2Bpp6OuYH/fdZWDVNjJXrH6hIOpOr8W7n7IcsXZ1mSj\nanuzzCJAyo0ymln2MbDMoV2VRF0Apvtg47djv0K4pLcSfemohkyxrRqiR6W6\nmXpSKFG5Ce9KThKt2rijT3iSg0ZHK4Ga57XfOQjYsJQWdevgEA6iy1KlkDsB\nZcS+3NM4RAx7OSEpE8ay2f2kColtiWjZAQB8Yztw/4B30Vafxgo5hxeoCeIi\nKxnVqvUe76iVginpAJGO9dhHfVTc/Q2xtO/+AQX4XNUiKPxrB5P06zA3sHss\nFRnMP5Nkm27E/pT2+Q9nMIXOYa2011dt/31X4KHTKItslOt9B/n1bH98cEjh\ngc8ywCZpOi2ElxBRLICACGVwp2g6RHP8wRKQxHGJX5jwhLyCwF3d3DM8hdG7\nQ3OZeDn03Qf/Rp67o5nkdu5iS25uQvD2VxKjD75jd0l9jvxKo56odk9ewMrc\nTSTxezTsHLcsLybQXUvKNrf5hB+fanEb+Vd0u6HOC2H5WBt3ihxakAtlMagX\nX7vL\r\n=mDQ0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBpOG5ZoWeYwZ9kXcyyecaKgQq7SEowRgZIuQieTS4aLAiAH2nLUIkST7kXsXcNhFpDaTdycKJ5qr929WUEhLMheZQ=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.90.0_1613606338013_0.252653195450093"
      },
      "_hasShrinkwrap": false
    },
    "1.90.1": {
      "name": "@aws-cdk/assert",
      "version": "1.90.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.20",
        "cdk-build-tools": "1.90.1",
        "jest": "^26.6.3",
        "pkglint": "1.90.1",
        "ts-jest": "^26.5.1"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.90.1",
        "@aws-cdk/cloudformation-diff": "1.90.1",
        "@aws-cdk/core": "1.90.1",
        "@aws-cdk/cx-api": "1.90.1",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.90.1",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.90.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-3DYoCtKSwNR0Ygcoj9f4MuQo0CP0DNKTl9AmGpCY8GP7fZp0pRiaDH9neHN5Ot2Sh/UFhcc/7qMtvfISmRr/2g==",
        "shasum": "0a8ca60b57eb214e0e36524eb9524e787c0a6efa",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.90.1.tgz",
        "fileCount": 36,
        "unpackedSize": 182502,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgMBVwCRA9TVsSAnZWagAAO8gP/2PLce8fTUnAABiVCNxs\n2VQEKZv2d+eOR2JsMxZ0yNIlIoaSso9SoddeJp4e+JtnvOJsdqFXN6JjeYMc\n9WstqahCJ/oZlhkmhRBE/H4G7KgY+XaAD5ziPpycgSXkfXQ6gnFPX+k7e7bN\ntGco2+kyzFHnVYnq9huY90CYZf+e31ERZQ6BBNQQ2D0BT1Gb1oX3cgV9wqBf\n/KlUNmbHm+64RwegbwbLJxBwVyHAqqT4Mdgab49wjHCedL2W1w/zrvDki5+N\n0009YtjmeSeo5O6eXBpCqKWGbpSEqeO16z9XsFwst2HCoUwmaGa8ZU5qJ+qG\ni8sZLHwllPNR1HVW9wst7lYu0zwOJMFqhgaNn1YJOkwNlP2CnV3bAF0xXcOn\nIEuvwHgzXM068RfC0/15mbHa6xSDvtHW+1XY2hOGdCuXAHXlBpUlNWqjcfTM\ne6V1432FNh2AwULqqUUMKxvU50E4hBUxgtIgd+n0y0u4HIqgb/ZPDamBVmDt\ncPadFug91bl4w4ICanYg8XWsf/ohFsuNCoaNOx5vIx1GOGHjlH5uqnfaC7aj\nzLg1rq/jJqPxyYaxFppN5BwEFdkcgBSN6crPTEiucw/lJSyIS2UI0jalce4X\nDmWLsB7Rd2mE0VogD+zdYbQBcZghgF7RUSdsoLYoiF1/hQ9QJ90my8BYTKsc\nKeYr\r\n=X9QM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIASNYOpflJR43kv65hYZ1qeJWOyv3d/9ucgjven6r9/nAiBZVUkT3oRhmavjR+szm2Hl8Hi7F5wQHDtanQxiatecAg=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.90.1_1613763952116_0.02319139765733369"
      },
      "_hasShrinkwrap": false
    },
    "1.91.0": {
      "name": "@aws-cdk/assert",
      "version": "1.91.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.20",
        "cdk-build-tools": "1.91.0",
        "jest": "^26.6.3",
        "pkglint": "1.91.0",
        "ts-jest": "^26.5.1"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.91.0",
        "@aws-cdk/cloudformation-diff": "1.91.0",
        "@aws-cdk/core": "1.91.0",
        "@aws-cdk/cx-api": "1.91.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.91.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.91.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-pMsRyWQdXmDzo9xkwdUd9nNxrquvKsiLuArIOsPQ75kuIjvexiamuemSsgnjXsWBrweyxCtCAsVmTAbPrtTKQg==",
        "shasum": "c8efa4d5874fc07547b3008621ca56e6c0801ea3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.91.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182502,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNQBsCRA9TVsSAnZWagAAWxkP+gMqQQXE+MPG9xyN8QVV\nRp5RRAqfm1l+8Xl5YsLwCj8pktAQtx8DqTJ0yq4ghNMNOvnqH0Gi7EZib5v5\nhVntLA5Z3lXN8cFq3BnOfnxBHIKSUea1PhWTiAOgGyP15VHDvP6XObJURKeg\nwdLcCSi18oSwuP1MAA+jJF7RJ70GdnL72kZOthC4qv8ztnEorc2UbPcU8jZb\neoGMUD+8agQAvriWmtuc3D2TGhn5so8u3im0oQxydKGiEJtvu4VU8oWYbttr\nYA8vbI01O7nUs4zO/3tvqOE9US1vEqC6NaB3aTcxYDaZ0igZNTJ91aOyPE/j\nC6AnfXIQCl0Vyci3IR6fm6aYBNGEI18CZejK+wjBtT7qqGHJzBl/1bJBkQat\nx41Ql+kd0PxdttKwaJQdMcNOP0kflRWrJRmAuY/HwcWt5300BSl07BB4eRKk\nx9DjhAv3ffE1+92u5BsJBHqzqp5DU/VgY43YjEo7x5VskblAfr3We3838MPb\ngRT1Zu4VxNYnZTMVJdIrnIDH4CTeKz4LIxDYVaU41pZbcZLjbZWaBezuck7r\nCvw2qrSYLBqSWjqguZMOZb/i9hvh+IyW///pEShns3ezRhrK03WBDojoWG/q\nM5Qov/YU6ToXU4Crz55TAmLtU/NnGwkN1e/0NpJKgT5pP22XGYehWtT2rQLA\nNyO5\r\n=Btb9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICAvdnKRizG/J5Jb0ita8x85ccASx/bGtkHpOQ4pXnYXAiEA/kVm6ecFQpHm57iKV1mrzlFwHyNGfCGXoM0he8CXkDo="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.91.0_1614086251921_0.4760508144686999"
      },
      "_hasShrinkwrap": false
    },
    "1.92.0": {
      "name": "@aws-cdk/assert",
      "version": "1.92.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.20",
        "cdk-build-tools": "1.92.0",
        "jest": "^26.6.3",
        "pkglint": "1.92.0",
        "ts-jest": "^26.5.3"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.92.0",
        "@aws-cdk/cloudformation-diff": "1.92.0",
        "@aws-cdk/core": "1.92.0",
        "@aws-cdk/cx-api": "1.92.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.92.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.92.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-m9CdsfMnN3K53/fKL3VbB6G2SfSvNe5+alKfniH+tIPiOB/BV88WBYrTV8pv9N7XWejhQKFUSGky19BFjm9q5w==",
        "shasum": "895151d58ba0da867970fb76e71becb33939a087",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.92.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182502,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgQwMECRA9TVsSAnZWagAAKjkP/0uOhEr/YsOyr7ETD6/+\nfH30bULv5qYNGG1y0OLsQ4mQo3F3HMckH5gGxdQeElPSkph+wXtVmDdudA6c\nOFVY5lGNSk61jZSGZ20/gKZ1P992VxrvgDisEuXXQ+dom78/45P3zM7olTjl\nmDQdTb9sqG7j5+mCSIGnbX7IudtbPzyWOM+8Q5hL9YMPICDGKF7X7rFPLm0F\nUsEq2lHf7oTgHb2ubrye50T8hYkF26ZXT5J6I1DEsj41wrMLkDIsghCHWpkd\nPPUrcvClLHn3L3fQFOgprODyxUzdAlffhcF3CyW04VSdVgiSgnSAiop8jKMp\n7VK7Br8IgV4vzjr/FpTXnKiRfw5r6yU7oIiTMY52QaS8cO529vfoHuH9esqS\nnxYZwDZm6FfjYaWygpp+TYLx4poMhSquZxZuGNIVB6SogmVsQmFcIgFsgSvE\nBhQmDW/8MhY8I+QLpHMddJ19/6ikYxdKZn7MU/B7Eksa7AC4aML1Lor0upHv\nPwONXXonaYBHK3owOTKF2gtjjYm7LBo2Yvd9yglypjIUSRxq6A7G6wyeZyhz\nFTsf1PI61ZDnmFc+w95EAIVgLocDq6naES7UQikgEw5dJsY1AI1+dWrqzqYK\nJyxi1PmXl5X5I0rZBXaimWKeHxg0Km0TXzE/EXVOFlPLmM9loA3tBPeab6e4\nbfZv\r\n=oHK4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH7YEeqk7obpPdGOa03gdoFkQPMwls4RkTFb27PKIiDRAiEA0bbto4OBbzoW7zjrZvFNOg0wdsOe3T75d1R1Z7ydOZQ="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.92.0_1615004420127_0.9487887139106568"
      },
      "_hasShrinkwrap": false
    },
    "1.93.0": {
      "name": "@aws-cdk/assert",
      "version": "1.93.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.20",
        "cdk-build-tools": "1.93.0",
        "jest": "^26.6.3",
        "pkglint": "1.93.0",
        "ts-jest": "^26.5.3"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.93.0",
        "@aws-cdk/cloudformation-diff": "1.93.0",
        "@aws-cdk/core": "1.93.0",
        "@aws-cdk/cx-api": "1.93.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.93.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.93.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-yiQPc+gNjUSGg0VgTK55uzyP4QZdYhGZVhIxF2Imlr3FhTb8uYybYSzx+yhrYhxPnUmnP3BN/0rJexn4gR6iow==",
        "shasum": "f2e37e437c9636899f69c0da1959273540beb913",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.93.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182502,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgSjPyCRA9TVsSAnZWagAA2NgQAIcM45k/mPUdfWlvsIAB\ndGJpit+x/PJe/FMQgv8GNN0pcJWnSIx0ppq/5aV6XhlrcdGr6/XM3NxB1M2m\nQvjgagFsqKED0WAT5u6kEsfR6yUk9V+hDW75T8Phs9Ht89O+DdAak4zPjwbg\nZe8FqKSTqWGFM1cwdL06xOj31eiL4AkK9Br7QoK1ACTTn7G3vJPa52U0SCj7\nzpajApAdbWUa9ySEJn9eE1KLJOi2nvNYNK60DAXSbeRHQpm/7vQs/DlN180w\na5nehj1oFGtfKp/ZFY0yqXKd1wIaJu1UjnA0zDmXr2lOM62HnXEIzvv1bB41\nRjlWeiXXIC4DruaYn9TlqM2lXgROY2QOcauZrvz1AAZQMTdoqOsK5OZ3VOkt\nt6H+l5aDu2a/X3mC6+74CmVQnUptTtUr28T2JrkRvgNiN/SckoY+Lqf4u049\n8pVTAYC8dYcCF4MZs94pKfmVPitTvBLAzAEemJTKA8ZshmzIymZ+4XkwePE7\nhgWJM7gdj8PufGfPmWPCnkgXtxIcKbVzegO3j7OzNl0VoTDK2fEbevyJhjOs\nr4xQjAWhOycqNgdWW+uV0K/sVAsHmoYpwtPvDD66M9D6+GqR7WfLjlbyQsEE\nSyyRwDenl0g4FVcDphiQ+PVjW88K1rXacxOqsHQ/lUvvwJpqY4Bpe1ATjbrC\nmHje\r\n=COYR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFOMF0fs5v6XkS2YznWGJW82JrxauM4NHRG9/mguDLe+AiBQoj70LFnsDMLFO5aAAQhfFHbYpNByg5Y9rmgVYj9Nsg=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.93.0_1615475698332_0.16855270903676733"
      },
      "_hasShrinkwrap": false
    },
    "1.94.0": {
      "name": "@aws-cdk/assert",
      "version": "1.94.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.20",
        "cdk-build-tools": "1.94.0",
        "jest": "^26.6.3",
        "pkglint": "1.94.0",
        "ts-jest": "^26.5.3"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.94.0",
        "@aws-cdk/cloudformation-diff": "1.94.0",
        "@aws-cdk/core": "1.94.0",
        "@aws-cdk/cx-api": "1.94.0",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.94.0",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.94.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-S4beSk6L4pZrOHhgcvbMuL/30w6+8l8i89IqRGx8IOJPvoUvPhk1FL2Cafntzjp5Y5jxHLH61bC1WcJxTpe2jA==",
        "shasum": "99bb7917d6729dd63614e878e2745ca78db787d4",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.94.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182502,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgUN3OCRA9TVsSAnZWagAArRoP/j+jSJcqW/wtlxgjQZgI\n3RulrBLEnXUPo4xV58lLDnaOCWLEUjgSqNMjm+/k/QyAL8iLe2oFxLu7YC/R\nMfuFSx/P6MfUAbKA/EMSuINYy49mOPKOYmcJi2L86pb90fG6gyS9eTDNeH7V\nPXkGBanwd0dWpsX1aagssGhbTKUtmESFyU43H7BcjFmp9v96YqB69zBM73G1\nbNNoCQrhy+GjhNz5jq+qVkaLZGZZPImKZmk8ji9iBcJpuc2UOXK10XO72/FO\nAPGe17nDNK7+SIlUFGcXhdm/GKYGUTVG8jBS50jwebqYR6J46rxFBQ1oPRfT\nvycu/LNHyEF1a/KLfUphrLqrBQU7z3pI1VtFqC2kUTze2mna43/paaqOjlIM\nPV2nnPApSJeUuYckQTNxKLnANL1cFl2PFFn+Td9T9cl6oNhu6tKOuockzw/T\nT1LX2MpCP1tl3gTQiq8+PzyxdK52mTffrNTMRmDm165dtJ3nOq4Nuk1dpVKT\ndk/CkrwEFSvAbOlKrLOmZwh1VmDFR3uCcyJHkHPjjPVUHZs5pqIQzhw+pXSV\nOWj2cJZHZFnC0fqP3JPppDNr4agUxQC+T68ukvehrlmXqhVpgJvlEayJQVzP\nguHRTnCOFyYPjfvlgM7mr1PX3RctojL/UWWshwIrKU2WtMdkUWxIEWJBgJMs\n09p5\r\n=5H04\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCjhlzmclmQ1hgQWKWY9YrRt7jkd7Lwxzz1Fa1ayIQDXAIhAJCMtd4qMXHG/YMy4OeYJxSc84IPY0L+MhUnI3fCUoOJ"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.94.0_1615912397694_0.015707724209514717"
      },
      "_hasShrinkwrap": false
    },
    "1.94.1": {
      "name": "@aws-cdk/assert",
      "version": "1.94.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.20",
        "cdk-build-tools": "1.94.1",
        "jest": "^26.6.3",
        "pkglint": "1.94.1",
        "ts-jest": "^26.5.3"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.94.1",
        "@aws-cdk/cloudformation-diff": "1.94.1",
        "@aws-cdk/core": "1.94.1",
        "@aws-cdk/cx-api": "1.94.1",
        "constructs": "^3.2.0"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.94.1",
        "constructs": "^3.2.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.94.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-K7LlT3LF79e5FWQbNUS+AvlaW4cNuMt3641gYcV30e9uTgaXwJpvW0u6lK9L9deM/aoUT/01/afRE4QOzab/uQ==",
        "shasum": "ea277750481ec90b6fba2961574a077dae939963",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.94.1.tgz",
        "fileCount": 36,
        "unpackedSize": 182502,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgUVu4CRA9TVsSAnZWagAAeJwP+wcTEgPk5n17BTQHf657\nLYrPNWptwnJr0BBWX/i+bGwrR8pwjlJPZt3PCQxl1kc4XtCQ79R6YcMJSjuO\n+uPCh/H78u7wT45Mnw7JjciOsq+aCxmfzI5m2vfD9mLVtl/4fFR+fPpS8dAL\nWBavYrytNvHGjbvKIKsLSAy6piJdToJEa+laUiswVl0LMn+Ns94bfgcapXvh\n0QAZLAFiyPdVAchH8nYfrjz007L4pGGCvHbRO6VZ/ZCKVxeY9IMJkYpO4jFj\nfJnqxV/6z/hdHH7luALraXySZ6XAHbMRC1iLXehzlS9LWLgBEhUL1OZXlYGm\neqFt6TERiVGh2onCfRA+oeHvQMWLdihjI7EYij+kd3TpCugsTRLBvh+tRVhD\nd0aKtB4ub4Y/OArFgFn5IdVQLaqGe2FHrCX9RCDDXl9AJR/1UZAuviFfSQH0\ngOf5H7sLebVZFTa9hIGnm9HNkZVOC6MiA/n3jYvnoynfQXCe+3+vQE98wKlq\nJfJri7NeOywhBfuJ5Ybg29q+VRjEqhjP4iYWoQfahBvJq5Py/eSVORDAy43W\nVR00R8pJwCRo3ikn33/PeCehQBBgxAUL2dw41SHT8RXyLHXgIF1gbeA3PLD/\nVJO+rUSyuBgnlngUsT+h7BDWdSjLstSasmPO3IAUiGx2cBGCplNHhqo5xj4A\nWdVM\r\n=Aro6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF739tH3suSaX8utAcXcgR0XHZgHcboothjJXPJd0w/ZAiA1UA+1i3zEeoRiU6gn6yNKZxH+IACNdhb+nwJJfpDCsQ=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.94.1_1615944632122_0.7719069161247549"
      },
      "_hasShrinkwrap": false
    },
    "1.95.0": {
      "name": "@aws-cdk/assert",
      "version": "1.95.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.21",
        "cdk-build-tools": "1.95.0",
        "jest": "^26.6.3",
        "pkglint": "1.95.0",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.95.0",
        "@aws-cdk/cloudformation-diff": "1.95.0",
        "@aws-cdk/core": "1.95.0",
        "@aws-cdk/cx-api": "1.95.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.95.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.95.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Tmi6rqKE+xX/ePqoxHRs3Orduh+Es9aFUpdUhq21rfPjH4NzLNVCgv0RS1Il/ruH/VsON/MMRiCPVMbEInrQIw==",
        "shasum": "526ca0809fb21da4be11b6a57d942fb09f77b889",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.95.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182504,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgXIbTCRA9TVsSAnZWagAAdZgP/j/29H9zkgZt9SU5j065\noPwsi6N9QqGl2jjj7O8O6SjHq3eEyRqrzkgBylaiSE7XtmDcdnJX7yIpBXkH\nqrqfNa0HXJZZq35NoPoOyiy3B7w0xvRjMZwbwa2JvQt1AXiVSmS2hMdFpk4H\nY1O92Zm1isRrjcJcCB/Rzlxp1R1TubRQAvX7EA5gU71XSnMPoEIdrFh/OUuG\n1DhChMVqqQoRfU+lX9hxbCC55lKjkIAqJEx82Z+atanFi39vCuEPwqBhcI7d\nPT9pLiRxjYRkQxIKNITURiph/h0zvHCkF8fjgnxJag1MO8M/GQGp14Dzf1RA\njsuZ2/FDOOkb7131Z30k47YDYoHIbn0TjubkCdWJYDL9z0NOAzj2JkkSNlkR\nhRgOKqCw02yUjx3waZQcmFCc+yRF/WBgjPARqa+sovQob6LatRWtEeE0EMEL\nYHkATGJpTvMVkYM8SEqdryPBgEA1C8zL1nqPwtinBxgioTJJTlUi+Foap7F7\nKlKQZLCUi+L7wxCJJBbSFZN8WNJRfYhT+1znviqdkHEq8b0iKqW1QuBKIxoH\nYFWAAEhUJ9v7Sv+4E+Hyd3nhrzAs3FqYC79fMFER45Knb1XZ8oVEVbpdVSft\nWkGhZaC3k23FwDym8aY7mGMpnwFqBQXiXTX3kwSDBRWruZorYeCcAhDgg2gz\ntLMm\r\n=tWMo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICTLIonO7/pcZuV98/jjSfri5GF1DEbmUGss84ET+uyDAiEAiurGlUcC2o2OnXQp6Z/QHPeYntGvfvC8yNc2LoDO9FY="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.95.0_1616676563398_0.8398710623409571"
      },
      "_hasShrinkwrap": false
    },
    "1.95.1": {
      "name": "@aws-cdk/assert",
      "version": "1.95.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.21",
        "cdk-build-tools": "1.95.1",
        "jest": "^26.6.3",
        "pkglint": "1.95.1",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.95.1",
        "@aws-cdk/cloudformation-diff": "1.95.1",
        "@aws-cdk/core": "1.95.1",
        "@aws-cdk/cx-api": "1.95.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.95.1",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.95.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-lnW0xs8SXCF+r1sVWcBxhgMEVNP/s0Bhp8WJSlaBC823RGknZ9zSuehtZrTMdjh8AncDa3klvwdCvp/za1WQ2A==",
        "shasum": "15e801e41705a3eb15abdbaa3bdab86e302e9861",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.95.1.tgz",
        "fileCount": 36,
        "unpackedSize": 182504,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgXTJ9CRA9TVsSAnZWagAAy0EP/0q5th+ralDxMHwfFaij\n/kPBcXOr7h54Jd5rOQ2ZHqk9/yNY3YnKPe+e+2iPSYyr2rCIpjKpflMr2PTJ\nX8nDaeaI97BCFt92Jt4e6p5p2r+USy7BrkaJuk9AX8V3LQ/tImi7D7qNVLca\nUI9tAdtj970GpsUPifRfDHqlsZHCsPG6Uxvo++P+rmvShO5J8ZPErjafgsMN\nydRd8POW8DRSmBmYwazU15+gw4S5yyjehvweiN9yEHn1myBox5aIz482n0Bb\nIyWJoFetbxOpdsOKsWgEDdeKxcuFYouy5fZl/r8GqoyNPa4MvbpX0gKoJuhd\nIY62f3fuh0oghPKrFnWjJLJYpbIaOBCdBYgopTBmqiJ2CHq1whCO/P9tUxzD\n37lsxZb/T9gtaHJgZIIiib7GDMEbSl7E18+JNcfaJxyN3nxb2rz3TgeTsgR/\nRU4dCCJRzaqAm/Rqf82SkuMrxPYpE8JOILKSBVXDGw3hXayYDknTU34agZZI\nd1GlAdIY/8XRw04bBSDvR+1lgcUrXa6CxJVAstTb0QkRu+yOFLZBa+EdQc6Z\nGgjcUOf2h+I58hNT0+lE4u6Xvx6JoZszRngq6UG9HGIe0+yboqeiYRRLtNP7\n9afIY6t2e2C+DlyG5/XHw7G8jR+4YZGR5rHxuHhJ+LBIArfF2wlMYWwz2nC9\ndXta\r\n=Yg3D\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHJ/fKb9tfBQgRImbeHOSpOOUxLey9LOJkpgoWusuf3TAiEA+T7kzwjbPWvp9iQIsl4KZv1EJzacgUcsIx6mlU7V9FA="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.95.1_1616720509118_0.21391992357661782"
      },
      "_hasShrinkwrap": false
    },
    "1.95.2": {
      "name": "@aws-cdk/assert",
      "version": "1.95.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.21",
        "cdk-build-tools": "1.95.2",
        "jest": "^26.6.3",
        "pkglint": "1.95.2",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.95.2",
        "@aws-cdk/cloudformation-diff": "1.95.2",
        "@aws-cdk/core": "1.95.2",
        "@aws-cdk/cx-api": "1.95.2",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.95.2",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.95.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-1/RhPYYKuyPYViXk6oWy9uVsULlKLgP1ZHPxyghWttQaFDNRzFmBPLYPlFijTMH3/X2iIMbBwynGlrYMJxiJrA==",
        "shasum": "54593bf011ad3e05ecc6bacb70203a42a1f491fb",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.95.2.tgz",
        "fileCount": 36,
        "unpackedSize": 182504,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgZXHgCRA9TVsSAnZWagAAky8P/2tKPultKVfWPS8B+/KM\nSZPVvNbPCnl3HUJRXpxVJN1XXBMoBNRVAej25EvF9ig33+OWp+zVGIpEk3+Y\n9UzLEXTVXx9Ce39kJzGSU7M+XdJkS3mF7EG9I617VyOqcYGIOT5yNqQ3G3sH\n4W4iBcVSY/CQvHuQulI78ndbZZ+1gu2lPhxEvli3wbca3/weX1R1qQXitrKM\nfL8MtVtqf5lDmQpzhePaiVjX/+5gFeU25O4yrQFpZfS9URqb5qfVYzHZsofd\nE/yTryuBLMnv5yMiPLWJawD2HaHmHIo0P6Gg5wD4voIIk9OPotHMiIEX+JUn\nhdi26bp6n63aZ8xDvUZX/L0/+LAAHkuXcpveDlVnPJ8w45GBtBQ061XtuKzV\n+aXjKFTNRoZEcm7yOJ5e39FTLHqIYbfuRyoxCIw0vFl5h60urdr+Y9ZRJC+A\nCNwbrfJh5o7/WUWVprJoLlLhIBw7TWTxJ+acBUYfV6FlSrWcKcCabPOe4X6H\nKFo2m3vaCqI49P5RVSlcuddGMrg5ADOKHSYv26ZpUh7cR0p27WiN6SsZsa6D\nFD0KY0HYkh0lE7zmYqj1r6D9K6VPdrc3EhcUEOf/R4c5wSdzwUGQ/fgUsR9o\n+tEgoLW/Z/23I0kviSw/t47RoRqa4pyNFxEJnzv0POkr1Kkn4ok45jkr9UG8\n8ple\r\n=9Pgx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCo+H8Z87P6qHwa4QNWYb7xpp5OcHyS0XUM3PIL3FbV/wIhAKyc4dACoQTqLRau21PwbJjxbRZ1hT/tM8vi4CNbZwF4"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.95.2_1617261024017_0.9950932325047639"
      },
      "_hasShrinkwrap": false
    },
    "1.96.0": {
      "name": "@aws-cdk/assert",
      "version": "1.96.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "1.96.0",
        "jest": "^26.6.3",
        "pkglint": "1.96.0",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.96.0",
        "@aws-cdk/cloudformation-diff": "1.96.0",
        "@aws-cdk/core": "1.96.0",
        "@aws-cdk/cx-api": "1.96.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.96.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.96.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-IcnV35/g1L8BlceMS5h/aAYXR/pecR8ltbRGxMK/f9nArjrg2Nn7fowM7B1PxdrSFpbBzcEL4Lm8G+hXFmxfcg==",
        "shasum": "cf5abaf04a6004dd8f1e1ed33cc7c1994c199345",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.96.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182504,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgZecDCRA9TVsSAnZWagAAoH8P/2hrND+PA9wd4ZFyzRTM\nSQRB5MqDp3Ozv8fKmp2KXUSuMwsqb05kDKjGLbbOKB59l9xmVTJcfeeoQyHg\nrUfzl+SO1RXvGfT7IV2gC+ZMrf6plR6atpd3kbcNoiEZQZOmNu3s1fIDkOV8\nvyySTeMWRJhnj5riIrgIHWWP43tBUKOEcR+xMgVPYzIlIwDJ2YnwpP7H1t5X\nM8LRtpLS5L7A2TBpFE1QbZCb/NPXFqZRglQeQ7ja9bUWe0wYHSImO2SualM8\npsO04K5pDjIjLKLYSp7PcTkLmgmWy1YdTpzA0unKfHRA5KQzOfYnwMwJP3Qz\nmQyOQFIl7HwffBSrDzC/NlDxf/4O0BhYQckjOI1P4w3SJuS5rqFJ2N8v2K5z\nG3HBfWWbqcqnMcVE2Cy+byMk/ssEfHN7FDP9Fp2RnRx/G82lO27+JnKC84ii\nVILjnmZAS6DyEldXCZFAUnMZ+ZkteM58YVFeeRv1r1Qkfq8jJpuHgiv2drQA\nwbfS0W0eNO1I7IKU9lpozl0waP3GM+q3UrcL22HaHqYq99BB1XUBU0xdx/P2\n3EYUkcU3fXtg6iq8gCWSXp7XisARiHCq4Lza/hynj8BZt7/nUmupvKQVxXOM\naQfTj8BGikhlCzrHRZxEaGkz1ChhUiJUi9EIghAwcN5NE4tb45ZWoIZDxLlB\ng6Uv\r\n=++wx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDohn6/yURHiFCtL26pS52Qb8zqzKC9Sl/stiEMU67yoAiAd4xb8R6zFNbjCCgDTbKX5211w3rV25ohHRndLp87GWA=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.96.0_1617291011423_0.7227839355807877"
      },
      "_hasShrinkwrap": false
    },
    "1.97.0": {
      "name": "@aws-cdk/assert",
      "version": "1.97.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "1.97.0",
        "jest": "^26.6.3",
        "pkglint": "1.97.0",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloud-assembly-schema": "1.97.0",
        "@aws-cdk/cloudformation-diff": "1.97.0",
        "@aws-cdk/core": "1.97.0",
        "@aws-cdk/cx-api": "1.97.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.97.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "stability": "experimental",
      "maturity": "experimental",
      "cdk-build": {
        "jest": true
      },
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.97.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-LW1rvvaqUJoWIB4E6PU6bFtpZhbY4PcAwzgdNGLsFFFdn/c9809A6Aqd5XPpRcvsJC7ZMUg30hcDLzkJIJDx1g==",
        "shasum": "bd12459c72dd6088624c3a602e0180f6e85f2896",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.97.0.tgz",
        "fileCount": 36,
        "unpackedSize": 182504,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgbHxmCRA9TVsSAnZWagAARdAQAI+335qUGKiMiFXewmsd\nIyGssQ3FoF/vhaRjK/JWPJjZ7ZQffAT/Zaqmo2WBTSaMonmaD/ROch15TuBp\nz5KzUL+kx4TgU2SE21y14bXBZweK9gQaZlBzhxYMffAqdxh5oupjI+x3LReM\n27l/NDAYq+/RTEO787neAyqFsaX6h7dPySgxDkyHigngYoN9GlJfveiC449d\nkfhlPzsoZmKUfLwEYv8gyJ9+S1z7aqv9UbVxlPYIsEg/n7cfr0WflfCX6Z/M\ntwLWiUFJikwc639XJf81qqQvYGrMIYnF7GeUgZSyeA5B+2289EZ0VWR0jPDB\nBNbefF/gmvLnWsgfSKB1DqChKDODzTtFZH9uSXbev3x5bwYWdgehb+f2EHbR\nTVBpQhCTDRNV93W94x8A7FnYpYzx8ZP7e5DknSDVl6CNQ3IwEahnGDGkXBpa\n9uIfAxPkxyJ5Pm9rYdVGFizdqBCl7m6logIxIFEEEkN7bLK/VGEXP0bZuABD\n5uP+/62ryeWajqzilG+A8CpD5fZhwss+YDVEDqUdi6S5L7J+oZ6pKS5NaIQT\n+8JvKzOgv2106+avAHTVu3KAT+gHjXTL/3eXiSGYJnPtubxIYlBcRqH2u/HP\n+YjQQxIWdq3PlGH2OjzKbjoafgdnXZGWqYX1QxQal1dTioammNiQNRAvuE1v\nHE0s\r\n=DBox\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEqoZsr6I98jYyWj+Pqk5+YWVgXNAJUtDFwpLkn1W8Z1AiEA94HCc8cKw4pKuQEnOvHj7s95j2Q9PshnWJaxJAK/OBY="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.97.0_1617722469622_0.10423578146595913"
      },
      "_hasShrinkwrap": false
    },
    "1.98.0": {
      "name": "@aws-cdk/assert",
      "version": "1.98.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.98.0",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "1.98.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.98.0",
        "@aws-cdk/assert-internal": "1.98.0",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.98.0",
        "@aws-cdk/core": "1.98.0",
        "@aws-cdk/cx-api": "1.98.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.98.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.98.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-5v5ahHBbG9WFoyrNtk8wt20feKKjIwajti14C60dhVkvI0zd/6AJUXhNgRsXzZSwEN2qhH9nH1X1MUKLsR70lQ==",
        "shasum": "29c24541ac0382b5205c3584c9ae26a5aeb5e5f5",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.98.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183821,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdC4fCRA9TVsSAnZWagAA2ZIP/RujAWR/x5eQDtDzpR4W\nb8Dff5rn/rrp/w6YsarjQNhpMDLCIqlHJfoH1yt87+F/qJrn8lvZ4fOL2Cfs\n3jOc05TKatFtOk7n4TphvvIj5P0OS0Sg/oFBTBtrwCOoX+URvAbmRlkPtnx2\n5BWqvrqa+dRfND6EVXImHQfCzIgRMIzsGgElPuWJITTvCSgqDWu9F/29Mzd6\nChkPWQ5a7B3mRg13KuZKTYerYhvXTF+0KTqYO+dDI1zywLZdBicPeNzRnHbE\nXfAHZ03Q1sdPhTXfOEswde2nDquTfrdH88bn8lyFOWBLgc8dXhpaqeArAjq7\nKioDX+/E2FyFTLPAEPLCzILl83ZYnRVOJL/0eyIidYpYr2YRCRNGj+GlJLVd\nKTF8FUfTMSBCgvMsOp5VqZGd+j1iqpIBAFUFjCl4m4PmYR+h7874OhME/mkG\nHZlrOS7L8KM2CWTArdKTgt/FqlD5GwejlLPWEG3M3bTSwcTF7Lp/VAG8Yhal\n2IL8/piACfQ7eNrLhW6hnMTmtzlBWI+OsMQKIry8PAePY3QfCPj6taH9FUW6\neoYbeVn1nhU/1LDdQ5NGnVYu8s5TQYU80jVI1+BbjPHR5dEl320SzCNIx5Ax\n007X6kuS8L0FBRGPQ4lm1Th6GLWl3AYB0x2VRr5Y1gUN3JeR/GqJ+BSZuFrk\ndDbA\r\n=w9Dt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD5graLwquMld+55neSYKh6UJ9EyBhGRNoHSnWb1MrvyQIhANMJ60ZFoCdJZk3ijF/cWRMFEUxjZA4I/WYQG1NHGz72"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.98.0_1618226718815_0.14612012486848047"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-alpha.10": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-alpha.10",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-alpha.10",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "2.0.0-alpha.10",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-alpha.10",
        "jest": "26.6.3",
        "pkglint": "2.0.0-alpha.10",
        "@aws-cdk/assert-internal": "2.0.0-alpha.10",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-alpha.10"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-alpha.10",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-alpha.10",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Q7IHEbmszlCC1FSVw59wsdQHio5AMZgt5YvT3DN6F0bc+jrCki+cbxlJUS5WJ5h1KvgeS0aZjtweLai+BzBgsA==",
        "shasum": "76c1a18c51f6c04012f0af4b2077d49fa5ce095f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-alpha.10.tgz",
        "fileCount": 38,
        "unpackedSize": 184170,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgeZfxCRA9TVsSAnZWagAAh40QAJJL7WEgtFEAKPKZ71t2\n5ZFzTMB+Ac8Yidawh/+83op5GNdCVhLT7khdOLl+eBygAsLC2NkdhPVRvGy6\nUBv9vN17oD319PUYbgzKignlduiz2gusJaimWxa9p8YElQIemoYqOZRXm133\nvBCSyPA0TPoWIYGkS+LgkN7m1y+R4Sk0USQA8q2M2KdsAlgNP6uKRXEZM5gK\ncu65DjHqh932RBBeZfY7dG0ccBt27l9WoAIPnZw1yyGes2HZrdCuh6+DvbDh\nLWMKFdfG143I2xXde2VToaswcigItCLZ5DPI+CRpOXrS5etAO1qARnmEDcNm\nJtyt1nWDUxE6UjIYw8CnSJtIdraBagUjE/D4m684XfBJJ4RXteKBTnFfCgfD\nfbfCj9iPwprB2diLqaskShqR1IxfkUZUQkIl216s4dq7UjNrYlCOGPVrEwD9\nY7kfmNrKQLSlMRC3a50FDAIaulT98mAxs9dV157QEGZQR+jis1s2IKSXCDVG\n+KhiYyMfDF9X4gxp1eM7floLpjnW7IRZAH6gTWb3NLETWSnYTtTM90kCfKNM\nX9srEpuSyU/WCPYAUWcGIyamDvs8YkQlOAnMdKHJFyLrWZUfa45z0yycT0QO\nwxjoUXCAL2ig/WnwAHGrTbrhSULV/jROydgkahVXmdpgVt9MlMR1SUKPwqZ2\nz8iR\r\n=EjLG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD7ub4AMe55Ti1YyQ7qepg0Zg34b6Bfq59ENlel+5y6tgIhAI/n+6SWOBC+21Ow1dmf5yo0N6kuYpAo6QWV51MBYgjf"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-alpha.10_1618581489296_0.6164458376716953"
      },
      "_hasShrinkwrap": false
    },
    "1.99.0": {
      "name": "@aws-cdk/assert",
      "version": "1.99.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.99.0",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "1.99.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.99.0",
        "@aws-cdk/assert-internal": "1.99.0",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.99.0",
        "@aws-cdk/core": "1.99.0",
        "@aws-cdk/cx-api": "1.99.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.99.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.99.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-0PP0h2vkCbRDG0f3+j9r+ctwrM5ICwg3WvJSZq0IN/6yZkyxwpmWRHmdjNZNRchyKIKM1Su50R4o2ypT7pJHfw==",
        "shasum": "0bddfafc25322d516d5cd37fb7030f13b714ee53",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.99.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183821,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgfV80CRA9TVsSAnZWagAAgiIP/i/9BgbffrCMrORCAQf6\nLQzp7ZpHEUWYUzo1bf1epRyWNtaYkK+VM9KZPq6LqKIdf2yiEkffqTrWkq52\nAekOWr7wow0YSeiLJow7ItnBQpqggdBRgwN2FNlNH9QyL+Y6gcHxajuddTbK\nJIgNiGU09UtN3tfgAHFoOyoErQOsbuV5iV0H4cGAFTabtXlTmzGJD+XWI/n2\nDEBhkF0cz0+88K12aK3/Mr1Wyx6lb8VDkjVl1JBKiXZZBJGpQ8t2A13ky2wl\nEp3JcPbPNhFCgFRuYZLk4DA9qO/HOC+9UPFE6MoldQCegAPugFSgqJH8Cyu8\n/UoeF+oGl45T2EElZZ2+/j/yiMz+ji8b680wtJPYeDOJEnDd/FqNxZDyJEH8\n2dWOBgCz06sGjAAP6pnLmn7EmQegX/voi4vhNLx/+VfxlloJPIl8bqIe1yJT\nZPF10OdWJLXy0yb80IhFZ8bv1Cotyd6WIhc+DTrN4XUyTZrkkvpMELH2Wv6s\nbT9LbRKpnOfHz1qfevaXbFJYueqIZUvhFDy+JsSfHuQX2AL44VQmNa5d170U\n/B2y0FCZuBZX76MSmTtbxrV9t3S3WU00teUF3ztuNxT2lB8fHo0N4CyPlymF\nODnlDrKLGM2CYYi0ejc6fH541vnGjkhNmcw4LQK+gupzD3YHIw6g7unwenXI\nP14U\r\n=U9T4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCiuW9OWkTK5w3C0FnGeBoRT+KAfZlSnct47XdlmDhxTgIgbtHMxrZfZSZVFhgUCzP8JFivEJYlKyM41Fg8HA8oBI4="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.99.0_1618829107839_0.16700861390097477"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-alpha.11": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-alpha.11",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-alpha.11",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "2.0.0-alpha.11",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-alpha.11",
        "jest": "26.6.3",
        "pkglint": "2.0.0-alpha.11",
        "@aws-cdk/assert-internal": "2.0.0-alpha.11",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-alpha.11"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-alpha.11",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-alpha.11",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-7waI02DwrXJRxi1r2HIeMgSL2FgBvIdHfmv9Cq+Uekvj92iU6Q2hGtnYuNoDng2+oHqOcByq9niVGB1shhz4vw==",
        "shasum": "f55a1bc13812c7dbcbac88499beec13b77783e3d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-alpha.11.tgz",
        "fileCount": 38,
        "unpackedSize": 184170,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgfWjgCRA9TVsSAnZWagAAW60P/3bq+U2M6l/D2BHwoR04\nAGbs9ssLr0rnbkTh6PAaNBJUfKgstR/YRXv+hFWxmByGkEtii7SK46nmDYIs\n6Ngtaj1lyiXAaqhiQpVb1dfGl1ZdjiAbVYJ2ao2v/GDahol54bywKrmf9f2t\nFlmqIqRUi+OLbHTdUSRPOivmxzMQ8RiKbZnkJskJmYO+xWxM/Fcp5tfFaNLU\nsKJBstk3u/kh6xY9xEHrXnvjl0Av/tGRP5YCcZ2qZ3MUMND4aOPu4h1r6qtK\n3moecXePMLlV3MzNHQVRAFeU92X5C4R7t78h5+MD8RuHLgnEfl7lhW083/+s\nVqNMZY9kNt4XE76yhi2ZG3XyXQYy+to1Vn8kbnIzH2aIuJ1kRjehzlGHR13H\nUU3NMNJXtgW1oNSrPvo/MdqvrTBNZr1AAosOxlJ2ihOhHcLHnNwaXsnxCWYP\n/5r0i+FYS4nZXr/JQCa6Lxfbt9NsPj7GkIu71FKYZtZ3aNAoYbrPAsE9O0eP\nlq5A9/njOZ7sHoQNhPI7tqXVHjAJbbYJPwAjnKjvZgXFAM4iZWYulLfcL4U1\n98okTEwTmiGZaQuwYiuV6CMMwZGATrLHlzArjxolopkeDC7ZNYyQprvZiJUn\ntAwlMoAiASImI5LTOFoGbl750EzzTOD7jPcdPq6Rn9YwJqh9/ckvzo9V0tQA\n7/Lp\r\n=v4tN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDokVKXW8mVRxPwuHvkMz4xa1jU9RYmQfGGtqW2k+UsEAIhAK+hEQFq+TP/t8pQ/6L9OPyuJ1T0+MX8889eGlWPB88F"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-alpha.11_1618831584136_0.4936069045726772"
      },
      "_hasShrinkwrap": false
    },
    "1.100.0": {
      "name": "@aws-cdk/assert",
      "version": "1.100.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.100.0",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "1.100.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.100.0",
        "@aws-cdk/assert-internal": "1.100.0",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.100.0",
        "@aws-cdk/core": "1.100.0",
        "@aws-cdk/cx-api": "1.100.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.100.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.100.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-R9tw8l0rI/If6ncZZv8297u/cxTk1F6YzSRnl6YuQWudO2eL3a7ldplQ9TttPoEuZsET5tUe0aSWzu9vUo+4yg==",
        "shasum": "80fe6cac2ebb36af366378810edcb676dfbbe411",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.100.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183830,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgfxZBCRA9TVsSAnZWagAAodcP/1JTB34exJ3hCb1478Ma\nAHlAeHqmLGjh58qhb6O9YT9mdz4yywdphCTRSuPiQ9QJw2++q06rtMvLmoY3\ndD21ppLmPmTm2JvO0xgpmTBHB4+jUD0qGJvH8HRSDhjvhFT5SRfXoDckcR7Y\nUuBhXI0xsRbqzyzekoS3Qk79b9sKQMRA4ZGyIpvi/DXdomCyB0e/vJXruonB\nnE9sC3uPDtZKm0PhBLMmw3ITzrfv0C4MuqU1Q9G2Oh5VCAprQJx07qrDALJC\naZPFAx4nMv6F6RS6J7o4LOieasACakBdeYgJfQYckk5MFPInhXWXWeYi+a2C\n4K8TfDyYKjHY7fumAPVW8UIwmEkFMNjU7I31ZIhjAJ9BpwCrfVr0QHHdsp1F\npoVDINdeIxdr8MUqllrGmUBl4JTYmLAdNNxrrq0CJk217hTf5AEgJQVO/DPj\nai/1gsvuO0Im2w1iPjG4Kn/tZr6aYee6m/vVQn2uLETu9kFr3SGcmGLMY954\nPD/nVI8rpu8xDNxcOWLRecCu0F45w8EglDFAZdMMW6P+m+FDPP+Pfhdb6fjR\nt9/1bUvaswGkKlWrCK3Mjglf/vwWfZCJuPcCfloc0/sDOxHbEyljScy8S0Ws\nPklLCRP8y/oJB/UKeDGxFHUKs3P68dzb+ah50uBeiIcHkvr5v41LNhTjcaJu\nNIqS\r\n=55MJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBda9SKne9CbjYza5BpwX+RzUJHWVJLTwrxJRuWE96KVAiEApa6//TWItej4Y9dOVp9Xt+2MXrwIA3SifiaGlcx9Elk="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.100.0_1618941505020_0.07232451943185758"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-alpha.12": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-alpha.12",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-alpha.12",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "2.0.0-alpha.12",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-alpha.12",
        "jest": "26.6.3",
        "pkglint": "2.0.0-alpha.12",
        "@aws-cdk/assert-internal": "2.0.0-alpha.12",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-alpha.12"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-alpha.12",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-alpha.12",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-ysONBDgmokiPTa4zDKFUbFqnOUa5A4VjbgH9kiGWGTAVi0akdhAEzNN1bFKVntZP+JSYQm1454oYyYYMG07ahg==",
        "shasum": "3163b13e4fd368835d17d0df906f754d7cba201f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-alpha.12.tgz",
        "fileCount": 38,
        "unpackedSize": 184170,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgf5Z0CRA9TVsSAnZWagAAgbAP/jgf/Rr4eOhbbO3i0iFj\nHpBvlHDls/Hbs1xsAUbypVaSSLHI5og1iHxd82neDTt/5qpfkAN50xjJ1sWR\npui2QnRQ/ln0XiBoRgKlZTuyZbT2pRUOegFRLC06XeLHc/EHwayb9TUPIhN/\nlRLdTtNddslFRlQjxDB3v84ZvzLGJ2M3zVIj3VuguaQyhd5oRvjFBTopmZnm\nYnUbMWEJd9ap1r6MMHuFp3zw5KOy2vwadfJTQSF+scfVCLvWfeh0sbdU2TOZ\nm/v9qgR83xydps4hbZEXYQWafLM01w2zaPbi9cuR7/Pk7ZviZ/9RFV8FZLTE\n1ve9XgIeTF4K38TCRqbSmEYMT2zRlRdGEV9glLMWVTVfdxgEdTYary+8cueJ\nepoxqDeNADLkBTqg/5eA0maX2N6dIjyQDOs8kHJGWox9O+qTx1eF1EYqpZxu\nLVh76370TfWpOIFWMYcdgjnRlB/NqxplVXBEvnLoJjCZ2MLVssHOHF4Yjj+R\nF4Od2RgvCupoIFox84gH9H2iAn1FeL7f2d01VaKAg9EINBLOfVe8EqB7CZlz\nriQLEzku9z9VcRHTqzxrUcABuno+XSeJnbyhHsZ4uCj76MtzznrO9mEXuQbK\n6kgdtbKAjBUDZ8DzOtzeK9yRHqjWAYBhZX85WWYe2H9GZvqhIUq0BDXUrNsO\nAGpY\r\n=+ukX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDpOYNzMRHEL9KCeq+sWHsSrXZSnelA1IZNUlQ1rK+r7AIhALXGzrZAYxfF2+oIX+XS1Y/71XiKJAsg7zPcCxeGf/ym"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-alpha.12_1618974324294_0.6855804284120421"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-alpha.13": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-alpha.13",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-alpha.13",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "2.0.0-alpha.13",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-alpha.13",
        "jest": "26.6.3",
        "pkglint": "2.0.0-alpha.13",
        "@aws-cdk/assert-internal": "2.0.0-alpha.13",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-alpha.13"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-alpha.13",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-alpha.13",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-BPtW+kyURDZywITeCzdMwnnBamMFNUMnXJN10mbUmedJBNAjqUYUxKHUr4kSe2HwE5m8aqPFuuqx70PGz88/Tg==",
        "shasum": "6c513cdb064177f42355880d8bf36612ad49cce0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-alpha.13.tgz",
        "fileCount": 38,
        "unpackedSize": 184170,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgf//bCRA9TVsSAnZWagAAdzgQAJJrEoSeKzeN91f5dgrI\nWZSfxm/L6WaCyp9WjX3JafMK2pea8OcQIOI/vqiGqjv4FRAk72UAcwq6Wf3o\niYZPtJtapHH9+g81ndAzhLe/dGN/4nuSV1yKLnUw4hYjfcc/Z1YhJYPjSCo9\ntwR4NykQNtCtXAkGuFOESOAiTPKvpSUmoHB/o/xWJ9Y0HPTAgoJXkohMysve\no0bhxvol56lLdvD5vvL3dOr70JxxkxyRm/8HNUoShm5saIKdq1cPgW7rE08N\nnrpdqkKjxCsZdFegSvxB40fkRW+iBe5WxjCWggTdpXMnZqi3J5oTX9XtPpLH\nDGeaduCOQWg5ZpZAjPF3UNiH+Z2dwqIJlOCZt4Lq2LCj+E10/9yXILh8e+Gj\nZIkjMksjE5xsmXLAXT869QcFMS/gYcjGEM2EoeQWkZudPF5F+dJonwFYeCT4\noMPsjpHvJDJaQ9I1qvof7YI9pTBc5ZpQyHba64TRJ0vUr97NMevCDm+eMasd\nnOLggQZIxoC1OGxnhEEBVT7cktsZWVMmGR8kRS7MQQ6Hss+F+C7riOKw4hou\nqrK1ncBD4tHzA8KHDUPDOWNbH+9ZNB3ABo/ZLu2KLBvIWEFJccclZ88yP8HM\n8ixEyX3wFTakROcEtvU2OKP/VIQ7LMbVgEBpSbrkeBgeGNvPVpbmo9Rq5paj\nuzUY\r\n=poY9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA837AFgA6AsvG4c0IxiCZo6Dp19zWp5cwGVf9Z80qiyAiAyo4o+fw7DTSb1XbASobl9fONLv3bxZQdDWkzhawgT8A=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-alpha.13_1619001306835_0.7369364705580592"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-alpha.14": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-alpha.14",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-alpha.14",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "2.0.0-alpha.14",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-alpha.14",
        "jest": "26.6.3",
        "pkglint": "2.0.0-alpha.14",
        "@aws-cdk/assert-internal": "2.0.0-alpha.14",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-alpha.14"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-alpha.14",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-alpha.14",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-WQvnEtz0S6EDS2JLAQcD4ZDd73kBdWLgjD77N1CSmLld0KQM502heQU/BmBiaHlx9Q02FM7o4gKg+JncC8Gd0g==",
        "shasum": "50ce2d7377844e06cc2325a54a1f22e0ac63a6cf",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-alpha.14.tgz",
        "fileCount": 38,
        "unpackedSize": 187647,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgiUOICRA9TVsSAnZWagAAS5IP+QHI5mRu1T1/IZ/Hf7Vk\nxudg4XgJtgwFA0PB5NP5VoLESSCu4STTjDFAEudEbv55mw/JDlcSb6I+OR8y\nXpzpjuZOITDd5nhH0h0UqGcxt+LwQADu+C/N7qXD8oX/obM28RYvKD1cDiU4\nFFyv7x+ngdGOP3uvIkK6VBOcCVfJOUE/p3qfDZpJ56lrQ969/dYnoKdpWwwj\n/uEcTHmjrwAytuEAAqantluTIKcnp7YPegPG4qPy9raC0/UKk+RXLjGrKLwS\ngUrDYZGJTUNr+sF2d2hAzFb0ITnrRcu72QCe/QVs4oEr0s0X2g4uIu/Gwa6b\nPCbW+9W2ovh7UqdIHKyKYlny0g/OjbmDGAxAM1oGaEj30zCgaAFIY5NU8CFZ\nf8g28zCjfeRZrrAE+w4PqlurY5Mpbbyuis/FzyC4/IpNHAsNvGN2oCvi2N9+\nsfAY6WvCRHJajUShf9wbg4IVTJyZv1sSlJmFfGPIsDZuk6dvgDYg1u1KorYs\nZVcdMbDTujF/owHU91OxLxdMmlvU90JYShwRIb1Nmj9dJpRB0xBH3XuDxEWy\nFl6q98NN8NeS+kYxRHKOa47Yo2tR7aM0TUCrMqLyl139tJiOwdYJnfG/bbvL\nPpVxtVfcZDLLbXZ24jpQmwFfmPw8MvrHNaHA3E+0Or56InTydkfuzTk2Mf36\nT7AO\r\n=KwOy\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAuhoAbyZm0O0QpY4Cphl6fO8MFPy3dXcmyXuFa2OGf+AiEAq2HTBxdqr4cwShNq5kR68WqKB1QdaPHyFf9BbPcgTPI="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-alpha.14_1619608455616_0.08303841186201688"
      },
      "_hasShrinkwrap": false
    },
    "1.101.0": {
      "name": "@aws-cdk/assert",
      "version": "1.101.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.101.0",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "1.101.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.101.0",
        "@aws-cdk/assert-internal": "1.101.0",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.101.0",
        "@aws-cdk/core": "1.101.0",
        "@aws-cdk/cx-api": "1.101.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.101.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.101.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-nwWlQBVOhFPuNHlqZaWmyc9DC7goKULl7vfcGvIAiOxRiLfxkJ2/uBY2DR2crLDcLwk3YMO4dNENvw9CjjzMAg==",
        "shasum": "36042564db0a2803430d9e3ef628bbf41545e868",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.101.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184137,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgiVRXCRA9TVsSAnZWagAAvwUP/ipSy4WuEP6Z917zLNif\ncB3HJEAGKwN9qlZKBvvYGsSKefq/t/PfHPZYtdtoBnZIP0RJ+90i4YVknOJY\nGV3wfAv8iUxNxoKKN67kt3Knsy2uScCC7btlYcE9bn4XIEa6jNFCIZjhHFJI\ny0/ruEjDlJvsd8GV2syOlTkHbFPZ11j7ZH023XQlEZgx/QOMLxr/Ecyn09RU\no6OrFJ2hUtyrb26DsoKU41yI43011/hu+4b7DwYqwYGMQr6J9sTNGZFyNXy/\nbURcOqaf1IAdHsHUv1hw8T/eixsroL3ACg4X970kWwNaLAI7Y1LgKvjEup2T\neogAWz8oyKbLCvEb5my6sovm/f2Btx4ZfrJvMxFZexu6eVxFOAxovFmT5tnS\nM1Jn1CBaJuFLn2rBMpGo8m5bouxUJ4P0ZadC/69P6j1JO2RBfCOapAGGdzkg\nGQ3y02ssxOy3TAoalN+rnn0R3rUZpV81jCsQ553FrsmMwUQumXvAeXgbWNBZ\nH9RLFBJo755Hz5aGbp+hc26qFUj0d7kZ1abUNQq97jvYeMx9gYq5cPRMH+4+\n9cSLBNe+RAGLVyioVoQtrBNQcAmCwQ9/6zhrBxe80EPplB5qyvEr6iwse26r\nfQtyVy6QwUpbx5MJWDhwS6cLzpdX5JYQ6O1UyKQ7RJnGWG34KRQTveVMe+X+\n1nnr\r\n=Y7GP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGQQ1uELcLHccEa6BmmgZj2hZoilxjx3Frz0Of+BwWSbAiEAgjaZWayumxH/7iQInuXF1YJoFRDo1N+XLSFkwM8Uu3U="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.101.0_1619612759314_0.8160360581325674"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.1": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.1",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "2.0.0-rc.1",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.1",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.1",
        "@aws-cdk/assert-internal": "2.0.0-rc.1",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.1",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-vz6iUrNgWOmLTfFsHFh3xjEW5MMGcMnbbc70gryoIfLoTEpVpCvF53R0Mz0aZugituqzriD1eUE79UO20geHmw==",
        "shasum": "e88b37712d3da31a4bb6abfa0727e38d9ff4bf41",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187615,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgioKICRA9TVsSAnZWagAAFDMP/RvfEsitebn1DyWq2Le+\nTGzi7NynIs3owt+gQDwASEF4rl10+8nQVeZ0PH/WTkRSxdxDKFivcyU6nztv\nTP8wd0vCSzDEhZ4req922oXmOGTKHvzXiBMShqzOqmuYIrlv6uBGOdurDl4E\nLIKSFmAt8vXp2HUT0jL0Pi0i0tJqCA4JRGLyueYmVyO0te4ZzMyF3ta5pcV5\nLyyMhndrfearysCP/rp5S36iNVprGq6kLbD9bYNidUdOVUDO74NnPH/5//9+\n1DBj0LVLi8yrWJP2K3uodaJ77YbBSb38HYPZtwqrtiMs5hvYdAjUKLHgvUC/\naCYAMl0L5HicAUN/9rdDV69bxqxCrEWq+n0UIZBS1o9faOVcRpB1qGEaP7Aq\nlVbrw793E0T5R002t37rIHbcaeferLXlZySwFSUXxqQYCsF3D2/Dhx0592g7\nWiBnkSV/wnHKxi/MyzKvxAil1EtSkpKWuVuGKSB+sUH1RmlkVHJazkjMOxbg\nK9k0cdHCwS/eUoAOnKWQNbAGLjUh44QOGYD3DEseaR5zf8FmOZWTByeBYpJk\n0ira1k1fww0O/H2n9u338TpKHuH0TfqImKfEs/B1tGi4Il/LruDW6vqBkkCl\nx2JXAIIzO/bgqq9rxV8819/wJh3fBCRDklrJZVyD1LmJXI/PjDbBLm/b+7fx\nDqmG\r\n=Owtx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCHtCokbyGNQleUyhJwuRnjb+/fTRWg9yoOcoJfVKC3tgIgI9Jo6w8opwZLpzRP+vk7PNv2Ve3VcUvPIbH06eAchTg="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.1_1619690120497_0.3698391207190621"
      },
      "_hasShrinkwrap": false
    },
    "1.102.0": {
      "name": "@aws-cdk/assert",
      "version": "1.102.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.102.0",
        "@types/jest": "^26.0.22",
        "cdk-build-tools": "1.102.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.102.0",
        "@aws-cdk/assert-internal": "1.102.0",
        "ts-jest": "^26.5.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.102.0",
        "@aws-cdk/core": "1.102.0",
        "@aws-cdk/cx-api": "1.102.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.102.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.102.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-/NWjkg1ULpoUzEnIoxDjWverPbLx112UMydEDq3dwadxlsCQTijbIqot+oDWfmeDpmLOLTdLa5BROVm6mpbirQ==",
        "shasum": "081336e5770b3cd229b4fc45a1b4e4955426875b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.102.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184137,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgkUxwCRA9TVsSAnZWagAAQogP/28mJ3XF3dV1vkY1IkAF\nNcHlNUdGDRHl4Uhk6xODYI89BbaFO2N5qsqhBHacQ5yyvDObzDRHi+JIUvDz\nS5k4kgeeJGXU0mwXcS5vTdOvn5uul1HfvVBx+IB6KghjegcSlDsJKOf45xkZ\n0wlTuvmT7aKbRujPC6rTXtlvP7Si/t2gqPuM0FL1VFdsUjipRS1o9YVefc0g\nI6UMdRnOCK8ACaGDI2qIapK+vAy0CQ+VyWcnMZ57OD+amiHVVR86Po4yiT2O\nDfLJ+SAykWF7D5tQiyKk3m5bvHSpLWnsxLj08GLkqRmULKQB22BluN43nPk8\ns1+MXFa0Y7Z5hG9rRbgN9KNNGh17JPl/cSwFslYmuhH3yMPNlFmWkkFQ2Vug\nEW/WtcSzQubrNO4PGxFD1MVpt/jXBkiK2cwuJ47U+LH/D7DyMEEfR+ZDmX3e\n0pfjA6GrdgZwWQ31p3DzTA0dANsrFQePfuH6mqcPXUGsgNRBNM7Gce9jTjYT\nj9OW1QJUDs7QVsGiGsmHwaJDJFw3/tx31/IRD/2vSDDh+6j2NBSkD4LWdXMn\nfgRE/AFXRNqco/x5h0/9AXbQRYUOmuFuzpuy8J8YAcFrOS2GxIvGKkHK9sPV\nFxDoplzMxCBY/vUMDGt22DIT+AyHn1igO8jiBpPBTY5T3AzcO6AUzIzsOgWv\nX1sI\r\n=LZoA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBulAHmjZVFBi2DdLOy2Dnun57prxRYdZtuhKeyYvMzuAiARnI79AMxRJGijKoX5qBOBtm5dBXrRJrZ0ouC6qOMUlw=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.102.0_1620135023694_0.5553930164737977"
      },
      "_hasShrinkwrap": false
    },
    "1.103.0": {
      "name": "@aws-cdk/assert",
      "version": "1.103.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.103.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.103.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.103.0",
        "@aws-cdk/assert-internal": "1.103.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.103.0",
        "@aws-cdk/core": "1.103.0",
        "@aws-cdk/cx-api": "1.103.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.103.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.103.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-ChbXTaPBnFqN294+Ui1vvmuwPhJY0a94NTFtz0vMh7ZVAZ3PlQE0y17E2DKNw+WoFtPAOc9OlVFI9dglN0B4QQ==",
        "shasum": "308beda0ff3724ebcd2c36dabaeb1f11d4ebe58f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.103.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184299,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgmbtPCRA9TVsSAnZWagAA9gcP/1qOOw8VzvFVo2xgmpa5\npzeAwcrU+OfEIZ6sRsdeXichYpfBQt6dog+WRFhFz7E/w5vBuD+LtZrEtUC/\nuCmZ6nFvfE63RM2JAQoMjO9IlA+ubBEPOWb7CRH9VPMz6YhAaifiIGjutGj6\nfrvq5OCGPB7DIZACObvGnFPHQzY053QAHInhXZSBTnOA4gwMTju1yK8MDRmf\nw7Ev1sTKDkE6inFz2vTSndyzOxjlUsSwKJmFMwkzZJWyEWlqV6SZdhZa5qlT\nQjAFNec7Vp/oU6rXyBNUI69xK6kfN8h8dOu/oKkbWlle/7jQO2nOdbzUj9It\ndkivCQtWjvmEL0PKB8Hd3yJDTwkIOiY0MtaQ4XVZtJ0oDBv35/AcF5xhev5l\nD8C2RGi6oQ2KyyWYkL1RfsAUgThAXZ+mve9Gk8eft9IfsZeMBwGt9Lk8igPj\nYtb2LraNKHV4U+CPYM1SMI1KMKc0JVMVSrXo78n3g8EaaJdDM66MVnkzRqDX\njzrQkH5QePMoidotZ1rMuoeRiF+MTG5BKR7n2EuXeSgSa6g9NCpXmqCHgCsW\nqRKd1H8iAFnXvlp+7ZKKoa9J+OfQ1xKIQWD7cQKx7l+4pjAqx0IlmrKH8wI5\nyxt6glgIZgl1SejLCw/OvoW2iTI7bJzUpmCcuMOKEm3zePbMDWKCWwiwbCdj\nhAIm\r\n=p4pw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGUVCGH7GFQw8wyEew0P0DCvv4iDbu3BTqL6xvBT47aXAiAkP9z5pytRdbm4uWR7Ul53MYtJE1IgNZTeKe0cE/HJxw=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.103.0_1620687695013_0.2606646551424463"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.3": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.3",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.3",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "2.0.0-rc.3",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.3",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.3",
        "@aws-cdk/assert-internal": "2.0.0-rc.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.3"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.3",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.3",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Fu8D7CzyPLuUYQHW7zTe8j3k43rati+3naptlVDq+DW/NVyUkNQdc9JaVahPSLP3RrGQ7vFEHI0OrW3ieBgN0A==",
        "shasum": "534dfcbb60c57842ffed24d421cac5c1b48cea4f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.3.tgz",
        "fileCount": 38,
        "unpackedSize": 187774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgnC4DCRA9TVsSAnZWagAAk04P+wc9H9ZiOItNUk5j7dEg\nPymYfzukRxG3GmXtAiTrKZuci2TqzoI+yfSp8zGnU9u3fTKsSB/zG/PYnRE+\nIecg/AbPXPq12b7Tpjivscim3FsWe2DTOUoTRZrgV5OBhJ3Ga5xiQEdsyJht\nwh7uMT9oC3NqSAe2UmsQdprTizMj4diQpMs8+nFG3/NnCJ+a4yXHoQKluprN\nFlYs3HldEct3SgIlDeHp+ygmka1X1nWB5vuvIFTdv3AdshjY5VaywfqwNYss\ngWar/IfPl+55Z3pJxQ3v4XekEGkDysZnZl9Ig4nSZPguVMt16My++g2sjRi5\nmI+giFM/kjcoVPMP2QvNQbZ5ciyYWMU2oIi4g5pwuNFRNnrQnn6y9DbTM0V0\ntMQdTXynKkk9Q5uGMb50Cdf8W5EGDh6/+hNsni35XL/mshceVrEJmQe8Fs7j\nTksYOEpqO9QqcIUurhzRxvxhheekQEV+twGElBYw71LajdEAztnQE7Pw5mrj\nn0LaOGkyz4srJzzV5f/kxJzO8xofT/d+AKsu/7LyLNZhJu543UqytTpTMBy9\nc49A1XF1zVez6K9pjMzaeMCvPEscbofvITN1rv1iyfHY99I5x/Tw3COl+5Wi\nt+KdpVM+KmyrUcRtB3tWCDZFyS9pikgUfmdVF+oehBpVIsa1yYBlTEdg4hSV\nEDtb\r\n=gwJX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDwe9ahkJtKO29rN8aKhVw4d5Di2WZ2mAUbaoD+X6vLRQIhAJ0No60xlfpGtru463SekvXNUg2vvgX/5EswKudf3LTT"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.3_1620848131210_0.19483899365766022"
      },
      "_hasShrinkwrap": false
    },
    "1.104.0": {
      "name": "@aws-cdk/assert",
      "version": "1.104.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.104.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.104.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.104.0",
        "@aws-cdk/assert-internal": "1.104.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.104.0",
        "@aws-cdk/core": "1.104.0",
        "@aws-cdk/cx-api": "1.104.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.104.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.104.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-7cwUnA3vq0NOpoYcajV8HZ9oH2nCCIm9Ty0UgPFGVlkpgpnfav8DfAIotp42dyn/1DeUNIAWv+oOpjn9MfZTdQ==",
        "shasum": "1670183ce70cfecbeed8de3e8c719502118a0893",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.104.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184299,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgnxAwCRA9TVsSAnZWagAA4DoP/37P7RvF/2lXIjltNqfU\nUulSxxAXQq0odByvqjvkc473HrPgrmyBf85k2VBeLtVqECqJcTEc6JHGiaW1\nK6UyQ9KmVCaMJ80MdS16MWhyNWikjwbz7kLj7uKjJUNt0aTyHHcyzD7MiUt5\nIVfxeTt17aXveYoR8io3njEhF84cYWxdpF+GRbCrQhWqX0lKQQk2x+1WR3fT\nVDnhBU0TFhWTzISNFlO8W9ZboGy+PMGCUc/nWk2X3V1JXfB/7AQ83uyxnbKc\ndUlgA5udcHjerKgZD9bi6rNLbYNlK7sqgwhtBs/9jt8iTaugD2usy6y7wJkp\ngydhXk8bashc1oaAw1fATcBagR7uvlW8afPSBFRSjur5Zyc9EYO9Ia4B90Lj\nFT9NNOhkS9vbUB19EGp6DJsnynR2H08gwbeiBM1xZvrUCsrR6itpXaN/JewP\nkhuH7un4iD7zRcbdYpxVq0S0MK0V2tJvAmBUE4U8hsbhVfIZes4bGUj2bfVu\nh1NXXNYaFqnFgBFiBl/NyixTHyX1iTHwBBq/JMvtM3Pdcf3Zy1DjPezgmRcT\nBCwFfeHDwEKVQ47fC3LI3U0JyvviuLL7uyeXgdWkA8w24FO+UlcHDdW4ub8J\nW2C4poL8+2Qk1a4qpkgP53CLwPm8fDlwa2499v1b3si5pAcQJZdmT4Og9RJx\nTsAM\r\n=bQy6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC0I+LuhZydw0MfgcClx8c6Mgt9Q9s2CYV5IjheYVlu1wIgFJi1KcMpgBTcXWP+n//lTCXVR/zmTCBlW+JEBThLz2g="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.104.0_1621037104194_0.6213198258445953"
      },
      "_hasShrinkwrap": false
    },
    "1.105.0": {
      "name": "@aws-cdk/assert",
      "version": "1.105.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.105.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.105.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.105.0",
        "@aws-cdk/assert-internal": "1.105.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.105.0",
        "@aws-cdk/core": "1.105.0",
        "@aws-cdk/cx-api": "1.105.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.105.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.105.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-4Sq++hDQ54DccpsSpd/d/G5dEgNoLVFkjXD/Dhr8JD5ls4K3urrAWdYEDGqGJG5Ml4kwWPxggo3YZuCroPmzSA==",
        "shasum": "4c51f7f1db9ab553b9e17c00482836ef15fd9732",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.105.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184299,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgpPoWCRA9TVsSAnZWagAAEWcQAJhBrxjo8SB8DbvmtsCN\n5mkhLACWeu/FVQOIIxoY9W+PqVoTJpbwEusZqR0jW9hfE5qKDoTXFH6zTCTf\nXArjPJ+NadnpFzeMsGexNY/5Z/qC3apBrQr98I69Zk9pzsbTaxvv1mdX5QEQ\nv8LYjT8L6pXW+dfFIDk0YzDxTMEKnUSypRmNaTlEh9715p7jb0zQ4zSl2R55\n2X0pmxbzGdg6AgBgV6BV9IHQI9RqWGWXCw5cLIX+KrCVcMVtwRd9fUriCV9Q\n5jENePkuiqfAV5cyfsDYODBZCKBEjoso8mYOjTV129HxEyerGRnvKydC6teR\ncidRY4CWzJBnzkrsg6C+2W1dD3ZfWhvOFc2pixZ0v5hy2cUWazjlzwCRgcL7\n3XseAd3ayvehd5+5z4skChR4C7QqF/xqAf/ELFUTOQ2y4WLYaMWqLgO9xr2M\nvznP7CcFhmy4uw3H7pWQe0rkq6g5+rDfbA0gbkqewJ5SJFA9MCfc8ReNPQT+\nDEn9yuEWcQeikRXqlYme2ZxBcnXQvGyF9NrTRqS8sTcev3jaqOA3ZzeLQpzA\ndQS9JIWVD10WdTsXfF2VNmOjbPRusJyiheEs/7zu2yMen0sslbB46UGo1aon\nU9+RmGUWGKwQhKL0GIAywzFzOvigSBo+h3f7mldA/1v4fcfW6x1xVhd+z41Z\niu2i\r\n=eTUI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH01Rx3jjppsjeRJ2/W+v+wELBGnPsg82whHdCzXSM9PAiA028bXKUeoGiPYPzNkqIGkBqzjJzURhs4PUG0Od3kfKA=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.105.0_1621424661619_0.6142091722855836"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.4": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.4",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.4",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "2.0.0-rc.4",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.4",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.4",
        "@aws-cdk/assert-internal": "2.0.0-rc.4",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.4"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.4",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.4",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-8sCJbopVfAsLOpFJWbIAiQ7EzYSVnycFTyP4tIr6870dL3A2Vc1WOillnx1uEi4u4xQPJZVg6gzjuVh9qj5QmQ==",
        "shasum": "72bb61f2f24e55df890eb1cbfdc143a835eae7fc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.4.tgz",
        "fileCount": 38,
        "unpackedSize": 187774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgpTF9CRA9TVsSAnZWagAA40gQAJUw+e6QnYen/OEQL+BJ\nkmrrTH+IA/CCOpPIn0/ljkboadHS7JFRsw4aSfWuoZayg/t2haXLkadDfdNJ\nQLNcADShWL0sHq90VVqIhf9GHRVZNm1smBTgXc5AfcGz5IQZMDF2G/s6/4+g\np/0O7t/XulBLMZPCUBiHukZxzDed9tz07QNsrMzh2DkH1XLNjghOXvZSscCi\npzxIlVE26AUsay+A5fqQmxeJ/QLOfJ3dkvXgXLPmXCkp+RolSjuu6yL54kX9\nRPQI0Yro7fFLvLVxsd/SZXd5Ms/f/8gk6tNrD1buIQ8VJ0cPzSSi2VPX7y5s\nXZM4yvzeUzWpW4VMmbCmCwvKC/FKNo3q2lMstxNbiFEds7GL9a/0qWEvb3Cl\nKjCTwgQ4iFtKGvf6eELF2TnZd8hwfQ4vOh6lWVpTNIgsWamf16te/msohW6i\n96LF/BeOlCIrKHZmeuoYvtN+ak8/lQEaNYTr+NGKsmmzij1UCnnI7obNcE6P\n8ZmBeKRVx14WHGeyznWJdBZQUGPT8iuJFntmJIN3jBaIEbSocJjqR5EpOwiH\n+lbkCjOVha5g8GHzqagkCMkldELmZBatOkve6neoYsVGHiYKr92r4Sww+zLj\n0yFl76Rj5lAJlZrZXovuVZzQOcJvhbMFHkMaQiCeeFNXxAC97SEQjQEEUkWJ\nse0L\r\n=dsSm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDXQy49tP57Fn6Zp6L0fudMbYaNrlUZJZQzrCRJpsbkawIhAPhEFkhp8FJZy34QSZmA5CM04adyqymgZnQd7gUf28Vr"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.4_1621438844889_0.8297402137617083"
      },
      "_hasShrinkwrap": false
    },
    "1.106.0": {
      "name": "@aws-cdk/assert",
      "version": "1.106.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.106.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.106.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.106.0",
        "@aws-cdk/assert-internal": "1.106.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.106.0",
        "@aws-cdk/core": "1.106.0",
        "@aws-cdk/cx-api": "1.106.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.106.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.106.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-ef7dhg/Q3uA5gzLunUOCrJa85q0oePFJHbTzg5Df1zDvPTiV5b8SSf3D3SaAvFKazjNxBW4rZAu32b/4DrV0rw==",
        "shasum": "8fe981d4691a8e681b0dbc0447c2c2828e91655c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.106.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184299,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgrVUtCRA9TVsSAnZWagAAT7EP+gKrJWjx8zzT5BiqbtKR\nqmOBd27rCiEBnLS6LkOcGMJGqKyCVIbqkf3AWP6JCR4i16nDwNg4mokKs+ex\nitX8dDdb/F3O3Sc2aOsn3woR5YDPFUI2Yy6V1DrNFYuojR2KxWvgqr2DscB8\nGsZ9b+uGoN7SWIoHUq3Fjz+1IQBiuG4wLnuPSPiFx23sp1Uwek38KSa45Ude\navZvEkDaujBx79ZkXNXIonWjQ49QgT3YiPthT7AT7qhyR0R5m9hdHj3sTrEq\nhRVsarvQhSMfvgCj3bVB4RZqweSznkJKOe5TFeMz/k21zRjA2+yhGz0fyHrS\nEI9BFIn6+8AJIQDuzEF7Yfbjc9JguXmPGqq2BhlRItcNGIAekYWrMhPGzPh5\n7X8wQ1ED3oWgkWk+VIIZD7kX7zNHG9J5N4XoLQN9NjtLSqVrvHaE0LLXjhh6\n2yqCCxHwMn/kSNJHDlS4QKd9wC/h9OtrykRamin5rw6hnYXh4LYSEoZv/9Jp\nzmuA9Km5evwb9Id3U5omtCkrveJ5Jdvs0zXZUu6M9Lrp6ZAdMKhQKauydvYr\nhsV696bzHza/Xdi2bzHelXs4HdWX9Z9E1g/L6ZOruyZ9kFtOXZGO1l8Ja69C\n9TdiZPL6Oq/hlLP9nW0dUAcYse+RbOQGkmIdihhWCwTs0isn0Bmcsngl8U44\n9lIK\r\n=OIgl\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDAoUAtMtOXo0nv6jgbICTcu7JxeNKc20l12Q664ITymAIhAPzHMnhOyknK51P/1LjlcnixCKHaQWxOKCIWtgeGBRRd"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.106.0_1621972269265_0.6101869392623158"
      },
      "_hasShrinkwrap": false
    },
    "1.106.1": {
      "name": "@aws-cdk/assert",
      "version": "1.106.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.106.1",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.106.1",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.106.1",
        "@aws-cdk/assert-internal": "1.106.1",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.106.1",
        "@aws-cdk/core": "1.106.1",
        "@aws-cdk/cx-api": "1.106.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.106.1",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.106.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-5GlTUzbVI9BqGxlNRAscp1wSvmGW7ydUYSo+fQwe52v+v1dVOrZeCUJI3e3YWRh2UN8iYC6qN18sGRd/o1aHrQ==",
        "shasum": "0a0333423ca97da6478148a7765a02342fd3b023",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.106.1.tgz",
        "fileCount": 38,
        "unpackedSize": 184299,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgrrnaCRA9TVsSAnZWagAAh58P/3sLAD8V6Fr5w1nywC1q\nNvempcDpLwWoYB5E+lcfaw70c2IXgfoe2iLQFjKHlGWqmfaTssiuBDf3JKmU\nKLnhHXuHKp9o3mOJpfjEI8zIBrv5PIBZWPyqq43c9Afno/SW7jVo3teHm9Sc\nwIKHTWOkGgtac2+l9/WmHl4OY0M87wvM5mu6Q7JqOvzgJXXySKnd86nzOzGR\nKj/Ro0vx7KR8WakP6cM9KSkdHd2OwbxxYCGNjmjyZuGbF7sOK2CVknYYIPiO\nQbBBJnSWqek3uh2aIjdOWf44CnQUtPZadENuw5g0+0TVfqc7eIK94dxkYYw7\nnn0uGGbDExdD2MQe5hZoh9i3BGb3/bv1hLjoK2p0WUqYAVVDmF1/UnCV6GCM\n+prDgUoNnQ/PigTD75jgr0PdwblgzaO7R9W0njxkYM4c53H6jZ0rZ/CBSXpL\nJKsZRoLqespo11hsTj8rZR80UBUxykpRAYzXQvmdv4h2tqoBqLpzsaXPKzfB\n0LhV95RZKeyjbIINr09Zs3ogH40XQoAI8Ujx8Lnil1b2kjKkO+b9Ha0vZNKd\nRvCT/76OB2sJkEuv7mqnXEb1E/ANFypNhxHSwNaH1pUwiqmxMunaE5NHSjVR\nnsNaPCDPOeflC1wwbwBGaUlgF11u4dOF3lQKF/JUZzOVpYKdENAz7/2crrey\ngGLp\r\n=gWdY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIERsWNCz44dpYvvcjZ/yGzw1piq0Etx4N7HDhOl103XPAiB7pmkUlS2XFNdhYDf8O1+Vi89NVHmYE7bgYCsQV2LvzA=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.106.1_1622063578367_0.8044373274729264"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.5": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.5",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.5",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "2.0.0-rc.5",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.5",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.5",
        "@aws-cdk/assert-internal": "2.0.0-rc.5",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.5"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.5",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.5",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-j27wATdUocUmB2u9D9otQGXGl30QjBZph2D67p7NBiwUosVlLCVndLCfveFRYmJwjI9qiPxYxttwlX17zSSvcg==",
        "shasum": "3dfd64d699f9588d554a26ae755d0a1e03720f70",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.5.tgz",
        "fileCount": 38,
        "unpackedSize": 187774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgsS2CCRA9TVsSAnZWagAAG2sP/2aakQTDHMFwlCk+nltT\nWEs3J/l2237YeVcgzNXdbqadR3RGVQEEDuimr+Nh5rqX7uA5ZY8GuqVQt6W8\nevS1FsHhSPVRO0pSK+BTb1tW7kC0k4oUB6qAuEwN2Ou8XmN2h/lZ72/4DEGP\nTrbdreEqcUpQOmcMu/7H7oJia1aBxsYQlyRUpFjmrVdq9HSLQsuWADzWnj6r\niO0iRR4DY53H3rKrNrzAGAZOcHu4gox2ZUkW+ejJ5p92RLlE2VmuKDYsgDci\nKlzmYMhcgiEPBSCUAxX6vxOEGb6+md055nTYcZGJoP/4N+zRocijggIeTiQu\n1pLD320LRTXO+4+n/NIEbmEG1sBtnSPYgpdlxsWYGSJBcUuNBPA+Oz3B3xNu\nPwEsYPNwDduPk0cKnViz+sqVS/OOkxKV4yYwbMA2t4Ihs5TC7kgS+pBMhvmh\nX75kCZnvLCrfbi/OuOFW8uo3E+jOgbbLapcORe8PDc8YvVpKUhvvXJWLd+PC\nt/Dzr34cLjP5BcWgCimMwQSx+S/d6iiiPdGDcmIXdJ+Nh1CbGPMeByadjTcl\nd+zs25CD8EqYP6i0nwDrn2wMMHx0e0ctfyKJUxvOyRSS4eHwda61J2YHhtkP\nU79Y/Y03bNY02PNv9MjEkJOG7cOCv2KWSzX40QJu2StVl+p1jX6dnDqzkP2V\nkU6K\r\n=nPpt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDSFYlY/pTJmr8qN7zJX8LK81YVd4JpMZdE/mGhgXR6QgIgaapyRG5Eax8kmEwLNzuIO24iIIXWlgGXd3JnSRoFOoY="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.5_1622224258019_0.394584851291895"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.6": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.6",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.6",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "2.0.0-rc.6",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.6",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.6",
        "@aws-cdk/assert-internal": "2.0.0-rc.6",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.6"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.6",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.6",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-cnW0IZ/x77flrMHMJw0Na/ArkVuBo7BOS5ATAso/DtE1IwgmazF8RHfnCTo6L3JKF5Sgm4bpEoID6y79I2j60Q==",
        "shasum": "76876e6deabebff9af05825764de0d907bc72633",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.6.tgz",
        "fileCount": 38,
        "unpackedSize": 187774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgt2CuCRA9TVsSAnZWagAA/U8P/jz5oNBlANpnGy+7A9Cz\n+cDLANtSCJ6W3ZSETFS/wUhAy+ElD25SrmJQWCxLAJiDIUbCh7RTo9jS9CjA\ns6LQ509m0428aMU56cMnOvujo1nlBBU5WwF/4DDlULT9a6NRcd5DgfiCFBGO\nG5EzaPCgmGqpIR91FMuNu1MgvHEM4j7+NsqS0hJx3HG7NaGtlyfti0ZdwQdi\nAp0XbpgKm9/X48MhTkK7QfWFDI8EbV130nzuiR84IX43EtHl+T/Qc64plKBS\nvpur0mE7XI6X0hjkrV2Gcrxp+iLU7ZIH0jJjG/pfoL/cc6YJ1kqMZHUdrjg5\ngMqk111aymBzEqRT1VMDRGIA0V5zVhkkNOdPpTD8pdsxY9QV1kH15Onxd8Z4\n+0xwx7DoEkpc4eD3azJHv5Q2HZ5rc2oLMbc0zcE2sPTFlXlFpuPCe4bYQ5jk\n1v5UfAtGzcuLzmP57n48EwgI7dQiINqZVBcdQ+STSxSo0Y3yIlpaYoK4Ukmd\nMeskJtqDjihd7Ga/uG0WWzoIvpaBWBo4iSi3iH1ejo2mV7Hz06QpeHJbpYpp\nGmqs411JduPa/kRrPbICPW1ZkLpNEz0zJ+JXYRhW2JfDXzxLCIV7sUVn4qC+\nDLNIUVAYt7hAAAyktpXk5R0FoChuaF3QDifu/87DqkaWi/SIrlISUfH2VC19\n92pn\r\n=aQ15\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEqbJ5IdCI826ENhMbTKElSpvB03DXuP78z4qNwUwn0VAiEA/mE+cNpVhnGoqswwxPest18a46bXhZVfFwbk2vzwc/0="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.6_1622630574385_0.11809864718002516"
      },
      "_hasShrinkwrap": false
    },
    "1.107.0": {
      "name": "@aws-cdk/assert",
      "version": "1.107.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.107.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.107.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.107.0",
        "@aws-cdk/assert-internal": "1.107.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.107.0",
        "@aws-cdk/core": "1.107.0",
        "@aws-cdk/cx-api": "1.107.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.107.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.107.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-tV+Nbvb3DOvZpgrLEYFoG4lsMk2zddtPSGDVdWN4A5xaIhYFcnh27+l2//2IuBlV9RSmeLAYPZtJV6Zn7nLegg==",
        "shasum": "dd4798d1e92414662b38bfd088d65ce9b02a90e1",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.107.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184299,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgt9rzCRA9TVsSAnZWagAADvEP/2iPAX7xcLThHuxPOmOv\nAdpeBMXBgdpGeTOBN2rai/JsZmDBP9Isgojr4lsp6ZJz8JHirtJb5aYfBJMV\nTq1+0SdCxSFWJ9a2ALzrCo/7dPGR+E2qR5SLn1aZahIi5o68YYc0Uij+wAqG\nzUFe/9nhlLQa9xGYEaSqtFAbnfBtVaGw7jy6BTzxHD7eVry5B2aMcoS7pzVu\nUR+AhJ5u1cLewmo4a+92IEDzh4bpejlR/YVenbU2ovN0RXaLq7tmPwcE2SqP\nvqanIiqywhsakSb1uZ53RECir2ocrZzKmwz+QpKfYHGPZbyzmUaRUqOkEMgN\nzDXA0Tut/8Xpg+zdlZbcuXkAYTjiwZVkZki545mBB/S4L2+b/RSnY83jDpLW\n/irU9a1Ao86X+71XuN54RczwitBtBbNnvCym1HL/XFR+pwkaNr+K++lh+YEp\nc7Wsu0Iea3LDVfo4sRgk5OJwBdwnfkf/7LmpbZuZWzY1O1/3w5mTFcyuXL0I\nreU/Oh+DSIJ81onHJpiPmqzqqfeU34Z64VyaFaYVjVxf+DxFRNX1fl0g+z+k\nFWPHObGjdhcTGw4J2iK5evyCHZNC5Z3WFiU/BYlFfsk6I3IjxSM6Osjx4pR1\n0r2klig6ZFp8JJ9jQBYgWxUzjyhFygmvQhPhnczGiR7jHxZo9f8BwP9l1ofn\nU/Qn\r\n=M45p\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDTpoet1Nw+R/S/wjo6iTFVxPI+Ajf73LdGwDbz/9grZAIhAJeUs4FSZgY99AiYNjhW8iFTZsq/W8bh0Ibjyf/68YbX"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.107.0_1622661874916_0.2229414367445337"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.7": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.7",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.7",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "2.0.0-rc.7",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.7",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.7",
        "@aws-cdk/assert-internal": "2.0.0-rc.7",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.7"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.7",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.7",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-nXwKEvIWaeCHJOlotrXS+QgNRBIznBeNzJi+Qmv8PCxD8Ziv6bPsb7Qf64rAJV6W48eTVLsAsgJaeBqFknp9rQ==",
        "shasum": "994032ae4fd0c3e86d05b9f069ea543c105c7a5e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.7.tgz",
        "fileCount": 38,
        "unpackedSize": 187774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgwJucCRA9TVsSAnZWagAAHxQQAJKqM0uXI39z9tasjlI7\nuJsf/fEKr6XJT6g7wjgRayhMJBFYQVt9fupdKoDeSODolKnRtA8C4jokct6p\nCK+Pc+3FHC7S5wSzmDBkUoThcLSKFIJBv8UgUSmucvDqGxTxe6AL5Um4BT/W\nxcRINOxdTeGITsRM9kXNPuneR9FeiPJFusTAHa1SE4XxPwfrKdo9QRJ3ANNp\nDsplwSfvoxuKixfaTe6Ew41Ss5RrjZZ4HDu8gPvNv5d5DrV4MDydY39+v6iv\nYgW9v7ch0FVALOT+O9mZdtBz5cCB4+YLvl4aFR0ttFcUgLxPHfmZMBVM3ncy\nrEQrjUkd6d7DYjPevMeNudufz8WWqzazajwVl3RPF32DqLTEeoU+Ls3Etsiw\nzx7wfl0D3he4mDDTVgxC0ayZiXbig2bX4cZSAjK91nql2AZ8dNHC0XFvuK74\nGFZ+lc72wZsCh2fMi5ctrMgrCU4eDYqLLrZ54DfuvYQp+wpw+xb5B7En7HMx\nn72hEoEhbGIxNK7QMKcs2gYFnHkQ7kN6KI5p1+w8Ct0uS/AVQABWudRbh1qZ\nC+UzcLK+fn/o2JHJI4Lwjgg1/+scuYXUsFnJ2awg+CkdqYJvJzzON/p4xRIC\nc7C4TnC1rYEA/mzmyVTK0n50xGTgEziBXWsF6tyEteuN2P075htFkUKcT8s8\nlYwP\r\n=Ll4d\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEMCHz6Au8BvJlDS6msWRzF9w7IcVfuuvHaurtWPqxOPeHUCIFi6fChPb98ADoZhxzWOERzIkv1xzb2jIQTX9kA/d8s5"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.7_1623235484085_0.38127790250088744"
      },
      "_hasShrinkwrap": false
    },
    "1.108.0": {
      "name": "@aws-cdk/assert",
      "version": "1.108.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.108.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.108.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.108.0",
        "@aws-cdk/assert-internal": "1.108.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.108.0",
        "@aws-cdk/core": "1.108.0",
        "@aws-cdk/cx-api": "1.108.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.108.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.108.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-gAcqc3qVhP79WO9XJK0ITXp3QbgI+ThC5U7643gHLSxG7Izqrk6zD27c9xMmckOWvGognOLyKB4KdYvcg3RDkw==",
        "shasum": "fa36dc5c9c1d39140e6a74a6a8f77c757c461d35",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.108.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184299,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgwLNkCRA9TVsSAnZWagAAWyQP/0CExZzgl4NpGmRGaeLN\nObstTXag1x8eNLXOekGZvqpP+bLWxAM+10e3/l2Ehrts2jp6TLFJWAvDCjqh\nOp7q5h0mBvesLyFVBpGxR8iGYlTET+zx3J/duArzf7h26Af3uATnz+tuGpal\nmHRTHyz87sqH32xyiH4xtR2izasnu+63MR0qOXWgQXTI4kKa2F1xlOmnM071\nqgkICSL2JXpG2oxL+VxQWMUPBJLsVq0ixwH4IBFeuxbybYmeraoE5MLmmGwD\nmBp1PCnnYMlIX1d3JEP1kEh2Px8PEMe1txRkwRp2QjEvtxfTCo3GaVJbHEa7\n46JBU2SSzaxxXKp0GlkY7vcIFoYCY5a6E/C3incrAOVf7WmInzoV228DaBfh\nxg3EauWRzhaC4wgz6RydACIMefelkOG0OpkNwZrnxm40y1lbfqc5w9+ojfmW\n2bXeEJ7hgkG7gKbEyg8GTooPjSSrQZIExutVyfWX9y480IRK+VzpBdrtJdbW\ntR8M4mLuTiItoNCcm7ts/ocNLiCvtth8S/lqkAB6lOi1wNcPBI0IwziMW3JA\nwO6ibguNLmuOom6jPnJZOjUohHBWMoMV2K8uKPkdeewpmsaMNpDtD1UOPBwd\noNKoOMglZvnADN+IzGdAuwrroRqhHvPlD0GNJUjIllqyfTo2QYHl3W60+IxY\np8M1\r\n=+A74\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBSYMnNLSM3oe2mgzfU9ZNdhw+s4KOAW/R+0We9H3RyVAiAkNTzqRqDLw7nbDxnhXyLj8F9tlmu2WGY4RFmK1BFWig=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.108.0_1623241572275_0.521409220300413"
      },
      "_hasShrinkwrap": false
    },
    "1.108.1": {
      "name": "@aws-cdk/assert",
      "version": "1.108.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.108.1",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.108.1",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.108.1",
        "@aws-cdk/assert-internal": "1.108.1",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.108.1",
        "@aws-cdk/core": "1.108.1",
        "@aws-cdk/cx-api": "1.108.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.108.1",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.108.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-dAeoc04S5HpHzYeyVCg15AWW+jwe+LBD7OkRxz7Nsrg+ZpsFbXWhNON9Fvtzsef7G1ztKIBAFreD/jy7zrPSMA==",
        "shasum": "ce205d917e48c47b568b7942db5bf749e06bd5f1",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.108.1.tgz",
        "fileCount": 38,
        "unpackedSize": 184299,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgw5LHCRA9TVsSAnZWagAAbfgP/RmRqGw5WtevnfJtMqt9\n24s8oJMhDDBjHpuzHQidMaQ0n04KYrMzj0qn7lzm5EEk5X8UM82yP+bH3cgY\nWmzFGxtyuqkVmkHQww384rbTjpDkBI0gdgXfdoHbEHN/HAXDOCkLSgUCcAlL\nsTF+D7yO3eS+zUJyhe6RFs5eDjovjP0VvAc10ga7GXRYrgiKUnZv6ll71EQS\nN2ZLGIHjuo/FhXWc43AT8zLv1PL3DK0W7MrX0OOlAdnWAuZyuMXuRmifJetL\np3ab00HL0Uuazi4WxXk67TLHwtlrycrWushFoX6H1vhdnjxxxqRK2Yd4D9Ai\nenj4VYazBNArghjaC3JYvMirSkdMXlA1GQLiU5Tp4qPSeEomi7motV6vciFq\n16EtkSY5ybBG4cLVdvoG+uFveZAzViaANhWRR0IIMA42wfh+ODqhpHV2LsEQ\nATASN4gOmAgaFDiAT0gy4jEP5oShaKBy9XZibRUEb9Mbu8wm4J7fV42ZzbR8\nxna9dd8rQfQluLeeeqLhawbT2K5jxzRCaEWMYIwyqDpRs2GxbPqd7feIo06t\nbNz8HysVvq/J7PXGbCO5uajmmb/jROeWxbyUlfsZTbbJ1cqZp5HCsjBJjp0M\n2SZ0WwT5Q1zjl8LBnGL1NCMyAibsxywEj6ucf0m+VYkP406tgMraCP75FImK\n5uzP\r\n=RQWP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCaRGHzXV3/YxDuugsazSW7v7sk3oH7Us37ukv1YjWnsQIgMKLX9TSufKwc4pAriPGU7WycRfzRrEiS4LNZrpe9cKw="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.108.1_1623429830823_0.06193034344251713"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.8": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.8",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.8",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "2.0.0-rc.8",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.8",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.8",
        "@aws-cdk/assert-internal": "2.0.0-rc.8",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.8"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.8",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.8",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-qybuW36UjVOv9pnPN7Dctv8sZDY+6fzPgdLi8ijp/+UF8avMWuFmR29iE067bYZX4Xv2vkeqncBkMlAvpdRMJQ==",
        "shasum": "a029457b891e67e40e0389209353e15f2de5fd2a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.8.tgz",
        "fileCount": 38,
        "unpackedSize": 187774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgydfbCRA9TVsSAnZWagAAry0P/AmuFmFrTfDYc3jmkhUd\n4/Y7bZVjQRpy0V/e2Oz2bNLb2aoPW23g+Z8WeeO5e1cnvsJSdvPDUgJSJgxE\nSunPG1YWu4TaIbJmT+L/J2eQ5gm1kJxoGj82qIm2eZCkkubkTMj2G9Hs6NYL\nDsVUSVk908s/BzUahW6+4E0REvTMj73IPmLZPf1Q2eMUOiXCFVz+8sQXkAZA\nGQ35UaYNt4+sR6O2q9SqkNq4pncgitI8XO0tTSvp8dYTctzmhtqop3vWjwsM\n1/vKrxjYJhRdD9mU2f4cR8OxB9kUT739JasxqlC3FjYZjdwQH2eH7XS+T6y5\nm5GkvCCs8uDzV1AteDCf3g3Ea89Gwhov9jDPisb1Va/tA9iOCGDXvnyTmgVQ\njR+nKt0toYON80n9zN0S0HLjUo/XQc8RI4/dlHOsNoRSIIQKa5gclg53nMN1\nzyCqdTIaqlYtQXytvKDUvFqpkSHOWoLA0Ygn/FRDVRCMfQwU8GDMr5AIixCn\nkAeL4pe5GAlLWMpjuFpnyV6jC0FCpda7RX3jshK9bYqMg/tNJQMza6mcqFoA\nyuZBmQYBUn37bOMn09nqpN/Wwv43Ubi1+Qpnw4X5s7AKVXr5PnhkiJWfzhqH\nrfyY5PIql4axngbOoeahFWUUP2wvg4ht4qLA5CMSiONvK2vfZ0niJ7gauA+x\nJJvd\r\n=4utQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDGrabfamtT2YizgoFSI8qmPPelXOrNWlW/WsNkvJnAIQIhALIksgRePCil4nf3oZo4Z0u4auhtXpX3a4LVVvZcHFox"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.8_1623840730986_0.3493411740762402"
      },
      "_hasShrinkwrap": false
    },
    "1.109.0": {
      "name": "@aws-cdk/assert",
      "version": "1.109.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.109.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.109.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.109.0",
        "@aws-cdk/assert-internal": "1.109.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.109.0",
        "@aws-cdk/core": "1.109.0",
        "@aws-cdk/cx-api": "1.109.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.109.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.109.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-aYHkAIDPSnep3egwdVAh26wgYMxBwAPqZ4LMjMaTfYty0XLVNlo5u8FmVGB0F2VBFdHeq4vsuMWS4MnNdFslHQ==",
        "shasum": "77c84b6dcbd4797d524e79e158e28d6d6a67ccf7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.109.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgyqrJCRA9TVsSAnZWagAAPlUP+waNEn+sS+ZDmxwOe24i\nFKuDzYt6OUkfkF4+l94oZi1DWGVorlZZ1q0WFV8RREFiIk145VfsV9KgB7OF\noezmcsJeywfg5kyCcFIvRGqBs8uMJSZNUX7oLU1xYEGFoP3sqH1lWqE3oqS2\nllAFJeEEU3HWnfwCiJ90KNBonbK+yLQ4hw+4/ZaqVhOXHib4wNhmtbSok6oq\nmqxABDj+qNpTZpMZqtp85hkZx1ysjzDWf2MD7qj478e1nBSZyH74xDQ/4OTZ\njU1mwJP6gE95yrKfUEFpAP9GNv34GtwdRjsur2KXuD8Snv5BvJ6Kp0d+7A3j\nuqdljqNMgwnwR9qzNC83svYOhEUwv3q00vvrAUHHHtNv8tJWcDAxjKfQSxZe\nv0vE0kkNUwV3HSOMJiaJZK3pzogebK9FCmQVvIQKBdNozRE3dvWoHQUrNKzj\nV8lJgpXd67HR+A5+ztod1MBv360KgrN1VBRyVNf7XCoEyMfkbA35rPsgNmJs\nCXsFkwp4WsFW7urehFJ3XhjPy9akTdH6dtqCCTBOs+jnqBKqI3Md9Ze4fEzG\np3/ah7fLUUmWZQJynzy8TOcN7g6S3pYIKuhpM3803r1gqG50MIjX9J7idkRC\nl+Jzcp+t/6EK6QQIU6Fftf8jegG/CQtD/Fm6S2GmRjXYUaDwY2a4GJn7G8d0\nzAge\r\n=uN/K\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDxuNmt6oIpEO7HHROzvfKJ7Rq9O2cJ5oXc7YhDRE8A6AiEAtAIEj28YfUP/tbHoRi6vECKznJt9c+8dQBTW09nw61Q="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.109.0_1623894728993_0.6285188845016574"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.9": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.9",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.9",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "2.0.0-rc.9",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.9",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.9",
        "@aws-cdk/assert-internal": "2.0.0-rc.9",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.9"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.9",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.9",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-+mVEPlmJEbZXl67IZ5hOtPnEQkl0TMDKDeGnckgIGEiqSgrv7HLnuUpsypnqmHuUipS8bsCNC3kIsztocAxm5w==",
        "shasum": "5740b652863e4703ea86aefe00c52b58df2afcaa",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.9.tgz",
        "fileCount": 38,
        "unpackedSize": 187774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg0xEDCRA9TVsSAnZWagAAmqYP/inIUn8tJdQlXvDUrx05\nF3RR+2U730KVeOw/uevOroqKxHJb95KjqYmuHpJVHXmYPR1KsL74cq4R0yhO\nHCE1uUOAVpkpJ4/thbhMRBmne9+o+tcVpYeJUIY4kuB/krHNfUqEDtxNXFQz\nQy5xb+8O5K63KWVoW2o96IGNAgIcDj2mGPFhgV+SYSKZ0AyvSreRUI08WnnN\neVZQURceePEvfcGtWcycieUthwFJt4QwVX9NC7Jl03UfWnV10dUCYn7uXzGI\nbmT9dbmNhyFjo8kdppgbbY3/F8UhpOUXhyb0eSKWDNFFbnmda8mixqw0Vfst\ncGKcnm3Koveo7VPxZENkdNJQ0p2mIQ2NcznUESTOPnm8e3yHmLRyFTz0f32u\nqcX+WsFNd9S//w2CU7pIQB5xKVgwbfOPuaHpf9gIvc9e/DbJiMgJkI12pIIO\niEM26idnk20bcFzO/Rspa5WNwv5uqElJuH2Rf19fNT+AL3kzHLfR1S980Clx\nf1qI2YHHzyKs5tI2Xe0zt6luIe06DKJ6C6YqV3jGjKpMbJFEm9lgsdEFmeFW\nIYt8qkc1W0HBLQkk+O3P5hgpprnakPRnymaZDscjjBnDvsa1iami10y1CAoW\nTJ/nBGKouqIUbDHJIorxuiPrIbMvVciojoTenFX+c4BBU2oMr3rpuMv29Edb\naXZS\r\n=RGQH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDvsj947uB08xmbw+Mem9uK05nUw4Sz36rpRSqkwh3AOwIhAKEczJJEBvZdIx215U9wqhXN7vfgORmtcmgyzlPHE4W9"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.9_1624445186904_0.9932310207262771"
      },
      "_hasShrinkwrap": false
    },
    "1.110.0": {
      "name": "@aws-cdk/assert",
      "version": "1.110.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.110.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.110.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.110.0",
        "@aws-cdk/assert-internal": "1.110.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.110.0",
        "@aws-cdk/core": "1.110.0",
        "@aws-cdk/cx-api": "1.110.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.110.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.110.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-OzTXT4aD+IJgyn0GMgKq3FoLTmztPun3pqK/fE6jtCIggKyoZIeqZ3boZlJ2MHTcwgFm+qNp9fEsiGJ2AcHDxw==",
        "shasum": "8cf6a2b4550b4dcf697c096df4f6f3ebf48dfd5e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.110.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg1HRFCRA9TVsSAnZWagAAS9IP/34gr+2+s4cuMszo0OQq\n4dr5Y6f4fA/o23TcKepMl1KpHc9WhQ6jasww5jE/Qa/MVy1fKiFSZ/y5cSdF\neZK66sXvArtnf72a/2JAPpqQtOWxKDGHCo0D54yNcIi+sl33OxomEtAqDKR6\nQosF9n0q/yVSbTTdyAyuGAgOjTuJDc/AdhPd3oDGv1id5w3VI3HzjtxlJ5xj\nEPiGNFlF0IDW331vqT6KSRc+hzMtY/2wdhj4mt8lfvMSSGlCiJoCM8CBYZbq\ntDPb6YsmuPO49bg4at1+LFKqnlP3422/wcmUns5w4NCSTehzXdubIBeWMVuN\n03QelyAgczWw7XMXygLGSKI9lNIsMWtanfSOFnIJiEqoRLhO+dKu3ta3ensJ\nfEwKUlwa3Ul3V2TpMStK8zEU2qC/RfPO+eOgFHQkN9SBsPLOXEU3YPFpCnRY\n6jknTPmh54/M/qK4co0NOI0I1vsWw0fiLw3eoqdT1CebMJGiQvIYuGEgE3ez\nPRjpCPEzX4xQeHO9bl604Nsy+2pUICoD2KK3VuQgCuttZnWHM/kU484fINzI\ndFHCBy+eLql+umdCCiqsYUng9vVP8eESi6ehMs3g1kntXZT/c769/Qu7skuE\n0smtn34wakUv5zi7dh6vYWeyrPtgSnB0P5uv/t33/vbjBo8OUBowIglKp5lZ\nUmrZ\r\n=jSMq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCiFtSKnTtyGj75Vn4YfetrmlipXIaZHtUGwx+eC6EFBgIhAKbiAnEgwPparIO+rZgd7HwXnt+Thg6n5LPIbltdkySK"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.110.0_1624536133108_0.7505518367294779"
      },
      "_hasShrinkwrap": false
    },
    "1.110.1": {
      "name": "@aws-cdk/assert",
      "version": "1.110.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.110.1",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.110.1",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.110.1",
        "@aws-cdk/assert-internal": "1.110.1",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.110.1",
        "@aws-cdk/core": "1.110.1",
        "@aws-cdk/cx-api": "1.110.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.110.1",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.110.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-GdLgThJrOZ4VsvnuJu+uYtbbx884m0jFavy4NgWc7KSE+Vn4X51VtO4Ju02el/pMSgS7MLgbGQXLYuFAlt3ITA==",
        "shasum": "1f03c0f008e9e41bb2a6eb62599dc2245a06695c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.110.1.tgz",
        "fileCount": 38,
        "unpackedSize": 184379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg2lFmCRA9TVsSAnZWagAAA+wP+wRrAvPHI5t1KsQrp5TG\nWE5z62O7Et2GeEt5COmXgOX5zCdf0e41cDCDM2/qSHf5Yw3pH5qWmuFpnQ1T\nTYuaHyaZk4NOT4qSYvEgh26en2kLlDm3Bw5tyt+uD21VtzGv6pLufWrzdEFF\nYY07OBS0vrf9ci0NgNMgH/iLzeTV7PcolvDq9sWqCvuipBLqgXXHNkWFcMv8\nsRCIra5y3nEa5tQ7mijUjxQrwiMRrF0t6E0PGmCF92TSHX1TMWhDdEwaS1In\n+cybYQlxPyeWFNW5idSI5U8/MsqOnpd9fX957g7Vi9ySBKJBiFINIz78qHoL\nxD5+XMbfslrfHw68BmIlFp8cnDsJOPmnOcjg4feCaFkrfHjilZ3PMV/kOXwR\nxZoK4iPcQAGC1GegOpPZxShhSO/AAJIO/fRQEZXM8pFnsxH6EKqHHEX62fiT\nF+RVgBkDLOBt4jPQ4pjrI9X0JNKC/RYxkNRRUqlVRIQUiY/8Rt3C/KPO0ppV\ng29zTWT7Ch+L/71kP3g3A2pavJUWRSodP/DeInidGMRcNg3KmTY8G9fTkKK7\nercRBJ/R6R2DE884NNZ+CbR/rXr90mSGbGXA0mDyzbmmhtp3NZFp5ixoPQ1F\n9/yPjVfafyBE7+5BMsQaZ/MXXJsdjmYp33MqC7VAgSoXKAPSewOcMP99nRXj\n9xq7\r\n=DYyp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIC3uoRYpClT3tkqNl3yFFOF4DLO76D3s736z53fqoILDAiEAmQFF+Cb0EmhVz+Ke+uFEDJHGzda5lISXauRG2BTsbnI="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.110.1_1624920421602_0.7718752243038671"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.10": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.10",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.10",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "2.0.0-rc.10",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.10",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.10",
        "@aws-cdk/assert-internal": "2.0.0-rc.10",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.10"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.10",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.10",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-LshgluOpAcGCHtWNIAT962trFLILIHXLkTZEx+kE6bKZKsXg4VWpt7GMRLL7cJq601CIitHqthn7jQLAU25CJA==",
        "shasum": "b040acef0543e3043c5ebb9d9840fd20e254005a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.10.tgz",
        "fileCount": 38,
        "unpackedSize": 187782,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3EwDCRA9TVsSAnZWagAAN9MQAJgE/zP6ju89hl5rx/Rx\nOX6w9BeZbp9Ngh8mrOnIZWB538wFM6TimAKlljwg8R7ttj8HiS+nbK773Hm7\n0Uoa6hYGOokcf8HmiwF/+CVziHC+LWDGiM07vZ2Q1HghQMLgZa3sBasTBpbP\n49gAKeP7LPh2auLEb/xCELJ2FDNR+0dP5AKFDf6pxHhtZ9Dn1XyVwnKswHE9\n8CDN6Q4Te7yZGlxS2sntWyaUPGcU+TzOkWuBjSKvAVxPGkJVsbLLe4sWFJtS\nm9CT3maTA4ugDPO1r5TZdCuBYO5M8ZFHhivKG9EaqNXhzJTVmSizmvcssCjz\nR44Oqj0a0UUA+F57S7K+MkM+BiueQz8DdfvzUPvb3hV/33zSu7Z13Ag9NSqO\nmbIr/D5YO7a6hLRBgvBYv0vZ/N+BRt5jqGE8kloBjNpQRfut6pHDV2d91aDg\npp9WVktLq/qHSEw+n7wH0ZB1oHXY+GJKss1slbsWphLFUx366dYA5e4cAylS\nIoLPk2KOPXqa3OT91++1eXn2qAOGkWqyUW1TOzqC8C2yd6lMAZGxwHwqtae7\nNOtJ1fw7u76JzWfkK1YB/qZacfh3F1Z+dvKM74uzy0jthaxaJNmIsIG/l/Y9\njS6WTuBaNi2xkknvX4nq3UxZ0gARrmUTpDmjJ4W2KMGs4voM2GCkwpmvW1Sq\nT5Vd\r\n=hPvS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFy2yCCNrm/GGYaFKyh7Ai0VKKEyVybHpmD/uO5dFMeXAiEApnyFzDfU2znLeyhpXYDH09rdo/LUv6kRZOBg1AUWkNU="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.10_1625050114635_0.5206699140865465"
      },
      "_hasShrinkwrap": false
    },
    "1.111.0": {
      "name": "@aws-cdk/assert",
      "version": "1.111.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.111.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.111.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.111.0",
        "@aws-cdk/assert-internal": "1.111.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.111.0",
        "@aws-cdk/core": "1.111.0",
        "@aws-cdk/cx-api": "1.111.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.111.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.111.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-21pN2GpeULc/P1j+9KevxuHdAZOdwwTHIwoTrXffYtVU6ZgxFImvDv3WrZ+gBgf7fsK8LmzYmGzzOF5hpeoe6w==",
        "shasum": "5604fdc20d474e0fdabc546484e4879fb9828599",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.111.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3nLOCRA9TVsSAnZWagAAxNYP/RnXzZ592KIXpVCplMu4\nxZDYTemS7j0AU+2iD4+8Wwu1TZXHnJu4COlMHUmvmN+IPfLGMFk1lboM4BYc\nXyUn4p9YkGDqdj5+FXuGngv/oLx3g1izB/D8dftkHOLhEpYL7bQi8yhi2bRk\n/zXAoBzwtx1WItz40rnHuiyjikkfhsDV8K6a6GFTraYTkmYXUApGi5RzlQv8\nT959KIvsotNYWIYNRmPiurH1rHLsfahRdweIBewpCig+QdPxlrnc0+xieXD+\nyy3m5OFSOBnp3Yc57WPuIYYIdoEg/L6XCg93WrNjpbdWvPtRfb8u4q1o7tgZ\nM8bWtxn2lguDf+BUYSJ8x90YL3bwpg8YE8Uws8/urEy1g+0MEkGkpi09s5UM\n3ivIwkhSgTlDHyXybUMIkamNXpiCPpYJp5FnzJIKtcOoMnSjMmECfCKS2vBE\nUeWkOYj+NWtsNKvtbMg5AQZfyBqY6/7GUlESps4s+rTgWAVODBMGUFTJh0ZM\ngve7jwpgd3hPmuuq9t1IDdSTxMuD63Xyv3YGPzEUcDD0pTe0c+rH4GKyGwPx\nPnIipfXQSmjDXAiv2ZaPIKn8NnbNk7vMkX482o9lTi+gwkoQ7UrrNeLEgc6s\nHddgiA8mjMhLKShUCgN9hZW86s56uidR258IJEFkxKauynRv42OKI60WLmwz\n67MG\r\n=+knO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDKjRvM4bXpOFYOIcn7tlyqiUbmtpG+/PL+tupffmS0XwIgYd2wYplpIhjP6KX3/HbI1QR645X0uPevh+iGn1kf0iI="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.111.0_1625191118382_0.8276412030012152"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.11": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.11",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.11",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "2.0.0-rc.11",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.11",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.11",
        "@aws-cdk/assert-internal": "2.0.0-rc.11",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.11"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.11",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.11",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-aSXGXYrXu9trrOKTFblNRxw7t+ZJD3igwAM2bB9jVx4oQKHyl0hYhHdkzsUdUjDJSUpN6TH2JsncL2Wr9tEUTQ==",
        "shasum": "44127522cc1b523d267e25285bca3014fae5c233",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.11.tgz",
        "fileCount": 38,
        "unpackedSize": 187782,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg5YXWCRA9TVsSAnZWagAACdsP/RpyxHZv4F5BiLHPx3Oh\n6bh7uEo3Q2CoR52N0JyFKsNwIf9ESAjHXxR5r1aoBuDRWyYKmQfDylMQbPEl\ncunsIQB/37pG/cLXU+BvLRhZxsMEWlbBA65ndEltewtKxFJGW5g+p5rPaFXD\nNqWFvemtjiShOTAeb27EQyFQTbTnnp24OjlQFLETpDBPY8L3llVBqnbocsTi\nmQWXo9477wzbMzckwN5xmfzZYOXajduR6P+QgIiGrKPnVFaQ8vW8zKndxSOA\nlKFdXNKmZkwzxoM4Lsr1AlqKtRPxdsvwwIyMoXv19+B2iT4igrotTjSfEQXv\nAXgO2jEwjs5bzbf4udfdnPVtsmqWopOyWusXnCsZhveiJF6Cl/6KEX6qnfTM\nkOn+r4XBvd49EyobqyzQzeRUgMFdonVCUH+sPJ39C0B0JAQlNpd6CL6H3Re9\nJXz1TgSECacODSa0osqg+9fD0vzxkAbnmqjGnKZQgodD1TC/XrHtLqQcrl09\n8PhFYmNtAulqxf6EVKGcgQyuL99N71YjDODcrE9QmIeorh+2wJ8sY/9gqWtI\nr4qTterpYJxS/hWVPdjj/RMNq8TT8BToCemMIeg/erB+M0Zo2yzl80EQ/KZk\neEG4ePN40u92jN5HYa9/NtA0tB28SwF6G18fv0ysDsyb9mkQoXTdEdP3leNO\nG98y\r\n=SvtG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFqFjYvZcOOhVsGvt9lx6t4ZE9rnIpoD/jpGYAjKIl6NAiEA9q0/oZ0YfJOMDgMgTkQR/Rxbe0JAHiBF4aueaxArmJE="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.11_1625654742337_0.24345211938973566"
      },
      "_hasShrinkwrap": false
    },
    "1.112.0": {
      "name": "@aws-cdk/assert",
      "version": "1.112.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.112.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.112.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.112.0",
        "@aws-cdk/assert-internal": "1.112.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.112.0",
        "@aws-cdk/core": "1.112.0",
        "@aws-cdk/cx-api": "1.112.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.112.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.112.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-CBdS7qHf1UjsRkW8hHoYsZA7yR2Gkfn0PWxunnrivtS3B8zr0zvIYx28vquJsL8Pb+eQKeTVkYc2mJ3jy374Cg==",
        "shasum": "fe303c14a1767e1693043ff6c89a4ee50a8bcdc4",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.112.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg6LaqCRA9TVsSAnZWagAAOmEQAJA8By2xdiDuURuTpPZx\n8xwuCMMpy+EK+CxK+DGhOrqzbXI4QZsuaAXJmyF5QDaczraXwfnK/UbmrSa4\ncQqP8diMGr4HEFqrdtXsuhjKDpKIdBeCpAYCTnBCBAfORaj9uM9gVq4DJ7Ss\nEy4wT1BbpB2LE5xf7T0qL6AB2nbE4N+rqj2ISsDlrWi4XJCPsMDjYGvypZdK\n4r8M2hkVBYyhwxG6DLj+BcjogvQl4FfC8o3OeZb23lilUQopHlxQvgaVzudv\njBlEgxh/e+JP0NdTfp10qGqvNMXR50RwXD3flswS1ffRYm8dz62vS+DSe/Ti\n2IAeqXdFley7DKDG57CVI1Uz06vRd78s4l/vImNRE+ymcnFJiJy1Hvv5SLOo\nvkF7E2by465BfFodE/pQyo0/a4ZCmCTs4QQ/OyCNtRoOHPSeaWky+HKCcqsI\nElA/+NBHp10b1NBnZZk8t07y4yLbPrBD6hJOUkS92B9PAljWvUBhh87tms+b\nWAIcF4NmWU+RDCflO9wsyOZMSOqCu7e1YxUsP3MMbxBAbrlpwi0nTeQU9S66\ncf6+18yE7YsK0wxtS7yt0PaOZv75ZmDhjvgdSBugJF6jJWn5+ns9tDmhJNvk\nDQE/ILAeAETTDLxV1mfvDR4gHwpglHizjUCgioaKgZXvX6aP1kKi6bPIfC4y\nWdAh\r\n=CKdn\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIA48ML5XhZVLR8GfWLBWBcSmW6o6zR4Gz0mYkb5DlVuzAiEAkWhuTZE9voYnel6YCIQnuPWqnp/UDxRWpcAwsN+P5y4="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.112.0_1625863850480_0.32145852518424056"
      },
      "_hasShrinkwrap": false
    },
    "1.113.0": {
      "name": "@aws-cdk/assert",
      "version": "1.113.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.113.0",
        "@types/jest": "^26.0.23",
        "cdk-build-tools": "1.113.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.113.0",
        "@aws-cdk/assert-internal": "1.113.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.113.0",
        "@aws-cdk/core": "1.113.0",
        "@aws-cdk/cx-api": "1.113.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.113.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.113.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-NO9v/8zfHlNgjGzVWAihhh+gb5+TCIVpIhSP1zTzoiyrIuQdh0ohZyHK9fW2Ygz+DDEZ4b+fTCFg9KSXnozOAA==",
        "shasum": "ce0162ebba3217b283cced941fcd97c21d8821ab",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.113.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg7GPDCRA9TVsSAnZWagAAuM4QAI8D569Yl6zsd8JfLDak\n2Oqbe0/xLjTyABWwA7zvxtayfoSsqUmgmPSHbyP4YmW4infKecM/xtZmIVaK\niXoI8f4/c3ykHBABEyrCZmg55/MzzFXEZBIPgp6SnMsv+NhFuHj/VUSbM5bL\nnWmBQmxzjWTBso66uHt28FnEAIHrLPWmJ9hzldBtJy3lkWAa6QOolSJNv1f1\nBwIJpKvD9qw1V7LWuPhe3YUYNGCI+FTZAdO7F7KoNAHVXf11H/tyPRrnS0N5\n1bs29EpJdJ3FFRRT2RSpOz5KVRXuhN8G6gyVRPe+w0OvLI9BGkpev1thAqW7\ndmRFsJeIWU30XrVlml2NFwPSkKvhxARGx7YcOGxmCHN20oCVxeuHqk6AMq95\nq7maWk8CT0n4Crnb5G7fL+d9ijsZ0/FSsYuoAUvTs3Sw/JzKzk/si3dRDQS0\nxbNtw8/s7Bltkros6fLeQqWjM7bCcyEEllWaUY+I7rFcCGxsOLXlGlTq1Jxa\nVd9PSkCL+mEuJZUP5LUBwulCEaBZ2NJ4JmPr9Ie+eyBw4+xTyO83PpEuRDhe\nZfbcxHQbBqzM6KCk06tdn5lB6Cq1Q7dnjf6wVXPPcicJvcdlEjFqqu24pWRZ\nIIikEdH8sHOcNFrcWvTmUrR0rtF+izwwsr6WoGMR8wjzb7Iq80nWMigxKjyg\nJjvF\r\n=8j0y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDtlDVZ2CASs2o74ZkQ+lEM24iefx4mCu6PRig4BOYFzgIgKBcecNjK4G2Bxq8xqCHUrlPMZqdNlvGBd84RGRi89R4="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.113.0_1626104770799_0.5409642891814772"
      },
      "_hasShrinkwrap": false
    },
    "1.114.0": {
      "name": "@aws-cdk/assert",
      "version": "1.114.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.114.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.114.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.114.0",
        "@aws-cdk/assert-internal": "1.114.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.114.0",
        "@aws-cdk/core": "1.114.0",
        "@aws-cdk/cx-api": "1.114.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.114.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.114.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-xSlnPL1XtnY5wQ6HNijRdMUkSM3FIAe+Ampe3aXw7HhDih667aQw9L96s40aDy9P0lse5jcRaGz4xS4r9foL4g==",
        "shasum": "f0f20e6cbbc26b6fb677d66f7bca7f67b80437eb",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.114.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg8DwtCRA9TVsSAnZWagAAcTMQAJKAKCw5IkRkvuHfXKwC\n/Qmcyhs8+1xazoAmpegwd6aAgHqVDYpItfQW1OjGNMJvep+1hXnPkZB8YZQU\nQNMq36hs9EN29eXxzH8lf9t2KEz3jV1An2A3ojBSTO68w1KkUyuPuJv0iEj0\n7evhdLeIALfz+QyIm1UcmFFp895F7oqGEoHoECnS25QCYcF5ztjaZ+41OWsS\nzukegmpzk4q5BYUwV+0E0c+hxXSU0fgmV59Hmj8yEk1F8fsV4C8nF9xacdqP\n5Aj1xNslFlKjlMztrlPOSI6OIZ8j+wI4qlV9o/Xi+0q3rYpny/n9QQz7CrEU\nQ2lR470EsPXniTLEzG3NVZPV+NPFinW43BwLcaIRsSDewz/J3D7fEn0zh6LS\nM32mXnrvNF6BEhz7Htfry/djT9xu8Yqqbwpb+h+zKtidjWDEecREAq8UxbcU\nfhjIH0xkMR0OnAd1j0Y51JxYXir6d0LCnsLJwxK4IDPOw6/Aox7LmFBjVs7t\nZtOAzOGD17jixHcJxG5bhwuHceSa/n8jWAptk2HJiQzEGGhf2vdeu30shk9B\nA9E+e6ATiShRf/2xuXZCqNOvlo3SN6DeZxvzAnPNQKGnoEMhz9mSCFtyX4Rv\njeSwc315c6pbj5gpNOUpMQuu8iDjuCPgQxm45vWT2DNV1trUxZZnj8kWHZW1\nwiOW\r\n=Pj5F\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBDr7K/NRFmJ2a5CKen4RLCZ21BhSj2Wqm8405ULblQeAiEAxSuza9hcZcIcBtUrjVZ20PPP8BYQg65qLw8xME2ml/o="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.114.0_1626356781351_0.28096067955038717"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.12": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.12",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.12",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.12",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.12",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.12",
        "@aws-cdk/assert-internal": "2.0.0-rc.12",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.12"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.12",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.12",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-wZeYFo1qX4ghjAIkkm6kzdwYu+tcD6V3Zhqgz6dHxiXwmxkAchW1L8iknZr6T7YZ1BJ/ixb9s3kAOVd3mRTaVQ==",
        "shasum": "eadebd81c8e890c6fb65a632591db27556e0ff96",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.12.tgz",
        "fileCount": 38,
        "unpackedSize": 187862,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg9bgoCRA9TVsSAnZWagAAZ2oQAJppuTlPNtlpWV6m92Zo\nG+IFc51utrhslwVdxGtbtir7gbkD9vtU4z2OpMviMGBKDHJ++P4VPFvy4iuq\nevDHF0TcwHS0c4URcD7ltlkzuwflXeJX3f+Uo2bektobOgiuhcy7zBSN5mBq\nAJZj2pssaAKsHPIvwNKkWB2ldw6j5hT7QC25SXx93iFE0beD4MyeZeyBTsP5\ncgJ/ZazHT+CSYrfc2zYTRaxIG4ax2EyYaEnVkKUAMvNTFGOoKtFt4yvdEYoj\nxQN26QEksORiW9ldCfPN2Y9MY0p89Cjn+VeAAEkF+P/Z7m0b402tFESOHYVd\nPsNKnbwEPmpufHdNYxfX/hA/kNK8M6Y3WaHc95Dblm+TsFPazRQubVAJmwf7\nvCPXoVOeZJTkxKE6uIsBdZ+Cz3Vd9Z+h5d60In5iTzpz297Qd+dDKX0TNmxH\nmEI5uaRgPzQ9Z5nVHs4glwS3+Rlydw076ywJ7qd2oJerzx9cMjouIx5W//Py\n0vQnWDwiMMlUdHeHi7/qjah76tXJ9FPhhIFkoNg55B0UHJQA9nuLNd42Bij5\n3yb1YI+FP5MC2CJA7I/HbVmG8L3V1TLL14mOeznG4DCoGlQITIDmbu51iJ+C\ncQ3/odImliT2KhtP+5JiCvIG59Daars7avKFpV8Y713hz50jewSt7YR5eNTZ\nfEgE\r\n=dDNd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCIzjLhimY3qTWLw+zAFEbvwHYdPNggFXLmzDPWIziJowIgTzfJCfdJROOeI7HzRdO12/JS6IYnYqT3lUiCWWJnUHg="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.12_1626716200229_0.1264840323005223"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.13": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.13",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.13",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.13",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.13",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.13",
        "@aws-cdk/assert-internal": "2.0.0-rc.13",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.13"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.13",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.13",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-d1AMpur1vVmc0cUy7w1NMj088oaeNoJ/+GlZKTx9raI7qM9WPVf8oY3rhHTzl6nx4L158wHNNZzzX1RvpbsLlw==",
        "shasum": "ffa691b08da2a25a71ad29f3c3205186cf5f5c87",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.13.tgz",
        "fileCount": 38,
        "unpackedSize": 187862,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg9oUCCRA9TVsSAnZWagAAddAP/jrokZ/lKweDD6kLDa1J\nQ6HNWis5Dmve8xghADUIes9sSgKJuveGv9eGHmYMxWtLdOfgWtQnNRy6LcxV\nV33Xe7qRgPEU3X8J0/k//0AI2Cv3bnRcGndqSn20i92TQGc2En9RcQaSuIXZ\nva1XXdvAQbtUfhGRKWYNhGP3ws+VKQNw/3ZVjTwAiEVezJ7A16cl2g3tFPs6\ns8Z1Wq3VGUoX72n4C5KoQvBCfVgHUpPSublsNAXF09sN7OdoLxrbwzxr5XVr\npaixALLMASFlDYttKjx2ptyNlymRl6ShTTGVMFj15zAjVhWfVbsiexwug+nN\ns72oX3NfEEeJquim/sb20Oqap1ZM4nIzvPB7Jk9MF27WDWivdTMBKYMQ3rpN\nvJoMBkUgxZBZQE09DxanYlSauvzfFePwq3YXKdyGbRj8mizO6/af88AvueRC\n6yy3o6Dn35uQAY1MVG0e0eief66GbpOnmhuHsATdlCJKg7/lcuoj035lAfZh\nhlmgV1r0fXgRmTUV89ZKk2cWYIC94nhyh0VcBgVc4McUldm1S76DwEzybv0Q\n1tLyyazSzmp12b5gpGV9Wt3tjJoophidhoiI7h+nqKI+uokRHojnL+u/xltc\n0Hwy+MwUe/PYrZ257ljtkNyj0uhrTa14u0IKI1IzOTpcc4hI7udPQUP9dBJf\noW4e\r\n=BOMT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCak++h07e6Ozc44xla0eE134p3RmqK0+tpz1CZBurYgwIhAKWouBDQhw3rcSs99niRUX4KirL8cDfYefu/qyTx8bkV"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.13_1626768642284_0.5300653389006982"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.14": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.14",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.14",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.14",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.14",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.14",
        "@aws-cdk/assert-internal": "2.0.0-rc.14",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.14"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.14",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.14",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-txIwhxZRTV8Yq6S4+cDyiSuv9FB4gC9xZC6kKhpLLCqk0PBzyAX2avWMp3L6sQVNpE/x4THV47A5At7DVpwZ7A==",
        "shasum": "a8a60cae0e2d8d1dd5c2f2c4524765442267391c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.14.tgz",
        "fileCount": 38,
        "unpackedSize": 187862,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg+AD1CRA9TVsSAnZWagAAzHIP/04Y+ko8f5vXdIYlfK54\n+ZWKP4T8poZdpB7FComzDEKRj1bZADqQ7OSSgODFKNQZE0P8UOHObhh52Ssz\n77FUEe1SILoPgRAchHc9V/V6bI+FGf2SMMVn2M3kwpnlpTvSCUX/whI+35PM\njuLuphVIe5H9mptUamZ0SyIFC9kuPRHJI1GowrfLvwEg37oY4vxsB3h84POh\nbjAdkjBguBkMwxV32aHIdrl0NY9A6WaKAee2flgr6nzW5FIKPjC5k3qt7ubE\nWsAZj3z0VCFoOcl8JoYT8bGLbHIdgA7lxh8tPDiX0JhHQ1WOBTVeVHYivD/F\nrK3e44/5Qe2ZauVRrteT0TMm0qXnHFcKmFb0qtAOXViRbcU+FPvYIgypsk9Y\nMvGZj8C4kv1HCk3r42Q6tKO7UC01VCkdGZp7ibeBDWBRsAvTr0VR1PxdtiCf\niJ7viZVpzNvuBXHbL0COUjuCvgrf1WosHTYe8c4QiWLtnRvX05n2hHgagSOU\nK71uphZoY+LRFXvFufr8jb8R5R5++B79p8zUw/4MpW7D+YRBbDIe7UuUX/vg\nrG49gnmPuDc8K1WgX2N2NbAmoSds2XUbzCt0LgQ3UfnS3QLMYmttSXf+9Dte\na02P+4mP5poR9hM6Oos7KJzpJg/GYG2a5MrOZ2+0uOxYHFC2uDFBA+MRKL71\nMU61\r\n=dFRl\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCLB9Yw/7Agw1i2+8ykawuNHrdDYZtuIQoFE1Sr/NFgjQIgIA3FHVZJ9CAg0OaCM7kSfTckk7LjMZrVEKi1iPcHjtw="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.14_1626865908921_0.5126099228563465"
      },
      "_hasShrinkwrap": false
    },
    "1.115.0": {
      "name": "@aws-cdk/assert",
      "version": "1.115.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.115.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.115.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.115.0",
        "@aws-cdk/assert-internal": "1.115.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.115.0",
        "@aws-cdk/core": "1.115.0",
        "@aws-cdk/cx-api": "1.115.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.115.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.115.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-sOSo2xFLFA/lFWOmsDllMgxDwxv6VuPfi7FueizlgdLZLaRyctEWH55rGm07C+ewej1AjFHp2mjp0SSpG2V3Cw==",
        "shasum": "31ac7667c7ffc658ddf816f774dcb2cc390afcf3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.115.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg+FnMCRA9TVsSAnZWagAAu/IP/A4GCxNOINad+wnW+ssP\nJ5ZuzAWMVUfQH+E3eRTCQD/h//AQvEtp46ykIXg9PmGFi92mfyxtHxO/MIB+\nWbpp7dPEhGbE96NCVDG2uE7yCX+6X1oBrSO3cxvtmrMMX0i0uKp2yujygmVU\nUzak3uS8ysCuRz24WmnR2awthCu18pIy4u5nL8/mIKEOwh6JasNAaBH8oH+V\nYxlq/EWH+WLIPoIgCFVPjhUK3QsTnxsAJOHI/KHyQwToBZ5fqkSZl2P87T8f\nAns/L12Aq2ds7rn2T6Ad6CnbToGyzKpeSimOT3mGq6gq0J+mNN4xJ3yXVjhz\ngV0JutUoxNi7k+70z99fhM+Edoe0uhv0NaDIadBosNbCbBvDQfgB8aC26Xw0\nkImM2c5DgdFT6KuG/HseemgfNMrD+SFYa+4b4+jTzS8Tqt7XszFgIkqxL/24\nypJIphxDOWZluzk0JwPqDHXWOIi08lRLo0Ed5TABkB7/og5o8YgPbYnpDUu3\noLJy6K1VEhXwwlyUC4p8oyvrVHmXXiZzczC/AlCsnwYDDRIudJNSWkxK0pzM\n7+QTV1B/jSrD6Pt07FNO456mE8lTmSym2TVi/CviCQJDoWxGsCVwDjo/8vxt\nQT1H/YRomz69LrNHOXNm+yg/sM+V4r1CBej1Z1hvLx2EtDoFl+j+NjntJe9I\n6zPY\r\n=Wt5a\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHDYXk8og5xNzY1/YN1Zu96/UPko6N11F0MMiUbvmOiGAiAigG0UbJ4HKHItmY62YcmHmNq6/vjH6cm3YCYZ2rHoag=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.115.0_1626888651982_0.9349508706325362"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.15": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.15",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.15",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.15",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.15",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.15",
        "@aws-cdk/assert-internal": "2.0.0-rc.15",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.15"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.15",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.15",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-rwYlIJXyTmLVAJcDx0HhxD2ldVo4i3BAIMeIVqjqw/hLz0yLgyk/L6oC7oIPMwUblTHxMfOGfM8Op1VsFiK93Q==",
        "shasum": "ef337d5de8720d1097aef7ae1d1ff0e797ca3767",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.15.tgz",
        "fileCount": 38,
        "unpackedSize": 187862,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhAU6fCRA9TVsSAnZWagAAgPIQAJs6gpFBASwFvqHXYvTS\n5pK59L5g5uglRUDjWIAvCARh/Ecuu0jJ5MA0vmUaehPCXsPl3bFQwn75qNev\nOwrn7k4vzN2foG5p9wVAdtDcjIYPpQOX47bi77dK0U7T+/U8Y4v4Hd9K+Kcb\nEN4GxIN6DKikixlO5pnGBTXa9rrgBtyXF7d6axhMyi/WBlMRA+ub2bjueBpS\nx8rEbG0zR1M7Nk+XZhV7JB0s7sWhcoev4FCuGupKLb6mCiJGPY9h6kyHoVxD\nbAAyg5ebC1KpAHhmEaa1jKsdIsjGibrX748CAwtq+ZVJz44VeDnlvkFDSUdR\ny+PUxHfIo6Sd28b9a+8TFA7d4XZTn3PJVETh0iVn2r5ujmEs8/B2gJe2owzn\nLrxGiLLMChnVic0DkmfCS5yNnpx+mKtK5JJHvHJntCmJFJOkVmz03IhjVBPj\n2I5An6+Ib744CrScRf+bJGKw/QjSCgPuEzGlFNi1qCyq1WwywOyZVSwaDsBZ\nxUtFk1mTsU9at5lgXdQvNZHnttb1f+6RmPCxRLr4Bes6Wi+dUUa6/IKUP0MP\nIRjLbMacfvQDlu/R5w6MIsN/V4N5IrgA7OXOGQw/sA5YOPASExKXJiLz1OtD\nG+/n/i36LA9uxhI5DZpB9mOw6KkjUrPwJf7x/11Ie2Svr8aaSU0pK0le/ejM\nnF+L\r\n=8ypg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF1cI19qtpkipAQT1a83bF8hJ/PojgkJQIbm3zru/740AiEA6250iBNU+/kkjiJMP0j0VCCMU8lKNce+euxFj+QCuBA="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.15_1627475615330_0.47564312967566336"
      },
      "_hasShrinkwrap": false
    },
    "1.116.0": {
      "name": "@aws-cdk/assert",
      "version": "1.116.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.116.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.116.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.116.0",
        "@aws-cdk/assert-internal": "1.116.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.116.0",
        "@aws-cdk/core": "1.116.0",
        "@aws-cdk/cx-api": "1.116.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.116.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.116.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-1mpXGwTp6UW2d1cOQBpCfNt6u9kqp8eJMFu9SWTjyDxBc6+d3/vNskX3x/4Dsbu1CqL4JGv7DgN1DAqRSn4QqQ==",
        "shasum": "4a6c74a7dad37d210f552f76787c2bf268e47195",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.116.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhAVwdCRA9TVsSAnZWagAANncP/RuDo6xrWsP8RAzzj8iL\nx17M0QIaOFLPth1cYjE8ZZLIe9IqByEq5BzwQ3mnzVGs8vNIjQx2Hp0mVUz/\nsDAARMg9edwkre15FbVTDmMypw0q+vlV6Aqvzrhwq/N7N4iF/zc/quuvsg0V\nXXaYrY7aumcc+ELrTAGQDDgxgPDtspVakB9crmoFik4JZ0n9ww8wPmQY4Nxq\n21C5DtFzJ2uh3itXgCn574v6bQy2jGvTyqHokpaeuBK/cAJ+bi//2O7q7RPs\nLwclZnAc+FnOj25PfaSintn+nZn+gSoAju3oa7QyXkqBhj3gt4YhfTcRd2xD\naGq+Mtqdf8hMlLjl2BRNHdP1FbhYfZmjrcm2EE4zTxjucjumhTYTy1zhpH0m\naOFPuiJPbObOZ/EMxBjcnPvGM286spSY5jaEmzH72Cxfi82PGgXY/MpMvfLS\n6k0vQhwywxOtUJ1SMImRu6Qq2d7Df0ZIAo8uwihncUjYL7kfIR7dUvxI0KGV\nuMFpCUIcznf6WThOHjFfOgGiPucIDokjocOQrOcLAERnQwof1llE1LBpsz69\nlUESGQ95PXLL3lxky2YPw5uxIsehwwu4OY3GAHcsUg9uwfpzOrH1RmXH1xkj\n+4TLRIF69wbq1i/N1iOKHauPa0GMcG7caskArIjQJVj4+s5GmSP9tlJZYPXH\nCjkE\r\n=SRxT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFykB9is2lJ3aXj7mPJkalUJtr4k2NioJsBqZOij1Vk5AiBnPMB12cfXPNVc9oQiJhzZTc7X+9jeZurdHiGGmNeOqA=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.116.0_1627479068860_0.6179968154680855"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.16": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.16",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.16",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.16",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.16",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.16",
        "@aws-cdk/assert-internal": "2.0.0-rc.16",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.16"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.16",
        "constructs": "^10.0.0",
        "jest": "^26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.16",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-XDTQtZk1vc/2v+cNrRELXcfTpqmlpBUWRk5o21KdQo4xPg525r7Qtr2DtYH9cINeTtbMOkJuhwHlCvbGTU6PSQ==",
        "shasum": "d163fe32239b2c3be1acc7b9186ad4bf3fc303a9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.16.tgz",
        "fileCount": 38,
        "unpackedSize": 187862,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCtCOCRA9TVsSAnZWagAAn7MP/iTUHlJ/9GpntD7iLofV\nFI58bwqlxN3ZQ3Pj9/xdhOoBe2Mkx5nM2ZY5CUO2plKDcf3eypRlwQPuTQkC\nmGu9h0kWBl4BQusKeeEEAwWStMsb9kNp35xWX2Misp5QO+WhuwsmiJMKsMz7\nHz4//AtIc/xZOFe4ev9qGsUEzgdtKYxdvb+OGkDTAd5Lv25kAsu0wQFPYRTS\nOY+XiqXWe+lAn9z8AXmsDW4I8/2xZWbS0Flnj1tHRu5nruNgTyYfHdiBTWQm\nXvwz/wIFP2P1xGPHv4dNZXIuFnya2w934JnFgxS57ObNy7m63cPduUKiaSQK\n492b4AC7B622tIi1XANaXXGdjEvb7WylsazDVZhCYIi+u8xPyHGW3cS7se+2\nNKKVG6HPrXVjyjDuk+gMl9iP9iYQiHQmwQFbY149eHhbW9UhCQ9HBEdyYDQt\nNjVz0SeVnXHGJ6k2nQ3LySkLyLGwCzk6AIQ0srge0XySrOtYo3yxKHLzsMIJ\noydFfpbHpe/MmSuvo4CBnm6aOgUpi4fSFMQ4nRxC1VYX6jsVpdv2DEuiJzQe\nGOvUFkezRvunPzZnVEWGNra3QAIv9NBtjNa0v4FV0Hs2SZ7XCPa4UymX3cfp\noXe896q8pWgI4ZbztRyn0qFnOYMQvIV0/NbC+u6IcmPX4bXeD1B/XFMQpwyT\nKll6\r\n=9MnH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEbb5UhPtUMDV8LyVtoE78hgS21BxcSp3xteftekkrgDAiBR2WsLjXsA9vrxXHhbAUofIEqI/Ms6y8LJ6H14SCPAaw=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.16_1628098701915_0.19397828434775977"
      },
      "_hasShrinkwrap": false
    },
    "1.117.0": {
      "name": "@aws-cdk/assert",
      "version": "1.117.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.117.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.117.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.117.0",
        "@aws-cdk/assert-internal": "1.117.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.117.0",
        "@aws-cdk/core": "1.117.0",
        "@aws-cdk/cx-api": "1.117.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.117.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.117.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-mimCj90c8pK73sNmMZle1ohMiKxGWDcGsG8y0kTH07SBu3jd3CRMX5nmaKq9rIXPOFujMXumL6BTRbiFxRLugw==",
        "shasum": "0924a286bb828267b111de1c6e11ac884d1760c7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.117.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184380,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhC+CaCRA9TVsSAnZWagAAVzYQAIppXP99mNsKLiw4//gV\n5BGDJhh/70ecrkjvLZqjwV48kgrMkFloRCfBDvzB2y+DXbmL+zMmFqfIrmVk\n39YVaHZ/4uOC+41Iq5BeNKnZdmaSdw8uhjEj0bZLNAi78qcQRfjhJiePKhWB\nJma3E3SeOJO5a6Z3NHYh/PCR4ZKL9YO7ZxtaFE8bdBgy+deWRM8zsyE0pfPx\nm+8rFxH5oIoX3wo72iLNzAHBns77iDTqvhfqjN+J4njCz4zDz6UFf+L0rw+u\nnlAHW2tU7UrhIipHe0VqTOTzPPWfu6Innis0yvdBAL1zqcpN2y0q4UFmHCjU\nFFcDHkmCmR0U2grV4DK/zzgOqPRyaj05ijlvW8Yf4Q/L9e3uHr0Zl4fiLA6B\nlzidX5UO1kuvo9sm0AcDk6KpGQ8DIJxZx1Qx2/wEaXy5tafJdB+XJq9iPuTS\niQex1HejxMa+OjarzN8LOkwFFK36lLnez6Jwzwq3BpHNBLJ05woOg7cJc/b6\nJti6oGkoL5PeW92kM0j8Yiy0OrnrFxY0pWByPXue8L3oRg4Eba0fB25Ori01\newNaJ1RrLIbPznxT4glqmm2eFOOjmJbA+rEa9aLQyI46jF0Q/lk59Kj1OJjg\noZeMmZjc2335HXE1dCeMHbP3MAExoBeswC2lBPQhsi2r+ONbY6K9i3Cice4i\nVFgC\r\n=Qym1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD5s8jjFo6DqCMCbU8dlYlBb9D8etTIWYasGfBJzHJQ9AIhAJuXbzYa4SSx+HabyRb5HAXC8L6fGE8OYRWeeA3PlPji"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.117.0_1628168345836_0.41544208522846815"
      },
      "_hasShrinkwrap": false
    },
    "1.118.0": {
      "name": "@aws-cdk/assert",
      "version": "1.118.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.118.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.118.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.118.0",
        "@aws-cdk/assert-internal": "1.118.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.118.0",
        "@aws-cdk/core": "1.118.0",
        "@aws-cdk/cx-api": "1.118.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.118.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.118.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-9/bbt939ZMoAnNzDufOYn1Zs3RugB4hckXv3xNQsmuL8ywZFLAiMje3eKJIAFx4KFqC0Nl/BcLNN4vbiSV3fAQ==",
        "shasum": "36e66a3327264e677c5a1243f3021eb16ae53443",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.118.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184380,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEzVsCRA9TVsSAnZWagAAiPMQAJgTooy/dKY8/4YtlXES\n4Ki5YLL7GdLGByusuWlSFun6ZceoC7gKw9zDDlrYuUPQbC+Dy7hYk1iY61tW\nrpuoKrQxYo/2c9SzJbzraxqKEmWAsJ4yzd433TRHmltWWO6ZSVFGDJOq/yq3\n1NPa0Rg/cdt5RqcYIAAKL2X0SU/gQrUramyvz3eSRJNm0nMHu5854Aa3waki\n3c6u18rXBcTAokj/dyH4ebQcz8hd+p70K6c9C7iE2ZRXMaJTj9udTk7LGCFn\n/nUKMgcCQK3xx/knxvmjSd4TXyb1kvkToa7NXuCXPK3YTbW+RJroD6ZS0S29\nhVqQzZ+CfcC/3JqRDexrG7MSaM76pzp4op5RkeJYgRrR4ezA6i+BiVjtLVeN\n5XcD7rnCGTkZehtQurgW0VVn9nr156oOERQKDXSUTCvgaLZYuh6egMg/k6md\n4MNTA5eyl8ujxOd/ESQo2L/n+D6Pqy/je6LMBNDft6B1EyIvAEGXkv6++q1n\nE5qh3NdSLeIX7OYi4jJ65tAPmzGZaCM4bMj62BtG/9Ge+bbntWkC/AopnGTk\nbrPp3GHZxKX/X+iUMvKNgrfcOpSd0fBLQ0je5WvKaUntcaq0flVGCwwUSFyS\nyK/iHMM2qgFWb+B7OuY30zlO1HMthdXmyYl+q5W6mzoc2bn/Oo/FEz5U0v4f\nIQGm\r\n=hC2/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDcvgPugRwfKlTilC6rd5x7xjEy7g6hIA2uNggH7fjPsgIhAKl5BuG3EHzYIjSYThbTDDz5ubpxJEY89QsaPnROCYC/"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.118.0_1628648812677_0.46319093747278606"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.17": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.17",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.17",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.17",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.17",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.17",
        "@aws-cdk/assert-internal": "2.0.0-rc.17",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.17"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.17",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.17",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-e+p6p07MAh3j1cCU9kcxcm+NvltwX4ZVcYEJog2QvtnqbIEJB1p2yJnIe2afAIdDnvJNkhCKjtKg2zI4BFEuYw==",
        "shasum": "3466fd0bd90f773ec50f2c500c89eb31fe7290be",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.17.tgz",
        "fileCount": 38,
        "unpackedSize": 187863,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhE7N3CRA9TVsSAnZWagAAMPAP/RnuLDu/Fl5suDdbzmmZ\n01bvZlZ30EQ5suEhDK0RRxXn11Jt1RwUuTq6Vn2XlolO9tIABhiWVxU8tVni\nkOboN/j3J6UuExV51BMJukFqyp8+WCSK+/Dn+L5nxJgdkTgkOnJLpHprOGln\n+rg7sF1fQk/h7JqoDB9FVWs9BRswJ1MspvU0+qN2hn4N3NkDBlPBUrRd8/6R\nYDE8elRLwHVuor23Jh1YXDh0/MgPmx7uFWQegNa1nPwn5zB2pa0DNTZkw+Ha\ni42b6MD6GVgFj+9GpyPnxOCE+1YOVapKHq/9lW2kfQDl/lQ175At7Gmsv8k/\neHVb/quJOwxbPFcKRyhAtZMbjTUK6xiiEp6Pk/0I0/65oMfohnayoeV3TW7m\nfzbwWQ9WOP6HfvB9kqzvJw6g6qk3bflwMMdgWQyo+SBmBCMpccfdsj0JvsQY\nOpqF2CJFi/Hsbgl6r83xhG786ENK/3DqePCGgcMLeQF+1em5Fjw/UojwMOnW\n5ggUL26gQeLkA3ZOZJNVfDaCYnqTvj7hgeutcUuBCtqA2YsREgaZZXpAR49M\nm1aUpYF78WVK1ctESgfgWyZRb82OcWJiJPCJw/aXZ2EUNs9LcY1chTsR7sVg\n/BJYletaUdqekD2IPL5Cxc+KxLsGZBJkNep54Rwizt1o5Jfu/QCvp7R90OIa\nMxGJ\r\n=q0WX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD9y2YaE4KsJFW7oNaurwDSpKh6XOhOogafdDrvjUm8ewIhAI2+W0wO+AGbxnymZkrcsW0aZ0GmWEVOKVBdPPgrfHTv"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.17_1628681079325_0.4574157439340105"
      },
      "_hasShrinkwrap": false
    },
    "1.119.0": {
      "name": "@aws-cdk/assert",
      "version": "1.119.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.119.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.119.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.119.0",
        "@aws-cdk/assert-internal": "1.119.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.119.0",
        "@aws-cdk/core": "1.119.0",
        "@aws-cdk/cx-api": "1.119.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.119.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.119.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-emhl8Ee9cyr6PR4JVqoh18Cevf56hvkB9O6IRNO8sHA2wZSAaXqzLAXUjuOiI3WDNBONW/z3LSkeD6LZKsPkug==",
        "shasum": "94b8359206c9d71669f117510c1933a6b504e790",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.119.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhHC3ACRA9TVsSAnZWagAASrAP/1uxPbNDO0KaIMDXvjcS\nUjqw8mj22ScGXDzmBKGJpB0xngbIOyM7NjrKPfDwDmEesrxjl3bEKzybWMzH\nVzjTouydmxEy6VXcWf9s3CeMhQHup4CWcyEXZ6CKWWRiLgWOA1ejL4qazDf2\nxBZBPc+33Nl3y/hPmXnG3wdBWI1dy/IBnxiQRGAaD5tPPjI1c/uiCzaOfM13\nJqp+gjXuUcOtLr0A53LckiKmv5e5tjyBlr4tOpBQGj9KXjjnZOuimA9E/dO0\nSr6QKC4RMUhNrtsGcgSqPYU8phDpddCDEcQXAZqgG7SwjCK60FMKZcx+1MEf\n8FhKotSo3nE8mxn4MHsvW1jtDvL5ENb3nTeF3Mdpl8MRSnPiPbjTQJcWW2JO\n5vB4t2aCI5+9F4+8DsU65Z35tgqjf0UoQjXvQRLVp8ND7ve6eLC3AI71C5A0\nd36ld0tlDWoXY93nTS+ZWo/l4BnrNImzkiwC0oIJA+CGG9UPGWI/Mgal+ZG3\n0wGfhynbjRkGTXG7DeCGXdWaqGaH5VpcGl7MkSniAMj1+MrGzioYRx8z01Vp\n4BnOfpFRwrptVvfwYLzaRIwss21B3DzLMRzBQL7CIvQcVcK0QetXHCLhYqTs\nr9zJmPCCkTIYcqOcnD74wYIs94yomrsvuGZso0Me8BfsdfXNI8g+WYh5VTiD\nG+9d\r\n=gZ26\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCj+Y4ovVRHSCqzF0zxpOy4sUVZm2BCdWZSwZzfjxaW7AIhAN/Xq+JBK1T7upY2nYpB70iJQaXEogFKXGL9P/6Wxzdk"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.119.0_1629236672453_0.8951510003399177"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.18": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.18",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.18",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.18",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.18",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.18",
        "@aws-cdk/assert-internal": "2.0.0-rc.18",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.18"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.18",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.18",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-vfxBa+XCmx4RkWSfDBYlmpeyZiL20fBtWUBZvEikBFs6EdtSVHfih0S/Nzf9ewcldTcRwit6b67QoohWK3p1Bw==",
        "shasum": "bd3a2dfc5df12295a3703b86578f08855b1ebccd",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.18.tgz",
        "fileCount": 38,
        "unpackedSize": 187562,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhHOuXCRA9TVsSAnZWagAA1fkP/j6Xur14qSryGeF+OF1F\nIW2dc+q4/XSdjZle3W4pIMA7mvtbpmOeyEij/yMl9a6VWiVNbxxZH9scBeaK\nwNxsqjr0yo+wCULTjCewvdnAweQymG7cHcxhvid67Q3YpMYk2vS93aFaQc8J\np8MDIdBB5oAFmNNN6wyRItLA46fJO178uQGWH5wvdHFjtWYqkCE5chhlLgIc\nJwHXuJU+IsuB+e0j/EEQ6aYbPh/+bMK593L/csFZxR6ZEFCWJoM/9vksaT/D\nJZy+Ba/5hJjqhMbM1l/YJQTimL8jUhNNmAH6p2YnQ97aZeocbVbgAnDtgLkS\nysxZPIFt+PvzZLbvKthHbkMkRtZvC8T/cOLWs7HwI8LoNa+7SCLSi0wHSO9F\n+Zg8DvSozcvNQeVXHP2kUZgBSBZyZ880Phm9eSpO9dFnR30JWUzeRhqY6cRy\njK8G1q0ZPS1BzuOMua5WTcUgE1QhR9vOvGXyD+3Zyi/R/ErNbxG49k8iE5XD\nxoP2fU3Mi8Bwod2fNXZBjFgA5JS1sHgzCcIy0HPBR2Cp33rgpFK6Z0iT2AfF\na/Jj1H+RnkX5dnEcRItl0fAWHX3GMv2ohT0tRiK5ozAGSCAqLIEufjy+fUVt\n6CHuVELIlVfLvvnLvzTLFJDrHfTPbjDwrJxRAWfEGbOmP79yCz8/LNnfEGI6\nkW7x\r\n=3kEf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGWIugnGuXePs7T3id9HRECJ+vbQzMAE/hJm1TdDlBDRAiBUtMUzhh1r9bcFwHvWLlGP+9Qpe4lsFjshi9IEMu/PQg=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.18_1629285271167_0.6763499660747749"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.19": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.19",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.19",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.19",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.19",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.19",
        "@aws-cdk/assert-internal": "2.0.0-rc.19",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.19"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.19",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.19",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-NiTQvrYeCGkUiTpt6aJcu0hWTZssA02SVeZTnUauyu6fwaJVFC0+9uUqB6qr4QwLErySpTJ8yehRVY9cUeY/6Q==",
        "shasum": "6c78399a691446537a13775e5e19e8c44c5f1f4a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.19.tgz",
        "fileCount": 38,
        "unpackedSize": 187562,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJiZMCRA9TVsSAnZWagAAdHUP/iUShdaEcq4UsURQNM9U\nmCRW5d9Q+nuqwdCCczGjtgAB58SPPq9EpX1A58XGChqjZE8ZYJjtEacUQQJq\nAUce+CSEl8LhSr3Fsue+GDAQw/xscyBDWbvfTXzlFIWWr+hJLKCRScOuzy3c\nSi5lXvC5jlrAZYCd67ElgGAUWLQ5Vv4sAdVqYLW0JCtdJ/5o98ndfqqnnyqL\nFOGXn5Fx2SKhCY6dAY9z0zHbRIvTne14um5wrE5yGRNGRQJu56JlPyoQZyDB\n81GUJWS6F+pNZr9zPK18Z0X+C15Rs8FXMWFpmJgZvDM+e1TJTnplK8lamtVb\n++ISaq6ydvBYTujtEu8l9ioPSQ+1jYHCMloqfdG5DG00qbdxaUlUX+52dXa5\n2bL792jqSDJObniCYQ9F0t3HadQNBAC0Oh47wwy46lrSc17HP/DjDotWaPWO\nTahN+Hf1rheyPgMNtvwFbx87XRwUBNGgFib/yXzR0oilC2m9ttMsl5PInako\nnDmZfWa4efpg7cEeaheApR0q/idzYaJTHWOTs0v64oeTwHFVSzdai+yU2bpE\nvG7KuGkVa2yqIVACFIXU+n/UXefTEsGKYoBBzzPCL3SwHUzUjZdBX0n5D/AE\nsOY8HPmFXzHmYlyAoYc/0FThgX+yEt2J2gAbp7f0RIvDGFsxtYc4PT2RALaf\nO1lt\r\n=2mrc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC2xKt1BoWBMhmJBpYBlAEUnQEGl6fsK22+L6QpakBGRAIhAMZ3S62oVqAnoPUxS29cGRo1QdTbKUywZjTFcPqeUHaw"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.19_1629890124482_0.6388222202411669"
      },
      "_hasShrinkwrap": false
    },
    "1.120.0": {
      "name": "@aws-cdk/assert",
      "version": "1.120.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.120.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.120.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.120.0",
        "@aws-cdk/assert-internal": "1.120.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.120.0",
        "@aws-cdk/core": "1.120.0",
        "@aws-cdk/cx-api": "1.120.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.120.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.120.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-XGWLuYZ06DXZpueiORN/HQvno5FDZXIT9PeB18xfbIv5v6BxVrbDDekvwKZmRwOqxf/cdhqdw68bw0dsmmIa0A==",
        "shasum": "2de883d6719a5422c0c06c24037813c93e391864",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.120.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJ5uiCRA9TVsSAnZWagAAemYP/0vXPFlawkD/29QTmwX8\nYURBZyauiFPPQAheygzeVAvQIybmLOSI+lTg0RSkA8l6gzvLwU5AMFC/GW09\nvZxxSsAFSeO3UD3fKa0G6yz1BYYTSeTqL0ctGGpIEkkfqaJPFPjRhpJBVACN\n0NcPYCdXpxF3gVmenVEs88sjQvjxuPhKlv+k0U5lq6jPY5UOP66PWCv4O8VQ\nVoaQMXRw6EaCGNWVvQ/k8KyKUOJSmmZltMEPCmlMbjzJhRp4y4Atl5Ka/CB8\nbcYUM8py9qImULryeWiJNa2WoR40kqtTc8JB9GD3J3qZlSYgpdQKmTmrnQJG\nilzywNzjX5eRsnWsDEzIs+DBvBAETU3R7Q1FI0ido9UTNvLNKKv4P9nML0LK\nPvcgRMW4CoIXoO2giD+lgubszEetN7EKvsJaMFlBXHlV2uGwIAx85EhP2nBu\nVNX/fMZP7E9u7Boo/eZBIOprryxQZz2+DBOQzD5r9o5/9/XZ9XGF6ue6L/oV\n593g6jAjt7/xwIg5MsV5QPfJE0u5QUpaS1i4ksTBF4HgJ+eqXKgbm/Kze8bl\njfdRihgw1/ViTEOz3z63JuuJUAj1ELARJ8QU6hyTeiqQDA3jEpRFgzXD+oz6\n62x+24ir7ExUGK5dPnNpejandfKKLJc+I5tPmvPiJf8O+90QM/XEJvkR3cG0\nuSOj\r\n=tayP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGTBSMuzlv6ylQOGnD6gRqC0u3CCBcWspY3WidsCt/YVAiB8MmusEJl/w/YXeT2LXycAiNHSknnRnXzZReC66OBN0g=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.120.0_1629985697974_0.14721311697331974"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.20": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.20",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.20",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.20",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.20",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.20",
        "@aws-cdk/assert-internal": "2.0.0-rc.20",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.20"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.20",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.20",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-02Hgl25+cj8wAkfN1jAzQquiFCeojdshC5PZQpXJS1b7VZtyLMmcbNQkySdNT04TYUAcFYB+DTPcULImLpVpuw==",
        "shasum": "78eebbbfd65f88f4e5a66db9126b188c0ca0806e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.20.tgz",
        "fileCount": 38,
        "unpackedSize": 187562,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhL2FDCRA9TVsSAnZWagAAtZ8QAKJiKOHGM6Vi5UK2utS1\nc8RIoMoVX+Xqlp8CFNlT4JbbgCLUlWWGny0dvkKMuj+PBs8HqvD7SBtio6sl\nG/6kN9KhEkJbAM3PT7qrW6L8fxr6F23gMkkMfZV55dThEW4fwx/Af/pqUzVe\nob8u+pet4k9iKYQ91+WpeKREfZeXw0xXO1WIsH92at1T6yXeSwnfJ9fZVZ9e\n3pUAv0ZkT0Nze0hSmzmSg2ISDO+YFc0BM+oX9GLId45bsGE0ZrP4i/0fTZOE\nJpjJ8QcerZAdy35vmHE56spOvpCfKSTgiQW3ldsNCYLhgbTpSx7LjDrAiEzX\nYpwMkoqenCGOXuZruIDw3bSJHB6rz5UZkC3GZDuywUBigj5AaINzUnwdHSuy\nXfgJirVq8sS72OHSiFW3jXioU78xG69uFrPRAVDlinlpRMgcvfozP1RmS0+Q\nu90LXHDPi73OTbFjVk3UOVEegfZ+VjsaJSobWb+REAbwxXQ51p/FSZFlwUQk\ncNm6SOhXaMjfjTIFlsAFHh08pDN197tVKLhXM507sTIn66ZUddsu7+uhLWx9\nyJ/M6VKeB8htjQ9SGGMEu+Ha7ll/CAiHcqEADwAPOcC7fmRBNKc6y1hV8OEs\n56LMc5wSY5LvhvniZNVea9xLVA1GnThrBqK/kMQssHktoZ19BQU9kIUa8K7W\neQPI\r\n=g8gW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICDuJURxB1gcbj/V0cmikJk03IYTNbqTVLlmSIVfBgH+AiEAyvsBfh12WTg1GjQmg+WnMzC/LlPD1II67Q9E+eVkD4c="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.20_1630495043768_0.6581970010692209"
      },
      "_hasShrinkwrap": false
    },
    "1.121.0": {
      "name": "@aws-cdk/assert",
      "version": "1.121.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.121.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.121.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.121.0",
        "@aws-cdk/assert-internal": "1.121.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.121.0",
        "@aws-cdk/core": "1.121.0",
        "@aws-cdk/cx-api": "1.121.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.121.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.121.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-uAi5eF1Bxhwb9s+KSVnyeGEnS2vXVRYke/MAZ5VAudK8mDnwMeeA+PateYX9ahw/X1pcIAPGywyVuZhhYgkbXQ==",
        "shasum": "496c5e0f5ec951775f76acf3e6e3f4d2bd4a30fb",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.121.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhL3dwCRA9TVsSAnZWagAAFWoP/23f6jKr9gO9uE+soyZ2\nyapxew/HjxrdrS/TV/r0jXzkkfJLsqgXE0UqhX5GdZ7GAh/hN6blZgQ8hwBa\nQquohSBInspSDSOI/+E9ShcCEEr6nJeOn2Nej6PD5qrBaUsUrFA4sl/EOgvV\nk+17PNIqzpoEudHzyyciBs0bnnHbskh8TlN42pmM/J0C+Wr3zNL83o2Ht6H5\nUlVyKQKSP7kbZCGLr1BFEUfHhpMbKO+Mt6O2+5lQDj+RtyyjTj9cEnEYROXv\ng8WL5Cfo/UXGjzLW/MGnZMkOBmDL3ye8wmnqAPWnI8jDIZX+NKrMBZ4zNALj\n5fa2xoUviTu36plNUwjIEhQEloPUY+pVDq6+N3YQU6sQY9YK7/2inrZmRe3E\nKe1CPY8d7gRrSIa7HvpR09J2WXnrYc5X0lYnWu7zlpNY59qF6SZ3RaiLXJ8N\njNKCXkEWt45fdO67u9uNy4ToZqy2N/CwsYVBMBgmRW6tNPwq0AeM03Duk4c6\nsUIfyUej4rHcHbKMXgzchig6C0jtJhbrhyhm35aS5mBU/TG3IF6zSgCCtuCn\ni5hLDpwwUiztOE1lUcDKrMAXbtIOaYYEr/aFaV6PNRXwzv8GnYSZ9NP9QMCX\nUwlD+f5kfgrumhdFsLvIHG0o5kKtuPeXzEJlQseUc2Plyct36mvK0ubqr6qL\niEYa\r\n=Ow6q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAZaX1m3B9LuUOWIIwMnBkgT8dty23mIltZK375uW2/iAiEAvk8oTgIOAT2sio24CT6lIRl3bTLXh/ccFwZ6OMn7bS4="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.121.0_1630500720470_0.35994306924052366"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.21": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.21",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.21",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.21",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.21",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.21",
        "@aws-cdk/assert-internal": "2.0.0-rc.21",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.21"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.21",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.21",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-T3v+SUTokq9aA+D+eNmjMsIBBJFAM5l1DBE0GNSCSfmkk4Q15SuLYPW9PALC43UYihdtWbb1Z9GEK1pQLvM5FQ==",
        "shasum": "611add4c4c435abd9249c29b3b0b38a93659d515",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.21.tgz",
        "fileCount": 38,
        "unpackedSize": 187562,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhOJxUCRA9TVsSAnZWagAAHvQP/0mEX5iCtH+vX0+foGaX\novoeT8JNK0SKGLhJO+GH6hy747HpfEyeRihZguK3ZqpolX7k/zqQixFeuFoB\n2GOfh2L0pWoIilUeZk25UDWH0Nzi5fQS67IsUwO4VN8Q69CZW7S8jgw4uFpK\nrk+rHOXjOvu5EEse0OMKciCWdItJrgvucP8rdK9wMcRb4b3+DzinOqYVcjEG\nmYrL2j86B32ULl+W0KMKhYXQSnGhga8bKQydxpMvmmeXa0NHnLDNrKzJBqSm\nv/iBnEluXmLPjwUl1e8fdbWgmnZ0jcbL75x1+glLLupLwEfn7rYGMS0Hmewm\nHKIT4yg1nd7DWshx+k3RAYIH5Qr77AIZtnHHhsN142n7Q/wnanQ/A2I5PI2v\nqQkYhQ0fGjsWTmLqFRv8kDLknb4xgv8ZI03/G92jua/mWpqFPzKbqdFAXBe4\nHUexbMuMfkYDIEVrKod0gwltr5D3Nm164SVrVERlRtsx7vpXcGL++aAzt2LU\nMh2xlNXwzupvI2v+3JKiDqsI2aikCuajMhsDnt0IaPhCqojGE1GI/8XHJ2Xc\nnQUdm3Q8hDpI/IkP6kEwu15P9lwKGC5c4viXgVid0++/SPPfuy1VO8Bvv/QL\nFg+aHsJxunBHcr4W7gyGbVCe0NVgnAv3i94PB2wGVVLZ2kDTHu7lRbCoqJwP\nIAWp\r\n=mzVz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD9dEa2qIa8S3Yhgk1LaWW8YTsNS4CMwxqKMsyo19xjoQIgBWdDkDuNpGBHuqbl/jR+9taGWJk1qEsMyZXui0jlNSI="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.21_1631099988052_0.6333211219474972"
      },
      "_hasShrinkwrap": false
    },
    "1.122.0": {
      "name": "@aws-cdk/assert",
      "version": "1.122.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.122.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.122.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.122.0",
        "@aws-cdk/assert-internal": "1.122.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.122.0",
        "@aws-cdk/core": "1.122.0",
        "@aws-cdk/cx-api": "1.122.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.122.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.122.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-hgmN7Owmsk9F7rGsvD4LjhY7YukgMpKWNvbXHxsTSluoP2LF7MRwTcYu2bf/DAkYuY7tK1X8k0G4jeEZAie4ZQ==",
        "shasum": "30a78c0784aff0ec57239a862c8d266f9f9ffd10",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.122.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhOTi7CRA9TVsSAnZWagAAupEP/itNQx8qFwWgbXFcOt7u\nKDLU/PnKkf29KZ0OISnUcX7vmIhG7ZMHcrCseiqKB0979WVWRTu0Jb4ZN5tN\n+HpqSSX5FmZP5mglPqUHl1P4qOCnov/JdrhgenMJNdZycRIUO1+bqpqm0PpJ\nsPMLo8+OHanpAXL/1rOs0HojD4ul6yGz/XWPaLlGBe1WhEpHTz7gHX+v9ov2\n1fKQIBANX9XQj3zBavyFomA/WCUDi5YcN/A8PuaSOV9UJqXba+WWVmISLNWP\nwMbq3A4+VSGGz6iC2NwQ0fv74qClOrBiIGXp5tqYkfa3WX6CeRLsuah3PcSQ\nClsJOtlT5tlw0oSWVoOO3NDQLRwIrk5yHTbC8RQIkQcod+091mFpFl6kHGWb\nUIsWmzAmL4YDLcY0u5aZKgrzetrQ2M/KtG0YZMHyzGoBP9lSXkHv5EFXUqOJ\nhGgxnAXMsQr2UAwV7VdUjoAWwxRE1w4aIVsuyB1QgKm9ir52kpEhR4LfadfK\no+os0Ui5PBIoY2tljFnBQB6bmisf9JWLKOLeGcocfKMy1vJuBAiUhmAAdExy\nyhqmE3IsXClzQWFJQ5sKCMSnLafuoByok6d88yvkdRaEFC41Pr+lR2Hv/iQ4\nojWGgu/1PFDLbrtmDvJXOnGJT1GFZe/wZPoteuD07hzHtAwBdkYt55YYjljY\nZw7j\r\n=GA9r\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIATlTVgSku6XqVKsPxoc6UzKJsIz7LXmcDSg85sRV9EFAiEA+OeZNgPU7lpzkgYL016B/JW90uw3vWHg4WruNhQ3Mic="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.122.0_1631140026942_0.7574591816984966"
      },
      "_hasShrinkwrap": false
    },
    "1.123.0": {
      "name": "@aws-cdk/assert",
      "version": "1.123.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.123.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.123.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.123.0",
        "@aws-cdk/assert-internal": "1.123.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.123.0",
        "@aws-cdk/core": "1.123.0",
        "@aws-cdk/cx-api": "1.123.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.123.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.123.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-lisfqoGTPMz6iLRv1WcZkrstPO51dgp9QFffClOh9oYzZ916XDP5arQ7AFA9PkGTZY88dxrGKJFAI8kw9em4tA==",
        "shasum": "da6b41334ff2616600e17872ce88dc272ca41252",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.123.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhQ/teCRA9TVsSAnZWagAAy3YP/0QO/hV47lRitu5bf8Pm\ncC5DiZQcyUHp/A4/8ylmO0xqcWwn5OIiAyd+Ux0YduGput06320+pAhxWbc2\ntYcG+V8AbHU7aGWZFdZKfqMPMPsrfkzIcvd+y8I7zBVk2hqV0TgZPRrJVFAT\ngYtd4g8EedW93EQqh564E6H/mzLl7cHDWiSB7/gBUzy14a502hjxz0S7+wo6\nNNs2Jcc0drM26ZA0CXAX4X0kcoPH6nrCDuGgCfYIFAaSBoaCPm6C2iStWBN8\nymhgJJd4k+Vb9X48khYMlFkZfl+v92DbTYgJAu847Oh1sAt5ZeB0Jf+QPJh/\nhX4EKonKvdlcD9mNalTMQPhCFqyW9STpaQcb94p6lZjMQGMTN7Vd2aD0e2gS\nYwkkaNO7qx9E8MfM+hujh4nESSuKHBnkHYg7zvoSizGr66Prwaslbd1pihsy\nz8LwYb9nLW196HCI9/c6Dhu1NGuq4bHhYP4weaxj9bVk9pWI+PsZxeVJnsDw\nTO16a5IU1FjdWxVluBblTX6U2chJ4+jlYHkL1N77x7box+xpQ0mCKbKQ/zkt\nv3eeKNR7uxrJ92MbFQpwjxgABOn4uqFEVKg3n1jqAzcV/wLRnEyHkq8qxwgO\nkN8wJcujWjxs/MDCzQrGAzscC5c+KosAAEUUvqjvCSP0nzAy4hG54mkb6p6w\n9ypW\r\n=7btn\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDZr5Q0Y524qNgwDHBp+3MPGMJXtIYh+qduCowWWfgGmAiA7kQQJSYQyTTw0RoONTXyQhOmyLgl08oyZXfZVDwHK0g=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.123.0_1631845214442_0.06601821340800385"
      },
      "_hasShrinkwrap": false
    },
    "1.124.0": {
      "name": "@aws-cdk/assert",
      "version": "1.124.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.124.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.124.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.124.0",
        "@aws-cdk/assert-internal": "1.124.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.124.0",
        "@aws-cdk/core": "1.124.0",
        "@aws-cdk/cx-api": "1.124.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.124.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.124.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-LYVBrurg9Z2yHLfW62iWVMkVNlLIDiqUl/o7yo7vwlZFbdF5X5YKbui28SbxV2ikd6Crbwyb2KF45jx/Dzj2ZA==",
        "shasum": "1cc724a45666e29b58a269cab4176d41bedb2fd0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.124.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDuP40r+xFSApBCbEbGuErpxVh6bn9p+YCO4P/ju+q2owIhAK7BgWaR8PbVrqkkahfv63H8QLXQA325tg1/7IdZFT3c"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.124.0_1632260856313_0.4523010327860362"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.22": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.22",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.22",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.22",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.22",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.22",
        "@aws-cdk/assert-internal": "2.0.0-rc.22",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.22"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.22",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.22",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-saq3N92ebrLieldG2RUjfm76CLt2l3Nn6TIgfRDrFhvBMF8PURu6TTcujiP/XfWEoKFbu+NYluo3vzXGQHCb/w==",
        "shasum": "8fc4ea9c714bbab0746b0258b5e81dfa14d0f9a3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.22.tgz",
        "fileCount": 38,
        "unpackedSize": 187562,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFO/TmCn++YBI/g3EDAS4WHq93IYF9dFlZ2K6c7bkoknAiB75XtpkewMZgwnywXANektKVwtyQRsCyiUnpalMuSGdQ=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.22_1632347271040_0.7702176601952557"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.23": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.23",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "2.0.0-rc.23",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "2.0.0-rc.23",
        "constructs": "^10.0.0",
        "aws-cdk-lib": "2.0.0-rc.23",
        "jest": "26.6.3",
        "pkglint": "2.0.0-rc.23",
        "@aws-cdk/assert-internal": "2.0.0-rc.23",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.23"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.23",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.23",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-qJ39auFk1Hv9+D8MqCjVBS9YdGTGSaAeuUDYiqgry/PIuurc19pq8sK/UqN/qWPqfB1xIK8CVxDF0EugBrGtBg==",
        "shasum": "7d0707f637819b7fb6cd8ca31adbcee7e138fafd",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.23.tgz",
        "fileCount": 38,
        "unpackedSize": 187562,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCUiX7OEJBT/0tXmt6EPiVspvba2Zxs/1eyIH4kWihSTwIgUNJ7CK7LHTnlVUDH00BWe5XEuEgkh22j4LAcbG0Br2c="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.23_1632356366348_0.8740212375890459"
      },
      "_hasShrinkwrap": false
    },
    "1.125.0": {
      "name": "@aws-cdk/assert",
      "version": "1.125.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "jest": true,
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "aws-cdk-migration": "1.125.0",
        "@types/jest": "^26.0.24",
        "cdk-build-tools": "1.125.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "pkglint": "1.125.0",
        "@aws-cdk/assert-internal": "1.125.0",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.125.0",
        "@aws-cdk/core": "1.125.0",
        "@aws-cdk/cx-api": "1.125.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.125.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.125.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-VWjWeHRu3O8zI70lCqvbQEXos6Rlc4J4I6sjXf0HRl/eY56V+hMoiMm+il0JQD9nSTdoQ4aPrlFFRdv377dtsw==",
        "shasum": "915467dce7adc05711722994333577e4b200eeae",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.125.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICBvoPZJa4Ma/LokE7/kfDCqn168vekfgzNRa95wflPvAiAN4idAREOka4ByiCV0IYndPnrStnBNYZei3GUlpDnwcA=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.125.0_1632953602221_0.5822342371694698"
      },
      "_hasShrinkwrap": false
    },
    "1.126.0": {
      "name": "@aws-cdk/assert",
      "version": "1.126.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.126.0",
        "@aws-cdk/cdk-build-tools": "1.126.0",
        "@aws-cdk/pkglint": "1.126.0",
        "@types/jest": "^26.0.24",
        "aws-cdk-migration": "1.126.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.126.0",
        "@aws-cdk/core": "1.126.0",
        "@aws-cdk/cx-api": "1.126.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.126.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.126.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-eIRlBcZ9k1Cc0IVfielTtP4w9HbL6X4cXPqygZKBgCAWPD1qs7PeyBwVDSbVPCT+nNHLAhthieQjk1kSRdeUpw==",
        "shasum": "39f06ec3d4bda9d1589a798885f18cca9568ad60",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.126.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAnpWTQp7QdlIdj3m+NwD8nYCoyGppxkbnevmIyhGLkDAiEA/LOL6D+ICZ7PWeqPI5DcLjvk/QA5LE2Af3KaYIuD5oU="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.126.0_1633447099345_0.5135113100198219"
      },
      "_hasShrinkwrap": false
    },
    "1.127.0": {
      "name": "@aws-cdk/assert",
      "version": "1.127.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.127.0",
        "@aws-cdk/cdk-build-tools": "1.127.0",
        "@aws-cdk/pkglint": "1.127.0",
        "@types/jest": "^26.0.24",
        "aws-cdk-migration": "1.127.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.127.0",
        "@aws-cdk/core": "1.127.0",
        "@aws-cdk/cx-api": "1.127.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.127.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.127.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-sZDURrPbLaS+Fadul1MX5Xy/l2K5QvbS7poomnwD1Ejs+1chgksVWBqRehjjAmDTIy1zNb4K+8qm9oFtdw3VmQ==",
        "shasum": "7a3756def9ed8b4d298079bdb4e3be05aa2524c1",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.127.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAbNIlTkOUzCvyubE5/Wka/wKeUoJYxd92E2qbSkaVxRAiB3yHUoap7UudCY0UeL7l5IhdZGJ8zlv14C5Jbn7Iqifg=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.127.0_1633724804768_0.9817993456600855"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.24": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.24",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.24",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.24",
        "@aws-cdk/pkglint": "2.0.0-rc.24",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.24",
        "aws-cdk-migration": "2.0.0-rc.24",
        "constructs": "^10.0.0",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.24"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.24",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.24",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-EyRV06IxE/FLTMEIUZnJ5vHROJ/zuiTyiupY1gaCKvY4bCQYcsG3LNWDxIhKkQiM6MxCae5hce59Iw5QWwpptA==",
        "shasum": "1e66c451077ca8f4ad2b17a33dfecb2625c064e3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.24.tgz",
        "fileCount": 38,
        "unpackedSize": 187563,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDMNar+fmN40cD0C+uDQKVpwK7ySstfbZkQTBPdPVomYQIgGL7ASHDMpwJDlP+koRA1HJyYX32HXZoaFZPdNRjoIHo="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.24_1634163784872_0.5361380219594813"
      },
      "_hasShrinkwrap": false
    },
    "1.128.0": {
      "name": "@aws-cdk/assert",
      "version": "1.128.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.128.0",
        "@aws-cdk/cdk-build-tools": "1.128.0",
        "@aws-cdk/pkglint": "1.128.0",
        "@types/jest": "^26.0.24",
        "aws-cdk-migration": "1.128.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.128.0",
        "@aws-cdk/core": "1.128.0",
        "@aws-cdk/cx-api": "1.128.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.128.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.128.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-a+ZmotJYhEZ3ry4YgY9IzVhQrmsW4od9EZvA/E2C9hsx1smuz3lWXj9Gs6g0I4JicxmbCgiZpuCwU/Udo1GhQA==",
        "shasum": "aff0bae1971b42dab9e2a73b9ed0714f42e79bf6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.128.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH8gT61eD6WE93FdhqKtqtKve+TBLu/oYeXvf1Z9EAE7AiEAs+MqP4Olj7IZmy+qRLY+/oMKac5cmFDjmv0SJqhCtsA="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.128.0_1634196365719_0.06972376789270984"
      },
      "_hasShrinkwrap": false
    },
    "1.129.0": {
      "name": "@aws-cdk/assert",
      "version": "1.129.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.129.0",
        "@aws-cdk/cdk-build-tools": "1.129.0",
        "@aws-cdk/pkglint": "1.129.0",
        "@types/jest": "^26.0.24",
        "aws-cdk-migration": "1.129.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.129.0",
        "@aws-cdk/core": "1.129.0",
        "@aws-cdk/cx-api": "1.129.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.129.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.129.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-d3IPScg+MnXfiDHF44mkWj/hWt0m4WUbcQrUKi5SBFKcnKkrZk2QiLuowOtwre/zhcAX0bCQYfuZI+yS0yVNHQ==",
        "shasum": "1e18521f8201cc8e765d3a2d6dac52a452477c17",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.129.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184079,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDaVZn4FvlB6/Q0jAFfYPKUDf1hh5Mqas7GzUYcQM5RTQIgEj471nmJGPAX/ptDQ+nVvIjmjxVqVBUrR+mI96km+6A="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.129.0_1634852581445_0.6744135680891252"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.25": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.25",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.25",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.25",
        "@aws-cdk/pkglint": "2.0.0-rc.25",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.25",
        "aws-cdk-migration": "2.0.0-rc.25",
        "constructs": "^10.0.0",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.25"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.25",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.25",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-HOW/9rHfoK3RmO2C1iTrEzPEkjVuuepM687T7Ul9gYZ8BmWqeuaXrF7T+FLVLSXeT/0B64R/iwOg6QlsGxvCxg==",
        "shasum": "2d244a2dcc8d0b295526ba565d21232e43a8bfc6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.25.tgz",
        "fileCount": 38,
        "unpackedSize": 187547,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC3FvDaktZzlH9CHs8EGIulsXcxisYqCUtnNFONlbTk+gIhAP5/Ttukf34xdI0GnGTg1XoaTsuWEWkT32FCVze0vhsr"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.25_1634910483686_0.7079304327406863"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.26": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.26",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.26",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.26",
        "@aws-cdk/pkglint": "2.0.0-rc.26",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.26",
        "aws-cdk-migration": "2.0.0-rc.26",
        "constructs": "^10.0.0",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.26"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.26",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.26",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-IGnh2Zb0JPzebvS0q0mL8XGWrkcOi/Vas/Cj9JQ4LiebqQnAK9zSOvoiGzWA9wLkjdbhWqCcoRS0aqRJsqi1Tg==",
        "shasum": "c02a76c2cb9a3976eb2cc1105d08bb8714a72f2e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.26.tgz",
        "fileCount": 38,
        "unpackedSize": 187547,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCY5GCOckTT3QH02z/zeYZt8ie6J29LlI24oBv1apu8BgIgSPGxy08AyPHeEAdOahNTwuabgVycQ0VrMsZD2TqNHvE="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.26_1635246988700_0.4294135595737374"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.27": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.27",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.27",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.27",
        "@aws-cdk/pkglint": "2.0.0-rc.27",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.27",
        "aws-cdk-migration": "2.0.0-rc.27",
        "constructs": "^10.0.0",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.27"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.27",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.27",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Yw8wODVrAvZQ6uqfqkdEqFs69TnjBR7gB+hbhUpFXE6SSsfW4x0S6QZs/qxqbcGc5LdHkU0Q8v2PBul5fkviww==",
        "shasum": "78e87fccfc9e5fcff8a2bdd2eaee5fcb93a8d92a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.27.tgz",
        "fileCount": 38,
        "unpackedSize": 187547,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCgfxIDy82xRnZsCclmcDLV3Ix9lbsbPn3kmhG1e5s4ggIgT/ILJXK5GhOZM1Cr6puM2rIcc+iqK/brbBx7P7tfodE="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.27_1635335793634_0.8835275166907843"
      },
      "_hasShrinkwrap": false
    },
    "1.130.0": {
      "name": "@aws-cdk/assert",
      "version": "1.130.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.130.0",
        "@aws-cdk/cdk-build-tools": "1.130.0",
        "@aws-cdk/pkglint": "1.130.0",
        "@types/jest": "^26.0.24",
        "aws-cdk-migration": "1.130.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.130.0",
        "@aws-cdk/core": "1.130.0",
        "@aws-cdk/cx-api": "1.130.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.130.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.130.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-vqPjQ20UXuNfBj/UVdXEpCsS4AaeFR/T7a+moB3y1nUzNjDxBWHtN8n9wCZZiATHYyMUvMVshytYRwLwg+y2RA==",
        "shasum": "d00d76efd50d9b623aab8982a3b4f25d428f479e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.130.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184198,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCGlsvpOSZerRUlcSE+Db3NSR+Jbo3cQGaEVoqEjBNmGgIgQj7cHJoiupTlItMJymV5TQGLvWuu/udJewv55xPJs+A="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.130.0_1635535919388_0.6579252708057233"
      },
      "_hasShrinkwrap": false
    },
    "1.131.0": {
      "name": "@aws-cdk/assert",
      "version": "1.131.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.131.0",
        "@aws-cdk/cdk-build-tools": "1.131.0",
        "@aws-cdk/pkglint": "1.131.0",
        "@types/jest": "^26.0.24",
        "aws-cdk-migration": "1.131.0",
        "constructs": "^3.3.69",
        "jest": "^26.6.3",
        "ts-jest": "^26.5.6"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.131.0",
        "@aws-cdk/core": "1.131.0",
        "@aws-cdk/cx-api": "1.131.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.131.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.131.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-wGEV9VAsLGrSoryD4Twv5Lxyt1n0cOVcXtW3+pq0Xd89k61ZXKK20/G0iZNbtpsw0n0lNAcXG5KmiJ/3IKAUow==",
        "shasum": "a10a81add5b2db320542f5bb6dd695ee00f2c1f1",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.131.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184198,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFAbNxTWRiG3OCqHjs2HulmqJpj5fgBcANeqY4UTGRBBAiAOrgqpksz8EWOsi4M2gWCRacyZUdqkAbA3gcofxQ6Qvg=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.131.0_1636290708595_0.06935120830787422"
      },
      "_hasShrinkwrap": false
    },
    "1.132.0": {
      "name": "@aws-cdk/assert",
      "version": "1.132.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.132.0",
        "@aws-cdk/cdk-build-tools": "1.132.0",
        "@aws-cdk/pkglint": "1.132.0",
        "@types/jest": "^27.0.2",
        "aws-cdk-migration": "1.132.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.132.0",
        "@aws-cdk/core": "1.132.0",
        "@aws-cdk/cx-api": "1.132.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.132.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.132.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-+3OIReLtZ2EMMBDju2sZHd6JI4pc7o3ZUxUdpSmOckm2vkXsoFbaitUnes8Qak8BY3CEHBHwdBjNBHS83cCRRQ==",
        "shasum": "9cdf0c178a6f960c092f9c13b65362c6f6338a4c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.132.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184197,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDffqMRStDPRc9Jy4e2fVAf2maUtdbDcPdRHN6lIOKalQIhAKNDsgt6rJwmsDDi2xD48HHcYSUX4KcWrv/7JTjJV1W9"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.132.0_1636466795169_0.6234108953503985"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.28": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.28",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.28",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.28",
        "@aws-cdk/pkglint": "2.0.0-rc.28",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.28",
        "aws-cdk-migration": "2.0.0-rc.28",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.28"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.28",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.28",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-+jdkvKOFb5NRGcY4HVKU/km7qPGv9npdSHYnTrwio5Z4uqekSIAiL9yZV1SFC0yf6qlQflH52vapuxqc8WPlCQ==",
        "shasum": "03dea35b60371bb6a0f19a3f047c8272ed4fcebf",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.28.tgz",
        "fileCount": 38,
        "unpackedSize": 187666,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDfp+b9sgnwhRGPzv0hclYUlbFM3/tGdBikPo3w3JVVuwIgXqGg7NKSxok1rIw4N7Vu8iyE249B1ai1NyWG5Wl64V0="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.28_1636483157677_0.9811771152732538"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.29": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.29",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.29",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.29",
        "@aws-cdk/pkglint": "2.0.0-rc.29",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.29",
        "aws-cdk-migration": "2.0.0-rc.29",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.29"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.29",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.29",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-wD9nkNbh/GZl3fHrfCpVC686bgOodIYDuiP2tnFdGm8QQCoUZYJYWL9ghB02ENHZKgrHm5+Rar4+xTcgYsEOKQ==",
        "shasum": "c3592918f833a2e1da591f188e3503bd49812058",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.29.tgz",
        "fileCount": 38,
        "unpackedSize": 187666,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHbZGW+jEstWQdA6seyS1DK2Ft6uS3TK1HOmlvjkyfP4AiAnWM89IL8FFTCxnj0d5TznwBlftMdeSiELhUm/W9VaiQ=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.29_1636544926511_0.4806867819836953"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.30": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.30",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.30",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.30",
        "@aws-cdk/pkglint": "2.0.0-rc.30",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.30",
        "aws-cdk-migration": "2.0.0-rc.30",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.30"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.30",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.30",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-mXIZ3S5aTlPPJRkN1m5gOcXi9PloyOYhP+sMv7Ef4X8oI+sUmsgbvQIhQNZyD6pG/oOFpFFiOHHhuN2LC71LSQ==",
        "shasum": "d1dfa2c57c7fa243ecdc3d9b74d777dd69ef12a3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.30.tgz",
        "fileCount": 38,
        "unpackedSize": 187666,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhlOxRCRA9TVsSAnZWagAAkL8P/A/2QkMeHJpxaeY/gGSL\nwO59j0Cfsbw0+RZ6Pvn5DoyoHVC4c1dfjiAhviHTkmbzNL7SxsGj/ezirb7e\nzD5bLWvIIrpmRJLqzolXOp1IgByCDXxqFlJ/7rBBmbJAVnhhE9MCjjB1o9+s\nOKy799CDklU/TALag7Bx4A5MDjIEsJbC4kNNzMBbO1RpMmb1P6/akffRLZsp\nTZjSyuup+tXmAM9bOCh7uo73+X1eTzQo1vpQO/4Zw0/htyoVt3cG2MsxSZ8Q\nCyMgILmTu7GOqAa8j+9i7vxWb2Kx6l6uQObRJD7WQC9ofbr5rh1NdyFblEVu\nlsjZR28T9t6t+c6yrZekQynHSwn6uTsme/ySFRikN3UEG549FBKiM+h9bx1U\nBHMgQZCrPFDZRsKNSpmTsJwcBaKFZBcIcbf89T3KltLzLFx8Zbmif8/2SjVT\nYByDSoErasrmG1v4RpUVH3IeBnrTNSz7mBUdDE+832S8vqUMol2vDezXM1aB\nC2M7V4UqFkdiskEm3cP6LSlj/ya3xTOuDQFPks7MxLqFrIAlBxJ9ry9BoADo\nCoePDq0P389RMdyUNFQ8B4kMzBnIIx9V7yEeynxpkbCVMX+F59taFNQRgERD\nKKF6uHDuwe2JopLWwV2yuFytuYQhSOMJdfi28fikOEsPoHicdjX++5+S48ds\n/VTk\r\n=aQ/S\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICRI9A+tJ89ArWo6vi1AnsY8EKwrBHq/hX6M6/fgk0YsAiB+FEi1tcCTRZQMD3j6c/hcvQ/QBJchyQdLqp6fdDdEZg=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.30_1637149777534_0.22928785582981837"
      },
      "_hasShrinkwrap": false
    },
    "1.133.0": {
      "name": "@aws-cdk/assert",
      "version": "1.133.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.133.0",
        "@aws-cdk/cdk-build-tools": "1.133.0",
        "@aws-cdk/pkglint": "1.133.0",
        "@types/jest": "^27.0.2",
        "aws-cdk-migration": "1.133.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.133.0",
        "@aws-cdk/core": "1.133.0",
        "@aws-cdk/cx-api": "1.133.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.133.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.133.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-G0AYwv1duFG1zQIxWuoykEPk+jPdKnHZnXdpT40D+OJdE+BkTTySftbqV9sWd+BnyMepkUbDs1OlYg7uqICD1g==",
        "shasum": "68cd707449931772a13fdbd10c02cbe688d00064",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.133.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184197,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhmC5BCRA9TVsSAnZWagAA+nEQAJ5r9jibzihUH3G59jPS\ncDXq49O9gVvA9mk2KXGWyX/w2ruuRCvey/vsI5QmSIAFwDQe22+SZGgMDNc7\nvjnwJAAaA8N4hsVzNizyxYVgQm+yQtW2KoydX5MmVyqKTriynKR9CBFBaZZz\nXu1i9Hj/yChGEfnzIDfhVfGzMPEuhWqlhVubxGcDCcM0kx5uwHybg3UFxGsq\nytiRfkZDkSyX476ScTe1XvcG5nXVEEA2ZxryelwLsBV3A85nEOexlqnyhQuQ\nUBYeLuOpyRrPcKlUCnnFDQCib3te2fgsivNytOC1JoHkiPRFfRlISKPdW4hW\nk89uDCLGm26Ta1twqugl0u58hJ+DEdAJ60Xa9alrgfDNm+xKUj9fIOwp1sYe\nC8PuEH8I0QoEprOwABjpxH+hVS+9WpOik74eW7aOzg89umqTns8wJWsW3MT7\n5mgBhk08hTEl1Mx1t4wmfpV67j03cWs1ZlXmgpG1Q33oPgiQt7KYgxhW470P\nDAFYRZhU8Rx0uOaW+VSqXOBbPnW1KOZdwXu5iqnrUFX02cK4lLQ+cwvUJwmK\nmtMX1NIMNz0PZ7DBessxliTk1NLyh4cOOzoE9jn/pHQXiaVXYqBEWLbwThT0\nGepvGCbvpNfy0iYjb1PJydrxXAn53FYoo4y6b5h1djR5muuJHV70rCx1RXnS\nzIin\r\n=U1z3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCCcEV/8y6zlPbpWCYmB5QbXWQErwW3AvMyiSvmVJr47AIhAOH0/v95/OhQ7dzQN636yR85KQ5L02MNsEuBqW0k83aF"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.133.0_1637363265270_0.42436164635706186"
      },
      "_hasShrinkwrap": false
    },
    "1.134.0": {
      "name": "@aws-cdk/assert",
      "version": "1.134.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.134.0",
        "@aws-cdk/cdk-build-tools": "1.134.0",
        "@aws-cdk/pkglint": "1.134.0",
        "@types/jest": "^27.0.2",
        "aws-cdk-migration": "1.134.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.134.0",
        "@aws-cdk/core": "1.134.0",
        "@aws-cdk/cx-api": "1.134.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.134.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.134.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-DSk4n5eTPYGwKKPdViKHq9DAGYZlzUIi1wbclvAw6b9W1ojvuSbVYiSORNHf9Phyt4fHb3mVX3D0hjxhSy4iDQ==",
        "shasum": "c105412a03cf0ebf7b1661d213ec9e15ba1de6e6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.134.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184197,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhnRRmCRA9TVsSAnZWagAAYR4P/3ZM6Q8EEMEibcar9/E9\nCan36mVKJsA3/9wAHcknwXGz604VbThdDyhUpjVX6nmkGJmyOLrCgsgRXoV3\nOf/Z9ky+gBeW8x1BVUBs6seDTBinUlDjNchFUcwVlkHMltP/cITgtewAeFC8\nhxrBm/o9D7zNEMzl8kZKmUzFsZcECzV1RglF4caMoHOVsjrs7L1/RBx4ydNw\nWp/tBFmPCsgFYMNr7/pmibxPI76GTTFaDs3GOErcM1416hhdfeU98ocqEcjh\nCHinWHpX15vU0upuqgBLOOoIl4fIZSr5czFDKBKJcU+I1l2YNrw+luLUZx5t\nUQLGorw8CMEtzWjEHn4nw/algeV/pUih2iGqSIkY3pQhBiF8mcLNwPip8IwR\nB85eTK+hJvhf3akh6pm/cFheqMLzTeypUFbIWnpkVWlTm/SWHvlR0wNyOIdz\nqbU2SE/92Wfd70hS7J8Atoo7LXrLhOt6foRH8WT8zWqk4VbkzjY2m1qVakLR\nG2cGiJS49wFmUXvx1FnD79I8svXvdCHOFL9vlGlW153uOmI0KgIPia1FXOV+\n1lgnpQiCPeDUNNG1zpk8meJ5yfZ8FAE38/YUCYfZcvHiNB9WnxcmNgTOAHTI\nyq8rIB8tzxTjH6QzYNwD/onZe1wTg52LXF/emBjdtahDlYgPwV1Jo+8cTp5F\nkT3R\r\n=FWjw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCsYaVjZgD5LydwyNWJFZe/XQGPh1GKyMYOIEEE4rPuFQIhAP9cNnKdC274c6sYzYpC5vt4D2AO4O5JnBpEgw6diAmF"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.134.0_1637684325822_0.15953834646951548"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.31": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.31",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.31",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.31",
        "@aws-cdk/pkglint": "2.0.0-rc.31",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.31",
        "aws-cdk-migration": "2.0.0-rc.31",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.31"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.31",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.31",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-X7qlxzljC1PMS6YfgNsXwqj3Z9YDFczmA9wjydfpvrC20WyX2ncMWnrb45t1PMqUhUTKP5HHTD5MyV2SjadqSg==",
        "shasum": "a19548309a2a3ed41368eca7436cf8bb20b7a982",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.31.tgz",
        "fileCount": 38,
        "unpackedSize": 187666,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhnVgYCRA9TVsSAnZWagAA4RMP/j+10SuDcvbnE4Ilp7HN\ndOUNu2elBsNl2njXBCs2eWs2X+GbrHHAo7RwkLES5Tuua+ujCnu/pjdkm24J\nySqrOgdOepcMuQnyXu6UgfQLruB2dP/pJSEa+oIpHfCgxVUwbeMATSfNdurH\n3XlC4SiFmPJk2/YlahJ73FXuvSwTjH0MH5P2dcKlDjFLWRIcELfaX6TBjvl0\nVfXQ5M0S1hPeJbcv+wh55skfZTQ6T0/FIiksGAi7Ei4Vjyd+fbN+NO3MRNs2\nW7fmxjtj0AiKQ20QCrMVx8J/Ik+7on3lTK0PBOABqARQzhaiQtnoC296hdX6\nbWPnIXKwIIrhtkqvZOpvW0lbANCdhdXWpM9Y1JdM5WOOOtCjFnflyw3Xlgc9\nKqzhcHdLD6ZXUC8Dw9eugGlNqfOs5hOpdXOBqAdUcPRi/5lJnB1TTcT1c/bL\nQsZmVvbdY08Fn30YnflRBOKS0EjXoQq1fbS8Ay0ml6Io8Wy4f72dn0OO74vz\nz/b/JEDyApTg+eJtULQiAFMnkVIna4Ab9TE9Y5KghzH6D25PoMRebKzsVnms\nazyUzGAGW9EBIHPYomJ2eC/cRkY7LS6WXd8VhNHjSlNEx7hCKlyA0qSDVlCN\nBnMWxgWJJIlkk8frr6bU9DUbb8QmPj8I3wsRknBVPowrUhP9c8E14jz1Gf3+\nGx84\r\n=jErV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGgrbdsIMMUTD5l/F8L27jvzIqmSLtZdiMEW0/M4lmeQAiEAzum6ZyrRq0m3T7dPM2ch6QeHJJyjWPom2jzhVUhbrxA="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.31_1637701656795_0.15167863090361045"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.32": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.32",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.32",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.32",
        "@aws-cdk/pkglint": "2.0.0-rc.32",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.32",
        "aws-cdk-migration": "2.0.0-rc.32",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.32"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.32",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.32",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-ZGu0HErnBMN+veb9tlGbClAB6koCj9+cYGg0DOxA9GL4cUZMN9DxUcNnR8BrjHEdRFZLJZqCSCoTnPxqYYK00Q==",
        "shasum": "3e402b65773a91aab8f5ef85435a2edabb6f3e71",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.32.tgz",
        "fileCount": 38,
        "unpackedSize": 187666,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhoAXeCRA9TVsSAnZWagAAvIAP/R3chUOl1KEtCsu3B9PL\nHzX4yh2DmJxbjKJl/9OoqlTq9hwElPQcqWYanSyqHQv9mGArzwr3O0jJm1t5\n/rZpkBnwvAM/TpiHrPjjgsmdsp+6uhKoZctEmlJjn3F8UtPXs9iSt+Yn35mg\nE/8tRcgUhOaJQyoLnGbOEg/zomVPyPGEcp3sXoNAF+n/G1Koz1joETdSQE9u\ntPYGk6ZHr0ATQOLdZN35knZ+WxBdfCzQcTF4BPzJHsqJrGxIFghq139Lw56B\nnLZefyC6qxdwa676Fg7w6uqYAMQsHyiNenFicSasZMzAV9jHIimT2QFI2N7Z\nT3nzoFqRC+m6heahoOyhclnYaZVUIy49ignPy7VXrJ7J9F8YsOfRmkZfApjj\ntc2C6OZ9y9C8tdbgWigFQwIthWo6kxeWC+U6NFWmFAWV/HvQWDP5ZCdS69SX\npqvU1EaiSZ8KD1v/YCoybvZYB5SHo+bDGqofcd4494QXDh4y5TB/gHLzq4cP\npRvp2BIswjUFKfHWmwsgmSIitRG6pqksGRu0B0UWKwckfH/ufO+P3WTvt4XC\nDJe1QNVcI1H9ZtzF0iYGqV4fYlQFBPDoLUgp852O3JRdo0qVRNvF/j/5WD7B\nOj2d9GUB0CcuqKXIY4Ii9Mk/4IiXiyZlHTT9zocqFgjqKghzcBbIy4CHyLBt\nW79T\r\n=bkLG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCB+PlO1xEmgXVBucfyjRxTZ+FuKoWPzXiyKnEPmMzoOwIgInDkMLnExY15+cTCJ4T/9tDJW510H6fDGI2HG43hjsA="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.32_1637877214300_0.14830254313547453"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-rc.33": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0-rc.33",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0-rc.33",
        "@aws-cdk/cdk-build-tools": "2.0.0-rc.33",
        "@aws-cdk/pkglint": "2.0.0-rc.33",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0-rc.33",
        "aws-cdk-migration": "2.0.0-rc.33",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0-rc.33"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0-rc.33",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0-rc.33",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-85tSbe8lXbqrFGGh+feyIaSRvcvv62HurOa/1E3VopKkuFfo74EzVjf64H9UdnBSsRcsZfbm/Xa+qJ05N8RGrA==",
        "shasum": "9807061c5c2e0a3069ef189481ccb4eceafe7fb2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0-rc.33.tgz",
        "fileCount": 38,
        "unpackedSize": 187666,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhoPGZCRA9TVsSAnZWagAAgokP/AnLR0CWzWigjRCbWZTD\nYfk+TtgCvv+29WFZ1+0Pac2kPROj5jFAwrE5I8n1y+S4TscLu878OXYXRgS4\nKQayQUFe4Ci6O7Y8XPxlxonhtlAnIEj/02KhRa2IYeC0UVS6Z5QKN4IKRw2v\nPxPQShw4xPdaH3xULE781yzt6DBdOEV28RxdJJ5fiNOWdZyisrjZYErBYFXA\n3+lsOeSPHZFHqVDNxOQU7SXSd/oZ81/BMSEoK/vBLpnChh3p3cxKvhtN60s4\nQ/CdE86LMsosjgOywEDC7zFU82LwB1q7PO3n2whzYXqluMmLEal4RqJKYsL+\nfPKSqqlua9jJmzZvQ3yZS8vZomNxiFS3vlidUeZyPh82uZ69Ae5oSeAs0FyK\nTWCwzjiIV4LFKZPb/rX/qLqLGZmhnmpo601flZ9yZV9EfwpL6/dBBlbQkBtv\n6rsSKCkc2bf31lrRu741cp9Fg/e/uoh/njgV+gEPfuS6hoEymO2nNgNAE01E\nNmw1g3gC5RsKyp2qfld5LdgFyirtHUC0sMljzcXN3Q6ldDAmi1uhEDIlYd3x\nljJV/qHro8A15vzs4CMCpDHhsXKv/HMJGbQJbOKLQ1QKOAvJdW9u2iPEOjua\nRenS9B/ROGyK7tCQu15So4mop39kcwoHjsQIcglOtayXoTJZh8l54DNIEeoY\nYMtb\r\n=I8Px\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDrZAc8ERDbOFe3hSsnMEu85KOzUuXsgn9NOSrdAIgB9AIgIffLn8KoHtPNm49sWFuF5D2VT2WImiPKh7xal0OiiVI="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0-rc.33_1637937561160_0.9553254716122841"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0": {
      "name": "@aws-cdk/assert",
      "version": "2.0.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.0.0",
        "@aws-cdk/cdk-build-tools": "2.0.0",
        "@aws-cdk/pkglint": "2.0.0",
        "@types/jest": "^26.0.24",
        "aws-cdk-lib": "2.0.0",
        "aws-cdk-migration": "2.0.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.0.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.0.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.0.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-fqhBlQ2+D4573104DD67y3eC43xc68trOMHrp0KC8iHFt8Bwxyh5yPwSJt1TQzzha4hNnRarXVVzEBxhbN+gkA==",
        "shasum": "0d56ad16fe8050fde86c6f8bbbf624b23ad105c7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.0.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187620,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhqIkWCRA9TVsSAnZWagAAdCQQAKFt3bFBxNtHzHkT5mX0\nhL482Ew0tyIbaPewHHTeLEQmbYEvWZKjzFAffRxJg6egxRHoMcGMDOTiJZMh\nCrgn7ktLPJEu6lxsUXrwob8PHh7AY8N4Hsl6fuAAGLqWSO7jWyyrKHeTBCn0\nqCfV0/PjhC2mUo3McFYzHfeUYIdGfPNOFv4Ilwc9Tfhxll0DExOfLyp+X/ut\nHXSrLaYi4meBfkC1jUc5Coq37sceuUb5rPko+WJ817uSacUHhQzBne9UFsLA\na6U7aRR8oOK842PjrcYgEoBUa1SZteFgi/+e0UimsNeGCJ7JhQv64/xVd88C\nwfhNs0XzKm5SpPB8y0CyWFFU/V+L1adkmEla6M4Fz0EHNrUaWE5BO7oIRxJo\ngg1/Xc6MezsZZDy0yI4mtcBffB7R0SiuV7dfnUWvcbzZeuEYvOxid8CgiX75\n/xBROzwOUHw0EY97tAIEuBIih2FklRtyVdEuUvz3FHurHilVzWiMstbqLGiY\ntVvC47lIjcDYOMgZQwLHAuS/nGWfpRiAq88N2ahGhrLURQLoTykmGce3wXQr\nBRCydabBkcv9sFJpn/Pp06iBgoh0TZnIdXS7rg8LTeiLuDd3GH//MBgAbrf/\ndl4EBHxkKvblY7TMVBqDN8qJZFiRwAi+8O1lGBJxmIDO+DTTPv19X9W23fE6\nmhi3\r\n=kvek\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCEEzWKL1CIIncPrhNtYEaQdt8jCob2477SdMGiOygNbQIgeLSGbi/aNnoiYFsCjrK/G+HKd/HkrrkIcY2C1u3myI4="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.0.0_1638435094283_0.1674706619708548"
      },
      "_hasShrinkwrap": false
    },
    "2.1.0": {
      "name": "@aws-cdk/assert",
      "version": "2.1.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.1.0",
        "@aws-cdk/cdk-build-tools": "2.1.0",
        "@aws-cdk/pkglint": "2.1.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.1.0",
        "aws-cdk-migration": "2.1.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.0.7"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.1.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.1.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.1.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-6TLRq297zQX8Hs+Cjr0ATAIPYvAzHjvxnc5AtbWySbxPrdkCEcrrOFqSnl3I3zXA+eDVJIWNMvmsqzPOMDOoZg==",
        "shasum": "25b473bfc4a5f51b1480978dca4e4dbfa82f594d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.1.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhsLmKCRA9TVsSAnZWagAA2U0P/1Do78JqGJKUpR1N0YPT\nnwjCF29nVid3PU3qe7ksbu3OhN+DCnHzC8GpmPL7k/kmBfAZDc9MXNWr2BT+\nzuE8hqWlIpq9Q7ULvFuKK8j78ueRXVbsYm3tUh6RMhGmgcZr0IUYmF/fyDtL\nHoNxwxAp1yqQuHk1RBvjruC7CN+NmrV8wnuxP29RSWbayMoIhUpjTEB20JIo\nEc+YDyGIWo7q7rilupE1H7dk1NVUsHuga50uTtrGOYcoZ/xwrcsyy9r20s5R\nFj1/DsxM3uzAx7b/nTfNQaNSRR8MjIP7eIJTGRU8FZWpzbTmuv4CSeqx6OMe\nqS1iUgTa1Q5Y7bvyyVxFVwDlcCQBi404Es3fRfQ+logF3Qq6KJdNvGfGzxu+\njXwZU1BMasT76AAyU06/WmpIxJPhYfmXgSsgRMV+S4qIgq2Pjkh+L52wPeGO\njpplX0fLJowmU9EsfFkyBxAlrKCS867Vc8DfL9FsnfTKrvWL63J7S5qTEfm4\n0lKGJom9sDy1nyqfsUrF2oSGHcaqVeoWwYVV82iyjryx8VW5BFqcPYvfKAcx\nMowYsGvvNO1oR5uKcRyWnPeoRz6zLqoB7thT6LtuHiND+dJsJui50SsP9DSi\n6i1ylEBbbWtNibXaYE523vCB1GSJB0I/hjuRmFtwSsNFrlqwGXZHXj5+h6Nd\nxsnr\r\n=CyLG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF8u4qilKTTEBgGd2UbHElgXj6iRrhsvJVil0GpLpiI3AiEAwOMgQjsxtKprMKVvaEzA9W144E8foyIA2mxeSIZJRKk="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.1.0_1638971786645_0.3058503255529521"
      },
      "_hasShrinkwrap": false
    },
    "1.135.0": {
      "name": "@aws-cdk/assert",
      "version": "1.135.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.135.0",
        "@aws-cdk/cdk-build-tools": "1.135.0",
        "@aws-cdk/pkglint": "1.135.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-migration": "1.135.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.135.0",
        "@aws-cdk/core": "1.135.0",
        "@aws-cdk/cx-api": "1.135.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.135.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.135.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-4/+Xso8JqlDUYcjxVvGJEmt6qNABBsXRqwtHvJ3lWuTJeutgi0DqiLpSzDIXQMFDABbvYgyiKoXqkL4fF2Gutg==",
        "shasum": "b89cef88df9243dd77d1817f524e01a295a81f8e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.135.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184355,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhs7tICRA9TVsSAnZWagAAO/gQAJedEGyC9u7zvHfMrJeF\n8iHGwh8hKrq/E6/d0+NJK2SiWKgXxciL5u30LmkMThmekRW9l+iV4E4fvsiB\nm9nKM+Qr56+dF2XN64ebM7hluXqxXATGUYoHZFfKKTbDDBDqAKVD2iOhT2mU\naKZvvTAGrMPJZ5ucI46kk801YBPYP/Ssx2d00VdiKyUqP1dF/kNjNjpA9pvI\nRb6fZqO+2dspEDidtvjTy8SFq16rn9nDn/1/l0l0bdGQMnE+aE+DGYSuSeLM\nYuBdGY8FpZxgDNlghDIYytrl6pzFuk7HWFlsiMYeFJ63KITvgc4/XHGe/wMi\nJagek2M1FOl/AzHn8dzXhTTd+zD9Qk0f3BBKKsJUuIE1/nQ6kAenvSAIYmGl\nYW/kKNBlqhFUYWrjEHMLr3ZpDZJ98VepE4t7YAnqBN7LI+ETpRbMHF8FppBc\nWWk/VpU8yKWiKgzFY9GTyaXGtd0okN79uyGHrJZJvxUcemkOyVj6Z0lx7gwG\n3sfNYyPVrhFOAyE4Oo4SG9JMB2apvdXIMyFqvqEoQRlB/dJLYbpqTWyOyZDC\nP++dSFjFMv/pMu5ldBb2FKqtBeCvbMfYpKML9ogLi8tc7QsTnx89Fh8XJg2I\nruQIsEN3vex7XLVP4Gtb0cRqVNxAh0JB2jhiTcQAvpTzYWla4MhiF5UyBD+I\nBHtr\r\n=mIwL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFp0DhKc5BGSR7RWmOxepog8hzz7StaTw//qt9I2mBWjAiAwA7AZ5885YideaF2wO47byix+DlMV5/4uPISch7jG5A=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.135.0_1639168840424_0.043518728743163315"
      },
      "_hasShrinkwrap": false
    },
    "1.136.0": {
      "name": "@aws-cdk/assert",
      "version": "1.136.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.136.0",
        "@aws-cdk/cdk-build-tools": "1.136.0",
        "@aws-cdk/pkglint": "1.136.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-migration": "1.136.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.136.0",
        "@aws-cdk/core": "1.136.0",
        "@aws-cdk/cx-api": "1.136.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.136.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.136.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-2ndarHpJj60+gjR3H68a2bojaotAOjWTGp8LQWNnIRco17lYx15lqVGKg5f6WSSv6U84uXyzcuOF9EnzYxu2zA==",
        "shasum": "9f6277e352400bb27886ec7d9e6a4ea21401e41c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.136.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184355,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhudZkCRA9TVsSAnZWagAAkYIP/0Yyh/pi4kmHNQ2w50Z8\nuQ2FWChchIJku+8miLDg2jgUbFCk5r9De0hNP1+5KljAB7BwC6lo6/OuRT24\nfPxN4/si5sTGzqIfmxGWYLmT61UBHrjQSlqcImtBxqPq0GXVcM/kgjgL3Y5C\nInuYFvmR2NiHkNHXXffnymXmYMj+Kvf7DYp7uOT1jhIKe0WciWTi46uTyseF\nn10lITOPDXjNIKw70FcWB6q68uO4HANKj7YK8cMj2RI0bbFLUv6XL5A8OvCt\nYSVWy7lQCkkdwcEeRiaP4Tub9GG5HSimzf/LGhiWLFVNBZ6WFU7+T7YsPIXa\nKWVVPv07B2Ln3vFQj+9KU924r5Llm90iU1iXSxjDk8D4WLPMNWngOmU089UE\n1gOsIOuVtHMD9aWzW8zUK9/2MxQur5Vl5bIC3tCSc4Tjhb3iiPxJ2xrC+RKw\nc7yVfarNLI/mhTxBXhPDYgIhQrw4ukc8myMfT4uqh1W6I2VT9wwLemFTpYvS\ndX80SP6n97crmwMoB12nb93BiZrHRiUxkim3wlCAmq7IMI2q57dEPm/FErWf\nalcD9XClfBipAFPSSq+ADB1tAlULUEO512v7+2iKFNcUQZgKLxM1lci8ymMz\n1us1syhfaqd97P7lkDQRnVtB+D4jDlbhnaH+X8d/UXnPRt1falOmbQdVQRhz\n3xjL\r\n=uP0g\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDxP4qh4P3yZNEyIkrhGg1glKyN2+9kwP4Ct2f1HLAbVAIgW/7mZecP3ilkHPvCSP1ISy6tMDp6B+Rgo6h71ySdBTc="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.136.0_1639568995851_0.009696755065793372"
      },
      "_hasShrinkwrap": false
    },
    "2.2.0": {
      "name": "@aws-cdk/assert",
      "version": "2.2.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.2.0",
        "@aws-cdk/cdk-build-tools": "2.2.0",
        "@aws-cdk/pkglint": "2.2.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.2.0",
        "aws-cdk-migration": "2.2.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.2.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.2.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.2.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-ZVjlFKIKyrrv21anXH4Yh/Hp6vR9IZG8v3Lopi+uqdi08mMLt+xTGahaLB2+JXO1cMdHaJpWJ2GozHGRouF2tA==",
        "shasum": "6421398adc3da09faad1da0bf6043996e0aef096",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.2.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhudt7CRA9TVsSAnZWagAAckwP/22Tbm3LWuB0tuId2mfU\naN4qYEQMiDzTNnsNiowOYwMfwD/Pv9N1lo/X32bOXMAWNSuPJl0Y9/ZU1vR/\n+3WqRMBc6GwvqEu3CbGQOrgWIu5+we51TsaX8wb+G09neb8lYptqRutV5gCx\nrGjVfi/dWbdFP6oRK91g41kBkTVWLJib0q+Gp5LlgWZYSgjMbHjTO6zrvAKb\nTgACnxUtL2q2jO59iIPQODrixd6FT+lDQ26VlCOU52RjDu+04NKnJD6Aj590\nGGaI6WeHHZTLIwkLpD3jwFFYtaMFkNGGppt7EiQ49oZ18Y/SJt+ur1JqNwM3\nbeealssLFz8YSpAuhuID9JcXly/JTQyhSTqdxzKmjdwd/ZaECogMDfCNPhPV\nspr+4uN/NEsj13g7yiZdNLUBlXdGseHTkYoY87FQIxgcUGJ1pmCRbH7ak6MF\nFd1KWtkjieZHWNaATkYb6GH9isHIiFsHDCf2M3qOnXQOnW0vt0X5TcjEBh5g\nzY06J4OF4B41ZVWO2vK4tfg1YlrwdI9Or0vQGu5IY1hQjmiFantg92JbrpbI\nm6L2tPxzYObM3UNQcD+fxTHvHQ19eAyM0Rpp9gg3ndo1xhwQRjiOLnMc8z5I\nM8bUJsJ9OJq1QLrhDziEilg11s5fX3vr7xWEe3KdlNOWiePeenS9mnkFz6Wb\n2p97\r\n=GBIk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGEyc6cIWHCxfNFyoQ9BAvu2a7wUQcf198qXuG6d34NGAiEA8sYcinXAQFXIhZ2h0buIEXB0t4T/EtoCggdr6jxvs0k="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.2.0_1639570299579_0.057441829391555066"
      },
      "_hasShrinkwrap": false
    },
    "1.137.0": {
      "name": "@aws-cdk/assert",
      "version": "1.137.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.137.0",
        "@aws-cdk/cdk-build-tools": "1.137.0",
        "@aws-cdk/pkglint": "1.137.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-migration": "1.137.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.137.0",
        "@aws-cdk/core": "1.137.0",
        "@aws-cdk/cx-api": "1.137.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.137.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.137.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-a0W5hyZ2TK/Np+ipXpzGfxy46b+kK+RwNlJ36iC2RJWN/ruvl+wOo7YJF2vbJKtN5X5ZYoUqDZ00ds9Ra4xIeA==",
        "shasum": "bab406613d3b5dd795b0a4c04c644070e41f6a9e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.137.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184355,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhwhxbCRA9TVsSAnZWagAAPRoP/1VT6hKheO5E++4Q1UyW\norQt0L80GZibKO0hCvkLjl/FTQHtRiXTp9Rsz7nD0lW9YqEI58uYTGTjEsEM\nGzgP3X3r+EJ6nF2v+ryrLKZjjd/IZHFWsjivZZ+QHOnd/Qm+t0TGurdmPkgf\nTL6zouUuAkjwF5U+8S1DXyiuBJhULxpxeqbhOjYELAYwL4w26AD0qisDuKZL\nyvvmRXTG4tqKsRcHkXMGH000gjfapn65WIIL/1dRDfpR1+i+PY8a/lemxOI4\np8AxPleelZg0e/eTBWPNeNTrLq1hFpuXr/cDRMiAX/3oEtJCYbOs8Gi2YnKu\nP/xTnGuf9KtnqE3gKIc/uHmrUcxtkUO1VYzMtgyaizVXNcCipaV/BfZzRD3s\nsRcM+Mge0AAA0vFBOCLs0YyvHwZIS8EJS0LOyTqklNKDqphRwnIQ5AQfLSnn\nlMLiy0zZuXtNqK0S5sUEkH0Y4Gw8y+XpvKkUhy4MTD23gQzASX0TEQSy/4IF\n4qpPFVcCkuUe3QdIXlhmOrVoSt1/mNh2+HrTwmsNV/mJ3J+ER/DZBbYGy6mo\nnaUCWpg6LDAfWy7ZgfjRezbTMgLut5gYFciLbUU3WQHq/NlRO+O+JuLRek5l\ncLWfhlI2eph3gLtVCCsmIGarMAaMQ5Q/mJ65SdVWx3z5rhgVnYOTj6df721L\ntlDk\r\n=jJzo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCUYM6GZGqOVHa6v/V98SGqOk+z5AH2Lxi4HOuJ6ntwewIgPGxAwrkqxnxyze9q5jF1lH1ovyOq6NJPChoR1v4Dk78="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.137.0_1640111195148_0.7997383756052885"
      },
      "_hasShrinkwrap": false
    },
    "2.3.0": {
      "name": "@aws-cdk/assert",
      "version": "2.3.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.3.0",
        "@aws-cdk/cdk-build-tools": "2.3.0",
        "@aws-cdk/pkglint": "2.3.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.3.0",
        "aws-cdk-migration": "2.3.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.1"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.3.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.3.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.3.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-UmHM55mBHuW+3VpG6ll5ilhs6gaaxIp4e9AJ4iXpVDHFMcHCZ8BcIOy0Z9mdZeiJYzFbi39G7FRxOAzOjAwVzg==",
        "shasum": "b46517de85bd07286de3f551de87e0eae272d21b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.3.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhwxoNCRA9TVsSAnZWagAA4rcP/RuL6W6H5dQSQ4CBIFSM\nqQzil51WIgedo3K3qAdNfzHZ1o6k24iCJ2JV+4Emn8SHJsTzBE0YMCb41rp9\nNCV6SqorXMcb9olg7Frl5z3fz57S4EPw3jtSojQmbWGqLrgEdGOE+ysC0td3\nhlGPwb8MGSo6meJ53v+E44RsrpIZtfLjyWGyTd78W1RSbIcGIBixawl0/xwf\n9keNGyLqcRqmuzY3etec55eyJS5vqIVrPoHSpK9QtJ5yUxYlEF1xsg93EuEP\n8GGfMN8ir5YOJpKpy7KKfUqNdGAyE0AkfKEVGg1wuQG8ZtVHfwcjfM+CJ8Jw\nmCTIccjdzcx1PQJe0jb22K3o476tdS8LbAIeCEE/XECI1dl74ZAzBZHIHHoj\nc+dWn6GSL7M0y7rhCiDa72A9b17zb8Cs/yEOt9hrEYvKP5kLbgdXEVLLuxQM\nmAFseGG3604SL7XXJQ8FLVi0zHXIW/724Wr5OVcefWD6LhdwAHojvO3Jylft\nCbaAc4NPAkHBdS3uF7feg539f8VWPMZL1LY2GjYJZV7ygyfbcpSqsjDRcyK9\nQkVjV+qKxnzNICsgJfFB/QO7BjGQhf18ll4eKhl4uL1vUEIrq44jBAkwMC6f\nVIZlJJOmkRj/vhJ+GKPL7C+2pSEhKsM/9BsxWRW6o7FKP/BCyG727qD3zXVo\nqJJp\r\n=NeLE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCHzDduCSnM8E5mBwY9J9pmtiTUleZbO1B5PMHVCbSbFwIgTp1EVWn5kx3Dayt2UIqAOvltP983Pea6sCYfT+j2rKc="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.3.0_1640176141814_0.07357684807153064"
      },
      "_hasShrinkwrap": false
    },
    "1.138.0": {
      "name": "@aws-cdk/assert",
      "version": "1.138.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.138.0",
        "@aws-cdk/cdk-build-tools": "1.138.0",
        "@aws-cdk/pkglint": "1.138.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-migration": "1.138.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.138.0",
        "@aws-cdk/core": "1.138.0",
        "@aws-cdk/cx-api": "1.138.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.138.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.138.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-1h7ZZj7KEJWzmmuoa4OFIoyvI8rYK3pQqYiUeCoHoBbyXmvgEZcjiL7h7TAcGTbGFmLUZRyDuqCuC/aPOBgwGg==",
        "shasum": "fffd44fda4d9e52341d5d22a50d25ab7f71d9bed",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.138.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184355,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh1J3mCRA9TVsSAnZWagAAbMgP/0gOYIRpZ1wH/KyAqb34\nMhWRYBJergAGBsZtg8nvVZ3WZsG8lA5gewWIpnVhjvk1JRayoT8X8UaCe0NM\nzVTnynPeO9gUTJCTyNHvVj7CoFxTmOKOlVYd3UqJgFd3fIxS0O6lyuacbVrZ\ny8DpIriDjZheIpSBe9WE1NDguvIicLoHS5bPTn9ZUjIudFat/W0oa/vdUeyP\n90SfeOHF1zK7nuI1SQ23Nh0zj7wu5OiWejHaik9R9HtlFqyYihorY52X3xom\nsYF53Tiu2sOFqfUiZVUI0UoKuaSVeDDMwY33hJIlPCPLhxak2A9TQkYpo4dY\nnG+haQZoMkdiBORwlxsp7cc2Ahzxj6wTMT8FPdgYbU9SwMzX1OQrczIRFqmi\nnm3ixbGMWrlndCLcGEw1l0LfkUh44qJXr/5kL16KXTyR3/QUNeYTU8uyXiWx\nXLaRG/L9GDSP+367R7chgG4rXu4BKL3iBKy6HNjVOrBna0DsVQ9CJBOLQPl7\n4WFbMQbdwnZyojdKsl1kMqFkt6uazfJN6TBDsBjoPhqg4Fh0bKTbu2FKpO8L\nW8CXKl7+PzHEcnU0zjhpBXziZA7WO8bIhJ38zMLwSUnp5orEwCFg4fpYjb0R\nkxFbi+clP/VB0+XYmFuOTxyeySyBiRKtceZtuUnuwu5kEFBnKsBM1s0afatM\nfrSw\r\n=xb7F\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCy+mJoRLBT4gpd9Jmf6NR2wxVinnK4iXRw+gfs+Wdj4wIgCnH4AKJzDioAAYbDOWisugD0DtwKgB5cu3ToSGECSMQ="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.138.0_1641324005978_0.3082866774823987"
      },
      "_hasShrinkwrap": false
    },
    "2.4.0": {
      "name": "@aws-cdk/assert",
      "version": "2.4.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.4.0",
        "@aws-cdk/cdk-build-tools": "2.4.0",
        "@aws-cdk/pkglint": "2.4.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.4.0",
        "aws-cdk-migration": "2.4.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.4.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.4.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.4.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-xvJo3Fmcn462mvjelWECItpByQMNQUSwRHwdVVqIe6ej+t0Ln8LQgCXwXrLKFyLOSQj3vclkOjAfsmv5DEfEVQ==",
        "shasum": "fdd22837ac8eb9d19073f6397452364b0ce5ee2b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.4.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh1uMBCRA9TVsSAnZWagAAyQoP/01vZIPb4LoTz3235GdD\n5Tr3V7nxuJdEfwj71qbsqiVdKQZetZzhinn8goPEvOKToxHVetytYysxiJmu\nkybXY2ysfOG+KDmmRKfYwZowMPgu2n8yCj31smZsMTZZUBtyD1DuPQZAgBeL\nIPGRrFVoJ6HX0DFlAm/CG0rD2zBk8f9t9K5logWICZvGXuv1j17Q+v3eKJ90\nZicGjwOFctNZ6yMn1tyvk0Dq2Ykgnksu/gTclT9dhiCYQpxGuhyscgIS7r8C\njQT7qjwvNLM+I+HvuiTnEgV9qEYH1IBUMz06VzHuakjqNg505ZEKlch9J4iT\nBITjCUZZXuH1/azEH7PTe4MnzCbIL1o6J0fh2YS5n3QPeo7knC3DQCXm9+DG\nl/QUG0wM+hLiOcv1xrG57HKu01p0plSkobtHFPUJrMjoGwrmxFBQwaZ07Gd9\no78osBapOpMX7NFj1X34ZTu3b36N/1UQFLUYgvaw+Tf5SMAHPdUj1ZCicBcy\nVdquHJZVvRVK0h/P+jhIge4tug20z88hH8fmRaPML1iYgDvbxzpjKcV4H3bM\nO43b1ebU3fo74BsPyaZ2jXsnR0gScde5jkSutXkmyq2oM/SrPbRAbAf9AA+f\nt9zzuu42RrnUkZ1eRS1LTkkhVReQG5a+QD8ZndGUQ5ff7l0T3nVXvmmeSoV3\nQJTD\r\n=EbaU\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC05P+7cVh9s1QpWOhn2v5Wlqjmfa6pHl6nT8LdDunQMwIhANull1OLar1EgqAGfRnGo/qlIc8sRD8DvzBaOO2APXaq"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.4.0_1641472769226_0.9613831135894941"
      },
      "_hasShrinkwrap": false
    },
    "1.138.1": {
      "name": "@aws-cdk/assert",
      "version": "1.138.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.138.1",
        "@aws-cdk/cdk-build-tools": "1.138.1",
        "@aws-cdk/pkglint": "1.138.1",
        "@types/jest": "^27.0.3",
        "aws-cdk-migration": "1.138.1",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.138.1",
        "@aws-cdk/core": "1.138.1",
        "@aws-cdk/cx-api": "1.138.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.138.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.138.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-dEfW68KoJtbnpOjneitl/Rbip+fasnjSaIOG1oloG47pvZYZO9dWVTr1NwAEXnOYB/pb+T3snRGudIQj/fImbA==",
        "shasum": "15cb1c94cef6cb08674d99165bfc14a54e7f2e2d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.138.1.tgz",
        "fileCount": 38,
        "unpackedSize": 184355,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2HA3CRA9TVsSAnZWagAA77UP/jENUPDRYMmiV4wgWN/8\nqCGS+WvyuPG9jL/OT23yO9Fp0YVwahVQZaXBMdJGix+JU9JBYuVmNeaXJobw\nWSZjW+henQUnOcM6RUZppyEcAiKZYzIEo59Z39jJORAHUGYifM+T3RZnFxkr\n/eX+rvZLdH+zPof429qx6Kqnz5I6EAUZ26CSqfNXci4QZmbFXQu9HByuNXCX\nnz8ghMj2Luw8148dC7e/+aqHye5Ianpnxrz7IYpcuVBmcE3bGbi1stP7+Y70\nf70UzD3sr2d6n+JmQkIRvvOpmlb/VdSvfMYXLQx+fWX6QfXdBdDxHS7eZs54\nUyXS5DExWSZr02uz+Jq3kUpN6Asu7lYEPfEab232A1HfeT1PlsiByCfhjzTy\n9HulvqujT8wJcXKycR/gn1eatKH1DcRMG5hlnMbZxtIAIqnsa8bCGrf7/emW\nw8yxWkp4UxOp2GaOlJozMa4is72WgezE73ugjyCbydmIa2/3V4X0vIXqbLFq\nV8C0Za86MXr7UZRNdMH9/ar0x0/2eDhz8YxAwveK4N08hxWU5JNQLBWQbI+Z\ndZ8ceYojm1G/f7cQq7dI8ZfPhRFdmwc/juQ/YpQwwWxJIiK4PyyLjUkNzNNp\nEJ2izbwIfKCrWTb7++pvoMykRBCuthdJQzCTOjLiRg/CfdZI2JVwg59dC75V\nNG7Y\r\n=BmYt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC29GrHW1ix2VOOk/r38pk0no03mBC+KnVrXmA/QSStNQIhAPbGe8m2dywpBu2Nxl71OGrJNvF3hXR959xRN76Riokf"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.138.1_1641574454910_0.6851222600357931"
      },
      "_hasShrinkwrap": false
    },
    "2.5.0": {
      "name": "@aws-cdk/assert",
      "version": "2.5.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.5.0",
        "@aws-cdk/cdk-build-tools": "2.5.0",
        "@aws-cdk/pkglint": "2.5.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.5.0",
        "aws-cdk-migration": "2.5.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.5.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.5.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.5.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-n6i0xVmS/XNy8+LrxnSoNhiHytNgWK57x3MFrNhj30rOt/M1PIHZTSMxGPbQAz3twlZVin1uOGZIHDuk4g+1TQ==",
        "shasum": "e3f8f6696d18d169a01a180833181f82fa45c428",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.5.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh21OiCRA9TVsSAnZWagAANj8P/2vKCFYd68WCylhGtCNE\n5dv+KA72/XDXTxCAzSfJFIWDdigqiy9zwa4wogpiIgNQ5IEdXePYm2nYGWN4\nLMaBiVHp/XjjVQ/lkWUjI6wNIOKRhDQwjVenoxr9q+8lFSAGZ+DaZ0phOEL5\no99srhF2mfuHttMC/vkcauEaXDEzjsj8cAth1MpK0fBm64SYSu1FI3HwEQ3q\nOka5+UYUSR6sjR34JH/W3KSb+1vj3pvPN/DBwfxGPhZP9NN/QcqvijmdzKUe\ndyCO75SupV1AZEVLKka7pORHtA4GbisOwzr5R0owupMe8MPpToafXLPJu2hb\nHrA/ao9lXZkpwRHv1ghbV4lIFr3cv12j3DnPivM/BDCo3w3YA4Rq5HE8x0WO\nSAeiiMV+vCl5tbu2YTHJjCk5qrNCEKttYONm3fd/44cwxJrE5pZTCqJmXEVs\npjxEnappYfJAkSepWb2sO6aBmkqBYN7t6djJN4ZLaY7lMr7Q/y6PvGy8TT+V\ncAUR4c//6/+mlGTmAZhqwlqjGhrfp3t6CT6tDMN5LTi00g6mds+2yPDgyIWD\n5CdruoOVlgBdu0doNQhAX9iIL9at9u9Tgi+Rimwi8MH7UfRTVwOqf2pMvrGr\nVSQpA08wIygbm/4ue6u/SECH2vguQuq17/ZHMFPviBD5rpndc0z5qNzot3Op\n1FTH\r\n=uop7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICH+yNmf8LSV5dcRetC95H7l/w3IQUSsEO7c8kfPQ49xAiAmQGhS1k6JPfGldBbWK4tHK1QdCGB9PuhdxOUnmR/hlA=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.5.0_1641763746059_0.8898200851425606"
      },
      "_hasShrinkwrap": false
    },
    "1.138.2": {
      "name": "@aws-cdk/assert",
      "version": "1.138.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.138.2",
        "@aws-cdk/cdk-build-tools": "1.138.2",
        "@aws-cdk/pkglint": "1.138.2",
        "@types/jest": "^27.0.3",
        "aws-cdk-migration": "1.138.2",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.138.2",
        "@aws-cdk/core": "1.138.2",
        "@aws-cdk/cx-api": "1.138.2",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.138.2",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.138.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-cChIVBGfdC5X8RqW3TDzR2hke2H1k9UYGgngtqRkxHvYPmm1MTAhejuueu4AQ6Ey27Y8vRLjslIYrrz/nSJ7rQ==",
        "shasum": "7c226ccd641845ed7289cdeecef32fa1d9b73790",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.138.2.tgz",
        "fileCount": 38,
        "unpackedSize": 184355,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh23zZCRA9TVsSAnZWagAAcIMP/1OFoSvJ868B1gLmItfs\nFJw+8x8W7G6OvTDO4M22J05OTS1IMBZUSX3y475qHXmPfAw1okaIgWUliMrf\nTNAZgFrAheD75fsXYhcNMnthNd7aG61chigoD9AIo96r92YIzrFDN2oTn11T\nZvVNz6rAqxw3/DDp996twAf9Zm/FW1qfC/KWRNjGHAce8Tx3DzjDRYvjthM3\nXBOC2n5GXXj4ir/w6P4kzUSyFPHhobmejM09aUXRTQAuxAYz2dW8X1fTijR1\nN57SPp0IR7Ung5cvYmUbWC8uaYiE782YmewklVdKKpTSeugMpz4uvw2CaW5x\n3JODOu7DTjVv6CJcKmnv9WenFL/PuOGWmsntNLIijT1W17oSNtS+fBSj12M1\n6kPiyf5XF0k+34vrHM9cMk8WxzzsXzijX9egM6nvXgDTNQJK23pjfa6JN7QS\n+P2sJpUdWbs7AvQymgBOJwg8cKZ78+XxtJYT/+cHWIjY2QW34/Vfr4smcw2s\n8MPCEXh3/N7Hdn+tHDDY5AT6FNWCepM4+wmej1rj5xtPSxEUZ7AxIFBa5Qn4\niXyAD+tpMr3f98GDZMXGEYwBUNrUdFNKm93sG9nxd9cteW67QMMIg0fIk7AN\n6IQjsmf2Q0TAgl+SXHRkB8jYyhTYC0FTJR18TBMD7d0Bh32Eb5VDKA0+uTf+\nwgOw\r\n=gfEv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHApbhMaJvNi7zBm+eM8jqfV2jA6w2gM1wGx8uAWCWhoAiBxBRTqVG5V4t+hwwiwRXcXgNWPeMLzsb03X5/YyLgJdw=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.138.2_1641774297125_0.739845828391767"
      },
      "_hasShrinkwrap": false
    },
    "1.139.0": {
      "name": "@aws-cdk/assert",
      "version": "1.139.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.139.0",
        "@aws-cdk/cdk-build-tools": "1.139.0",
        "@aws-cdk/pkglint": "1.139.0",
        "@types/jest": "^27.4.0",
        "aws-cdk-migration": "1.139.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.139.0",
        "@aws-cdk/core": "1.139.0",
        "@aws-cdk/cx-api": "1.139.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.139.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.139.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-SGNlbh8hrBYoERctUqxKDPNhjP2JGUH1rlauGAdVdtokVCW4ntfC/u9wOYr0Sny2UqpB9ooSSKdOnoC6a6/jIQ==",
        "shasum": "bb0ecbde8ca3abde0face5312d641cf44da6c456",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.139.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184355,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh3d+vCRA9TVsSAnZWagAA1RUP+gPgD3Da4qVZfaRN40Jg\nCsh5mISsh3hUwNFfyY79D/2qPq8JZIERnbfA9H7ihX1esWEKVN2Yp1hLvOJU\nmWPr6arWUd0gqd9T92P2+Cd7MY20lycvCjNPHofKBvtW8j6A2MTaRV6PjN3x\nKoin43HFtAHct0VznE026mxgVqxOjreIisVB3zrAfRW8ie6NxnT3l0v7huVm\nlxV88pdVCxJ93vwygWFthhvgQuY8ZEnB3cMePoHxJJgEfG5U8AqRlGYVvPPe\n5CIptugCuBLakzSde9WpbenxzvdUebI7KqXeonyOZlNJIL2kujNjvuanKPuu\nW3eJCiWIRj9W4VbMNBmxV1qM8Ymc4fqJxgVvOgfMfRryJSt5LG+DfDej6mgV\npHS5isJTCN4v4Vw2vSgSVPUkecbl6uUu20sWzjMKkX1eK2guP0akA/IodaB2\nPr70pm5T1eV1RbOmDBf3JTscObSnBxYuYGm+tUOajPoex6LcCIKf17SF2UgK\nYXekcJ/BsEd6LRHMxyftFh/vV7YNWPZVzwDWSuxy8id/4zU5n9poeyk4S0uz\n94xB5Uh2AaZqZ1PdRMvKfj6/5aqTJ3l0wblMA9/6Oovg2gLmt9JtV1AiWgId\nkZz/9REsQwEtkXYoC2FekfeocDlEd5AEoLwdRcxz57QT9eTDWwHKqruBzeHK\nsApR\r\n=0rqc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD+1uyQ70NA3zF9PV7LmLY34nh9NX+4W7S9Fbv/TDpuUwIhAIPHzbTqRG6wT40cRoCq+ImsSk0qVgJItCcW1sFgHUrK"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.139.0_1641930671452_0.40197907551124823"
      },
      "_hasShrinkwrap": false
    },
    "2.6.0": {
      "name": "@aws-cdk/assert",
      "version": "2.6.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.6.0",
        "@aws-cdk/cdk-build-tools": "2.6.0",
        "@aws-cdk/pkglint": "2.6.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.6.0",
        "aws-cdk-migration": "2.6.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.6.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.6.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.6.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Hwkh6cr0aGR7gFMQxU5pBrtaEyuD95XWiwkcEv3ri0le5GtQcGSByLIGpCDemykneRvtScJWCjFWBfIei/mYIQ==",
        "shasum": "b3f50bd616b1fbed7f47e95243250060dd1e9f7f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.6.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh3seJCRA9TVsSAnZWagAA1CkP/3t6DdigDqhEtJmpi75K\nmFSXbl0yjqZVU/IDu0J1u+/QHud8XRs3xXFkDIs1e1Gn2xxzGV8J9Ru8+eJK\njTmhf+AKE1TUjXhYck3dUtka6uc37mkUinNbgAvvu6HoL7RsRIYPWxIbtEnw\n8I8Qz5NxOgCZFzFCvXLx3ZudgQULfaO5lbW+7OAd9lxJ24ccTpc+K5QS+UxE\nYPFKgNehWPeS2VS2Kr9ill06vnMOsfH9paaCDBe+w3iYQmMwpWDQPhhdcCIs\nj+8jcukWc/XVW9FI8cBCkUHOAxw/mprOhgqjP/73KXWatIIX+RqSlOtXsR2z\npDHHQcvT4oxJhUMd0mmmdE7U7xY8x6JoPqZ4KehIppi0uEsBxs/z8ClJkBB2\nwZpIiB7F5maRi6niUza41AhdWdBiRJ2mVCXqSWB04Vw91qhnrVH7DUs/xkB9\njhimVNJCbTS+bLFAEa1Lrx5Gyn7ymlI5jBm9TOO80TNKQYOA3uBExp5odSYM\nlT+kAEX7iduGmZwuu164MEZrloC/ATAEH8UmG4N4x9vwzlz7jEuZOu/YiUS6\nDYMHkpoLzg4BPS6/EvZyRjOGjP+KhwY5qUNJBM9Lnvaskoo41HrcSOJ9Red/\n1ziZHU9TD0iKcEG27bUth96N0+sVqaW+2Hgb/EJJNvhlAQF5h1CKgrZnBsMY\nlTf7\r\n=QRsd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAFE9jgGnj487XRfXCdlxJUAbITQPDadF7kTgSC9u41yAiEA3/emj2Uao+lkHTOCPrQAxbD5NIFjGpsRqwyXZn/AIfc="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.6.0_1641990025476_0.7595707335705386"
      },
      "_hasShrinkwrap": false
    },
    "2.7.0": {
      "name": "@aws-cdk/assert",
      "version": "2.7.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.7.0",
        "@aws-cdk/cdk-build-tools": "2.7.0",
        "@aws-cdk/pkglint": "2.7.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.7.0",
        "aws-cdk-migration": "2.7.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.7.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.7.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.7.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-0d0yts1v6OD6/HFruRvspY8GQ7Tl6heNXEcqeTKYQfeiYJLOkGTIcrbSHximb36vjCTqburEXvla7AFG62zgig==",
        "shasum": "a8ef33a2164a598e01f37d81057d7d666e20630f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.7.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh3xB5CRA9TVsSAnZWagAASeMP/0pjGuEn1ZQHy4RnOL5d\nah+YNeI+KG1ejkJJLCHdGOjVk9zRCKRy+CEc0GREwiFYNNSIg2tGP6dF7hb0\nzX9A3X5D0DPfBRKOoVFmXcUomn+l8R5nkQn4RW3Fiuc5Gu8pnehhJK6wo0Lj\nzQbMME4VARAyjJjG8/zwYDzGtfBw+r/h7Lq8DVQFxgnpvMGdEhdUOrOG0w3T\nuORyhAFlgXcj+1pO+Gdr6ka/9XsIiokKQol4543Ock72CPzIUUXh7tCjXE1u\nycaiT6G6qOTHkHYexyftZXExMyR75pveQ7n7fYEYvvivss0/TZkFxKMFu6fn\nKSAoh3FlD2agfGhDrybFCdY6g8WS3xuDvYC/7NxWCbBYo0HgKGFawYBRNGdL\nK11Iek6KNEWN8PuCt/i/E9wgffC4vvmy1zZvepwxuaHfWnzDy0jMqL4+g3I6\ngBXuXjqDC8JD6IIpMeiT1RsftZFm4v2WG/u5b9bX5ZZCFE4UO9+cSPDYjh+H\nuPmQHuS5+Xh72UchxcvAoBfStM4GlpAIcHZFf4HpHILXtMDXBmvrz4RsAIfW\ngF2i4LpCMGlZveBPtLKdUdUXsbOsjTFWH9KEHrl5R4fsHSZJKBoS9VP4K+a2\nW7AEYgHxdOtQjYdbk3GvyXev1xzWKkamUJzwAKdhl1K6wiwBtCbaEpn8oJj4\nA2iK\r\n=Tpfb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCbfjC1R6AMpKgJKHnsvnFYCuNUBF6dUJou8H24KrEUAgIgUY/2mUMmYtyEKD65c53vYb96opm16vLmCFhr5Ed265U="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.7.0_1642008697233_0.7633825468541844"
      },
      "_hasShrinkwrap": false
    },
    "2.8.0": {
      "name": "@aws-cdk/assert",
      "version": "2.8.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.8.0",
        "@aws-cdk/cdk-build-tools": "2.8.0",
        "@aws-cdk/pkglint": "2.8.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.8.0",
        "aws-cdk-migration": "2.8.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.2"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.8.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.8.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.8.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-NSSPMs2hXn42x7qWPhNCIg+CUAgqNZNuvU9v/EJo+xENADc+bm2X2y0RNJOjS5jcvMiy2AHtwT9Gj3uHd0S/IQ==",
        "shasum": "c9248188ef1eb1e6ac15a81985f99f3f77ecd685",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.8.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh4HgVCRA9TVsSAnZWagAAqRwQAILeBWrvvFl4e5ckCI19\nNtM1SJIJ68M9LL/6ZCip8AnylIS2xOjS4fK2GhIJ4zjTiRRdfepHHiBQLNhg\nTalwg9MrIcastya847vxBr2BzZOlrbiks+F/LayBQcWD3P6VOvgxfidJ5vqw\nOHhwbd8lcV7fr9c9ip4xf8tY4c8bOL7xjwcJhNTOsvUkOu7inlVFmpQff3Am\nYEi7cZUDYFQ8ja9FYdISsDzf8z1jMZJYD4zFt9m0WafyeSSbtwZxJctpGw/L\n8sT7RifDS3kj+h9+n96kh3vzUkxKDNp0EcM1wCtw3m1VuI+2HqR3SUN38XUh\nKJUP+9H7cGPH7eV09QEAGLTQ94odldG2E+qWn/53y0w9oLcL91/9UAyYLIVT\nRvrsy3Fvl+pK9/qAL/NhClvcgJaGrLSqEiw5NhBnL5dwGRielDJtUSzBTxLS\nPBbU88BJA8rqGPggCbPJooltDOAjj4ZNcRpCDtuFZAmyZwFyPU/xV6G/LJ4/\ncLunMCoY2+StKhZN4zgXk7NMf2PcqLpTQ06894kqzNSAWjiEeJqgX7jl+IGe\nGUEQwyTxYKypSjkla0nVkpqi3C3Wh7YTcHTKxSuIg62caI5uI3cAkuQaypcQ\nCbaOFXwFQw+SDE3gIHg5om09vtV/UhQPXtzsLvxdl1cWJoz9XO0YNClW0u0p\n5JR+\r\n=D4AR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD1ZYzrYn5iih9JbeWYnAEpI9BYv/M4sQZqP8bg4fcs7gIhANSpdE/LllpF6gKdOoOtSb9cGWdkX7PAfI1RWH7ClhLa"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.8.0_1642100757073_0.35436610203343055"
      },
      "_hasShrinkwrap": false
    },
    "1.140.0": {
      "name": "@aws-cdk/assert",
      "version": "1.140.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.140.0",
        "@aws-cdk/cdk-build-tools": "1.140.0",
        "@aws-cdk/pkglint": "1.140.0",
        "@types/jest": "^27.4.0",
        "aws-cdk-migration": "1.140.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.140.0",
        "@aws-cdk/core": "1.140.0",
        "@aws-cdk/cx-api": "1.140.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.140.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\nIf using monocdk, use [@monocdk-experiment/assert](https://www.npmjs.com/package/@monocdk-experiment/assert) instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.140.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-vccsSTlBqnvNHPEn6yW+U2/2UNnJKChmE7EnvjpzVpx9ypMq1BRWaNnhuktuP/UyyT5WjO6DMP5KStmz/jxBHA==",
        "shasum": "f0a82728347ea17964442492037c13f3463bf677",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.140.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184355,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh6dgeCRA9TVsSAnZWagAA3XsP/3DiUhfKzx5Y9izNmvjN\nvQaV6u5bnXFHXEmM3zzXzjz5w+EPc9y+PfcHHi6eLHAvFc/AekS5wCOmy/in\nnTws1LDyxCoAHJ+38WLsIwV+SLNXalZ2Vb4UmTmCx5S8pholx7/JSB4OVbJj\n7xCKRpW9yYfbtVLv5BQec4Vk3RWbZr8Ddfsta9n4Nad8l/GJTXkLcdg/WLv1\niED1SLm4XqneNO1RtW24e/+6rQRej3nD1lGzV/BqCKdzyH9DbbM31V5Pyth7\np6s/rcLoNovK81qcKvP+K+ZoWlqeV4ymRO1tXxszfvAxkaiCm989Q95jBJvd\nzPtvbKzzZOLqnG8n5ImfWUK6QlMIYx9jp7Nvkbs+6peivS++qG7OzhpcXreW\nrWRf7I6WNbBspu4e9VxtJ+eMwXRulUer6vgX4R2NdwfAWgHVOcASqQ0kWOjh\nf/qj1UrtPdK7JfYmKPmdFLUQyIR1+cXEvYJprR8KLCF7LR5T0ykc5RIS6z6B\nv56UsXrYztLC6jtNw67166LJM1wczaoXlNz3HFdUm9BDs5KkunSlZyC9Q3Fz\nr6ETsULNMeWw6LjnNvZDNRGsf/efWIXo9bZcLyqVEokcZlyYSp0BbTBLZyfv\naxfMGi3tr/dAwCStEm7BAWcJ/xF4tLU0z0Q1Kr3qDaR4JDIf7H/LQBHPGRHd\nm8xw\r\n=P6Tv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBjD/nnuys31/wr8FC7uBhuZkxEq2OxWLNJRgGiSfoltAiAAt2tsf34VwNagvT4m+gwZG8eUIgRseg6rVrAjMnyorw=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.140.0_1642715165957_0.5856234328232865"
      },
      "_hasShrinkwrap": false
    },
    "2.9.0": {
      "name": "@aws-cdk/assert",
      "version": "2.9.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.9.0",
        "@aws-cdk/cdk-build-tools": "2.9.0",
        "@aws-cdk/pkglint": "2.9.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.9.0",
        "aws-cdk-migration": "2.9.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.9.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.9.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "experimental",
      "maturity": "developer-preview",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.9.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-HzkADKK06fCFefRQj7b5nMGVxNxa3DWGrWj1gYybAI/uWVj6n9xXD4AfUpJaZ/II+lCVILorzhXlfvnQ0YI3XQ==",
        "shasum": "49fdbd935f6b6ee97b773089a70e6731936e1a00",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.9.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh8T3ACRA9TVsSAnZWagAA0VUP/0j/1kquURJo00KPyBDc\nTIz+51Jm6ELkGM7057y8woWdJLwJp7iZMAFQDSrsGNw8nytZqJzQmvWdQwr0\nS4ZQvynfRLnvULUc8sLUtWsI6dtdc3Ex/nLaK4Zb/GX9zJIlf8hgAzcsoApe\nhI6pV1kIkKh/EETvg8+KmAal2+2mP4CT9POyi3qtzE60Y4dFDswt9uwnehuj\n1iERaI9yG6ABuicxPHIpV/aAJd6NojKDkSBomONevGLzIqLQR5KjKLkz2AMX\n/sHQxq7+/yxm5VDAqRgHofUOxpnGyAtyyYXyMJBfF0vu0dcWvit1hscBQfkx\nwefXhNBA4xIvr+bVxR/MxVTKWXgLmdjfoion2nSSuN6V4kzCuBOm5f/infzY\nyYncCIgCuEg8O4qYw8uXXKQJAvrVEWwYcUMg75UEoBEFtHw7M3D7407JkEaV\nGsZ/GfLd1SwtFFMnqd9oBWI3IvlLrXXdk3NGOKl4ae3TTz0CziWGamij23AR\nmp/VtAJxusjYx949cmpzFEeZ6c6Q7EZQMxV5ZbVK5IDQ8Vw62Kqqn34Hu71+\nLYKn8wM12wgoU/JprDuAzUEztR1yRGuQwEYq8QSOm2ayMlhYgt+/xfcgh5Mn\np6F5WEll9rFbL2/D+K7BS1MJTNwbk4XMKgZVek9lLtvl6PfrPyhudz3rgtEa\nI6ph\r\n=be5D\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE9hIspCxD3o55Vi0iIzDSd/gwy3g1qZwZiBD2nIVm3eAiEAlO8X9sTnmFwnNxqi3vwdmjR3WppbzLGNAMjG+ry1Y/0="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.9.0_1643199936451_0.32653679407945213"
      },
      "_hasShrinkwrap": false
    },
    "1.141.0": {
      "name": "@aws-cdk/assert",
      "version": "1.141.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.141.0",
        "@aws-cdk/cdk-build-tools": "1.141.0",
        "@aws-cdk/pkglint": "1.141.0",
        "@types/jest": "^27.4.0",
        "aws-cdk-migration": "1.141.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.141.0",
        "@aws-cdk/core": "1.141.0",
        "@aws-cdk/cx-api": "1.141.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.141.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.141.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-pQh/XUzHt2+6NQ4Ix8EehZJHw5oIli2z3kGkXmKPyeNZ/U9h7IAPL6x03Q6TqETXI4eogFXyl5tDIFSF4eNEcA==",
        "shasum": "653d3f4ce74499ba728fb89eba7ba4c6c32bea78",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.141.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh8qIsCRA9TVsSAnZWagAAV0kP/374zmsZxRu1/C7NMHlV\nh6rsR7oC3fuKOtb3d3JPiECEpZsRt6QIkgljYCezHlkxIKa5cFeYvOcl8z4p\ntYqvDqkcBLbb4hbkTgJ+b+o3sPYvCR81U9URXtpECg8k5Op2domygJIC9hPP\nOdYguWUKxHyQuMEhJ0mBVtHbtubD6dbdWaGWCJzXprasL6YV2LqUay4pQFFz\nglZIMbhK+8WhDSTQDR2FMU8rHojKs/Svk/mI0a3QKkNfyNDKWK5CoHHotSwa\n5HtXOfzT7njAhpBibZBnkWDowVTfe8vOuj1QRr1vK/cVdDoTKW0LFQRJGEv0\nG/doJdKCccqtGmqr/5xecn92Ksb2f+RcWE4WssqNy8Yux9Or2O08YmvzFr93\n8dNQqSVf0Ik4D/WOPkpIqoq3OJmGETHn8ViGWCXpWO7qEKZ/Mq08vkkFji8d\n90JB3/c6YWEeS4ijQ5NJKDUpijkv03oPwA4WVht7/bARBGWDnEH0t3c4KkF4\nqHXlaKtu/c6PlKEETUiG+hRbgHYlGSauvM9+EbTad7F02zKe0hRAYnVe+7Ea\nF3aHeWlcQZSjl2pMiNXUYwKlBsPyxnvhO3dmv7K5vIncoyIAnjIL9IJHVBI4\nAI03Q2drqH6Q+rW1byHGxVvj3y9Osi7JBU7SGNs584pKZs1MsEeQJQiVOoGP\nUsEX\r\n=RQyA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICRQNCE4jqCncTeC/0NNIcJjU7XveEPPMfF1J+2c4ElSAiEAwKaanVE0h1MAL9dw1SkSOFy/GxIHWwgkOPRTYrrl310="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.141.0_1643291180465_0.5426354543698997"
      },
      "_hasShrinkwrap": false
    },
    "1.142.0": {
      "name": "@aws-cdk/assert",
      "version": "1.142.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.142.0",
        "@aws-cdk/cdk-build-tools": "1.142.0",
        "@aws-cdk/pkglint": "1.142.0",
        "@types/jest": "^27.4.0",
        "aws-cdk-migration": "1.142.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.142.0",
        "@aws-cdk/core": "1.142.0",
        "@aws-cdk/cx-api": "1.142.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.142.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.142.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-4JC0LaiC9UDAyPKs70gJhIZmuRWujj2mVXfcjIEckYNkjQz8IyLcmcNGlx0s7kyTZaerwybiTPj23S3yYhWSnQ==",
        "shasum": "64dd65e485c41efd334d947280e1f9f7b2ed219b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.142.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh9I62CRA9TVsSAnZWagAAAqkP/jNLrmO92hgDLZzClKYA\nLKaBkm4eXDN+6XBHbEhwaPYGklSA1OwzN95F5rWvRrBENIBEkL59KVcmTo9O\nXQSnlCOMYYUuU4pYZWElslBbzTEmsDd9BUCkXbE6gFr58h1LVSwysnJeQYk5\nZCPtW9nDQuOTm1aO6iBD7/3ttSgEI3ZSYFH9kZg/qV3vAs9nrBml8t8OS1Di\n26FH7Qary7kx+WxtqVkCYc7WTGD7tLf++z/B6xnw8ExgymNEKjhBRrAx4Ljt\nLH0TvDs9a7Kc2tvHvDlbvJTgTdiwd+1FK1HEWlfwIMCJbxl7nNzRAM3p9FH0\npT+MM0L9V9UgwyKjwQVeXCvuCqQM0Frv9pX1f2xw0o6ck26//XdNRtCtI/ET\nkSDhzUCz4QLyClLb2aKy7TjRf1RYRu1GnlIq1fnPjXxXwgv29nAriBcctGlb\ni1iY29Thl4hMenTX5PG57uTXq5rDv6POVqSHGMYfK0wIzk1DggPzesOyJ1xn\n5HaE63+0O5YW+Uz2rhUNlS/VSay0FCj7OKEGN63eFRCn65WYeR69bD5UbBaK\n+1QC6FT4FOZKgWEsWIQ+XxIN8sFCxicttXfkhrKI24nu710Hybo/kklOmjje\nQLzy4beDU3eMEzq+Grm3itynppU3TOlYIDJIILs+Mmq1+Or4BVbh6ISDLdnr\nz+zi\r\n=jzSm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDOmpX/O+v7cjDbnhgQO1bG0A3C8Et2bHKiDSPzieD1cAiBGJY87VqdluAjjypHOM1Qsh67fx2hgA0WYZ8kdMlcBMg=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.142.0_1643417270299_0.040920057866022264"
      },
      "_hasShrinkwrap": false
    },
    "2.10.0": {
      "name": "@aws-cdk/assert",
      "version": "2.10.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.10.0",
        "@aws-cdk/cdk-build-tools": "2.10.0",
        "@aws-cdk/pkglint": "2.10.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.10.0",
        "aws-cdk-migration": "2.10.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.10.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.10.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.10.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-1Tc9f7Zcnh9unXIMAPBgFT0SwrIOWbXWFrEJidH59hUYPkJWJ3BoLQoyH3ro/UIa/9i+ZxCzE52NMdfGIQkbXA==",
        "shasum": "b724c1fe09c902f39fc82aab9f9cb9552de1f352",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.10.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh9N77CRA9TVsSAnZWagAAJjUP/RFd8OtNfREPfMIRQwWl\nRzN7TlE8WsWvctqNHz21kAHh9g/BFPl/xfk4YGZm/8vdUR923zbpVDTy2h+w\nC4twcnfhHlJUP2i6MYbinsnu7w78KPMRAyE9zcyYJ9LFR8FPb0aZ7s0x4cu4\nAg3AKqr9epT4pZWuVQRhlu+1D4O2zbjAFVXM7gPAN5MF0Q8gWZ6HoE+eM2oW\ndgss9gBLtG4kEo5OGP+4ndbHp44pkHI7hFCmCnaZCz5pMZLRt9m8JgEH+dOJ\nngB9B18ZScIn5osqa1QWBH0hqOmYYFV0r2AhqSAvEu99SDgs1qqyW9Xf0Lve\n2r6HG4eAC5wNfjhNewmjfBfo+l7mL9j9j5SAN200jKmZ4dUcH7RyBZAUG7rC\nM41qDTlI6hS8PthTPleXQv8vA417kRFj5/rkSQCJWBs9j8arpYkvvuYWGt+C\nJQFVegAiaXTpw9LPrg8OSwjVypJNJ2zJFXp1oiVnT3HgMxPiYy7xZ288NsZT\nEyihiFSFmFK7Zi/zuJALY89qd4GVh6en3GujegR7R1QT8n24A9eUQtIZ0UGs\n1YxRbehyNoJCgeC9LFL1u7ZVYjvR6ipBW1A98DxChCDQlfceW4KclK1eKdnI\nhTXLpj0anbb7Sca6/CnKmUsn2ii2hNVr1ZbfcVlYvLHaV8QozOrNN+4jFzWd\nLnOS\r\n=jlvS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGmx1LU/wPvoq1zPXXHiaCr6l/cPpQ6vRg1rWfjS5y5UAiAO/XH4rDVVWPo+4oMMj04yIrI8V1BgdHvMhFZRywaDJA=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.10.0_1643437819639_0.2790509661412808"
      },
      "_hasShrinkwrap": false
    },
    "1.143.0": {
      "name": "@aws-cdk/assert",
      "version": "1.143.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.143.0",
        "@aws-cdk/cdk-build-tools": "1.143.0",
        "@aws-cdk/pkglint": "1.143.0",
        "@types/jest": "^27.4.0",
        "aws-cdk-migration": "1.143.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.143.0",
        "@aws-cdk/core": "1.143.0",
        "@aws-cdk/cx-api": "1.143.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.143.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.143.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-oRzKOlsD77iW0Nq7QZNL33LngkfZIxoWMj2KD2IfbOn7YzYC+3msh7OZsj8BDZMIm++5xpmkcs77gJLKiKtIJw==",
        "shasum": "2abc1cf86bb4e775c5b84cab0901520ddef7170f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.143.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh+n3oCRA9TVsSAnZWagAAGogQAIb/hRWl2o0jYUI+ZT5f\nm7ttsBsBcB9CVIza5FyKilOKchKylzJLzwdhWwdqwnngSPXbBLeDddHAiI7W\nCy7KsOaN2VcdAPHUJn8VdQsOcUjKMc07xCl6L4EKMMWaGKvHLoAOtf1Qcpl7\nB3LEQ1MhjxC8OyE2cECq4RyCgCfUL1RuEEUajtnp5PL5Vm+550036pdDMNL4\nEgoiUCGuS4sLmnX2EguhyFZqwtMbWAHBTcjnnginWH4SqHe6xnHuYqmKMpaQ\nG7XftEvVjacEAwu3Fn6Ho+bIbwLCQCFINxd3mRGTkB1bm/TRpVk5Vs4pEQCx\nMMn5yM0gsKiwniT2FfVDQ+NMnutDCwnY/6+F0XXV/hjYSA9zOyQdlNz4dcn9\nojLAFKDpfG++l4iz5YMP8nqcA4rEnHBJ4u6QiVpYUdBeWE5wbsKGQr3tj2mX\ndKVr6Q6Xe/BMS9kRRFf1XxJu9T83Ihc9NjO1CFeZXKv68zyx9N4LS6d9SF86\n5g2UEkZbzKJxSLp9MEyQtszpX6f1p0hxTBCurl+FcNuG+6pZJvNVHVEzBJxH\n0hqOIHN5t4qANYrbEBRlLBSNbHbEoUAVGBG3161ReMWe3arfOO3d6T/znmpe\nbBZCVn+AXToc5SbXMCkbwTH9M3nflyt2oWjKdMgv1lZAQHY2scFz+28RobvL\ntWLH\r\n=spPb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDyIr0iu25xhvZWegEdZQUhmOd22xd/5TCb5uF0o10PzgIgQEYBUH3q9FGf6c2NrxMD075QuWFcNkqNfmhRSwosHCY="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.143.0_1643806184381_0.12547523212358502"
      },
      "_hasShrinkwrap": false
    },
    "2.11.0": {
      "name": "@aws-cdk/assert",
      "version": "2.11.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.11.0",
        "@aws-cdk/cdk-build-tools": "2.11.0",
        "@aws-cdk/pkglint": "2.11.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.11.0",
        "aws-cdk-migration": "2.11.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.11.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.11.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.11.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-9aYhV5K6006vI70K+ye8aK79bQMoicfoOEMVNCHjjFa+oFym3DvrNA/fE6+UWXGpZi3MgvkzCjas+MGfL/21Sg==",
        "shasum": "06e9fdb762122d25dc135382d4983af9fdbc5db9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.11.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiAqTmCRA9TVsSAnZWagAAllkQAIfPXnJsqaQUvF52jxg+\nEqKxp+nnwoj9tC+43XPmgdwZ0xgneSGp2jyZz3HdN1PTbkTTKIe4Xh+lxYNi\nXE4vEhFe/akGqfTVnVETX2Gba1OEY62UJwYynf9aHW5BuGhBUIPazM3THzUM\nsVVKlZYPG/Nt0EKpmkYoZbpI8+0HA26FXqE39xvXW9ITFKTXsd3i5xOs1Eog\nwoWiOA0QLmPByEnCub7JN4pi6SZart6bcQOpYcrR5/K9gd1p7WCT3JxPyB1M\nDdjVlhOnh6JcxJQHJ2wK2Nzrxwk9ENaZxkPcakYkhJZjhZgev9FIsXeo5Khj\nJLyOcZfyyr03/HPtBEc2DoG+WbCj2aGVyD+4roEWcLrbhcHKjR0JdeVdT5Ah\nZHHiIj5ybxIJB5O0kVAIyJpw7WQvVolcPk1itS8kR+1duIssAxsS5hgF9Bed\n7zbqi/5dZAzh8dVVMNCZdME8BvKnBuj5m0AQijxKxdL+crzSsyE4iois/5eu\nHisSxSGUHsWQPV0GerSoCFd2tpv2hANhjaaIwV+lQAbvob/ucw7dsZqFMJEi\nxn+bVSkco8GpiTm0VDhal+uzyd+VU0lebUEiq6C/ZxArEWqz+n4YM+SMsYx8\nBksBd3kJiBWPy9PbtmdX4glGRTicC9reY3k6qEg7xC9tfD+fwggXLW1W9FMD\nK9gD\r\n=TaLM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD/AUYzkZ3aAtsAo+LVvTMXVMjnB6oDXk4f+8CI4YxBdwIgcdbSAL6vtjvjpJs5NcpGPh6r8nu/vhcvWZDnLu8U9GA="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.11.0_1644340453772_0.8170599445256959"
      },
      "_hasShrinkwrap": false
    },
    "1.144.0": {
      "name": "@aws-cdk/assert",
      "version": "1.144.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.144.0",
        "@aws-cdk/cdk-build-tools": "1.144.0",
        "@aws-cdk/pkglint": "1.144.0",
        "@types/jest": "^27.4.0",
        "aws-cdk-migration": "1.144.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.144.0",
        "@aws-cdk/core": "1.144.0",
        "@aws-cdk/cx-api": "1.144.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.144.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.144.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Rtlef3GoqJ+/TbCtxMNsPdTQ9A8FFNLhaLaQL0q+L0n9I4OGVwDKaNSOYXerjQqbL7jJ7bMP6a8/54sgOMLyXw==",
        "shasum": "9cdfe7b9ac83d911f4568791ada1105549007a26",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.144.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiAuONCRA9TVsSAnZWagAAgfQQAJQ8fed/m8svSWEdmtHr\ndfWctSvVJ1dS8i459S3S7sEsf1jvyetGsRd+BpAgoMuaQfel/MDQEzoynycw\nLtjmgS1ZLdyvpCsLGfUPuJP57mBzHKqAlGSW6a2+egZqUGWKnVwgAcnTWJ7U\nyRXJiN5Gb3JmBSKqEx2+HZgZhAqpBKrQdj47ew66DTlSWXLhq1P3TGMXj4EU\np/XHZNFO8l0ofn8JIQ2LHpPqdgGUDAB8BjzNVm3LHrRGn4WDE/ewKMp5Z1nc\ngkoaZ2NH6FTmXy/Ngh5uW7GTrnqKv8oyj5HDZk91N+TBT4gNYl8ugwbuRQUh\nPv+unH/l3/+p4/anHU7nSYeaDoLmcyUqgurBUwgUd91HoGov56Ru0oRvt2PX\nFlhurtEAMyP3Y/gbOU6VscNwH/K6wT8qvdQha8dd8JTez/ZgBgaksiFH99F+\nVhFy5VMv3sj3GL7YKFZcmauMtgbaK+Cd8GRTFJ6jN90f5nF1rCAH9pICL/gK\nz7ofgBHlHObMkKieMs+VdCEcZOiJWK+eDRVS0T/lNMpdl6NZILMAFRDTHyMn\ngbuld2EjlnxMPk+QOTWorIL4PHg7zOJuIqkpFJ5DBNfeJQjSJvfPENljMIcf\nbIP0rnJH1t/t6vsRr7952tbLWys6dVFerD4ckYJQwFYNkndXBUMEMhkeoatO\nsYjl\r\n=97kF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDPdJjHp/a26fVvIAxGg18rW3+/Rrghu/jDQ7pj8CR/fAIgNi2kSP729E4WH6ZkGXlNmziHXpEudJec/s0oqDHXtw4="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.144.0_1644356493348_0.9079194629049208"
      },
      "_hasShrinkwrap": false
    },
    "2.12.0": {
      "name": "@aws-cdk/assert",
      "version": "2.12.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.12.0",
        "@aws-cdk/cdk-build-tools": "2.12.0",
        "@aws-cdk/pkglint": "2.12.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.12.0",
        "aws-cdk-migration": "2.12.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.12.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.12.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.12.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-CMwwUJu2KKBkfBcw34Ilf0ckGGt7vPw4BuZ2XftQLCVcdaAiO+SHTzQns6GfideXkgCj66levIyklm7Kd0KNrw==",
        "shasum": "dc663f4b0ad388814c1400821862809c7f4532af",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.12.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiAy+RCRA9TVsSAnZWagAAX0IP/1ZzZgIluUCYOxdu9Z6p\nqbXxw3OE5vBJnMl+B5+3NMzrv1usq85YidQ/EpObgZK2BKa39U17ChKnk4h2\noxHK5us1R3s3gPnxSq+e/TyZxJunHEdbettU8ZjvsakoYO7LuMt3w0SxOBe6\nNqijH7IP/A7L9W7EMT7UI9S8EkGRmWyrjkRp5kDFPqBmk8Di3iFjmp8aT3Vu\nvSEx+zTmrR9gS1k/ONlO5ns8kvHcXsqaAoKKAr3vOQUOjhN85fW/VrPMJX46\n2ASOToLXa1dL/M2aqJ4vNuWUnFxdAB7G1xx93D50FNuOHx4XZ2UxpdwzCzdW\nJbrvYCeVl10w9BTunKjiNQFeND1FltOMfXtrvHtFaPthOM3bhCQkftfsyL2O\n4Yev4/o16Qn7I8kkUZDf687GwE0iSRGPHFMmqG6CSlU2ScwCVfRQd8H+PbQu\ny34nhrxbMfTMKcWhF8EStFKpYwQ78+1a3hKVUih3/xoBQb+vJ/0TZSwn+2Jj\nY9QeUUvhHHVl0NXK7FirixuulQcp+0s6TAyzlWLklo3udHraM35tTddBRVOw\nOLAsWqfju/vpD7u8/3h8LZmBwEL7RDEHESjRiTGj7NrFqeC/h+qAiIzJzwIg\nxw+UNprwjCQivbrDIBvr5t0JB4VbTfgyPUA5GfGJlFQRtTpNGfl5j5iftw5I\nEKnv\r\n=NDw5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD+QV9d1JGWBN9weaqPLYfZsBmkO0vmp1+tvJldTiVP7gIgG3BncCCcLTVb8ux4yEbEzBM9o75fnPFARc0+2JLWIyg="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.12.0_1644375953586_0.7017772088511927"
      },
      "_hasShrinkwrap": false
    },
    "2.13.0": {
      "name": "@aws-cdk/assert",
      "version": "2.13.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.13.0",
        "@aws-cdk/cdk-build-tools": "2.13.0",
        "@aws-cdk/pkglint": "2.13.0",
        "@types/jest": "^27.0.3",
        "aws-cdk-lib": "2.13.0",
        "aws-cdk-migration": "2.13.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.13.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.13.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.13.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Q4tRx/g/XWbqLd/L1YgJZTXWmNbNI161RYl0CmwkTRWm1rKQfgkwQ3VqmxjCxcT9gQxJBzKlSe6j5tAG1UpaNg==",
        "shasum": "631bf5391d6726783b4548c0403ab8490c1bad5a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.13.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiEFMUACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmphOA//dQlV7jjsYxviw3iUPqhILCT85H/Awww8zcx5O209bn0AWKm8\r\noRWx+IN8VDRwYHIyDRQqaqyxNWtRc+by2IH/p7q6Ilt6R4cyuVjZkmhtlO3F\r\n4zjNA/IB0CL+Gv5cYCPrTiF2OqwWXGmCiWFSQwi8l5BE3cwaL1qfwmcnUYYx\r\n35CBaoaPU9x9d5xhSOcbm8hv/RxjtFJ8szsQgeeQUNksW4sDhKVUvVZoLOe0\r\n5crYGPQU6Mt4RfrKti6MTSVCszFwmFwt2oSAYLq6z+jwwj+jgiuOxM0aBWzW\r\n4AyFiFUJO/2buaWdu9hGNbJ+NsYrBR2BnELRFehvshcpuu/kvBI/hDWWj26A\r\nFcNpqIYrZ2br28/Wt2AGGxx88LMZw/bmbb460j04B3diW5tUyRxmMvWjMV3b\r\n3q7/PYTb+NmVFmbjFs9LL/wPRfoD2tXVg1mPJ74rmXa/KYB+AQHJJ2RiPFNQ\r\n013ETDlq31oua7zmWSGYWeILVx92+gU+Gu4dnw+1vmAlRpz5QBRTD0tIomRn\r\n/J2ng/tkBzjYxRPBBeGspj8hc5AQ+6iWBnsZ5QK07Ye0Wgh5hoIILDWGmhDs\r\nGowNKx80UgVKSWaoXn6UWAywc4CHyBARU73gmWdZxQ6ZJ71aSjSZpKI61BhC\r\ntS4i7OUXwS+7VNwFPNRXQAbO39M+lUzIb+8=\r\n=0/xr\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDDbzDsD0ssGY2DLIXOHkE4sKw15OBYsmKdJzb5u/uNngIhAPKgAxYVnFbM+af28W6u1l17B6vPWLAPRszS8V+ZeZew"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.13.0_1645237012501_0.21832869636095475"
      },
      "_hasShrinkwrap": false
    },
    "1.145.0": {
      "name": "@aws-cdk/assert",
      "version": "1.145.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.145.0",
        "@aws-cdk/cdk-build-tools": "1.145.0",
        "@aws-cdk/pkglint": "1.145.0",
        "@types/jest": "^27.4.0",
        "aws-cdk-migration": "1.145.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.145.0",
        "@aws-cdk/core": "1.145.0",
        "@aws-cdk/cx-api": "1.145.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.145.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.145.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-jFxl938cUswXCvj1Mb5av7uHEGud3X1hPPRSGVlrq/XBtgjyvMkuU4ptBb6iM9YUJ+C+duJ6Xu7A6KOeRYLP/A==",
        "shasum": "9b0b2d7a0778bfde1499aab51d72e3266af6dd13",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.145.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiEFSJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp7VA/9F5Tk353UrRJkZRno65B0GJoDJopR0rtEtFjywxEhBX2XSOaw\r\ncYciXhw08t4dxV9CiLxYKOHhJk8Athvt19S9YE3/YEHi9Hlji7h5uvm2JM8O\r\nQ68LTuo4GvNqqJE8bNlbR8rMo/IaPS57631Z4+p1PewlbzXr54g7lynUahF8\r\nEW8SvQS8SQovDT0QGVa7GcsKE77SQJKAI/9ZQxaArUOGIiimRQfFHWer/7dL\r\nBKODCGYtHbsFOAXru/n2qxI5rA3eTZLZBDjYqrDGKJiPDqGPoqvdwr+TJyYv\r\ntRV/7z+VmTQyW8ylvcVHxQjpIfGP96YPOyZjmUDe5sWEZsILpSdmTesPgJKt\r\nxdpFTO6xEFon7qDAhng/y440To8kcP73buMbgPUWtJUPpd3+Bkx7dA2s6fvI\r\nTPLSN2aQa96MjQlCUj3Gb4YmIeQALEqeVIJs5SlkmAW4htO3qYIA80HGpdIh\r\nfOMtiDr2RWy7GWgV2jkPQBKtxO3mrROmxnRXmKd51dwbj7m06olD3gA35xRY\r\nCkF2EM2Jdkb4G+Q2llGtgWsHqvZXmOT6/txuqTXAwLNV5FU00QJus7c4UZLR\r\nBoFy7tlQ2xUDmf959JsPk5qGDzf8DXXzEdT0i4qy395AE1WTjQKhS/9fQOOK\r\nfQ2VQAZ2JBA/eKmsBB8w14Sr2EjTdXix7Eo=\r\n=nj8+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICBpZkt4hKx4czC0A4UWQnI84CISxmvTprHZtUbF7kP5AiAGzpZ19uXa5MF1AupjKJCgu4EiCpPwrAMHufUrkSH0Ng=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.145.0_1645237385586_0.045539656487660896"
      },
      "_hasShrinkwrap": false
    },
    "1.146.0": {
      "name": "@aws-cdk/assert",
      "version": "1.146.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.146.0",
        "@aws-cdk/cdk-build-tools": "1.146.0",
        "@aws-cdk/pkglint": "1.146.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.146.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.146.0",
        "@aws-cdk/core": "1.146.0",
        "@aws-cdk/cx-api": "1.146.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.146.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.146.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-bmAycaH8hO8Vtv5d1p5bDRDI+/X6Dv31JtiaN0fomQTSDudYx0/WyS1ERp0PTE0tpsQu0q4TMdL+AROFrpnyZw==",
        "shasum": "f6a054b853bfc25ddc6fefd4e6c5b87bde6054c0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.146.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiGC/vACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqkhg/8CNL6mEHFZOhyn8//Yj3v1Rgc9uci5buq/Jf3w7Tk2iCNmxbv\r\noF7PhSPbXgl2olIUnz6IyMghLqlC8YUvV3R3J7CIbiKkUjOFMwAj1PXtsCwW\r\nDysEFe5SsZbsaETXU30srPvrnibmoldRu5p9lxyk/u1Zjf/pIIj2l9mWpm9q\r\nw0Z5vc2x8FWErNsIEeuxLNQfu9lt2+pyR/z30lGkOKN7RoxDsf/oInnh4OAC\r\naLso4mmJ/oq2LxEtvqS+saYmpSHi80cyxN2q1RvNvIeIvMR+MpYofbcJ2B8R\r\nX3H2pgiZKN8v8lm9YuzGHQvX4G/o84RJXZLvTf3wf1mcXIhppb0GLpMuRk7u\r\nR9IxaH4kK2JZHLcXTQ1var2cFWBn+JfCke1hBtGQi66nLGNMTd/JNJT2osxP\r\nSPQ6cNUTgzO9hXUXGnvHiR7mE4+sa8b/WohhiZAlonpJSs+1YjBfxTiBZ4xo\r\nmrfm7fnATOMSHsqZUILz7oc+MCJzGvj1LQ+uZNh1WGrbsTLpZDTHb82CxZ6a\r\nAMVOomtrBUeSdEUcscwrYZGlwwXXl6kaFwX8BPwwDtUTjybPtrwrgCZfkMum\r\n9S44Vnwr0rEkxOOR/dT3xEiAZOCJhDfh6yzm85ZyQMzjlqq7CefqlcEChLzr\r\nVHIewF44ZNgeZJ7rAumDydRDl+OCC/m8m4o=\r\n=KIQw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCbVi+qos8FlvBxtw2/1eABTIAvkwJhXaeqb5a0vVyeAwIgQfdD+l0luaMVLsKJZfw/Ex07Dkfi60l8lPfFf/zu+TQ="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.146.0_1645752303570_0.6213062751421257"
      },
      "_hasShrinkwrap": false
    },
    "2.14.0": {
      "name": "@aws-cdk/assert",
      "version": "2.14.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.14.0",
        "@aws-cdk/cdk-build-tools": "2.14.0",
        "@aws-cdk/pkglint": "2.14.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.14.0",
        "aws-cdk-migration": "2.14.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.14.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.14.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.14.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-gthfK5YUAhQVw7HGvO6M+XlyTEtlMu2uKWmyXsAlB8ZVIivcWVLW3K0gykJIJnSIFO6S/pTPCPMUjMcf7T99CA==",
        "shasum": "d91b0f301f2dfed81aebc94b27a08195e01ff2a7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.14.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiGEX9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmry9Q//UR2Vn9pATmLqhkWFZ2P6lM2oAhyln/FhCcbpKRhMZPqYdB+y\r\nQFeFtAacYzDwxn2gSghVIWNFNvqVkBU4pfNXkXvJhFTn++R3nllqGCxyhXKA\r\nLLJFv4izun0oNI+4gw/DED7fZVJP3UhuN5M2XhDzQRRxsH6qO6OFq18Is025\r\nOeldsJ7OUYvwOp4441XB8KrFgsKBJZVXHNvjlLfWv1FXg7wcbMUgJbBZl0LT\r\nd9XoAh4zG6B5c6hCWXBhkPkcxaJLy5/H/TUh8whwRIdisQ1aQ1EuPTQBCuhK\r\nmI+1qt7IF3TTFxURNdz8hbmJwou8wgvJOEPipnKkvzAzjs5gBAmuiObOkN6o\r\n+tG2dL9DrPeomrYjgoQ9DWf1sURAdO1UTfvgcgs7ufZlI4tWHo90B8Owjj7D\r\nmqhhd7Pcsr96JZV2yPCA/twqkr0OQvumJTSRb6OCBCgUT2S4AGp3Vxbg0O12\r\nITqUFHcNPpVfc815+DoRSokSnwEQYVfifQt4DKHaSSxhwCjq+UN2GkuB2I+4\r\nnZWRjPtBAnbDBV3MMHDwIQtUhb8CeHr5Zd1w126Ne8R/LbORFoqPdLBKbw+6\r\n/UF1p5wHVgHld6i6mVty+JnBAd4EfmWUSLY2G8P/MVVBrp4KGg2FqjOUHghX\r\n11+vUD+sY8YKH9+13f/4YMaFzbaTBOY50TM=\r\n=HqTe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDlmDy6xI11P343JfK7Hw7HBaJf4K5RDsVj+jweRLQtQgIgJlV0OR/r6srlrF34s7lJkxDNSkbkEnODPMMblnMnONE="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.14.0_1645757949301_0.5450892442739015"
      },
      "_hasShrinkwrap": false
    },
    "1.147.0": {
      "name": "@aws-cdk/assert",
      "version": "1.147.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.147.0",
        "@aws-cdk/cdk-build-tools": "1.147.0",
        "@aws-cdk/pkglint": "1.147.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.147.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.147.0",
        "@aws-cdk/core": "1.147.0",
        "@aws-cdk/cx-api": "1.147.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.147.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.147.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-YMjimN4DUHe+VGjNLbDZYMv3isklQpfSY10BzdEW7+fn2g5/TkbJgwvUEEN3fyM9vPp/0daeCxcqHVlCdPCtzg==",
        "shasum": "66ab7c5e868e4ccf891c62d212ddb3348eeec3ed",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.147.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiHaGHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrNZBAAm20mqfoUqvB1YGZNDm6K3eyIC/AteN7uSYtl0/YKr7n5FOxA\r\nD+hj8argFZVjOtsLQPZG6lLq8TKFCWW/rRsXg1DehHpA5VzMBTNTa2duh47S\r\nSml9ZmfcIXXio7/VSNyKdhwTWaa6yllbGyfeuAila1bzGRK1InAdm57A7Vvi\r\nE3YRJgO5T8LHGagpVBNm9vrPol5DhyIZ2bpuhasCZzw8EPNXDmG9X17OUE11\r\nOMhc4zjR8kxjexo0bC2Sj0FXzKrb0wJTnp2QQ0lt4pcJ/90CBT9HsDuIXTXI\r\nkGuOX3H+lTKmhfrsLILi30lXBRlUHZGrb32f1SgCseUDh2M9H1v8a7bVyBGQ\r\ndSJzzWApGP/54p/AI7p2Y+GAZPVQlllzl2wc3iwoM/7KkZ93S3EjMC/ZrXH+\r\naa/esMbxIjrkFxtl93ER3jVy3MLD4cqfnpwU5vP34cANPv8aw57eyfsJTb2k\r\nZVJpAgS/ylWRJbpWV270QbpYRAbd6wWLLkN1ur3K7frL3NhR6hsuHpCSt2vs\r\n95xmekGevKOHJWpN0OJmyVaSUw5adZGhesh75EsPw4jVg6TI2vf1WuY14HzO\r\njYYoTCI0hhFlK9sPVDQgHfkiq+3ORrxjR5N/eDLk6pb6apcvdTsexGAl8gjo\r\nYiEISRPbfxTWFdNeN2/4xT2fmWJnmu8TlpE=\r\n=aOCd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDzwDi5BuxeLjtYycx7dUz71CrEN/qLZmKbg4iF4M21OwIhAMSK5uYh7MMQpneFnKBBEOGFJLoFw+YLRBPlbBtglgau"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.147.0_1646109063012_0.5713919383430184"
      },
      "_hasShrinkwrap": false
    },
    "2.15.0": {
      "name": "@aws-cdk/assert",
      "version": "2.15.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.15.0",
        "@aws-cdk/cdk-build-tools": "2.15.0",
        "@aws-cdk/pkglint": "2.15.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.15.0",
        "aws-cdk-migration": "2.15.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.15.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.15.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.15.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-ttuZtPyIEtYTjJUz9oC9Erl/6G/Y45QNGvWNqxEIFajUOuCHHd0vrJjuLHmm2qLFQf1VqLbQwgthwWTFFMz4WA==",
        "shasum": "a8a390757164aebe93168e5084b8e7fe93d5154f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.15.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiHcctACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrviQ/+Nd3a31R/fACDXc2TLw0y01B1S5NtDdi3dfsP9YGBCZRnw8n+\r\nbs9u6OD7MBt44aURCVVNHduMXpgcvxvku1u4o9ucT4iU3TgK71rWlMkvcHQQ\r\noqjXhRQIr3mqm/Y/DTHvcdhtGwyqIrgq4DXZilAJU8MJoaqLemjxZK9Mvmdc\r\n7VWE9dvCHLAuATiPqpOnbZxR18NPZOhLU5gXJxfCWlQ9pdwxqJkRMnYDtKx6\r\nt+TfQm0IHn52Mp63ZFjE100Bnemqt+39oYghZEqxmRrVwIOWuWYgTBuFF/BH\r\nNokXJJD0VpT5ajThF2PBVrtMdpcZqMLWEl3OwnZKGGFpb8wt0I2oSLnbbXDV\r\nPOlY1UEsWkympPXx1FM85Fp7TQAnoRte2HvqWDAxJ2v3XlkXU+krouCbZWZ7\r\n/zrWbnM3k8PztlzgtsDrgOT5D7R/Dxv9++Yo8dL98fvOovW2IT8/WF9/aUQX\r\ng7W54cfaS4EmHfJYe8HJ7/GRePzMp1124AHZC28enLgUzsHapMC3tE48leJo\r\nCKZIVp/nBuskx0QKORN3COnLEwUetc55YCyJ6hO0tBPvPSUlQicoWafyIZB8\r\nRXZn2DDN9JgDzw3Rt4iiuYookvA1HkJbX5+MCfhMBFzyVsEF01O9YIf5r8Wb\r\nh5VHIDGNS/KU6xKZx7LJpJWXthdPHlua11E=\r\n=ueVR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDPw9mgbzGLoizmyBW6oB672m9gaPd0Cbd5envoJ61oTgIgKyDguorlUeAfe52YEl+sEcVJYBBHo3E1md1QuPShNWI="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.15.0_1646118701767_0.7019160418599744"
      },
      "_hasShrinkwrap": false
    },
    "1.148.0": {
      "name": "@aws-cdk/assert",
      "version": "1.148.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.148.0",
        "@aws-cdk/cdk-build-tools": "1.148.0",
        "@aws-cdk/pkglint": "1.148.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.148.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.148.0",
        "@aws-cdk/core": "1.148.0",
        "@aws-cdk/cx-api": "1.148.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.148.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.148.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-sWluERxt23lOlRSKiJAALnC+ej4SmDT03YHefDPw7fxmZrrjzVzCRORpCNfREQJ0RnfDPJPXYTcp3y7dPPTEAQ==",
        "shasum": "09c0f969c51a14cc1a1dfbeb3e1f6f6fba3e77df",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.148.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiKX7iACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoWQw/+OXD8MUl1q2maeC1XyJIaqzbQFxxvgB/C5esT1aQp3apxuPcZ\r\nSo4QTKKdcWSKDu176pLiG14G/7/1Kq+34D2hnS+c43aRUxMC2tS2IwVsKE1m\r\nsIep+9ngx4+z2c0n99JI40QI4FSKOhbaPlRdPMrdZdfAGzbufw5K96XoPRVv\r\nTRZdtQSy2UIgDhKLXi0psjxG/1kfkg02MEFGCjbpCXrIJMnvjrufe23YVP7I\r\nOWNs3EReHtpcdQAgoW/cGp/sxdpPqUixpYWeZt0JY1VvMu1VlPH5buWoCUOf\r\nfA4xDrLuODOjARrpj3YFauIxnYteqJ++mU+MX6T22D0Aiu6B/HMV841IZNuK\r\nAS1v8uz7yjnYCaB0HnR2osIpsrNTF4CD7d10A3GXnowXNwcDNf0WZzlqrp0Z\r\nWqCCs/O5XEF4KtM2hjhCOLS2LUPyw2KEVq2+4eJIe5oSaEnQc1RRS1Qcqg1j\r\nOcH68KhqYp9vY+4q6aPKrvGhlUxvHhzRzXyF8rnL4e8bIQAKyZk3fxQSa649\r\n1RH/6XvAP6n+HcM5AH6JDZtUNCuncvxYR4wgvChKVKWeQD/bhOL17/yBIshm\r\n/f4QwU5cL2MFxtKn16e9FhzLaRpybpl6ShPLjz3OQ2H2anFOFYh1Nhe3NJKz\r\nyDw/b+geyJCgr0V12BR8RMeyTTkUVa3zTqY=\r\n=y2da\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE23+TTyYyBQ14PsQJEEVpgrWqbudSK/c1h3EJ8zSCZrAiARKRXm+lZvK8umC4AjCKEyWuekh5AiggDldQB8hZ6yRg=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.148.0_1646886626200_0.585370898045035"
      },
      "_hasShrinkwrap": false
    },
    "2.16.0": {
      "name": "@aws-cdk/assert",
      "version": "2.16.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.16.0",
        "@aws-cdk/cdk-build-tools": "2.16.0",
        "@aws-cdk/pkglint": "2.16.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.16.0",
        "aws-cdk-migration": "2.16.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.16.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.16.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.16.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-CHq1/8mW/g4I2aXuav5b/ilegQfyu/bJ5DNiL/nrwH6KQQj/WakDGWK0IdGWDJT+e8BD3h1kr+kd3V91eqjlag==",
        "shasum": "90286a55420abfe6144d1d059c5b020743c7f61e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.16.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiK/UCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmovMhAAmLLPqrApoePPlsfTn5WnGqaRmCa//fbFabJ8f3t/JWSiwqW0\r\n2s60eZo45Y2kTIlHCO5/3IyzMroxl5PQvZROgmoPIjGQ/i/PyUK+PMuHZIHt\r\nbBsRqao44LenHNRUZM6NkghCzPis3003hi8S9f9KLdYXgQ/t8vxnnRpArEMv\r\nf33Zm3XAhq0gPlkWOmxrtaIUgR22SeYYDzTk7V1/5Z4xdbkXWAy/gHUT+yN4\r\nsCPr9agQAeBYuEbSnedE268ZCU643gyQNi/iOLD4qjowSjQ/mFJ2FsLiU8Qq\r\nW9VX+PkKm/IZskh4gRU+UNcFTZ8C2HKUzAwoc2ohDbQFtF8YYhJZemJiVsDK\r\nVjH6SQo74QBn+EL1x6jMqwaVT760ISGP5S88NIPPOGYVDnkC/9mryJbwyzIG\r\ngxxwDNFs7V8Wthvq4utIxkh7ng2WX3uRN2XGpchPw0ORrf9G/TacssqMaigc\r\ngbc5NCU7WrwrOb73kgOaqeimA/r24ioXcli1zClqh2F/WeLMawdRDM6thrCZ\r\nL9Rlg23XxeCQroiFXwANOv77RohJzgoan+7pz7kWFUaUFQlWitT0BmQO1cvH\r\nxTRLlh4V+RXYMDrIQ1J/3Jpe4twR1HKj4VRSEsm2VmnFOlZKo4CzYE5RbS3t\r\nSL4H9gfFkAzZkcQ6lumiasK8adUc94Qqn8c=\r\n=fMOx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC+L7MrmArS1EiCxmShj/8BXsP6sfI9Kk/tEFlW7oYRFgIgASWdarw/Q1WqDBsxUR8G3wL8j5XmMQRp5xKBai9Voe0="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.16.0_1647047938778_0.14825834806928295"
      },
      "_hasShrinkwrap": false
    },
    "1.149.0": {
      "name": "@aws-cdk/assert",
      "version": "1.149.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.149.0",
        "@aws-cdk/cdk-build-tools": "1.149.0",
        "@aws-cdk/pkglint": "1.149.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.149.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.149.0",
        "@aws-cdk/core": "1.149.0",
        "@aws-cdk/cx-api": "1.149.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.149.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.149.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-IYiRYi0xb6rYm5+oW6+xzIyIIIAbyo6DXjNsFPRWSTfM5/9ACmT670T9qlAc85S+TduBWWFOyZaS66/LekX0ug==",
        "shasum": "cad0cbd5c81ec1618e28a4781137175b2caf938f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.149.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiM0VyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrWCw//dn6XrHwjQbmgnsa2zpJk+m78cRALk+PFJKbBvMc64FdcHOI0\r\ntxqAtc+NIhDOKEqGvLMU4GTu4ZWfNZNDA4u0GqkwbC38OmdWxJwi+qAqLN3Z\r\nOpvYldAhNJf7J8JatELfx15zaAchsXROJvJZjx05qwEakqkFhpbp2CzAzi1F\r\nk/4+v+5KPQAYgNzcivbU6cTRnemS7iFmonRcaEDQL8E9OhBNLsOCmoImbHKV\r\nzcHT8iJPHI4XroxJwo5pFiEaeU6ac/tbzTfUs0aaXE4eP0wDIq/+9kwuRmY8\r\njUzZcwy9tzehFllafC+UALOkMA0TikdGDQj9RXqfvM/ZhpqYU+GUBiztAHou\r\nSIIBUNK+AOdcDJFPYyDQm5bKRr9I8OfC0IAtjPSm9hU6GtKgKjj79QMZz2UZ\r\njOK2IQ06ZicRt5hy6mjFPzgsWT10EGxGFv/YADtH45l8U7dDBxDy8OwKRZhJ\r\n7kQwYux1vAMjv0odPFd4hn6cdSNF7LgL5z8uqA++KCFht4HQVTVumQb+HKq0\r\nI0g9fEXcOx474qOmz5ydvBwYw19MxXd/57DOsTW4HIwQpUVFZS9tqQhXCINE\r\npeDs84AWGaiyhb2PgFgGptmwEL/VgqhS8jCEFuIX1+1VzErVAlm9YTQHg6Qd\r\ngZUMkKd8C4ZI6toMS3oOrx7YenEURPdLJp8=\r\n=Y1xf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDhWxmOVKhPvm9RiGDZlioejxpMXor16/OGiVqezIe6+gIgQcIGTLHtPsZr/khpCwYCkTgVLUmnxWdb1g8mC85AVBI="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.149.0_1647527282385_0.26613408684051354"
      },
      "_hasShrinkwrap": false
    },
    "2.17.0": {
      "name": "@aws-cdk/assert",
      "version": "2.17.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.17.0",
        "@aws-cdk/cdk-build-tools": "2.17.0",
        "@aws-cdk/pkglint": "2.17.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.17.0",
        "aws-cdk-migration": "2.17.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.17.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.17.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.17.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-KmdcQJKCQBvJ41gQeugeDQFWxAu7nN8R6DuvCWE8/+9npUlDoL3+pDX+jtwo9pphWXapXEIZh44DTV2i+YzHIw==",
        "shasum": "371dcc29f988e885fbdce2ee28df7932fb8df9de",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.17.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiM0xFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpsoQ/+OJCjWexdioWvOimrL9urxv4N9EK4SdY6DCjW3VBW+yNeOyyo\r\nbmpmdIPUTV4LYQq4Ip7DqeJ17RS8zY/xPr8zQUt7JdE6ZvORl98YCN+PH6nq\r\nai8FRDajNxcIJ07dx/BmPIalEMiJ5X0UnmvbFZ+/JRjf2Zvvm7PbFk9zRvqb\r\nycZx7697lqty7OlEAS/eJdVbkJAE/Xa6d9O/5/2egjUljKbj4iYTY2zFzjCk\r\nGOrUt9ipqJ3C0O0p84dJmdtsbsGtqKCb6SdhsdsVSPyb9ntJ9LEeFp1hB8Jg\r\n+5opoFrRum7pssTp1oGqBluZWjcYyBpdiiRt0yjN3Uofhz/LqDlULEzXhbT0\r\np/JVl71NoeyAvFXNhWetuMqGESIGRdREiwrlO0oAZYk9+jqluibvcjZHuCQQ\r\ncNIlHmrMcZqCSgwVk8MpAbYmncwgx/XGPZ9awWPl4o3McrHXaTEoQEfi/wY6\r\nBli2MDwvPWN6w5MezJkn/RZdxF9N6LwP/uZUQqDEt2dT0alfHMIj7TX7MTRJ\r\n76Ds7X0K+aPwD3jlH4XnekLqiGfDNHpubsuQhIM9Ye0aWfBlVEk9afPxeQQ8\r\nKyVqlsPFlYKyd4tg4BUDvTSnNq4FDmUGNhPpUB41KAzUa4ppFKFU0UTysZdI\r\nyXxxuwi8IOTI8ttmRIOVhXP16JEk/O1xM2Y=\r\n=ctk6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDIrOFWQYYv5axMiv+15pnvTgE4pzSOoDFpncuSfTE8fwIhAPW3brxTMKV0OA4mGSk7x8QkdEAj3sJtiIeA/4TWO9Ip"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.17.0_1647529029085_0.4783511977551762"
      },
      "_hasShrinkwrap": false
    },
    "1.150.0": {
      "name": "@aws-cdk/assert",
      "version": "1.150.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.150.0",
        "@aws-cdk/cdk-build-tools": "1.150.0",
        "@aws-cdk/pkglint": "1.150.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.150.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.150.0",
        "@aws-cdk/core": "1.150.0",
        "@aws-cdk/cx-api": "1.150.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.150.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.150.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-GmyPOQMMQInzA2YhKYAbjzfatiTNdFu6yfPo2luQnyaEEOon9EOrIs3yZ0W7tpF3JDFIbFrIeHD5Ha2G/zVk0Q==",
        "shasum": "654717d8e24d012d1dab6c1e111be74c958a32d6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.150.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiP10dACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpHAA//TDqKIfyERMRAQi5QHvhd6s1VtXDHxN1spsNbRpv5n7cRx5/B\r\ngnJOgoYY83WxT/6KDMbcZhFgFo2X7PJZoBIZ/MmawlYt4XUw+GSi+MNFU1rn\r\nqtAFlBm+1yoO663e2lBHFDxdg2W8azeKgZjTHBWLbIr3aSuePjhQsvk1sSmy\r\nbDQUmBdGMSW5vxprktaoTUdWDPNT5g9/v80Zgk7shNypKelCyEk1aovB4MnL\r\nry9qzevobAcMzo42bYQyDBDeS3979PW3izpWTAzMR3qDYUCdGYMjP1+q9Oj+\r\nDTrfh+uJpp2b6B9qMjCTqxpYj5aeoSddO4PXePA6qJkUxTjhidQyqSbVeAAr\r\n+KDdeEHwQgE+PDPq/t346vYl7xXQiyuSPDHcqqgjkpuFd4uTK8uCqEKaqUig\r\n/aK/qdakFBaOqC//A3xeLhH4/bQZB6qFp3Jg3NBDHDCEfnfYGoa4wexC29Pk\r\nXjVxJbwabBhOAPSFDXN2TcyU3Cqx0pa39hknE8iCD6b4+e6IoT0pvBMOcvot\r\nP518VLDc4Mm2W01xeFyaPu0/C17gII+XKnmrSZuFm4wlx/1Jb/iRMEN/9uCB\r\nYc0nxfonHlTyomQf9ZBbRlwbQN3CjdC+FExFHKyQ4ap1+wTNNs0xQEb+J9f1\r\nOFKE9I0W5T/ESTrZg/qn/nZiJmQQQZPmr6M=\r\n=CY2q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIC7p6XOGzLSH589/pSULxq+pY57IF6FmmGzTS6VE1Yq9AiEAj6zxyvU7vkEfKPT6X2hUx3sbFPw/GkJNNwLg3UjG3H4="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.150.0_1648319773809_0.1741187347710571"
      },
      "_hasShrinkwrap": false
    },
    "2.18.0": {
      "name": "@aws-cdk/assert",
      "version": "2.18.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.18.0",
        "@aws-cdk/cdk-build-tools": "2.18.0",
        "@aws-cdk/pkglint": "2.18.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.18.0",
        "aws-cdk-migration": "2.18.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.3"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.18.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.18.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.18.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Xh/F6LEYhf72uW444YucHvYzoLFb+l81X3MGCAfuxL999DR5mPLNACjdcQ7iQ+qcf7lARoTJq4d3LOXBToWloQ==",
        "shasum": "cfd0e87de70b4cc467cc6d324f6b6a90df2e2ab2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.18.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiQlmUACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmri1w//Y2BlG8Lok3fT2hUxAtEDxr/m9EUdexPyJWt+ow1RPW6+Ik7B\r\nunhxLtPZKTT91UYSMedOY2V4QTdpttxGPtxl7x5oIcoq29J4ocESxlUmNQ86\r\nD7OHw5Fl+0v+Q/NHbH5efJS2AGRvLrmEk0p84T0mGlmuLjodQMW2XtB7oy3o\r\n0L+4RSmfOG/KXMLNaSp59DLmULNeGDUGCc4bj1WYq2fGw5LTYcaW/ny3v7tZ\r\nt5dMRwHruQDHBhQHOzwrneBPVSnZ10qCD7OlhXgMj8D8lqYdhkb/0T6bPAn4\r\nShfKSpilH9hf6zmNo5Eg6xMs7KM/k8PBnI64aPBSFJDdcxolCQAkTAUd3e1r\r\nR7L1pguF84Trd48TuPk0rKsc00g+KkseaeEtN7IAj8uKpEwZq9tHuDvAeFPX\r\n53XN9neH10r8uM4MvluBF+7pY3E9IbW+tg40dyuA2TqP6IRNs31oQLdHLdW0\r\nbnfOfszjZUOEjO1Z8iV9bzcDJiiv5rwSh/KznVTutVCN8MCiWo6Fn2fk5bGz\r\nfohD/wguUy4oYKsdwvOcKkGOmSSzdA4uTnk4cYAOjy7lZ7MHWPSvIBlOd3cW\r\n4Atcci/durJmlEO70cZskNL4Nsh0/+jVNvAUCySBseYstprHu0bnokJuzE7X\r\nLxbkdicl6gTZytNGazoxhB38GBGk1RkEo90=\r\n=NQsj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEZj6DYFyuXZ05Hhe8ZosDIF6OsPgmFg2ae5+4S2WVIkAiEAqMa1L0FEWsqOr4wM3DxPu5DW30gPgezBT0B1IYon8NQ="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.18.0_1648515475989_0.31146073316876466"
      },
      "_hasShrinkwrap": false
    },
    "1.151.0": {
      "name": "@aws-cdk/assert",
      "version": "1.151.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.151.0",
        "@aws-cdk/cdk-build-tools": "1.151.0",
        "@aws-cdk/pkglint": "1.151.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.151.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.151.0",
        "@aws-cdk/core": "1.151.0",
        "@aws-cdk/cx-api": "1.151.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.151.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.151.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-n1OjUpoMPMkcx+4KQcdWMPsi0mznAVe6a/v/YXRjmS6n9WRXWqDBIgMM8d/BIFB90guxTI0mbV/Sv1MWMzLn6A==",
        "shasum": "f8427336cca8bbe19fa352fb33ae9d2b50a5cff3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.151.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCmWQK80E5CSZCXebIcjkT3iOmOt6fJcgyZeyFLdTOR3gIhAIo87EyW6Ds9D+V5YyU1Exp1GHd57ZEjCdlLYuSFziyx"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRnrVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrsnw//RG1XBZPE/yt6F8hn6mrACQQ2D3z/hiZqllwS+ynW4dtLOVMO\r\nKS1uZKTxMn3tsMIv0T4GXpOgFC3KS9JtizNP37GjSxgKgw7cuToHgT3wyhB/\r\n4vSfSDnHdSKbgzRKoEXXKTbEE6J9ZLo87F6sqaUCN36YCCjUrNOQOuorCX+P\r\nnoUu2hvwHvach8Zkofi62ysUAfMkxtJgRqIxRnYruP3rAdHQiHYLutggm+Ol\r\nUaClfptM/yjvBh5XVuGUKxlacX4IaJtb5iwwFe2Wu/b0aW8t6FSJUT+qYUHJ\r\nS0HLofiZAYIGyUGN/Ah98cVR1cQbER6Rm6Za7cJJlFn9DjhIgzfjZDu8GVo7\r\nQSu/ZiZUyfj9/paVAQzBMTnt+uXmBQzfvk4ydA3dVjSfmPBB3oVZyW4yznHt\r\nXGAw8dUk94sG2f1W329g9XEho0jWQq4LdKQA7XpgX8tskZvh9ydPNBNf2UTD\r\n0RuMMIfg/DDDbpP1c3Z2p02uqecEr8siJqg/uXFx0BshGXBoKGTorRqo3Kbs\r\n7osfHr/kA8pUN9UtAj9UFfh4JCJE58vNmP4pJPY6+7sn45TaW6tVcECa1Ja/\r\n7K2LOT6b2e2Z6JPS71muJm7eBHR0EkQbS/StDc371CV8XCA30onAP+UX18S3\r\nwbPSAcW7hUGGzuBNKb0eG0MJ1GPlJuEJbAA=\r\n=2vav\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.151.0_1648786133329_0.893569715184267"
      },
      "_hasShrinkwrap": false
    },
    "2.19.0": {
      "name": "@aws-cdk/assert",
      "version": "2.19.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.19.0",
        "@aws-cdk/cdk-build-tools": "2.19.0",
        "@aws-cdk/pkglint": "2.19.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.19.0",
        "aws-cdk-migration": "2.19.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.19.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.19.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.19.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-Ia0ooAppVjmlHsSFmH8FtJ1wOxRqPqNbYj26ZDkV9y0EwlUIIKPPgd21Qlu8bNa8iRpY+M1IWeE4ctiI0/Bd7w==",
        "shasum": "14f50b27dc696560507fa152aa92950164443cc9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.19.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCjEj6dvXlX7LPrSBADhEzUf3iJiMNUXEm9dd5ZzMNkHQIhANSi1Scz3fQNLje/WIGmlpPuY/O0B/SHFZshLcHzd7dm"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRnsOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqSlQ//RlegBYrdcusBK/2clLgk6hrH5/9h2P9zmJfH2FOzR8TmaQrg\r\nflT5bWbYqKWTYlb0RafqjyMpg0I3QaPtZ717JFZYVcLWW1GI0wgBk4prADjv\r\nY8VOe3BGPuwsXYk/SRYOeUSqn18GeUD4ZXRGnJwtIrxhW6+HawJxye0VMVRT\r\nagBQ8jBnPMFmAt90AyVI20tOjGvcybvDwTrYZpRyinCXJxK6OYVsC6LwBGto\r\nI+aFNrEgD1Buioa3sODAaXpOD7WMqnNjSAvkx2kRTMjK2Uwpia/s6pGYAE5z\r\n3r6/rIOtfJ634es65ko0SYAd117wzmP1yx6LEyteNfS04XOEqHObBQr18EO8\r\ns/VhYiHXyfkyzPPhmxSyjo3D6JCb86Wz7OndB4cwSFAkg18jCcjDZil+8Hvz\r\n9ab3sNw7/ApdhdjkfdS4N+5Fo94fu9W4Cy/NPfHuUlz6qRgKjNIYyz4Um+ZG\r\nkUM4VwBdT1knKd5a2UxaUpak9a8iBzJ2GAAXCIfNWVAa4M5Ydn2K/J1L//kB\r\nT71sSUQv6ZRbBcizZKYJ2GGaAXgMINB1/IydUpE68CCH1uPAPCFm0zryg1od\r\nV/r+IKKJC9/rBH4PVG17BbIqvImMQBzhWqmnu26BmbY+M2TblYlw0KDNYuMv\r\ny2Mq8L/43HKBFo0Jm2PCUO+7TomYWoPreeA=\r\n=0w3T\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.19.0_1648786190685_0.5834529840743867"
      },
      "_hasShrinkwrap": false
    },
    "1.152.0": {
      "name": "@aws-cdk/assert",
      "version": "1.152.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.152.0",
        "@aws-cdk/cdk-build-tools": "1.152.0",
        "@aws-cdk/pkglint": "1.152.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.152.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.152.0",
        "@aws-cdk/core": "1.152.0",
        "@aws-cdk/cx-api": "1.152.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.152.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.152.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-aUkYnEugg8joKpq9Ra4D5qRKaoZuALg8O4jGVI1YFrkioWj6NSOGJ/zoJdIZiM0RB3JFORnkjewVqk4WOLwnfw==",
        "shasum": "4fb1cc6933560aa245ded9efb9153fcc8a0da4df",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.152.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCHvWH6+8VRlbah/r1/34VUt0SiMZ3OmQFVZt0Q85w3fQIgMAaMMNj0muH2ZkfaFc0QUb/xOptqwt0AjNYXJpu5PdM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTvfxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo9AQ//e2zp68xuKnOHZ56Sw42prAX1wlTpApoOEfYjdL5bg8/N1gyl\r\nEh8wwK8psS6X6j6Qog77YWAr57ZfoUCZJTrJ/4Cb0apW0S0uFFFBPOkvtmAU\r\nWO7pyOUXZboiS2W2qyPrWjZsZmq6A4VqOYVBBHJ0I40CC68ccA1mzI9XbB79\r\nuCe2BhNzGv21T/ytnwgp3/yDWVnIAx9VoBKsty4142Bc4txocRib6Hsurgj4\r\nbJCo0V0mFqry0VPmxgOHDu7CPHeUff+xN3zaAD9Eb1QkUuc5P1mWDeQJyI4l\r\n7ovUFJhmIPdMGxDiezheOMGPux3sY8IVht6vC9vR8MSsXPBeD22td3QBp0MN\r\nVGacwMEOItFpOJvXf3HLkGbeNAu5PRJUfWw5jYOnZ+jzuKB++PUEryG6IC6A\r\nUurX2byvtcqBy7MkAHIo7Nnu6+R6icdHpvQvgTalMZOLZuaty0COvoRWA5KZ\r\nl6NCUHNo7Et+lAOGFArW5j8/iA5hHBax+cQ2owfELULlaGCYLAaMhay7xft1\r\ndYIE+HIyQqIOvYtJAlu8wXDJGgK+BE0RNtyoKhLsAWGor2h/IpG9kECz/Y5g\r\nltUPUvlrdd59/dSHG3WiTdS1ScnQbLsJ2HYuxaX5YsgxaO40tX6nXaC8nwPU\r\ndmSoCZ5A1XxSM17XmsVO/GGm7FZdr1qDKas=\r\n=1bPY\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.152.0_1649342449245_0.8350390194678416"
      },
      "_hasShrinkwrap": false
    },
    "2.20.0": {
      "name": "@aws-cdk/assert",
      "version": "2.20.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.20.0",
        "@aws-cdk/cdk-build-tools": "2.20.0",
        "@aws-cdk/pkglint": "2.20.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.20.0",
        "aws-cdk-migration": "2.20.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.20.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.20.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.20.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-uDxe7jU68+9CX9KwG1LHgtR4/lRZ1yUV9A9M35vbdIc8hBZb1ZKQkHMZ66LPQOMtcPbt1KmUH1Ac7bO10Qib/g==",
        "shasum": "9d5c21fd9ce9ae6ded64bb194ea6dc6995c19caa",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.20.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB1pmlmQWpGcFU56mlZbsj0lm6B3y/VUprIr+cN3XPZcAiBjTHFIBNvGmgaNv4nZU9pTXv6HgWpT+6gWtjCeDBhqrw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTvhCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp9aw/+NQYehkxGIfzKPf0QMqv46emBT3Boj2LrzX56dMyGIuLGsTmC\r\niiJgeUywbZQ0HPNUDcNe0GIFFmefgT61SEzk18lUaIwCI2ZcH6kg8jdy3WeE\r\navuT8SJ4caQfqZolq5ZWVKhXeaU8eFhcGtozSRUGHkl3infY5458SqXKD9SI\r\nIT4QC6BVzfVZI73GZFMzZRclkYuWK4PptcY29OrIav3OPN23uMNZ/g0SbkIw\r\nvV/eymCXPcVML7ngai3gT2+Up+LZt1xfAtov1wDpBzzV1YX6BenbXwSTeewN\r\ntbhvpN1mt5BKsntD8MlxX7BE7NWnE8+GsGUSJPVYOmuPFH2a/53axIEMBiNK\r\nQNJlxlaL956YEIoCX+JKID3SCCKDO4cqqTAjOC4F7NyjHjIluJXHYOImdNXx\r\n5pRy4Jrs1V9/ua/88s8bRo7XMgXS+dml6e2c4by26PxWsuCMRR6NPwb5NRUR\r\naF6Wq/kjh9SPZHl68Y6oVCN+4/uvNR9wUVfaOD3viTTIqeEx2xjwJnCB6mG+\r\new/NOUrApUb+EPUl3snPyqEout1lRC2UcXMUgKgh/somjvvbtUVZF5y95tAR\r\nEdw0AP/yfPJK6wS1cU5MtSEDHp8ggR6i18HF5pW9vAOhpn8WvmRNvywZGD3A\r\nbQFMqgqEW2mC9d0WW56VNvallyIdJ7xz+n8=\r\n=0nKZ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.20.0_1649342530538_0.9000181234824307"
      },
      "_hasShrinkwrap": false
    },
    "1.153.0": {
      "name": "@aws-cdk/assert",
      "version": "1.153.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.153.0",
        "@aws-cdk/cdk-build-tools": "1.153.0",
        "@aws-cdk/pkglint": "1.153.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.153.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.153.0",
        "@aws-cdk/core": "1.153.0",
        "@aws-cdk/cx-api": "1.153.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.153.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.153.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-ySIlbLgnCWIo5MQC2+rDLCGbjgTIhSdEeFW5f/ecnP0uhoyGNb8s3STylvS4n5MKPmcvVC5rQYXPMBiNLzok6g==",
        "shasum": "2b995cdf5f5406ad633dca8ededba59f39a7bb16",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.153.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDpbFgwoEEihq81CWxA2Iw3p27lVj4dx2OpOQODnMs5nAiEA4V9kaa9kDHdH9Uv9zey6xTPI42cEfs7O8tO5GDNCsRs="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYpk5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoRehAAgU7o2poKFaeZ9n9B1BophKVVrI5mH6f9aN6a1WKaKWCLagS8\r\n15jTjdwHBDGZs0X4rAXuDDDxo/Jp1ftuHDuh9PghDqlK29QdSF55ZCSMHsF9\r\n1CDEErTKFzJEAJMFzmLcQ1aTs+nYUA2ls4rBo4mFwDF3Xhbz2YM2DYJPLxx8\r\nvn3eI5ij3y1a3GR2OvM+mnUA9Ah29beaSHRzlhHThWZmgqqK8wBys04cGrHT\r\nbXZqx/Y+ORjjmkVHNhRRQ5GX52LkmcGWQLmP0+z1bmfh1FC43nd9d5HGjO/I\r\nFKI1SGeyQWD65cI/3H57/lvM0PhMaQ72DjhzE+IMBWT9rt2RQLmB94EW0TYz\r\nO/PUu79KZ5bBsZPnrOhgAmDAvfi3En4LiTQmqcb1AE9SbG0okXN6B4FxWEn+\r\nOx0cBMb/4DkI3UMQNA00fESGmaY8duIAn99myI9N97v0LLf5M3VoM9T8vh/T\r\n+Ab8hfMSkn2HGViIqS3AdM66vzwYdH4hOg+cEyt3Khy1fkIxLKL3U8pNdrDI\r\nhxegzQKiAzIJjhE+rEWY6tA3IoMIAYa/r4/4O3D0Abtoxm0fEa22GtixxtCy\r\nThgMo55nLNa0/vAu7D7T4vLq7yukYSJ/JgKpZ1Qd4Dg7+18mD0W4dUYF81fu\r\nwgWylC8KiCH1YsSCkwKtV911ez0px5Zqhbs=\r\n=cL+t\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.153.0_1650628921557_0.2576851108155349"
      },
      "_hasShrinkwrap": false
    },
    "2.21.0": {
      "name": "@aws-cdk/assert",
      "version": "2.21.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.21.0",
        "@aws-cdk/cdk-build-tools": "2.21.0",
        "@aws-cdk/pkglint": "2.21.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.21.0",
        "aws-cdk-migration": "2.21.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.21.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.21.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.21.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-slzHWEMuuzC3XVOYUGLW6jyuLJ6v5ukuK6rOX7IwXebhwDEv0wFRzwYj4zwe/3enpWu+UTmpAO/ChyB+1PA6zA==",
        "shasum": "78643ff4717a8efb14ce9af106d8f5ca9904c2eb",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.21.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCOeo05BND5zPhlTfOH52Tw/fGlyJa3AX+SO494EjexrwIhAPz+ZbAbyd1QV+fbMDmVCFLLQuu8e1ThblFko2A1e1jc"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYpnEACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq+7xAAoXrXVBuF0PXUN205xVRfYM7Ru4oPxmHx7IfFW+NfEKcGZ+Qk\r\ngZx3HxnWUuyWW/5S+SECrIgbE6ToCwdTWoIKwV+h1JG/YRKCNJR16u/mfzIJ\r\noGiMsCaEoX6Movelfe7TBHEMWu56GtPl78CBAdhHViiXggeAl6HLXYHHGQ3I\r\n6EowUbsHkLLgUWLy5pvo4dxLRtSW7r/gYfAIA+/VOPNwThWtKN38LBaZ0Yer\r\nXIofOgK7jtqX1dV7qMYKC111ErEf9gCfY2/WxmR3eSaUDRLNOH5VwdE4YAC6\r\nMryq7CVcT3/TG/lkbMEH7HZkLzn0hWm3zYmXyv/62+u010KTZZkIAPp+7Mjj\r\nkyPgL2LVIbMGAUVKb5OK41zdGJXrmcOFf3gnMCJv5+rMSSOEOdtqbpvJ9TZ+\r\nuYnNPqayBqqVwYH5HuDzmRF+f+1cG18i451B0IfQUEDtxCWg+vSHq/v+D/Ux\r\nZDSyGtOKSchOiF5P25naBEipN5s8vJi/sC30REYmlcirddnaHKJnKKOHnDI1\r\nJBMQ9t2WD+YY2yAaQ2MmU72bej8KQgq1reM15C3B1q1m3cqELEjT0Z0r2+5T\r\nc0G56OmWz2FjV0Nk7jGDRpbSaC/UJOTwC58t7nyMSJJgPrXmLCCQ9U0W0ksj\r\nwnrwb6Ii7KZ1XeAG0fLfBH5jtaovU1FE7fw=\r\n=ht0k\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.21.0_1650629060655_0.6030271845350159"
      },
      "_hasShrinkwrap": false
    },
    "1.153.1": {
      "name": "@aws-cdk/assert",
      "version": "1.153.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.153.1",
        "@aws-cdk/cdk-build-tools": "1.153.1",
        "@aws-cdk/pkglint": "1.153.1",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.153.1",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.153.1",
        "@aws-cdk/core": "1.153.1",
        "@aws-cdk/cx-api": "1.153.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.153.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.153.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-O0LfV5JYzbWQ0vL8K7i6iHQo4j+WycRGFX29oML20hSzZHSstO3AevqpnnLb4EHde4/tPZFED3nq/1EPAx2LSA==",
        "shasum": "a0a5d6b976fdc9dae9515f0e3bdf3f3d9067627c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.153.1.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCJHhANUCD6x/Ea198zu30DfrNE0f0IXk/qzfuUFG68VwIgY2C7wt38DKVNxeAq/Pm/SQIH4iG+tHCXiuxEqSs/yC0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiY30UACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoEERAAgRw0wNOfu19SSQMDdcaDZZNWpmRA+FcRqROjdwtNpsPH8UYC\r\nHjtTQXqsIGWYm6snvk8tnOYxo4qB1BGaR3jLjcyjvEdn4T2fCj8Our+oYwo0\r\n0JdJ4swXEzFGmwuvotXUmjo+pk/XGJSOKu1RdmTu4wdT3gNm8jtOawEMO5tM\r\nunuQtFEkpXCzG4YZQAnK+xBiMcu8hiGJwsZgkWo6A/j2gUORTGxqvK85Iv+M\r\nGkWahkrignLKjPOnSWYHmcEL0P1uMo4erbdjXcl8CVY6zhhnOlfOBplP5RMZ\r\n6Brl8AfGwexFl1QS6fG1BSsc6N6PWDDcBLjHcTUYibGk7gtfitTWrgl354ww\r\nyl3jjHltiN1yJzRg/K2k3HJ1axVNp5Yaf+5rQbXX+LicOXwc13ytXdElkVi3\r\nDGVexgjc+2ZM12hYCq+MTQuv+YWAJJI2qqH9aJ4WpAI3trfChbu+/ZO8GHj7\r\ngFPsdAaR7x/vEMpWWL0KtYTy5EiWanpZiWJl+PhAVwTQcOm/TOG5bfbeXmSr\r\nuc8YUGlE2IMib0Coo7C1S4gORdSZRnMGz44oDDDmauvtos6yNKK1YpgtNyGu\r\ndgRQ82i8bV9U7lMEiFrye1TQZtN3SDsAk8Dv61jFYzBnAk4VI+dm1rsqF6Qj\r\ncDmHiNDPkRPu6WRLx6XdJXqI1HeB64SUF3k=\r\n=oCLB\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.153.1_1650687251772_0.4383412111705922"
      },
      "_hasShrinkwrap": false
    },
    "2.21.1": {
      "name": "@aws-cdk/assert",
      "version": "2.21.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.21.1",
        "@aws-cdk/cdk-build-tools": "2.21.1",
        "@aws-cdk/pkglint": "2.21.1",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.21.1",
        "aws-cdk-migration": "2.21.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.21.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.21.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.21.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-YADI6gBoJCVcZpjMHb6UjAvXl2OsUfQXy8KCtFTOFlNDKvMLzOFsCNVQx507TW5t8OoajJT5jupkLxrxl6XtvQ==",
        "shasum": "4bdaeacae21d0a383bd3b3b63c41068ef2e2938c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.21.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICYcUol5/oRsGU/cQ+WXuSc95BCLDfTkHmEKfVff5aR3AiAL1oKgIMbgRa/F3/qPHtHUFrcl6Mp/SmOWIZVc2xbJnQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiY31vACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo1kQ/9GFLKXcMKWjJ5GLRee2YtyHkfCpOr3gTxDd1HuTW7aSjKKnRC\r\nMSa97rC7W4qMV59f2jSpWNs01x4u4RWbj4kciaRkKxszxzZDROsbMiDLV0Ma\r\ndha2UVF1Q3g78Ee4ejEtLnZsLhy7PZMYRePX7dl5x6YkXy3EOrR+IwYzMSbL\r\nIg5jcaCm9LrG6+i+nF+hgDqgPuckTGKepvT64EX/KZvXR45cGH89VfuBR361\r\nyiVISzCvxFN+DyKaZBf+WoWLKqcIz5P8qUk5TJmJ6YKW6qWbJgPvYVvspBRW\r\nvy84dNUEe3Nzaf4EnOaPMUct8Yb1R7YLBKWEDB4FFVnTGD+tbZ7uba2WyYOn\r\n2uXPA8BNqhqFhZsKIwF00baT1tVrwBryPlxcuh5pnJShZS6mPLeWXoMrAzFk\r\noyMnKeFm8NlPk12jP8oazipm3tfpXHUEj2T1C2yfjMK3RV35c0HPTODkTbhD\r\nh1Di3RLKbsFJHEMp8LX0jCbcuBDSP+OwNadpWTm4ogOpAer8h8TbpITvUsOq\r\nI31/svDhM6njG7+rtFh/9XxeB43x3yOD0LvGKiLbItSvLp5yfgJi0uP7VVtF\r\n2OG6y3rxd3zZPtxrafDFq1GvuqEXtsqGQOdXL1aOWYongyXwWxRsAzXBxbWp\r\n8G7wFpe2yJXXSNkIE7eT6W4L66O6Bw6q6mc=\r\n=XtZJ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.21.1_1650687343509_0.060683403823447835"
      },
      "_hasShrinkwrap": false
    },
    "2.22.0": {
      "name": "@aws-cdk/assert",
      "version": "2.22.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.22.0",
        "@aws-cdk/cdk-build-tools": "2.22.0",
        "@aws-cdk/pkglint": "2.22.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.22.0",
        "aws-cdk-migration": "2.22.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.22.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.22.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.22.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-TszLhcJnaHCB9gA12RpUvQUtKfHHNZGeaHTfkhs4rP/b65v2Lim8bAiZ+kN76dhvs2CqIRTeJF36pbF10Ir5lw==",
        "shasum": "87a55e270a6c0c0de597d8ccb4b3487e0ce47590",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.22.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCaOyguV8SRYB4POvJe7Xk+/UhM6pvLv5ZSq8KnC9sDLAIhAOtklgEx/u/sm8P6/l8eKaHT4mmPELwuk9eHeFH4cV6k"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiafQcACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrwGBAAoyU+vjwSdqNmnjvZLKZhtvPPghWSFvSJHfA8JfJ2h8/GIYG/\r\nsHf9qe8yUS0m1R4S8SqE3116+LwsE9JIOHnJ7MJof+xsKa14TN2q6fP3xDtC\r\nUifqPZgdbywdFM9UtKdqzrNcTR29Oggj6/UVD9dvT6lLu5YJ1UXY1RGyczr4\r\nrk61gX6q/BQS1O8SD8PpLkHim19HcCjoITLhFr6wzaL12VLCtH+iV+QklHtL\r\n8XSib8oj1RTvis5o9ta8xx5w2p1A9AgrboFPgqIid+da9BsYhbynq8GduBmI\r\n99FR5ML0bpb7u7T020/3oYUklg7/0pZmGbDh/XPqlp7oULsr/08ucrABK7g/\r\niMp8G1y3T9OFxeLsUPBafBp6+ghZas76UhKOfTHqlBS5/Qr7yt5W8l6MQJmB\r\nwmzbgoBlxc3BdeP+GteUTQgQQdqp6ceHvjTVJlW2QDNY3JbIlHCVF8BirjeY\r\ncbvFDd6J7ftcDnhqUVVrCKc8m/SK0TcyjUpTNFcs7lQVKyHNq7/Zq+UMdBUa\r\nXXXTNBH/SgJ/LP7eLc0aoWUVsiBwMzAsV5eg0IiDT1HrW/3A/txbU+Tmpglq\r\nyrm2767gF4A6/4hvXyMZtJb671/Xa5buJK2TyAvMM3Uvb59EXLDmQ7gZ5tf0\r\nZghYkAqfwnKavPT51Xc8OSUFIDdmcnQw18A=\r\n=IN7Z\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.22.0_1651110940453_0.3156648472859842"
      },
      "_hasShrinkwrap": false
    },
    "1.154.0": {
      "name": "@aws-cdk/assert",
      "version": "1.154.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.154.0",
        "@aws-cdk/cdk-build-tools": "1.154.0",
        "@aws-cdk/pkglint": "1.154.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.154.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.154.0",
        "@aws-cdk/core": "1.154.0",
        "@aws-cdk/cx-api": "1.154.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.154.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.154.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-SAmYM9c9dEoEE5RQitHOvmSFHe6kXHPeqLlOItba5J40rRv9kNZwsg4nLNqPelUyrVB484PY2nNGX+q+5890cg==",
        "shasum": "e9d8c548cbfecf8c62f82ff9a0027531f4f2679a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.154.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICQCFuf/K/KACwxbH4l75wIRE0hzsc80XTOVZvWbcgTKAiAJTKxzpv6DDw2v0Dh1HdH9lhGvkY21yNfJ55yEOopeBg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiafS+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrihA//ZVZf4CrqayX9qE2oXQBjiGpfPICKZK1UldjvFp/vuSamNWEO\r\nR34tcygJcdAjs4uwgN6pF4Eu3pSPmRpjaFlLEy4b8kXhvu+ODEyEBZAzdBvS\r\nhqEGbVjYS9Qmq3e89lA6fxcDqMB01tLz2ujWamweaM55HZzYotwqi0BFBJ+p\r\nCkFZf4geywg5qgFW2HooM6FhJvyuPkZFFpBKC4XGcdVepPf7VHbdpQRJgJYl\r\nGOylQE4dEWBhF0lSlRWQ7IzIF9vCPrOxYU8wTNobEHoEJL/OToKpmkg1Vmpc\r\nD1WlGnJBPMsvFgHsH2Z+Vwe6t8+kZ4Hls41UddpO2c5ofbXdaFlmLRI44q5x\r\nXR1SfQVj9A48h1i3d0uoe0xew6acQvpSiyXr8r5HI6Uza8r17VKQmIxAmfA7\r\n4SZLeKzNVpYFanmDO7LOewSg4XcjiyRDlDk4pDnVBF/Z9jM0gFNjkvcHOIgp\r\niBeOe7oybvVMiZHjaYZsZRizxiSEKYUuGgiyGuQYx+luSp0kVrfAa/rXbmaN\r\n+JNlTCGkX3FSxWx0kuFx7B2Oert24O3MiNYoK5JcaUjkfaTgPhOSsRdG/3/S\r\n+IgfFA5EWxImwLQ+wW/Wbw9VG/2v1MMZ6bfCOjSCMC7jd6ovs/ImwF2JMEBF\r\nt4fwySjaPQsUn2Eu28kCRDGtbbPYLWit3gU=\r\n=Ddjc\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.154.0_1651111102064_0.4171831514622102"
      },
      "_hasShrinkwrap": false
    },
    "1.155.0": {
      "name": "@aws-cdk/assert",
      "version": "1.155.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.155.0",
        "@aws-cdk/cdk-build-tools": "1.155.0",
        "@aws-cdk/pkglint": "1.155.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-migration": "1.155.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.155.0",
        "@aws-cdk/core": "1.155.0",
        "@aws-cdk/cx-api": "1.155.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.155.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.155.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-t6yEWxnedioRrzS5PUn1sIhY1UbMr+F35Mg9gLfJ8UraBINSVX0ay7yuGYSAXlXwQpXYZZXrQQgnX2Aie3gKuQ==",
        "shasum": "ff43de4fb75e08a5169c804ab3bfc29b5009b2aa",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.155.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICEWaUpGRMU5oI5krNuH2jdAbAq+XK72ZqJ8QfEWuIf6AiBPqeLWBw/3D3epmOKkqeFHPXE441MytFVuteIDOFvv4A=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJicv7gACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrwYA//ZXtA0Z5m+U0hEFb5v9j5QkJs5jQ/sh05sb36ipWEmS/PMuRD\r\n9giKYdU1UYdGLE3PjKmfrmZ4vqwqH5vV2wZ2vGz66FkRp1SoTTT9m49kLT2v\r\nmb4bsFkTBUoJm7hvPrOLn7Otrx5FkBo2iLW3ejU80BfBtvXy6siGopxz1TU2\r\nQbU5G2TogESXF4v+2Yn3pF9OG7VwjzjYleB/tWI5HyQL73Qmwm2+0Q3CS3w0\r\ncgaSKmcYc7X22fuNhFdxr1eAjWj+ICH6yT23ElvxdgCNcfEuUvwWd31psi/H\r\nVgsC702vHzQNaVjbtbxdzgAwzrLC78WTUhB6BDjtNhi+cEX/9EvfvGndd434\r\nA1AUrXf/Onnsp96qfyYdBnXyJmdp+PYN8pVNo95QGaCmJUZWX1+T/ivruVVD\r\nsDZiYahzOfvMJD5LT3FanmJZJAPlLK6u91DCL/c/CpIJUtQonRG5FQ3AeFFR\r\nbwky5qA4djs1O75CPYL4j6v2DiIvlIDVC3OCwAVdlbcso0X8PZwZBCS88F1Z\r\n0o7cDlMG2dc7quFYUpU+xDHa0dzx1uvtsNsmW14wslHcJLqxsmhGOoScpfIN\r\n7m7ViERpxgZItXkER3FQQSsDSnIt4vlVcolvVVHjoOJgsFOMiJ7zp0zC4sqB\r\nOXrTOcrwG6lcBJ14QElLWTMhj3T6ZgZBjpE=\r\n=J9YK\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.155.0_1651703520523_0.2108869913959126"
      },
      "_hasShrinkwrap": false
    },
    "2.23.0": {
      "name": "@aws-cdk/assert",
      "version": "2.23.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.23.0",
        "@aws-cdk/cdk-build-tools": "2.23.0",
        "@aws-cdk/pkglint": "2.23.0",
        "@types/jest": "^27.4.1",
        "aws-cdk-lib": "2.23.0",
        "aws-cdk-migration": "2.23.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.23.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.23.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.23.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-szfjBJznK1V33y39ExjCNf0NefA/QJhSZlevtxaUiHRhYh2ZjzOXLJhtWmrrjxO2wZFbUSrXmZOJMG59wge0Zg==",
        "shasum": "1748ff93c7e1a90b89bd722503b8ec4f8712a573",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.23.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDTUSnKhGFih5Q/e4YdqkNMuZiTvTMDWkPbIiUTTl3YgQIhAIA930hfVSneeIYfp+I45zPNF8Bw/C/44vKAKaiqf3+p"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJicv8oACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrkIQ/6Agjhw1n1GBLnQIUiFoS2wp6KTEzQkVZrlyT2AmWQwmzT7AJ7\r\nCMXmexfWgi6UnnLiJP17WoJOmhp2QBZuji4XSGvpUCZCUtcGqCLVWoRpWc70\r\noDq8Ll47FTUznhbt4ZwmjzhvZmFnhyb1WxrCCdFY5IXy83LyfoyiUnar95Jo\r\n0SmKUev4ODp/kTT5IUSYHRcYpgn6jjPuIjD2E6iqgBGXQG2ezOvD4WnGR+sF\r\nynct3uIfh/1mBK0ABO8aMrPIE3nUfQwaj2cXwTmPPY9RLtzGtwlBkPs8lDtn\r\nC+XpZQ5nRGF1Rc2fuqC/zgkkYLr3p5jDk1ObxtwWyFK9mihE6T7lxLtFAP+W\r\nPaSOVSN60RV1t++Zfz03Rgi9RdxnwYrQyVi4Iq1XvOJ2F7RGDobNkkQKtUP7\r\nH7ZGZI8b57dCJ7Q49Z1C8qxv/KjYmvuj/ya1O1JPx8QG9A9x1hbluJYBRwlz\r\n/oPSIVZNMB0zxB6oiTwKDpby09PmAVfwWfCFVt1mptxSx57Nh6D21AKYJPqS\r\nuiYe+S3WYOPIbwW+J/w8V4pG71hCeo48wuNiovpxChbj8J4cmS41ihAz8KJx\r\nndwvFHoGIXBbiittvpMeQiI/1tR1BZFvxjVW3t1//c/j/rqP15/IG6zkOO63\r\nmkZKuRiC7Vkit4O8G4W3Uu4kAdcGjUw8gVU=\r\n=p7xC\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.23.0_1651703592219_0.6610948428617187"
      },
      "_hasShrinkwrap": false
    },
    "1.156.0": {
      "name": "@aws-cdk/assert",
      "version": "1.156.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.156.0",
        "@aws-cdk/cdk-build-tools": "1.156.0",
        "@aws-cdk/pkglint": "1.156.0",
        "@types/jest": "^27.5.0",
        "aws-cdk-migration": "1.156.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.156.0",
        "@aws-cdk/core": "1.156.0",
        "@aws-cdk/cx-api": "1.156.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.156.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.156.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-bDPcFEtUKxCc34d62Z7ft0QQafkQWBoSDnIn/URtbndmnqZW1T/SY8CgGVZVFJ73KQ1YJmDKL/5+UN8L4ne6Vg==",
        "shasum": "b26a401fab7604df0080824af04e6bf8ac19fe85",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.156.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBvK+tzNC0K9bD+ZS9B25g7cN2ZMGh8Q4KG/NMpDuNhuAiAOcrIA41lQmn6EsVniOHCyoktJIIsk6sme0HVel+Si3g=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJifPBkACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqlIQ//RufM1JGVlRPj/+OkI53Ek5gHzrRhpLdDhIJ4HPKuOqQc/eXL\r\niN6VpEUXUQHzK/WOHhXYOG+qNFTs1rpxSsNv93C4K6V7ISjMDG3+SSXp51S5\r\nwtlNeglVQxCVuvakjQ4l8bkT8oq/VK8pgNOJaFI2i+mYD6s+MpM/JwZMBsqs\r\nl9ySYuJh/H3HRrCPeZ9WKma8zE0tdIGFCjIdg4yzGQrb853MlVpY4aePNC6s\r\nyjERShNQjhnuvM/v/Zf4899b+4lUeHwlZyxjIEpt+pBmWwwfgxB1NsFmbba6\r\nQb8yYqbKzfCBTbMaczt9ZiQ4QAh3kKaGwjhr+2HjUkqgBKz2rUqIN1x/km8F\r\n6Y3psrQcuLSHmykE7r84RJTvQqml0GDMqwvcVKxgi4XoYRdqXV6OOiwgyn4b\r\nsDLA99sHMQ/4BCWCt/Zly8SHHpTFuLmeXqdRzptZC0fhZOjyGs5Nhqqffck/\r\nuiIFrtyApICnoPSuf2G61FfiRQRF/gFZW6guVpwDH20FYX2CKyWT7fB2MvSO\r\nKUW4IIBBqZ9m4HSiSDehUfbmd/2bnnydPTThSOZNm2oU62Kqv4m2K2FMyrFx\r\n3Q/bDPVYGDXYLGgLs9n1epP0viYUqBj1U5dUA1Jo+GJL8YBnhMqd8L9qBOLG\r\nQrIwL74ABP6VNEGL4MGJ7evXZxJqt0N7148=\r\n=oJOf\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.156.0_1652355171796_0.4319045490860469"
      },
      "_hasShrinkwrap": false
    },
    "2.24.0": {
      "name": "@aws-cdk/assert",
      "version": "2.24.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.24.0",
        "@aws-cdk/cdk-build-tools": "2.24.0",
        "@aws-cdk/pkglint": "2.24.0",
        "@types/jest": "^27.5.0",
        "aws-cdk-lib": "2.24.0",
        "aws-cdk-migration": "2.24.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.24.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.24.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.24.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-HK0Mzf+e9enikSFfA7mFUffJ01dg7P9IKlvEq7RjMWK7W+POgbKuMcJMLD80VEVkv29xXoa5B4EcRIvZT6AFEQ==",
        "shasum": "044256db0777776ec0f9d2000b69583cd367e332",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.24.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGLoRd74aiEWJNVRbn9TVxz7iUEwM9ngBnOoU4ay1WkaAiB7hPO3m7I9jQx5kVGvGO3+XqT59ouPMt+6TPfSdexA5A=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJifPC/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqFPA//XOA0QAgQZzBsHhVqTW5+FbCBgKzPF/RAPHFQW+BrOs63BOxd\r\nAr9s9/lys2f9FZ1HVfzEk22KKJfBt8IOZHCnXuA7nLVhYXka8DM8bMbSQPOl\r\n9bdxk0m6yKKcjsk7mAkF/S7Nxl7CePUYQxwDP6K0LZLz2vDq1JW1Dz2Aured\r\n7HAu8XUgQmS7Tt3LP4iugE85/1rzrVTfJx5ylwmeXUsi7uC2vOlgwnDsATg3\r\n1Ey0L+IDnRRl1eFXgJintlMIANsa8VoH9JdVnfNvseEGAWr2kZy4nDRZz8PA\r\nCNXKTK43rLMRz0VRJ8BCDIs6sBDxYl4oXsNPvjZ9vkAaPAKfn7BMXQpDlIqw\r\nIs2LlFwcSyaGUJDVxlLknF9+rxAYLJ9p9WAlv5Dkjslp9nS689og1md/J+a5\r\nk/37rRm72+yb+tYU1kxG61rfMLLHQHOwboHTyZomuPl3B8wxJOax9WUb8ej7\r\nSleEEuFq1WmwyM6AUDKBLAZZ8shR+/YN5SlgAimI6XN5SdQfnG+xBzSAd6/9\r\n4DaeQkj+PHAySbxXvXBVO5mS9wSzYNA7mzp9vyxkOyjvmd7B7ikgXFdN9jZF\r\nPc6hhjbyoXZhecu4ttvHzLFEDpJpVTa3F/9j4YvbjFHw4FkiCwVL89oYibm3\r\nOlskrDDV0P91zugQZBrDA/+PFgra56jZ8Ig=\r\n=Cbvl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.24.0_1652355263326_0.9791691555067643"
      },
      "_hasShrinkwrap": false
    },
    "1.156.1": {
      "name": "@aws-cdk/assert",
      "version": "1.156.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.156.1",
        "@aws-cdk/cdk-build-tools": "1.156.1",
        "@aws-cdk/pkglint": "1.156.1",
        "@types/jest": "^27.5.0",
        "aws-cdk-migration": "1.156.1",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.156.1",
        "@aws-cdk/core": "1.156.1",
        "@aws-cdk/cx-api": "1.156.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.156.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.156.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-nF1aAe2o+xWCwemXJKI/Ws6WGxVZ+bEKDhA3QSBuB/ALN3/rTSGou2AMkYIl7yzoNgnaz8I3jJy2BDLcFLTZ+A==",
        "shasum": "42c0424261b1d03cc8342589eb014996042ce79a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.156.1.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDhbaVqCrBXMMOJq4Hxe8mGOcprQ3GoaE4V/vLwaX5xnAIhAKL61UUacwZOKRmFDzMdM3LfMvwFf2SZ1rjZlaKCM8V2"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJifd+0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoigg/9EOJh62+6+775yo7tN24o2qNx4j/4bqukq0KAaLP1mQoh6eXn\r\nL+8BJizpaP1QqfWztwGMk51vrP2UyaxJ+5k9ZEuXzGu81AOODxANt4oIO6RE\r\njfJ94ALiOZ8HJZ+a07tdlOF7tzt/pU3VUCPUxSaKppPGuWKvyXIOx1dIx7NE\r\nvygyhwQJ0jpQ+ReOlviZMQHvZ+2LNN7RJ7C67sXbwNoosGmiEhet1fwiHZej\r\nrGmvsujS/88rcanN9olRmy67sgwkRRdkGO6Cxf/n4HGewJfa3dkLifPtsYpr\r\na2VKsW5Z1Qw13AEGREe6n0/hasiHZ7xMZLAj+OzuAqb7SaVwtlLUPIObxurC\r\nRYkD8Mv8LsgnLxqtFHEWZO3KyE0qKJW1mxmwiYZvjAwhxL4rkOkxqVUuLOSF\r\nFcJrWssttr3656rI1c0TzeAvkFgFkJnpRAIoBPny/k/BuuNTLN+BXceiNfIe\r\nXpA/ijOVWsCzdukfKUEkkPSe6P06lWJ1ESGqYwphiuR+Y7h9zK7Sr5zjULfu\r\nJ6cHhYZ1vfZKak80O63sjh0H5jnuEXZrF05I/8xoMlakv7GOEdZmtvWgfwnS\r\noUgWiSTalxyJXu2ta5+inWg+UT2xGpZ4ZkKr3kIE2Q79ohQoi9VePA+2PJvP\r\nBbLaEPydoLJZgnrxSnvBEfPAd/gsM+Reeno=\r\n=VQiM\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.156.1_1652416436710_0.6809957347424833"
      },
      "_hasShrinkwrap": false
    },
    "2.24.1": {
      "name": "@aws-cdk/assert",
      "version": "2.24.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.24.1",
        "@aws-cdk/cdk-build-tools": "2.24.1",
        "@aws-cdk/pkglint": "2.24.1",
        "@types/jest": "^27.5.0",
        "aws-cdk-lib": "2.24.1",
        "aws-cdk-migration": "2.24.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.24.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.24.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.24.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.1.0",
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "dist": {
        "integrity": "sha512-IJ+wm1wk/HqaEJs0VbaIOdSTysZv0sOvDO50Jm5mkTFqytHTLJ/Uzla/30K8YJZmP7jEtdPFv21Sk4ZsK1x++g==",
        "shasum": "47a420dcbc0560d64bcd227aa6c63fcded73d6b4",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.24.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFoebXSilYAy2w4u1xmGSHzNg3CYK0zVHGX9zagGM8NjAiEA/5h43PeoZtkfjRWebhRlmCIqFGwkqfGjyiJ65N9uhbg="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJifd/XACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmorww//ZE9uS7N6nt3cElRPX5jRE+1gT5i9Yl96IcWbBqSOFfHzxAiZ\r\nWWSg6H8FpaGIg1BLw/5eAbkW90hGbTEF5a27RGeOeWESlXYWzC5l600jLgFR\r\n3tmqGHwWISGN+aU3gRwxOOx515dwDeVLgnG6+zjS/VYYekVO8o1Jxdl7//8w\r\nKYRADg9usFiKczrDaGGJEuviYoyf8yMOybA8108B4GRQHIVo/4t3FWxevUEg\r\nBeRyNnXs0RId7kcz/DJ8X+AFJVlJRUv0YUixu2Gn5HMg4WzShCbtmkiEYnVz\r\nRZVAVczlBPHgQGzAh9HvSEvfe7YZS2RcGTHUGl4t6RZEClfALPFfO1qGec57\r\nsQDEv7kkzMrbESSgxBtMGA/5mzkQpQBD0UplivCiDUa+T/cbz/3uvNV3R5gl\r\nR4xHvNCavp8yOopBcO10IabR0oCRKVQ53q62DDs8Ec1rwmNiE2bqwyRKQdIl\r\nCtR/HZv0uBCSfuk+tQPfZbQwZmN0RPWQJgHp4+iH0F+d4ISAHHSzTaa5Ljba\r\naDdxjdoKaD4jCmIH3jIoLBMWoLspw8h8OfvQseR/RMNCkogi5OC9sI7XCmac\r\nQ/CS4kqjKnSFfibxsC+2/uzOSYDvFSfyaAfcELPpBBFoHdlqdgzm4rJYHCQT\r\n2cI6qUSimNDU8rFYJ6UuXyAEjl4m3yqnfw0=\r\n=qbla\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.24.1_1652416471744_0.3779924031748456"
      },
      "_hasShrinkwrap": false
    },
    "1.157.0": {
      "name": "@aws-cdk/assert",
      "version": "1.157.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.157.0",
        "@aws-cdk/cdk-build-tools": "1.157.0",
        "@aws-cdk/pkglint": "1.157.0",
        "@types/jest": "^27.5.0",
        "aws-cdk-migration": "1.157.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.157.0",
        "@aws-cdk/core": "1.157.0",
        "@aws-cdk/cx-api": "1.157.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.157.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src822686203/src/js/aws-cdk-assert-1.157.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.157.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-OheUKT5UXYpQroQkOe0ls5/WaYTOQQjLbyBiZFYQi1TP9Z/IaesvGzJU5mNKmn0ZHwJWL//3tPoPQ5QbMKRv9w==",
        "shasum": "4ef47442a32d883b37849033fa0c859d32a47ad2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.157.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHRPBsEnvFtrKCg7QXuXSCv441wM/w9ZmzQkVG7FMwTzAiEAmOTQMJXap4vfOnoIaKrmCvFvu5bbQ/iA13klUc8OACU="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiiFKDACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr3qQ//d/uEebdsFI4pgSoNR8uqvI9gYv7plVlHZSZUQGoPS6h7ZOzH\r\nLQWg7nnmHhls7PkUvXxFb4PIfD3s1WHmrXoCf33qMvgcH34o2oPyVFxpgzkF\r\nACBRNT32MHAsZYb6LK/toN2IpfeNy/zsqqNSyGm+eaQBq9CmiCjzzOUr+UYW\r\nvm5wVlA26Mm4+6qrSI7ycMjVG82DQUVnn0ZgzH2JuRQAjrVEWapBJEkVeXFm\r\nQLQtktHVW8NmneNBDueymXjcEv4W4qQ5yTIWCow2PwjkiI3ORx57MdcT18ZR\r\nKVHkgNMFPXf3x+n5jT9aRUU0XwpMDCVUWu/TlBPGOvTpLHDy9d5sSsPirVMB\r\nQ4m1ts6BZcz/666qlvLH9lmbBonbOTOoldqBFVxN4OyXjtdgA8fgtrBCK0Aq\r\nKDcvh/+gPqcNdm1Cq4vEC7bvtybS9ybl4UQNb0mjOBNnAVk9e2XKw11vprkF\r\nwGEoA0btDLMN5Mgig05aFPksC42I23OtOkQnxJ2ciHMWL2MRKfWkp+ZeMtub\r\nb+O04Igv3vq8eZYzR8FhBYCXeg6+SO7NV/WLiQV6hIz6sowxZNo5MupMwsYN\r\nrXPLlzNnE7bc+2+4kUzOrbrU8A1LcadWkepbPf/Z1TCp2/iB/NtlxJ7XYF3w\r\ntnUrNR2tHRl81RaJM8dvmQJeXvS2/bLWmcc=\r\n=qKWP\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.157.0_1653101186843_0.028330938973465836"
      },
      "_hasShrinkwrap": false
    },
    "2.25.0": {
      "name": "@aws-cdk/assert",
      "version": "2.25.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.25.0",
        "@aws-cdk/cdk-build-tools": "2.25.0",
        "@aws-cdk/pkglint": "2.25.0",
        "@types/jest": "^27.5.0",
        "aws-cdk-lib": "2.25.0",
        "aws-cdk-migration": "2.25.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.25.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.25.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src961977533/src/js/aws-cdk-assert-2.25.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.25.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-nLSf2FSbdAcseH9nX/C1SiPnToqT6IkkRmoe5bwU4kY6BH09/PSPxbQ5cMdG9xp02Tdh/9GAVo/PsNCwOu1S+g==",
        "shasum": "6e8e4f87df8969c7b9d3587156c85128e72bec56",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.25.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDC/upFHlrOtyt7rCZGwQqqwUry6hHr8iv7fp2A9WYhyAIgT7XzcdqHHwdnShxcI5tf2Oe35LimPmm1cRYereO2dH8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiiFLVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrvMQ/8C7IZRDn7YYDx9hhEulg/c+6Spxx6YFUvL3qni85UrzTyp27F\r\n+RCP+7jr5ZF0OhhK5am5yR//lT2ivuQnS9UJRGICl4glZZHynmiL8VA0Kg+T\r\nFD9aYV7oYM6MDIlGBuEi/CGtevpsOqfrlK1MgoL98T790W3Ylej13dwnAcpe\r\naH6sw9rcr5I9arLy9l7ptw9uP7QjrDiciN8rzwCeNbBPrSFsATx6QWiRNb6p\r\npifUBgWWc3GnoLlyP/CdjrmsIJ5pdA4zwKJO/Lig+OLzXWHbNQpScSuiwLIR\r\nDfhnz51XjoIKxbLh0wdXr8t/ap69+Zcv0TAsgcvHRyFJJzWhLnuuczX7uVC9\r\nhZPfowRRGxjHpJEtu2gekNfwrM1pQ56Y8QAF71pQWK5aLfwMo3xmXaela39t\r\n2avAGLs6YqWxDaU8QZExmoTRKzAsm6XvHfmem9eXsS7PlUNEMRUZsQSeLyQs\r\nx319V7fcDgt4Mp8e5QcXa1xTgFQ8/gNOUKlq876wNKZjTNCY9ynCbLcwQxJd\r\nmGsE7zL5iLZ4FtodaD9WOlXwpqMjJ7qWk9rgkHyoseXDxRtRtNrEivBQA3n8\r\nMMLstfFTW0SasHWaBjkwZwDpGmgyroWQJFGe4ag/kgy9Ziq161pbjk+EanTx\r\nPvhMLX3MvB38bD7D905wz41jRIb8nYsYGdA=\r\n=5nf5\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.25.0_1653101269659_0.3936255794260961"
      },
      "_hasShrinkwrap": false
    },
    "1.158.0": {
      "name": "@aws-cdk/assert",
      "version": "1.158.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.158.0",
        "@aws-cdk/cdk-build-tools": "1.158.0",
        "@aws-cdk/pkglint": "1.158.0",
        "@types/jest": "^27.5.0",
        "aws-cdk-migration": "1.158.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.158.0",
        "@aws-cdk/core": "1.158.0",
        "@aws-cdk/cx-api": "1.158.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.158.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src889297633/src/js/aws-cdk-assert-1.158.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.158.0",
      "_nodeVersion": "14.17.2",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-+Ar48a444WJgIHpO59048D5yjVBXdiKmXwp3Yd/SSzEAmzPmFZhodDO48u2kfMOWm67T9nBlIEd1crnSef/9FA==",
        "shasum": "24d48380aa7bed44c0d6e4e7d9e1be4f04b1ecc9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.158.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE77vqN69UmkRfFneUf3byqUgcqJwzJeQzFZ2OGEvljrAiAE5tixa9KXcF1GibHmwpnuwbrJLfBjWxY1F56AazT0yQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJikR7vACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrZRw/+MB0YXVHJxy5C2wrEsyUfWsxQENVSfS7CM9FGUJL292uNKBq3\r\nbgN72TROskNxQdoTB4pz8EwSt+qnFBjnPykFA1d0Ox1HEw5l9M5YgIvq4+8k\r\nwLf66jHJggzRUsdF7ol/cOAQEJ1njEnFxIFuArOvpRyJSWsVpOkUFZ3nbfqu\r\nGrtmrzSXx0MIt90YZW7O2ITyfGKmO5xRgrGiK9k2Rdyn5RWPm5viGWhitdzP\r\nNudCMnz+tf1kdPSKqkErpO3kGkHaUBYbI/7WP+kEm77QGaNgGCHzQLSEg80L\r\n+8ta5KthQDxJjYJmUFzApbpXpbkqVJlnrgEuA/QcueTxvco431yuAWRY4h/s\r\nltk6IOMJoPa6F/xY9TEpibCvCveZLShyn6OIT8V5/crtpRf4I+pKMXJzmdkR\r\n5aakNI4Pul4wjnHcsfCf3DyC6jg8Ou7/93U29jVsMaMUKtsCBhcB6r2oXii3\r\nxDqxQVwJNUQveWRFb9M+YufVS7C0/gdOeparW5cB3/orEvgG23tbbWvNidlP\r\npo+1ApTTOXge1t9OxTKh2msFyPmSgVrO0TcS5laTN26TX+2+USG6r0BhkkIB\r\n4e9TKKW3DQfAAoyYoRv0MrKwIyN1XU/i/c8kPLf9B7x+SzNLXkdqJwZMH85g\r\nM4YyPqSHOqnROHz0SrfWWMUQaLThthQwUr4=\r\n=/VAM\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.158.0_1653677807401_0.27391380456240655"
      },
      "_hasShrinkwrap": false
    },
    "2.26.0": {
      "name": "@aws-cdk/assert",
      "version": "2.26.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.26.0",
        "@aws-cdk/cdk-build-tools": "2.26.0",
        "@aws-cdk/pkglint": "2.26.0",
        "@types/jest": "^27.5.0",
        "aws-cdk-lib": "2.26.0",
        "aws-cdk-migration": "2.26.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.26.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.26.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src655486610/src/js/aws-cdk-assert-2.26.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.26.0",
      "_nodeVersion": "14.17.2",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-wJhVtlpkyRiYSpsQayaY8Gp71cOE9lvozQXtZXo8YC0j8w5Tw8hRvxLk3aXs4b7TwgbsysMoayPbr2HJYlWYQA==",
        "shasum": "3e3669f21d0b4a7dddbdca46a423fe7d2147e681",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.26.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFLM6mI3ZkeSIL9FG5X9O7g3dM/oDDMJ1VkywCcc/lefAiEAzkt+EJvXVD/IZKMbW5Ln5iDSivrPke9I8/PifqEyteg="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJilSmQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo+2g/8CEBDvLY85Ln00nhxK8Gh68+ygnZyKYlcX8Bmu1XyQkYcgErb\r\nEdVO5ekxRRKSFOqowXnlMwBwenwNy9TQqMELKiQi42+8goIv4o3cE4XThF3L\r\n3qU5tpphfGXn5xW5fC4CfJ3+BVZR+jThnGm3q9JYOJcy9I37knPzVsxN8Alq\r\n47rQ7e6hUwZ6Xtbf3YR8x1dpH4f3o09oaQf41BXlbWJyV1kooYgwqVl6Q07g\r\nmjkkjN50qBcik1nMfSJ4P/oXcep60HMknPIOmXJcIj/5BPWNZaSDB22hK+yV\r\nE7fZonAxxOE5w/+pYHOVxsR79fY301M7ltb/7UXz3R3QhbFK01zmLZnEsPG8\r\nOcXst+JaVdCyZroP9lf9JLrelLidyTxBPCcHO+28HCO5nqev5j1rO3LyayZS\r\n2Y/Xbs/AT/bSWY42AqOqG8zjNxDRiZ2UUG0Q3wVkbnYW1/z3O0W2NpU2Z0QL\r\npiD6h35beLMJVMN2o33YBNHnOUzl9aQtiPfcdV8IDRYM2EMHSCbdh8TEyePA\r\nhXZHjUffx01bFSqLsMimXvRluxzMuGhT7pm18bIWo6p5e7Z1nRjUyrwOhtT/\r\n1cDo05cCo3iBafaKWOauB5WgUmIW8eTo1J7aCBiOk2kkv07M/XBHm1vSjany\r\nlZB+OHByoQBHW27xTFw6c/YascSG5lX3MkM=\r\n=wLuG\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.26.0_1653942672210_0.44587279237362787"
      },
      "_hasShrinkwrap": false
    },
    "2.27.0": {
      "name": "@aws-cdk/assert",
      "version": "2.27.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.27.0",
        "@aws-cdk/cdk-build-tools": "2.27.0",
        "@aws-cdk/pkglint": "2.27.0",
        "@types/jest": "^27.5.0",
        "aws-cdk-lib": "2.27.0",
        "aws-cdk-migration": "2.27.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.27.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.27.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src045217731/src/js/aws-cdk-assert-2.27.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.27.0",
      "_nodeVersion": "14.17.2",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-OU3k7fwhduUl1tAFvIKvsoW7F2Lz+Aq6rxR2enPSBX9aCWk59VCoPV8xDe3RzvGEj2iALYunp7s202S3ai+eVg==",
        "shasum": "9778938425b5cd3a103ed26243f64c117838a788",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.27.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDJYxri/0oFiKXvbnHbZvfW9Sq1LTfhFNBqR9CxPOcIewIhAK3E6/JMUlYbd0fZ85g7BGlmO2qLHpFE03itwssP5WEb"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJimWzqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqUDQ//Q+pGbR99YY/VcZT2MlNMW4bAY8icSdSy0AqI2hhWkDYZa/4u\r\n5BmfZFfNZn6wtdca8XdIO9B5niecM0H1vo/9I2H1jvz4fBmZARvScFVx2umy\r\nU3WJcGMGyqv6fxhmdz0bNRaUNQKVpaSoUXlalSvYdJPBffurKj4OXZSf7uS0\r\nDRXVmQbm4TBAAoMMmAqOUerp0ntYbbjg1o6StMe23ntyfmV1RbuuQeekgO1d\r\nmQJY++Ue22D8OFm9g8fgxNj7ed7wdgptwPFK3xcUcswd6SPn2DRzRV3H40cW\r\nCcdP4yLDIE7x6aOphRdFNMqtvSOXDzBTPqa1UJZwst1AESxvRhTM7J33eSv+\r\nJjeflpsnSXhswWqshiobqxDuG8s5RMlElKcUkp0zeroNoeghgRl4ts0uFx7D\r\nk1jpJs4gxcztCr8h37+bfOOi/8BMUsZhSyRlupPcoI/C2PFiweq+6UmV3l3Q\r\n16DAjS8208qIwrNZw1iMfu+gqa/xfJyD1W5xVWYeRaLFbD7bViElQ9WhvIVv\r\n+GK903YrjMinc+LJAJjM0U/iUICj/ONA5AZoJlcgBa/OKC7grh/viQR6kg7a\r\nP+N0TmSDmJE8w6ohSxhVl+qwb+gEHsM1jmZGxtMbEtC49e6VqUV8izeRuUTR\r\n6WVvsOYfVZSZYut6GkCq+8Vc3foTlabYYpE=\r\n=gItS\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.27.0_1654222058688_0.3394919119260196"
      },
      "_hasShrinkwrap": false
    },
    "1.159.0": {
      "name": "@aws-cdk/assert",
      "version": "1.159.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.159.0",
        "@aws-cdk/cdk-build-tools": "1.159.0",
        "@aws-cdk/pkglint": "1.159.0",
        "@types/jest": "^27.5.0",
        "aws-cdk-migration": "1.159.0",
        "constructs": "^3.3.69",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.4"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.159.0",
        "@aws-cdk/core": "1.159.0",
        "@aws-cdk/cx-api": "1.159.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.159.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 10.13.0 <13 || >=13.7.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src314507446/src/js/aws-cdk-assert-1.159.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.159.0",
      "_nodeVersion": "14.17.2",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-T317Tcgd5t4pi7/nPx523GM3zLBBWjAtyMc0kDATogWuqowupmyIWrixML7GlYJZX7xGUZ+E0Y9StxJyaztLAA==",
        "shasum": "176d505e7038e93506eaf285f7a082da90717b66",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.159.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183993,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCdRcxS0cBjz4Jmtn9WvOdUxOT2FbhGCrH6F0z59n6SuwIgI6VUc64uCcWSUbp9p2aj3s3pzEpwyU1Q0tkmoh3cCgg="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJimXMiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpcIg/7BBUjOx6GrO6vUjSt02QJsX71oHS7hou4ynO3pKxDWY8/Wtf5\r\nvg2aR9pgxWJV6T32F/XUOmI5n2KLEf+8kxkhcx5DhvJIvr9wLXL4SBJ/XtC+\r\nfIqchxBXxeUtxVgcKTR9rf5Gx89KPvl1Y2vzikXoqNIGtSPGmfSFe/Xo6ewa\r\nExodbRXose1UUhIHcPx/AXwMmz9iQjSsUkzPLvKzxkrKxX7gpGJliGsnepmq\r\njn4EHyDu13EXYm3r25/31yiPRUDwHzz/41pB8fXBXVzA/E+ejCnbAbncXGOw\r\notrOy3npH3LVMzbAq7R7PUJPAK75GvboiCmBGK7YdewL6FFSS8QIjS9pTFOL\r\nIT0ZYPwmGdiRITGNOuybk3poKX2AiYmjYP9gunEE/WxDcJyM6JNttJ56ShvS\r\nQMxmwjB4+v9R/q2J1nK0Fryt/tBw5816QwP6mL+FaVZJLdeQyxAX7XPXE678\r\nAOT/uzAzoMd0bTAVIED+5pT28i9N9ToyunkpZyzlXKnyXF8aQoFQGss/fXEi\r\nURJJCHLELba5io8UGSVmmX28DP3qdNTZLBGfe627YfL6L6z2y2qVzO9mvgC2\r\n+23qkoyJWXCsnxM4k/2TDE9Iiu/fbAqkECbuFhS6bNTxKoTAlAiZ+z8CDxuO\r\n3rOLbVUNuzX9dAX0OnJvQwlx/OJs6MY5N7o=\r\n=M54Q\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.159.0_1654223650044_0.4000375983682636"
      },
      "_hasShrinkwrap": false
    },
    "2.28.0": {
      "name": "@aws-cdk/assert",
      "version": "2.28.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.28.0",
        "@aws-cdk/cdk-build-tools": "2.28.0",
        "@aws-cdk/pkglint": "2.28.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.28.0",
        "aws-cdk-migration": "2.28.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.28.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.28.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src976571241/src/js/aws-cdk-assert-2.28.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.28.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-0xkzSaO+Mk4wigNEQNF7h75TpU6qIKuuubf7BDrL0lMWJ3eayDcTvb5oxXihqKj8nHzv27BLMZ0phaofAknpBQ==",
        "shasum": "2d04eb43ba9f0993337d6191e82d1977ed21b22a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.28.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCAQsPh/AXzuq6NBfsdmtPmN+mpWLZ89yvEefjLpeISsAIgTkzuvU+aOMSlEmyKdfc/N4VHE+dRtxfTC1KL3f+xmcs="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqI6NACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoEJA//RqN6W9a8xUN7sF/2OB1P3LxpkvYPoC3VFnhvwiguUmrkyn8U\r\nH86fGawGvgdjDvd5B8o/XgBO2cywNyGEbpNfR0tdYSgeLget8Hd/Nu5WUWen\r\n1q5Lp6c07OTnSebRZOTMpuXwcY//s53HvrMHTMX2xFG9o9CT7V8fhN0oVdwE\r\nyxti6IPfB4BkyG8xCeNeNSFJTyC6rbX9GO9klpqwqjtpYAb2Wd6YsNuHpaZV\r\nthr9L86Via6XxlH/URd5zPIdV+aPwAocn78+GLGEDKMKPFAnMpKvqBhYfcq6\r\nUKrmQWjph+t8B3aljPRFHNBstZKa5NsgchQm8hHRWnqGiY8LBdgHS5iLN2Rr\r\n54okF+C0CKsyKLxBdS+Nc9lu4HGlwZjpxJSJhZyXbWirELwlkVgezlTzE3yx\r\n3Tlko9/C+vV5We4aDy5vTXo0jI9ww73yXTcmnr5huP6slL24qf3SbFYwrtuA\r\nTFkNauhlZ7DA3Dnr2xyPl6MLNqx/gbfRNa1wb33femqLd67SW+1Xas0EBV+E\r\n1hcSC6gjvMMOfUZPIEUH5XkhZ0/InTWQOX0gAbfqc2kr4HQgmdsDIgnZRkXl\r\n6xa7FQqYWUnPT8QUksgRtvxMblGndcg0eaYIzeSxGD/poGeTEAvgpjxclx3b\r\nzA7uqIbBK+DKmOwJ+NOcz2VSz5AS+DXJuW0=\r\n=OjE2\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.28.0_1655213709561_0.5073759165571712"
      },
      "_hasShrinkwrap": false
    },
    "1.160.0": {
      "name": "@aws-cdk/assert",
      "version": "1.160.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.160.0",
        "@aws-cdk/cdk-build-tools": "1.160.0",
        "@aws-cdk/pkglint": "1.160.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.160.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.160.0",
        "@aws-cdk/core": "1.160.0",
        "@aws-cdk/cx-api": "1.160.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.160.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src569265636/src/js/aws-cdk-assert-1.160.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.160.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-UIdBNpFg+lmFncoqWD28Ri1r8r7jbdvLkhEhipgVCMv8kqKYDBb0VgDBdd+uEB486kU2TIflftHa1q/135gOdg==",
        "shasum": "b43544d3acd54ae853e7333bf8b7314a1031981d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.160.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD/cgi6p3aMTAhmQZ9aX+OJKKpZd8Ifs+Lks9bbtEsjOwIhAP8ozJmVcimi1zT68p8bTJb41P/QmbjLN3vjshQ2g4xy"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqLi1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqHQQ/5ASwxoZrrHKgSyg6pEyeAj/5zCzrf4RNf8LhRqZ9uEjuiQSy7\r\nQ8N6eoaHrdBF+vcjCjRcReu9P8m/1T2ysBUQY8JGN4Oi6JN2aEU837cT2mfP\r\nZV+/xaPQedeMlSDsQ2iH1HjVQXBANsuOHESnfk40IZR4R0jIGYUKk26VOMfG\r\nCbpfjwNgnmlZjHK2Pd1bsOjuvePifuPnxK40ZI8Tqkva5iLZ5y3XfLVm1NPi\r\nh/pK38vy4TBu42aDOA15UQ40EYYpWDOrFqkipwaeCYQIMAqs4KiFH0BDdWL9\r\n6Kbc7b3HuawT6L8Dlmut92xTghErxz2tvGiXN07Db3DOvLw/oouQE3p8ol2u\r\nhb+MoXXEHo2QuuPbA+vdxBsRYM6vnHTGdX7pjPOE6bcEAXuqrGej/yUb8LUT\r\nVsZ6LsOcaZFRMMU0N2J8ywrFI7/do1CWeI1KQ5oWczBco7GlNST617Z7PrzA\r\nFW3pdY5+JaKCPt/l0m2ERSjgZNnrixqxZiZefqkJOCn2f2nzVkZtioaBwBtD\r\nZAGfnB7TkTA3U21mHG6fqn2rFXYrIW/RC7vBqn5FwnL7urKYYQEblTYYP4Ud\r\nBmRA/Z9ukVO8mfGxJt30y04Hx3LYnHVhArrzdlc7w/vVIYFie4w9kMMfL3/o\r\n7kpZ0iVrHrIklvRt7l5TMexGDOUGvpVcqlE=\r\n=7Ytp\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.160.0_1655224500762_0.2612104312357866"
      },
      "_hasShrinkwrap": false
    },
    "2.28.1": {
      "name": "@aws-cdk/assert",
      "version": "2.28.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.28.1",
        "@aws-cdk/cdk-build-tools": "2.28.1",
        "@aws-cdk/pkglint": "2.28.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.28.1",
        "aws-cdk-migration": "2.28.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.28.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.28.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src889193517/src/js/aws-cdk-assert-2.28.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.28.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-JhScw5TSPm9juAPmW/srYhwCwK4dtTHn5U8eJLJnb19U9V0+2NXlnlzlCNY77/OIMF3lWykjU/dsQe92GXAXfg==",
        "shasum": "8a89584dbaf17f31e574712866b9f65764d053b7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.28.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICkyeHrpf3ALHxUmL9vNgO0f5WYHkEUsQkfPbrqD+elgAiB70AsIHjxST/fW4Amo7q1tNHNW4mdSWh+y2a2EWrtRlA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqnnrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoS1Q//cHEX5zXc08TPMKn8segMiQXWxOSJVoYcvZLzq8vO58ELIhQQ\r\nOv0ACwNMP4dEYqVJ9yRpfhP6sq75vFz9iUfnoxFA7xouJCgYsYlq3JS5qmvG\r\nZbRip4Tn+KUpWuY+1iYtUhgFN6t4XlGiITG1OyvhwSmKNA96fA9X/oX5/i/v\r\nqcLbDwQdBzKvJ4WNJYJBzHnx4SmFwH7Yxmu94uAQqfjdkATKn4Fcdi1oeTXa\r\nbTptMNpmDxaf/fgt5RFvYdS17qNLaWmSskC9XO3hVZfmRowsGUGETjGgbjAU\r\njubkPr9MaU4juRgBP1peFSR/ADH3pdcPqWFP58ZXXIdUc4c5SnuCKi45AxJP\r\nBzgW811tw27JGEAodWC0g4gW0m7DU5+tmEaLGh+Z31y8kvOwbAqd36cWXNgN\r\nMa2SZInlE/epjLnv3dDnnYocGsDebBy6w3mdOScSDyH5V0ZR0biAXq1Brpe0\r\nxsSVgCbFRI1b7mIO22OxJ+IZYIGnZkeTcA8Ws9pptCUMTHPkIcHt0QNZZbY1\r\nutDi6rKxuMKOzYpIuj5WCwzHEVRlCUPGdiB3A0n8nui5C4iqrwweUE6tF1Ea\r\nsJ5MC6sTx9zrHB9Qv3txIz2/4vbXqMirW2OkXUayyDwxA3UAQ8Rlf+OyjzA/\r\ngGpM3jNKlOWy+2q6LuElt2aFdqM4874mYNw=\r\n=xeDL\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.28.1_1655339499459_0.1706695319280147"
      },
      "_hasShrinkwrap": false
    },
    "2.29.0": {
      "name": "@aws-cdk/assert",
      "version": "2.29.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.29.0",
        "@aws-cdk/cdk-build-tools": "2.29.0",
        "@aws-cdk/pkglint": "2.29.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.29.0",
        "aws-cdk-migration": "2.29.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.29.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.29.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src618657400/src/js/aws-cdk-assert-2.29.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.29.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-zWppAplb8loMcU4oZzMC4dqY9ZuLgv2E5YPREQ00Gx1VrpHRUqDa+dpJ4Sj7FlZBFEllwJfqj05c9M/LaHhkKw==",
        "shasum": "e8f8ca49d617bf8e109aa9b932abe8b04a606184",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.29.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDAp1FIC5StNIjyFGo2A41SogdGAwguEzau4wAFhhqK3QIgZeL+R/NbF45pf809aeRz6cPNSYWTYugyHxnB3oDDFiM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJis7BkACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmolPg//f928ozQjCeyuyZ0Kl5sW48tt2WQaJEiuDnuAR/JkVWDbkkiy\r\nTwZzvGGFvMxklJBALXue++orl1il64OyI5TMm3J3NEvsxzm8acKB3qJm1xsV\r\n8OlnIDNEQO3VSBexKpETKH7XkjBnOvH951J8EswgsqdqQv9dOdye1tBF/BHX\r\nLTwSzWtCwRvU+n1P3ULvTrE54A3x/xqUClvOx6IWEAFhxdm1/oNPXarFUies\r\ndLISW80b2nbpp6NNTWO2artZeoco5ifzWnnOZ2hSF8YT79ytTH+k85BPUyMl\r\n2IzGmVkPpFOgKuU+0EJH8RtMwRY+UVVZlRYRbXwU+qlV26hx3rpzHfrlPbp1\r\nvefKEYWktM6QAGloeir67XYdDL/4o8wHiveZvKgZJBBLqb3rHpwOp4F8DNNk\r\nIIvwCPDHgtPgjqGuK5Zry6JUAai8vv0Yl5xA9a39RJcojlw4nUXZVjk72LgZ\r\nxSZ+xLMAj6Ss3sQXChh5c5gjXeQUz74hlhfrj4sXYNWJYd1P9x/qjdNtlEBg\r\nUtgLJ9O95c0/51IAd59K7vUlU3SIvnS0ZK8Suuk1FUGfeCl37Q1dF4tFA54B\r\nRFyZfd8ht4SGLGK675Rbb61/k7rOeuqKI1xOr+R7vNpHQqFaDhRZSebT+e6P\r\ncNFwjj/2kC3ZArIosmYfTDBTM116fsBjC+g=\r\n=DAss\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.29.0_1655943267806_0.5358569659551187"
      },
      "_hasShrinkwrap": false
    },
    "1.161.0": {
      "name": "@aws-cdk/assert",
      "version": "1.161.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.161.0",
        "@aws-cdk/cdk-build-tools": "1.161.0",
        "@aws-cdk/pkglint": "1.161.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.161.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.161.0",
        "@aws-cdk/core": "1.161.0",
        "@aws-cdk/cx-api": "1.161.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.161.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src943528781/src/js/aws-cdk-assert-1.161.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.161.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-bPd3+0pdnkmpIm9J4znDMw2VWuB+fPGUlNOEap2CeSMe8JoOcGW6O3aarrnM2G7ZEJnG67UeBELIAxBWIVwtXQ==",
        "shasum": "74314cbefbebae867fd07833e2fb4f0ff2e33d67",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.161.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCBO5B8imfZnXHNtMO9Bc4AK/E0f1nVOPEeCcIz/rqeOQIgS4j1CmRLafxqTqfG8SehWs3sb3HY7zLyAZwyPLVwKiU="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJis8qhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrYTQ//UBWGT61imwnV2bSDRx0noKAHQUmKJXVkDsZ4iMex0xWcxFYD\r\nANDQGJmOwgcIq4cCTFQX19M2JqNx2BcHhpt8y/U8t5CP54tIfLdeu5H5Coaq\r\nlH9j88wy/FHyZzxwW7gXiB9HnelAaLbxSA0f6Zx8BqDcZN2Qzq6e4jUCHcUX\r\n1bN8ijWakXxh64RvlLDubbYz5bV27/KgyjooV8K8Smu6OSPN7HuNxx/w+T+h\r\npHe46axjG43s9XUJeqzZBK4kn0U4NqtPA2FcG5dEfFSbj8rDx+b7G7iPREua\r\nvsRzSuNxbAvHYwGBFuzOH56+/5E08s9cZZH61/h5g+GKtOnT7IvOSL05h1OF\r\nEBDGeewPdHys1Divg2FpCSW9WMUi+/PfSI31tPCNlnxYLvNNRSHet+NN/1Ax\r\nx71vi8e1OW+QpG7AA2pi3lrMdSmj/XjEseY/221K6JmLcGTG5UcpgOyI/xr9\r\n7OyMbof++eSW7ub1vJMotaO0285DJwNmsT5C8BXgI21woVccZ3rN3L+cFZsG\r\nhay5eMZHxmk0tO4IDRQfCky6nsQsIVGrfBpEcs8S52xBWSxAoDyTLmxfTwt3\r\nUC3xubO4omA3znaOIatG+CHTN3MJzBj1raZnTu20GvkPJqKWizaKyVbo+K6l\r\n8FeApjWmLOHXWKPuz+t24WVOxH18nZC+Qls=\r\n=ofx6\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.161.0_1655949984950_0.3916968844076394"
      },
      "_hasShrinkwrap": false
    },
    "2.29.1": {
      "name": "@aws-cdk/assert",
      "version": "2.29.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.29.1",
        "@aws-cdk/cdk-build-tools": "2.29.1",
        "@aws-cdk/pkglint": "2.29.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.29.1",
        "aws-cdk-migration": "2.29.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.29.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.29.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src675588444/src/js/aws-cdk-assert-2.29.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.29.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-qK+iuIFWxqKXrU537Y3rz2X0yraUB6/SiJ95i/qHUKJNJdYokhRl8fFyrA20lN+/AYZQ9NblDTaWPaN2ReyUPQ==",
        "shasum": "70a4541eb5d15e8ed1c244c29f6db82dbba71a1d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.29.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCDkFJ7u3ywaI0sYf/QHSTPYWgVZaD7lVXtX6YYMVpDkAIgJdieP94JD5KbLgiCyXQHlS4vn7aXEjvY1jq4ZtMqIjI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJitkcOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpV2w//fVtaoCWQMUn1lM3B8R/2Hkd4biiZ2kTmoW7G8XjrIZiWTGYo\r\nwmgQnZcMhTmgKHql4UPr28aMKWWIwAM/fMXtlzaRTRYdQptwRg2w2TI1KQDF\r\ngOJskuu3HU+OXot78p+N3xFzHRQSLp8IRec6DTAkwzbWs0kjGGXZrDhvJZ2x\r\nmtMre46XzThe3FULjHl4FXdaMm1dISID2xXT+uydivriLdVB4nxUqHEdfbqG\r\nOa3bE2vWLk/iyBhfmh+WwZMR/7SOFVMvKl7m7JxjCGGhYxZ6kEVPIurJDjEJ\r\nKWn5QdG1l3qJnDHcDG/sGE0CzW5I1VRK84LLW+Tm8BOnsH6P07KEjc5KX9nY\r\nLcmnqv2cInChb/h8S8v41JIuVrJlYMcMgF4BbXxISl/nh8qdTf4y1/hI13+a\r\nClXVLFnfCxx7HqzQe8peHd1SQnulOG2RJk2gHbVv93hEaBDcTB0hleb3GHMq\r\n6qC/5FXIsF0Vor63dnxyudI7JIAk4DR4QclUNo7yBb5t9iOn4CkH+dJhoVdQ\r\nHJYFJFl3suCwmS6jepfOIka3FnO8BF1C8QwEgDCsik23vkFfm6omOFTAePsp\r\nYntDDPLraA/Sl6py6Qwbdyg0VsFdv/d8asGMmFBpNUw+TW/lv6Cv5jz/aE/K\r\nrut9pt+NiiVnTJhQ3l3TyLNmvSoTLW0mi4Q=\r\n=cftQ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.29.1_1656112909900_0.41527282984895697"
      },
      "_hasShrinkwrap": false
    },
    "1.162.0": {
      "name": "@aws-cdk/assert",
      "version": "1.162.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.162.0",
        "@aws-cdk/cdk-build-tools": "1.162.0",
        "@aws-cdk/pkglint": "1.162.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.162.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.162.0",
        "@aws-cdk/core": "1.162.0",
        "@aws-cdk/cx-api": "1.162.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.162.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src974621778/src/js/aws-cdk-assert-1.162.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.162.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-tB0EhiKPjq1sNMtgb/G8ZilYZxNezOE7clOPP6ZZvtq2nbBPwail6uWr/mi9P2ZyNkCKV3NBllBbVeoKddec5w==",
        "shasum": "8446e598e1e43e3f1f698c5b7b616213a82fb066",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.162.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFQqt5WRoDCGXggoPwZEo6JQPMb/hgjwRQShuEc+k4CKAiEAlc7eZgZit8vrB5jW1VIeJl9Ei6wBrvIntIdjGWifwLE="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivufTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoBHg//RytgFLI7YlHgl8IEF3p8peYyiGVePVdK7hpJIyr67MUzFkj0\r\nig+BaRP/dvvKXVV+qD5pcUa3TApBQHlUa5/cM+36LSu2jDa1T3cxqToU6rDW\r\n0c2sjcKvOtKZA3XQnqj/ayG+MUxWuEwvf+n1I/UvOeJjG0iDKdKvZSdSP7g2\r\ngWVdfskZUXl9ma/2SpmOdWqogD1jnRd+mBKAmnLF+wvjrIJAZldjKMG7M4/b\r\nV2j38rBS/kasM7eEc/o0CvFGIU7C+mADpkQ4VgP4oU0Fwpm1VT4P8VAbdW8h\r\nHxaWs8LM8j6aWYDrlhpYCa5csnbmiDu+hWuh9zQvTQbO6zpAAXPdEdwMKqL1\r\nR8nDDMn7h6xjHSgaEMZ8JBQwFRyt08ToBGUXCJSk9Xfdx/ueEpIMrnvMGVQm\r\nmEsKq7xN0c5sJvaZ546VVLYFM/r3BFUmBTC1mTcdY6s4Opqvbihumey1a9iR\r\nf/7giRkhWDN1glWUOmbzRP7rCmrKVcBDwUCQ2pOtY0qS9T+K+Yac7orh+ywM\r\nVGWzLvI5JJ/JmbOzLIu3GTXi/5CLpMNo0MSxo2380IYwzHwf+D4Zf5S3Y3O4\r\n2kM3hBMXki5HWurMxzy86OSnux7DieqOtigFSUVCi/x1kNCizxersqLQbnRk\r\n2J44diUEbqWiTxwsFK8Nr1djAZdo8YAaI8U=\r\n=tlqV\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.162.0_1656678355504_0.8101365676407488"
      },
      "_hasShrinkwrap": false
    },
    "2.30.0": {
      "name": "@aws-cdk/assert",
      "version": "2.30.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.30.0",
        "@aws-cdk/cdk-build-tools": "2.30.0",
        "@aws-cdk/pkglint": "2.30.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.30.0",
        "aws-cdk-migration": "2.30.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.30.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.30.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src164888782/src/js/aws-cdk-assert-2.30.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.30.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-DPEyZa1Sx+OyXnoMROAZ8JHTZ9Amb5pBmZ1erRON/JzPYrIG4VUCU+TKTORgxW+6L5B75yokOYRmTyXejPKueA==",
        "shasum": "df09e290a2c2efb457469685e789705362c9138f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.30.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDXjrgHvJr4dboym8a45FkSmJUJDYccDFgjCR8AECQM9AiB8OeSEGsnFepR4fbFdgEYs3LTGxiK9NftjZ0kBCov5fA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivw4/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrRrhAAmofwtI+lJkkw2MXN3QrKQas8j+Id6udzYt0B+y2DwQ0uBjJK\r\nwKbbqRMYyWvYLWd60XQGVIdno68L1K9Gk8+3myoKdzgkM/InHqlprs6EezQY\r\njVHJ15WY354NHe4BNomgB9RTcIfjmZp5BEZHsn1Gepqffes0tyBeT71vvmr4\r\nne8mD19EXjVmppQM9PPEkb7ce1Fg+SQDno1rrow6D+lQmwudkd62pxTqCxRt\r\noWGT6FI2ZWUc4+H9QYFxo+42/8tOvzbZEZ2lb5vXlqJbDb03SSh7Mlm1FAYm\r\nP7vqb+pSy4wID8WYcawBgqW1K/0ELxzxuy9FRwOkHqG7pzTs70J2UoHeiHk3\r\nI6S1rHu3N1L+Acbc6J/5Te6aFcu+JQ4Gczlxow1l52zKsFr/Jvcmud+HHQYo\r\nPUXZj0zxM/Ij45bH994VSExPMpC4/11b5EP+joXCbvkDbmJNbiFjtxh779/H\r\nicDPjREtBpFbAmZZgyG5mrUgfhWBs2ZnPG0xwM94RSVFsvATPKYP62J9PIgE\r\nAYSJmVDUozfUbh499Js1SPKxxU35rsIvfBWhLZuwCCl44KaqmMeucxZsc/BI\r\nsINT93CSmaSA8YGT20qiEYw7X/HNzRMku9oDr/1xZ2HeRWVzpBGAqJJoUbMJ\r\nTj+NttdlayHfpeZZyQJcYQAJEc9nT3dinhw=\r\n=M8Zc\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.30.0_1656688191706_0.5635023242729515"
      },
      "_hasShrinkwrap": false
    },
    "2.31.0": {
      "name": "@aws-cdk/assert",
      "version": "2.31.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.31.0",
        "@aws-cdk/cdk-build-tools": "2.31.0",
        "@aws-cdk/pkglint": "2.31.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.31.0",
        "aws-cdk-migration": "2.31.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.31.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.31.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src189043115/src/js/aws-cdk-assert-2.31.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.31.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-0cXMsE0mhzjuKdyLakDIFXE4VyFfS4Paa9dblHkoC6Ebe7pOpvwetfRRWyiAhf4Jj9XS0OR7P6gh6hUbxCbYUg==",
        "shasum": "163a93b2d846d94de6369e05ef7f95933f92d6e8",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.31.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHZfRKljuh38W71kGBdsUL3rgdsgL/gZ/i0b+FM1t554AiEA0ONAR/ripBhdy0ZIVk83JhHgPi+L9ZmkXVZBmKdEL0s="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJixgMwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrFxQ/+KsB50X/W6fWe11wSZxSizQkNvjE3NZmtFXw6FYGTLQMBTp3M\r\nt3TmUfvIUYTGSbit+Fy1GU/RY70qw6thO+ZWxzAlKLeTuO0O2n8ce6H/pKKs\r\nmHg0utawB2wqJftoRtQ+34Rcs6Zps481hWuI1bjMXci8YyN1siEGmH1g/v3S\r\nUvs6HBe3tKdsB9WbwyzASAoKzjCnYX7pz+q+OeMpoFtNQsJjE0SWx6xSImnm\r\nrhp199DAtzJuTKo5SSD/4cwMof94towyP31P37TeoVu7D8mX80iPDNNCZUdb\r\nsjI5ZIbIUq4d/c86gSA5vJD6PM/09bwJ03PjLU6/BC3KNVOM0pGRGUdZmc/d\r\naU/t2GLw9yNPg9wmopp9iIBwUToIJHrBXTY5EGk6mPpoIxDDsD/m/xK9eAOn\r\nay7OLEXBaRvTLrkAGfYaIKqNzxtPZjqIuzcQC71Rj/8bsNc2fs3SuWWqWKmn\r\nvpuv8NazlzFDRERDPe6YLFdNEcOQioSMBT9JJdVbH2GzqGallLIE67p9Z84S\r\nK6bl/FlPIzrsTRqANvbJwVH+Qkfki/Vh9uYvDsbmhr473q1TsBx0MeL+KhJ/\r\nTRtSf96ymF0BvCd35T7yjM3lzpM9RFbIKipwIZleFtCtgWiPl0owpIn1BPvh\r\nQ+nIDK3wxFB1UVOzgy2NU+4PrkynFnllfv8=\r\n=nEz4\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.31.0_1657144111845_0.19210293153223623"
      },
      "_hasShrinkwrap": false
    },
    "1.163.0": {
      "name": "@aws-cdk/assert",
      "version": "1.163.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.163.0",
        "@aws-cdk/cdk-build-tools": "1.163.0",
        "@aws-cdk/pkglint": "1.163.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.163.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.163.0",
        "@aws-cdk/core": "1.163.0",
        "@aws-cdk/cx-api": "1.163.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.163.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src979664921/src/js/aws-cdk-assert-1.163.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.163.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-oIF4QIa7BqIgfK4eF6OmyilktdVm0l1zw//THfx+eJg13a0HZvHJQ4mBxoxMxH/tmBHizwnHHcKRVS/w9n9JDQ==",
        "shasum": "3212b81d0beda853698f6659ae5de3ea6f076ca3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.163.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCsGLCnqSM11HY0gw04Djh7sEnbTBkFIbdD68bm/8PnwgIhAOAEIM0vSaPS0iNlUYHO2PCAatXgP1+nxQP3oeHBtJ3A"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJixgy4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoO2A//YWfBtPIyQPyrS1O/x5pulYz5TytSNQsOftkIlj4Ysvx0URWW\r\n9vOn7Kvoh+ivpQ7AXImkIQ6289FD/ThgZaSEtV2wyOFhujmqOft9DlsaJbtG\r\nY3U1GGlURFoq0rAW2yFIZobUwq6yB6zz2/y1qxX8Y9Db61EbdpEITOmnUdFG\r\naOZ6w2B99f6ogcdbQ3EKhoqtIYMSZrqcMuiUS00o9Kc403xrgV3DCreMneDN\r\n72D6VvlkZFaYKpvJ7k4t9pqxlMajvo7qdWxE7PDl+oJ5O6SYNhziaxhPluT+\r\nJulK3ChbEf9Lw62dG3pqpvl/+BApBrSlgMETW7uzR1vlybVYSNkJg1wcUK1l\r\ndWQ/FngFlsUo0J7NSPA5jr88EP7aM6bWIWzvJo8ocnR0FUr2ady0jueMVpt+\r\nZkoKnkB3lKXlM26ZrhInZyxTZQjiIAdF3pTXbi2rgiajp162jQKF0oOqUb4J\r\nHhyB7UKtnAqMmr8+JJ30EJh4Sae700Yz9akzG8lFGrxJzuB66/t9/JfnAWxS\r\nFL5dLcF3W7OkCiSeZ8mA9z+zFjR36Yh9b2AYx9IgsXY1uzSBfrFK8zyL382H\r\nrurbeG4TGF9Z1z8eyi/pFDmiuvaft5JTGogiCCK+/Cpit3q934chdhZOhG29\r\nEVzWlwaXQWK++mUN/JlS5qKehtZJeO1JE3g=\r\n=V7js\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.163.0_1657146552713_0.3927580019525705"
      },
      "_hasShrinkwrap": false
    },
    "2.31.1": {
      "name": "@aws-cdk/assert",
      "version": "2.31.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.31.1",
        "@aws-cdk/cdk-build-tools": "2.31.1",
        "@aws-cdk/pkglint": "2.31.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.31.1",
        "aws-cdk-migration": "2.31.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.31.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.31.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src200127804/src/js/aws-cdk-assert-2.31.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.31.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-O0VV25scMPvAtK98murgcao+xupzdUSwUdiGmd55hfprFI2SEQHEossU5bzHKcSqVBT5a5E+kyXlJzRnCcarqg==",
        "shasum": "aff7fe0fb5ddd0661ea3d2038807993cb1ccf80c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.31.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBvB98glEoYaGu6wpc7zZBmloW7tckaFoGuQr2FPDlKAAiAb+N/+S7x8xQb6JJMd4lC3in4Te8rb7dfCAFB5iE6UXA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiyOYQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoXWg//aw1kE1tYjlwxsXf1I4UGDvH3oFQgHQIOBkZlY1VhtJyVW3w0\r\ndYxJ72BHKwdWggXr7reWQdkG01YPdBcjtNDCpYSM+LHmZSxBS2EG3G2rDgM0\r\n0xI6r0GHU/guYwWCPnE6KN8anLBKAAaZlm7TGhNpu5+O/w+JXvhZcN3fmUu4\r\n9/YK0/Mpa0K4N6afFMbfNOGRB1NFw2t0oooYbPZlea5CKfnM87pAUGk4vEvO\r\nuI3KqPk/hTfu8hUWnpng+1VVdypyoAwFuIqd2jtQ6ky3z2bNOlhADxp3lOnm\r\nlcgBvKw6W4oq5W+iu6gF51icwLeBLofWGyJdbjsQY18XIQGFoULwJyjLArjM\r\nKg3G0AAJn9IvIpG6M5D1bBJgjw3ri1h2ZpUOm/aM05v/u2qWmpn7b77g8lJ4\r\nVd9yL3oXEpWTk0M/IxzBZ+Hggio0pRw9p+vokeBeQoU7CbuOMNavN20g4lZg\r\nb9tHRFSlY5nGJ+EnfF9ozs5hzsFimmXvd9AzOVKQwSSUkfZ6WgVZEkHQiUX5\r\nb8hGwwHQA6c1LQpsCJTe2n23kDTxhMnszNXzdaPdlHwGD+frRzv/JQDrE1s2\r\npxhtyZ7l46PEGEQhdCitGW/AwAvmnuIKMag8i1LOhax+myatjpc9d9tfQ6/W\r\nIcNDoI7gC+qSlFQxw2XfRZ0JvfkIUuNIxjo=\r\n=xAYu\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.31.1_1657333264667_0.34998579120560347"
      },
      "_hasShrinkwrap": false
    },
    "1.163.1": {
      "name": "@aws-cdk/assert",
      "version": "1.163.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.163.1",
        "@aws-cdk/cdk-build-tools": "1.163.1",
        "@aws-cdk/pkglint": "1.163.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.163.1",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.163.1",
        "@aws-cdk/core": "1.163.1",
        "@aws-cdk/cx-api": "1.163.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.163.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src001709576/src/js/aws-cdk-assert-1.163.1.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.163.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-ZFvHLE4oflYCwtm+6d26p69djUxXB2tm+pNIJW8SL5gPoAwwO7RIhCW5BX1r0bIAB5rTenMJkNXTTUYLZV3Dzw==",
        "shasum": "c209e65c8986528ad8017376f6ab936238de890c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.163.1.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDjwxjm9KottfxcmAdnT2ZfNEaj0WutufNdBTMvVjA6JgIhAIBtG+nTZZpod3gp3NJcnRIbTxDaLsYZoJAkc6bu8cty"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiyP2dACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqPPw/6A4xonC3lxhbeiKErwcJGhQUtJRx6kGZEAgC7jqly/GAm4RwN\r\nl4+hphbLAi7TxeuJxNjCn+drn43+S0XVttejzg29U5ogCjPSJRM+mSrFutk4\r\n1i0eQjM/Myw6UhQGbqd+atqa/LJKd9d+A6P5HqFWHkvzdP6rOtrSPhbNVk7y\r\nq/VfLywWredWRZykfyi7a1taB8yKThIJpHka7Tja3zNCNjPloDkyGDzcbltj\r\nzMcJF6WRLE5YhGJLBpG0MCUeW6qXMnRdsxVYgrCf67Nrk3JaYISoRdn1ACiY\r\nGVfWGpVG+Qdaq4Gr2c/KryFCROTOvS1MpLU4paD3LjW4t01LioS7qrktuhNw\r\n8gpFTHIUoLkVtwRgRXPlSx9mU8srxjsgGipT74nJNjepO3srMQMK/OqKVS+y\r\nNYuJnqzvt1fhFWq5iP7iFii73PrEfjUsYBiHAuAqcTVv3NG5zPzsNC5cngbR\r\nzek6DhDzdrhpae6tErpg9pbcKtYmUtRhIzOlM5utXMHnnz6kWGzj/FDGc0yy\r\nf+jNmi+Ur44it+XdYKxSJJyknG34viXYVZ6gXlkO0AmwFnsyE1jEY5Y29CTd\r\nJiMkpItc7eNww5PUIJnG2KHSglc1lkGisHFVtFveRmf2Qce/88nLTecnHxLz\r\n7flgmODNZSe+OObh8bTZaqjQqXvxyHBQXHg=\r\n=P9lg\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.163.1_1657339293387_0.8758051088000296"
      },
      "_hasShrinkwrap": false
    },
    "1.163.2": {
      "name": "@aws-cdk/assert",
      "version": "1.163.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.163.2",
        "@aws-cdk/cdk-build-tools": "1.163.2",
        "@aws-cdk/pkglint": "1.163.2",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.163.2",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.163.2",
        "@aws-cdk/core": "1.163.2",
        "@aws-cdk/cx-api": "1.163.2",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.163.2",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src778228319/src/js/aws-cdk-assert-1.163.2.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.163.2",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-opfNvAvO9xiPZqBhJ8rLonyGGA8a5sw3/usRXtaCoyvzP+euiZGNxVwyq+ZXcwiJPbTFgEG5rek2RwlCDEcOsA==",
        "shasum": "1fe9e337a8535e00cb042eb71a34b41ff94a5928",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.163.2.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD+QLEkWm5r3frETQwxUls8oPOhyT7dNSfsleYCJNmimgIgCx3oEu75XPMY6HNHyIfckL84Gdy6dggvqgg8/kBAoaQ="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiz2aPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq8kA/+O0ad/5KthXJBLDNdZ/drrvEyMW3z2QbamJNMfkAZ/xFncvSe\r\nP34KQYRgfG5VbD5Nt2z7rZLSu5IgdRqSFHYcRytlDk+w5VVd+5q4OxguXccj\r\n632Unlc02Bkj9PJypxQWBM+v1QDqEsSDrhMgVaPhvoXLr1rt0ansgIZEowX4\r\nKX+u1i7181HZRrvdOB1t2pLpHscYkh9//BIYJqVTx3c82lTefZaPpYhQm3QE\r\njvlbukjDq2UAfcinDZilM7GV5uDD1gitoGrr9QxlmTruGs6ffthoxYrF/WU6\r\nDcw5uk4lly9X2kAJORkpEN2X0qx8NeN98O3YuouTp8FTOlvZZkhd7xPBXpHH\r\nYbVZq+JhtIyN/aiiifpYkXqj2Ba3/oSXsUvJ1bveOSQ3fZpMolyUEy2T4l+B\r\nbUXziEBc6HVrODPoPwNYyQJQ41luGx0Uy/wyoA0y0tgbm1rAteVcFS8XWVoi\r\nI93P4oASmfTgr4i/Zg9YrDq7wtSWKD8zr2GpoGfXvKzEaC27cspojAdUqOiL\r\nN/pqsbhVOx067Wp1eLPtuYosBktGpYwz1XA+AE3jtOKC2BySCBI+KcvN0SBy\r\nZDfYvWytfvtNFIDqIZHzBX2P+SAsQcqVBTBrRbd+iGOIM4OxYkv7jw/DMjyK\r\nIsFvRWQW2kRaeyOQcMV6VdheUA5mMY4emA4=\r\n=TwyX\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.163.2_1657759375412_0.7770293966470434"
      },
      "_hasShrinkwrap": false
    },
    "2.31.2": {
      "name": "@aws-cdk/assert",
      "version": "2.31.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.31.2",
        "@aws-cdk/cdk-build-tools": "2.31.2",
        "@aws-cdk/pkglint": "2.31.2",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.31.2",
        "aws-cdk-migration": "2.31.2",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.31.2"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.31.2",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src746643337/src/js/aws-cdk-assert-2.31.2.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.31.2",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-MAGQiouETDe7GKScC6fC9dWGmlKUbUjr1iuQz+b5WDmu+qDzGZNqoP2agZBYDuY6e5tmfrjozIMmLTgCma8bhg==",
        "shasum": "6930d55309233beb165be261a731d7dcc2bc5150",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.31.2.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDZOZ/igFYDmfjFUkxEII1B1EIjKm0JhqKXVAfYZZZoJwIgJ7NeIidRkgPKznvnLvkvii6YtWAzMha7VvjT0Oza2J8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiz3OfACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmri0RAAl1b+qu3k7rzvz6LXrkP9YCcXH1jE1zpFIIup6lxCIH/V47rW\r\nI5qR7oq/e1o7E77ASuMHGUbY4yoiq/NxidNXybjEtOnc4dYAWpkhQwIVMTa9\r\nPFmHve/2+mP1FhDsUkBzMalDqO3RDzuFbBiNN9QvTrnLQnXVh6XvYjc2JwEm\r\n2NCh3XT5AYQqbIOQEqdy7tP2zRrDvh9aUEuUw8UgYBLrTLn0Ofo8XPGtacpC\r\n/rhltNQtO6bXJjdpYvOxltaJO9QYv2gfjBwnKqXoDflvWmLzkIRTeUOMSz9s\r\nw8R5nEtiPav8CwYI6PEC94tcv7WbbS9tofkUpdotluastIiJ6nVORcXLXk9x\r\nXZThmu7fOAkOc/vx6jhSqa7/i4QyWU/ikHd9CIdVIAeJ1wOwCBzcrqLCCqa1\r\nECQirwTYzeb5Zabd8aTjGzlJkA+zQOMZijHLJNlysuAUM7wf+O71j3oZHwi9\r\n/61S8uNrKzMXr7EMp7FRn48O7Qjohf0UKysVs4Zd3mAmt02gdv2WIRzESF8p\r\n1sxb9XWv3NH2YgmBy4YHNay4o8WgPeuz3MQmBCV3V9MsOuV4DAmKXZ/zEIL5\r\nZTObZYAGSTevChx3ifRHt4YotuPuoXUWhKS64sGA0eGu/aiFTykqI4vQ+46h\r\nYuW7ePCst57JdwPR3q73CLVyB7QLPeRVuSM=\r\n=B9vG\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.31.2_1657762719279_0.6489905851716988"
      },
      "_hasShrinkwrap": false
    },
    "2.32.0": {
      "name": "@aws-cdk/assert",
      "version": "2.32.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.32.0",
        "@aws-cdk/cdk-build-tools": "2.32.0",
        "@aws-cdk/pkglint": "2.32.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.32.0",
        "aws-cdk-migration": "2.32.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.32.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.32.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src498457145/src/js/aws-cdk-assert-2.32.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.32.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-xuO1C/SF9myfTWHxFL1mkXNMMaBZh+58V25KG43LxlCgvdSRRJ7uqqQjm7S5NuAGkPwT3ZsgBdL+e2K61vv9og==",
        "shasum": "cbd2426f3eb13a5301ffa364b1be02886e85e716",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.32.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCrjA+/dwpapi6TUoYDAeythv/G8vOB36JSIuEZB2VDSQIhAPui8Nz7SbragPYEZHOiPpsZR4m6DcUxM9guN+X/sCK0"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi0IfeACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoy9w/+Oz34o9Eh0JpKfGZqOzTznu6EAo3OgCg7wMqfWxu/Z3Ud9eDC\r\nZLmCamLG0u2FUqzl2AM17pFJUm2Z9B2kD3kG/rCSyCscEBRT1tVgj1ng3abp\r\nz90nXz2sHEw0HINxaAdRG/tmWk5JG0LrI4T6uAcxiKqH95em5or3NIP01rDu\r\n9XAGg7gzmxkYjvvLK6zCBrAqDJRZRYLYnaFS7ZkvJ7VBMz8p/XSVFTPIyW2T\r\ntIgAVuNB/wu1V3HOXtMVolVYrzqTWr/XUJP4WtVpyDB/8/69wWtx9s94h8Ww\r\nI4PwAPgFVTfYvcHyGt0wmtso/NbCkg+Pz9Wb6tZm1Zvbb2RhFKRko+lvpm55\r\n15IxTY2Tj3YHOdiRdJ62fpnHNpkRLKBCKRgRoGZNt485PJo3f83INBG8hPLb\r\nsBJMkEOEUceznH/Lk+1e5FXzsD5JqKPHqrlyA9IIRqYYUDsq6yfNS0NyF+pF\r\nrbSuprASsN2iKdLy4kZE3c3hLmEfqnam2kNtcPbHVwuApnJHT8MCr0et7Ciq\r\n9oxpOyp7DpXbrV9gyLqE5CDuF0sCfcCLqG/xlnAUfZ/zV8LVBNaPVLqrvfi9\r\nCQMpjz8Vh8bE1xYOx+N/WaIWaL7dSIHAWNVrJPDVwVDiyxw5RyrUNx80SBn2\r\nNEYNG/I1X8bxK5VOF9l73OkyA0B2YcIc1kw=\r\n=53Hv\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.32.0_1657833438535_0.4908961823036"
      },
      "_hasShrinkwrap": false
    },
    "1.164.0": {
      "name": "@aws-cdk/assert",
      "version": "1.164.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.164.0",
        "@aws-cdk/cdk-build-tools": "1.164.0",
        "@aws-cdk/pkglint": "1.164.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.164.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.164.0",
        "@aws-cdk/core": "1.164.0",
        "@aws-cdk/cx-api": "1.164.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.164.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src499267191/src/js/aws-cdk-assert-1.164.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.164.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-394wFcVHHqLGZC5u4cLq7WS0uuWUQfGDlZNRrI5G5qDcTEMwzo7UpaGaxRZd7EUDa/TbjibB8HozmWmSamJUlA==",
        "shasum": "e7630d667ef5842357e48173db5b364bb45809b4",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.164.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDaOe7JmJr+Uc0eyuhMZqGREbqMfWVXtgkLriKjvEu4gAiAi6ctLFOYouY3MKVbyNiAMpOLIcxvDrv7m8Q5seRjfJQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi0iEyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqc1g/9EpRcAXfjX13fnyhPj3b6d9dqLBaBqvyaEBgYIr28wwkH4mGs\r\nqEryvvyXCOOh65XXG+DBZ+5ASw2J0ersJExFr6v2ENbBWLBIfw6ck4Y6GeYO\r\n49Oj0N1/sDvqYwre5hhRz9VddnQCdRZJtsw9H5X+ExbZtiJeXNUcCnbXJw5f\r\n5wH/kdaQB2cLH6QmoD3nAchCAUX+5KEHCIUP01L2ds84hvNSGcsrSDJl6kcc\r\n7Q/JQugJPuYNoExL661vlgMlO+vbjOnHW/jsp++nfJj7q5xNM7TQ6O5Hg6Mg\r\nZsj0MYiXnyAijNO6rT79U515CYrOOFD5xDmHIfrdyoXLP59qiQKcALbA3iWf\r\ntqHEN2bANExdBmD0wj0uDvysabmgocFNvwnfTRLn8jcmFrjxeeIUiS54W0BA\r\nl447y/49hqJcjbJrF8Atdt6jvhGgLYaJbsQT/D54E1+8eEtryZ8JrMs56Gil\r\nYHf+Qfhxlvm/KbhzvavKCaj+bY0SrKlc0eBx08rWLj6dCFWEa7RlgKwgFCgP\r\nMEn2Zk+PDqDn4bHiXrQtaoriKLZZbPBFZ8LuC5WR+okYW+kH7Fis/FstETPb\r\nzkyQkklGR0FwR5sXoaXApHYnGpGJ3wRshNyoBGM9JqZJIMttQxK09a1DsDkK\r\nRZW/kz9usF2IGUGNKYmbuECjzNNHQQVaMBk=\r\n=KihU\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.164.0_1657938226337_0.10364352463817372"
      },
      "_hasShrinkwrap": false
    },
    "2.32.1": {
      "name": "@aws-cdk/assert",
      "version": "2.32.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.32.1",
        "@aws-cdk/cdk-build-tools": "2.32.1",
        "@aws-cdk/pkglint": "2.32.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.32.1",
        "aws-cdk-migration": "2.32.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.32.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.32.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src872689106/src/js/aws-cdk-assert-2.32.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.32.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-2quULyoI7O7+Uw+LjJoTV6po/YjbRRLGVoJ2Kb4js9wUtcULa5sCmy4J7jY0IBeQR8Nis0ipJlgQ1tOfd112zw==",
        "shasum": "1b8fb1f67836189f8689252333ab3a609ae551e0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.32.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3iPf0cUD74E+SWezqT2BAB6DTA0WQIb8Qbi8nVHTaUwIhAPJbWmAnGA4JKA0Vvm74nCWOBBwz1rWgfr2Ze4ycyHmm"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi0jDgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq0TBAAhrc1Lq0iBxYx/LjQ+hupq7b50YUqiV8DDmtPC60QBdXbYkve\r\nh3E/aRIxvR6dr/53XbaoE9gB39RbHPoUbGiCPy2wCrHYDqf6Y2q4d8OQFz2m\r\neI4YcMLxpiiYlgFiyyP3hy/hKd5HdpGeu4M2//79v5q7QTbo7ig6DsSjdSMj\r\nGDHLjVxK2VBnlBnL4Huoc8OD/SKrkoyXI4AizgYguEdIDfea6VLpm993rkFp\r\n0e9rMKrbQTghhkVYaqm9VhoMq446o7cAF+IfU3JRQUHuSsepTWZlMDB4Vxeu\r\n2ldDsVCjlHgI/5rr6ycjWdWuTQGzvkzcBaqAFCCkw/wQkyBIUXs+PxaAzWXM\r\ns0LcLBocJr0+4FaZtb9FhQRNCBtldufzekLhOU6558p2rCBEcbyf6CbaOd4n\r\nMdbfYgNq/0ahiOhQoBnB3dZJsZ0DrQRJ7sFHoUxjYaeni5huOLsEhmtrMb5/\r\nT5tApXShwmQNOASf/4LpLaSMPUOAGhRaM7eXGYTBsud7fKZ2dZhQWTnAkhKR\r\nd53XlTvw/Ra6DCrVolJX1U4+QAtFHkb7/FFk245U0u+LOYCroLrSqOWZMrh4\r\nOTccWDZABmmh2qAmAPNFALc+JCOOscmw5iTf3F3L04ojADuEbBbuIbyATq8o\r\nZvLT7CVvns4tHaZFEJOdtnNzL8BApoDayrE=\r\n=K5vj\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.32.1_1657942240686_0.0910580950461275"
      },
      "_hasShrinkwrap": false
    },
    "2.33.0": {
      "name": "@aws-cdk/assert",
      "version": "2.33.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.33.0",
        "@aws-cdk/cdk-build-tools": "2.33.0",
        "@aws-cdk/pkglint": "2.33.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.33.0",
        "aws-cdk-migration": "2.33.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.33.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.33.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src402761828/src/js/aws-cdk-assert-2.33.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.33.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-iBqIvVbAnnaI9MXgwLA0J6BBmRiljivhgFHPoHAhRVD/xh3qDeOXr0gbM46uooo2ComPxRbEL8o+WL1K4Tx8sg==",
        "shasum": "d24f9a372f53de6257b1f64b6acad209ac3622de",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.33.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBSPLe2XHcL+Xph5RaQo42H0JdnfCq5QFp+tjgmvxXUaAiEA6O6KuEr2OwEaEhafYq59c3BiBwE15KN8XMYizPs7G/w="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1xfIACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo00Q//ZgD8MGvWMjsN+Z23H1slSVt3ugSw2dHG79tt53iqpesT4YeI\r\nPSh8fbkl2UrCGK6X35FNeTCOPSt9Tj/4Th3qX2cr4v0BGA8lCPKMrW0rfYO3\r\n2CHa5dCU6+X1Us9/A9BeEV4oD7UZKIInct2Rw+R5qbOJ1LlqFiD6SlNmAPhc\r\n2CcMiDIcXUQToqlLyoCCP0wAFgPhslhMUxGx6BtzwfwL+NsbxEzlMjP5pujn\r\nsMXoCB+D7BFJGLLadQicrULY1h00hV/RWu9fM8dfbjfGpng2ToIoNoSCbSIr\r\n2/ovaEIyUoOUyH5UPm96CkgOYVdegBliFtqGjC23Xz2uLorYFYc9YBN4GSSF\r\n4xcdTXt5owrtFjdr+fpWx2KmMVPdu9J1w0aGViFfzWLW/2jkOPMZpWRar4wH\r\nj46OJsNJ2iDm/p/RClSPzbljgg7wjBliXA95koznWrJehgfEToUBM3wUy+ts\r\n2ehkwQuRnqxgiPOQUj4Jva9SYoa8fBRFce013ycpvJ/DxgnmCewsMhro2x9m\r\n4RqgAHsnqpFYpLQDzq5STdxS0sKROTtq+IPmi+LfqVZGUYS8TI8SbL2fkrQM\r\nKg08eDIfYCGv7xxApIwthUvokA6oHj4AH9P7MlXCUHwyhuAp6J7EG86BjCtt\r\nLW9w2CJKLYKKSfCpIhbjVMkLX8qyOUe/L3Q=\r\n=GycF\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.33.0_1658263496652_0.5553518407248503"
      },
      "_hasShrinkwrap": false
    },
    "1.165.0": {
      "name": "@aws-cdk/assert",
      "version": "1.165.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.165.0",
        "@aws-cdk/cdk-build-tools": "1.165.0",
        "@aws-cdk/pkglint": "1.165.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.165.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.165.0",
        "@aws-cdk/core": "1.165.0",
        "@aws-cdk/cx-api": "1.165.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.165.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src640391987/src/js/aws-cdk-assert-1.165.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.165.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-9oKzopqWCAhLffDWi/tLj2M4F0MdgIs2eMHNLtzieaih0PGElJvqhHY9w1zOnwILbU9EhiGFkB2ciHnrZkNTtQ==",
        "shasum": "b5c70d449e609e4315784a944eabd7ba3f55c607",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.165.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICPijeey8f9/pPd5zLoXzbP0oK7/PbTN7PrbH5QpF3EDAiA+yh8Gs3S+fPfxX9OLHZYX8iKRH9nlCmgUZO/hClNPRA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1yfYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpDYhAAgQthUKIB7K9HYjU2adB+F2wWmEsqKlPWtYIaVVfAIsIIHBGJ\r\nwn2NIzB7KdlebrA61oZE329nV91AG/HN7kh5209KV43p9/hFb/E5b8my28gt\r\nYnAGfvkDP5y/e6zdrhHAl/g72bLwthIth6eRr8bH8+Ni3gKxLV9ljszuak3T\r\nZRLvO8tUHHkSHvDiLznsFv6cRDIJGATqPgwKJQRCdx8Tn9gvJNAXcor7vF16\r\njmhdRQMgB933WJD7O0vsVhtHJT3M7e7ldh8kw/Plb8XYbsvZSoZtaMsert+Z\r\n99SdinlW6XJkWUQ8ZyJgQKpfcBAh/L8C/525tzrDCDZI6poderZBPGaGfEe2\r\nCIed9DsYRZgS1EUYqsoSFHV4NO5RfcPcdi/2dcLZyERbOK8b8aQWLGfmPk1o\r\nN13GQXTeohHVJnO5nbwCIn7nzm0N4Diz4n3eenxqWZmilYf47rppatePQ5BV\r\n7orUQHtIeLAnIZni2vgdFDbOXOiQldQ97+8IaUFPcBvCpoElKq/V3p4VE/Gw\r\n958VcanLfIRKezFhvYzdY5giQU2wmo2/O/Tl1zatfA6TLFnyjscCF3r5YXP6\r\nv6Q8i3GJaSHAQKl1OFdkstKOGUd+dMPCWTxdWjgR3oTtiqERUtYhXPLVZQ4l\r\nrBil5+tDTkcEDe8C2t/Ia62zBfjQzmbXwo8=\r\n=blEP\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eladb",
          "email": "elad.benisrael@gmail.com"
        },
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.165.0_1658267607917_0.6273821777433362"
      },
      "_hasShrinkwrap": false
    },
    "2.34.0": {
      "name": "@aws-cdk/assert",
      "version": "2.34.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.34.0",
        "@aws-cdk/cdk-build-tools": "2.34.0",
        "@aws-cdk/pkglint": "2.34.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.34.0",
        "aws-cdk-migration": "2.34.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.34.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.34.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src841923774/src/js/aws-cdk-assert-2.34.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.34.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-y3KulRtvVuwb4VyC2AhCDe80AcuE0qBu/WnEB+0UDYFypa31SNrQG+lYhbAfxzG1wzlh786Ha6cFnnWdIYmpiQ==",
        "shasum": "55f15dbe950aa11f64f199d5180fbc8b151c98a0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.34.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC+5/oOutAxFlTe8Xp7OTf9F+5pQzAcQEkMfc+NX7/AIgIhAOee4ldcwlkUqfOW+XCwj0I5wQSbX854nRe3kdxlxfWx"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi47hVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmod1BAApLQCtEBJOZBSoC6nH2bR8WXxGHb8p91Eu5f+sOVv75/Lim4Z\r\nmkt34aKObuHBOvZXo/UTg/Dtz9mmWXS5+uDQOn3xT3aUgplugPwtGToGp742\r\n3YKqZAzCSptkT/OFwggVdOxf4qIMEuG/x9l5KI7yISVo4+u4TxPpsoPZaJTy\r\nJmp4VrTtRcsDFxbZHD+oZgSUM3YDZKLKk2Jvcv/jn+YTW7GI4t77sG8ZZh8Q\r\nhEM2kHE6kTUhF63Ja5ejOcQkmav3ndUx9gpOxI/jj+PVaVLGlzM1JngFZvk1\r\nOmwIPuvZDISnpNfZMBkN0O0YzIX1rgbubpeJK2TVyZfbv4F4ekBr5rgF/WrJ\r\nBrjRSoHaZn2e8JlRy117B6Yu86PoliEq3qX3jevgvi+pqAnP5dT6ikwS//JR\r\nZvuuNSqYYUJ60s2jheQKQve7nPqhXLSTqgzo4ZE9WyQ1/Ua23gOJYHDU0H2M\r\ntGRxEPMljmbn/EEJwzJTWP2KfKZoViSkonfPsXzVWo2KZAqX5YyTnG6ddcdd\r\nbN7eHo8fuOgoBd3Fz0yjXp/LcLQhiSvIdXM5HSrX6WxX4cVJ3rf5BWlW3Q2j\r\n9ZAgkLgm4xGv2jJc65JMcphFUPjPtRmQP6Gc6Z4egINKVTMqU5/+ihm7baic\r\nolD6mJwzVhwZWPQHc1xMKkeUVCikywf+cc0=\r\n=gUs0\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.34.0_1659091028970_0.07487623224117046"
      },
      "_hasShrinkwrap": false
    },
    "2.34.1": {
      "name": "@aws-cdk/assert",
      "version": "2.34.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.34.1",
        "@aws-cdk/cdk-build-tools": "2.34.1",
        "@aws-cdk/pkglint": "2.34.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.34.1",
        "aws-cdk-migration": "2.34.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.34.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.34.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src335392004/src/js/aws-cdk-assert-2.34.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.34.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-acqNddAloiqZpMIyG5g900znrOWolJObcKDl/NOf+tUzbT3G/+9Mm95lI7u0jGU6oDOaOPYW6ROK4GC6koNOOw==",
        "shasum": "db675f154c85036895e0b627701c48731d20c400",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.34.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBmp8MvfwVTJx68n4+FZ1RorefFKJqCdZT83cCgriLC3AiBd+Vf9uvXyE4n6cz6EVwVolbA7SCO5THXR9okPGAdLig=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi5BWmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqQKA//dzBEgz/M+EOjomT5JZhS6cu/ciNCqDasPNotFcTsdQMvkRpB\r\nS7ZIjBWPvX+hg55xlllCtrfRTlBzGn4jGL07pJHOCgCOPXUuZjRJxsxVe+wq\r\ndjtpq3rYN3+fXQ6LI8ZsX+Fct1MRobHKWHq1DhvPZiqa0k3pWgVk20MJ5B0D\r\nbpPmdZqMUdXaz+Ruw4CDKB2Bpzgcc0qdpk66/rNzPC+nzxLfkjW86tq0GpUN\r\nB09SJOBXO04MxIzFf/clMhFsXbyawsNA50uf/bcj0yYxXZ9nYTeHhBpptDCn\r\nTCNAPzhlXtGAU9cG/pw5Vf3t6h0qIgo7hkw+6yP9qJhKyIA0fXF9vnsExaou\r\nZvDWubd0jn5ES3ulMvqw//0ByJ3WTXkrCWc8hDf0kbTEJ0hk9EyRcZ1LePXB\r\nkcvSflDGftPqjXkhtohKyr0Pj2wi/hpMloOl1JiWxC/iuixuuNPCSOOrub0F\r\nmIrZpqaGc6nZVFkD2uy6ejXB1cstd7DukyBk40xOHgT/WUJsjV9ZXU/S/S64\r\nLQDpE+lzw1GEGrts921ZkmPEZhXdfu/JvE7IM4WSMBwKRQ+fUnfUrZnzTHbS\r\nvVVkejnp3XvsKHNeRbCkZue+qrajZG/yg5P7sSg/zdff4WReLUP0R9miNx6h\r\n2douKFqTYBFUK/LGvG7e1NcnWANnlnCK3Ec=\r\n=cNJs\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.34.1_1659114917959_0.24240965327347008"
      },
      "_hasShrinkwrap": false
    },
    "1.166.1": {
      "name": "@aws-cdk/assert",
      "version": "1.166.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.166.1",
        "@aws-cdk/cdk-build-tools": "1.166.1",
        "@aws-cdk/pkglint": "1.166.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.166.1",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.166.1",
        "@aws-cdk/core": "1.166.1",
        "@aws-cdk/cx-api": "1.166.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.166.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src352651986/src/js/aws-cdk-assert-1.166.1.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.166.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-HOElwhGm/uPqxNDCpRne0GM4X10sh/9OjT+WNPssFk5QI3qCNunwMPO4oEUO6OoPkrKORjI4VyOJHqGzH6fFqQ==",
        "shasum": "d9d3d2c6a6ed417e193fff83075906747e89b2c3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.166.1.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFgIO6chLPadrlU0TA8WFz3plYET6mrAf8CFdrQkdQfSAiAfuYjrA5pLf+EvTbgYMi4+RQn6MX7sztwnN1llqTaVPw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi5B/UACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrDjxAAkxToEqfNvvq+8/6XIL76HoM7txrf6me8dlp0cu2DXty5whZS\r\ntebOCgA4YnSxWRQi6MaWPFsVFcRlTQX1Psz0sv0tjXxSF9SSyE7lHkeJy4Zl\r\nQNkV0ggU7f7hvyZ4C7BpH54L4nLKN4tOFOdJzImyK3a6NwxQpplIoQv0XMni\r\n5WubeC98U3ukz+ovGLydC65WUsjf4CeESTVpoMLrMpq4DmDBBCL/pHMWeVA0\r\nTgjyP/+nvRGLjxcc/2UUoFoqcaSLVuk02ZGkTj672UPVB7vKKwR9RDHf0Vo7\r\n/8PkwIQAk0evsgpyKzylZVmDtH3tC0+qwkN3xwRAsb2PkPHuPFXKnKiTH619\r\nLOmjgp4K6rN1GkZdG8Ecv6qRVkQts3eIIWHjR7th4Phfh05Bjd2HISUiKpg7\r\nAOz1vklplTu05ZZr0NZfv6QKYb1zCBknyT5yQ9kfuUBGOPB+Lu38PEQNjCvc\r\nDBhKNzUZHNB/EEJxRZLpkQrekjxzWltIcOBcD3VBeGjjqcPSyQ7uiLVq8vhZ\r\nEDxetkSsyzm8Ev4MoCRb1n9fruphzremUjEBPp2AOz5DMYENTCCoDcPckObH\r\n1L9z9/gYoZj1tdrT+eiHzotECfDF2KjSFaIUa2uept108WSb6Vgh56Oo3PF3\r\n2n9pc1vPVeIvpxXXeIOo07NL5Kbrl774S4M=\r\n=1bkY\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.166.1_1659117524384_0.02158115264415139"
      },
      "_hasShrinkwrap": false
    },
    "2.34.2": {
      "name": "@aws-cdk/assert",
      "version": "2.34.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.34.2",
        "@aws-cdk/cdk-build-tools": "2.34.2",
        "@aws-cdk/pkglint": "2.34.2",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.34.2",
        "aws-cdk-migration": "2.34.2",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.34.2"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.34.2",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src096200522/src/js/aws-cdk-assert-2.34.2.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.34.2",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-TSOxbh/L4PsLaqnwuqVnMNrMZN4yUD34nrIywZC7Mfh4890vWWEtUubMjlXv+zSKVtToGiJHClMvzbspB4wSlg==",
        "shasum": "3dd44119ab27cbdfb7bf97f0c0ce52e0f56dcbb1",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.34.2.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAuS0qc0bwW3fLkLPvQc89z+MAcb+sUeC4VCuLdpRSypAiEAxFeW3ffKT13EUAxaHuPP8j/599nVW+eR/Wh1Z+x2UDM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi5IXOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpnFhAAkAXpuV/vg9Nxfo9+Lo0BKhMG/LiIcjt/A+qJ/bmqDI6Zw9ne\r\ndW6CLgxgkYO58cFW/hnMkRIxDeOC7GEmj2MfDQaUnEfQVVRfEjONuTB/gKXN\r\nrhtkiBUZ3KkQ/Z9WUNCR41NB9612pj/VLZq2Yq3evPIR6YxCknhChsDVj1rE\r\nwmmg29e6YtAjH6DEg2yjcp9aJgQHPt4c4lz+hkSLWSatCt4XOHuqMYO0N1d8\r\nAk3AE8uEaDuipjrW42mOYhbqYktHVQaw5AGbgn5kCe02nyfVnoo3NCbKE2Ki\r\nXUMK7305PD4JMGDu6E/9wRmvBzoAHRY65tyc1YF/iajxAKG3Z9HGhlqf2oJX\r\ne6q9O4u5w2xHo4ZYrdkQf0YKOP4uzgRNKyQTl97EUbZl5cAcopV2wYGh9LGb\r\nPxKw/cAgG6tcm7i4H4DL92RNMbKZJ9V7pcwovPm+l/H4JotlV59jlyNgJ90J\r\nCMRkKJFleFCdnEmC7zaXwME+V+AckGj+X1y6OnkWkgtwgJJwIwNKQzeYI9Lr\r\nJbsgSHm1RPksAgHvXfB3+Kby6uJvQI8F+5sXImSME6+aKLupAwNeZb1QU9LY\r\nzYkUf2RAT7NsTLRJy/fU8maO5emeGTCb1RvOcBAT84egM+uIwk2gDvVw/KVg\r\n1/TqD82NSfVCS6FTigU6fB/9Z30W6f7qx8Y=\r\n=R3IZ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.34.2_1659143630365_0.39861166281591576"
      },
      "_hasShrinkwrap": false
    },
    "2.35.0": {
      "name": "@aws-cdk/assert",
      "version": "2.35.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.35.0",
        "@aws-cdk/cdk-build-tools": "2.35.0",
        "@aws-cdk/pkglint": "2.35.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.35.0",
        "aws-cdk-migration": "2.35.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.35.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.35.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src691635642/src/js/aws-cdk-assert-2.35.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.35.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-G0QoHDV8eNXR0XfMnl3mZv/EUWj3cbTM15A0g6lQnEPoFXDX2gQgYsb9lyGv/5EqS7kPOLKK4W3w2sx5kXt2nw==",
        "shasum": "ee5ca5acdff394ee51e3ef49c0b669070d73ae10",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.35.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFWpl517gvsdp1p+j774coisqW12BH1CXfBcmmoysTSYAiATb/m5b28pOXZlwXX0DbNo4JIA/mE8u12RNPnt5Qeuuw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6ZGjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp++A//W7Ij7DvX8i34tA8rD3QpInGIe/BLoT3RdZ7zdWsxb8dAPE3P\r\nScglExxAvDyLPIBcSwQZqCGPzwfByPMGmSDec+jKX/GmXo0eH787UqDcM7nN\r\nwJPtqHUHknwKSXvB3uu44FezFvkcp/RZBg5fUYWYNZkVgrdJACgAeHZMUjj2\r\ncrwBOicyNYv2tmPc+tB/wd41gS7dz+wwx4NZnc1UUL67YFyMWkuBAHzlsN2t\r\nu4RmDEpqAW7LhKbTQdQKSggWnZcDN88Uq4yXXwLagaSedcXgF/Ue71616r29\r\nK6/Md8UP8h8jRSJ1t4yXQ3Tf8uL97A42e8wS+SE8ezbKGvm6wkjL4lH3mWHq\r\n3uYfUXPA8EcU60NLbqtjS3OpzyuNCr/mXZave2I7QqSv81ttk2ri5DEcFy9i\r\n797vGfsxPmt7cbet95CO6QmCuIwCb6yjTajLpSRLOnmAGir+XdqAJR5kFWBk\r\nKFgKIPdnVSYh2iBKDqW4BbpjST17mmPaLp6ZW6yDYRUC+tqUkpNW3ZpmDFsh\r\n7UbmCranaWxUgZKG4QJJfWojd/xCo0U/s089ELHKoKLcRE2vy4PECnpYMkXa\r\njJvpH2fnUjA3HR8GKL8/TLXyTFwsTliQcrbNq4G/2vZUc0rHYy0My45SqW77\r\ntxU2LXn9g47soWCPJe7fl1Cahay6EueP1Fw=\r\n=Fb2K\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.35.0_1659474339686_0.773827549265278"
      },
      "_hasShrinkwrap": false
    },
    "1.167.0": {
      "name": "@aws-cdk/assert",
      "version": "1.167.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.167.0",
        "@aws-cdk/cdk-build-tools": "1.167.0",
        "@aws-cdk/pkglint": "1.167.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.167.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.167.0",
        "@aws-cdk/core": "1.167.0",
        "@aws-cdk/cx-api": "1.167.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.167.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src063142657/src/js/aws-cdk-assert-1.167.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.167.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-VaTEmVCJDX99aoPdXSi2K46LPiSfu7NuJ51corPJcnXLaQsCidpDeth+lyxeLtyOCLfxwEMhoGt9nDhalQkXpA==",
        "shasum": "4ce41b7d086775b6c48068f0c0be729ea1c00340",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.167.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCmrAZ+zcVjhZOurNPa2Dz0v9/5OVkp7/fYXImbPdK3iAIgF/G+WgZLwkiCqpwM1EZgyLUeXcxcDhT3iZ2b5HsQJBM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6bLaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp/Nw//aLy7pwYuPqdRjtCG7XrBnGl0urFIzdRG+7Y5wZt4D0aC1035\r\n9UoDA/UUMlKdAbfWJlRm/VrW/7hGiZwajvnAB1zfh7B34tal8S2zU+wdcQBT\r\nhXeuFfqRgwJ5SEYFtVJ6HJZ5QTII8TLXUcVbuHszQJJXhLksrLi89nAd81US\r\nfiBzEGl4V1i3CCY/WjPbnuf5QDXK14DZYFCYAF9CPU8AQnqBp+3TUwE8EH+A\r\nNDTm4nEIdVrB6uvf9lp5MQQq712du2uavwRzgDPezEs6X6yio765+BAcCjKS\r\nhDVuRp433ZL3O7SDSIfhPvN3zo8hRLYcRDCIUz5Hq58u+o118TYHb3YcQREh\r\nxyl+4ehzgjnyBYOpRqfVGTdRPrGYckvdmw3PA7LgY1istCDTgE+HS4keA95T\r\nTBBnBXzg6bnm/bkf+82HuLqe48N+M0KpqPDzsdSSGWGCQUZ9PfbLJqSIapxE\r\nyvtwNZX50Eso2E1MF7/3m5A17ESHbwNbT6m/wOuelTyv6QPKlok/yz27pu1n\r\nZ7C/bttMPusF/3Syksebqb0jNNlM8TS7WFhz5bqddrD4wnEvi1yMglvmipHY\r\n1MypICyv7SUqIgoc4uptdbU/60ehWwvtwFBYhGEi6Wqhz8n2KoskCfJ/V37O\r\n/NHMjcCkK8Bz3CUN7i2FRlWC7ybFHE2YmM0=\r\n=yOXf\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.167.0_1659482841935_0.6627688020248688"
      },
      "_hasShrinkwrap": false
    },
    "2.36.0": {
      "name": "@aws-cdk/assert",
      "version": "2.36.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.36.0",
        "@aws-cdk/cdk-build-tools": "2.36.0",
        "@aws-cdk/pkglint": "2.36.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.36.0",
        "aws-cdk-migration": "2.36.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.36.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.36.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src064294875/src/js/aws-cdk-assert-2.36.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.36.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-eMjhZSpFVCOp3Az3d13ZVcEwq//IMD3QjgnPk92WcjnDsr5v1SXpjGCXFCJL31+6O1Jjb6SZWuukMsRhACT0wg==",
        "shasum": "d1a5082d846639f8f72f0dc83b4db8084f0328c9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.36.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCiFpTunk655sMa+rdzrXG592I3+ztmpGgajCoO/yPUTAIhAL2a0QHuPIkni2N9mfVDWIn5QYyhaZzRzyUEj6/Y4nSC"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi8YedACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpOwQ/+O9TzaVlaFrtS/VluA5hVOaheDH8rB/laacuLgkT2sxIUQUEl\r\n9JuEvC3SZUxaRGzsrZJIMjgRFuOQujvij3wxUokRyC6xk9iiAQiEpwoLFjwO\r\nhcQjiuQzQ0xpHfxB74ae2LoqS15mT+5ClPvv7Iu9XBSkRRLcDDZtcVDLEwkU\r\nHOaCayL2BAdeTuOGETjoTezDwV0cyD5PIIPHmc+3E+rfkBSF2rurc/Jab53O\r\nLTa0tnZeIMFVZugXQMx6UxUt8k5rPN7UrqidDk2O547T2kEDzS5Lb2UuCRof\r\nQs/bUcDzGkTEmQay7Ud5FKdzLvAQO2eEVzbadXA5zN7ILnRSLDi+NyK1PlU8\r\n6SL89sXWHr0nDKA1+wXX1JaiOd8zfkujqWFA/H9cxgyr6H1vRWzkoiuN6Myg\r\nPsVfmBb4FRkR6Yzfm865LNMwjIZIHGdXuiIG+k45RbdtL9ueoG0eCkTqVZai\r\na+cXJWt+c0lWe7omUX4XwrE6oNh0NBAASO+KrUZLm8WIfevmSeRTrFLbGfeE\r\nFqHECg1/yI+MfxK731iL1yFNo+VV0PNFNqb8uKdZLMVKYJhQnltxhTLU1jfB\r\nDYQGSB6GKXmsw/qd27Jb5IdUD4XYRpiN5n2cWOHmyIRoaBPVHrOPAaTa0Ma9\r\nalKSnJmK3yPVH72tzv7f03J0QTbTxCRrfjw=\r\n=Fsjf\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.36.0_1659996061145_0.9978855852166388"
      },
      "_hasShrinkwrap": false
    },
    "2.37.0": {
      "name": "@aws-cdk/assert",
      "version": "2.37.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.37.0",
        "@aws-cdk/cdk-build-tools": "2.37.0",
        "@aws-cdk/pkglint": "2.37.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.37.0",
        "aws-cdk-migration": "2.37.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.37.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.37.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src037663320/src/js/aws-cdk-assert-2.37.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.37.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-70vZ0Pcs6HnxgIM6Avvt+//e7+oK6xlvwnRh7g+k5/10LZ71LdR8i3SeRDGpudukl0jAsDPRtPFswcowU+8RfA==",
        "shasum": "2f7efde9a3c8b64962d35305ffcd66f37a58fbcc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.37.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBxtOPziozkbdsVySiSyxTfyVfFCrXn/oAaKO49100fiAiBKqgApbwwzk55OkSrqq4yHlzddAccGp5XnPLSwyepC7Q=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi8tBuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpoSg/+KiTk+pEZhP1xkq5TYJuAMz7vuBVcY4EMCUbaNtKLMey/4/yP\r\n6YrJj9kRaLSOshs2KhUhoxqsZhNrqErjfA1E9MC5quHCa+XTRmNc/xRBqql7\r\nIuXT+KT9IB5RifhvdxzpJlkrwv70a2xMmIO3HKBblqyfO5/rhgQqoC5DE+Vn\r\ncEIF1YbokHF7uTYK0Nlts5FxoxhLoTveOgrSqUXiLhUKHCk03vlTFAufs7Bz\r\nddU12vduuGflMmBBRaZhLgu34T2hI8lp+HVHZnKgChr5YRrhr6CR2a7r2lYV\r\nOwhmkGERvNMQ8o8+nStH3BMntPeIxlovTRkupGr0FTgcax1AxZ5TrNWWU+s5\r\nXL5XvuTZvuC/hWLKC68tG04GZgvx7IAavWEYBKozbue7d6SK1Vz6ALsw6K80\r\nJbOv3jig35/TjrVMg66jXs6N++ZLfUoBWXr1SAFB+NY+nEFIiJTnl5km5wmx\r\nhqj//Er/jU8cDxLkD8drmp2nH4CIMPPCgVSmfgG3Gyl/KTiHMTr4ij2iscQB\r\nEJIhcS0ZqfNq1BnTtwXwmuqVI9nfo8QP4D10Rvxf7sg2uXjUGFBJxM19THB7\r\n73j83ohqQtAxVNlnEO29qgX+bq7urSCMuo55oYEvIj4lasSbKA5axkY9Qrgc\r\nLos4dhKZFuUVpBVEum2J+bdN40IXsuGIXqs=\r\n=Fmao\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.37.0_1660080238714_0.5243834815053212"
      },
      "_hasShrinkwrap": false
    },
    "1.168.0": {
      "name": "@aws-cdk/assert",
      "version": "1.168.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.168.0",
        "@aws-cdk/cdk-build-tools": "1.168.0",
        "@aws-cdk/pkglint": "1.168.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.168.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.168.0",
        "@aws-cdk/core": "1.168.0",
        "@aws-cdk/cx-api": "1.168.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.168.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src035934110/src/js/aws-cdk-assert-1.168.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.168.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-HzjjwDSVqngUXtcdGMYXx+Q/FfmlliqtJAvIQGEknT0v9ckhsOM0/1yddASMydW7JvAodc23LpCAZ/PvM/BBCQ==",
        "shasum": "0c659144086206bfbbbf02031c181817931b8d02",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.168.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICE2VeG5vQvGcdy2gSJiYokgRXKBT4MALBF/v/B6/kM3AiEA2IdjAeA0Xur95ZWVsQ9gd/a873KlKGWDMAqc+GB1Gbk="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi8tg6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqlWg/+PWuCz1MttfWUZow8tRP5dyFosRApgHkdx7+UHp+gTy4F1Jsb\r\nne4rH4JbftyynTnvWhMXssbcxvjYq9IdsdqZbg9CjuC8Dl41A3PWYXKZj4S0\r\n8h7APH9ojktwWAYsYktmF7zoc4qrrwuOA6g0TY0EGI7hx1E+sbahvKvUARL3\r\nOEmJbSPbJFLtWNicxFNWE96qHzi0pZDtkFF0MKpi20RKf44cxkgXy2csLouj\r\nIERVf8McU7G957uLwvcKe703VTSldbY4qUGSeqmaRblyigCodArk7IyDUvHI\r\nhqBoPGNzfIPPaJL7jp2EEBF75qtOLcCAVPRdCF42Za4/D2AEFi9l+twiE/df\r\ntpX6cQjBG6T3KmGV2qRAyRUpphu2LhIXBOi75B171rhhoezUyKiBnfGQk1z0\r\n/1qZtTcf6RH2AfrfG1irUiflDwX9mCqqqjhF88QHy6+1msI19PeMOOmIIMVX\r\nsYQnmstUDuLt+QJJst7/gyVBB1awNskZszU379K1PQjFmAYq7dicGD2VhBgp\r\nsnUb/nOJaaHl1lWQdYxVMRGJOdSoHpO7UBwHrv/fEQ0MEvomH9TrZm313USw\r\npu2ed6A8gZ1D7APgwGsJ2eEb9CvCkwp+7xfq0Md2EFzeUIy8enYPCgxZUkv1\r\nsLdaE1V+4+XfsVGr3p8vUKfyFMacRGTpPhs=\r\n=HsXO\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.168.0_1660082234530_0.47858276371885866"
      },
      "_hasShrinkwrap": false
    },
    "2.37.1": {
      "name": "@aws-cdk/assert",
      "version": "2.37.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.37.1",
        "@aws-cdk/cdk-build-tools": "2.37.1",
        "@aws-cdk/pkglint": "2.37.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.37.1",
        "aws-cdk-migration": "2.37.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.37.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.37.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src606361030/src/js/aws-cdk-assert-2.37.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.37.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-FZ0cG0B5yqzKKt43Ah4ObahpnRCeTRYHSL0+GEz+VsGaKYpWuhosSulAlBG/XkROkdrKuYfDrk2ZlVpI/nb4Kg==",
        "shasum": "5877ec596e913dde716741c0830d3c8dd33a345b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.37.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD0QRjDBr0ygGL/3JZjXrdzMxDR8KtlWOmhli6UTNIEZgIhAM3CdaZ+GIBFeI24Dw1aBEM06oDYCAS9jbyi6Un+BU6W"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi9CM6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpLVA//ROD4v3elAf+wC2ZevN1iXTVQ22lrLGEdfLESvi/yd5Ux8Sgn\r\nb7NLzN8Y6GXFZKss1QCbgdqxnKowRsEOxbthY/aE0LbqG/W1LYfdDNB8wj70\r\nWOiPawZ/07rQByVhqoTFYzR92HQmOOVU/UY9iZ79hq8XoeCSBaMGkaU+KIR9\r\nXg/8tNc1OfUcH3wU6Mxj6hgBpeO1zdIlbyY5Pgu+o5XaAZU7XcXTLK5H3g8U\r\nS4pB9w557741hADQ3QuoOpjmSfIePTFn6ZfdBosVevdluuFUWeYcTVDuc5e0\r\nhoJJkC342x14V9sxNR8QnnKP1jHGyHRyCAXSNnXOHY3RN68RWXiNeD2swIET\r\n/TG9zsFPGoLr4oTBTPjCJk3RVNeFuqg9gYJJB5MIWceQrJs+9BXUuFT/6lb8\r\nUhfyCGSgwYPei/aoiwgIqDLhOmlHZw7gkpJrfF3U6VYBsuuA5AXIB9nRoIYa\r\n5eEYiGJR8QEF1oDPer0Abf6y3bowHxk+Bpgv+VETXkh2e76ulih1ErDh5ckw\r\nFTNw1Ee/N3K5RVzEYrhzX6JKxcDoTNrpKKZ5i6CsUp79vGnP0O02ph61ZYrL\r\nk2gHUlJ9C24MsOGZey8ZUPF37+CWcEjmHxF4a1HR+LQRJdt8hz4WRzRwhCH6\r\ns/bF2ep37PxlX/522tkGKoGU/4AQe6x79/Y=\r\n=9Q/o\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.37.1_1660166969933_0.4081681171614273"
      },
      "_hasShrinkwrap": false
    },
    "2.38.0": {
      "name": "@aws-cdk/assert",
      "version": "2.38.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.38.0",
        "@aws-cdk/cdk-build-tools": "2.38.0",
        "@aws-cdk/pkglint": "2.38.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.38.0",
        "aws-cdk-migration": "2.38.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.38.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.38.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src462039131/src/js/aws-cdk-assert-2.38.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.38.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-wNCXKLQat5xMcn6Ps3ykwejxS0hV99Iu3HvUIu71FbS+6YYv96W0XMB3XGxpYZrV2IjYtqcQeKZaB4CHjnwnxg==",
        "shasum": "0922bcce053e474aa56931a583375a0dc1437014",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.38.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDXy2Z393RVxoG1pKI8EYbvHAQxbWco/+9PF/r25xUGzwIgHR2RMKKRgHec6zh6e9wLNhW38eksVbgdEahEq1SAHb0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/NhFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqNCA//RlRj/1FzgrXLRK8bgdfSjJv3Re8BQ/MruMJeXIaj/sNdH+BJ\r\nEGFzP2L7bNgLyUAzX4rA3ATrt3iYmWtnejJfSg+ri9C+unefaIq9zFlh2p78\r\nJRqkxEW/BEBHM7ogwDnCuRsstpSx/zPGCMLYZborcXaw+7pALHztyQB7Kdd5\r\n67uRpQQplm40Xp/RpymIaJUEUcM9mK4GoqXtZEGtOAPHYIAdG6k3pY2NgqEw\r\nObn6+saXJ8xvArDgBMbVDsTdmVgF7ONb/21Mr4KS5uoacKn5/kL2DSmvDdcm\r\nH4ZKoMGVUO96TO6ZgHa4X7CfsIzAIqmhPpUR/+/JkV36wMJgK2g4oTXwy6Jm\r\nDEDN5zbSpgvycgh68VwKtxPmNoctNj4gx6MgEzFK17TLmuNfNNd6BBDKv6p+\r\nNmaLD0A6gDht70Ml0vlof9y6Us/GYWDwo8wI7XB6y+ht/DLYTpNA+Dc6BlRP\r\nkrTvsvpfjVV0VrKjvZ/GpBIfykF90GyjW38rldShjW45woHljYh6jSRDhg3m\r\n1n43TB3a3eX/XjwUU++n1sMc5Y5dtWDZjSD+lwO2l38KVocLu6c8lUdudvkH\r\n/8wg57T44f4Xu019xPCrV3h8o/F8hgm6uwvUVjta84oJv+1y8cbBMUH9VVDe\r\nCxDfn80GsLcr5ICzhcdmID/7ql87E1WL9gU=\r\n=zbGi\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.38.0_1660737605323_0.6702292022150598"
      },
      "_hasShrinkwrap": false
    },
    "1.169.0": {
      "name": "@aws-cdk/assert",
      "version": "1.169.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.169.0",
        "@aws-cdk/cdk-build-tools": "1.169.0",
        "@aws-cdk/pkglint": "1.169.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.169.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.169.0",
        "@aws-cdk/core": "1.169.0",
        "@aws-cdk/cx-api": "1.169.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.169.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src860929265/src/js/aws-cdk-assert-1.169.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.169.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-epvuyzqLPtl/vp1oQf5ym4uleKP58+Y4mzGG7sYCDgdQQEsYQQTHJBk8I2yZ6wISaZuSkFN88FSG9RXQw4cM5A==",
        "shasum": "63b3c4bcc4df1f78d90a3327fa89a90094006c49",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.169.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFJRFyIkk35gat7m1nsctByHcRMxqQWQsAWwbBi4ID0KAiBlb5ylV6cpwoC5loSzJgK5mAwcLD8loFRxT1h+aCY/SA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/e14ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmonfA//YZ2o7j40lGnqBXSZ2oXXJNkQOpKSs5prFU+bemE4FSaFkEME\r\n3G8xTjKcrI8EmcjRfLtUFZmISH3v6/GfcMJY8iMqzSOajEKAbCd+gEY6Ee/y\r\nn/AdlvwFkNT6vzcPd9bZG/4F9gFqLYpobkJ661B03UONcbKwkBwzJ+Cjv673\r\nDr+S91/vlljQSNcok3ZTbLhfQwMIVVglL9m1bTjHjXmp7PVTiv7Sw5YRePlm\r\nnHQRM3hJFH5Z0+JI8QIc29TQRIcNjR5sTKGONOpawk2zUgAwubPEHVNUEKAr\r\nXXS1k5ZSQnKsocqewaYWuFSN/e+pHWsK1Jb5YbqvT9/FSoruZwV+vI8sXjlX\r\nBQOOJmwGzaye82hIMyhacKkzAkTg+5RTNoZwHEdqAleX6uNyGquEi9Gm0d3S\r\n7yBZJ/ayBaN60Oqu75g8BdJyIKWW70H6GkU4ptizU+8hU7MYoMxhiAgxqE7R\r\nuS63mmMSfL8kTJgBqek3gEIy2ygOwi/4yrS8J1CLqbKMZ9lQqKR4IMs6G7Aj\r\nDBOu6KNgg5jUKrlEElMJQiUg1CX2K1hfiyZX363QoNjT80a0pEyFx18DMz4f\r\nooAuJ+BgK9P1QPXOYYfz77e+GN+ydW4T5VXb1zv3DZsxktuNckkHx5gaJcEf\r\nJi99yRA82cya+zM3v2WL7KXn8sP5Y/Z0uDc=\r\n=zXsM\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.169.0_1660808567820_0.4539785374259797"
      },
      "_hasShrinkwrap": false
    },
    "2.38.1": {
      "name": "@aws-cdk/assert",
      "version": "2.38.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.38.1",
        "@aws-cdk/cdk-build-tools": "2.38.1",
        "@aws-cdk/pkglint": "2.38.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.38.1",
        "aws-cdk-migration": "2.38.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.38.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.38.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src867333732/src/js/aws-cdk-assert-2.38.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.38.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-QRTazJOJOdhBQKv8WBYza1QrGDer1ToFEv1+QICMl/ZJw+GZOIYMB8LtMAwk1qg4A4myXlgLZx4C0EQAd4JL4w==",
        "shasum": "655c17a856e89ed47ffe5e9d3b81f2e5d6b674ba",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.38.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHdQDdPzypzSCz8dSADPbums/263fMNGREHX8+KnH7hAAiAPF+G+N14XCwqIqYLbNv3C1PjtG3f36z/pLPgUQGLk8g=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/rYnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrvOg/9GVxCyAokIvTsZm76gb7NSY3xnTDzWRbi3UDSnPx0QnFYfcdj\r\nfATHx3Ntzz8BIcI64xbYmDnJYw0EA8YJbnCG16XzTjO/xU9AxSVADcPEP/Y8\r\nU1SE6xKti29wp2+9jIjrNN6WqpTkSrEZmGCEs0a/A9ayrweqkZEP1kI7hUJc\r\n30J2MZvDcY8qBMTOdYQx5O/IHUqpay2KGV0pQoqALaEZge4DDPMZqXCFuSVP\r\nMQchrQEmdrmVgXjdWCTFZO6O1Luq0ivKXTWprEuWVgBx65li0AVPG/ejlcOz\r\n/krBPqXLpULLbInavc9p0aLMEcVpng3FqzTudALagrdbJZQ7oGcTbkN376mG\r\nLxbsI0f4qbUou00nhZvhU5T919vBCTNC8D1+1VmYjvpWPawAZxjVWnOErYYJ\r\njtXSGImvYXKOOU+9G730/MTeTC6z4EBcD+vWgGeDwHG5gDSewnIHuQGEVDtl\r\nwcy30dhr0c5aHv5qCs6Go/LMsVfRDczA/A4nSrYX+uaIG0FykuLgbs8gD0u+\r\nANKvg0VzzZoYHzs3DNaOJrn+jJ+OuhjTIY1EJf5YvgE3WrMEaBm9ID9d96uB\r\nk27b0+UAnbcYP8Mq8BinscYKGKpsuzVCV1n1gwf7tDSrrhnHJwO/j3Kh1TC7\r\n+sL2hyrb08sCsyZ9k2bchuj/nSegCcVZi6A=\r\n=d0xz\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.38.1_1660859942799_0.6541596523001343"
      },
      "_hasShrinkwrap": false
    },
    "2.39.0": {
      "name": "@aws-cdk/assert",
      "version": "2.39.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.39.0",
        "@aws-cdk/cdk-build-tools": "2.39.0",
        "@aws-cdk/pkglint": "2.39.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.39.0",
        "aws-cdk-migration": "2.39.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.39.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.39.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src483601379/src/js/aws-cdk-assert-2.39.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.39.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-M8Y3ktDnm57o3E+Y+hU4OXqPZHqCaLR72qND0fmZy2nGUCVmBv8z0DOXWUyalBQndo9igLm5KVpVa2itIV/S6g==",
        "shasum": "3100c7d64c0dfe4b599865d9b979686c94f11e44",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.39.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGBmw6Vk1CePqSlV/t9kojFqKA+EU3hu6vNB0ZWSek+2AiEAgbmiqmjJNuy3qVUmC/87NzcvQG4LrvOmt1bIx7quGAw="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjB+o1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrBJw//WqqV5UW/zeupAtaSmxQtEZEL847gEfy2KjT7LYXUXq5/bcrv\r\nCkDDL0yxxhwr25lCC9RABLrMfw9+wTl2B82n4G4yqrU4wUwP6HpxOuZ3BICL\r\nGkpfsSekabzvmXmo2ll7ScO3MEZ7b1GY8PKiOT5epR+gqieKLls47tW0PDau\r\nz4i6AuVpm++FcY54VQ4pLjOooWqkGzzm+YaVRaZ9uwBepMs07IplcMUxKGaz\r\nKNYFrzmKx0PcNinY6FnYUkNbJAUOuDTc5Kig8fkf+tWxOOIGi5InT6tGq0m/\r\niMUsIbCay7H/Gll/RNayXnid92rxNoVrpNiArRGWpvrrgJhvRuNwG89VPj2I\r\nt6djoY59TB5lbVygDzmUHIBS6Uc1dYMRGGZu6pgMcD3QGDgnI4soCiZBxnj5\r\n94t8iX1FvyLvzZ328ylPmgOxnr+Bw3XZFHABgJfzDWKtY4xnKcSyNUIvs+Nk\r\nhvTHz6Cj4BbwMFQyXrsfLDN9cEa2bgxAyyfzTAMH875XD045NVsvqbR3GJMm\r\njMfsaYVfl9ExveXc/Y+rCqUuLntAmS+61WBCCLwFBATmMlbeIsTXDxIYbxtF\r\nS28liGserFhnX9TsdL12myfYFtwlxQ4kKbqh7VQXiOuVDDVYrFZf+Fj0tCth\r\nBUa4us2yxfUtya4FtGUfLyQXb+sWFv91Yi8=\r\n=sm5R\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.39.0_1661463093478_0.3091959804516249"
      },
      "_hasShrinkwrap": false
    },
    "1.170.0": {
      "name": "@aws-cdk/assert",
      "version": "1.170.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.170.0",
        "@aws-cdk/cdk-build-tools": "1.170.0",
        "@aws-cdk/pkglint": "1.170.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.170.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.170.0",
        "@aws-cdk/core": "1.170.0",
        "@aws-cdk/cx-api": "1.170.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.170.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src563290116/src/js/aws-cdk-assert-1.170.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.170.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-XBQF3bl+UcfoNx9AEfE6MXzRRYSIwdTp7g2158XOToJj7R1mqK6iTbk/QTcno11WC1ShUTSx5qD1ls4/CrHp0g==",
        "shasum": "911b833bc1f11be0685471ec0982c3c0affe5a25",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.170.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHJxEiMbbydW5zn4+awc8/wEMrKfBx5o5SsjQmY+fgajAiEA+XNgSZQffVNkFoNHUa1lC90hjHwAAKdD1bTMs58TCYg="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCATtACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrJkQ//W7IPVDu0f0x55cGK7PmNdewoM7nGYLsWXE91gEeMYNt/XLrW\r\n4dYvBiXyPCdxHASw29hbZhOsDEsLtVTzs1wBQRwhohWWyQc3AKWK/fJGQYLy\r\n6VBMNM79D1ULYsGBmPyIFdW19SH380jZzl7jJSmsZ+WTVoWG5byvF76+6+bQ\r\ndVOYJTwupbNVqpuHV/PtQKq3xeKUbJYEKAAde+G2tsGiSLVoC5X9wZrq8+Ns\r\nCdzn5nAPuMZCqoAUzkpNJrmHxUL3Zhzr7YNgWCUaPqBjluLifCpanVwPnuKK\r\n2nt2UIwwSk38GssYctONe6ALhQPNQffiYO72GJzn0fbBnwsRyciM+kDwv7Gd\r\nNFRivFIZHjltylYyHZ5T91pMS7jpVFWScBrvALigy4NbawAAywMLZPyELDzY\r\nLrAidqbj4IoCx8YU8S4zjjayqhsTHDNPAbKF6XKmTpkkx5i55goVDXdJct6d\r\nRgs8BJzXHydWPpVgzwL8Y1pxakP7RSCpSwM2vtLPEyqhQpnjYa8oh6oXGhWi\r\n4YK1wbnllLodipNS5IO+ZeAhlt281SHbrNZUbdhyvVjH0UjA02Ru11Z8AWga\r\nNGdg9gIQD5aqxP4jKO2qFFNS7dynO2buy6ndJt73X01hhmK2ffUadmcNy0fR\r\nHHs9NKCNMn9E3eNosE0FKKnZnp9mVBXZml8=\r\n=W67q\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.170.0_1661469933527_0.021180447759647336"
      },
      "_hasShrinkwrap": false
    },
    "2.39.1": {
      "name": "@aws-cdk/assert",
      "version": "2.39.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.39.1",
        "@aws-cdk/cdk-build-tools": "2.39.1",
        "@aws-cdk/pkglint": "2.39.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.39.1",
        "aws-cdk-migration": "2.39.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.39.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.39.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src703448777/src/js/aws-cdk-assert-2.39.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.39.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-/7QCNG8BKhlr1abl6hyOF0NQZbBwr84FgkMzJWCzXlBNQB5aq/buzZrCBHYN+TTGrYkRPZDvRU7gZrKEkXHHZQ==",
        "shasum": "b40d48acf9267054b5e27647c610c68f70ed9393",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.39.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD8VkTRBeDSloYMiUsuzXVHEoX9h6LY5VVHlPpl7St07QIgJdvE4ivXHGFsbL2MbFhCiQ0EX85wv3RLaICKKP3LIxo="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjDU1jACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqCNg//Z64mW45fwp06RGYfu3sYzMydYAFq30dB/l7B7WoYAGb6Al7R\r\nLVoYFCBaehb94QnFjNZJc6a5RdtpGl6KGPnZWkvL5f011y7XwFcovt3L7p5h\r\n+FfRga22ltDxYeT4rNu8K7h3QHiAlBAi3hd4uhlqsHVEbCSF7iQ+VNTvfSpU\r\n6JQIWy1rqMSbyCD0WmICuJPqGG/iUab6pyzTMbEWpQJ4T8D2DGRM2Bs5Xhk0\r\nIF0h2h76Zbmkg/WM1NgnbHpwhm9BZqQ85dFhALDi80Gr2p1FkdDePbtsQAqQ\r\nFwCNhijYyhgf/OM2CYJarydOn2CCSm2TYoZ/YlqajAJOuPpKZKWW8aA7hzFK\r\nBelEOe5Vn3DGTRMQEioOnBqDkIBn78Gv8M5TQCBls3hcUb7ip+adXEwhr9pU\r\nGN57VTYGCWDiQrEGWAHUmhCy6GbulU9dLjZSRgX1Gk59MrmJJOXODz9vM89L\r\njTDGGMvwD/XW+6YrOKalSgJ6rOUvSWaTke87Hx0m+odv1xJJK00T1/i9W3xL\r\nh2lAreuOKQOeUT5FUE5rbOAOGLuUGnjOQdexlxxUEN37o4+KChxxvI+Hj6iu\r\nTohR8A0NBVuDSVUhQzBgGuhkla6rvShzyd6I4KDooNHapdNVHhaioGhVnYSJ\r\n182qA1yX7NjSWCcBTxF043sKlv9cNrGf3qQ=\r\n=0zEi\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.39.1_1661816163715_0.07726601008705081"
      },
      "_hasShrinkwrap": false
    },
    "1.170.1": {
      "name": "@aws-cdk/assert",
      "version": "1.170.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.170.1",
        "@aws-cdk/cdk-build-tools": "1.170.1",
        "@aws-cdk/pkglint": "1.170.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.170.1",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.170.1",
        "@aws-cdk/core": "1.170.1",
        "@aws-cdk/cx-api": "1.170.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.170.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src178775862/src/js/aws-cdk-assert-1.170.1.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.170.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-AGSSM7Q6ooo81y3/H7NO22NaSiYGAymp8s0x1abjqeBnqiaa7wKsqfcAj6OxqROcUDhTnuMKV4p1NuVI+b7anQ==",
        "shasum": "c7018d5b0db8b2922f509fcfe61b65e881a6f862",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.170.1.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBfohRIVU3t9SKIf10aZ57h26TsPs3ML5mDp+q7mZzQRAiEA8eXjgytKTJ2ugDEtwzder2jeB72gGTME/cDkSVXEDjA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjDqfvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq3eA/9Ea5VFlwPXYdwWLzy8JlUVHGlMnNgnWoD6DIjrjwCYikJxgDs\r\naLkkS5lMnG0jIbi2lETtyu5I0CL3cxBjSNrjgBONxWFPE1sU1m3i4zg+PRy6\r\nv/J3KKxN3w738iSpbdEb6k7+cbW0gVK67IsrWKHfutrgZ49hjF7kYUJJohAA\r\nsCPGsiWXk+kOKjPrfpEsehUmnXUI9dcE/FklY8SnKio4+Ph6hbBUQYxbi2MK\r\nAO02osaCyBu4bN6KYUAwij1Z7MckY+athW0r3+F3nxFNqkqnkCHu+eK5K4xd\r\n/D1OBSDde6F6QdB2F8i27nDSxDvCjdzjhm2pWLtb3sgVzGFdHnD88Illq6Lt\r\nnazskjuU4g1X22tWvdrHBFW4CGFcJreWECqKTlSAeH+Ib28D+EJiRwWXpijJ\r\n1+E1E0KxhTCGv5bQD/2v/DbLVxzyprN+79jqwbWICrHGpHBCrcCt9WiMWE29\r\nHp+CfeCFV/2zIdIhnevkVKM2A0+gvw9KbkgR/w/ShRNB6oNCzHmjcPKWHJwD\r\nKvManqOdAQFFPCsYUgmE0mDOWbjGdtQtWqNEDF3glhtzv52UlnmuADy5QQH+\r\ntf2DxQoavfBA6pOeLn4alLYZXwP/xl3GgF8wquhJa0CyICDLt0rwSPRtIFP0\r\noqK6ADydqWdGxQ6A7r+GNW6zhCXvWXfmmXs=\r\n=os9u\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.170.1_1661904879385_0.8775232935315898"
      },
      "_hasShrinkwrap": false
    },
    "1.171.0": {
      "name": "@aws-cdk/assert",
      "version": "1.171.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.171.0",
        "@aws-cdk/cdk-build-tools": "1.171.0",
        "@aws-cdk/pkglint": "1.171.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.171.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.171.0",
        "@aws-cdk/core": "1.171.0",
        "@aws-cdk/cx-api": "1.171.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.171.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src402808359/src/js/aws-cdk-assert-1.171.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.171.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-oNbd/BQ+IVD/x38+GtW4Uf0ITn1DwcFfJGVFemMxNzpmBmF9AJlBNkUrBCGV5RCsQPQvBH5MeOZw2RUkJndlKQ==",
        "shasum": "be96bb8a2f5e72fcd785b4272d7fc4fa2d56c24b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.171.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDkPDOIiSgs2Ps9j4l/r1chP9aRKESBPLKeDxULQjLKSgIgPx+MB/3Y84f64sGONGn1YS2kEIQlXeFTDbQ5EVQLoyE="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjD+tiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpzBBAAiSH9KwRg7mEuTFM/u/ZdHhz31uCYH7o8aO9URt0EnBsby3tp\r\natvvt9XtosZrCkc7Yl7npWLvrbuVwopTDbcR9nzQh7dwEp1NI3ee060mvkQn\r\nap4xQUnOZSptP4jBJgGLaV6dUQSLocfmU/w/Yq0LdQByEWKIGMkJkpdz/Z9H\r\nS4WfPWe8cc+tGgE+7ALqmuk9qSGv66ztCkx4Uu6Go2MLH5w3aSr2aqqTsBpw\r\nttrChMR6H8vjZ4lZcuI0KOQutKxRvzwvKc1Cx1526i1J+jFREifJirBumdOm\r\n0XvEPU3N6QmLmRflQ/GAC8zXrx6zwzmE23d0xF7VAwKU09N5MEf7TzlQujZ8\r\nj2idxH2nfK9J4V0ZueZ0CRUeAnZ/nnwalc5wHuKYFHVKY/8IoYBzzUJK2er+\r\n5fqxr7ZANqDdC0nXXiagODrFIjKtQNXt03gebtPxcm6UVWP0HvriGeQFo6+q\r\ne7AxYqmtjpfV5VLZGy5yq+uabtgW5OMEhARBlnej0Dcld4yUwkvo/Oi0PGnk\r\nO5vuVhnEYC5K8ZQTQcwZNA/YvPoUQ8m3L2tlOK6GX+Ya8b7/H1Z4dQNjUaQZ\r\nJjnRzYZlmERuLmyUsaLSmgYj10hZgSRHCFYsvWMXTLSH1MgB0Fo8MUnmSLdy\r\nSxWifLsmfdVUTJuKfCt+lkrOCBZY+y4qQQQ=\r\n=p+7V\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.171.0_1661987681980_0.6757091575272254"
      },
      "_hasShrinkwrap": false
    },
    "2.40.0": {
      "name": "@aws-cdk/assert",
      "version": "2.40.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.40.0",
        "@aws-cdk/cdk-build-tools": "2.40.0",
        "@aws-cdk/pkglint": "2.40.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.40.0",
        "aws-cdk-migration": "2.40.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.40.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.40.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src529453055/src/js/aws-cdk-assert-2.40.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.40.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-qx8/zRsHXAbLoclK8l6hGctCxeT/lAtCn7y9J4DnPa8+u2JtmgEPDwSHnQya/yiZU2/HjmcftSu8/ssqxbCiwQ==",
        "shasum": "b131271f662038bdf9b6a289c912ccfe9ae46072",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.40.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDlrLYCe50lMCkw8tfJcjI8rEqFtoL8bfa4+P0Hg6CmjAiEA/PFxsKX1rB8vGmhyBcFpNRpgLVi50tXGON6agExNY00="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjEAIFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpkmQ/+L/XEK/X+4U/13aDrDIO1Vi5uO022URkWZ99rTNKVwQpxN9xw\r\nCbZI0Ur7OcQVhZa1dg8XcA6jSLYVXEMFxFqy6uFZeuDTJfstPK93SsgY3l70\r\n/LChU5prn8sE2S6tkCAPYajIiVc/CjYk6zq2D8ougk8TxvFIgjD6NYz+8HDJ\r\ngCkM2eilgr5QnEr/I9KOmi3NJL4aBHkwrXX2DMJOLlLlM+05bZufz8HqawPQ\r\nmOmv60zIFZqfUWWqADQhMSkjBKghdLHMV3MNwBFGfzEwwEK8DV/a6ZnQcRni\r\n+trvcKn8o4eyJhPQrpMVAgsEkPtEWsSStSoK1pKSfoQQsay9hsPyBya7KfCu\r\ngR/ljLb9poiCfpx/zZ3o+d7hIt+rt0UtwGkSuWxvI/fBQzv9kCVOhXreNrve\r\nc0KGX65KuGQhbichcwWiVx54wC0yN8lf8+KowSfvySOfRebbFvbNOsqOngoW\r\nobTLqQoSRfL8BdM8JFHqgJFA5wD5q4qHD4vYzeUEGCMAb6bzOzb6qq0+mrbU\r\ngaVm35MyiBIdWwdojeuIQLeNcSek1yZ0WgzNpDHsZ2p1kRSLPat7O+IECPgi\r\nI59ZmxfrY1S0y70Fvu1jWxnbCHsMDKRDRz6rSjH4rg8ri50dJoNNuh395ISp\r\nO+++LGe4J6KeDnk/LVuEWArJheeTSogDTaU=\r\n=51Wg\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.40.0_1661993477329_0.9230486187392841"
      },
      "_hasShrinkwrap": false
    },
    "2.41.0": {
      "name": "@aws-cdk/assert",
      "version": "2.41.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.41.0",
        "@aws-cdk/cdk-build-tools": "2.41.0",
        "@aws-cdk/pkglint": "2.41.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.41.0",
        "aws-cdk-migration": "2.41.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.41.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.41.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src218839924/src/js/aws-cdk-assert-2.41.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.41.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-LMxZwo5nO4b2MlC7xb2bK+y1HZkTjsbAafooC3Efqs3vta7onBNnQLJoh59lxjF9PDuhNy7h7FnmsBHBu+5yiw==",
        "shasum": "9e865f2e2d21dfac49136896bc7f971b71bcf068",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.41.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICXVDiEKf05ZWQKBbkMbDcVPh26HzEYuTsA4bAXG0vr6AiBdv3wXFPzXaqHkEDp38CgDIqHkkDOJXG0lQf6rJDlMPQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjGTQYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmovhRAAkuuTLW+A2kLwe7/QfgeIsirCsocOh8xVjGYzXYa1EIsmkLIl\r\nePrvpi3KFE6uA9/auDz8dXQ4B17Kl8vrgurBxm/AV+Z/k3GhL1ETUCjnext/\r\ndI0VLwftM9RPvQGb8n8sLKcjqG2uVYo1MaGsek6cRwhOG94PUeluCYrUkjOS\r\nhmbiRu5sTBKa5tuknzidPTb2OI0xKo6v7YG+03EbGf54266FFVbcenu5NImh\r\npcPE+N0UL94tnF7332p48bPh5si8syJ9jMpWDmi018FeVT6b2kbXr7iq4ZuS\r\nmO3kLOra+DrC5f0eY36TABE3P40vG+iox2g5XNxHYwmGHDxDRGeHMp+N8JHh\r\nvCDvYs+bsAIrJZ8NmfZDa2jeeL9LLDEEU7OGkcbPNqK4dVh0sinBMY9lVQxL\r\nkYXxiLhxmx5d82U36+EHD+jPUmN2i3FfjKMMnlRQhv0G/T1s98VOx8WZI2FF\r\nQKwLQY87P56r+AjkaEgjUu5FPxtkTjmtRJJ9HPD91BG7fO2Zvz8AVEqiCTjB\r\nCYyJbklCvBd4yunhQgNEA/QCWjcZiHTYFVZEbj2LC/HTVckZ2jxTTC17MZFi\r\nFQGKdMSoFbOFD2YnzCE383+Y64D21YO+xD7fKnUrsYM6SpIi+ElISgeU7gkB\r\nI9Gr5KXwnWHpV3DqiQVZk1SjgdsHk0Tv0qU=\r\n=oCIc\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.41.0_1662596119794_0.9551996326894643"
      },
      "_hasShrinkwrap": false
    },
    "1.172.0": {
      "name": "@aws-cdk/assert",
      "version": "1.172.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.172.0",
        "@aws-cdk/cdk-build-tools": "1.172.0",
        "@aws-cdk/pkglint": "1.172.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.172.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.172.0",
        "@aws-cdk/core": "1.172.0",
        "@aws-cdk/cx-api": "1.172.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.172.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src819275630/src/js/aws-cdk-assert-1.172.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.172.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-ZUdQ2H2nr825D/NSwigZzMenDUjiaSSf82GypF0WI3KUX2pr1ZqqlRz6DX52xp5NFqwRJ6g8YJ//MT4s8BYzHQ==",
        "shasum": "08c6136f96ce55687ce596bea5603a65385935d1",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.172.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD6lauWfEtnhJ0l1MGedW3Ba/F+VxhK7FRhxDC+7NrG8gIgRaPEY8AZ88gmEKRcfX9HH7HBAH1cZUc67MLVyyb+a74="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjGVVQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpB2xAAkDrqwbQMAv9GHsZPlgBvWwfSokMmK2hw1HTe33A+IZSo15XE\r\nhuauxkErvYOwiYcxfHotdWOZwcDOFzNsvd9lXwd4jaQMbEAOyF0xhRpy/u5v\r\nm2D04OALczPvy6Pnb9bzOXCPtcn9Ul66qYUbWezkTHLxEl/U1N9R+O6g0igX\r\nhEse++LfOX613IRfuS5uzG3j8vbzbLhwk91wtEmP8m+lVnptX/yrJVbMEllS\r\nj2Q7q1AkdK7kfHt9Kyf4mJPux9re3v6MF33AvnVdvH2MMNpSzu85BGeKEi2g\r\nClEYnd0MwhV4knJidn4lYu/liqbha9k82PEdHbyePqcmfo+ep8ExkNmuSaxQ\r\nCGS1Co2R46crxIX2kXdnBpc+1pZQwBMFIQX0ZNRuwlwtAyyG5BttLcRsl+lA\r\nBCr2N58w+9iZheC2X647b8955C+LRdcbq+A/No8RYoLhu1pc+Fhn+f4DHw1g\r\n+xt7Xz1Fe2kKi8nzdSBgbpV8BaX+hdAnATxdD5RwNoVdIuzNEC7n1L2U06eB\r\nZhjOgczgWO5lgXzOUlSh1fmu4V8p10+Ftbz2p4MR9rsApe7I4htiGeY7BUmw\r\nbsZtFb1+0Gt4heiwKR7e23tVD9fZueelbZTgqEvndwDOn8zwv3t9jMhpsexN\r\nUaYi7RCN/Y2Yfm1GkNPge6x49ZlgSlM63mg=\r\n=mDOx\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.172.0_1662604624198_0.9891061028231911"
      },
      "_hasShrinkwrap": false
    },
    "2.42.0": {
      "name": "@aws-cdk/assert",
      "version": "2.42.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.42.0",
        "@aws-cdk/cdk-build-tools": "2.42.0",
        "@aws-cdk/pkglint": "2.42.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.42.0",
        "aws-cdk-migration": "2.42.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.42.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.42.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src930710973/src/js/aws-cdk-assert-2.42.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.42.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-32PGjM1aMpce6300xSQ1k/v6Ncyq2BGe8WncoWjtPpbJrmQdLvNfhU2A/i434OqdbXnlNoJ1K/RxXLBXm+xnvg==",
        "shasum": "a4a8efb605d4a6cc947847f9b2d16deb1b7a90e6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.42.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC1u0NI/JBsp7UZn1AU/xFodbL3st+Vnj5zEyaL8ZxFUAiAyBJpSzmFfy5OVzV5S5kfaCi07uIHq4u2IN5Xjmn7jzQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJMRxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrfhQ/9GQhZydCYGn4kaFNIk3eybXhkDt5aT8DZH5CIGOcUYanEPpnD\r\nswfSfHXyQT6Sf51Ur2Jiy3TnltvMYZWVoienJkDDRG02vcZVW9ZC+G/ataoQ\r\ntpjrgFigJqLMOgO52xYwSgm9/a9+u3Wo3aXAC4d/atj13Y6kLJVMXP5Lm4Dm\r\nQxFKMUcJgiiAISkq66CnI4CCBda0fYhh6oSBbfONXwMTuC4521e2/Gb1/QOz\r\ngvXrBfdvGZnBbyQGFQfpbeUoGxCMH9FDQ4LlPgZgNzL8PMGf41r/8ZxRmoWi\r\n0kKHy4fyO4OHMfTLw3rsGOl0m2t/reLU5dIGCnoMmRkzR88qBhO6pOgKdgm8\r\nqKcTtdY0clNK1Vp3MOtffs3ujfbO0bhju+g0riIuqvG31c5UXYVIWJ0MjbdO\r\np1xsLJcMJPSQZsxZJRdK7OTMvZKZ8Z+BZruK0F1+JcJm1xwNGA9XOipmIn+o\r\nSFL74+mNg6UhNXQb7CpI2f/PxuIiRMxlaxuajs6lbbzOlegGjjoVtgMuiso9\r\nNIBSLd9l1/xzzkmmbZVKis1pNs+p7Slly8nu0ueVnkGoZ/6pzjAKY/jkAayt\r\nKrgKCIHnH9oeGQjLFU8W0BrIoxdpMn8RyVjRgOMXDcNwIgAvn1n+o2AazKce\r\nMkZSqk4ae4anBYD4YbuDeNTq2X5P52zSrMI=\r\n=sklt\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.42.0_1663353968740_0.9752686975214762"
      },
      "_hasShrinkwrap": false
    },
    "1.173.0": {
      "name": "@aws-cdk/assert",
      "version": "1.173.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.173.0",
        "@aws-cdk/cdk-build-tools": "1.173.0",
        "@aws-cdk/pkglint": "1.173.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.173.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.173.0",
        "@aws-cdk/core": "1.173.0",
        "@aws-cdk/cx-api": "1.173.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.173.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src307429253/src/js/aws-cdk-assert-1.173.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.173.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-hOBwDBVdm+zpnFXrsxz8yTkZp64YUy95+L9MB/odim73KAvMjG5IlSGk8tXeBy9+sGEe8Hs4YUp0c08NgGpwKA==",
        "shasum": "b9504c44a15df81d90fa63f3f3bcbe83c06728e0",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.173.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC2RXbehHwjqduHYDn7N/4Q0nGsHPUE/SQ4xpUEzxWPqgIgLENr+0yOhCwkeK4LqvMQFoxxZyZQlJY+vKprNI95CF4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJO5jACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqPPQ//aaUq3wLGPG+bjtIrnAtKaOWZafhftTlS0peOWKWxgFAsCwRf\r\nHIB6evYUM/8s+UUtBc9Ka9zxZhYa0nnKOEKd8lHbT18zPN3y/s5ChNmBumKd\r\nJkztgUF+nQe3L3z3epL+WKd0GRE4TZTx8MI0kHML+5MLvSH2ocv+c93YMYqH\r\ng3qx/X2oV+qazPWxX3V4xGzxCsycEOTYcwSI8jQ/TjFmRUcztBT5MHSB87jd\r\n/qMf6LRI1Ruzl1LebG5HaPpSlyWwYzrxJjv80o9hhwIl/gXaRR4mZY1F9Z/i\r\nxfHq3bKFTOLfXOI54v1hFn6G9UFATaERA3mXIqvW7nKOZVbKctQ7Iu+XIzUv\r\nsuxIfuFqz12pVJP/NClnfVthwU7rU033AvDTCYpHjVtELpCS/L22pVbuKLnW\r\nZ1LT3qoQdwn5fYQzI0KwGl8xWIzbx1wg77uPe99SbZJmdI0SHMQhBg7wLwAB\r\nBJjs5Iz15dEjFgoWBI5Kr9k/8stuMJR/4JTW4sWYwFpgJRYjhQSI7HRJTotV\r\nmFwEKGC7d64VcJPzYmF4eeRNFcqVjHpZ9+/AA/HaAkuWN3Zxigy0W6H+7k3I\r\nxaXZ+bUSz0RyRoXPYeyTbXCIjjSonGkhZ5UY9lP5c9sxR8Pj1/NggIinJdZd\r\neUZtllXC8pNgoNrvrRNShxmTdRubdnOGigs=\r\n=pbXn\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.173.0_1663364707085_0.9980552626378603"
      },
      "_hasShrinkwrap": false
    },
    "2.42.1": {
      "name": "@aws-cdk/assert",
      "version": "2.42.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.42.1",
        "@aws-cdk/cdk-build-tools": "2.42.1",
        "@aws-cdk/pkglint": "2.42.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.42.1",
        "aws-cdk-migration": "2.42.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.42.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.42.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src206095656/src/js/aws-cdk-assert-2.42.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.42.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-C4lZEdwCwZ8LS9aJPLpF65ckprf7oDl5aVGOIUW9LWtplRh3TI4H5LUvla46lpv487n4fYdwQ4mFb2xQtqy3TQ==",
        "shasum": "6f343a5ff8c010ab1e5cb63999d247e03c9d4250",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.42.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGZKD6bLT2d8AZkM2CdnEtsWtBeGDchjU8zXWYlFJ3+cAiEAsUwq0OLxqyZZcesIFBjy1K17nf8yhob9fiPjZx5CXOE="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKOHhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqVGw/9EO2jdTj6rREkwQgu3YvxipcA7luXKMI2GgErHacU566Zippu\r\npSuj5dkTy76dO2hbvbDm6dV2uSAAwvMNEQ0l8xn8VIQD2njo0kpIDKSWsJ0A\r\nkTnPSvBOma/4D/ZqDvY3xIMqfyiGChwqOLuxhnlbbMMhJFpEljihrLZy3jQM\r\nPVz7awNtUsEugjkrWzN2+DcL8XNpK4iJr1iJg0ALW43UtOwOlgaEEPyZ/otw\r\n+h37lkBnL9eUUajpfcnylBCcxw35SDE17ys7Vzr/Hq4aPj6kGMcw7PGz8Xmb\r\ncNPeFK4PSRZY/TBjskukpYEulGWU4qdjhDMjhnqYfgZ1RS+e9tKwhS8qwN4t\r\nydkGQr+McuLH2/BT7PQHZ78ZdYFVYtyPN1IEJChEzK6aqPsP4joBzrwg6DJM\r\ndlMWNjqgwAjFiT8NnIKR4D/0zaFu1VzePkIpvWtFxjXytBuujbRqaKCqLClV\r\nFaH0ahjcULpV10mGhLUwGz4wNXJY6yJKEorgkMAYRlBL4e5ow2BWVb3cSxGH\r\nCLwlvOUFWlqmnGJj3geD/gdSH7rOJrl63Atk0W+vwpPhTqReFwW1FYorkPkx\r\nBPhoMG5IPdIIUvPDvg14uRPJAGDVTl8/l1TuoGfLfoLbgR68zWOxHM8BcDnT\r\nQxLuUw0inh4Ll3MhYbwxZHEv10ageOvtkdw=\r\n=0xZL\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.42.1_1663623649060_0.19594744281765708"
      },
      "_hasShrinkwrap": false
    },
    "2.43.0": {
      "name": "@aws-cdk/assert",
      "version": "2.43.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.43.0",
        "@aws-cdk/cdk-build-tools": "2.43.0",
        "@aws-cdk/pkglint": "2.43.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.43.0",
        "aws-cdk-migration": "2.43.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.43.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.43.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src706383236/src/js/aws-cdk-assert-2.43.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.43.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-N8TkyWWVFcVA468JfAkUxmlSQgFOARWomIp1IgmazPqif8XF8E5UpdbHcmLo+Szwn5UmGPR7BuqBqWCniPxfjA==",
        "shasum": "fd31107805768da7a1830abdd6ca80f3b5f637fb",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.43.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG73EQ6g0V+qrbeBJUA3L0CWjCu/rC6tkj+g1HzS8jibAiEAp3CHcErOER9o4bMcVoDPL30odr0LUWy7viGefp+ZNQQ="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjK5pgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrzFw//eURXQS2s5kXJjmpjIOKBeGIC/9ul4QXo7E1y58aKxrtmBS4a\r\nbyu25TvxWLXIF+cMJCKWpulLVNzuBREIbZE3lFnS0+3dRCTyU47vMY9fXSyX\r\nUV93ZZ9NdJYv1qQWJzVf2C9cUMF/W8CCFys4DI3zV7Vz4SVRtnPyelAavmVE\r\nZRNei+NP+JpCynDmspRFxGTkm5FUhSZcY3QcxU8kz+YYngBMcnugg42u/6QI\r\n6oR0hJ408ICrukzB1hOW7o3THRnsJ7t7DLkP74vwVBUyMOxnfsC9xa9HpUVT\r\n2Js9brjQJoVdzmuIAl7s6dGc7pWYeW+4TUThuZKx6teFLDxMRMaYjdeX+KfP\r\n3vNDaf9IiRppNNd7hIs0WEuhAF9JMZtv9cGKKxHGf0zebksYPvRWCt1bghLI\r\nIXjATNLY1Z/dxVOB5+6//EhiFTGRn1k9lbxqjxSogYRjR6kRCyhWD8mJGrxg\r\nuyTG0ss0luT4/oER+XZRHKEggk/+jA0uLsSxPQ5rH/vQ2jYT4munsCxMWePZ\r\nlIAxAEtymJIHPeG58+xA19mq64nL6tvHlF1flXODcx9emEqFzn9d9ktIDhP7\r\nSQn1he+A/qfcji6cvj1xcvVmB7fwOkj4ErUbqOwlVaSRMjYtXE92QRTcAk01\r\nUM0uhQiiG2kfZ90wWznAbEyziVV6geQQq58=\r\n=wje8\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.43.0_1663801952564_0.05925205949697121"
      },
      "_hasShrinkwrap": false
    },
    "1.174.0": {
      "name": "@aws-cdk/assert",
      "version": "1.174.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.174.0",
        "@aws-cdk/cdk-build-tools": "1.174.0",
        "@aws-cdk/pkglint": "1.174.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.174.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.174.0",
        "@aws-cdk/core": "1.174.0",
        "@aws-cdk/cx-api": "1.174.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.174.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src540129526/src/js/aws-cdk-assert-1.174.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.174.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-bFbBqszeHEM9RXvn2hO11RjjvlnT4gstBDkXqLyfLZmXmhzHucoJx9Am3GGrLMehxBeFYeCuvTgr68dy4jE3NQ==",
        "shasum": "1d62804c4c523f0beb5cc2b7c5d093f1699dca9b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.174.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH1tPJwuePjbHfR2thEJUowWIa+qhDy51kS1Ny9hK0i/AiEA/l2jKJFgXD6nOvkk3j3ujPxqadGjma5yGGTNeN9HCOc="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjK7qQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq/RQ/+KmyAghcEsj3y97moGzMPICsUxJmjFeeTGCzrlp6CaX5IUxB2\r\nNrF5myaJeeQHN93LhAqhaA/TdIUtgEbI7YQDonvvuC3EL6mEiSQP1oitYpeP\r\n6Udk9lYXfamSa3oeJ2OUOS5z0sC4EVUJwabkB/Afmje7IOLUr68Ev0/+9Tpl\r\nypqKYs27ONqwAHZ70xSFFNLLOj/+sP5RLoRR2DM75THl9xOtUAqN/gWvD1z+\r\nsYFcUfgVZsDNSNTaLKZp/9o8oopbtIxThFPdH/7V6pJPZ/ebziiBz0pw0j2U\r\nMXyY+D+0mAKPdbl2gKp8XNVo3xPMqj8rWDGjcBsic7EbxrrPYhg4rghb+jyJ\r\nDC4lqXW3LWXQ8kPjWhqm5Ck9TcBmig9cA7C3NkBALKJin5AE44CLHqdUx9Zm\r\nvxfm2ylLOpmV5CpYQoKG6ie/yaAMalcD8qGiTFHtNgQaZ+u6G9jjOHxQAVgs\r\nt5iYjjIrUfB+fwV6xaEnvU33jH88Nnryu/nwDxtRW8Tko1aJj4OqyekBRkRl\r\nusoCacp2UbUtedHoEQl6sUhD61/uLAYIhQrRDFufoIyd7RzSenHI3TZSWcYV\r\n+wE84zppGU8DDigPDJ3qk8xu54XSmjMWGME/fbFeoUH8WuWdgiCTd+KGc2w8\r\naOi79MplS5FVuMrAyXVScRNdiikOS1N2z4Y=\r\n=IjL5\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.174.0_1663810191703_0.9238517625518763"
      },
      "_hasShrinkwrap": false
    },
    "2.43.1": {
      "name": "@aws-cdk/assert",
      "version": "2.43.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.43.1",
        "@aws-cdk/cdk-build-tools": "2.43.1",
        "@aws-cdk/pkglint": "2.43.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.43.1",
        "aws-cdk-migration": "2.43.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.43.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.43.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src175770440/src/js/aws-cdk-assert-2.43.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.43.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-jxqm2rC7a3qclZmNDRmhU/3Y1iWt5r3GSMKsrU1AccgJtlxYF/zs14pTqnxAN3R3C6sZ3tcljGqWm8cgdvnTrg==",
        "shasum": "708a535048312eba56c1be7642532c3bdc27c0aa",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.43.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE1Yv2Ng69jH3qyaWpTbA4Rp+OrHdZzNFAJwzl7KU71tAiAbFrriTUnC1oX9zKhEBjCU6UI5vwaSwDN+epS20t1S/g=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjLa3HACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqBxw//f5KIEYG9K9xi0qfUH7sKbuJA5/2ZXSKJIRCr3ezyF93NPoNj\r\n+BkSdekQ7ZJMolC/RHflkoOsqf/0EDVRyOGxKDLuOQvydaAk1V47nev9JWCt\r\nmISi9wHExFnRJP+ad96oKGLuk2WVXA9BMmXaZDoyOhrby0xITlAX7rc+90zA\r\n2HylCezabShV9c7/mFkJhj83Viac5mn/4R+alJcOMudc4a/d5jr5cyRE0vLX\r\nSyEh3WB9+SOckBqyWHhjAE7WW/h8VfkUiil1ntYR2Urs0yjYbK9Qiv3FCppA\r\nPXcZ6GLdrmAr4qrFOaLR2s9FycULj9OsuwEeIoWRC3TXiCQdlETG+wBmW0+v\r\nb/GkE83uWAjMdv44qocbsJ0RNp4B4kYWp9kvrTJnXLLP1nfHzZAu/q1Ze6TJ\r\nOf4z3MCxbweF39zRBqqGsQp79j+u1dtdEwQWb6iTk4WL3R9/fBezMO7D2shO\r\n2Bu5xQIAGWIa240rTRvnr/JAHhGzwuFN+7mxEdR1RY9XGQx+YGPasfrdN63m\r\nROepucxBQZI0JReDmYtV4ovMhtNdP4W346CHLXSNDftPsDMg3yqX63uepSg0\r\nSMFw7NLgXk9Qm0I0Vetvg/lkr+XMmb9Crl18PT4GFIK51a4kXlhPctTwn4+I\r\nnEQfeB6FpXkkV+6EU+FA0geJitlbz7n3WH8=\r\n=VXwI\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.43.1_1663937991600_0.8692207480529404"
      },
      "_hasShrinkwrap": false
    },
    "1.175.0": {
      "name": "@aws-cdk/assert",
      "version": "1.175.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.175.0",
        "@aws-cdk/cdk-build-tools": "1.175.0",
        "@aws-cdk/pkglint": "1.175.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.175.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.175.0",
        "@aws-cdk/core": "1.175.0",
        "@aws-cdk/cx-api": "1.175.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.175.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src688140295/src/js/aws-cdk-assert-1.175.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.175.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-tUyJENA51zEGGQN8AKkyCWdMX7uqL+npgHBhmHwirD5e7x8uBf0/Nj0ghVHf66KEKE2NUWQpdtdyaKn/0FWf/g==",
        "shasum": "1a47793d49dfa94b1279a928f75b2c51661f35f7",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.175.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC7jbqc294ejlLGFFxng5nXGmTXe4wrryass1ZApKFavwIgbPSuSSEhHI5rarMonzxLDP+exiCDZwXlkYcYdI0A5WM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjNYIdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrbFQ//RFGtSmJem/e7iE0X6buxFiBGVOiXpM1Yhto/NGmx1khD7OtF\r\nGHRhZ3gyG9C1FTTNM7KCCa4TLT1ymmWEYZyoysHlXCsD4KaCsIfonJgtJVqq\r\nu3zTNlE/1+62izNG/tnZc3FSD8hWxr24s9WHUH84rdKx6c3hxeQaJuInD+MT\r\nweINNzDsGOMA1UAaLfMWau66wMJfMhMuNOXEeMNE7/gEEB0/C30ZE3kGLz90\r\nyfWnV5EwNGCCFnETuGteJ40mskZW2TsVM5I1Uxmdm3w8M1LKMaSUUjHIPKp4\r\nD86RwFfIFJjzjq8etoXfybfWP1CpAvWITkTfJ802mmWej0C2OgnjYPWVvHMF\r\nOxxt+0On5EcdywxNKgrvhovqGp0wEEwElWIuzRm+BVjFV2JQ0v6t+dgYSQIr\r\nqhUe1G0cB4pSY9Yh4g22xLQFq5CDyOkc1PlKJK2M8FDe9gOo4XEHZJpimcse\r\nQlcjIw0MFSy6MKywPtFFIub0nSixUolZbObRKJ5x4pMG4/E3rVL2MhuGM/TF\r\n9/sdbmQX3Ae+nGxvniRXu/i+jQhxgTD+WZVGfG90m6MGwCD12L4yHwwBn6DC\r\njiwzf+IW9tSwT3RGQREcXk5xKDe9NA18/1gvR7V8Aytyl1zJ6vB1nmhZVkNy\r\nrLaLwTgoewsVGX+aHb2+d4Pr5w0gSROs04A=\r\n=ENYe\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.175.0_1664451101023_0.32838861387784446"
      },
      "_hasShrinkwrap": false
    },
    "2.44.0": {
      "name": "@aws-cdk/assert",
      "version": "2.44.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.44.0",
        "@aws-cdk/cdk-build-tools": "2.44.0",
        "@aws-cdk/pkglint": "2.44.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.44.0",
        "aws-cdk-migration": "2.44.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.44.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.44.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src235762673/src/js/aws-cdk-assert-2.44.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.44.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-QB2vE00i1zbhP3RykTM3Ynz1O3CCFBX4JuXsJllbS+/Gpg3tLcHqTwq1ZCcdoM64DM85hVTd6K+YUi76x10J+g==",
        "shasum": "6fd6e6bf6b2bcfda1760e7898278a18f53208504",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.44.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCtEw8O05MH3mJBa0ujrE4Ul/adXw8HXk88+kf4JIOlmgIhAJqoptR6uvgnsZvWEnMzADl4/owvc5MdnYOR/sml8/l1"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjNYLwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo7PxAAgNKxKeMqge+X2E/fBY7L7NW9dvDmCcCUr8B7x8ggiaLHby7E\r\n8featL7Zxm0lvOtHR9Y7xQog8iXSdiKfyT5TAE+ba7QdllLoYIPuQUefpHWR\r\nSYB9m5FXofZVcwKmZqPelke+3LK9gWfX6zbL/a+sGzxz3WRgflfzEfeScCB6\r\n0T0pzobNNThXkd08oiDOK97aJjTsqSN3lr0oC7Z09KBlbf3zYeJciGzCoQ8y\r\n7byW2RosQG0LWGkimdf7oqmDIr8Y/pDLSr0cXjt38Jzzcu5aLqBFv7KoWRN4\r\n14nmBfnoPqFrNnuFuO3PjzuOOQqTvAxgGudaiUJ0uKL7Kr+AZVWcmjeOywWg\r\nX/0pFUyOlV73MoEFrOABOtmMCM3QJIFQYNZN3Wl7lfS/Im2pqOnAqnzVPkgK\r\n39Hs2GUcVS6QGvUDSsEjVM3RRQ4Sf+d3H3p1H41HcL2QvCw7mik2kT/C+je7\r\nuWBgEQvdvj6bCPuJJCkUWnMM+LNxddsLrQmt+4SuyWClKjJhXg0kSGde9qSx\r\nKVSTFZyL0AQc/eKhMmQVQ9+l0e0IqngH98iT32GvB8rLDRaEFm71t+Nl4GKR\r\nqmlJIAOn6BbRqdTSZB4fmQs5Us1pO3kH7E+CUy+GBSOWpWZc+/7sRlajQYjk\r\n4XKN3G5VS7yCidaUcmvwqFOYUOT8eeqmHn4=\r\n=wt4k\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.44.0_1664451311809_0.34438216092358953"
      },
      "_hasShrinkwrap": false
    },
    "2.45.0": {
      "name": "@aws-cdk/assert",
      "version": "2.45.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.45.0",
        "@aws-cdk/cdk-build-tools": "2.45.0",
        "@aws-cdk/pkglint": "2.45.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.45.0",
        "aws-cdk-migration": "2.45.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.45.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.45.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src033995631/src/js/aws-cdk-assert-2.45.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.45.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-WEGMxUov+72L+AFZAVhSU4VChgszbYaPlN8ZKLEj+AKjjShKUaI+2hJI8UiyesV4VUC9IXO5Ar8iV4ce+SeITQ==",
        "shasum": "c8d38eef4655a6b8ab441c4784d4068c80ba1882",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.45.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDR79IpiyZEpsIX7z/3MiqEKUiIxNcRb3Ods0wJtcdERwIgTNtdiJncdd0PjHhmg1Wr/lCBaWYaQVTFkpttFpCCRvo="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPqxYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrrKhAAgkDCZHp6JfR6D61UWK1bpdA9p8xKJN0rm0pw4YI4WUIP+sJM\r\nsMTpmddwphF71zByB2Deqz0SBb5Um9RI3C6R5bblL/k8U91t1w6GDKhBZYoy\r\nMB6/HjVRAU/ZCyigVPL1lIEoGLci6l1CJvw5KIw1eAymg2oQMUuG3YLfizww\r\nQ5uDvAfKfzy7qBcyvMAPeRsFTxzp/NGPNnoWabkL9NXw9V82FvQ6M+OI8K/A\r\nLvAB4cawxRQGqSzu/oklebAYG/BuBtfrVD9NHptA+OCuK1kJBsS0rWuBLYof\r\ngruveGcCGCx9N+fWlaivdbJs47UDmP7lE8tXJwtzG2VS/CkqzaSXGHxbNmiw\r\nNoE+cVWRcn5krLy8tVn+kfTYUixFTqd9jdqNmn4F9fqlhPVQ1vEpi92lI1OJ\r\nyoop4QX8oWz5rY7FTesQyvwMEz1scu1j0JQOll+gXEaeF4e9P2bdf0CY25RR\r\nWG6xuVFhyYwQ3u1JbqMfdZ/KxUijskYJxY3hEGyosKJU61p1HiO1UvJQIwHd\r\n+F7tF/L640jaRCv9gI69PbrwtBjZ3HndBXTP31E7f2LyThEbiOaXam0RvrcI\r\n/YjzbYSzH0ziq7AU/LdAMsY5ncxaJznr0tM6G9S9oit0/SaJxKAkMwifkGDQ\r\nqpMb2AiylnR7YJoxPacMZQ9J1VmeGeUWCDI=\r\n=Yt1f\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.45.0_1665051736582_0.6905487708843749"
      },
      "_hasShrinkwrap": false
    },
    "1.176.0": {
      "name": "@aws-cdk/assert",
      "version": "1.176.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.176.0",
        "@aws-cdk/cdk-build-tools": "1.176.0",
        "@aws-cdk/pkglint": "1.176.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.176.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.176.0",
        "@aws-cdk/core": "1.176.0",
        "@aws-cdk/cx-api": "1.176.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.176.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src057013412/src/js/aws-cdk-assert-1.176.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.176.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-YLok4H5prtajXDehV/uVRJ/CErrm1PbgKJHe0BoQb024cmoZdAw8z6cHGzYPmR1GfQnV2nbjcSzmzpdJtcX8ng==",
        "shasum": "5fc822c8c30c6c2245730aad74f21fdaf9e5d93b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.176.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDW7+XhcC7bptxaLHbvfCqsELHSe33rSjEpzbnxPisRZAIgWRE1wqP1m+7zp25y9UxdMdsji3heeUpTpaxplJKm6HM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPwL+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrxEQ/+Oo0gSu94t2NxpYwE8RTfsZ7I1/4MKnQMwDHFv+8E/OEIJPL2\r\nyIt6hwSg7Z9vZfGjCna3JUPXuQbmKDq7tAhztiDUOFHjDdzAVNui1CshSsgc\r\n/WYPVNlzDAbeWQv+MXSKp5TmUpJUHHy5RzFiyzIpfGBU+swYVDNX70+XAgb9\r\n8CTK55sPFwkR77Gg3lFv86GDrQZj+vwK1pCgc2B6d2mVZNDD6PsyHmjcPWdy\r\nWCFXDorR80zQokrJt4NPQ1odwfQfw+pNZfdN2b1KAhqTBTyIlauWKqQLHQWL\r\ngufLV/DLMuC7SAv1klFG56F3I3/tM5TUe4Upp0OLwWEJ7z2EIwv+F41mbiGv\r\n8exkC5YhhQJc5uubQQ8iLhIrqFbN9/EHxUUVUumeivLt397O8gnsImzGUbiy\r\n1dUJpijaH8E+KCJqKJnplzh+THxVHyx0DCHf4t6MqxfYiMG2KlK/yA3yaFec\r\nhKfDWY+wAuIUU6Vvdj2EekLbXrhMW+ZWEypA9tlEI1wSBp0XRMjgkWc57Xkp\r\nAmvP4o1zhK5QiCfVZPyVG2A8D4/WjX8JkRymhGlBmAjZsumf0Yr9JGSc9FVk\r\nj3+Y5+SnTbNEyMVSeB2e6Dl8xIbSAC1AnOHUNJrxWoBB/HcZzV3OGFvfoopa\r\nq1C0qb1TZHf+Jypcpj/gvLSolVNAN0IVOjA=\r\n=Mh7S\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.176.0_1665073918066_0.9258813352964457"
      },
      "_hasShrinkwrap": false
    },
    "2.46.0": {
      "name": "@aws-cdk/assert",
      "version": "2.46.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.46.0",
        "@aws-cdk/cdk-build-tools": "2.46.0",
        "@aws-cdk/pkglint": "2.46.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.46.0",
        "aws-cdk-migration": "2.46.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.46.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.46.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src535799290/src/js/aws-cdk-assert-2.46.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.46.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-Z9G7gbahbQCWiQa6vV17ycBsKOvN31f/KX4WyOeQueOP2LkK4XJs8gi8gCDM+MRUbGO9QxKXwxEMq0xvbSUMug==",
        "shasum": "511e704efeddf7692fbc9a75b7d04624ad216286",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.46.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDuMjCOZRqBCS9cpBHjmbYeB2f2+2BVYIrrcOep9QaORgIhAMKAzbVmiGCKJNEInQW2kWU3roYtXS5Oxq+AS4wRvrtz"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjSH0kACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr/QQ/7Bd9xckXgBqOmZ+fQzOP44eL/PdgfFDhT7U5EnqcSrDUpSwOS\r\nR8HDbdJ10qYomyGHG9YenWY6OECH7NiLsf/qafRDfLfqVyYddPgbWzEJsSib\r\n9vw1/mvewTyy45FxhfI9sgGIM8H8/ZTB6xfz+BcsLQqVchwqIDkpV/TvWLQh\r\ntw6lGYIOKMplUP0XBfxZsM0qC/xktNterEk3gtEaWc/Ga8917Toh+0X7Sb5/\r\nUQHtHxdGexyGMupiNDYcHYE4N37y75E3SwgixlCNVQvThBjwhHD42Wg+qlN8\r\nzQaSSCyYVCbYVl6Ugd6nFxe/Ipb9Lnp6JsuFk/A24e42XsvTCyxFwPjrrcBo\r\nEJGKQR9WP9AKjig99qBfC5cq2yqY24phrDuSHTpQRGMh0i1qmXBgjQ1CtT+M\r\nMR4GWbIfcGmnZ2sYE449hQWEJDMPvgaJ899JGEgxnDRHAf0oPP72kZ7c6yIz\r\nB9PoIJR3S/BfY0ALlJ2xkIerRs8MVsTFJKHKjJTeNQIEZgPcWRYwlvDtRDcw\r\nWJWzym0IMnHDE6m4Zoh6wJG9yxn3rqMLo/skHjZLYheeLGG46+KatANv/7Xw\r\n1+u5kO2OPpnCip4OzD+l+PvVvc1ni4gL9XpMIggdCy7Qv2o1sZfMPVn0lRi1\r\nnO0HMlh2CDERP1dt+eanPFPlAUXzoEo80kY=\r\n=8Y3T\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.46.0_1665695012585_0.3784551218719898"
      },
      "_hasShrinkwrap": false
    },
    "1.177.0": {
      "name": "@aws-cdk/assert",
      "version": "1.177.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.177.0",
        "@aws-cdk/cdk-build-tools": "1.177.0",
        "@aws-cdk/pkglint": "1.177.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.177.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.177.0",
        "@aws-cdk/core": "1.177.0",
        "@aws-cdk/cx-api": "1.177.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.177.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src437070259/src/js/aws-cdk-assert-1.177.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.177.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-pSlumGmGZ7eFyXvsUaoZFYAzk/zp7mB3CeWEbzgshF9OP6KykYFQqE1DiQpWEg5bm70dhffgKt3FI8FAdEKqbg==",
        "shasum": "68a8faf1f11ad51b8bc46dd0887cbfa3899d5ff6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.177.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3xI5QA1MPsfoV3bThG2pMG7Tb1SOKokG0ZjxdufJwTQIhAI21LbFqijQEKkzZe6eEPX/tYznXpAo6J4UgxYwF9YPX"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjSK3AACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoLXw//eZIGVlqS0P/aeq1lv1BpmFlXLtrW1ZJdc/T5lYjftjkRXfbT\r\nY64JFmJ8MlzUw3hqEHBtlajijPyPxXcH70UDLkSfxzD5Hkmi/dAy5+NjvSVI\r\nQCG1PE5BtdhXeaT15x5Rr4HDU8eSL26pt2nX3kWWWFGuz4/b3RepsFkRk1RY\r\nL2xqmu/IUnZ0S54ZMjxAuytLcV5VHMrCS2WcxCe8ya/wL/RMOZIIVZJIshXM\r\nJDoNlrBhrP44n2KVuy0WWkCDgTCLilaXr59I7Uk8mLFo47+ncPk+XrNb5BjZ\r\nRyebucEdDy0WE4+s1OYHXrRSuz5Vlu/jxQ+o/IVanE8/hYbundEj0KdALQRn\r\nbjC/d6DEDJwqKTStJaI9Xy0OFErY/yFUXgpeeiKvWt/PDPxkOw+5408iDt5c\r\ncOLuFmJIx8XsBueiHWcD/8EEUg+dg0BDDIQVqqAsDDODBtTRl39UfKIJx+iP\r\nwr/Nzepx8SeIPjRQUBglCAoNWkLSVVnhn76mstcwSRCSnYpmmqLd2Bq2dT+G\r\n3pCXfjH0ZcidbavkLDWjeU94eFxDA9IZQLDcDWAGAxUIUHOhZoJcI9xudyx/\r\nE51TZzkBJStu01Vd+X2AERa8u1ae3DhhlOtx04ZEG/oyu4fBHb+mW2Ri+2BV\r\nM1JJuh+W/eW/PXcr198xA3LK6yJIWqY2kM4=\r\n=IHJ7\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.177.0_1665707456401_0.640057342734955"
      },
      "_hasShrinkwrap": false
    },
    "2.47.0": {
      "name": "@aws-cdk/assert",
      "version": "2.47.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.47.0",
        "@aws-cdk/cdk-build-tools": "2.47.0",
        "@aws-cdk/pkglint": "2.47.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.47.0",
        "aws-cdk-migration": "2.47.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.47.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.47.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src062929604/src/js/aws-cdk-assert-2.47.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.47.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-c46ZXetK6kNuMXAGBdDtdEOxe5zq1jxoWZ66F6WZ3mUG3bNCmli46JVi1gR5PXt8VUx6TY9LJwcWz7IXnTtyEA==",
        "shasum": "55c8a7db9d04c4f5db1da8db316137aaf866c436",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.47.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCID2apJ48GiaRdgTLDcyRaBf7rYhJaVRwf/1E53YXwrvmAiEA+7gWH5sMXos7bywJM0LVhO5WgurF7J/6DCQcOQc0eQ4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjUWPhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrL/RAAlvyeRZvAlUSLTP/kTSuOeoJ+KpjZ/Q4ylgyGRaYex8SV5vKy\r\nUNmzP1VO78I2pI9L94zBNGoTDMlZjZ1HtxmATpEKjN2/e75V8JPlZOZQ6/2l\r\nam4h6RYKsvt0QYGnTO+CcdHMXJ4a39pfGAZrHkV+tjgsXGOqWMy0W2RQjoP9\r\nj9sEPKsEayLC6bFZYbDKQNdEvvvHUJjhWzyEqoDrK+4S64zP843rHn7GJkN8\r\ncCwV92+agH6PowSlfZsxPhiUm5DtENEUAQg+vw5LLmAJnnHLVandkB1BQK6H\r\n7SDXoItMg0EAM3bySIasRtpj8j9/obsRev9NMz9PPY2pmM/LhEAArOTCdMIe\r\nZ2KiZhRJv2W9R7Ks9gw9Qj0l/cqQDmql6rYFxihPvzvXn7+ud4O11QUIDcLf\r\n5CqKoB5Qeo5yb0XYIFujoA6Yq/2rdKKP+Yp0kjoc5j5tezwrxShRzv2dxZC9\r\nWwO1kyFsWFGsHW+/rmv2LTYF/oUa3pjmM07OHp/yGJzr3uGeDtdtmKM3itWH\r\niD4V6gYnt/5itRNIh9u6/z6ztl7xrQWkhs5BpivG38chm83AkiQ19PFtFV/d\r\nbN+OWaj1zoQhCKyWEGZem98dZfllT65AlN/33csKKVGeE93CHwJ04zhplTow\r\nRhJno9OYMRZVXbxlFWoupYV74RDcjScL5FM=\r\n=dqcZ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.47.0_1666278369613_0.8778464456054187"
      },
      "_hasShrinkwrap": false
    },
    "1.178.0": {
      "name": "@aws-cdk/assert",
      "version": "1.178.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.178.0",
        "@aws-cdk/cdk-build-tools": "1.178.0",
        "@aws-cdk/pkglint": "1.178.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.178.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.178.0",
        "@aws-cdk/core": "1.178.0",
        "@aws-cdk/cx-api": "1.178.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.178.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src310054570/src/js/aws-cdk-assert-1.178.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.178.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-JX3feAS7b82MomUgvop4YlK2mjSdhiOA/eH0ZhKwNTkXxYy+zmoaNPQ5vej+Xj7X7+ZlhLs5Fupe7r1KdHILhQ==",
        "shasum": "6a2df5b6650d783345d2d84af4abbd262fe6b5ed",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.178.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCAnF1wFkfqZagxqb5t9FkhGtTyhKvSzj0LWUtsQTecwQIgeaFZ3F3buL2s1l2/1Zdf79rJh7jere/0+QpTHusomBA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjUYKJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpy/w//fI4r8vrpaPs57raZ2WI+qRwbYGaS/efgtM9g0L6EHbIcqFC7\r\ntYLOyaLALQ8JUwHcysEo7V6+v3vwvhuwh/1uIyIhsnDpQRA0SBfRGHQdFcAf\r\neBtIArH5XB1N9EfRpKxQ+SYdNjm0z2nyLHqjb7ZuOEAdP0OgxS+dJMt/kPQk\r\nV39OTYJBmkta5v/Q+ewt8OCwgG6WRRjp7+xuF3QD+SQYZQFff+U6GZvAzOy0\r\nAt1gQ0NIg/TznO2efTsCauX08fK+eyUtjc0LMArAvsrU0vXCXbKciDruosud\r\n1vfeoyz6vA9cxQXM+3z/2OlHNcsUv4ONH2UUO5CHqkSrk2kzzZWKuc6ZVJ0O\r\nQ7PPEeKBEWGwNsVz5A0F6QARo/cbqzJQdxbDb8j4pOkFJ0AkiSU1wFPF2h8z\r\nwF3q9Co6q4S3yIbb+0Fm40cGJ5UKqvAaU17SAz75EO/HqJFHo/MQ3u4v5Wjo\r\nzRIBnMuwXl9Ag4RlhPHyAmN7nBjGtfjLYlsGy/553mCzIFpftxbs5gIgKFn1\r\nXnfcTNCsrisCULPj/qSOhbpJQahAfqGLnPZLrWDl+rexjwGB8wC8/eG0MrKg\r\nBQfYCyx1guOQcWY/VBNoPq+ssImXQ1ehDwlVoeqccmu40zSBZ5QkCUZRvDlr\r\nRihQrsmpizdysA3CYi+8Uip66sDDPstqbB4=\r\n=Xb7W\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.178.0_1666286217683_0.3055608502478553"
      },
      "_hasShrinkwrap": false
    },
    "1.179.0": {
      "name": "@aws-cdk/assert",
      "version": "1.179.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.179.0",
        "@aws-cdk/cdk-build-tools": "1.179.0",
        "@aws-cdk/pkglint": "1.179.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.179.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.179.0",
        "@aws-cdk/core": "1.179.0",
        "@aws-cdk/cx-api": "1.179.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.179.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src826469206/src/js/aws-cdk-assert-1.179.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.179.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-Qf7293DywHuDtRLPO8d9Z1t5mMyECG5sRYwR+BrhzVGPfM6doLQTIlQbs/wqXTKZks7dkz4ER8pzGYoat/0O4g==",
        "shasum": "d1d0a7e0107fac6fd049401f3cf2a90648b6cced",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.179.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC51Le4g18w7fbChzWi+mHnUTYvLqb8Q7sF5rJ+GYMxOgIhAJjUPHKaMTDRrjEx2daVxr6lKVs0ON0sTaKXwhXaOnaS"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjWr4aACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmobeQ//TsbdKNNZm36B1NrR8png/cjdJjlrTYZdUXR/WTspQvvydcIf\r\nzKJwuHIAnqrQ8SKvbQY4qg/i7hIhcM3z4SkQxaaHp4tKURtVXxiJN5EvC+q9\r\n1I8O/1ry3lxP/R0WgupxVAw2ibQY0xvYSrDNWdC0bGWpjS1me9xkY92EzBzM\r\nv7vQqKyvPY3lhY/KMZarL2Zt/KPFYQTJNis9w6zUAsUds/mXQO0vrVMraih9\r\nktXhDZz9H83afSpAkjNmKS2a9G0zH6FEzTKgEe12nx9xSIa7ekW7HS8TYIMP\r\n1FlER7NiU8onpvoipPj9Vt8MF6FaW3dBEf8L7ree1hfeSEhymjHkTBikGhFO\r\npJ70JxPQ7KNrfO4Duz1AGp3dueJz/go+05vEt9t4W/QBMiLo02WTroCou1eU\r\nG0WXdfFVEHtmCPKULQs2qVoK93F4R3dygCEg1D68uq7Tf7bMpFKWu+X56sqY\r\nCKHA/rbgcZh9MjIR/3k8LGLC/PfnFVJiqe0l80hcDWEuUzSlCGGE/Pdjv0If\r\nSOB61R5NrKwQaNy7jJ/5OX0VrCw4yGKLaafZJClKh1tFR/qDvxe9lgDSjVla\r\nkCpeutP4n2bPUwbRAIObPiYRMDcaM6/zt2ZnnluP9V5DussoroeK6vG31Aaa\r\n7K8kBAITI7Z0Fq7Be1uIFjoi7CZI+lZOMs8=\r\n=oTuo\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.179.0_1666891290194_0.458895003982257"
      },
      "_hasShrinkwrap": false
    },
    "2.48.0": {
      "name": "@aws-cdk/assert",
      "version": "2.48.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.48.0",
        "@aws-cdk/cdk-build-tools": "2.48.0",
        "@aws-cdk/pkglint": "2.48.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.48.0",
        "aws-cdk-migration": "2.48.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.48.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.48.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src808342957/src/js/aws-cdk-assert-2.48.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.48.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-gNPeEzwYb40VH5bSiN6Nf5sPVFtjH+Ppag0rkg0om2aCtOKWkflzf5nRwHAWddXc2GqSTEHqd8vxj573si0YxQ==",
        "shasum": "ae69d27a8dab376db8277d9e6ba00f9ac3df3b22",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.48.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCd/LvKYtIKc+jKN7ulkFKLINxAhKphbnV/EQwUnzPMcAIhAOfpPRPvXeiVFjfKptAj4owaPltGEP7YCvEPXyb6It6s"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjWt37ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpxsg/8DAfqfQ1bgygIfzi65+FAIWzDd3Xj9oJZ6ZpuPzIqrKLpJ8+p\r\nX28IhnLpmytyZZ/ZlN7dFELBEeyyxOPMd8HLoqkLWgGlfQnLL1CX6d9l19ib\r\nnsQDhCuFeUu7OYKhOam3BH0f4m5PGnibMvl5++zFvcihi1o5+pWD8bLBWGjq\r\nm5yxerBtMadYAVdD3Ue5QJdOLvEtYkrIxtuod2atuj6XVl8ZZcAAOZRH+MFX\r\nYK5Moq2M8f7mhJriDwHyLQgDaBNFZ8fMltxRni7WJiFXapJSnQZ1TSsoVnk+\r\nJtx98alvhnJaczpJ28XnKtWVbJHYTbp8ihubau8nPfVw97+PCMvYMcmubWxL\r\n36/2C4b2ukYrChvweJSRtJq9IdwyAtFL2HJWbkP9RYo24V5/sE/2MLGye4C6\r\nAy4mqtPo/7bCrrj3IOifNr8UOh0Qx1MpavVkoLrAYYEPdO8XyBNs3cDeAbVc\r\nWiNPj3lfAHn2/5iEXudtW5r/ayptviJSgu2VW4F/ePGssKssEUXxXpLGPuCd\r\nINB39qNIIHOq/BZvt2vHelzkQAdMQEqF8G1Hxw9IiqvJKVhWp9FpVIQ72/jq\r\nrnmhNpt/KAlOvkxd+96wJ4P+pjZlMSea3zBhMqLRYAXUSp3EU9+/rwcILjs0\r\nnQ95sJWRBM8JSUta9QVthAOkd4UzSn2G+XI=\r\n=pMqo\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.48.0_1666899450875_0.11668717266768303"
      },
      "_hasShrinkwrap": false
    },
    "2.49.0": {
      "name": "@aws-cdk/assert",
      "version": "2.49.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.49.0",
        "@aws-cdk/cdk-build-tools": "2.49.0",
        "@aws-cdk/pkglint": "2.49.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.49.0",
        "aws-cdk-migration": "2.49.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.49.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.49.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src289534967/src/js/aws-cdk-assert-2.49.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.49.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-RJTqQEgUgYfJjura+Zg1WzldfVcka7ztJnCOAs96v4T90s7dLVJJI4tJu1ymPLUJF6cRfMYypMEjD519HuyThw==",
        "shasum": "0205edf315eec1a7b8fad9a253dd947ee01648a2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.49.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCNwL3uK3oIqrHJnZbVgWDYhvw8qUBPl88NkYauso4f4wIgVbi0Kvgvq1HchG7r5yp6rx2Nzb2irclhcgJgJFdGGkc="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjWzjXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpblQ//b1b3a2XWF86jncvjjgw+3dkvMAYF6dyTvldmmCIVkFTSr/NS\r\nbg7kcyhJITzjYmgpY3YnFLDHN6CdlTx/aF4YIiubZLZGkTpIJv3KIkvSwG42\r\nTcYuzHGdYilFi+Evzt4zyvkF5B43gjvV1CdetfT1PmoPwsIaawcOwueHAq4y\r\nHIUAb2RU0sj1xspHtRz4ukpR1HIfrpE4wpk/upWUw2dWmPYwpks7NCVB2XIR\r\n8odRyzEhs5Ap/QkX78NKSWxLQOXe5tp2x/nRHreVsfygMMd0YMHOsuV27rGV\r\nKaC4FCMhojnuA3uwcvL14irHuB7Gd28rJz0b24pf31MOvk2zzMX+FZI0sB5z\r\nkkiEjQFc2aqBwY8wR4EcRhaVHTIGrcj/YOjsWitbTWh1UbAg8LwDnJ3PSY8y\r\nnc6fXUwOZB/AtWSokUAE+L5GGn0Y9CMr5Upq6aW0IzmDm9uIFIc3X88Sr8pf\r\naRSkZSGkHefucvmJvuOnaqXNAhUvyWktQtStQzLnuYqEg8mDWa6v9jFkndOU\r\nmYzpU0uYlaZPwy0KJTg5lu5bpDGkGKw/lp9eo5dIM41MILcLUo3b+Ogbyr4X\r\n6ozq0L3zAC331wpZWV5xQxiNxpFL1nWADORTfnOf9jaHyx7x9qkCgZ+1p6R8\r\ndfi5nnoj9vKPHdhMgStxNwIiSabLaNBcZlc=\r\n=PCGr\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.49.0_1666922710893_0.6596297123362382"
      },
      "_hasShrinkwrap": false
    },
    "2.49.1": {
      "name": "@aws-cdk/assert",
      "version": "2.49.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.49.1",
        "@aws-cdk/cdk-build-tools": "2.49.1",
        "@aws-cdk/pkglint": "2.49.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.49.1",
        "aws-cdk-migration": "2.49.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.49.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.49.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src085161395/src/js/aws-cdk-assert-2.49.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.49.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-L/6EDgFvCizywUrT7SM2cL0Oi1MQTbFei/8DWGe/1dSYFlgYI+U0qJ0TXbWvWlPL68w1GWjFG8rDY3qkr8CTYQ==",
        "shasum": "6caca44b9d6a8368307eac33cbff621d91d53aef",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.49.1.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGJ3M4MkxZRm7Ny3u2rxSSsWFhS+yM/PRqzDCQgert+8AiEAvPHA5yw2peD2LDUgVk64U4kGCnCmyJLLmkzWz3DTnq0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjYG89ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqwuA/+KhMr3WdZs0VfWmPWNWmkhDiUlKWfhGGsKo7DqL8oym4g3HK8\r\nFsQNHaefNPtPQxkHVlsk2KFTflXlvA9wBpkYsFrahmNFccFvQb50prj17ob9\r\np1PHfGEnaPZcbUtwmcRbZANeoGBcu+ZnRL/kyeNk40/T2eOUvXM0lFUze4i+\r\nd2XK1O07MrQqJLhlBrEknGoAAQd5CAYVWcWbfQ+Uz6nDuhhE//WQULsbsuyH\r\n1s0e5CJO4Fq/NrNo4RlzDi+CaMzTbgpWvyfgkuEFzk/tDYtsl/xYusgcR1fo\r\nbRbwFmJJJhsnf2eUeBxd89g8+ZnvKwS2+CuT03J3zHxkezueAPbEdEwbcxaO\r\npnOR2+HYNg0wuEtJKYtMMN9tsa6ZFSNuefG/st12tJkyT4W1S8Ct09Xd4ayv\r\n5wsswkm5uzYDyq2vfaQlCqDqaIm6fz2Aj890w4WJYgoi73XkpK8qbigzL4Sm\r\nLj2reD+EwrBaE6D/56SP5BvYTW6ofIBLVJrwDSZ4Qa5xde71iMp3ZPO1x0ZZ\r\n6sM3eR2AA8Ccv/8gGVF09iMD50dqeQ6rUv5wnF4MYhxNH4jCbrO83sFNnoIR\r\nxtrgRZWaaHGJCJGd7rV7Avz35J6lIVl+U4Q2btsKnwJ66aDlxQtJ0dPoTqM1\r\n8dhfEnHaAh+s9PX32PPQZgeabMfmM6Ggsv0=\r\n=D6fP\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.49.1_1667264317652_0.33185072982023134"
      },
      "_hasShrinkwrap": false
    },
    "2.50.0": {
      "name": "@aws-cdk/assert",
      "version": "2.50.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.50.0",
        "@aws-cdk/cdk-build-tools": "2.50.0",
        "@aws-cdk/pkglint": "2.50.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.50.0",
        "aws-cdk-migration": "2.50.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.50.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.50.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src365660853/src/js/aws-cdk-assert-2.50.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.50.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-v7JXAbWhttOKbdb3jdV2Md/1jIw8r3O+1EZAcQdJMn0T38pevWBKJcDlbE+TNOuA9GELDE/qrlKucCiO63Fr8Q==",
        "shasum": "ee496e1e45df0822aea271bbf1cb21d5b662bbfc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.50.0.tgz",
        "fileCount": 38,
        "unpackedSize": 187421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD6j5wtMlHuizk2/7KqrBIhKUNVhrzB14sC1cXUlQWGtAIgaT1G7E9tlflwLFtjvfHj2OeFbMcwiN9c8mQUQqQVhFg="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjYRa4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoxlw/+LMpD1Aire05JQVUo/2pJqxmQaIYoflUZd32Wxjb8WbU36+ZG\r\nu9qHduffNo1Mn3FOOFnCODZLJTb7Qc6KSGakIpi8715hzQXBzFdoDwWwqqCM\r\niYs28azLIS7q/jOjOfIN8oKKIsiSQc/zf0iVhwfGLrDqe+D9btlXcTaskRkV\r\nSkZzjBjE1KYDJIClQhSzLq11r+LXfhmkv3MG1e1Pflu/O1By+rMZxYQeveSh\r\n8oWc2fcvaDeLPLAZoh6fZi86L5qAkKBOCGgL9Mw2tQoUPSS15xBzI+ugJciR\r\na0GaH0G6KLPl0/tXIcAc56rQI6FXaVI6WZGAF2ecg3MR3CQRuVG31HCD1AJG\r\nWXhQy4bejuZYMNin86OL/xWMqELVK7G+rbikxHdV8TgOZmlxLJ6BNdyITED3\r\nmY48sg424bEimSkWFQ540oY8bkmjtwGdcBLLjmrLm0fWzQRGJoj1A3Pmv/8I\r\n221TsP/om8pZ6Pq+HBDe1sAf0Wceio8ACWtr69d+Ov7lvx/fue7CTrL/C71i\r\nTJH7J2a+b9aZy+UObIsswmP3iFc52KnqunR/s85sIC8OXpP+Do2S/V7Xhn03\r\n4zYESpTt2gPzQ7TPnmzw/ir8q1Gpt3Mztyme9xJWmqm0+AbnLrIN0/9wOEtj\r\nJ6gK7iK8uMsM/2LUUvkxcSAxfBuCMWufDu0=\r\n=nfo7\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.50.0_1667307192655_0.32325062299842355"
      },
      "_hasShrinkwrap": false
    },
    "1.180.0": {
      "name": "@aws-cdk/assert",
      "version": "1.180.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.180.0",
        "@aws-cdk/cdk-build-tools": "1.180.0",
        "@aws-cdk/pkglint": "1.180.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.180.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.180.0",
        "@aws-cdk/core": "1.180.0",
        "@aws-cdk/cx-api": "1.180.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.180.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src286507187/src/js/aws-cdk-assert-1.180.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.180.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-vlJT6hKWpdkcMSraxPzCA6uV4aoC9k4+8iYDqbZtPiTueM60V2CoXM78EM279DUTl9W6hK/Poge9BrYZaHG/1g==",
        "shasum": "ca21fc4534e40884958101c71a8447165e49e460",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.180.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC+CVBy3gXSjCt4Tj7LaRVjLKrSostbB2a04amN0I6QEAIhAKQ5JiyTkU3n1WuQwHY5yOKrzIhArvsNX7IxFCJKh7eR"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjYUfZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrbMBAAoDxBPhIp+kTTCFdkXc/zM7daC1sg7b/BwRVxesmx49Bbj+Wz\r\nAP0HDQjFIf0lttEwR8rzz8FJPPnByFH2QFUPxZANQJUcJVTgXbPMVoav6r1v\r\nZCkTIZ8pO11c36OkEJ23pWiV14mMPvO0BOuxlHW6VYG9z8MYzGQjHO/zzHqa\r\nzMKiTmsQGPxgr8qbMAp5QtxDOuqq9h9RugIQ9ZvPycpe1YXeUM6koHilSCbj\r\nJSLBus8Jrhk5dn5ZohVOfRwIVL1zUh8fCjltvZuvzoJ6SUBcMF77UqqLbZLT\r\nKa3LhUVxtz57NVo70njFNNQQ+ijoBiL0WPPc9BNjM8KmEAeGQJcvrAuS74oO\r\nkQJH1+zD7kTtXEDc1z1XTq9lop1RTD+sHo43x9okTOIIP4BJxXq99U9fKyPo\r\n5IDQWKLbEinqXb5bIDnAOhj2ZDbXSOO8+C+KKfCm7anINhF9KhYwzkGNAVCN\r\nqkTKuXQEwF3i63l83i2uNggYiZ7uw/S3/3gRPgDUAJXmmxoDr5pb/6LOskuQ\r\n5K4+xHI4Smn8OC4SstVD7WHQlSNALFZDP5RZGC20QBIP6jbx9MK+ri5HdD3y\r\ns/0CxmACA1BbnBWC4xsKEJYkEFW7DDizRoyba1k2pqvZe3EqcdNBibtM8pPf\r\ne/2rrQxfp9iSjs2Hg06eGsokiuuIQJdv6Vo=\r\n=R1fH\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.180.0_1667319769645_0.15279250936130673"
      },
      "_hasShrinkwrap": false
    },
    "2.51.0": {
      "name": "@aws-cdk/assert",
      "version": "2.51.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.51.0",
        "@aws-cdk/cdk-build-tools": "2.51.0",
        "@aws-cdk/pkglint": "2.51.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.51.0",
        "aws-cdk-migration": "2.51.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.51.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.51.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src862400511/src/js/aws-cdk-assert-2.51.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.51.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-/VRWYfR/dT1ty4uSdF6K3D1Rsa/onYLQd+smiBefxPbopsp2ALMVbGx6CVDG0mPj3fCbgexakv4/OY5C5wO12g==",
        "shasum": "32d13573ea3c2ee677e635adf091094f6cb5627b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.51.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186315,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDjf/tlRpf+ELTlX/HA1hV3X6SHHl0mK2Vi3qViI8kLwgIhANwjnjUY6YIUimfZ3fY/Qi4LwJfVTlzrRhKJaqTDLbkG"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjdv7mACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpTXw/8D462aTCmfPIGVp03bgH2ja0ibsswq+2rcOQCdsfeL//AVO9J\r\nUZmzoK6/S9Te1yKtT6KEIUT7Df68g5E57bluMjywHS5Mm2NSrPLQjQ8BRHzx\r\nkmrbtw7oWqeNNb8X7bF/6x0L2nnHbK8eo8P6FzCZM8Mqv+pvXQB3cLeY/b9P\r\nqGvnRNo3z4RIU8DpIrFhy7Kp3bJTNkFA3hvnEr9dATT7v2ewoW+Fvupe18rt\r\nVFtHfj5K394efLFcWymOj97yyrEGruWawtYIl1HfBAbJ8jW1KjcyG20yEfie\r\nlcx3O/O3Y1wTkpj/xRIwKKlnOlV1cOe4zNKxf9yuLsJZYesiQofNsY0vsvIr\r\nb0tDlT6fJsTlqWcDhx4L4ytiH+Xyas0wAWs4/rOSEqG0zEAc4K8VGz73aF56\r\nUG+ta88FcxMzbfrdFpkh1xQFDoKf6R3QbwhszoQque9DZJzeEHBcms51PkHe\r\ntRFjnDR6vtodGMCVNHrxJW5QSDKRrvdDkX0wJZSfxRzfGIOE3nq9hqkPKGT+\r\nS6D5esHGqyn9fxy86PRe0OYNyxBsOLte4eWSfiKH7G6C8nYPryzyH3iZZIpT\r\ninB5rzM5IzIQF/ae9VFDouLqqAJUvzP0GTltAiivNJF93VgqYumuzbGahi5S\r\nc0kpuTRRessOqQY9V3Av94R44k6LDsHVmZQ=\r\n=KlhP\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.51.0_1668742886394_0.7036005026008398"
      },
      "_hasShrinkwrap": false
    },
    "1.181.0": {
      "name": "@aws-cdk/assert",
      "version": "1.181.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.181.0",
        "@aws-cdk/cdk-build-tools": "1.181.0",
        "@aws-cdk/pkglint": "1.181.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.181.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.181.0",
        "@aws-cdk/core": "1.181.0",
        "@aws-cdk/cx-api": "1.181.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.181.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src586415364/src/js/aws-cdk-assert-1.181.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.181.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-LQfkpuLhWO+DcUqgUBOHBkY0HeQGHXoHEuPjhwZkgaq5YoxsN8ZQI0243vIR9g9P8NKx+q6R62WykvisaYAyqg==",
        "shasum": "fa26339850eeed5144e7ef0d354f783d17c6235c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.181.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAadFZH8Gfwvi8pNn5jnU+vOW02XM++N0556WGiYm7F4AiEAk7iib+mncryNR08m8pK1wOMmSehqERuLO67GxIu8Flg="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjdxdiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmriYg/9H9XO5B5nz9STZCi8xQ9nBZA4pAjVgKDAL8bf4s/oP8uWWxhD\r\nAhy9M8ixfMYut8MHR8IrxgBnOM4m2XBRY+Ar1BCdP1MLTCvaR09cLAaaGw1i\r\nZJWkvkvE+gIp3oDbl7hf3jDD99g3z9EtbtFQgN8+XtBYRVJPtPgqnIvxnaVr\r\nXvqDKxhKRQzsx0dqi9GsRTF0GFY0Vq6GIMtN6/ZnZohtYu12vH/3EW5tpJPQ\r\nke7GOuyXVYaPkKdta2K2hggm50zi57zhpk1xxWFjbLLU3Zt4mYUbcpcB5we9\r\nZv8Z7l7kujYDn2IUi08CzveqNC4z9U4Ojju4D+ARTMOBKOec8M30Z45I9mAZ\r\noPYk1qWvHH3EoqBZyN38qOy8IPTAVSTIemvg7qoAYPJdO13a3JHIlvBBb7TU\r\nhVJ6hPxixJMwRJvC/wFwk5xW1t+E35j3GpiQDJjn3GWxaW307Lye3HpOOvj5\r\n4830iLxs4LkmW0ZOGUxb5XmxJyqADeB4EwP5mREstsZoD/8kol8TpLCwfmzi\r\n+hLb4aFpaui6xOmlrIxUMVlpHIfkC4fb/emLYRL1JyNhh3lbAmJlZTqlgYDR\r\nK7qJO/jipvWScpcPTio/xR4UQ5mrS3gsn8+E/K6XikhC0CSBVohRVFNVoXH3\r\nc9h9lfpUuhVuDN/pSW/UyZuvgli9SFQl908=\r\n=5o4W\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.181.0_1668749153898_0.011327003984812123"
      },
      "_hasShrinkwrap": false
    },
    "2.51.1": {
      "name": "@aws-cdk/assert",
      "version": "2.51.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.51.1",
        "@aws-cdk/cdk-build-tools": "2.51.1",
        "@aws-cdk/pkglint": "2.51.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.51.1",
        "aws-cdk-migration": "2.51.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.51.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.51.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src884354371/src/js/aws-cdk-assert-2.51.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.51.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-Ja/7fTZj0VgjDQPZe+Jc+uzbhIXftvw6++pjdoEGgyfZLsmC8uWETUhIpxeNCRrNwnSoJr9HQYiVuSlsIW9A3w==",
        "shasum": "674d6006fbd285eba097f288ab8ab59e7fa68726",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.51.1.tgz",
        "fileCount": 38,
        "unpackedSize": 186315,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDQBnKCRB5EoRkrUgfkU5C6X8VVIakql8xgYylUjn+RIQIgd4I6xkooX49TEbb4FCz10SfT2blHNYVxgqPDhxdf7Ro="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjeBN+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmowOA/9FRUKn0ci+tIi3lTbdx7Nk4fWJFB6hOLswKJVpudS2S8CgTU0\r\nE4oEnu9wDTjCPRgzfaym9DqEjwWC4eWy61VWO33XvvGth4vEjMU2SbQAhwiz\r\niqtfMP3ojDDVOEiT9UYoxZ5+wPgCyx3pemLlEH1xIFgpTGb08q7ouKmnQUb7\r\ne+AATk6iidwGigCV2cISZnhbYAtYPO1LG7P2E1LeBcqHgbaX9uo89f7kWJVm\r\nz/T1Pg3F8xXVYQTReO8/S2DwN6O98h4WIHPvvhCVAK/+8ZzSSdKAFBsnQWQP\r\nxHCu3TwP0qTA1tu6TjoZQG7i1JNZv+TOvheQj9Ul2Wb1L0fPlaey/OpOIKWe\r\nNe1t2zGu0g1qFEPNvgwuBdji2vHclLFszKNLbqHj8mpK6v4ESEw6j6wMz6Gm\r\nmMI8aEI+rWGr56kLwZAxGesWeylC3fXwOWOZoO9ntUT0vMNw6I/NcjAsgVZr\r\nxwMsf0/kKuxlYYtEXRYIeO8NxxvKGUDmvYJ0NSx6827l18qeq8mf0G3iQpA4\r\nPY6tAGYj0Mvj2lus61WypP+0pvdDCTldU52n/ryFz4JHlFgs6kWtYX6IhCaB\r\nDPmzeJhTvaUtk22kOFO0+k+DiLm6i2weIB7Z/9F5WXPirBvG6yuCXpNTonkA\r\nAL75EaJbmEMWNC/jhYypsTjcxgfgRFaxB7Q=\r\n=dus6\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.51.1_1668813694192_0.41143223925185946"
      },
      "_hasShrinkwrap": false
    },
    "2.52.0": {
      "name": "@aws-cdk/assert",
      "version": "2.52.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.52.0",
        "@aws-cdk/cdk-build-tools": "2.52.0",
        "@aws-cdk/pkglint": "2.52.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.52.0",
        "aws-cdk-migration": "2.52.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.52.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.52.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src968450049/src/js/aws-cdk-assert-2.52.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.52.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-5X+LEQDyFMK1G5Kmfr3xji9axzDPMOwPvHEYEcUW1K+M/DRYmOIpg1j6W1UxeESjVDFtNtZMjsOo/dvghtI3tQ==",
        "shasum": "e58ee8a475583ecd7e3e5196862bd20b4449e0a3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.52.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186315,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDP/VF0wDvSvFIyiG1cNYpWjYOd+3MEjALrGSpeyfCrkAiEAw/TiyhcVhmy/RLetXx/InhEuhCRQd7Q4aLEC7uGFPkA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjg+cNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr5NxAAlBjRoAAFaMcyuAGVJpZ2b1vvBx5uLBj4aWG/F/S3GecDYbWQ\r\nmLni98SX7tiuNbLqfJnNtCbwhFkwxIbZkHpFQhPxmi0OUU/tlRmiT4bfrEk/\r\nCkN5y7fEewkiWpIomTRSZXCpeVj71DTuosp6OuKughfkeMTsRb5snfPwiQHo\r\nFtQhnsxxJ7rSW6rEJ+1rmlQ55GdvCj/xEJchHl1alU+odl7DDvHPTY9Y+jax\r\nGej+ZsI+YvNiMAY2aoMEIHLe+bkuj1MTAkLaEKXs4UX5Ayy2v1uCmXYdGVl0\r\na6gRkS8H60cdQGfxlA4aV1ozie4jrQN8r+Mx299dUVqVLJAv7kXP82YSklKr\r\ncrgevyE1sEVDzUhLJjYBtXfsTtPh8wFWa5eE0ZROnPPb+qUQfpK9BahG8hDR\r\nHwskbd+8HEuUAfG5rF/lOzcNXqTGiBbOFjGOck1/mLZmUHEdXyLKEyPx6HL0\r\nf+oHClXv3brfzu5p6xPayaFTbkCoFqYc6eDwHYGr3vlvSxB7fQY4b45hITYI\r\nHbeHsMrfk8l/QbJc0LcEZ1WsYo4/b7RZF67/ePpJ86U52rqpRgd54vLhRItN\r\nP2GFr1FaagbD8iFepCCuulVVTczdlLouGgUvP7VqO0paEdKHxeyuwKkDNbc/\r\nXq5g5RJycRu1a5xVz6o2jPSJ/chghxPQmr4=\r\n=LT5O\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.52.0_1669588748835_0.031206455002342537"
      },
      "_hasShrinkwrap": false
    },
    "2.52.1": {
      "name": "@aws-cdk/assert",
      "version": "2.52.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.52.1",
        "@aws-cdk/cdk-build-tools": "2.52.1",
        "@aws-cdk/pkglint": "2.52.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.52.1",
        "aws-cdk-migration": "2.52.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.52.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.52.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src900635693/src/js/aws-cdk-assert-2.52.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.52.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-YQklbB0Wrjkuz8xkFP5WV2hsQA/IxMn2KIfkhDwnrL8ksWnWyUpTf2+CXDCnRpPUiTpY4rqZN9hf2W7hbfEpxg==",
        "shasum": "7a61379d29fc7f230675feb56ec121378f5be234",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.52.1.tgz",
        "fileCount": 38,
        "unpackedSize": 186315,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDQudNAwxz14vA0PHjd3ZwOb2Ei9Cs5oUPZtmwoN7YwxAiA+NGqKzn7rg7tzE8Y2YvoJ44BvtBwO56c8tyeCwvyC7Q=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjhWW/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmol5A//V3jR1d9HgremnURu4QuHcWYW8cr/m/UtI/R64puFYwTBlAPr\r\nILk9An8E352HP3WoSjXt32d+7I2J3DZ83YsnMVDu4vsEGWFwfjZxQgq54UYm\r\nhvwu89tgCE1naDSL2AWMPTyaw5VNGxbWPtgkqupUGf5nLU1MHdvgWXpkG6f8\r\njC5XzClV0Lnp8Uaxm4x4LOAT8xx4fo8fcj3Nue23WWUBOt5jXBHGMHTs5sv9\r\nT2OZDm+13X3yd69EKyklAOaqHGiUvJ0VrSyfPWSdrKppX2f5ZYkY3nsgGQK0\r\ndcHQ/LG7vD+kOU1126mLWimI3VipavT2Bt57Tflke8CMPYFc8c3fQywDvc3C\r\nbYSpspeu/QN1ttBpY5E0qKeoEQrpK2olIUXo8wfh3CfwrIQhnBRhkVTqIrao\r\nMRInFGH7Xc8Jqy2jJIfPIGTAnbVmgI8gXo6YKNr7ufQl/Jpx+JLAogoNbvTy\r\njqKRRfy/8Q/6dcIQBrNJOpmvgXR9wlK2IKRfXgJK9ZIxwA5iBpaiTxAgbZJb\r\nfec1GM6lneVpX2Qj8s8/fplTGNCJLvL9Z6LHxQMr/6Mv9e2dgReMPT4+xHrS\r\nDXXg0oMvpVpfOdObMRMs/mHVE8N2u6BApV1lfxJcsdlAeCrTQPiozSFJtV23\r\nuR3hVv9pNQhW2pDCq3UL+oIQynrLw0T6AKA=\r\n=Z+Rj\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.52.1_1669686718757_0.49370151162733467"
      },
      "_hasShrinkwrap": false
    },
    "2.53.0": {
      "name": "@aws-cdk/assert",
      "version": "2.53.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.53.0",
        "@aws-cdk/cdk-build-tools": "2.53.0",
        "@aws-cdk/pkglint": "2.53.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.53.0",
        "aws-cdk-migration": "2.53.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.53.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.53.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src286287293/src/js/aws-cdk-assert-2.53.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.53.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-9iKM0JBQBc8IK14aZAbL9lfL+03AO40k/qHIZjIVGRe1R3aXjvdhfMXALB0IDFvJ2K3l9H1PuodhsrQ5hmEMyA==",
        "shasum": "7b86ff14660e56e1b98580b3e1c8c00bcfb8e53f",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.53.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186315,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDwdtlrSduiAybFiFo/t4Jk5oCKb+9CQ4LHAaS487mXOAIhAK6aswczYjN4U6fwPfLIeW9NTMI+lhgFH9CZtRYFsYRa"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjhaNYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq/rw//aI8ea7bwjg1A89Y85W/hc6S4VPVuwC8dogfyVmRwrhwgnHpk\r\niM8NmhFLhYL8IgRlUJEJ1BXyp02VkQlU1xI+f/sjQgudTZTTEnh9XuwnlVYl\r\n/idz7ucOyF/b0VX96ptLxa24cEtC9UP8PansR/E0cx6EWpPZNvveNLN9rJSr\r\nACx77hRUOjjFi5NZmw/N+h47dkO93y2j281k9Z6pJrWxnckfQOo9Wy8U3zPr\r\n6p+w/40mDxJEfpOzLOpugdaYqCc0pVOuhwraOCEY4U2Ep4wE/s2Hs2fUo/gv\r\n5yEcFozNQGUJs38zUYP9NaeXViQUyzvfLZ5nNHaT4xwF49XqUVuRv7uugJFX\r\nKqVVK30xzGP8OSd38/UIvE0hAFYIe2PeeMI3uozYh4J+E02SyiDtE9yj2YSL\r\nMiZTuPIHfVrJszXMd43kDiGyVi+KDla2Pht//9vTEyDIg+0UFulJ69Fo+Zaj\r\nSGCxp5rSjDlSv2M0tRSzT5KD9JK49gdSTZYUYLuKBOWEaX4STxpfV5nKmgeY\r\nETDvHwWc/29Hik7VLhfi0Io72um8MaajcNbTh/XOHWsc9FOwIn2fgOkkmXuh\r\ntKiM7zV+Fi5qONHYFnOT+mDQXY1kx4b0JDFn7YNkxnOFXYANv59dJuKJxvAP\r\neDacGhv5THWJjm9qI3a4ByHSJKnJi9UU9DM=\r\n=adZi\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.53.0_1669702488622_0.7012172854562768"
      },
      "_hasShrinkwrap": false
    },
    "1.181.1": {
      "name": "@aws-cdk/assert",
      "version": "1.181.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.181.1",
        "@aws-cdk/cdk-build-tools": "1.181.1",
        "@aws-cdk/pkglint": "1.181.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.181.1",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.181.1",
        "@aws-cdk/core": "1.181.1",
        "@aws-cdk/cx-api": "1.181.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.181.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src676896527/src/js/aws-cdk-assert-1.181.1.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.181.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-dUaow3WftUsmo+m49CAFl6CUOj8Qcw7lbqRrfjkuLgcadoPWKawJFZbVEtm/55T6k3FLigjc3KBi8xIuiEzW+g==",
        "shasum": "9d745c64f55bf52705d2094d58f94163c82d92ff",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.181.1.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAumj6qkSTg7ze068rto0Un4Y4PFMP1a0aK39dDy62vIAiARjo5tkX1IbDFST6PH94vybPZvBynjoIXzUt7/6mMh1A=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjhbgmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoMIQ/+IEJgSp+foDP0kSaPNp4NA0BdOoKcd8AbptNgaWDb78Q73p5Y\r\nGdlGbQ1zLvDXzgWZ68weIHj1HttqNBYB2i6/iqJ3pWiMIXN7W3Eu2P+Hn3Kt\r\n2LwUJvVoLXitSIghuQ9k5qFkXLW66Q69ad4uYrMSXKyVlEk+6gXQb05XWmFd\r\n6o8gcfx0TyiHsc7kcnUw7MMUmwlN95wKOeV/M7Gse+z9qvgbwWILUel21H9i\r\nEBv34SiOP4VftaopA3YAShrdsqC9kPpYu8tIcvwL3z57knNEiTi3VWIyLHMp\r\nwqGdgLrhK8QUjIa4ZUcBTcoBB0nEFvTjDeGe5z+wkCODDxV4xrz62eh6tEfp\r\neI3UAmowPhKCwoXR6AmXH7wfrZgyJxb8caVW3fIqdV2UY1d3BwfrpZ9FBf3I\r\nZuMeSWaTWhWEVYkTpSR0OyN2ygGMi044webLBzg/ito2kLlTu6CLKI4eIBRT\r\nnHr20mNslSskpI65r2GGc+rIc2PMfTxBhIhEAZJJdMIc+2CIsNR96rLIq0FV\r\n54FDgYpVIHvYGCdWu4OUZq7wFy71zKlkrwtq5yyJOIB+YC+TfDV++huaciGl\r\nTSWITC50zYjCpt5SalrqFAWkIKozyUYgt1vYqxafVCa5XiFvCxM6FABqnycq\r\najmPEAR+wGORawI36cENPA+CoNEj5/xp6yo=\r\n=Kvm+\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.181.1_1669707814661_0.6562325856395133"
      },
      "_hasShrinkwrap": false
    },
    "2.54.0": {
      "name": "@aws-cdk/assert",
      "version": "2.54.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.54.0",
        "@aws-cdk/cdk-build-tools": "2.54.0",
        "@aws-cdk/pkglint": "2.54.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.54.0",
        "aws-cdk-migration": "2.54.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.54.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.54.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src697008511/src/js/aws-cdk-assert-2.54.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.54.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-X59idlIh6zzt9oa7GhFausxg6YolcyFAsp8mBMe0+voyOquaXY3+XAtAhoBr94NviSpa7C13guukC17/D9Z3lA==",
        "shasum": "ea8229033202f70ef77e87feaf612742f95c8074",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.54.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGMGLswcunslM5iaffajRXYcB9MrHnGUj/YQ/d16kFCIAiANuvQx5uAAL0bPh4sH/gzAvAnEDzq9v6eR5+fbtLY9UA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkOAYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqbGg/+M257yYAPDOZUdRqkyN/yjUeWxt7pcU4DD+uBnhgchWZyAL1B\r\nbxyBFoOA6mCdZud4Euwp9iGN7IH9zifkEo5VfAHiIYKnCaP81shZzOJwa0NC\r\nvqN0IiFdw160TBXUuRl1yGmRrolswAAOPYh+MaLrrNqpqPzMWn5k/lK+xLix\r\noWq5vCYNOvEQW/dX3z+UuCEp+OKXXJ5jbjYotvnBByGlILo+XvOfuzybgBTU\r\nYKbk8cwPcKD/P1CE3FBBxjA1fgEzt+WT0OGy8Vy7vMafLtCFrH0J6OP0ZrgV\r\nyTkhTCzoppRHuu5o0LnePhZuXRRmcPAODZ3lBrJbCQ+sdiNrBFTHpSq/UPZn\r\nQC3BYR8jVZhGzcyD+kFAqzgmsDxN3snblprsdtljmSVsxq5AuXZ0cCAYVrjm\r\nRge57FHjPswR/mDKHdl21BYCl/PBAxhbMxwA/12RuQsfqw7/MWuHxNqDzY9Z\r\n4L8UJIVTsFcsBuVbACpnc+YwtdKtiB1m55bKh6xsya7v/dijw3b/jcA0mysW\r\ni8T6oQ2O2bjL2DnmxSb88cv5ze74zEEnB4OX6zT7GnppT/Us2B/EbmZ0dmcr\r\nLTtvFSjCYrfaM8wC+YId762uNwLCWT5u6KFQQYsPY70u2jd0Jp4RAnEfPQm9\r\ncURYJ5tuaKajKLQvdGNoW5N3Uuu6gzSgYBM=\r\n=cS8P\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.54.0_1670438935878_0.2921273688928976"
      },
      "_hasShrinkwrap": false
    },
    "1.182.0": {
      "name": "@aws-cdk/assert",
      "version": "1.182.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.182.0",
        "@aws-cdk/cdk-build-tools": "1.182.0",
        "@aws-cdk/pkglint": "1.182.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.182.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.182.0",
        "@aws-cdk/core": "1.182.0",
        "@aws-cdk/cx-api": "1.182.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.182.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src694999569/src/js/aws-cdk-assert-1.182.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.182.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-X5PlinUjKiQn16aAZltzELL6jZt7T4bot8snxs+U+6IRPgakPx2G91Q47cFzU91GcOIF4STghq6lPUebB3RoAQ==",
        "shasum": "b07d78ed3b1c632d58a39855deae2197fb2b238c",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.182.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDoNgLTfthQdJeC/h9v4YaKmkYDhfPD1HrUUAIf0IpDYwIgVXJNfIn/aJHSpMa4KqHl7Qtbk5d13yZAk7fT6ER6nEU="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkPuJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmozFg/9GFay5zT7Kha1Ii4oDHG6gJ1jz8mjNhq8UNc8meh6O2gVOWFH\r\nr+eq9zenxpiU9JVPMnKKJNeCMgh5U5uCaM4pCqPuHyVwqUqKGPYGnYffDqvi\r\n/cyHRSXEM+mEZqKgznwK/0yu5+SOT1mIYXkjLq+DTqvzhP6aocG1dWUWxXS1\r\n7Pql0gFYAargRctBzYwi4iEfWmQxYFgxqpZKdK8z//pNbzrw4gP3IGDJEiAb\r\nzWAX1KG+nK2eNW7D1uDdGFboOuDTcMPnBibpe71YfKnJWDskdDtD3hKMrGKb\r\nXfE+a7hgL2sFkt2xTIBrRIMmc6Cpp0PMJYf/mSTerB3gn3XnPLfbOdai5+Ay\r\n/hv4b8OlbFgbn5G1XQALdsPtCTZiVYyTc+3RoYpTdHv2EZ6rhrlcItlgeFyO\r\np0pcqymFBEYJ2gW4ytJ1ETEzz7gBOCE4W1PLVQkj+WMwyvtxWwTWemZ4P3o/\r\nyaklSn9ctYa7jGFE6xZZPN8QbiUHuNMFIKxoOePh7CQhiJT1LG5azZ8uLP3Y\r\nAKiOZPzL7j44TE7qMKfuGruUrkpYKtB/kFUbLZ9nb9owLw6/niZnTVPMsSPh\r\nCtE/lqMr1H85Yuvm3K7QD2aNK5iY87iRHDzHbhb29XcC/tWhAKCGX5T4tWHF\r\nDK0rFdwzqfzrsBw+Nb/ggpr+kvzpEeiaHu8=\r\n=Qt2a\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.182.0_1670445961276_0.8928237035555326"
      },
      "_hasShrinkwrap": false
    },
    "2.55.0": {
      "name": "@aws-cdk/assert",
      "version": "2.55.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.55.0",
        "@aws-cdk/cdk-build-tools": "2.55.0",
        "@aws-cdk/pkglint": "2.55.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.55.0",
        "aws-cdk-migration": "2.55.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.55.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.55.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src376472723/src/js/aws-cdk-assert-2.55.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.55.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-JHrSKOl22iSSe3cFTwZSwG5lzg2ieuHniF9a3hC8NB51lGNd08BORv2AC2k87TWFfexy7Ib6NjT6nAeL9z4fTw==",
        "shasum": "559cbab4688889e4342fcb2dab8c97bc2d8f028a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.55.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFei+j5rPeNWcDhUPgqtY8YaDuJOrtzb5WwWEjkpH8fqAiAmroirOq0BwmVWzuAetHxHWGJ4ut3XK7Ho0XVTrHguWg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjmkNxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpN5w/+O97pKMoWOwiO8vID8SiNcxkCd4flMw2dNc63JyUWlR1pOolE\r\nz9atKDviON/VoJAxdHpziYe0wdPNvQAZ4mbTVFqeGSq7GkAj8LAEvVfEU/rX\r\n+Enq47PBgPF6DvIWvXPGyd1VpWzX6bkjHELXtGKd4aXw2G2aA4Z3ZHGrNbFZ\r\nVl8SDDxB1E9kTOC94TEpKsJu0t72OnbENMPeV4fXiXyQlIEmcMChSCwFISuF\r\n/2rNSLxonapUCG1dMFKQc85hIR+d2vmWbL50vCYLwskAmy4xeB/WR5jmLLfc\r\nR5Z43ak0Y1mAlANbYZ9Sk+H1GPDPkCs44O3CRquOam/PQwOPFBrIpXpAiHCp\r\nmhp/fo4SUjjOgkwt2wAhh/jk1F7BmzJlOp10mkULvrshHBbE/3e7sykkanui\r\nAKFTml/0lyH6iXigQzqyJ7+jRJgshiWwNtTTgVjG/7mXA30X5LdGxRMrctSS\r\nj0zaLcf/LTVLbP9Tj/DJAG+EMCg33hrQahUxQXm/n27X4pRtzVOWnDhBk68p\r\n6xDz8xpeeBbSMYd4zF9Ts9kLMqgIjVF9YcQD/yRV0+IeAQX7fplW5ufGkF53\r\nj2quUSslzK/LnRHt7rYTyIi2ru2f8Fh3EGj3jf6ELChLQybwoGAjBWs0z6Hs\r\nkFCDpzjN5rxBprnwNDSs9rYBaCf9VXvpOas=\r\n=g32Y\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.55.0_1671054193037_0.9435845992437337"
      },
      "_hasShrinkwrap": false
    },
    "1.183.0": {
      "name": "@aws-cdk/assert",
      "version": "1.183.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.183.0",
        "@aws-cdk/cdk-build-tools": "1.183.0",
        "@aws-cdk/pkglint": "1.183.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.183.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.183.0",
        "@aws-cdk/core": "1.183.0",
        "@aws-cdk/cx-api": "1.183.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.183.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src086795102/src/js/aws-cdk-assert-1.183.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.183.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-tLE+0iUsHLkGl4LUQjP8/qeuSsQgHyYJH2B02XTOUvmsBrZpLQCPfJAh/Ht+rTPstlq6gilC9i9OdSXZLC5rEA==",
        "shasum": "1e0120f0bd64d7bfa3c5128dfdb3ebf0a29aa312",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.183.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD01a6RjWv9mbn7PBF89Vd0LiBzOVdJcJ7Nq1LyQPj6igIgAlKBky7IQcLSMk7vpFeGZFWgpmgOnHIXVj5DeJ/Zc10="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjmmMTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrHoQ//abTIWBzrnKuwMb+ogpZPdcnz+quT6rHFiZGJsLZuhxTAtYaz\r\nh+irTzr6rGwecmP/z6EEB+ifxAmTMpWTfflhUvkPlbGfChSY/Rgg8VQxz8RB\r\n2KzQsD4JdIftwgo25rBgMNdXkxFY4k1jJPoV8H87Dx9UGChoxNNkoLiG/Zwe\r\njDZhmhvdcEa5XSLGA0432TZmqD+paYKUCgumz8C+jy72HZufw03U+tcSoNFt\r\ngB0TzQDAYZxu3R8SpUl/GX4b1lJy2IGma+MRQIfCi7BLrXJvu7dpFc7erbTO\r\ncUwQSM0RXMMeNPi4bZsrVSD8JvvNDEO1uxtZ3+fd4KElpo7cYpG2q9i4xpYZ\r\nQQmmIdld46WP3FkT0N2An6kPrfnAbMuEFJ8RleB4lIV1yu/EP5IHDh1K0I3o\r\nFndKpSnpvNcZdlzhbNKRMGaxx3DjFK1iUh+W8mk5rhLlcWTHyRr43DnhOKGD\r\nXZoHTy+fc3vCgu/0LL0fNkQwDM4Q0PzKzlESOvjTd36rIWTIPwutxkQTrUPR\r\nEKT+bXxG9YBpSEvU8VbV43r+rXAlt7Dpf3Nnl3GVzkiVa1X4pYOkPSnCh/Ie\r\nPay6QayYcgslCRCoIghLMmtjVEAiZO11EjjoguTB1Cnd/b67avmW1VvFCb57\r\njA7YuylhXsLwg0eMRukixms5qTR0igfpwYo=\r\n=rDbq\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.183.0_1671062291635_0.536499474093497"
      },
      "_hasShrinkwrap": false
    },
    "2.55.1": {
      "name": "@aws-cdk/assert",
      "version": "2.55.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.55.1",
        "@aws-cdk/cdk-build-tools": "2.55.1",
        "@aws-cdk/pkglint": "2.55.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.55.1",
        "aws-cdk-migration": "2.55.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.55.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.55.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src519392630/src/js/aws-cdk-assert-2.55.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.55.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-FwyTSCoXc+hmyKkcOAiOQKUd65m78uPFPl41YsOFmOdEBqvBQFYQ0SHoPnKZtyAlc94RGZT/CF7MXd2Y6Rt4nQ==",
        "shasum": "eaffc98ced741e8431c07d6894e2d1a130ec1dc4",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.55.1.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF/pclAyH2lFGVxn8I7uNuBcUTxg7lJ9Hthc83exqW/FAiEAik55bz9NhuhXYT+pMNk27gC+vUUN3HajPmI+t6PHDas="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjm+IYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp61Q//dEaHQqSycnK549EwalKV8RHK9x75++0rV2VZYYJiftMlL14X\r\nrRlcq6/12Ut1C4iKuSa7Q3gzV7+8sNphjr43PKBRDK03W3XM+AaoX4/NfEJJ\r\nD4eHx1+YE5xJFLnt3l9YCFmQjhlYoiaDkmTwHXqYT08R4obK81decD9htPWj\r\nGq2cOoskQ9EHuIjUyRmyYQxWtyKcQ69EMd97MZ5eiOuJ2gCkePfV1DGGlEf3\r\nuq1TEUYX+bDCLW21IrE53UV4zg1m8X9qyw2w3h5cU97MYLb9tdgYW0Ev0xEW\r\nv+uZ0VIoV1qsVeTEASNDwZAFPhBZeo6bz+1o9/V7la+yiezbyhRfyV7Pqbrf\r\nSNk55XDoJcf1VIe1qF9Y8D3+j0xOs3OiQoiLLDf/SogGe4juzMsqIlObYMqT\r\n+6l3f/Oa0/OEH5R3hzs438eHM0VxfSKvbtHikox/2EYQNTd6b8QtDAIfZodo\r\nNy/k76KHy/MH06lkmi7h2RYYGS+fbhaFM6+zsvwzSViKOanp90vk1rjoAD9l\r\n6H50VsJ2c/8vHc+alZw0QoeZGRySLjJwtFMnafrSRuL4Ve8qiPPJjQwbKQMz\r\nyrUcuul2sLELj3RsjmzZvF1rrA94QKlO+/CSqAz0L10fxhonBxU7cPMion4r\r\n8AP9vnOcPZYqP9WpppepBlfWhernb1kCq6k=\r\n=ZMDr\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.55.1_1671160344393_0.8978705257358888"
      },
      "_hasShrinkwrap": false
    },
    "2.56.0": {
      "name": "@aws-cdk/assert",
      "version": "2.56.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.56.0",
        "@aws-cdk/cdk-build-tools": "2.56.0",
        "@aws-cdk/pkglint": "2.56.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.56.0",
        "aws-cdk-migration": "2.56.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.56.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.56.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src678749505/src/js/aws-cdk-assert-2.56.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.56.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-GDAx3kNH26+ToOvRaiTex6rRnMOdXL6o02FKL9LtnvInijPC8A0Vn8ggQrZYjqWOlJA2q0EDOeLCnNd5GKGL5A==",
        "shasum": "1e5dd9830d447f2440da8984b0dfd8888f48c993",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.56.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDXVMH7pNhXxIc4xraKTukZQ6ImLYLcQ7HJZ9IjqN6T4QIgCUCq5EGd/ncUIA9FY1CWQXTQHyNRL816N7v9HrcATsU="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjo4EdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqtPQ/+PJdBG+88COFuJatmP2vRnge/ZSK2Njj/M2u4frpnPR+bfw11\r\nHe0FXar0aibitZzNYcdpZ/9kT9/sRXf8h0trM6oUlcof/No8oNRDeoeI5O55\r\n7FP2K9tiWv1bzWxUwsSTikZgU8AKyDa3uk2JsNg9XHEzch2EPMk6Iwp+w+Bp\r\nMbRgwDo1O7GxUgC02p/7mmJnh8Gr1cdYVULOLpwMi6r3NihCDg+J9v7DWVw3\r\naubyXdhZJR0/hUXHUJyjY6+7gMx+2b9ROWc77R0IYaStl+bVQgI4g6IO3ICE\r\n9GNN1xnHK7iMzlWqPp95mulHD2znaRhbJItIfoFD21mCPBwOhN26KpC97I4i\r\nUhojOOkX8LyfXH9cXAWgrv4lJi7h2oD19iHHCYxTbQrl/bIGcJUXBqiq3SST\r\nQQEs60WAzbs7Vpr8fDcOCQzllOi13BfpTVMV/NdDUqiDuE9XZAfEHDaehZf3\r\n6AJ3DrRPDQV19a7m2AsbX7X7nGDuamXLDI/E3GYXEgbZJrIGltsu2LdII/8T\r\neEudzp8McKHo1uaYDE3Lhzgf/qFOqomNd1OJsRRP5A69dVFIIUTAd6qUtMEm\r\n+vcYmyQ7XH1SrxsswZ3e25/OZJFKR7obQ/3VB74k992yIbUA62T3P83/nIsI\r\n+H5OUeQTwHXxfkYErN8Q74f+nNup69wkoVk=\r\n=72Jf\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.56.0_1671659805145_0.8317413266279838"
      },
      "_hasShrinkwrap": false
    },
    "1.184.0": {
      "name": "@aws-cdk/assert",
      "version": "1.184.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.184.0",
        "@aws-cdk/cdk-build-tools": "1.184.0",
        "@aws-cdk/pkglint": "1.184.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.184.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.184.0",
        "@aws-cdk/core": "1.184.0",
        "@aws-cdk/cx-api": "1.184.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.184.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src869203730/src/js/aws-cdk-assert-1.184.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.184.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-8GxI0uo6dNuuFywd7AfMkKA1X3dZM9E9ZiqeIACaw+kNItCcA2nlAQrrONELBV9kRBq5s7Hf3ZmZsestoEhqpQ==",
        "shasum": "cc984b54f27ccdbd06bf70131b1f21188856b81e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.184.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBDlOtKmHyfWkYzcC+4ZJ+qY2iZpyyAOaY4KS+xdDhZAAiByINoYJqrci382TzyVuRD0j2bKcE//AerOQjv6XvzZhw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjo6OsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp0DhAAjlArlT4AOXZ1+7YgaZTlxjFFgKDDlcuk9r31772NnxCxO460\r\nWTjN8qaka59xptNPG65kGV0eYYdLYO5zMMwYsK7icDH7wIY2QNTr+GdNshFO\r\nhvPMwv4rn8Z0uqkI5LjEZLqjeFCNMmywOpgej+IY1Ga3Q2eHfGkyK7aNGTxc\r\ngLvFd6+X7YuW5SrG2iVLSYF1IsswrcDir8ZurLqvm5X/eEYUC6dCYQe2okV+\r\nOQUxAlk5Upm8R/ae2G/+3nH5Cbo3GpB2Zs41hj7ZUmgfJFv60EXDMBvfQFEy\r\ndPC1OawJ116tEpYO/qIjDcCkj19QrRlwdJh/fE7xdrkH+9j1lPMCInhAZhwM\r\nn9w4B8uPPVzXnKS+vjCK/FrLRmqk/2EmsiFQuVMF+e+u1rVsMtgetjruuuF8\r\n5pZ1NJ94D5Pz0DEcAu3baNu30b4DTjrStoWeb8BhIdfJuB86GV/jZFjg07ut\r\nliOBmOYJ8SeNln4Jza1R7GIKC28/kiF7jtrk//TbCGUNMjyI+6zOEr5P9C43\r\nWVdkACo7V5zjr+yS3V2xBLiViewzwMoUW2ojy17zpZKdNUmyMkkxHnaHYDHu\r\ny0EumOoA/eSHdkuWQ9ZPezmD+2mSgi7A0SCjKahzDy1RTznQaGLhgVMnxF5k\r\nH0FcxfwYWMEYHrtoYTp/a5WKBK5OhkieC/Y=\r\n=IoNY\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.184.0_1671668652562_0.3513056023085901"
      },
      "_hasShrinkwrap": false
    },
    "2.56.1": {
      "name": "@aws-cdk/assert",
      "version": "2.56.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.56.1",
        "@aws-cdk/cdk-build-tools": "2.56.1",
        "@aws-cdk/pkglint": "2.56.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.56.1",
        "aws-cdk-migration": "2.56.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.56.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.56.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src726243845/src/js/aws-cdk-assert-2.56.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.56.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-yLNslRQGpOBQDwf0n6B5WxruI9SYjedHcNMSNIbHQWtfCxAfYvVxntZhEHtOTbAvL2aGV6Jysge3ii4vnbdOMQ==",
        "shasum": "e3e38b639d851d8208de01d0f989a9c26a7c05e3",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.56.1.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG/JZzLzgP4F6OdGEI8ma5audYJSbrztNzkFsIE942HQAiEA5EQkz3cunqnAmfuhkLzCSdJ1x52Z6F0GMBgHUxHFF6g="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjpg87ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrzuQ//eYYwDOhJWyeKNITPSdTL0XxQVGe/ywS39NFGukKWTjf1/CAJ\r\n6+jrIlXRq+kBPrKIBDYaiKK790iByBQ7iFAZ/rO/n4AcIAB8JPx8iryEQwUp\r\nkZw9ZxgWVuhjWgCmWYwWCCg6mpTX24jtEy58H/Pcma9rXgxXsIS2dRlm279q\r\nO1aZvpMHjiXyQSYGNoxwi6gw6MeP7uXNW/DPsBUOelVVoCaKdv6oz47hbVuE\r\nDXOLeGSUmGXENIpsZ/09U+5IRPtmQ8Nmiuv2Yday9zjseCjjUSbxFmlzA9sX\r\nnMpC+Lcp0TP7gK4fUldmKm2RwalK2NESAXxS3mtHZD7nZFOfO4Lu1IHxklNu\r\noeycuOTyvUDq/Q2b966IzvT1Z4K6dQv9SmJH1CkzxnUUaxPkxVIRktnSG9G2\r\nQdBKoGZhpXFVD6pk096Ap33Oqsrubaqdx/xLLCnN2vk6s5gbbCQDHfjKVpXf\r\nHxpJZMceRkLtqgIDWQkUXhVDd55etqV1Q85Qki/2c3IF29ASZ93qn0a9BF5v\r\nGnA7wnYI8M9A5iKP8bdBEp6WfcVtkxc9l5INDD1RTfZZ8Z047xmdi/Q9VrqE\r\n7MG1+JHFf3mGLJuomkqwrOj4iTyP5Hmcg+FyNQgHiA8csLHnmMmhw23q0tst\r\nDbit59awJDPl9gzhFjkCkZAhKc2GeamjtGQ=\r\n=aNjn\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.56.1_1671827259417_0.14996193013904846"
      },
      "_hasShrinkwrap": false
    },
    "1.184.1": {
      "name": "@aws-cdk/assert",
      "version": "1.184.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.184.1",
        "@aws-cdk/cdk-build-tools": "1.184.1",
        "@aws-cdk/pkglint": "1.184.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.184.1",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.184.1",
        "@aws-cdk/core": "1.184.1",
        "@aws-cdk/cx-api": "1.184.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.184.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src786532010/src/js/aws-cdk-assert-1.184.1.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.184.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-fX/YPmndjCMRr3z7av+2mGy+df5VlTXoZptCNMhz1amlPk0XwWZPYvLUkmfillyeMVmimq03jN+AKjAfEpsDyQ==",
        "shasum": "ec46aa1125c574529272f772244cbaa50cba4107",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.184.1.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCi2q6OeSAHGYxy6zOFjrpxyZ/4yROGHKzc7p6p+SlqvAIgYkeM7pxPAMotzJ4vJDDjOJKP/pGKSxraXOw7kf2DvBM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjpjjjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrCnw//e+oxzSZvSI6basyCG6RCXuF1yWy/9C11cM60oiqIHLbeQvCF\r\nOj4BQfWHuRWLhZv7jqTOIeO2mEDiyJzdBqdnBGu/pFLgUSCAVXxSJs0MR/2c\r\n9FvILfXUPKht4IaPhXdGywBmD1PzebC0n38L+Gq5efr2q03hrxGhYU71pORB\r\nQs9ovbJ6fwl+RDf7CUzWWvrTklD+fnannR5MMsgMJybgGYDKEoFui4IjP6AO\r\nP4kCxvk9vbqyPLdyQIJypJsrYw4Dgfet1vgisQQi9rzhUACCMcnhh9feeMHg\r\nRXUD7d1he6FjokZlLYC7zkj/S+e6zCgGG+LkRxRzmz2SbkogVr1Drx77lTb4\r\n8sLwyhIVAgigbFCQsKMFcCjuin4z5EJv5ceRdgeOJ7rnTJjJWYl9lpgmEUoF\r\nU66/h2qevjFfxE3AuQ1LSTsohsbGfLscJ6V4PGBNU8b2z2JI19qB5YGWHWWG\r\n3iU9I2z1Noq1OzC6HF7tjBfK263gMRLd0wPG3CjoLOKOz6aY6F9rKMmjqhYp\r\nJEOhPHdKAAlhpAyJLBRtXGC4MWVw6kOlt1j4dXSFpB44sIl4DcJTF4NJNlpT\r\naXLI+jyemVW/v/txXk9ft/0a70ytGjvZCObxYGPSo3tdP0V62mw7ix85Au7r\r\nufM09q9e1Dlc8aeM8kSbdUQ1BZ3ttvFwj9E=\r\n=87K9\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.184.1_1671837923804_0.9310965968363152"
      },
      "_hasShrinkwrap": false
    },
    "2.57.0": {
      "name": "@aws-cdk/assert",
      "version": "2.57.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.57.0",
        "@aws-cdk/cdk-build-tools": "2.57.0",
        "@aws-cdk/pkglint": "2.57.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.57.0",
        "aws-cdk-migration": "2.57.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.57.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.57.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src750231621/src/js/aws-cdk-assert-2.57.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.57.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-xbQZ/XOVDZUGA3hS6A6YmqBY/+09oCEpbrxlIr0XLHYpUVG5HiSCkuDGojUO7g8Pk/DPpUt1Mwq2URQTaizVsg==",
        "shasum": "e47bafffa06342880ee0ec0c9723a162e41ee956",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.57.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDQo0CjmR7sq15FcgBWgrv1ctS0mSWH+iIHV7mdnJKL6QIgXn/tEMTTLrBUjYExLgV+8a/kh8X+LCg4eOyLemy7Tu0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjq1k5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq8Tg//WpnfkVj8KSGduUCJxNBjhmmTy0xmaWilNZg5G2ySjMy6hGuV\r\nR+XSIAhOy2oFe9e1BQa6OK4LtoOc3IxV7qtN6XFsSPsZoXhKbm1KVWgwPaBt\r\nhVds7jTcqhni0uhxpEXhOWY6VZxW5f2OgTdQPBfGO/upZOtw1vcSoKECyzrx\r\nkJvvBGRt9xtI0++5BnDpAtRsE1HxCbAVqOoPegtiO6H5lIBi1S1389m/cTAD\r\n+cSK+7U/eKuOZ51n0TCE0SR5zfO1X+vgrqI89pPohI3PyQhZe2kIHL7SgEJu\r\nsviIIDHAAo3FS0zs7LddxWGtXnkgBMyY81116klj//Nnom2esi6nWF46R7Hr\r\nyIBKXx5v5hQFf+zkHJP9uzuD+XWLyHdBFV0fS99MbeOLChNsfDfciEZnHJmp\r\n4FedVCVrjspdacdwDdvL2U0inSjVsy7rajSiz0KxrYpzK7EkTt3Xr4KYvmHg\r\n+JDN7may7fDE9uWluhYFTw1mv7euDWbAqG6Xo3sYLjVOuU+uRlNSJLBH/GRg\r\ngF6HbfIwBYrSlRPe/X6amlGegTozMsvWvjnfvYzJG5O+pqguy0ehM6/kr+av\r\n7x3P55839dYNPbNGKb7ilFPK8+yRk3Zbunupouk8jloid7dw1fShXFYpnvWQ\r\n3LjBjPtL0q8s81GeU0Lg+145SGypOEKA2ZI=\r\n=eFsN\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.57.0_1672173881445_0.7707368477811396"
      },
      "_hasShrinkwrap": false
    },
    "1.185.0": {
      "name": "@aws-cdk/assert",
      "version": "1.185.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.185.0",
        "@aws-cdk/cdk-build-tools": "1.185.0",
        "@aws-cdk/pkglint": "1.185.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.185.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.185.0",
        "@aws-cdk/core": "1.185.0",
        "@aws-cdk/cx-api": "1.185.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.185.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src946922692/src/js/aws-cdk-assert-1.185.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.185.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-cP1AdSz0XVMH/phh28Tnkya5oNNR1vVKpcOSxoflrujym1nk1boyXY/dQ9tdfYA9FG1vL3cwWfpyu3HTeX++Zw==",
        "shasum": "808e9108fa866d52f7d05c68f164191a17842506",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.185.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDz+4xo73wfY79EIISeZwjyuBc7vJsI8AateLlN+foa5gIhAMbsQkSYfgeb6os41PhSs5BwdA57eFEegaLGpixtg1+K"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjrBCSACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqpYQ/6A1gcciFJE99HW3JTXlMcN7QV+h7i+nJMJjLQ3atilDjW1f+S\r\nV+6FraTWeBXZHgrR9biOLa6VUfd3t5swgwlhBTMBIp0HM1wEENz+WcacAa8h\r\nn3N7X0Bl91MCbXij9IxBd3euJTIVjJFioB19Af6X0XtH6lvAveu4YhhR6u1C\r\nVK+QKx8T++F+ZUFZUZvBypb2TRTy45FyGmnPNTKcIOme6aFQozXyrkmVGg1i\r\nMZGf0NhtGkWYJzcZZOKUfFLV7mlcEK4K2ZNcaQvocPmQNffO+j0TPNzL8TGv\r\nvO3QtVO+e9HlaPZsUHYPkly/G+uFIQ+hWE2mjFUn0uTfuC1EvFBjbgW1CahU\r\ndbCgDc8Od96NfpzcL7Vz/mHRJaEEf4mD/d8RLHnSiHniHcRtwtTMjP4Zhykq\r\nFsyqbTdglA44ox/sHY/hnGj6YbB8R8+okbcoCJJ1nUtGV3q5ykc+nnDY9BFx\r\nvFZl+J/Ig9nOFOBasFszDDQeaYqK6Zh9raLs4+iz/N4KlwLfYdCQ/dEhAxPC\r\nsBm0E465G0tovEEgWKecrR8HwUw77C0bx33sLAUJJXJd8Zq8mn+UOFAGZLfz\r\nByPsd8gcsXL7vWtYYZTu+KNOYg1Tbj6Phi2IrG1ClUH+Q6OxtWSVK/Drz1QB\r\nLcZBmfgSkYOgxFKI+pcCrukzdgRq5BG9PiA=\r\n=Oq2B\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.185.0_1672220818435_0.9255136493982841"
      },
      "_hasShrinkwrap": false
    },
    "1.186.0": {
      "name": "@aws-cdk/assert",
      "version": "1.186.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.186.0",
        "@aws-cdk/cdk-build-tools": "1.186.0",
        "@aws-cdk/pkglint": "1.186.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.186.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.186.0",
        "@aws-cdk/core": "1.186.0",
        "@aws-cdk/cx-api": "1.186.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.186.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src195423245/src/js/aws-cdk-assert-1.186.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.186.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-Ndk+EPjF3htXIbpmYuErJSJPfE6x/hgU0RaW/m1QezPNjcNdaYk4d5w0NbWYgqFTCG3+Hef9yh0hTtZXmoHf1A==",
        "shasum": "edf6c62ffb774fdc3ff632805e20d5ee7f4062fd",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.186.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDLna17C+eEHQGD3ONDju342rzBaJyd+a/9bVwqbNp+qwIgUu6Ztrx7offOYs8oAQswfLgjDpejHFLT+2I6FIcHgx8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjrOxwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoUaQ/+NS/atfHaQg8wE2JLanabQe2H54WfEIDaRd21YnX2fhp8lytj\r\nF/HNB64RL3TBCoE6LchaAHarwFTyLq6Nnnq8+qw4nA9z4yUQ3tno5LU/UxF/\r\nK+VvhYNASgRmh0Gfo/xFlAXhPa2O2q/agz27QjCpHnPoQGMs0sUrJL6wxjkY\r\nCrFe5AhlhdxfiEAplnEHZG8PNU0+NMbB+54/cfIEhUO8uirCoclQ0k55uMUQ\r\n+XfxjSMHKCva6psT+R5OKsMD9tQKII0JPlXKMAPZ6DPtWkPeykkkoKXbNFO5\r\nYd23YROTpRFl+UunP2Og9qITj2VgLNt5ilnJgILwUEMEMzuN/kRhEtzn9rJC\r\nJN/hTGJ/6ABdz/oUs7teHnGNEjKafQ4Wt6ENxRiuWtV6qd+6AM8rmHxtJ7rd\r\nhC2AgXQq2ccf/qns0AJp6KXHIJEtQK0DebtHOAlLpmyoMOq0ohyHIKfGX1IL\r\n+tf92Lo8qCMam/bjw4Y77qx29aQYFhfJJlqImoQrwWrhGUmI+kd8oXQQunju\r\nTWBDzkfN7nd9o0jNjjqE2ha2VUSgU0ShMxH3+CVmTfJqi3U3z002Qx+A9wei\r\nVPt3+bpPVEfoYJl/1oJig1UKhoBBVOKzn5WSkWysPnZxzz+uAQ6CyYdTuVI4\r\nZHk96V+DjtJalY1LKU4QAmWx/FjqD3WY4Os=\r\n=KbTW\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.186.0_1672277104565_0.5587430092477983"
      },
      "_hasShrinkwrap": false
    },
    "2.58.0": {
      "name": "@aws-cdk/assert",
      "version": "2.58.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.58.0",
        "@aws-cdk/cdk-build-tools": "2.58.0",
        "@aws-cdk/pkglint": "2.58.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.58.0",
        "aws-cdk-migration": "2.58.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.58.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.58.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src617473316/src/js/aws-cdk-assert-2.58.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.58.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-KgcTJzOjIn8IVit9VX18miM0UEORHe6i2tY97TzuCLuHpXl5DnTrFRMpP5gvQibnqBjjx9PlUBervQUfTU9yag==",
        "shasum": "5610dd4c7bc9a908341afc9ac1182dd6278481e4",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.58.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQClq+oWEe6ZAVKCPid2FZfAvT8PFu8Z5bzxTJhisV4n8QIgKs4til9T2+XP4x0mMFBT2sAKS/e4rjNcThw1o4qPwKM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjrV0UACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoe4Q/+MF/l1KeYV4JYqy8X9vs5CecaSSr8pVJWrJIFKRrihCo7sM/a\r\npJhigemESsM+Up9UpoGaRlEk72uTpbgm2c5KAlP0ihO5ibpcpLeTv/gl6ehL\r\ns31/LBbMK3KzMKzP7wMFDN0uSzFqHIn8KQlfUxerQLjyBAwc3v20GJnotPly\r\nh0Vi75NRyxpmErXQepfeHtAiy+aiuuI1kzEGzROZmhnC+NdWuQwtCzp3iBUF\r\nKGRvdqznGKLzBqOPlQGeFtWR011J+acJGfoCbMRtbEf/5omVj1WDp6tR/GVM\r\nfse0fxr7W/TPPb6sV+s0rBKINVdCpjvTXJLoGyBzx9zgbvt4QXBxxj90syQW\r\n83zErkaIxE7g3i/8WWuxg8QT+z33/JrMEnNGugJ+CfSQgUOMJl+h4LoGwytj\r\ndSG+aWOkfjdpzRpAy1SMza0x6X8eRNgx9FxJu2TrKsRtixToWTcqYnUscZ3H\r\n2+7kOPvxcx61SuijwfugVWHdeCwcpvN2AMA3pWlrP6nyktTVVwRzVOKFEMko\r\n6Dj8PbPghwZ0dBGm8VL1ArcNvG9SPlSf2NDBTyx2ymxukjtQSb6gCWJSBOB4\r\ndbqig1t9s0wHtIxiDNNEaaiFWR8xbK0Nplm/qhYdX2aHeVMLYn1BqtBNIuv6\r\n1poa6dVhxzsnJdU1986UqSXg2bRoEmsr98E=\r\n=ZsfN\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.58.0_1672305940384_0.4235401062303581"
      },
      "_hasShrinkwrap": false
    },
    "2.58.1": {
      "name": "@aws-cdk/assert",
      "version": "2.58.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.58.1",
        "@aws-cdk/cdk-build-tools": "2.58.1",
        "@aws-cdk/pkglint": "2.58.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.58.1",
        "aws-cdk-migration": "2.58.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.58.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.58.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src163600103/src/js/aws-cdk-assert-2.58.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.58.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-oMUGtn9hrGEiE6tpqEty71wIpRhLS+7pdxY1L7ZsdUTxNnh+IReltVhncy5eOI9gqBTekZeGqPDep5qSl47Ehw==",
        "shasum": "5292c7eb8967e2401425959401a837463ad23652",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.58.1.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICKcPpGdGgZql51L7hnNP33S5sEuOtC23Iasz5BAjwNMAiEA4dCn3XBNc5+/ShlvZlD/RkMuj2ZVfVYcth7lEM5O9k4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjru8rACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp/ahAAh/5H1A5D+OPVnIOh4GqbE5Y9/JYGUQVkjXFl8O7rbar2QAEB\r\nfD1cqaxootQdKUe7GtVUPAlwYDHW8XiadLe6/e77xbmlLnGU1Shdnz2UXSp6\r\nCC8zPWbJo8cKFMDCvkhdZFyjPxVO8XvGAxDIZ9hdm+gzGukCtsstlujDyKCs\r\npo5RWAD2fi1dF9uSf/pBdWdBrsNwkQ5xn3WmR/VT/h4eOO9ubBhQmSX9sF0e\r\ngf9pRinwYMUHUysEiXLTrmnFm9CkuOv3Cuwqt3qXJxwX1MaOilFO/j+laHms\r\nH9B5EzsbsSoB41ECXxhSiFEXu6cC74N+wN8hf1TbYPsZpH/R+nnl9gIWFrMs\r\nqz43ZCGYd+xEefGQ6KazbqeP2If/CApSVLDHniXONGj1VPhnQc244u729unK\r\nGzaq3xaq2WdAdTfEXmRSuZQqYKt5LPN//i412NCwZwAhRnToJ8tt4ldmq8ju\r\ncfYUnZ/IvoP4OvcAXvVSGtzbdilWpMDoD+Nh7fMJEDecx7veLCDXSUX5C6pa\r\nGsBJe3sK4zM2x6/YBNPc0ytYP+zRk5ktRGYehedzmSemBN5JfJJfzQsCb1e4\r\nw9ratqlmZKARHWhtEoIFZeL42RTi1yP2IoxAhVM6stWzgtC72VsEHU79oqJ0\r\nIYWPzzCL9RDyIfVmACUFVp49C2VDLTI7RM4=\r\n=G0Bd\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.58.1_1672408875336_0.7547728924777675"
      },
      "_hasShrinkwrap": false
    },
    "1.186.1": {
      "name": "@aws-cdk/assert",
      "version": "1.186.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.186.1",
        "@aws-cdk/cdk-build-tools": "1.186.1",
        "@aws-cdk/pkglint": "1.186.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.186.1",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.186.1",
        "@aws-cdk/core": "1.186.1",
        "@aws-cdk/cx-api": "1.186.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.186.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src340830462/src/js/aws-cdk-assert-1.186.1.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.186.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-4C23kod79BZ1zlKc+CwrUegy4amszlhFObkoB6dSBTBtCBh+57y40228WYVsmRkQbLVO/14hOHIz+ZzabJdOWw==",
        "shasum": "11bb396464c110b684495a9210b6fc3d8d257bb2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.186.1.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC/kQEj3CV0Rhlg8GzroYn4bePDi5thIlyAUdN1tGsVHAiA1+UTdM7jY7OdaaJ1OuzWa6WozdNSAepvT8pCHHuTyvA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjr0MFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmramA/9EnZFyv0om/r6PqFWizwOpBx8wkFI+hdX8rl0556jUNaGBps+\r\neLtBn2j6uBsxARKEY0lm62UEqd4wH2Wp7ECkfbITo6xVoPHcrGEwubxy8gFw\r\nNYAld6xvfvy8s+cYVWBRWh7KkuNaiwGR3wQceAHIWxBTiVGEdO0G02WsL3Mm\r\nZGpyH5QA/Qcv6Uzx2FBb4ovDLm3ag/3FkulgWLWULisYUdP4IwulksfAKKLx\r\nxAEgMSH4HoOAfufmb1wPW8WjMWQ1RzO54AFrbAbpq0vtvZrCTgjo4WjKeyl/\r\ns62MidS8ShXW7qdW7qoAE6ySGPrsqEjStcsq+E/6xSPds5vUWhlsBWsed0iL\r\nVLqUXBCTp9D5fkci0GDq7gRTisW6tcf0x8iq/PBgdgXoLpA2pLz4xcE3XoPN\r\np8TCWwsnQhoQwTZptlKp1jH1lxMXVCObFbTeaz4Ros76SIQQReQ1gHnI/kLX\r\nc9yp2zD7JVN5MP0uNd9xjdkP4j99w2979HiAoRWYcVin7u2hh5MWGcJJftx3\r\nNqrFXSs3f7i6VvYg9D8/ksg6YMLmDHKijjNOuQ6pd0QMNqTgMHodx2rGmRrv\r\nwOWal9Amvvx7nJbiMmGco+Zazgo2ibiF1w3LwTaDSwCVEgCbvuhzBBOg9rrr\r\nu4Mo33Ve2342FmEuAWXgxccXRtHX/QvGbHo=\r\n=7hh+\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.186.1_1672430340855_0.41831722379194036"
      },
      "_hasShrinkwrap": false
    },
    "2.59.0": {
      "name": "@aws-cdk/assert",
      "version": "2.59.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.59.0",
        "@aws-cdk/cdk-build-tools": "2.59.0",
        "@aws-cdk/pkglint": "2.59.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.59.0",
        "aws-cdk-migration": "2.59.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.59.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.59.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src698316379/src/js/aws-cdk-assert-2.59.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.59.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-yHEZ9moRq1auIjYNlmbe+KDjl2oCahspq/ve0L/HbdIs+Khh7SUmolVpGBxCSIjdHKFLD3BZV7m+MUt6Loptxw==",
        "shasum": "b46a8f737f67df6170c8c35fca9cec3166a3d026",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.59.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC8/DzlUUm/L7Yt/rDEzTg8PhFks4bJrr3PaBSNOO7GmQIhAKxVCGyW2/lTS4fwoZSkjK3o9Rlcn+aODS9VzKAws8Xt"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjtF8zACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr9kRAAmRpIFRRFaXgA+zHT60nYV3sKpO4qNxDtZ+iw1//DG4GJp6ih\r\n/wyGWCW1Dyxo2ewZ5Zg+pQvxDK6CzoN+LXowMtIqjqxxQvYAhGXWV/8WgMHn\r\nUfbjJilpqOpOruFTEEcdwzc/YlA8VOIu+6Z2N+rfLCUuL6Duiul+BOAiDcut\r\n1jHfCuFGKS5SFUUMWdyYjAEthAwAYatPPbPTQaDqIqPfi2sENuorRMxJj0dO\r\n5rZJ4QWFtdrcxW9d70Dx1lnskS/NRO+g00CyVy8kGDbN0lEbyftjJt6ToMXU\r\n4WP3pGhQYtiHB6dAfo7LFEWwZ5BpCiEkQUtbxhxczhOGSK+5g00mw7pJILv7\r\n/FmoXLCZPBXq74q1/ckW4eAo/xy9hKhuLhw7Pgtq64XAw2dJzexufsRxhoeO\r\nfn2bqlSmJKCmZeVE6a6paxt9zESuRcdsKu1fQT+kUFLsO6F8c3GS1RGFwxQa\r\nwVFweHFbk56+OYPY84z8aJvkzcGyF3U9H5n+zwyTzntIHbe7sQdeo/5vX69K\r\n0oKMIC83mcmDmbc2bTPcGRMkaJbQ9W5+P+iizYJqM7V//nzI25QTKlhodwy9\r\nXuZdI//UOT1RnMb/6cmckpbXtPa0aQ0BxUBN/S2aaz2vgvm3nG9kk271hlhJ\r\nNXeDTqy8KLmJx3BNJrnNHs6wpNHN05BxDNY=\r\n=HSfJ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.59.0_1672765234827_0.26393601328726013"
      },
      "_hasShrinkwrap": false
    },
    "1.187.0": {
      "name": "@aws-cdk/assert",
      "version": "1.187.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.187.0",
        "@aws-cdk/cdk-build-tools": "1.187.0",
        "@aws-cdk/pkglint": "1.187.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.187.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.187.0",
        "@aws-cdk/core": "1.187.0",
        "@aws-cdk/cx-api": "1.187.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.187.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src437342239/src/js/aws-cdk-assert-1.187.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.187.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-mtOFhP82NnNZBOKRTQSSFsOCOZ+wdUPiJrZnLAHY37qV7bh9GlpDgJxlRV4Rp4diyM3OiqN8KgZnqqMm8XS5Zw==",
        "shasum": "bfe61f3e7a55c2cdb970a280809c5d4a68fd4127",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.187.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC7TKgpHcHD6H2nZsKY7I0CvfD2RjyIChTabLQTfsp7EAIgWtlB4tHtBTEOYJQY/4ugHF1UcoZDnmElaBYDIZQwaFM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjtIcPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoAsw/+NJHYkVJbmUyPLuTahGtL8n85RddilmxWMO5LyWsZYETOiUIw\r\np+TpOjyPs7f2Pqo1am3ymbWRDUw0paGLO1SXO1QwAlxC2n1T0JkjOrLd9kv/\r\n0koOnNNleM32n36zbupGxgSIrG4FNjGYKrLWHYJVaFT6l2ncYhGm06udBws1\r\naPOJwYWSqQsri9286DDzYkESw/hb4iPGlL7ZJiVRrteHF4Vbeps6pYbgNb21\r\n8K5P7ve0pwuefwd5JRyPRKkQgToG6oYcy99c9I0HmNXNqaJoprQF0tPbEKhu\r\n4mCDW4aLQVDGLm9GfiEjPkd9k1QXJ86+YIb1uysxZTtswegORoTEU+zGI9PE\r\n47LhACdPaDNvT5kDbVoRcpIG415ip6KLcaiAxSK1WwbBM4H/28gY516Aac9l\r\nHUds4Dvq84aW5G5jn3J6a3UgYC2ZGzRRwUzZ1OYrTcVuirLLL2UOyYcVUhxn\r\n6fATtRaxlE4R7lUcRFnW1PmA5lD4C0C3FtWBOqAoXireE1LA2xhr55YDyVIM\r\ncrRA/kGJh9jVi9u+lZItdrlH7H6z2q7DWcjcFLUGb8m+GXeDJymB5sRNp8Rp\r\nzsMHctgpFzbrbe/6vGnqa/1W4yI6QEzMnsWAOVjKHtYYQPrwvS88C2vw9prb\r\niJ3p4yotLHXwl80BNMTQEeO9FOkX9v6ddfI=\r\n=AB1c\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.187.0_1672775439146_0.25379881904455126"
      },
      "_hasShrinkwrap": false
    },
    "1.188.0": {
      "name": "@aws-cdk/assert",
      "version": "1.188.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.188.0",
        "@aws-cdk/cdk-build-tools": "1.188.0",
        "@aws-cdk/pkglint": "1.188.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.188.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.188.0",
        "@aws-cdk/core": "1.188.0",
        "@aws-cdk/cx-api": "1.188.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.188.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src179265298/src/js/aws-cdk-assert-1.188.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.188.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-YhYz+kvVl45F8ErMi5+TlPBe4ASa+GVEHcQtJJQ0YzhqrkQqBfeOwtJ4ar+wxvkXxSaWN/2yhNVZbhu9MwMPEg==",
        "shasum": "f8a1d46d597fe303b6119ecbb889867e88b8b481",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.188.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC0srxRtBVHoPiPkywpaeDHqigXnilGILX/j0g4WZ5PDAIgPDZU5JIul5Bi3BGrMJk4vH3Kr6LC2TYlZywTXaDsT30="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvvy6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoALBAAkSyW10xMNVNYtc2zQnClsqyQ2HWEvw7k0b7+YRRv5pBAjblf\r\nEcY2VGcRPxZ2nTPrK6bNYEE0UYxhXkji2RczCQ8D0+/EEb/U3dlQ98Qi8fxN\r\n1tG3v5sVJViG/agkd0RQFvOzdtdWU84pc/eHXSucK4xrof7kv+pyTxaAdQXj\r\nGcDR/oW9+wYBHS2tl/lVtfHlGpScJSJshHYbUcqKE+k5kXPOOe1FdEm9ae1f\r\ncIzyyIF187X7vGZNVB8N0yr9UNpoRUYiLjzeTN2F7o/LTDuYccFYJwU5R4LA\r\nTLy0UknR23wxpqhoK7AgcWLpuiHgRh6DTLvdsdk9H43oU+wAqF+kthiN2QeV\r\nMtARgd/iTVyTlTz1NwcE0lINP0/GQcnLqqT7XIzBHhWqINLTtXdMP6EpwtZ4\r\n38QhlRbDwTamVb/M72/431borQYGOutzU6OKT6gF6rfljzxPkxxLjjMY+9q0\r\nnwFznhDyeGMRzz+gsWee3XnAmaI44CvjgIVRrE8NVrMdYBfk6O08XTdIgreY\r\nqL23peyKtk7ajKsX5nBsYDWlsmSUO7x28bPMoYOB1Lw+/FG5VzjX5A70MpUB\r\nqO/xZ2i2N6CIH7WKy2Ck2NEheFT98Dh19WV1uCQQoUq5edFN+EVGNPumvYGk\r\nkJSK8vGRqBpb5pNyqMGSuWViAk+o1LAiPn4=\r\n=LZql\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.188.0_1673460921891_0.736292167560797"
      },
      "_hasShrinkwrap": false
    },
    "2.60.0": {
      "name": "@aws-cdk/assert",
      "version": "2.60.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.60.0",
        "@aws-cdk/cdk-build-tools": "2.60.0",
        "@aws-cdk/pkglint": "2.60.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.60.0",
        "aws-cdk-migration": "2.60.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.60.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.60.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src888575221/src/js/aws-cdk-assert-2.60.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.60.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-FDGXX/VOPxWIF9V7VLQFJk74LbHXu6gSTfBS04iHBZw0UmDy7he+oA6VRht6HpkucuxetXdwVp1lxNkTWs9aLA==",
        "shasum": "16805f75e44c07906f7a32ce36061be881152ddc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.60.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDhnbGAyk5YN2+gls3gSWiLE151a9vuf/rpdAsOMEnlTwIgM3bcGkmB+huLoZ7F98bnyjR7einAisH+RsdunaW9l5c="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjv3kPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpgRg/7BkODQjCS0LQ8aDtURLu9wtoVkXRMT9vJACVMGOkNnM5m1rIj\r\ngCmaqNEj1p5SqcULaAWipmwkobUH2hOSzchbyROih3dQQ8aSe6im81OEfnF9\r\nFgmksc5JcZwZl9PU0s8OFV2FviZOuuBYamUqv7A3bgsUX/bgonmd29MHO4zm\r\n4DiWRXisu/EkznDm8cYj7VN83Lkqu5OyO/0Ui5kNjRNAcYIV4eS3Ns2xh/C7\r\nWJFmf9/UQVNc4zbZFakaJQpDHt+pJVpsmL6JBy48/ocd72skchmazfI55YKt\r\ngGr3/DL6EXJvERpFiBsh/ji4bYkzt5Xg/IjbmtYO19eWwLbhgRfBJDwaYH89\r\nCZCmqCeNHyovtb5TRptZVu9tJ2rObZu5kvNXXN5xm27La2bqR7P16SbNWGaq\r\nXNbUtcpdVwKGD6gY7hqPDASCmYFhz7EinZwEeksPDDcczq3z7Y5Jf2C1Qv6L\r\n5fdEoyazDzPL9TRjU/BbxtCR2j3jrigFF76brFopDwi1JJhat49ewZVCvUpC\r\nBlM9btG7BMyMozlCxF6Z0fLUU+T4Ra38acwZyyWcbx7O22T7L7dHX0baMEyI\r\n8wbX3eXttqN3BqlYn88kdmhxVxbsJq2ZmiA9oDc+E3zsKluh2eoEMIQwKaVg\r\n1QheCQVW7H/AV4biz1BiRyhxVjhpl4q0i7k=\r\n=FczI\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.60.0_1673492751644_0.4293498773836246"
      },
      "_hasShrinkwrap": false
    },
    "1.189.0": {
      "name": "@aws-cdk/assert",
      "version": "1.189.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.189.0",
        "@aws-cdk/cdk-build-tools": "1.189.0",
        "@aws-cdk/pkglint": "1.189.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.189.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.189.0",
        "@aws-cdk/core": "1.189.0",
        "@aws-cdk/cx-api": "1.189.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.189.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src774479601/src/js/aws-cdk-assert-1.189.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.189.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-a6GY5i/YrpE+sO6nvBGZ2FKcrzg9YEHF5NdI8xd215GgkidLclOywxpoIBYowk8IuFy2v5s8m5MtgGaB26jGfQ==",
        "shasum": "2c8b2134a18342596c5ba24490a76412c89fbff1",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.189.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBbvuWvzgF088xoA1QS9G4zE1zxR319ARlaCUWfQwgMcAiEAyaWBxAbPscFo53MmCbpsd29nEh6Z7C/vbcEzc6bJW0E="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjyLsMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoAvxAAiZaefx1VkS5yS/vQuKBvlMCZx7pKKK3sSrpfVO8S+PDz/ual\r\nSzoyNZuhgWrEfPFOlvYx1JEMSSxdfhgf/5We+TjajBQ4JgAIZ3W6TJdEBmxs\r\n4GA5RpgL1+tu6BHQFU7s/a6G1ENHpdSAcZSqYghosOAx/3KdqS17kEu+hgiq\r\nibs6QbNOB3oJiP+3W8pXwpoCg1mcwMkUKL4smPC+R+p+MeRDgnK+Di8IV6My\r\nodNnwYBJ1sjyb3C95+eUPl9rslnxT8HVvrfV9WUS6DzZVK7vSe0vEmBpIpVD\r\ngI3oo5vwyrh3lRXDJBfTxfmqw3QY9qeRwK6tSGdhzhnbrticNiQ/EBHyanyu\r\n06PzStDlGRDDtX3Rz3PvLuSLbi+bmBSdktd3wJEWJExAk2YtENhRJKfmTeO/\r\nALiMiGw6pwm1i2vJGH7ytEKb5mBD3hNA9KCNM5uYII99AlpXNUeCVUCTxZM/\r\ngdZSeWgcbijkghLV6jqdXZfk62O8b/I6Kuitolwk1CAkf9QCu5Et+7TpZi6b\r\nr/KqdXw7t7ehTs/2Y88sKETc9fktqkRgx3i/MMxgUdemJ+vYhYp9lUsxGqht\r\n3YhhS7HwLRCJOXOr35VXt7OrSuSF2STLrqE6PJcwo/5GLV2+3qwYWq7Jo996\r\nK941HG80MZP7Vj25yEmFv63GCzEvbaTGiik=\r\n=7w8F\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.189.0_1674099468397_0.9434203377470687"
      },
      "_hasShrinkwrap": false
    },
    "2.61.0": {
      "name": "@aws-cdk/assert",
      "version": "2.61.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.61.0",
        "@aws-cdk/cdk-build-tools": "2.61.0",
        "@aws-cdk/pkglint": "2.61.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.61.0",
        "aws-cdk-migration": "2.61.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.61.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.61.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src409055961/src/js/aws-cdk-assert-2.61.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.61.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-elKivWlvQ23mzzlRBSRixFJTE32pK/d9WVlMCyJeTeSzsxY7afSVvOAjXem+gsfOzOA++F01sgksKj05hUc94A==",
        "shasum": "100e64444ce68eff411518cb3d826b0cf22513d1",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.61.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBiAfhXtU/rhyf1h1/oFZE7Ooyd0JuOOkw7JBZ/pTbGUAiBy8zq4SYraq7nBsLWkA4mGRgsC462LWL4ddZumh8DZWw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjyNzsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpkNQ/+JBl2gR3zVKGl/Qarkcjq26G0PRnZDUJAmALuSAfcf/+DC16U\r\nNf6jWhW1p/7xfn4i347TGz5z134DUGWvjCjYuQwtdVCJ5wnGvLEskx2rWK4E\r\nVwPtdzvygpgYfGeqq6E7WaTjIN48hn6yewcXE1Ulubq7BmElJuGEO/WuYBJI\r\nPT0xH5e/bjab30b1nX489pAJ6SJQxVwCgwossch/L0nvGEOfGPUF1jY0S4qk\r\npabwJYzcM/4wJ3kp+TN7BtUiLIU+8VslW0p+zMJek4vKO/ai76YQfFyz71LF\r\nx08VPgdFf6VZcHaQVTh1DlDfnVP3N78EGbGkFx/i5ENEq/UqBwr1iuxkmWkN\r\nWBo4us+j4y6j3SIAHuBfM+qEve5eMGzSllXnheJCLl44hz38olCPKZWnqwtK\r\n1bwMl/WKgBSN9C158lFJiD6r7uNyIKjt/pp6AWFpVvGqL3Mp4Z1tOxRd74PU\r\nsFZKU1cxW6KhEgkubSO9zBN06VfIuy0ifGGJYDoCZt28RjJQi72P5JZPVQ3s\r\nF3nrvVo1KqY5P/8Zce76QmGrOHHer6WyhT/DUcPlu3/f5RCx9TVLDjgo1w0f\r\nZEdzZS7GMnrnf91smoQZ0maZ+eFDff8+DPY0FWpO+prLLrSMScf2gmMYmePG\r\nLMzwPkeRR0hTzUPNs3m/alfP6iRi7pZle9g=\r\n=r5s+\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.61.0_1674108140064_0.7272069765547922"
      },
      "_hasShrinkwrap": false
    },
    "2.61.1": {
      "name": "@aws-cdk/assert",
      "version": "2.61.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.61.1",
        "@aws-cdk/cdk-build-tools": "2.61.1",
        "@aws-cdk/pkglint": "2.61.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.61.1",
        "aws-cdk-migration": "2.61.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.61.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.61.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src014547617/src/js/aws-cdk-assert-2.61.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.61.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-6lfRXAUarvy2hywcYb5cgR+ycjhaXSeSJJgTkPAVFgwassQtsPGh0ItFX6T1tuLeUY+yJyi1ema6B4vB5ZQo2g==",
        "shasum": "723ca390d113e9c7728fa21162a8b988e79f498b",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.61.1.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC9d8Pxga8kdf55cajUMp6nJs3Apc5rnO1na/pm04gDyAiBx/+QQgER+EZ4AGMVBQRwaEvB3t1gUSycSQRQBmWKjHg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjyjhwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp/uhAAoZZnXWCbSylaaF4QA1aGFjJmtZZ+I91OskY/OWVZSSpqVUmx\r\nQWFRzJjZq6GApxNSc9Jb06mD095oNodz+1xb8N+LpDucLxaK/yhHy61diiLG\r\nZCj9OMUNxlKh+mvkBM7hrxrpIRk764FDg9CG+6fZIAlF6Fb6f8ixx/8zC8EF\r\nn/hDyLnsjzIbgqt+TykAhEmn9dpVF2lQ9BMLIRIMn+rczdsoUp3nUaziy4Zl\r\nOLDIFknGTY1RcUpG4+gGay3kxTee5HN0x5JiY910uPK2JxjqZQbbfidPPqQM\r\nXvdEm3ipjaFn3OEiAvO2IaE692xCiEc7fDlYI0GSAr4RP+vNYnsF5+7chHpr\r\nHOUmGZQzDSp3x29edA6KYvW8TB3N8Tr/MCyv5YSWHZX1kRF6D0EQEOegJoL6\r\np51/V/dTVmpH0x+kjopN+XF5fqs5LBFriCDt1n3EgY+kRHT6RCdnB61WjvZ5\r\nNVAvpbbgBohoqDsV64qoptHxVHQ9tucmzcLOtBNEQewwKxPQ4I0lCLFxIuVH\r\nP3vR9/YbAmzfOQ8iH/LferLa6woHz5kjzJe90xXjwyYu26uqtTPlVhXco05Z\r\nTGiGDCahJH0em7mn3C+ZpIu7oDUpOfQjL4/kvgDGuWU05sft0J9dn3Be6gj0\r\nFD4Vq9mTtqr0bIyjyzrTJTErB+xlRSUX6xY=\r\n=OTKg\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.61.1_1674197104156_0.10286807600541303"
      },
      "_hasShrinkwrap": false
    },
    "2.62.0": {
      "name": "@aws-cdk/assert",
      "version": "2.62.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.62.0",
        "@aws-cdk/cdk-build-tools": "2.62.0",
        "@aws-cdk/pkglint": "2.62.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.62.0",
        "aws-cdk-migration": "2.62.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.62.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.62.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src743355960/src/js/aws-cdk-assert-2.62.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.62.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-23cg7cbLatu7K5dBKhqoK1MZMUgFbcbEtQodR1d2LYifq7C9aAYCO+JWMWTL5HElWtXFTwLCuOaN7DlnNH6oGQ==",
        "shasum": "af3197391be226464ae839f5741c7f5e807fc953",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.62.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD7Lmc3gGu65WKNo+wmY3iHT8ZACZK2mMhZlT4Xe3JnggIhALlExZFjKVRClibkoh4TjNvFlAZRhxZgR2ypZ+ZMDt8P"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0YpsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo1bA//SX9nDRgqeH7oKg52UPHr/bWD/MmVQpiP32JOAlM3noZ7Wg/N\r\nS9aCOLI2JSudAskdUMOoK1E3DmRMqb+DYvkmOcp3ahjTAnIhMvTAcetoK7Dg\r\nTspCvvqPEi8Tj9vzCX7oP2+Q/LxilrLt5nb01WDbU3Fz/FcCIxO7iSuhLBkt\r\nNrSyiJgS6JO4KUuB1mxuK8e31aow3LHfhSBgmf9OSL2pXLylCBVScWU1D0H3\r\nkD4Vw5eB726c8OXzNsNCkHQz1Y8TRswcNdXCVzFaXVvge0NHSSNnEqKy0HL7\r\nCDjke9bEfkJPdnNKFuB0zXRBCiOyOwpMYuQSJpOrLyf00MtGzszhEGZk9CPh\r\nERPnByI0pOfHuq9uzsek/3CpeogpAOVlLKM4R342Q6a61ku+tCU1ceQlu3Ai\r\nM4B1mspj4oXKp7afNLXyv2eeCag19ZAGGy6gcNjK2yCKGgabQy1zcsXVMUHG\r\nb+arlXjMTCFLuPZw3YTvN7rpvoLvPcsNSQbJqU8/YTxtByz+7mfpSHeZLocw\r\n5U06WyZWhRoBcsToW6OGA0r4PMm5OQ6wPm5fPte47SgHD1xVPqSBUHvT8LmM\r\nH+sYd0TqlQDQc0fd2mxmSmOarxuSHDzd+aTdfPw67khwK1caLQxUNx+0b73u\r\nr5INusckSJxpiQ5nFLDOPCBAy/7HnvE0+00=\r\n=SK6b\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.62.0_1674676844434_0.6047681525860518"
      },
      "_hasShrinkwrap": false
    },
    "1.190.0": {
      "name": "@aws-cdk/assert",
      "version": "1.190.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.190.0",
        "@aws-cdk/cdk-build-tools": "1.190.0",
        "@aws-cdk/pkglint": "1.190.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.190.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.190.0",
        "@aws-cdk/core": "1.190.0",
        "@aws-cdk/cx-api": "1.190.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.190.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src879579011/src/js/aws-cdk-assert-1.190.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.190.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-QnIYR8OtWNrn7YrHSZb7SiarkN2IHoBKczLFXq/Adr/jxLBxfA7IA8ZVrzkI5jLETy+kdcESXlEX17ue8lrhyw==",
        "shasum": "be7309924e076f91a91cb815d94327dfedecf5e5",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.190.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAkrI4SWvTy1sblRrKhECVBa+OgGZVdEw/GgVUKLqkC9AiEAlS/RniH6841Wap+V5ce5eQVaSP47JnoOzRCNONo5xVI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0aYiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrc+Q/9GF9wjg1LfadYnMTsus54WZUiuIlegUNarnJe+YKBuviTPmHj\r\nCDtqE+wiBoBl3istykeLsVNKMgtblAn4qPJ1HQpO5Mb7+jAwGTg465w/davN\r\nUhdrnWLFOgfqdxQtk/89kddz5IBEblLu6RfIYLthwYCCGe/13gzsZLwqwtBP\r\nqgfIYO27WcUieG6gqUAP1Zo4f2qARYjyXkRptvI+Lb9hRa2wwmMzoKxJh8lh\r\nt15J6Yc40GI00Af2nunpy17DV82O0LsBdKb33SBDmsoQ/XoDbduFh6vlMm1g\r\nFaXzLaGRshOD/mG1OHyHtFNplnfUmYvM5MASx3A/ygheDEM0ckNClj5+KkSD\r\nrcYeLFpFrwpTYp+OHlwHzaoI+oK9MYYmZ0omih0BCcvGjQQ7W8TryBp6I6fH\r\nhMCdab2LGXY/Co8lxfzFWoBJTqZzXYdH5pYJISbR0H0pe6O7TZifNsou3HQg\r\nfaiQsfNaV71XloYc5jlVhWN64duVCjOZfhaHc7YopEJrAMywT+/TKvOt7+ST\r\ndOW3Up6ixHncPYfJOQXm6bg3YSIr68sVTPJ0UkIrSd/jjKNoN4q36UHFpul0\r\nIwQjXPlIQ7O3dFyH4DaQoV4tywKD6w4R7HH5GxCIhvL+4S3dAhM5K3hOP9B0\r\nVVw9+F83u/3RoB7/j5+m8ewawQl1qP5jjCk=\r\n=Gh8U\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.190.0_1674683938296_0.37010261670888656"
      },
      "_hasShrinkwrap": false
    },
    "2.62.1": {
      "name": "@aws-cdk/assert",
      "version": "2.62.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.62.1",
        "@aws-cdk/cdk-build-tools": "2.62.1",
        "@aws-cdk/pkglint": "2.62.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.62.1",
        "aws-cdk-migration": "2.62.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.62.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.62.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src785157971/src/js/aws-cdk-assert-2.62.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.62.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-7dtkzZOUKsllQxO4S2pr2q0TtVRKhXwtyQR9LytR32w3Tf5huSCsVvNJpPjh9q8+3/JHaFH5+VCqgPha8uiONQ==",
        "shasum": "57689d5aa3bc9dc77580e10f14c39cefa2dfc829",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.62.1.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDQ6ywiVPnaxiqeNInuve1EPdTldQhaTRyJeJt/Lv51GAiBHp00PzX+UO2iJh6GglfS98HmC4tcyGsrI8nGHMXsiyA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0qmwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmok2A//ShSt64E8Cu0AqG0QxGfl+ZkeXHPf3ZlQvfUwJL4z4xAyEPbg\r\n6fOTLHwyLGN67o7BXPyQpGjEkOFRDMEKD4gchzZN81gXAE8pP0stvtHPhKxB\r\nZ+zSymwzReJze+VvwDb7RONbgnHcaoK+muWpAds4HYcEZ70mjDV5i1qZ9n9P\r\nRpXtRRcaBHhu2WdXzrd6auYAjUj6k1RzhJ6dfYdZNEdfIjapzGmh/++gPxt9\r\nhyuI8j0tZzZP/J/EPuGGbnKHs9ckMSkULW4tjHqxsJ3osCch5srIezWgYu9F\r\nPKIMVReyPLaNGPc4k6UM7G/38nz4zacJmmOn8oSy/2fLU4gg5y4/f19VoDdP\r\nDytP2M4xCijUUUq6LVC4Ldm2Nryu6oa4odsqRCosRU4CkF0+2wca5Vto8oJv\r\nY44XHECqqhOFfpnXtSKimHeegADA5EHG/QNJUhHHVZA8VU4n3h5JYh1ZSBtK\r\njLfxn5JL5DS4nd0rXxuJ+mAe/oINt+Wxxn2uFmWDemImQR0x4D1O63LL/U9w\r\nZ3WgSiXSA0tZRw8ZF63ndGafli8OP6bt6u+MPVRcKzp9ZodjOQ9ezPqAKRoB\r\n+9KshWMsq/fM1l27ParHRXSYCieJfYdypTu9NH75Lr6hqJaTk3TXWf+uJY1W\r\n5kVHNuMULQM9eBfI6bkEDJfjYJKLflrQxN4=\r\n=9vJ1\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.62.1_1674750383772_0.9421825029337567"
      },
      "_hasShrinkwrap": false
    },
    "2.62.2": {
      "name": "@aws-cdk/assert",
      "version": "2.62.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.62.2",
        "@aws-cdk/cdk-build-tools": "2.62.2",
        "@aws-cdk/pkglint": "2.62.2",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.62.2",
        "aws-cdk-migration": "2.62.2",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.62.2"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.62.2",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src316392702/src/js/aws-cdk-assert-2.62.2.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.62.2",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-b4Mrmv8Fq5KEn+cbin3NjRJhgAvSP4nlvxYi9FdcNMCsx+VIkILmfjmEHyMatrW50HQxGCEpRAnbmEsZ8Km9Mw==",
        "shasum": "006ef1bc6f17ed6db72c9e6baa09dc8d4adf8722",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.62.2.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA5TNOJFjmlnctlTdaC4fZ61Y+LToNg+ZVaHrO0K8TXAAiAp5wuaUXt5j26iquLaVnvjKQESEHvw+ctKFJ3hRkYQbQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0+puACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp+sQ//aU4HCNg6mSGeces/EyXw3OGnlJFfQxj6uJrvds6+NVDJCSmM\r\nI9w3j4a+1xn9Es1LinGUzCyDO+zzmzb7NEWI3GmhPglWne3H0iXsqeECtLeK\r\nM2ZTlYHvGW6aGGcN8gBnjt994k70n6pq5A16a1ewrzfQJD/h0kPnErLqaCoc\r\nWBYn9mQPYcUrE5wkzzv3hFpTyYNCHwEHvQ/dAvgWI8AxrnmPPaaZ6QoX5aoa\r\nLcD5NxsHPgdX6Y9WxZPp9URHseqbHsQvwQBoGnuGs+LK7M05PwmxcHi0Z+P7\r\nsFIgkA3wIgIGy6kvK5CRWXAkMxg8UUmIu4j08c3m5yLunPrSwg1m6DxNPOUr\r\njginGwTPFR9eO3afkTPHJsWQtHeSO/UsESjxNXgpxwdGvl+ZxM4sTsl5xOb2\r\nIXfNKGXw4ZW85NdF3R+A92U9+KmBXPMHrIFvZgTumGwmJ3H/1VF2Fkse3Jf4\r\n63/d7/Oi6sZtmgqWi5fmXjERZjtlA8F1uNNFvQbGcvUxb+s4tgJoYc9jFffe\r\nJoIizg5/dCoLAQLRL7z8kvBfTZ9ezlLW+/+TxW+9NUd5A/ehKkZXZeLb19zt\r\nrr9niVG0QX2u5+mgGG/XFC5kSUqYEG09UP8w1ZI/rObY5W26eve/aYfdXebu\r\nzJp2/THmIsWkV+c4zYNODHfVhq43Eu6A/Iw=\r\n=3i/L\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.62.2_1674832494634_0.32877875136144485"
      },
      "_hasShrinkwrap": false
    },
    "2.63.0": {
      "name": "@aws-cdk/assert",
      "version": "2.63.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.63.0",
        "@aws-cdk/cdk-build-tools": "2.63.0",
        "@aws-cdk/pkglint": "2.63.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.63.0",
        "aws-cdk-migration": "2.63.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.63.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.63.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src766716367/src/js/aws-cdk-assert-2.63.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.63.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-S/oQbcZ23zqmV8kGUwDvAmwiXTVln06o/Qgdly78tDzhTpZWqeCwjTfuXOGQr2uYTCjmrXVrQhaMKo8Tndfc8Q==",
        "shasum": "815cf883131e603bef2489256dafe9128ff86097",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.63.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICbur3K9DVE1ahY0G1sjJdVfacf9wDfBlFI+ui3qjmQXAiEAxe4EsMxAYkrGIaZZsCR4e5NJBi9YFLbC3mak5pgI0rc="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj2Xc+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq6lA//emLw6Ft7OLMSGHBRgHtkIXv+K/W6cFax9Nerip4EryerZ2iw\r\nBgn1bGisiPDio2bCs9B1otpibqCqxAe042WV3l6yI8lzpLuFlkN8G6HPwk/R\r\nHf86H0RY8uZPFxU7fdg7Y4FrVlfYmOcDML/+BWTsENs0ZvxMPQFEJhkVmzvr\r\nFsv0/wo3QkgQbl5n7FvZfz/MSrsRnQkGsuTajy7m4bAqElC1MvI61+W4ROca\r\n+Qrk6PJlkD1w6O7N1Dfv8usNyC3Hyao1G6niIUSqp3fa68y8UWfuQv+OidMQ\r\ni++EAcy++BwfWOu8yLXJ4oagXgsJ+TZw7/uVcs23lep7a6cy/Rotqaka7mM2\r\nbusrepYwLhQz97Ce3F39jqBBowzexbQIV++yX0ztYGFbhgcVE6yYNEGQBi5Z\r\nRk9kdyNJisxsZ1ZzcAb43eWN24KRloWX4fYpbDDaV/U09nPbawwFFbgCRQCZ\r\nWyQXU2xhZq4YojsnFrH+K5XhanmnwOx4h9caqz5ORhS0DWdr/GYNvOQ/+tFy\r\nt38UuLy35Z/FUeTK5fDhxi2gTolQGyVPYTqqOJkVMGGOI8DAiN9iIoJSkT1s\r\nijZqLp08KHnK4iNL+QEvmFEEUDUu3/azZby3Gjfg/OUqtXIkUji1NqfaJVij\r\nE9Oak9PWJfnl8zXySARsgx0IWn54qPTJGcM=\r\n=3Y46\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.63.0_1675196222208_0.18003524425164774"
      },
      "_hasShrinkwrap": false
    },
    "1.191.0": {
      "name": "@aws-cdk/assert",
      "version": "1.191.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.191.0",
        "@aws-cdk/cdk-build-tools": "1.191.0",
        "@aws-cdk/pkglint": "1.191.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.191.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.191.0",
        "@aws-cdk/core": "1.191.0",
        "@aws-cdk/cx-api": "1.191.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.191.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src403803918/src/js/aws-cdk-assert-1.191.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.191.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-QcYlWSrQJTrVvyZq4PsppOOAycw2ZkIrg3oBmNSAHCNhBtkVUxHrPDRvFBdmRhx9dCHRYbsZZoQAYsxnhZeK9Q==",
        "shasum": "3ce8bceeb704308adcac6ac04d0d675ca44826aa",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.191.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDyrKXiSqoJfZaJzqYpaVPuNr25EQoXAaYzjJUWyb0DaAiAiU6u5UHnddDCFTMhr/s6uLGGZsqFX9ngO4H1UulvhLA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj2ZLcACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrppQ//fbLVfsQTawE6dn0Rp6BhmXYNx30Hb56vfprEJKTnod5/2d/V\r\nBulh7ErbAD/RFaL/0mu+VnZ9Om2b8y1AAa05N9U9eUk6S+1kR1iXB5tz7KnL\r\npXauk8t1TPkXM88aeYvsHzsGg3qUtIVhHCnbPwpjI6hio+1d5wqHSgYKuaR8\r\nEMLxHWTFNkn1RIV2WI8r4GnlueuG7vgz03lgfdeclDd8kG4Vs9ULRwUhAgfc\r\nb9LXgTf7Q2jUK7nlr3PnQ6Ai4Rie+Al20zTnjmbDJMv6b0KW1GL8XN2HiBCg\r\nIGXAZspKwxTu101P2WHF9vEn2JAWPrFdC2y9eZD29nnjS5yhhVfQ5fEgMoaS\r\nsp/nfYDyg1qFyiSHsGxy11Df829Q4FB2FobkyD8ENjj4VfdpolCN7hzEFhoE\r\n+O0isdXUfKHKrm0HkQracB0LRjogzJ0IkwEXJ3nbNvfRsasFQptrJ8XdrB1V\r\nubP8vKWb9vUQsIEWyyUv2oRgVQNMP3T22mV+AdQK1lEYS7EiTnRvUDDXlw9S\r\nRNQc5GCy1vPJbl3VjAyjj8jG7qSl/A13Av1u+v6w2RmG2whQ0X9/RlW8MxLn\r\n2wmBky4rIHQwaWYv7SkdMG5+Fije8jSA0pPT5hM4883sO3k75GvM/jOHsFqI\r\nXhPzQX4juirbtqd5v6icTr+FctS2BfVZHHA=\r\n=Pxz7\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.191.0_1675203292665_0.11512499749157135"
      },
      "_hasShrinkwrap": false
    },
    "2.63.1": {
      "name": "@aws-cdk/assert",
      "version": "2.63.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.63.1",
        "@aws-cdk/cdk-build-tools": "2.63.1",
        "@aws-cdk/pkglint": "2.63.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.63.1",
        "aws-cdk-migration": "2.63.1",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.63.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.63.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src198554014/src/js/aws-cdk-assert-2.63.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.63.1",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-o0QyMwfftrQdFdUe7L7GzoGmdszCv7GpJloz+6KVLA6RaWKS4umv6uLfPXkyhDNjO/C6CwDcqNKUYWtsRvGt1w==",
        "shasum": "0974ccb883adde414af5e8f00af9c51c82351533",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.63.1.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCTQq2WQxMkXi0EVvxXuFb5fgz7rGB8lYrUBAwMgn973QIgK29BCmTartOEEg3se789Bh1ldjsE3fLpCTVSO6kF5Q4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj3XzmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoqbg/+MVXJH7c8nESfoy4+vp18JRdaGJoFZN7T3imf7/I3GeXedtCB\r\nEWz92czsLvKDXWSig7y2IPbrQelrzWBRM6XH+RuwJAiB5UMbORIO7+EdgkFi\r\njFNklivCAosdC9g66kTKDN3lVCz8ZxrYCH5p3r/NEsL5kQbrPMXNByJnKn7E\r\n9eMSbu2AiZa94V1msJ1ZS8LXo5RkCgB9gCUKpKGAglcOhHkT7z6zFYLHvSrQ\r\nrKK6B94Ufgkho+tdjLvmNpq2MR+i0nrqk4e3+leLeHHwEI9UCQ3CAbM3iBOv\r\nGTC1lZJrBk2+pS62a3cDGwpYTRjIqjfB3YJ27VoLd2mZzjBFnLfp9EMgMkwR\r\nzchuV4kJAD6qCyWnGCDwcf12fkhZbS2x9K7mpo2b6l/Cf3gGQ1BhBKynCM+l\r\nYFLpddWSdYsGsofkctuvjjhELqnH+1ClyXOMixPpBNp07M1A+cU32vfJcBJ8\r\naV+SwnPX5gV+maZZaxWz4nu3EpYIphLceLKV7H6Y/3XDLeQoWOPPFF+PgPAw\r\npyMRcr65XVo8IQqPHAlP0dgKBkUT9U5ODJ6iRUDW8wvj2lXhNSgtvSJJkjzj\r\nHQV1KRDUTSc3Eef9I5OGA+cxTxHSams5H8T2OHVZjCeAH6jtKVY4MFbdatHR\r\n/N/VvLgLPdoM5+Wz3X0Wmt430EusLispYdE=\r\n=9vy7\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.63.1_1675459814110_0.06274410722965151"
      },
      "_hasShrinkwrap": false
    },
    "2.63.2": {
      "name": "@aws-cdk/assert",
      "version": "2.63.2",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.63.2",
        "@aws-cdk/cdk-build-tools": "2.63.2",
        "@aws-cdk/pkglint": "2.63.2",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.63.2",
        "aws-cdk-migration": "2.63.2",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.63.2"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.63.2",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src676320159/src/js/aws-cdk-assert-2.63.2.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.63.2",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-MwLUSTAAfR1W1hokPii0zmJed0UgjIt/OY4d0TqWxFzD+jgGCmTbqI/I+f7gO0hbUr6mcL2ukHIXNEUubwshOw==",
        "shasum": "da86eaae3bcfb44b4933af787bc49d544a96f628",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.63.2.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCLQqUy0W/iczUyoEHuZqAA9jKaBWRDxJ2Bri2J/yr7LwIgXhU3thFhIHIc9HixuqUtfuKqZq6xt5VEGrHKXzxDBVQ="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj3uCDACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoiVxAAosZr2ngx2EkFmqpxKQXoF1RpUvE9uuj9LMpDAIi19d7TDvYx\r\nY9H6fs8Co2dNcHd9mwc6pTYuLMJntdU08t7t0o15CjFqYo47bA95yup0vSiO\r\ndF9fGFLUpICWRf7krpv9hcZnMDCKh0Etswd3HcdCwbQ2HdnYJNrLoB8biFXl\r\nivd+dOoowbj6DYSQiPgyB4v3KbIc7wlSBPYZ66FnEw/Z26HY9XJ8kUJvVXJb\r\nR7SOXFy6TP45xvVUwDB1xOOuFUXA5YqCAnZpa0bwyLePMXWkWGpuBMc46FUH\r\nokY/MZG6ZHpsNFnnbuZtv2wOdCUmwC909onZITqPBgscJF/r9Rl/n2IYmJqy\r\nXdZrMjdFzoMK9m6CKRRwEOgZr38F2UGlI2CO0v4PH5nDrYhqvSOVc8HwnKou\r\nAAB7XyjSp3a8ApQ3wHlxO2w7C0pLd2SB2otYP+YpOl++rDo7q2qge+0BbVYU\r\nNjm1Px3+sAgbNSwioRqwYbfkZpX5T3S/rjDO/jTSlLPS519IN8jwQsYeFwEN\r\n45XM6CF9rIdnxums47PyfvLDY6foD1tA/CLAr5PCrAUNhLMjh69CB5ZbY8Z5\r\nm7p45YOEC5bjs0qvhuRJkQL7tO9f24lN2GbomQSji+p4e7eIurd+Jbw8rhqR\r\nMEVhYSjDbuMfmtovJDuY43DQQIJz2A7DB58=\r\n=lNHx\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.63.2_1675550851104_0.5240127060858746"
      },
      "_hasShrinkwrap": false
    },
    "2.64.0": {
      "name": "@aws-cdk/assert",
      "version": "2.64.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.64.0",
        "@aws-cdk/cdk-build-tools": "2.64.0",
        "@aws-cdk/pkglint": "2.64.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.64.0",
        "aws-cdk-migration": "2.64.0",
        "constructs": "^10.0.0",
        "jest": "^27.3.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.64.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.64.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src636677675/src/js/aws-cdk-assert-2.64.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.64.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-pQ8PY84rvL04ZDRkFELVmFVXEVnzeji9qze7Agks5ut9q2uymUKKVMsTycwg7trJQbcJmSDxcxnTTrE2IuLIaQ==",
        "shasum": "43c95fe4fe9e281026c757a86319ab47c5a039fc",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.64.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDsXeVncPM5M8Wc/QlQCip4G8LszebMiqUb3j6aFF0Z/wIhAM0xsiDIW0ogGlektk6rm5L7l6048UjuHCJncMYj1F8f"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj5H2HACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoxMQ/8DqAB4PnWGm2SB8pZgVcjXtlUwmUJXwrtJXPjV2w6Bmif6mYj\r\nhcvCfpljIwBReYoXwLIBfsuVk0PLhbY2/Ntm89cunWp1ov1SnB12gNtmiLKK\r\n+9oit7rBhUSHUhBTsa6CVmf3a9EzfbkCi9ng98ZmzBtCfgU1DpgVo7KltpO/\r\nHkmpZ8/MKPh7UP/f/bWCFD93OGRap5baqqRHs8LFwd6PEzoAieB5ptUomHSj\r\nRoVetTHcubo301yJazmjsZYjk74LIEV9T1oST0GpxTACEzK8dkCOxjd9YW/w\r\nRUVBEO2AHwro9WXUIB5tSzhlYi+SRQud8ZcYkZw/cpjJgHq6LrkwVJx80MLb\r\nZa+cNh15tQt/Cv68yhL8vAzzo4IMouicMtXEaefroXpy2osmZ+oGABBYm5Em\r\nQ9Kbvdv/D3gfDZlGfemsfm0nOaYuN4wyxOXz7LQ9jhCOtCBq/YswB4gq5Ph2\r\nTh4KOjjBrprhKdYdyEJjd9dA5VozY27X88FVYa+wpzIJZ2DIXXmwyZIw1ESm\r\nnqATxyzdZ2Z7h+twlLMQxu7A6sxq7nn9fb52lg9+Bi3re/DaWFcDC86cWRb7\r\na3sRcoR5PWjPQcBxrpYkzgIfYIolmq5ioawjxm+EdW2w9ol/74lYmg4kvwoN\r\ny/T4q6NKJZQgl072dA8BVGyW0TbVk+rP4BY=\r\n=/UGb\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.64.0_1675918727040_0.6165866810051741"
      },
      "_hasShrinkwrap": false
    },
    "1.192.0": {
      "name": "@aws-cdk/assert",
      "version": "1.192.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.192.0",
        "@aws-cdk/cdk-build-tools": "1.192.0",
        "@aws-cdk/pkglint": "1.192.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.192.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.192.0",
        "@aws-cdk/core": "1.192.0",
        "@aws-cdk/cx-api": "1.192.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.192.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src009720294/src/js/aws-cdk-assert-1.192.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.192.0",
      "_nodeVersion": "14.19.2",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-zpTHILvdBJx+u/bH+Rg6edRCi6Js+rhYmt6rvSj62F45p3XT6zu5EOcyMzg9klaqJ6h0CpCqD3WiJ4TqZHIY4Q==",
        "shasum": "d8713cb60fbc9fc1a3059c1e98485030fb54160d",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.192.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEK6wE69jFMMuFvFBqWTm1dUyVlWEVjc9CjMPZRd4tmDAiEAw3PYZoz6WHARYa5RwEvLeVizmxjARzscn1d2J8slhzY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj5JFeACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqGIxAAl24MPo/qZF6HGXPLG6DSF68HMY6Ph1CBxtY4ZTo92kRIEyf+\r\nqGxDfuGqdCDteSATSQiV57o0vzs+JhApz4R0DaijXqfOUfeZUB1POWSNwoEb\r\nD1MIM2OKxGLpcm9KU5GZMG3+wHZOnbE7qQ+MIghOWLHzIXR0gpj7EwT8vtJP\r\nNG87uCz/nmIHjf+Og/ifiHyqICScFw8FY3Fva7tHcvkTrMLXbaX4uXwIa991\r\nIcky8p+yuOPbCAm13Gb2K16SZonFtNe1tY0C9aAwj4HpBdtv2AZ4neHvFRBh\r\neuWRsZLNWJEpUYPz9ADxapqvD5uMERQ8Mn1c09l4dANmX/023RdSVaQVRfD5\r\n746F62ycn0c69S4Yr0HZCWLbgllFvpXtKlQkx/ZdJdKZfGV9G3CMnXcdxO3K\r\nPaM09kzUbmHQYvcolezojZ4U8GMltqnoLUqtBh3cldPpePndA0YxQrd0zWrw\r\nYtYcEYqTi/Y/ibBdpUTV/9n3PYwtjTqTEeDITWVXB/N/4wUU8ginzZqrtSLs\r\nppjaHReqGr+prRZNxWL8bQgeofHZr8rTty1vjVC8sdxS/UhEjVYsnHp7X5NN\r\nwT2rny2/DxGOk6+l3WhRcoPTZlviWO8TLSa4bNwERd5e7fTpZ/GUDaIF/pQk\r\nTy4243s0P8roMf95hb+z8vEpdf2sLmAPFaU=\r\n=Mfg1\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.192.0_1675923806565_0.5736589426770178"
      },
      "_hasShrinkwrap": false
    },
    "1.193.0": {
      "name": "@aws-cdk/assert",
      "version": "1.193.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.193.0",
        "@aws-cdk/cdk-build-tools": "1.193.0",
        "@aws-cdk/pkglint": "1.193.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.193.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.193.0",
        "@aws-cdk/core": "1.193.0",
        "@aws-cdk/cx-api": "1.193.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.193.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src785138691/src/js/aws-cdk-assert-1.193.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.193.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-wM49UuonltL71rnhoC9B04nRU2uzSvfhBCmHWQ2WflQjXR1/vrOfcqQzy4Jg4z9UwgNWC4wR9UjpxyJ2R3soRA==",
        "shasum": "c7144509923b8b65b2ff1a7480e45a9a09beac53",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.193.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDpPZil2yLxPgSHCc1NeTE/0HwFsDYniOZK32m5LfAkKAiEAo5M+lqPsQ/mPLfEeQmMIhlyHrsSCV0wW1g2yAJT132Y="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7WzJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrb3xAAh/CT1EtpQljFZu1/ZPooKeysZ8JeXi7dcRO5u2NP1tZHa9cR\r\n5rinQU3cmPamGgz+j5YVScBglS+XWBUWIR2z/W5NDGzlqXZSnDZL5pMpRWsT\r\nIFyCwLE+moU4ylavbpStIkYIelE084gUbq+9RNJ7JpqPdsEzChvUwnikJZg3\r\na8N1gcA+tmevW3awF1w5wN/ZZ9WO5VwvxOTfCtxLznnN8QzxUjtgcOBnUH3D\r\nATCQlJYa959C2Pf49bg9Wa8Vy0KOSzRwg/w3qSeKrVwRJoAKUcfu8VqpmHFm\r\nRWiMwi4XwZ4u/lGs3XYcR7YKgAy9HgFQV6Wvhup1IuqnsbmZsonnQN5LIt5N\r\np/oZCqXt3WScW0L83JfzQHlt/ZjP3CXc1vzdoAgyWbo6Twa5mrHNGdSfv09F\r\nNSksDXhljBWqRwrRdVQaKCiXOfX3hhtnhJ3QtVlhXGAZ2EB1rCelixAYKXmM\r\n+YeByby5QQxV8Ee8RbYi/EEOWuFRNF7gZLBdkOc4DHfB+zvPGc5+oU3aELlh\r\nT2t0z/QlGvVq13HpmyDzdogFQUf5Cnr8SgdrcsqZ7M7pN+AldFhKoJ8tehfJ\r\ni8/omj4Q6NEofQo2dU26EK8tnSIn6xWKpUwNeB7ZQalzpv9W+UgSrSrAjFFI\r\nOOtWqZjmvMeddr+QAOHulnNprz5pcDs2e6w=\r\n=OBpS\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.193.0_1676504265500_0.8943674711204137"
      },
      "_hasShrinkwrap": false
    },
    "2.65.0": {
      "name": "@aws-cdk/assert",
      "version": "2.65.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.65.0",
        "@aws-cdk/cdk-build-tools": "2.65.0",
        "@aws-cdk/pkglint": "2.65.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.65.0",
        "aws-cdk-migration": "2.65.0",
        "constructs": "^10.0.0",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.65.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.65.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src304937758/src/js/aws-cdk-assert-2.65.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.65.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-JVCzBnOUE7j92GGmsgAcZ+cuYudylkhu+u2YnFUnpoXvODVHjD40bQ8RaLHN8jS80lEKC/YozZsKViRa1bW9Cg==",
        "shasum": "83fed4392e0e59c582f65f6a7ff6430177e4c140",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.65.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCSBZdDQq6F83FVI7VyjjJbcBjGqgPN47uc11Hn3lp6XAIgaSx+Ppx4YxO1pKOKYe+cfHXZ+UeLTiqx9S9v2QXRyhE="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7W5SACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqntQ//bKIcZMiTP7YN3dXmolRqbGvxPW8eDxkNeZVKrKfQNhi3UkeL\r\npkw2xobsUKMk45ZViAGzjqghYd4M0Kl3iz54ZnJRf1FnWdQbl9ZecuEzQApA\r\nWX75DStaLPdZocYP1kkLzuPhMdbZWUiqSWlsCGyRQ0nPQGGwnO1nXP/k63v0\r\npUQt650jilFsRpLgDrS/ifnL6oPN/3H2ZBueqhIc6GHEmVJ60mq+gz8Y5l72\r\nKmnGKftyRw4jXflTHg0/5pgZyI4ddvfUGvTwqWt67nX5O6VmKfzEEJnfkehg\r\nKTLHtIUpKhbcXyNyJLkClfC++fmW0nJrOJSloLBmMrGZboU3ZAcUFLZLKntC\r\nERywXXk9GWJysCp7BbCvy3zVy9bF3hLB8tT0JQXJBuUa/Rpl50rFQb+CBhvH\r\n1u4GJW3ff+hhhunIB6GPspB4XFw9DJpybd4G3fSdfoMR/dhVhaZDfqO2MlAH\r\nkjGHuVSRmkOvV6yr8uCkQ+M5AFDhlIIqLy0NYCc1nYLChbuxsDHizN+lIyRF\r\nf+Kd1AUlVsFaN8ozUWtptpp7r9J767JoEeb9FNKQyTf/qemfnTqVYBHzrG21\r\nm+YRGp9NvGgE+dbDBC3S+hj2XwXIEivktzF7bLBEVQB01iPdgVuzAkYf4KMs\r\nxzZFNOMBMw1CqHw41SKymxM8C8eM2YlWHu4=\r\n=tWzL\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.65.0_1676504658517_0.5620267022183296"
      },
      "_hasShrinkwrap": false
    },
    "2.66.0": {
      "name": "@aws-cdk/assert",
      "version": "2.66.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.66.0",
        "@aws-cdk/cdk-build-tools": "2.66.0",
        "@aws-cdk/pkglint": "2.66.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.66.0",
        "aws-cdk-migration": "2.66.0",
        "constructs": "^10.0.0",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.66.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.66.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src661355161/src/js/aws-cdk-assert-2.66.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.66.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-J57h80cOwWAGNEk20afGqyZ72t4tC2PkOC+CpSHH8DRyHjpk9QIFHHWCjMub7gP+FCHUF+AZYXaYdgWDrPkuQQ==",
        "shasum": "1e78ad2f082198c091df5acc2b630a633f3cdac9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.66.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCCMRyeQ+h4irg7X4UAuvYmBSHSVsyrcNroksdg5Zj3hAIhALLIF3Wc7eMpfCAv3bQVwF2b2+7WbdlTwOD9gmLrXkES"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj9SyGACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrIhA//fHSXlA0MLbZDHcLTSxasZ7oS7Grgs+g9/au1xBKTsh6BMoPq\r\n1dJ8JyUjg2lXaaKQEBZxBgZ2yJ1fY5G8cGlTjjALxoKQroZ6SexBKv+hIUUH\r\n8znHhTM62RdV5dIEPWAn6U5JCukvSRcr4JVSPUnrm0lLYMlb6miDBgMRlQTA\r\nnN+bBr1wi4azlpN033MNsrRBkCtKTxXlSDvLSY8oIP72mozy76nQDB2vmOWI\r\n2j5nV4Q3zJTvcIIPBCJMSE76eF170yvA2i49lqOwDHoCDs2YMz3jiOSTcNl+\r\nHI9AosCR2nlNGOxPVqzdi77lf6TnlY3ZkrKdTErHzeFMB+iVn/sXn9nsB1kM\r\nhwrjz6NAISqJ81mBR6T7Cq4U8QJglHjClxXwn1L0gocuApIu8KeGOIHSAZ+V\r\nEKZVV6QoIPazA/TqWk0LYL8IPoU4PH6STxoYMflgHkNYhVCC6xc6UBSFRAfr\r\n4yftyNICT2dx6Gigyqz7al/4Uoz6XsWv+UVXGe06bKWewAispEqoHNm6eCEq\r\nfqvFbEQQWXuozq4OHshluIZjZfCpX8Did9kxauoQr+PalEgCZjCZJEtBhTqj\r\n3TWyN665MyvvEs+qSKYTeXM+wjLHiiIFn/gnHyc96JYO/ZGNWMwd0kbrLkNz\r\nOXJ/1WZoV4up9ikeMNuYuoAlX0iEQAAzF9M=\r\n=dmHD\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.66.0_1677012102626_0.5651282813081293"
      },
      "_hasShrinkwrap": false
    },
    "1.194.0": {
      "name": "@aws-cdk/assert",
      "version": "1.194.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.194.0",
        "@aws-cdk/cdk-build-tools": "1.194.0",
        "@aws-cdk/pkglint": "1.194.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.194.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.194.0",
        "@aws-cdk/core": "1.194.0",
        "@aws-cdk/cx-api": "1.194.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.194.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src857104750/src/js/aws-cdk-assert-1.194.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.194.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-xYBnmmNYE+JWwZxi4GgVI6GCVWOg8lcZv1819nUaBKop3RoW3DLEpgnsTpxjyksySw/8aVj0kgTZygpCWne3SQ==",
        "shasum": "1e95de3b8ec8319b6efc2f54187c17514c671d23",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.194.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDjrYc0kE0whZM2/d68ej/zO2p5+v+RagmALPboErUrqgIhANv5Lr7EhgI1h7u+7qB6XxVxpx579DdybBHFkmWJ59yI"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj9U0MACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmon/w/+Og9Y/zKZOimLjr41CyjyqqbAa61/CVnshtWzJORmRuu/Ympl\r\nTfP4S223DgNWvWFFWxqMg1GeEHsVkYYGbtDaMLQpq3UjoXFBFDfWHsJ5lHvW\r\nfJe7TJ/aLqGSq0zE/qMN6P5q3Vpm6a4PowdxGtcqF8LWKDrnc0E3yJ3WFmOE\r\nobCbsz0JBmUawfIDxeExf4a597JBeqsPp5dPwf2fUQwwbTp7/TpVJ0pz9i4q\r\n3abqU2JueGWLY0VzO85D5g5Nk9vsmF8x2rpuXKHcopp+ESfMoqVfys/rLS7+\r\nBhquznx7hygIOErKZNHrN8dCQaevTXcvgJCdW7MZ1eHmgqWx5SsBtw5O4/Wb\r\n+BRcIVt8K5YYNmqx8eQp0BpY6ySopqwND/+qyse72aL4JdBXqpwHxaXzyGqX\r\nD/Ruq9rl9kEFYA5dOcH0KpLpXvhMi8BC//iclYsijEhpoSkjLYKr241QBFui\r\n+e06DhcIMcYhdSLex5hPvu2qh5afdm6xf4dKIIJ0vOGBXzZcjSUVbeV2c6rp\r\nQC7PDk0snzQ6isWvPbgX7eEopDInxXRCNOCDxlBQ24AASyv5TX27IU6L0wDQ\r\nIG5bOXswkD4RT7Jn3I1FimwZBdJdI6n0IOIV3n8JE/hNxgoNJEBF4SXAR7oW\r\nOXiXcOEgJt9Be9xys68/in58TMPXrGQclAc=\r\n=lHxC\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.194.0_1677020428045_0.4580537034138652"
      },
      "_hasShrinkwrap": false
    },
    "2.66.1": {
      "name": "@aws-cdk/assert",
      "version": "2.66.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.66.1",
        "@aws-cdk/cdk-build-tools": "2.66.1",
        "@aws-cdk/pkglint": "2.66.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.66.1",
        "aws-cdk-migration": "2.66.1",
        "constructs": "^10.0.0",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.66.1"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.66.1",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src534381345/src/js/aws-cdk-assert-2.66.1.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.66.1",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-WaY2uw99XsFojUhADEDpS7kPhLrKMKsHWQ0RftIyb2LMq21O9y1neeme9WWTnEpEAH2SEmmXR0JYym0phZn7XA==",
        "shasum": "642d7909631cc825a3e3c78801ce00202da3f373",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.66.1.tgz",
        "fileCount": 38,
        "unpackedSize": 186307,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCngSaxhcU2miEvKTxxXbfTSHTDnwoW5x9XUbVLoILzcAIhAO0f+q2+ZbpdYo5zHhFO8iVKENZsvrn+RtxNgI6TcyZp"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj+MBtACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmorixAAhyGgfdqG94Olio55S9eblWVV8V1VRkMTtyAvxwTEja9gmpF9\r\nOfXqZrX7g8/m9wVbgP7xhDbn3He2S4JqyDr9O738Vx+db+0mszNTjpuZh4sG\r\n8R8oBVGtx7sKuxWqLpPhJrxpDzP0T08gpQtFv1B6GuYEjQrZMFZ6CMFBLVok\r\nGxpOwksb3iMwW1Kuqb6N3wPE2awCfeXJaMo/q2RFWLRJpbDikbMVshOiP1L3\r\ne1HwSHN7A8agNohQ/9xwPtn/5X8cOM3x+fCPgkpx4dBsiBspUPuP2Terx5nY\r\nofIL9Z+ROUAOcB/Gw56YjFTDBy7WpPCqJ5YCDBpIyeag3eP3ZiqAqcYenkL2\r\nm2O0GFZlFAXw/FBrZOLiKEdjNDjkcvfIqlK3J5HOmzw7XHzkOVhI7SCe5LFc\r\nsnLSImpX5f7V6lHDjHyFDBf7j0DNuSNh4DiW+sTRy270FEQ3T5lwNMkJP+jW\r\n491nAP4L/xE0tsnKy753ilh5c63l1LpzHwaJPhunU7OL3RK9bpjE1sgrSA/N\r\nXbz9+CV5xgypulJRrwygwBBaVb+CLH+CPsysAt2tetPERoiTzv2YD+S1cIom\r\nr2T65T/xoOePo39JinfM07P9qOhrGyLgJ9YTbXFLoXaZtEQvSmRtlD17ozMu\r\nPvbODR2w5UD0JRSyT6cUpkivSYr/TBCJTn4=\r\n=V3Pg\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.66.1_1677246573043_0.8997522620880811"
      },
      "_hasShrinkwrap": false
    },
    "2.67.0": {
      "name": "@aws-cdk/assert",
      "version": "2.67.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.67.0",
        "@aws-cdk/cdk-build-tools": "2.67.0",
        "@aws-cdk/pkglint": "2.67.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.67.0",
        "aws-cdk-migration": "2.67.0",
        "constructs": "^10.0.0",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.67.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.67.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src027766799/src/js/aws-cdk-assert-2.67.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.67.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-YEV0Los6gWe1YLuaJF76ccbgeWv+bMTArHSH442QfyVrvJRRo4OnhjE9Z2LkcS9IDVndtz1CkaI+fGAuIUfW4w==",
        "shasum": "88b63e738732587af69ac41618ccc0d1957e2547",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.67.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186431,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC4h3qvePr7jz/nJsEM7Am9FbLiXFaZ9Booqfy7euGwhgIgJY2WNESx+8segYr8oShmlpVDraw5j0GKufGaRqNyRiw="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkAK0ZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmre8xAAosCpmr2wrdJGAuoz/emDs35poXoowEht1zAsMwDQ1MNcF9ev\r\n4Ml+yFMNWbIPB7Fh62eaHI364fF7QhGKayUxZt28Y6Dog9mvsHm0LwV2832m\r\nDligmtj1GpkDTckf0VD8tJJAgAEWTadSdrK0AUQQ0Y7d3f72g6JY8JD4oGu6\r\nYK0lfZelPmu1JVFDs72oipfEvUuDdQMj+2EjHvgFU5htBFt6ka0aln/vABPu\r\nupYWgtGV9V4mF+p2eptvEVKrc90JTuX3hIWSWELRk6lNpBIzLjwW/PqmZ6Pf\r\ncs+esIMQovvyLrPEYdn02F3+5ime2Nc/poDUmJlXrB6S4od6RCE/jDx/epC3\r\n2xwmEwZ3IK0Z7MS4/qcXpRGWjcYPfBt9hX4eN+TaghW0BPG+EBW04N5IlUoj\r\noS4DjOwhJ1AuwZQTlH4ZQvfoZz+i+ryyx2E74Jflz0mfg/5bH0LUHOMW8o10\r\nRULcHauvYnfx6iQXbF86Qv5wdH9v/p9c9loDgGkdNhQr7Ksh04mjaNwcGDSG\r\nLJ6J+gQKs8dHU9TiEcSNCn1ppk28P9gDr69QM9yjN5QHgA7OukXbCmc7mmzA\r\ngwM+izHGg9bwWdpauPz/i+oXxovgI4oXt1OcoYDl+v7VMH6/Xe6pIi6xlBtQ\r\nzrDyfM+zWtgIYSiV+AONReoZHdfRBHo6Q2g=\r\n=R4hj\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.67.0_1677765913568_0.6563590117419245"
      },
      "_hasShrinkwrap": false
    },
    "1.195.0": {
      "name": "@aws-cdk/assert",
      "version": "1.195.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.195.0",
        "@aws-cdk/cdk-build-tools": "1.195.0",
        "@aws-cdk/pkglint": "1.195.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.195.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.195.0",
        "@aws-cdk/core": "1.195.0",
        "@aws-cdk/cx-api": "1.195.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.195.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src685599165/src/js/aws-cdk-assert-1.195.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.195.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-lse8ssgGVVTUpsChYl/CeFOPTQM7tZ8yGx1Y6EdprVFDQ/S8wgzR/mY6bn1qkkrp3ARBq6r2wrbUbFLYjla1Mg==",
        "shasum": "4d5334f49a7432897f1e8fbc8f6e9ced060d2760",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.195.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDYZVFZmuTFzTpqjgm2O0zSXY7h95eq0A56lwb227h1WgIgOMokDHKqRzqcGXnwxJqSgm9BIzKmo5t10bGbzOD5Lww="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkAOIqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp82A//bUOIW73yJ4p9MT+TsGWKuMgJezK9sq+nMHBcAqcyIX2BHHc8\r\nFzxbAVNKAfXK+u8lzNbiIhACDpDuX56M90wccymHdUMUwntYhIEEkWXGKcJS\r\nASjltyJd0MSI44BclAo6R/BuwvvgWQZTgQJox7Ddw/mcDWKN0hvKb74ibxUD\r\nYOyhgJmPiIK1DaaTz9OvOSfb1OxCkDKycVhwyYX+Evc7hQP8Dsyv9BG35swp\r\nO6pC9/gEoHmheOujUewNaBpVa0IJIMT/eZZfSGWkg0vj+aAHIIllarSIQoLh\r\n7QilNkjN6D4380WrgrzIv2tg6kHVf/KaKeE24GlnG1WvxVP/W5mz0LFwbNn/\r\n1dAA55Y+v2d9RFM/3ag/gbR6s+5MolFNVFoN/g4X2ew0B8PywHAlHTgJ+5v9\r\n+ZYVxfYmJW7aSh5Y59Zpabd24+mMmYSJDJDGytTHdaBeWiRDPQK2gfB/5X6k\r\ng3qaW94V/+TswWVQFEmzCuxE8OnDKQb5MrVIGwV8T4AqiYi9ZjSPKIScFZ3e\r\nY488/t9iv7tr1fbE3LbB/zbnVEgFLsLEyiroxWsvtO1KqlalezJIWwIhYbDf\r\n5cpdG5KBhSZwy1zSEAgbcAZoK2ct1brofIS1UBE/nkBUR998YjN07yPx+9cH\r\nOP2c047DJDsstcqKsEmLxfVe88dawvu3Gio=\r\n=0CM9\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.195.0_1677779498161_0.6995452287214372"
      },
      "_hasShrinkwrap": false
    },
    "2.68.0": {
      "name": "@aws-cdk/assert",
      "version": "2.68.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "2.68.0",
        "@aws-cdk/cdk-build-tools": "2.68.0",
        "@aws-cdk/pkglint": "2.68.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-lib": "2.68.0",
        "aws-cdk-migration": "2.68.0",
        "constructs": "^10.0.0",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "2.68.0"
      },
      "peerDependencies": {
        "aws-cdk-lib": "^2.68.0",
        "constructs": "^10.0.0",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src286747638/src/js/aws-cdk-assert-2.68.0.tgz",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@2.68.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-bEztvoYdVp17I/ClYRGZa4wlEP/qNNq4Q+Z7EKwRL0cLDmvq4EI1m1N8LhUPAH7B6YXp5d1164gC6Nr0lV8bbA==",
        "shasum": "d83b44ba278d3e3a32c13f372c697f26c6061b64",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-2.68.0.tgz",
        "fileCount": 38,
        "unpackedSize": 186431,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDR3RBFX4RenpzSeNmJhVPqnxyoujbqBYAH8+UrI20NJQIgBuVQmA+fJg+UzZWPSJj/hC1dCxO9W+XME6zDb6trzaU="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkCMEiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqxEhAAmSGkcm5GnwtP9LgfUJB7UyGq3biOdhoMANqcA4EyCInOsFBk\r\nEGZhLEpYHLnttOUG3wF75JmzedVOIt777tg9oFcNhNPhKqsCqlnZfv41HMhe\r\njWnjtezx/f5gcsAUvxy+LrqLoZw9P90X+yOEpth7mqyWqb8pQbLpqrfXobBD\r\nde75HawCynyxytlCkTnNy5jn2TiUGVi2c6d7W4Gc+YyiQXEg8lLFX0b9Ehi0\r\n3apaK5OFLM8RbcVs0SHjq1OGeQuYLrZJWbIhzjwYcAAWQBI5MM/EOVnFWW+r\r\neRU6KfyM3CE8j1BYzj2DwIc47ucJGhOhx5n3gbiQARlVW0TB0XFpnMZB7xrh\r\n6ULx6d6+pWIasR0SMBwfMXfhqbXKex1mQN5iO/8SquOYmtXtL3dCMyor7wLJ\r\nAspa+PkKSfJYw+s4Lp5CKZL+YYeKlhZuCU/SkebSd2I6L95FY6j7wvcHJxgN\r\nzld9o4bpEkiWbbgAsX6iXAB1Cy09WDUPJdNvW9OoKoZjPPC+MOJAFLdhmwC1\r\ngye6ElxGLNqB1pVLL/rsCwUV6PkA079sGyW4zRSzYc2q8QKOyStx8RJ5W0P1\r\nXco3fV7W+uFrpBz+fF+UAKwMMvtk8Gn7E+ELB5venn8s3anedSPsgsGX2C8v\r\nTu6B5aAx1w6pFTTCgantEErjDcM9dHGKIYI=\r\n=4a0Z\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_2.68.0_1678295330319_0.47051344875705836"
      },
      "_hasShrinkwrap": false
    },
    "1.196.0": {
      "name": "@aws-cdk/assert",
      "version": "1.196.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.196.0",
        "@aws-cdk/cdk-build-tools": "1.196.0",
        "@aws-cdk/pkglint": "1.196.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.196.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.196.0",
        "@aws-cdk/core": "1.196.0",
        "@aws-cdk/cx-api": "1.196.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.196.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src734463737/src/js/aws-cdk-assert-1.196.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.196.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-azeMZwY+6e6b0CCZDgKf33vleCIAvsbEmASN7MpyvLqFtKLPfZHbIb4fPyVNHHiVarphHsVzCO394yU6Vnwdew==",
        "shasum": "bdbead07f9bb9d54bcf137e50f44b94b300499e2",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.196.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHZmUsYitR/lj38UGxJ/6o8lvi7OmZv8TtqoexdfsCT5AiBKSjlyQkvOa/5Rm23pM6MNyh0/5sY31ttvegZCPOh7ng=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkCOSrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr5tw/8CJvqLbfmorW9WqMwY+Lo3lG+I4nmm0QyyqbE4nmSwnpAgRX3\r\nRIO1Fd8Lf0ovMhaga+2oP9Jzymzpb39aXs/4uC1OhyFSWn6kgeT6FCSVZj6z\r\nyTH36XnzPzJfEIgC92Wx+RIRyv6WA4Dnm0dv2WysCPl3sMX1VT8STw8YyL4j\r\nOFosd25uhFB1RAjfk/qycuv3oGvaY+J1UcMkZzC3+TY7Zczj5ccdKvVzIb6u\r\nDX4CDgRsfufzwKgMSVCNuuP6qAqTfPR6+BLWG5/z8qws8W7WU5R4y5I3jjhJ\r\noPW5UGtJw0GfDpgGs1bo9d44wR9/KhP3fW0eEX/KbObHHB7/P0GNyKzI2NQh\r\nPuLlWQYxuRL3VWlTJyeiSaqSiHqMJZY3dmB+15w1HYSodbX/AMKCJUXs07Br\r\nP1x3jstT7YLEMDU+zK+vmFnzYAd3oSPrFz/sq5drfyuyjrqIIsZntjbR6kTR\r\nraOBArhD46VGhh+i5YjuXQE9gvZtOq9YTmA7lyMWJcYRuutyQH7N/shomqhW\r\n4B/Usw7ABwwuqZAuR4EYKWR1aW+moxSemuCGd7xwkSbmRr4Ci/BtZMfa/kds\r\nLLnUzXg3CpRKPGaINgH+Exx0x12aSXEw0niPVScMKjrZYSCPFaYCR73et8rh\r\n/Ihxj3C/1uQ7MnUJeostII8D5hBMsF2HDk4=\r\n=bRaT\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.196.0_1678304427446_0.4978040092132794"
      },
      "_hasShrinkwrap": false
    },
    "1.197.0": {
      "name": "@aws-cdk/assert",
      "version": "1.197.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.197.0",
        "@aws-cdk/cdk-build-tools": "1.197.0",
        "@aws-cdk/pkglint": "1.197.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.197.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.197.0",
        "@aws-cdk/core": "1.197.0",
        "@aws-cdk/cx-api": "1.197.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.197.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src107462496/src/js/aws-cdk-assert-1.197.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.197.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-zl1kMCgFtbXK7PwsJEYe1s5MySLzvCLPYbWsL31Fx9YMY/oEsfVaVo6hB1x9xnsPuUcnPG4RQ5AN2WdsBVy3IQ==",
        "shasum": "8b1ef915c677bb009bee09fe2b06b58006f6e5d6",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.197.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDkxQBKrBy4FsBunENJC8YaTJQONmjbmQZz9pmFUnzZMwIhAMVgOPdLIsTy8L8qbpHxeNy5FhSjqa2D2zWjcVMBBq+G"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkENOBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoOvg/9FKEyuXheJH/zHUzVURuqjcJ/S0udmEwlLkUaFb4TaA6Gf4GZ\r\n3YLzuq44Ts/SUd70j/Q2N6DW2qvtoVauFuUa2SxUu/e5feyT73tHVaoPqn27\r\nsJdo3ebIzP5aOKYxa8GOLIl6sY7BcCFqNTqFDq4gbKTDaMNuenQair1CpzDN\r\nC6vg1cbmN3PGnw4uoJY88BJEf4ClIQM2xjLsmTlAvDi0DseeB120iget0coz\r\np2Hs/8UFLJxGxw+SqkQZjN1Dt4UUrHtqISDHkmvShXT6cnTlsuafRPW7Ld+Y\r\nzV4OJb21Ea7BPFvLkG/+56wnKF1ZLmCBYgcCD0VBQ2ZbTsBBMPLBhO1A15kq\r\nak2/P7Hv8nzLTewpHTVNmlxNsUFJ6nxwUowFySh6xJAzQN/VixTg3un03AFI\r\nb7W31VVnoiKqa1HpC+Ntb4S93+RmsYg/SjEUCRHDdxg8nXubwMvt6OC/Y1Ip\r\nEbIonQKrcXTb1Xqpix/bhnWom/l/y1/+CuMvdymWsYk3R8vOTADt7Fx+HL2Z\r\np81ahRSTRehkGhy9J1UQ2l1X6FTSIZqfjbGnnRRuJPptz1CIM5TD7lqrqU7x\r\nmdfiY798iXQ5s9De0BOXw3jftYcp/6Q8gsX3lY03K3FjQp1w0Y6H+Qb3wuEf\r\nWCjXW1kM2ODVG1zzxwpZkL4DgltBPyJ/5qQ=\r\n=ZQjb\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.197.0_1678824321063_0.3764979512279445"
      },
      "_hasShrinkwrap": false
    },
    "1.198.0": {
      "name": "@aws-cdk/assert",
      "version": "1.198.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.198.0",
        "@aws-cdk/cdk-build-tools": "1.198.0",
        "@aws-cdk/pkglint": "1.198.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.198.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.198.0",
        "@aws-cdk/core": "1.198.0",
        "@aws-cdk/cx-api": "1.198.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.198.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src780043721/src/js/aws-cdk-assert-1.198.0.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.198.0",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-LkZzZBALJfFJJBDCx1rJ4pDu/GacI2JNeG1idniRH5DJSSrAal0Uj80/pVAnH+DS4safqkbOPJ0NZgooEPAXbQ==",
        "shasum": "e875d5ae182c02de335fa05c0341c81d51d0e60e",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.198.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC/TqTSavmrTs8frK/R/xY5eX0Ur2bf7eP+euiaXA4ztwIhALux96qyAX8THlmaWCVaB47gKGo5L4+2nlkMY7wOIQp7"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkG4jnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqFOBAAgqfcTgH/MKmgK6mIDeJ+WU0Js0M+FqQLCRJ6SanGk9flOBel\r\npvPREwnx3rXsXiqyLQvyYBghKTmgdr3t8LfrFsTZuZowJiHpKepTWmUDpdtO\r\nMpAeqNwq48KlRh0ARMQbWNirlnMFzh3btzOkTcmyXVUHgTFEUiVYKzfrO67c\r\n1w8ewF8v63AzqM8GCBXWDulidrkjShm30BwspQGNwP43FPrXa2Wo+NjIJMwP\r\nCgnyhca2OBxjQVtCgbzxh+/PMOMstmIK3Kmv8bHs4TJTYKQOim5GGZ5WWAWZ\r\nv8a8mHOEFHsq4Q2vdEiknFR0FC+oewq5Y11rJaadfXjwrZuK2viQ6SYBLu+a\r\nWDXnpU3pAr1XF45HkorPVabcPk+4fepqRNAR6CBHqHNCswSPd77rGAioXiya\r\nHhHqYJOget/xgtezZxMVAhxKjUkEGOgPrtsywe5tqYjKTaK6hrf4MMx5FcYr\r\ndn3ZS2q2/WIO3NpJ9UgTCIuGaposXzfI38lwBTfOA/ng88diMGM0VfEMCS5o\r\ntPcuTqvTS77FWyNJrcgVqWP6pZFsWGiRg31kmvKIDktUcqlQzrZks1Rn+L1Q\r\nHd1WfsPR4JQtGjq1k0NNghqXAkPGvixGdhelmu+vE3qEckVjmXevHJlvbwJo\r\nnge1KGlvC/xfdnILIJmp42vNagBq9m9ihP0=\r\n=j++f\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.198.0_1679526119112_0.42131698183854627"
      },
      "_hasShrinkwrap": false
    },
    "1.198.1": {
      "name": "@aws-cdk/assert",
      "version": "1.198.1",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.198.1",
        "@aws-cdk/cdk-build-tools": "1.198.1",
        "@aws-cdk/pkglint": "1.198.1",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.198.1",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.198.1",
        "@aws-cdk/core": "1.198.1",
        "@aws-cdk/cx-api": "1.198.1",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.198.1",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:/codebuild/output/src380739832/src/js/aws-cdk-assert-1.198.1.tgz",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.198.1",
      "_nodeVersion": "14.19.3",
      "_npmVersion": "6.14.17",
      "dist": {
        "integrity": "sha512-9BjyKWrToNilPfzcxaHgZwMY1Z3Sr3pagQ5e+NzQEuVSyMO/EXsUYUp+2IIPCZ8qDtWCB7BC6N92kDnXviY/aQ==",
        "shasum": "6221b0e0b59fb0ac6dffb3b75e84f282215abd01",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.198.1.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDmswU5klJFpczhkriWxYZ4rg2QxCnmnnqawb+AUGaBhgIgFwyPSukLqcxIR/nkjESti552/6uHIQj3xLTIioo1VVo="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJv/OACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr2xg//X02UoU0CDTeNrVQ2bXo/uNm+pMht7cvbmTR1Ylws3WE9ltEX\r\nuj0EkvPUU6m/XbfZ6KGQii8Cil37k/t0JTthp26xtMi0Fflxr7iuZ3mb5YZa\r\n57YAe2UWfVOemvlTyy0dhHjLmgwL3J6rwwvvue5TT/LnZnJpRNudXtiNmVO3\r\nYUGc9lS1GLp7xukSJGjC2/5QABrmorbtFkdGx5peGnstWvV/EoU+jZtEqlMx\r\n1WxMFq6L0PZ4DE3EvBhqWruC9WsSsmTH6pt8Bj+5G4otSonjCNyDEQBfVGiL\r\nWvhV1yFi0YDzkKedFc4IwDcWVcVZqnLZU7qKv/uQf4sjMR398+6tF17aE+GW\r\nUzcPyNyVzdHvzVxrjT1/P9MB+rMiOGt13lkG9FKckYgEmin74A/BJj6Lgxdj\r\nBdYTD6ogHmaHx2Qm1+mSeLuwzwkMOHfNme65hv45e6GTIFrh9wMhAyTZgeFx\r\nRsltt8FFgHRXembMLzFgepBEDL7U0CrGPh6qBfxka5KJGD4YQUjEaj6j+x9h\r\nZv54XwAw6Ust9Qzy23hkzCLhb1JU4OSuVSbZyXmfjN06SEIDqkRhYEN11hI/\r\nS6ojif+yyHYgeEk4yzqJiDAjRCUpA/Xo5kq09aJS/TQJXJdWJGcmoQ+V1SmK\r\n9AUNLkEYDjh+dUA7wYKXo+YL3OlbdXiLv40=\r\n=wEo3\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.198.1_1680277454657_0.40242056559180184"
      },
      "_hasShrinkwrap": false
    },
    "1.199.0": {
      "name": "@aws-cdk/assert",
      "version": "1.199.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.199.0",
        "@aws-cdk/cdk-build-tools": "1.199.0",
        "@aws-cdk/pkglint": "1.199.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.199.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.199.0",
        "@aws-cdk/core": "1.199.0",
        "@aws-cdk/cx-api": "1.199.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.199.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.199.0",
      "_integrity": "sha512-10uYJ1ybWkKcryjPYzy4hmT/Dqvnq6H+0ga1vm8SFqi5snS/an2ITOg2rEG6KsMVfTqv1vxI5cwBgUWhkdJDQQ==",
      "_resolved": "/codebuild/output/src987680174/src/js/aws-cdk-assert-1.199.0.tgz",
      "_from": "file:/codebuild/output/src987680174/src/js/aws-cdk-assert-1.199.0.tgz",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-10uYJ1ybWkKcryjPYzy4hmT/Dqvnq6H+0ga1vm8SFqi5snS/an2ITOg2rEG6KsMVfTqv1vxI5cwBgUWhkdJDQQ==",
        "shasum": "791d20d22d8c97308e742ddd6a46feb90c5e8175",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.199.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCg4CxvPLaF2epp6dlU2PSXxikuLvcwSKfSG71ESzccmQIhAK+Hkuown/VoanJPIEBam2oosMa0w7ZHEtMsx7NxGpdA"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkQabMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoweA//fNm6CrU5Ytf1ky/I9nCqOqO2yK+4uCEDQRgINa7VZxmyq/6Y\r\n6Tv4mvEamGU8RfkC8hr4Z3ELR7lJvtPQ+rw6mkpFtLQYt0kJCDgDV2+8IODW\r\nylXnlv/lojpdxwKLpoOTJgb3qWCB4Z+EgneV9OEzAmpdOPTGX68/G/QMO4jb\r\niPIWgGkVrOwmzdN0TNC18m2mS1egyxz+LDRnUHVO8f7M8R9UL0t9jBcM5kZz\r\nb5t0CfJA8NmaC4FtTwIHGabkFek/kh3NK1J44uJeCWGXFfeJ15njwth+0zDe\r\nulP928gx0Z1aiOovgJSm7f/8zt1ZBWPJs15Yr7MsXRpKbLWAtk+Wczw6XSU7\r\nz6OuuprKWG7p0mWl8TczsaZGOMX0Hmwka211beCu4QSGQt8c6GzjhnmroRTm\r\ncYasSK1SdV2BxoaThBGO3uWeRnOZ8TlQw89bJvi+MW+fZO2FVViQjLrvKloZ\r\nPhgAGPWVvH8jwvKyFgeKiE4WtaequAXDMjDQjk/e8PKvqX31cEcAXKz2qiII\r\nRCqDxcRuQWJgFgX51r26EAG8mxohPWjrgNB2GxU+DkdW+xV1eQy0TGnhR/7h\r\ni77ejn55zQB6UJkEd0fFNc8O7hjiGs6RgFyy4uw0b+luVEqcJcwTrVZf7bV2\r\n7XLMO5RilvIfJx+6rZ7lCI2M7HRtbjdLgC0=\r\n=4pSW\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.199.0_1682024139844_0.5415277436615056"
      },
      "_hasShrinkwrap": false
    },
    "1.200.0": {
      "name": "@aws-cdk/assert",
      "version": "1.200.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.200.0",
        "@aws-cdk/cdk-build-tools": "1.200.0",
        "@aws-cdk/pkglint": "1.200.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.200.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.200.0",
        "@aws-cdk/core": "1.200.0",
        "@aws-cdk/cx-api": "1.200.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.200.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.200.0",
      "_integrity": "sha512-ljc9zAHmZy89O5dXEeAwlm5Sv5Hhm1LT207955PuAJJBVyP7LPkIVB6u4V496ewiR+Wr8LaDw3AlzrjxYJ81vQ==",
      "_resolved": "/codebuild/output/src953053059/src/js/aws-cdk-assert-1.200.0.tgz",
      "_from": "file:/codebuild/output/src953053059/src/js/aws-cdk-assert-1.200.0.tgz",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-ljc9zAHmZy89O5dXEeAwlm5Sv5Hhm1LT207955PuAJJBVyP7LPkIVB6u4V496ewiR+Wr8LaDw3AlzrjxYJ81vQ==",
        "shasum": "1c5f3f3149fdbb05e1b41b98cc1565d92441fcaa",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.200.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFOESR1gCm5L/Dl+zvYO09PsJVGy5Vqp30vkGrqYj6d5AiAV6Y7IyAk21awxzgjTQHtVmuaXawPQ2MjS1yW1GwwPiw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkSa2/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpA1Q/+N7WgjbNoA3pC0931LdslZzOIfFrf2zMO/A3073JgCuW/89ao\r\nRknzV2zyZBwVjdvkTB/Yn5se8SNAmPUvqflwHair+KT82eIDzFQ2U0ohh+0l\r\nV9Da8yod6b6UlQQDSAU8x3AFX7MxcY5Ilh6VuVLoHXoBj5Tlg8nGuMpkUXGc\r\nW5E9Ms47MxWcnOT0kLt6Tr3zmu0CvqHX48kmnb45XBQ9UNjH0Kw8EQcqZWqd\r\nRBXGyBANCle8zGjRe3dligA8nUKuc4Nhd7rdjneNHFedQf59xEOHw+LBnCgD\r\nh9BBJp0nUnnqohybsCe3dsZl3oowkFd1tGbHLGrW/ia7CXVtelUnbHo17sC3\r\nD+v29h+wTP+BEuknoxYXmW4XcbQi5VVQ4ZOXxkBck7CXQvVUsNvQOleEsu23\r\nK18AZcUS4Q0hZ4R/RF/Q+A2E/hjZO055JxxUjI0x+siUU+B6+fMaKsCM5FXU\r\nbMA1sg9YKCBBB59F9/W7e0GMUj+dMXxN4zGP25q7oPRV5Qlod5o4OAGE5cXG\r\nZrXiBA9RvKLlE3sg5EzcT7wdDs7pMBZ8uYZNLgJDgusZ1k6kP4+kDvvPu96d\r\nuA4SOaDxnYDLnZ7/pAUwEHmZTDZqnC6Ge60C1XYbv3esaOYEogIqB4NfNaxd\r\nbNekG6AmaaMx5QRKI+EWfa/o+UDsdkS1D+I=\r\n=BHuA\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.200.0_1682550206810_0.7265540680531648"
      },
      "_hasShrinkwrap": false
    },
    "1.201.0": {
      "name": "@aws-cdk/assert",
      "version": "1.201.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.201.0",
        "@aws-cdk/cdk-build-tools": "1.201.0",
        "@aws-cdk/pkglint": "1.201.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.201.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.201.0",
        "@aws-cdk/core": "1.201.0",
        "@aws-cdk/cx-api": "1.201.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.201.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.201.0",
      "_integrity": "sha512-2p96gjqneZoB3xxHrCmgfcxtVK5NXKTBt49q0wcQ2SUaRfzd9RS6Hwf0YQ1h86xPIueSXLwhL9eA0akPJ1cLfw==",
      "_resolved": "/codebuild/output/src336810203/src/js/aws-cdk-assert-1.201.0.tgz",
      "_from": "file:/codebuild/output/src336810203/src/js/aws-cdk-assert-1.201.0.tgz",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-2p96gjqneZoB3xxHrCmgfcxtVK5NXKTBt49q0wcQ2SUaRfzd9RS6Hwf0YQ1h86xPIueSXLwhL9eA0akPJ1cLfw==",
        "shasum": "c87cb6b4859a7c1348ab11b4083a5be9db7d5f60",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.201.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFIudAp7AdIQPvGs6R1S3K4yY/khBK+/aIKZbyDZfWkBAiBFnmJb2qrpioOgBPmR/Fshq95oCs6zTxHYViyEzBqQsA=="
          }
        ]
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.201.0_1683756909205_0.7518841273439687"
      },
      "_hasShrinkwrap": false
    },
    "1.202.0": {
      "name": "@aws-cdk/assert",
      "version": "1.202.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.202.0",
        "@aws-cdk/cdk-build-tools": "1.202.0",
        "@aws-cdk/pkglint": "1.202.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.202.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.202.0",
        "@aws-cdk/core": "1.202.0",
        "@aws-cdk/cx-api": "1.202.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.202.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.202.0",
      "_integrity": "sha512-wGFN83vzvCmaT7zPDl9P6WuUcHXnr+zA43uDgOKNFepvg40yWnCciZziBvBoRTgZM4GwYLWXnwtvmQZPN9oT/g==",
      "_resolved": "/codebuild/output/src679664424/src/js/aws-cdk-assert-1.202.0.tgz",
      "_from": "file:/codebuild/output/src679664424/src/js/aws-cdk-assert-1.202.0.tgz",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-wGFN83vzvCmaT7zPDl9P6WuUcHXnr+zA43uDgOKNFepvg40yWnCciZziBvBoRTgZM4GwYLWXnwtvmQZPN9oT/g==",
        "shasum": "529446b02cc3a1365e949f353d6e449190cbfdb9",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.202.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBfpV+do4q67No469kqp9x+KX3J9RX/Eoz+N7VHj30HIAiEA7cdi+AI7ONI/ZgWuJ38ZLlpQPGTHQNPFmSUJ0SZTLxU="
          }
        ]
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.202.0_1684767787872_0.5956055537247007"
      },
      "_hasShrinkwrap": false
    },
    "1.203.0": {
      "name": "@aws-cdk/assert",
      "version": "1.203.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.203.0",
        "@aws-cdk/cdk-build-tools": "1.203.0",
        "@aws-cdk/pkglint": "1.203.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.203.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.203.0",
        "@aws-cdk/core": "1.203.0",
        "@aws-cdk/cx-api": "1.203.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.203.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.203.0",
      "_integrity": "sha512-fr1ce67W9yOu7wnFfuV3iS4eWR4OriGO3tX1fYEij8zlL1RtO8lntMP3Wuf/Lo9GE0ovksSBoVWaBpK3C+6Hgg==",
      "_resolved": "/codebuild/output/src695992093/src/js/aws-cdk-assert-1.203.0.tgz",
      "_from": "file:/codebuild/output/src695992093/src/js/aws-cdk-assert-1.203.0.tgz",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-fr1ce67W9yOu7wnFfuV3iS4eWR4OriGO3tX1fYEij8zlL1RtO8lntMP3Wuf/Lo9GE0ovksSBoVWaBpK3C+6Hgg==",
        "shasum": "5aa7a813c99e3340e11c32c5960848112082410a",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.203.0.tgz",
        "fileCount": 38,
        "unpackedSize": 183977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCI/pdP/hubx4rjsfR1qTtOcpgQU0EWTfjlV+yhIHXbUQIhALquMGItpaQWDsYj5xlORCHRdPIxV8c6nTkaLU1K3WRQ"
          }
        ]
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.203.0_1685573543635_0.6989766549340286"
      },
      "_hasShrinkwrap": false
    },
    "1.204.0": {
      "name": "@aws-cdk/assert",
      "version": "1.204.0",
      "description": "An assertion library for use with CDK Apps",
      "main": "lib/index.js",
      "types": "lib/index.d.ts",
      "scripts": {
        "build": "cdk-build",
        "watch": "cdk-watch",
        "lint": "cdk-lint",
        "test": "cdk-test",
        "pkglint": "pkglint -f",
        "package": "cdk-package",
        "build+test+package": "yarn build+test && yarn package",
        "build+test": "yarn build && yarn test",
        "build+extract": "yarn build",
        "build+test+extract": "yarn build+test"
      },
      "cdk-build": {
        "pre": [
          "./clone.sh"
        ],
        "eslint": {
          "disable": true
        },
        "pkglint": {
          "disable": true
        }
      },
      "author": {
        "name": "Amazon Web Services",
        "url": "https://aws.amazon.com"
      },
      "license": "Apache-2.0",
      "devDependencies": {
        "@aws-cdk/assert-internal": "1.204.0",
        "@aws-cdk/cdk-build-tools": "1.204.0",
        "@aws-cdk/pkglint": "1.204.0",
        "@types/jest": "^27.5.2",
        "aws-cdk-migration": "1.204.0",
        "constructs": "^3.3.69",
        "jest": "^27.5.1",
        "ts-jest": "^27.1.5"
      },
      "dependencies": {
        "@aws-cdk/cloudformation-diff": "1.204.0",
        "@aws-cdk/core": "1.204.0",
        "@aws-cdk/cx-api": "1.204.0",
        "constructs": "^3.3.69"
      },
      "peerDependencies": {
        "@aws-cdk/core": "1.204.0",
        "constructs": "^3.3.69",
        "jest": ">=26.6.3"
      },
      "repository": {
        "url": "git+https://github.com/aws/aws-cdk.git",
        "type": "git",
        "directory": "packages/@aws-cdk/assert"
      },
      "keywords": [
        "aws",
        "cdk"
      ],
      "homepage": "https://github.com/aws/aws-cdk",
      "engines": {
        "node": ">= 14.15.0"
      },
      "ubergen": {
        "exclude": true
      },
      "nozem": false,
      "stability": "deprecated",
      "maturity": "deprecated",
      "publishConfig": {
        "tag": "latest-1"
      },
      "deprecated": "AWS CDK v1 has reached End-of-Support on 2023-06-01.\nThis package is no longer being updated, and users should migrate to AWS CDK v2.\n\nFor more information on how to migrate, see https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html",
      "readme": "# Testing utilities and assertions for CDK libraries\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Deprecated](https://img.shields.io/badge/deprecated-critical.svg?style=for-the-badge)\n\n > This API may emit warnings. Backward compatibility is not guaranteed.\n\n## Replacement recommended\n\nThis library has been deprecated. We recommend you use the\n[@aws-cdk/assertions](https://docs.aws.amazon.com/cdk/api/v1/docs/assertions-readme.html) module instead.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains helpers for writing unit tests and integration tests for CDK libraries\n\n## Unit tests\n\nWrite your unit tests like this:\n\n```ts\nconst stack = new Stack();\n\nnew MyConstruct(stack, 'MyConstruct', {\n    ...\n});\n\nexpect(stack).to(someExpectation(...));\n```\n\nHere are the expectations you can use:\n\n## Verify (parts of) a template\n\nCheck that the synthesized stack template looks like the given template, or is a superset of it. These functions match logical IDs and all properties of a resource.\n\n```ts\nmatchTemplate(template, matchStyle)\nexactlyMatchTemplate(template)\nbeASupersetOfTemplate(template)\n```\n\nExample:\n\n```ts\nexpect(stack).to(beASupersetOfTemplate({\n    Resources: {\n        HostedZone674DD2B7: {\n            Type: \"AWS::Route53::HostedZone\",\n            Properties: {\n                Name: \"test.private.\",\n                VPCs: [{\n                    VPCId: { Ref: 'VPC06C5F037' },\n                    VPCRegion: { Ref: 'AWS::Region' }\n                }]\n            }\n        }\n    }\n}));\n```\n\n\n## Check existence of a resource\n\nIf you only care that a resource of a particular type exists (regardless of its logical identifier), and that *some* of its properties are set to specific values:\n\n```ts\nhaveResource(type, subsetOfProperties)\nhaveResourceLike(type, subsetOfProperties)\n```\n\nExample:\n\n```ts\nexpect(stack).to(haveResource('AWS::CertificateManager::Certificate', {\n    DomainName: 'test.example.com',\n    // Note: some properties omitted here\n\n    ShouldNotExist: ABSENT\n}));\n```\n\nThe object you give to `haveResource`/`haveResourceLike` like can contain the\nfollowing values:\n\n- **Literal values**: the given property in the resource must match the given value *exactly*.\n- `ABSENT`: a magic value to assert that a particular key in an object is *not* set (or set to `undefined`).\n- special matchers for inexact matching. You can use these to match values based on more lenient conditions\n  than the default (such as an array containing at least one element, ignoring the rest, or an inexact string\n  match).\n\nThe following matchers exist:\n\n- `objectLike(O)` - the value has to be an object matching at least the keys in `O` (but may contain\n  more). The nested values must match exactly.\n- `deepObjectLike(O)` - as `objectLike`, but nested objects are also treated as partial specifications.\n- `exactValue(X)` - must match exactly the given value. Use this to escape from `deepObjectLike`'s leniency\n  back to exact value matching.\n- `arrayWith(E, [F, ...])` - value must be an array containing the given elements (or matchers) in any order.\n- `stringLike(S)` - value must be a string matching `S`. `S` may contain `*` as wildcard to match any number\n  of characters. Multiline strings are supported.\n- `anything()` - matches any value.\n- `notMatching(M)` - any value that does NOT match the given matcher (or exact value) given.\n- `encodedJson(M)` - value must be a string which, when decoded as JSON, matches the given matcher or\n  exact value.\n\nSlightly more complex example with array matchers:\n\n```ts\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  PolicyDocument: {\n    Statement: arrayWith(objectLike({\n      Action: ['s3:GetObject'],\n      Resource: ['arn:my:arn'],\n    }})\n  }\n}));\n```\n\n## Capturing values from a match\n\nSpecial `Capture` matchers exist to capture values encountered during a match. These can be\nused for two typical purposes:\n\n- Apply additional assertions to the values found during a matching operation.\n- Use the value found during a matching operation in a new matching operation.\n\n`Capture` matchers take an inner matcher as an argument, and will only capture the value\nif the inner matcher succeeds in matching the given value.\n\nHere's an example which asserts that a policy for `RoleA` contains two statements\nwith *different* ARNs (without caring what those ARNs might be), and that\na policy for `RoleB` *also* has a statement for one of those ARNs (again, without\ncaring what the ARN might be):\n\n```ts\nconst arn1 = Capture.aString();\nconst arn2 = Capture.aString();\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleA'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        Resource: [arn1.capture()],\n      }),\n      objectLike({\n        Resource: [arn2.capture()],\n      }),\n    ],\n  },\n}));\n\n// Don't care about the values as long as they are not the same\nexpect(arn1.capturedValue).not.toEqual(arn2.capturedValue);\n\nexpect(stack).to(haveResourceLike('AWS::IAM::Policy', {\n  Roles: ['RoleB'],\n  PolicyDocument: {\n    Statement: [\n      objectLike({\n        // This ARN must be the same as ARN1 above.\n        Resource: [arn1.capturedValue]\n      }),\n    ],\n  },\n}));\n```\n\nNOTE: `Capture` look somewhat like *bindings* in other pattern matching\nlibraries you might be used to, but they are far simpler and very\ndeterministic. In particular, they don't do unification: if the same Capture\nis either used multiple times in the same structure expression or matches\nmultiple times, no restarting of the match is done to make them all match the\nsame value: the last value encountered by the `Capture` (as determined by the\nbehavior of the matchers around it) is stored into it and will be the one\navailable after the match has completed.\n\n## Check number of resources\n\nIf you want to assert that `n` number of resources of a particular type exist, with or without specific properties:\n\n```ts\ncountResources(type, count)\ncountResourcesLike(type, count, props)\n```\n\nExample:\n\n```ts\nexpect(stack).to(countResources('AWS::ApiGateway::Method', 3));\nexpect(stack).to(countResourcesLike('AWS::ApiGateway::Method', 1, {\n  HttpMethod: 'GET',\n  ResourceId: {\n    \"Ref\": \"MyResource01234\"\n  }\n}));\n```\n\n## Check existence of an output\n\n`haveOutput` assertion can be used to check that a stack contains specific output.\nParameters to check against can be:\n\n- `outputName`\n- `outputValue`\n- `exportName`\n\nIf `outputValue` is provided, at least one of `outputName`, `exportName` should be provided as well\n\nExample\n\n```ts\nexpect(synthStack).to(haveOutput({\n  outputName: 'TestOutputName',\n  exportName: 'TestOutputExportName',\n  outputValue: {\n    'Fn::GetAtt': [\n      'TestResource',\n      'Arn'\n    ]\n  }\n}));\n```\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/aws/aws-cdk/issues"
      },
      "_id": "@aws-cdk/assert@1.204.0",
      "_integrity": "sha512-uBX/4V6201aJ9Re/O2UEesIUCJSk0YIrB4w/LbpLe1zxVrOv9pytxVARVAuKRZHnTsgmcc+u1fVPW5wixy0l4Q==",
      "_resolved": "/codebuild/output/src199839234/src/js/aws-cdk-assert-1.204.0.tgz",
      "_from": "file:/codebuild/output/src199839234/src/js/aws-cdk-assert-1.204.0.tgz",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-uBX/4V6201aJ9Re/O2UEesIUCJSk0YIrB4w/LbpLe1zxVrOv9pytxVARVAuKRZHnTsgmcc+u1fVPW5wixy0l4Q==",
        "shasum": "3e7c5f89ac2c4758f57dafd5a78ebb7bfcf926a8",
        "tarball": "https://registry.npmjs.org/@aws-cdk/assert/-/assert-1.204.0.tgz",
        "fileCount": 38,
        "unpackedSize": 184237,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGdEbts7WEHk6vpaLbTrafVtHulZXiBkpq04YlE7mrUXAiBAKIH9B2OlbcQbrJq9uZvGxfJLUIewbrHmQ8L2gasG8w=="
          }
        ]
      },
      "_npmUser": {
        "name": "aws-cdk-team",
        "email": "aws-cdk-dev@amazon.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "romainmuller",
          "email": "romain.muller@telecomnancy.net"
        },
        {
          "name": "amzn-oss",
          "email": "osa-3p@amazon.com"
        },
        {
          "name": "rix0rrr",
          "email": "rix0rrr@gmail.com"
        },
        {
          "name": "aws-cdk-team",
          "email": "aws-cdk-dev@amazon.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/assert_1.204.0_1687208125688_0.7301127898992965"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2018-07-31T13:26:58.589Z",
    "0.8.0": "2018-07-31T13:26:58.791Z",
    "modified": "2023-11-21T10:13:39.724Z",
    "0.8.1": "2018-08-09T09:55:42.247Z",
    "0.8.2": "2018-08-15T14:50:23.846Z",
    "0.9.0": "2018-09-11T11:41:55.034Z",
    "0.9.1": "2018-09-14T09:44:13.881Z",
    "0.9.2": "2018-09-20T21:07:54.574Z",
    "0.10.0": "2018-09-27T22:04:06.225Z",
    "0.11.0": "2018-10-11T18:19:34.924Z",
    "0.12.0": "2018-10-12T10:14:42.697Z",
    "0.13.0": "2018-10-19T14:21:09.754Z",
    "0.14.0": "2018-10-26T13:48:53.879Z",
    "0.14.1": "2018-10-26T18:21:23.243Z",
    "0.15.0": "2018-11-06T17:51:45.564Z",
    "0.15.1": "2018-11-06T21:37:09.827Z",
    "0.15.2": "2018-11-08T13:33:54.030Z",
    "0.16.0": "2018-11-12T20:21:36.041Z",
    "0.17.0": "2018-11-14T10:16:08.687Z",
    "0.18.0": "2018-11-19T13:50:51.882Z",
    "0.18.1": "2018-11-21T13:07:29.140Z",
    "0.19.0": "2018-12-04T12:47:32.211Z",
    "0.20.0": "2018-12-13T10:52:14.870Z",
    "0.21.0": "2018-12-20T14:00:59.017Z",
    "0.22.0": "2019-01-11T10:24:01.325Z",
    "0.23.0": "2019-02-04T15:21:24.850Z",
    "0.24.0": "2019-02-07T11:43:46.559Z",
    "0.24.1": "2019-02-07T17:26:21.945Z",
    "0.25.0": "2019-02-28T12:08:31.442Z",
    "0.25.1": "2019-03-05T00:42:18.144Z",
    "0.25.2": "2019-03-07T22:54:12.113Z",
    "0.25.3": "2019-03-12T15:10:17.700Z",
    "0.26.0": "2019-03-20T13:41:05.049Z",
    "0.27.0": "2019-03-28T22:25:12.952Z",
    "0.28.0": "2019-04-04T16:01:56.263Z",
    "0.29.0": "2019-04-24T21:46:27.469Z",
    "0.30.0": "2019-05-02T10:56:01.290Z",
    "0.31.0": "2019-05-07T08:14:21.995Z",
    "0.32.0": "2019-05-24T11:05:35.021Z",
    "0.33.0": "2019-05-30T15:57:17.078Z",
    "0.34.0": "2019-06-10T15:47:20.912Z",
    "0.35.0": "2019-06-19T17:13:05.219Z",
    "0.36.0": "2019-06-25T15:16:44.144Z",
    "0.36.1": "2019-07-01T18:11:38.563Z",
    "0.36.2": "2019-07-03T13:44:02.132Z",
    "0.37.0": "2019-07-04T20:37:13.913Z",
    "0.38.0": "2019-07-08T14:20:20.276Z",
    "0.39.0": "2019-07-09T00:43:03.400Z",
    "1.0.0": "2019-07-11T15:18:11.518Z",
    "1.1.0": "2019-07-19T21:33:38.691Z",
    "1.2.0": "2019-07-25T17:56:55.932Z",
    "1.3.0": "2019-08-02T11:16:09.451Z",
    "1.4.0": "2019-08-14T08:21:34.599Z",
    "1.5.0": "2019-08-21T11:32:00.222Z",
    "1.6.0": "2019-08-27T18:19:48.534Z",
    "1.6.1": "2019-08-29T14:40:24.586Z",
    "1.7.0": "2019-09-06T02:00:09.757Z",
    "1.8.0": "2019-09-10T22:10:05.916Z",
    "1.9.0": "2019-09-20T10:47:56.389Z",
    "1.10.0": "2019-09-30T09:23:06.659Z",
    "1.10.1": "2019-10-01T15:32:49.207Z",
    "1.11.0": "2019-10-02T19:14:13.298Z",
    "1.12.0": "2019-10-07T16:30:59.743Z",
    "1.13.0": "2019-10-15T13:19:29.813Z",
    "1.13.1": "2019-10-15T20:42:04.147Z",
    "1.14.0": "2019-10-22T07:39:29.354Z",
    "1.15.0": "2019-10-28T13:19:11.828Z",
    "1.16.0": "2019-11-11T18:15:00.085Z",
    "1.16.1": "2019-11-12T00:52:56.514Z",
    "1.16.2": "2019-11-12T12:59:16.542Z",
    "1.16.3": "2019-11-13T15:35:21.292Z",
    "1.17.0": "2019-11-19T18:06:04.015Z",
    "1.17.1": "2019-11-19T22:01:40.270Z",
    "1.18.0": "2019-11-25T16:47:41.143Z",
    "1.19.0": "2019-12-17T15:12:06.543Z",
    "1.20.0": "2020-01-08T00:07:19.200Z",
    "1.21.0": "2020-01-16T02:55:24.203Z",
    "1.21.1": "2020-01-16T19:39:34.151Z",
    "1.22.0": "2020-01-23T19:14:55.935Z",
    "1.23.0": "2020-02-07T03:52:10.321Z",
    "1.24.0": "2020-02-14T10:19:21.885Z",
    "1.25.0": "2020-02-19T09:58:49.731Z",
    "1.26.0": "2020-02-26T10:03:41.982Z",
    "1.27.0": "2020-03-03T12:49:17.363Z",
    "1.28.0": "2020-03-16T09:46:34.212Z",
    "1.29.0": "2020-03-18T11:32:18.114Z",
    "1.30.0": "2020-03-18T18:11:35.674Z",
    "1.31.0": "2020-03-24T21:22:30.295Z",
    "1.32.0": "2020-04-07T13:31:02.393Z",
    "1.32.1": "2020-04-09T12:50:03.534Z",
    "1.32.2": "2020-04-10T15:37:44.416Z",
    "1.33.0": "2020-04-17T20:19:39.252Z",
    "1.33.1": "2020-04-19T14:05:37.275Z",
    "1.34.0": "2020-04-21T18:20:16.399Z",
    "1.34.1": "2020-04-22T04:49:27.368Z",
    "1.35.0": "2020-04-24T12:37:56.698Z",
    "1.36.0": "2020-04-28T12:11:43.466Z",
    "1.36.1": "2020-04-29T23:57:59.110Z",
    "1.37.0": "2020-05-05T16:49:26.632Z",
    "1.38.0": "2020-05-08T06:37:55.245Z",
    "1.39.0": "2020-05-16T01:52:44.108Z",
    "1.40.0": "2020-05-20T14:47:43.328Z",
    "1.41.0": "2020-05-21T12:14:24.957Z",
    "1.42.0": "2020-05-27T12:38:33.986Z",
    "1.42.1": "2020-06-01T17:56:39.368Z",
    "1.43.0": "2020-06-04T02:09:17.892Z",
    "1.44.0": "2020-06-04T15:34:17.823Z",
    "1.45.0": "2020-06-09T17:56:37.039Z",
    "1.46.0": "2020-06-20T03:03:16.663Z",
    "1.47.0": "2020-06-24T20:10:44.170Z",
    "1.47.1": "2020-06-30T11:47:19.577Z",
    "1.48.0": "2020-07-01T10:59:32.995Z",
    "1.49.0": "2020-07-02T13:23:42.364Z",
    "1.49.1": "2020-07-02T19:09:56.447Z",
    "1.50.0": "2020-07-07T14:40:45.986Z",
    "1.51.0": "2020-07-09T14:44:30.512Z",
    "1.52.0": "2020-07-18T03:01:02.418Z",
    "1.53.0": "2020-07-20T12:16:48.842Z",
    "1.54.0": "2020-07-22T11:14:38.481Z",
    "1.55.0": "2020-07-28T22:42:21.615Z",
    "1.56.0": "2020-08-01T00:55:37.978Z",
    "1.57.0": "2020-08-07T21:03:34.099Z",
    "1.58.0": "2020-08-12T20:23:20.237Z",
    "1.59.0": "2020-08-15T01:05:46.804Z",
    "1.60.0": "2020-08-20T00:54:30.660Z",
    "1.61.0": "2020-08-27T09:57:36.279Z",
    "1.61.1": "2020-08-28T11:44:01.146Z",
    "1.62.0": "2020-09-04T08:02:05.775Z",
    "1.63.0": "2020-09-14T09:09:33.027Z",
    "1.64.0": "2020-09-24T08:45:05.852Z",
    "1.64.1": "2020-09-25T19:26:40.512Z",
    "1.65.0": "2020-10-01T03:25:00.954Z",
    "1.66.0": "2020-10-02T21:50:46.229Z",
    "1.67.0": "2020-10-07T21:40:12.839Z",
    "1.68.0": "2020-10-15T19:57:33.718Z",
    "1.69.0": "2020-10-19T22:16:15.630Z",
    "1.70.0": "2020-10-24T01:01:28.663Z",
    "1.71.0": "2020-10-29T20:17:26.301Z",
    "1.72.0": "2020-11-06T05:48:19.653Z",
    "1.73.0": "2020-11-11T13:58:39.086Z",
    "1.74.0": "2020-11-17T12:07:24.558Z",
    "1.75.0": "2020-11-24T23:38:47.939Z",
    "1.76.0": "2020-12-01T19:48:17.419Z",
    "1.77.0": "2020-12-07T13:30:52.953Z",
    "1.78.0": "2020-12-12T03:12:15.448Z",
    "1.79.0": "2020-12-17T12:11:54.695Z",
    "1.80.0": "2020-12-22T13:30:56.538Z",
    "1.81.0": "2020-12-31T00:16:40.564Z",
    "1.82.0": "2021-01-03T10:57:42.211Z",
    "1.83.0": "2021-01-06T16:36:08.844Z",
    "1.84.0": "2021-01-12T22:22:20.348Z",
    "1.85.0": "2021-01-14T22:25:33.097Z",
    "1.86.0": "2021-01-21T15:12:42.147Z",
    "1.87.0": "2021-01-27T12:38:49.203Z",
    "1.87.1": "2021-01-28T17:54:31.489Z",
    "1.88.0": "2021-02-04T01:03:01.543Z",
    "1.89.0": "2021-02-09T16:41:06.583Z",
    "1.90.0": "2021-02-17T23:58:58.173Z",
    "1.90.1": "2021-02-19T19:45:52.359Z",
    "1.91.0": "2021-02-23T13:17:32.092Z",
    "1.92.0": "2021-03-06T04:20:20.302Z",
    "1.93.0": "2021-03-11T15:14:58.474Z",
    "1.94.0": "2021-03-16T16:33:17.859Z",
    "1.94.1": "2021-03-17T01:30:32.309Z",
    "1.95.0": "2021-03-25T12:49:23.536Z",
    "1.95.1": "2021-03-26T01:01:49.352Z",
    "1.95.2": "2021-04-01T07:10:24.217Z",
    "1.96.0": "2021-04-01T15:30:11.593Z",
    "1.97.0": "2021-04-06T15:21:09.748Z",
    "1.98.0": "2021-04-12T11:25:18.967Z",
    "2.0.0-alpha.10": "2021-04-16T13:58:09.466Z",
    "1.99.0": "2021-04-19T10:45:08.013Z",
    "2.0.0-alpha.11": "2021-04-19T11:26:24.283Z",
    "1.100.0": "2021-04-20T17:58:25.406Z",
    "2.0.0-alpha.12": "2021-04-21T03:05:24.479Z",
    "2.0.0-alpha.13": "2021-04-21T10:35:07.073Z",
    "2.0.0-alpha.14": "2021-04-28T11:14:15.913Z",
    "1.101.0": "2021-04-28T12:25:59.448Z",
    "2.0.0-rc.1": "2021-04-29T09:55:20.697Z",
    "1.102.0": "2021-05-04T13:30:23.863Z",
    "1.103.0": "2021-05-10T23:01:35.163Z",
    "2.0.0-rc.3": "2021-05-12T19:35:31.420Z",
    "1.104.0": "2021-05-15T00:05:04.382Z",
    "1.105.0": "2021-05-19T11:44:21.824Z",
    "2.0.0-rc.4": "2021-05-19T15:40:45.098Z",
    "1.106.0": "2021-05-25T19:51:09.438Z",
    "1.106.1": "2021-05-26T21:12:58.501Z",
    "2.0.0-rc.5": "2021-05-28T17:50:58.186Z",
    "2.0.0-rc.6": "2021-06-02T10:42:54.590Z",
    "1.107.0": "2021-06-02T19:24:35.082Z",
    "2.0.0-rc.7": "2021-06-09T10:44:44.313Z",
    "1.108.0": "2021-06-09T12:26:12.500Z",
    "1.108.1": "2021-06-11T16:43:51.047Z",
    "2.0.0-rc.8": "2021-06-16T10:52:11.116Z",
    "1.109.0": "2021-06-17T01:52:09.155Z",
    "2.0.0-rc.9": "2021-06-23T10:46:27.052Z",
    "1.110.0": "2021-06-24T12:02:13.284Z",
    "1.110.1": "2021-06-28T22:47:01.850Z",
    "2.0.0-rc.10": "2021-06-30T10:48:34.835Z",
    "1.111.0": "2021-07-02T01:58:38.588Z",
    "2.0.0-rc.11": "2021-07-07T10:45:42.444Z",
    "1.112.0": "2021-07-09T20:50:50.669Z",
    "1.113.0": "2021-07-12T15:46:10.988Z",
    "1.114.0": "2021-07-15T13:46:21.501Z",
    "2.0.0-rc.12": "2021-07-19T17:36:40.354Z",
    "2.0.0-rc.13": "2021-07-20T08:10:42.543Z",
    "2.0.0-rc.14": "2021-07-21T11:11:49.072Z",
    "1.115.0": "2021-07-21T17:30:52.114Z",
    "2.0.0-rc.15": "2021-07-28T12:33:35.564Z",
    "1.116.0": "2021-07-28T13:31:09.031Z",
    "2.0.0-rc.16": "2021-08-04T17:38:22.069Z",
    "1.117.0": "2021-08-05T12:59:06.005Z",
    "1.118.0": "2021-08-11T02:26:52.851Z",
    "2.0.0-rc.17": "2021-08-11T11:24:39.458Z",
    "1.119.0": "2021-08-17T21:44:32.629Z",
    "2.0.0-rc.18": "2021-08-18T11:14:31.365Z",
    "2.0.0-rc.19": "2021-08-25T11:15:24.656Z",
    "1.120.0": "2021-08-26T13:48:18.218Z",
    "2.0.0-rc.20": "2021-09-01T11:17:23.958Z",
    "1.121.0": "2021-09-01T12:52:00.642Z",
    "2.0.0-rc.21": "2021-09-08T11:19:48.214Z",
    "1.122.0": "2021-09-08T22:27:07.101Z",
    "1.123.0": "2021-09-17T02:20:14.596Z",
    "1.124.0": "2021-09-21T21:47:36.530Z",
    "2.0.0-rc.22": "2021-09-22T21:47:51.231Z",
    "2.0.0-rc.23": "2021-09-23T00:19:26.588Z",
    "1.125.0": "2021-09-29T22:13:22.380Z",
    "1.126.0": "2021-10-05T15:18:19.524Z",
    "1.127.0": "2021-10-08T20:26:44.968Z",
    "2.0.0-rc.24": "2021-10-13T22:23:05.112Z",
    "1.128.0": "2021-10-14T07:26:06.100Z",
    "1.129.0": "2021-10-21T21:43:01.640Z",
    "2.0.0-rc.25": "2021-10-22T13:48:03.828Z",
    "2.0.0-rc.26": "2021-10-26T11:16:28.877Z",
    "2.0.0-rc.27": "2021-10-27T11:56:33.773Z",
    "1.130.0": "2021-10-29T19:31:59.581Z",
    "1.131.0": "2021-11-07T13:11:48.774Z",
    "1.132.0": "2021-11-09T14:06:35.310Z",
    "2.0.0-rc.28": "2021-11-09T18:39:17.829Z",
    "2.0.0-rc.29": "2021-11-10T11:48:46.852Z",
    "2.0.0-rc.30": "2021-11-17T11:49:37.753Z",
    "1.133.0": "2021-11-19T23:07:45.468Z",
    "1.134.0": "2021-11-23T16:18:46.219Z",
    "2.0.0-rc.31": "2021-11-23T21:07:36.978Z",
    "2.0.0-rc.32": "2021-11-25T21:53:34.517Z",
    "2.0.0-rc.33": "2021-11-26T14:39:21.340Z",
    "2.0.0": "2021-12-02T08:51:34.422Z",
    "2.1.0": "2021-12-08T13:56:26.819Z",
    "1.135.0": "2021-12-10T20:40:40.597Z",
    "1.136.0": "2021-12-15T11:49:56.009Z",
    "2.2.0": "2021-12-15T12:11:39.707Z",
    "1.137.0": "2021-12-21T18:26:35.366Z",
    "2.3.0": "2021-12-22T12:29:01.974Z",
    "1.138.0": "2022-01-04T19:20:06.162Z",
    "2.4.0": "2022-01-06T12:39:29.359Z",
    "1.138.1": "2022-01-07T16:54:15.092Z",
    "2.5.0": "2022-01-09T21:29:06.253Z",
    "1.138.2": "2022-01-10T00:24:57.303Z",
    "1.139.0": "2022-01-11T19:51:11.655Z",
    "2.6.0": "2022-01-12T12:20:25.680Z",
    "2.7.0": "2022-01-12T17:31:37.538Z",
    "2.8.0": "2022-01-13T19:05:57.255Z",
    "1.140.0": "2022-01-20T21:46:06.101Z",
    "2.9.0": "2022-01-26T12:25:36.679Z",
    "1.141.0": "2022-01-27T13:46:20.627Z",
    "1.142.0": "2022-01-29T00:47:50.469Z",
    "2.10.0": "2022-01-29T06:30:19.801Z",
    "1.143.0": "2022-02-02T12:49:44.508Z",
    "2.11.0": "2022-02-08T17:14:14.284Z",
    "1.144.0": "2022-02-08T21:41:33.553Z",
    "2.12.0": "2022-02-09T03:05:53.782Z",
    "2.13.0": "2022-02-19T02:16:52.676Z",
    "1.145.0": "2022-02-19T02:23:05.767Z",
    "1.146.0": "2022-02-25T01:25:03.690Z",
    "2.14.0": "2022-02-25T02:59:09.447Z",
    "1.147.0": "2022-03-01T04:31:03.180Z",
    "2.15.0": "2022-03-01T07:11:41.923Z",
    "1.148.0": "2022-03-10T04:30:26.362Z",
    "2.16.0": "2022-03-12T01:18:58.946Z",
    "1.149.0": "2022-03-17T14:28:02.576Z",
    "2.17.0": "2022-03-17T14:57:09.279Z",
    "1.150.0": "2022-03-26T18:36:13.964Z",
    "2.18.0": "2022-03-29T00:57:56.189Z",
    "1.151.0": "2022-04-01T04:08:53.471Z",
    "2.19.0": "2022-04-01T04:09:50.867Z",
    "1.152.0": "2022-04-07T14:40:49.442Z",
    "2.20.0": "2022-04-07T14:42:10.664Z",
    "1.153.0": "2022-04-22T12:02:01.734Z",
    "2.21.0": "2022-04-22T12:04:20.839Z",
    "1.153.1": "2022-04-23T04:14:12.009Z",
    "2.21.1": "2022-04-23T04:15:43.692Z",
    "2.22.0": "2022-04-28T01:55:40.613Z",
    "1.154.0": "2022-04-28T01:58:22.206Z",
    "1.155.0": "2022-05-04T22:32:00.734Z",
    "2.23.0": "2022-05-04T22:33:12.388Z",
    "1.156.0": "2022-05-12T11:32:52.009Z",
    "2.24.0": "2022-05-12T11:34:23.555Z",
    "1.156.1": "2022-05-13T04:33:56.917Z",
    "2.24.1": "2022-05-13T04:34:31.967Z",
    "1.157.0": "2022-05-21T02:46:27.027Z",
    "2.25.0": "2022-05-21T02:47:49.789Z",
    "1.158.0": "2022-05-27T18:56:47.578Z",
    "2.26.0": "2022-05-30T20:31:12.395Z",
    "2.27.0": "2022-06-03T02:07:38.881Z",
    "1.159.0": "2022-06-03T02:34:10.288Z",
    "2.28.0": "2022-06-14T13:35:09.772Z",
    "1.160.0": "2022-06-14T16:35:01.016Z",
    "2.28.1": "2022-06-16T00:31:39.737Z",
    "2.29.0": "2022-06-23T00:14:28.016Z",
    "1.161.0": "2022-06-23T02:06:25.198Z",
    "2.29.1": "2022-06-24T23:21:50.090Z",
    "1.162.0": "2022-07-01T12:25:55.715Z",
    "2.30.0": "2022-07-01T15:09:51.946Z",
    "2.31.0": "2022-07-06T21:48:32.025Z",
    "1.163.0": "2022-07-06T22:29:12.878Z",
    "2.31.1": "2022-07-09T02:21:04.888Z",
    "1.163.1": "2022-07-09T04:01:33.580Z",
    "1.163.2": "2022-07-14T00:42:55.630Z",
    "2.31.2": "2022-07-14T01:38:39.425Z",
    "2.32.0": "2022-07-14T21:17:18.806Z",
    "1.164.0": "2022-07-16T02:23:46.588Z",
    "2.32.1": "2022-07-16T03:30:40.930Z",
    "2.33.0": "2022-07-19T20:44:56.805Z",
    "1.165.0": "2022-07-19T21:53:28.149Z",
    "2.34.0": "2022-07-29T10:37:09.181Z",
    "2.34.1": "2022-07-29T17:15:18.138Z",
    "1.166.1": "2022-07-29T17:58:44.584Z",
    "2.34.2": "2022-07-30T01:13:50.549Z",
    "2.35.0": "2022-08-02T21:05:39.940Z",
    "1.167.0": "2022-08-02T23:27:22.105Z",
    "2.36.0": "2022-08-08T22:01:01.330Z",
    "2.37.0": "2022-08-09T21:23:58.957Z",
    "1.168.0": "2022-08-09T21:57:14.706Z",
    "2.37.1": "2022-08-10T21:29:30.120Z",
    "2.38.0": "2022-08-17T12:00:05.531Z",
    "1.169.0": "2022-08-18T07:42:48.027Z",
    "2.38.1": "2022-08-18T21:59:03.022Z",
    "2.39.0": "2022-08-25T21:31:33.672Z",
    "1.170.0": "2022-08-25T23:25:33.741Z",
    "2.39.1": "2022-08-29T23:36:03.872Z",
    "1.170.1": "2022-08-31T00:14:39.699Z",
    "1.171.0": "2022-08-31T23:14:42.144Z",
    "2.40.0": "2022-09-01T00:51:17.518Z",
    "2.41.0": "2022-09-08T00:15:20.039Z",
    "1.172.0": "2022-09-08T02:37:04.424Z",
    "2.42.0": "2022-09-16T18:46:08.997Z",
    "1.173.0": "2022-09-16T21:45:07.256Z",
    "2.42.1": "2022-09-19T21:40:49.285Z",
    "2.43.0": "2022-09-21T23:12:32.729Z",
    "1.174.0": "2022-09-22T01:29:52.012Z",
    "2.43.1": "2022-09-23T12:59:51.809Z",
    "1.175.0": "2022-09-29T11:31:41.283Z",
    "2.44.0": "2022-09-29T11:35:12.054Z",
    "2.45.0": "2022-10-06T10:22:16.786Z",
    "1.176.0": "2022-10-06T16:31:58.302Z",
    "2.46.0": "2022-10-13T21:03:32.799Z",
    "1.177.0": "2022-10-14T00:30:56.607Z",
    "2.47.0": "2022-10-20T15:06:09.792Z",
    "1.178.0": "2022-10-20T17:16:57.965Z",
    "1.179.0": "2022-10-27T17:21:30.399Z",
    "2.48.0": "2022-10-27T19:37:31.118Z",
    "2.49.0": "2022-10-28T02:05:11.152Z",
    "2.49.1": "2022-11-01T00:58:37.870Z",
    "2.50.0": "2022-11-01T12:53:12.877Z",
    "1.180.0": "2022-11-01T16:22:49.943Z",
    "2.51.0": "2022-11-18T03:41:26.660Z",
    "1.181.0": "2022-11-18T05:25:54.013Z",
    "2.51.1": "2022-11-18T23:21:34.380Z",
    "2.52.0": "2022-11-27T22:39:09.060Z",
    "2.52.1": "2022-11-29T01:51:59.012Z",
    "2.53.0": "2022-11-29T06:14:48.820Z",
    "1.181.1": "2022-11-29T07:43:34.840Z",
    "2.54.0": "2022-12-07T18:48:56.047Z",
    "1.182.0": "2022-12-07T20:46:01.391Z",
    "2.55.0": "2022-12-14T21:43:13.238Z",
    "1.183.0": "2022-12-14T23:58:11.813Z",
    "2.55.1": "2022-12-16T03:12:24.587Z",
    "2.56.0": "2022-12-21T21:56:45.388Z",
    "1.184.0": "2022-12-22T00:24:12.709Z",
    "2.56.1": "2022-12-23T20:27:39.622Z",
    "1.184.1": "2022-12-23T23:25:23.923Z",
    "2.57.0": "2022-12-27T20:44:41.630Z",
    "1.185.0": "2022-12-28T09:46:58.726Z",
    "1.186.0": "2022-12-29T01:25:04.810Z",
    "2.58.0": "2022-12-29T09:25:40.536Z",
    "2.58.1": "2022-12-30T14:01:15.499Z",
    "1.186.1": "2022-12-30T19:59:01.071Z",
    "2.59.0": "2023-01-03T17:00:34.991Z",
    "1.187.0": "2023-01-03T19:50:39.316Z",
    "1.188.0": "2023-01-11T18:15:22.166Z",
    "2.60.0": "2023-01-12T03:05:51.831Z",
    "1.189.0": "2023-01-19T03:37:48.585Z",
    "2.61.0": "2023-01-19T06:02:20.255Z",
    "2.61.1": "2023-01-20T06:45:04.311Z",
    "2.62.0": "2023-01-25T20:00:44.602Z",
    "1.190.0": "2023-01-25T21:58:58.558Z",
    "2.62.1": "2023-01-26T16:26:23.996Z",
    "2.62.2": "2023-01-27T15:14:54.863Z",
    "2.63.0": "2023-01-31T20:17:02.476Z",
    "1.191.0": "2023-01-31T22:14:52.878Z",
    "2.63.1": "2023-02-03T21:30:14.291Z",
    "2.63.2": "2023-02-04T22:47:31.300Z",
    "2.64.0": "2023-02-09T04:58:47.255Z",
    "1.192.0": "2023-02-09T06:23:26.807Z",
    "1.193.0": "2023-02-15T23:37:45.771Z",
    "2.65.0": "2023-02-15T23:44:18.687Z",
    "2.66.0": "2023-02-21T20:41:42.784Z",
    "1.194.0": "2023-02-21T23:00:28.239Z",
    "2.66.1": "2023-02-24T13:49:33.223Z",
    "2.67.0": "2023-03-02T14:05:13.715Z",
    "1.195.0": "2023-03-02T17:51:38.341Z",
    "2.68.0": "2023-03-08T17:08:50.517Z",
    "1.196.0": "2023-03-08T19:40:27.628Z",
    "1.197.0": "2023-03-14T20:05:21.231Z",
    "1.198.0": "2023-03-22T23:01:59.393Z",
    "1.198.1": "2023-03-31T15:44:14.839Z",
    "1.199.0": "2023-04-20T20:55:40.025Z",
    "1.200.0": "2023-04-26T23:03:27.058Z",
    "1.201.0": "2023-05-10T22:15:09.459Z",
    "1.202.0": "2023-05-22T15:03:08.123Z",
    "1.203.0": "2023-05-31T22:52:23.822Z",
    "1.204.0": "2023-06-19T20:55:25.942Z"
  },
  "maintainers": [
    {
      "email": "osa-3p@amazon.com",
      "name": "amzn-oss"
    },
    {
      "email": "aws-cdk-dev@amazon.com",
      "name": "aws-cdk-team"
    }
  ],
  "description": "An assertion library for use with CDK Apps",
  "homepage": "https://github.com/aws/aws-cdk",
  "keywords": [
    "aws",
    "cdk"
  ],
  "repository": {
    "url": "git+https://github.com/aws/aws-cdk.git",
    "type": "git",
    "directory": "packages/@aws-cdk/assert"
  },
  "author": {
    "name": "Amazon Web Services",
    "url": "https://aws.amazon.com"
  },
  "bugs": {
    "url": "https://github.com/aws/aws-cdk/issues"
  },
  "license": "Apache-2.0",
  "readme": "",
  "readmeFilename": ""
}