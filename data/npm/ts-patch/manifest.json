{
  "_id": "ts-patch",
  "_rev": "63-325d280d4088925d712b6ae8a848491e",
  "name": "ts-patch",
  "dist-tags": {
    "latest": "3.1.2",
    "v3-beta": "3.0.0-beta3"
  },
  "versions": {
    "1.0.0": {
      "name": "ts-patch",
      "version": "1.0.0",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "ISC",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.0",
        "shelljs": "^0.8.3",
        "strip-ansi": "^5.2.0"
      },
      "bin": {
        "ts-patch": "./bin/cli.js"
      },
      "peerDependencies": {
        "typescript": "^3.6.2"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.0",
      "_nodeVersion": "12.4.0",
      "_npmVersion": "6.11.3",
      "dist": {
        "integrity": "sha512-s9gULaL5shAJbkui55uNjT7wGGl+QHYDIiOkMyrL+2uBc1WmbWT6cpr+xwT8lQHmXtZVSWcpCzn2YGEFpcEQ6g==",
        "shasum": "b1e6e79e56661b4d2e51292eff0746ede7bcfb9d",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.0.tgz",
        "fileCount": 16,
        "unpackedSize": 100133,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdpOBICRA9TVsSAnZWagAAAUEQAIm5M0xe5s5J35BwFQEY\nLFJotu6v6aPdGoYIdz7RYJ1ie3lTZ0PA/QX8gjNbOUnfe5qmW6o8qX2BidnK\nmqVvN8nD2RZLzWbPWMHP37MHf9ztJGwQzpXzGIszI8mL7fJ46FZGUecR/6M8\nF/4Pv8flx6UHXQJ90JtOlD/xEm5R0o2ttG2qKIPpEl+BrvzxVDy+UzU3usWe\nP7EmJvwPC1dSqvf6PxMZNb1VXQltPbcXv+vhNadkbqlA6vSuJs9X1FuXH442\naeGAkLfVdzhZcCnYd2nLC3BsmYKtuKLLvYZZDZSXUPEwa9WdejMeATRCXFOb\nGUnsoyNkCr79s01HtJmL0pnxEw1FeqcG/drxCRB2QlcrFKLdukRT+24w6K+z\nat4qnLAThy9Bh33ch+3MwYa7aO4Lct2YXy/zoFZn1eEyfHpmg0jIfnumBCHj\nvelTcoWbk902u9SofXlDYr/+kTYRnZupI0WQRIY0bgoaKpvRoVoNWW0G09NI\nolazsqtcDA5HBipJdTrqlp2TjHV8TSBSV8wN0ppvDVfGNkqx0XNyr7d/6QTZ\nKgGfEju44T4ejEMGVc9MDfu56yEk09vN6VZI8UBVBvbucvKUgf0DOt7azIQo\naQ127g/kckYJs0iCxDkzse+Lghhzr7FlKbKz7tvknFnTxq0cfuv8bZWk+MJe\nmHKx\r\n=48H/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDC4vzKen8OzoUKyWgY64Q4RqiLDK2aXHkm8xGB3pvGNAIhAIS4K+2Dki6e73jHmAU6dyD6gayUEx9a9ySpJ+iuFNyu"
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.0_1571086407331_0.5706026333231735"
      },
      "_hasShrinkwrap": false
    },
    "1.0.1": {
      "name": "ts-patch",
      "version": "1.0.1",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "ISC",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.0",
        "shelljs": "^0.8.3",
        "strip-ansi": "^5.2.0"
      },
      "bin": {
        "ts-patch": "./bin/cli.js"
      },
      "peerDependencies": {
        "typescript": "^3.6.2"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.1",
      "_nodeVersion": "12.4.0",
      "_npmVersion": "6.11.3",
      "dist": {
        "integrity": "sha512-3k3aFMrhF8g8zp3F+1gpuj20cOFdv5x1lcXBL2Gek1tqWkPi2HV5AZSveibhTT6I+7S0GplU3PHLYe9nfoS1AQ==",
        "shasum": "4c701083249e751960f6802d631615ed7d02b0d7",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.1.tgz",
        "fileCount": 17,
        "unpackedSize": 106624,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdpOKjCRA9TVsSAnZWagAAWLIP/RihNfLQFo7LGj74qBfu\nndb/dEbg36yCVxlzQ4gfLYXLj8TcTTqrqk7B11F7QRnkgKCcbsgGCBR124VR\nDLU/UHRHnpsIufd6VhXWVb9lnbLfbmqu0k4LBeY0DyvJ9H8p+euq+nXXU2rd\nNUQQgt5VkpydiZsV7dY+B0vCzcxHuct+9MAZQrcl/vmyySTOS98PgFhaLIoC\n5xulrVxj5PgVH64PSPkpYZGnbbRbg8TSHMgCsagNaUVPFuK9uYTpIz5FFCcg\nIFucXa1RmjdQaBSkoq69w2Xb0i5fFSuwHzw4UK9d3vINu8J0WNLIBNNxXkzV\nHtgu8SlyYzeipSgIT9jw9s+magBqAEQuHNQtsZsUyFSxyfpOZTLLZqop4/tB\nQo730ffDLZW+ISt61Wl4ti8/3x+KugEEFTNWIGIS69E0uAN5wW5d6H0GyysS\nenzev/KIgL6xY/Q+WRIimrxGHI0e5bsBlaEjvbWtDETsU7LChktMsno3lA1Z\n7L373oW6pCrfoKLlrB3R1Lm0cdMVuxP3Yfh1CWMgFPeOeNZWRZTzJYyo4H9P\njA9ExJT9DLT2nBQghDVggpbQ2Qg8CRHlpkShUW6S3POg9oEHx2xXN/U3EEz+\nL+JAUew4URs6HILD6Htw3tsi+S8OUr9Q3UHVWZYAlPJ1NpTf2Il7OelnLT6Q\nRc48\r\n=SDjS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBzVcxv/aNUWmqlJZ5wS8axboOSvo+BzYyztS/5uUixGAiEA9zafgfkPQXXJ/DlNNL7y660yN2bsvX/DibDY6KQXQvQ="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.1_1571087011348_0.39067027200722637"
      },
      "_hasShrinkwrap": false
    },
    "1.0.2": {
      "name": "ts-patch",
      "version": "1.0.2",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.0",
        "shelljs": "^0.8.3",
        "strip-ansi": "^5.2.0"
      },
      "bin": {
        "ts-patch": "./bin/cli.js"
      },
      "peerDependencies": {
        "typescript": "^3.6.2"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.2",
      "_nodeVersion": "12.4.0",
      "_npmVersion": "6.11.3",
      "dist": {
        "integrity": "sha512-oZ4CNQ/NbIbuc46OrVia8mUjcLq5ZXy+huht4SoIJ6HFRUtX/gCrcbhBM4phPvDkKSmeL/odZDQHSC0OA4kj4Q==",
        "shasum": "8700b0dc7feee63b37cfe2361a3e31e6f02a5b87",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.2.tgz",
        "fileCount": 17,
        "unpackedSize": 106701,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdph3uCRA9TVsSAnZWagAAJNAP/1jUqytcvz0MEIqBMDz/\nEnr+5eofCi2FXChL4nm4LSc6zoJPniWEW6bfWz9TPLO+AMp81wS/EE1kseVp\nNzRNVyyzE7sublXYx8skfUCnf3kcBTXQEHP4CxAX4NMxomAgTkhntE0D9ppu\n+GbtbDheQINFI0ya4O2Fbo/cXtvWBxK9gbNxybvOsV6jYc6NK9lZY1Qo93v+\ncHAzwC2ovM91ncfxuZub24vk62dY76htsypy1phkjVTnQCxzOqgzJWCrdnqJ\nusu14IBd3v0kMIZ7dtM/CAUZrF/adEnQ52ifZz8v2uvE1WRD+pNzi+XKQH5t\nSR6+hJT/gPrQbBpPFQG49yoP2Cgau5uTphZdzgQOWOGGXCCLoDk1nt6tbue0\nazJoIy72tcF+HgiHTWgx8hcw+s0TzWUg57CFjWJJbteOnVUExKAWLoQgYXyq\nalCcbWdIakWKzjAyafbF9nw1Jah2T6bhlXMxXtEo11cSObzMtelEM0xy1er8\nHhaKqVXvQcuoBt+2NfqnJocRxbIhrZY1LPygH9x7dFoemtIs0DhkaTl9Oy4E\n6Ddy+uL/rnMLSsEa8FFLwAM7688v8Y+JKT53nNdYDDk5R92/iw85f1pLErz7\n14IYWqm/FFqupDVwCS6VV/FUkhwXJwt+PG0NhsP3NIy8EeDb1m6xjRMANpfU\nhNxe\r\n=/VFD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDIAs3jwtSFOCOsXZMijUqJ3FLq7DTXJKvHUgWQqEzvgQIhAK3sEZzI1T+n702TbcV0zrPODfcKM17YeoV1pgCuqRr6"
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.2_1571167725850_0.8660391997023416"
      },
      "_hasShrinkwrap": false
    },
    "1.0.3": {
      "name": "ts-patch",
      "version": "1.0.3",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.0",
        "shelljs": "^0.8.3",
        "strip-ansi": "^5.2.0"
      },
      "bin": {
        "ts-patch": "./bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.3",
      "_nodeVersion": "13.0.1",
      "_npmVersion": "6.12.1",
      "dist": {
        "integrity": "sha512-uwC5BASSeN5vqteHVx45teuA2EHo5zzTC9V16fGi9bqfZJxXuPWvoIyXjB6GFlskWTTstrOsGhvDqXbWRLekTQ==",
        "shasum": "1e9b8be9cc6e9fe3a88603b9e6457392caf92360",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.3.tgz",
        "fileCount": 17,
        "unpackedSize": 106699,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJduw2/CRA9TVsSAnZWagAAuB4P/ROjMTLWSfV+MvEv7xEa\n/v5lcnpy80C1SAmK4ELdM/pQWy9/LgS6aHqztm8qduymt4+wHU5M8AgXanvd\nhpRZ4t60on2G3+jy2R2K5vJ84A+STJtNXLdJDhzD8wG4NlKNaVUXAZJ79Mn0\nuWiCPX9ItnN/fHVXTeOtn8tttJCJd1mc9jW0QvEUUR8cojc7bw86CLsVx5KM\nG621fElrQnokUARpcrBYZ9AEo/wnRJ5hynmlJ51ht8+Y+BLHeg4WnOX6ho3z\n/q39C78uqFnOg2WaDzqK84JWZUWKPjENZDGqJLX43cQZGTqaEr5rKKN5mxs6\n5zqkD6tVO5uQF+CrXE7seishEhXnrJdPLM+b7objJEcHU+DLB532olUFYCl+\nBuwJPs+cUsE/2oRjcVupuk9ObP/ZL1O/OyH2a4i41+ioM6O+5wGx4IKAwL+S\nYX2Q40gIc10x3Ktjs+5hlO/pt0i01HUedYHZryZiMpl3zEcSwPbqMeJ8CYpd\nmLD43tn74X7h9xAJ10HqwNCP/l525OTf95pdC+Jh2Ce9qQkBMxg2IKo2e3Ac\nbOYiGCvRxIpVy78dQrVKUdIF2fQaDUVSX8cw8kTHh9nCbABErZRiOUug12bH\nTMHFEWaitqiwqDe9EAuDi700Mqr5qW8th55IimUOG8TEIwXizpLVRzYCd5l/\nMZvO\r\n=836b\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF8K3/pnIyY0QnnG6/c2dG1sfR2Kpu4wuY6Zy6kbOmRNAiA9W5uQnDd2L0+QFyFP1JXU4RghNXAAEmSi/e3II+5ANA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.3_1572539838669_0.5472847920724093"
      },
      "_hasShrinkwrap": false
    },
    "1.0.4": {
      "name": "ts-patch",
      "version": "1.0.4",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.0",
        "shelljs": "^0.8.3",
        "strip-ansi": "^5.2.0"
      },
      "bin": {
        "ts-patch": "./bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.4",
      "_nodeVersion": "13.0.1",
      "_npmVersion": "6.12.1",
      "dist": {
        "integrity": "sha512-XUcioORmBEfhVJMP68daAIvwJjBWKuulqQGRDraDPrsl9zFvp7w3fP1SFTdHZ+gBWlag9ZuuGXth5t0Y29SqYA==",
        "shasum": "f778b75612009337649432286b46f0aa967a843b",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.4.tgz",
        "fileCount": 17,
        "unpackedSize": 107824,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdu0riCRA9TVsSAnZWagAAbQEP/jMGG+K8GaMorfVddRPg\nr/35XX+p9+q8pbB8WVQWxJf/mnaz6uMLuVh/BZrvknTZ0Zpo0ikAQPxZgnWN\nu4EGgn8uCG7vo680oXBgitj+HN2NAyB44KOFms8o8hOBjbyOkipzDQT3sGQ4\nhxsOXX30tsWODBerrF6cbkicaMisQR1i9bv7gK8EqFz7RdK+76ltgLB88Nr7\nHzEu3yuHaI9BXFd1PMg6N3Nnf4C6n01HS26ideJ755awX7cwQSqMsp9cbbGQ\ndr/FSzKyzu78baap6CtTwp9tdmuIQzmlWVeUAWN3tkcV9o+eWzt9mns4u4gK\nM6/jvjAbWBbRFZncBYF1aAySAHf8nFUhgx4bP18KBFNdrrFJ7Yeu9exb1Yys\nl5YFZzEBxFCLQSyRuIbKw6bFvPAMJkvemuqpGtA+PbDnCW+dEbGq7pcJCUnA\nw+T48G/qoytglAx1QJBZyXhjUOaZMRhsq4127O+6NK+NvogSYLYWukpjhwJt\nJ8fM6hWAWmMHKZvz/89TIGqzB2JBzZdZpmOP8ilDS2mmUj8SZ8B7UefU5LGo\n9RP+5gYEG/SLXImjTxPMCdgkKKTSYzi4itQ7KV/HfTZ/GgqtPqYiMAkzM9co\n64f9kQguCqmnlc87guokzuRrESIhEUXbPHyGyYa9qVtmcttwrvMhiESG94Z1\nu4CI\r\n=te7I\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCnguM6AVNRrm1f9CB2lQsef+1E2zVMJl+EnIx14O+DzgIhAJ+HRIjgjIqLZ7+BBGCoX+QU9QKtYpHTBmOit9GiImoh"
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.4_1572555490334_0.6925363178112192"
      },
      "_hasShrinkwrap": false
    },
    "1.0.5": {
      "name": "ts-patch",
      "version": "1.0.5",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.0",
        "shelljs": "^0.8.3",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "./bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">3.7.3"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.5",
      "_nodeVersion": "13.2.0",
      "_npmVersion": "6.13.1",
      "dist": {
        "integrity": "sha512-+1d0Gy63rYJ6+l8xjgse8UC3cQaCfWTaJ6j6vxaDOtxKZa7dZQaJP/KOgY16jiu8UB6zPjzbOAdQRjmhlQya9Q==",
        "shasum": "07a0ba0b5710d9aac40256d1906ff9769862ee29",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.5.tgz",
        "fileCount": 18,
        "unpackedSize": 108846,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd/FGiCRA9TVsSAnZWagAAtdUP/jgy7Hz5un95zOqXNLq0\nUOIaRtj1wz2/XxXXbKjy8XF+1cVW7sfN1wC9x55MllNrh55aKzgr9d3ZflhF\nl8BYN2F9iRIrMRh2ZRj6C52hOP4xnTKY1MCtZdnWY3lq15+gRnOP/+/QRvXQ\nCjxej5yKlnlAeWGMyoU1VW68IRmgR94eHUpcN05KDSyhdzNB5W2WEonROL1H\nitDmOUzDRzozbeD1yHDROl72ud+7DiFlznqYk2ODAbdzxrtO9M+6bIEHRaWd\nxMXseJ9crpyHyp6zpLskFXbcRNMcbQnamx4Pz+qoapnEyiJPj8JSitSQpnLQ\nTc0/8fKuIkz7yIqzIf5MytWMmFKoVZop04ssoydRv9x5QXNBDeT2EOselvad\nhaeTNphfw9cYH7S1FLvqsr79aT2y/P0cjjczyo6IvqXpWrYljRsYs5JL6igN\nr4qhgl9d62LB0KyN4+aWKgPdnADFHzaffvftoT/n1P+UWR8FB5feLgmDUPlO\nxnalrizKiKxHtQIidS6y1aJcJg78Fh3GH05u7HOwsiiHN8hTaPmID1PPQvWS\n/CRmNTE6iUhoh+ly49N+HtCabp6grAjttsZQhMO37FUvPGZuvQRCY/hoOpcT\nHAJTsciecHd17NLKLQrvdr58577LDNXlfLKiZAW2wmaAvuneEWa9/qzr8iIE\nm872\r\n=eCLC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCNIANE2pLBg1uilkb36DLtahg+NzZBrJM24BNiWtm3RwIhAPUQfjmokBVBhfMqx23utvugAoP2l4CcbNZi1GcpoD+x"
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.5_1576817057937_0.21465361042482045"
      },
      "_hasShrinkwrap": false
    },
    "1.0.6": {
      "name": "ts-patch",
      "version": "1.0.6",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.3",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "./bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.6",
      "_nodeVersion": "13.11.0",
      "_npmVersion": "6.13.1",
      "dist": {
        "integrity": "sha512-3U5DsuKlN5atLYcRzVelE1E/MjKT8z4fO4TWBN52SDrjw7rdHA477wfTsDERQil0NNjkIqYNu8Y99IkntBtMEw==",
        "shasum": "b1798133e22310cd0bd047cce4332a71ccd7b6be",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.6.tgz",
        "fileCount": 18,
        "unpackedSize": 136569,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJecuvBCRA9TVsSAnZWagAA5bsP/AswzygqqQzvJS1avEX3\nNDYP0ZvDdOMvRS5wylOnxS0gjjZUA7VRQs474183ggwLdW6Io8sWGPAXdvz5\ngzNZFOFBXV3/ZILTPjdIzSrWr9bMb18PMII4CpapB1bCGhoREAv+jKmGcVIM\n9KylcFbBTwBzmPhbYv8xqZhUENyxoUe56XuKPwx9HRajY+GhDYyRXAflA9Ve\nsyBBseike2N1RT7t75p9VdpXAGWabiFuzpuD4oczci4EyI9TLr6hIcCY9x+J\n6zxsox+ipmgLlWYheVDyq37ugC9qz5LRfnZuabbuyICzMc3OIv7Mwuuv7Ma2\ntUGk2ANUnVCjbs++NOeN8Fj0usqxEnzsJzi1Nc8nBxQkVSbcHs+eC0kizDwi\nDzGhH505I14tPohwcH95JQ3bhkG4cmKEEMevpk7XnesEJCW3vLlkU9UlryT7\nGY7/bnRQ52p4sY866HL4fUnDK/D6qEmUfjomA7Ha4jgPwVtNbLFd9MulZ+/8\nIYjajXQ8Fl/Z/MuQEL6k7hScgwfoYBAY2008fJjcOB1b0jt2D2vhezViv7EB\njKZsHptEQ8Uw7lEjwczpaJ44rjXpIOoWxHwQEi7ON3vL1Owo3qHMGOX4aREW\nKTUh1iEPTOCJPNAaDufPjd/dL1F1ioqvedimfdBDWztUrdbYTP13lcmnXD5B\nurfz\r\n=7jru\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCGcfMlTR5aLuLKmSIr3pNPy8bJRsIhRnkgr7r15DAxnwIgY+VA/puzFdAHhnpyHB8JqjATLAPX1tbXQ5VvjAFgdOs="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.6_1584589760879_0.5636893793436004"
      },
      "_hasShrinkwrap": false
    },
    "1.0.7": {
      "name": "ts-patch",
      "version": "1.0.7",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.3",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "./bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.7",
      "_nodeVersion": "13.11.0",
      "_npmVersion": "6.13.1",
      "dist": {
        "integrity": "sha512-HnOsolztms64nxVzE7PZ9JW7e09KGvd+UHY/XG3Drq74ihauMlGATQNdrS/Qux5KTsvYOy0waE0+86Aum4WEmw==",
        "shasum": "d08dea2c6907c67b4041dbe538a1680bef47c0d0",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.7.tgz",
        "fileCount": 18,
        "unpackedSize": 137107,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeeo4PCRA9TVsSAnZWagAA3a0P/0CpkqKQfQIBDLZkatyx\nXSi8KBx77FPoIJc7jTnjpVm8NCjyUXT2vNK35xPv1vDFCf6C7EkRXKQpNa7R\nhdORkMKcer5xST2ErOkh45LTF8Y2mPMxnAf0K5uiiExNjv3mnUmJMsfFVTlG\nQsgoIMcWvN8BV9G5BWBN1WbUJ5/p2b3nXkNtW2Mf/vTxtaNedhpRHK2qzGk/\nA8mfyLduNmMgQBgM7Ti8MrqYPVyOmnS4dJ98LqHtElPEnBerqysit7fbe7Gb\nRlFD/J5VRX6irbmvQ6lTvgP5ZLiTrQ7rJWi+ZvTHUWV8J1/9Izz1y6y6IIKH\nHrmBR8PUaMSzu3Hl4OZLfwp425JwKvcYq7W101ceIx9Vb5dMXNpvIv2KGvj4\nBtwVMUsoLrrzSN5jH7UrbyHEYXNLD2djZYpdQvp5amKYJG15uSlw/Iwh6gOV\nGYkchju3j8GxrspAqjrx4B1qFSl2q+/RlFnbnIP+0iCk7q/POs15qfSrqiWl\nttclmMuDKAuCX9QhohY9RKyuuKr068OQQrEzWu01rCKnVbXiNPDLce9KtsoU\nOu9R2XTHeMpYYeHZ89MIMOBaSJXeqmTpjyxBV9Jusf3c3AKi4Lrnrf412i09\nezNp4HmSnBU7aY/B4+4NmgZF29qSXzi+8Nn8mljzKCzPA5dZ/hAbQbTlXqkY\n0+mz\r\n=PXTH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAmMhuZ43QsLHNOo3IUSL3FHvenE7dSOQX2RTO2QeDVSAiEA1Ly2xiS6rlGvIm81gPdNlH2ND9ZsNKOyF8ZgaXZzT+I="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.7_1585090062856_0.6235403742758174"
      },
      "_hasShrinkwrap": false
    },
    "1.0.8": {
      "name": "ts-patch",
      "version": "1.0.8",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.3",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.8",
      "_nodeVersion": "13.11.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-MSXKkV/B/HcZAEQUX42pQ9ftQalMwgSJz7cqQCU9e5GeNTvWMW1Og9fMpvf7cxRo4RlLBloasmSekSZz1ojkpA==",
        "shasum": "9372a8e2ae0ffb1f4c1bf2a9dfeec544d1dbff9c",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.8.tgz",
        "fileCount": 18,
        "unpackedSize": 137408,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJen4lkCRA9TVsSAnZWagAAfwQQAIOstPl1kA9lvrBFW7ii\n88CGC7e9xeBmlREt7jT+a+ld3F6w4z4+kvrmD1UKy2oTVilBsXeWH5K1xGam\nsM9pV09jx905lF+cehwUaJvdh5SpESnUGq81LVPw51jftQ33xEuI7tC12fZq\nKgqq48Y4P44LdAecdFi0nwGfFvbu/8v6MMfeVIpwZ6cSXZByycpo5X1Q0Mw6\nXd88doK+kgdnoRCQdH0A7ekMu0+H5rqUrSmSni6ivcTM5DVMTj65sMT+3hVB\nPj0DgqaWxXf0WGf/nL85TE8yucRa6q3NRIpWxqqJVIxSUxP/KCmf7T2X56cR\nVVHL0yOLFqh2gfqrzZatF+sUmLlj131EjGzp9lnvzgjGw9Ltw8RCm5etE/UE\nudui1PFoG7RpNL38KOvJdk+AvSEIaf6a9JPltjQdx8dwJ7ba975FuzWEx4E1\nYGQPBL7Holb+btAkvz1vaabB3ht9rS2MQeqzQzfvopU5bG3xU1rpi9MaWxrz\neu7OwiSAn08yEqhCVF4W7QcBw9/AmmcrSvlEBtWJFW3vgqErx3jZXKO+HuN9\nOArWe5jbbVG/50UbdbXn9Dr65Faa7g3B/fLbjc9OaJRRBE83cR1ixLA+LiYW\nP6pdFoQ2UP5JBoCPgJzqV+MOeJi0hKNzRbElUJGe39vangTWdQ5plc9pVLFg\n5h7z\r\n=Fl23\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDV0xjR409FgB4y+MilF/jaWgigZFFawkVWZedcsDlsxQIhAOeBV2GTyFXQ9ImtzYiQeQqelf0LI6CXtVJTpOBz7Dh4"
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.8_1587513699186_0.13140977324641234"
      },
      "_hasShrinkwrap": false
    },
    "1.0.9": {
      "name": "ts-patch",
      "version": "1.0.9",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.9",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-X1djzZOblFib1GrqD1OJsieAIIrnR6xL7Njj8/eqdtURMyXqVhIACmjQ40klLuHEvXo+kWcQzaa8CAV27QrfgQ==",
        "shasum": "41a34a812095b6d465f89b1bca83a6c046a7a193",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.9.tgz",
        "fileCount": 18,
        "unpackedSize": 137675,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJep3gLCRA9TVsSAnZWagAAVSIP/2CXsqwnIok3P9n9WVHU\nlYc3TGd+y2N5MXznibndmX1r0Wwm13cukSBkOq0MiASXgKVzFdcqH5KIEeZ5\nhUevakqAVLbnXhVRpvY56CkjquqgPZJGDu+Uq/8aeWwWJDe2xmE8oxdjoGtN\nEswmRCMm+Ac/8o5ExpeU3jPUXMZ4S1XXGAuGTKOkfJClIXhDHxvg7RdGWppu\ngQFAsN9ViSCEltEX9oU1rjtOkjtldM0gRwh3IuJjIbBrAHlhvKr1L3uS1x69\nefJK9Fgo/ARmVtmJLvATXO/gyJDvQnrR5PYsxTZ1H+Bf2gbbfxomCzy61kdY\n+N+dQrmDqib4uCVQZc33Odr30RKsfFHZej65I4wdUD0dFIriNXa7jUcM0uvt\nrreS25v5xpeP/rXUIO3cp/fsLiD65cVrRBaktYEYY+KXHkd5FcYTqy4ZabTM\nfrsN0SnX0kjrYVL6JPP1D8wIiFfwcFKnbVuo4BrCFiWF34bU9feCSm3lDDOW\nHtzdqDGBgiJ68dfXzkXJWu+akLI2vAZZFQ67EU9v4V8EWyFSPpR0wI2bxzxi\nMqOiZVWzoHM9sfFYnVjylrxCEyGtUd1FqQ0HerH86LtG1jqnEJ5rcRNbJpKR\nK6CsKJibpSdGu2tgKB1syT7dKMaFcwHNms8DjHfOWE9HcA38WSa70pjuiZu4\npFLX\r\n=Ip/X\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCk0hnK4BfpgMXzvX21nbXq2PL1H8vV6VS/S2TQ5RiIoAIgODgTojdECvEFuemNMWzL8Y82YN4s96m6weGKr6/AmUw="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.9_1588033547318_0.42459127685377696"
      },
      "_hasShrinkwrap": false
    },
    "1.0.10": {
      "name": "ts-patch",
      "version": "1.0.10",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.0.10",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-9LysACtRzvGOU5wsP5SSiYNJ4xxgUGFKyrRVPl+DDO51A4TkqeZAdsH8uRsE+DyISdQWR8AsUx6qhjw/ojVsew==",
        "shasum": "8f3b50ef33cac3b24a6dcf0cf120bf2cb261455b",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.0.10.tgz",
        "fileCount": 29,
        "unpackedSize": 157780,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJep42aCRA9TVsSAnZWagAAXQcP/iqHFu27k3AA3u3lgnl4\ne3JynRSeIeY8eexvkMDLf/8ZfkWLmWaQMkipYOOtQnsJypwowQad1Cag7L+G\nedR0RsC5yQgjNxXo+IMZFpmCr/cCWi6urZ2Y8uQubSWB/Eb5EUHg3t5SdZNo\nVbaFidPTwiJMjYotwPS6DU1HuyO6VwinFYZdaLO2nxVbtx3pHBx4kJepV0W5\nh8hB1rwWNHrqBDnqH5mUAz6zyfa4aZn9HISQrStGPC3NaHFQRKRi0wA4ndYQ\ntxXfhKaDNA3QgFv+atT/MJl6/NZ+BDchEn1fN1rDLmVJ+u0CqdSCMINvDB/z\nabz+wiO+qQ0uqD/BQiuNt3VfO8V6MPttYP3C6X7WIvJvGZ/kioTNoW3xxYdH\nCrV1oZzIWefMyqBCHukhC6KyMzHGv6+4RZSSYl4pCnQoSGqOv59pveeTLTCL\niXB6JouetNwbIdjPRl6FczlSsRngRrMVN1SvgeoDPaO99gK7YtISqiQBgnrB\nExu6bNmRVH6CH3gQY9ZXMCOw6PAGDAwRLllvySMPkH0+DNXLysulXuOFlbvl\noTmRmrl+uJpNO8SG82Yc3GZMPawE/UYdTUuirwOf51FfZg6Qe1sUeJD8uuSn\nvq00RVgvwo9RbKy8iKXA5iHP8RbC1wCt4oyJCOKCqR8ljDbuvnRFr0bqMcru\nTHGL\r\n=+rs+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDDk5gF6RURLRhZxm6WmCwCtBe0W8IU+KVovitRs/zZAwIgYtIuai8aGvW4blr2eFRq8Yy4vtzjoZRpJGOGZuFd8OY="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.0.10_1588039065725_0.09731271765465688"
      },
      "_hasShrinkwrap": false
    },
    "1.1.0": {
      "name": "ts-patch",
      "version": "1.1.0",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.1.0",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-q0mPT3bhA2KrJq7VgTAdBQ3OZ7Gm6uCgIqhgmjGBFqeO0BNoqHoY9pZ92RytHkapak/OIXFHV+cD5ML4WYOP2w==",
        "shasum": "15004f3e3adcb0d760c1ff03a26ba6b9fa05649c",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.1.0.tgz",
        "fileCount": 29,
        "unpackedSize": 161713,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJetiLsCRA9TVsSAnZWagAAJFIP/1VM1TU341VXcbW6GxU5\nuTjDS1AztvBFkS7x35Wqhgp6uMR/nhhPndF0P5nsZS1Otl0rPBivZiBVOaiu\nQ0Zeqj91buNQ1Q8AR4gARo0DSvzkp0UTcn/pRfFC5v45tkxLFFBa7CVWoXy+\n/6/HErmLNUJN/k/yJduK1whrBNCVEGEB9EU2e3yTlDmm60gbI+dLVC+tmn7k\nG34Pgw4Wog1L2Qx8Tc18TpO7UFxW1slo8F1Bq2FBL4i0Nc50KVfy2pW40kkm\nPFM8gpQnh4yyiDLY2MjMfsTbfMZo4jJrHMqVqM1fIVf1BnmVeabS9P5e5WKB\nqSalpcu3g127hCGCFzHyzifQNN/+Z+vq/8PpWp74pz2ICjXM/PJIm93bMb5v\nHDzFBb2UNaKkwNdQ/tJB4PxrutMiEHfm8XFvYjMGl5nMf+oxM5FN3mHXgRJ0\ncctK2Ab9Rwxqf2TkRzISklpRGMYu0d7fXzoqVzRpDMybB+US5FIvjy960Yoe\nsrITkLN1vNc7UW9+aOlkVHR8aaU+ylhhoZmzsYgFWSoP5tzBnxfKHFqZdBwR\ntgqHGWXYX9s4Mx79tA6ceL44sOcbsaKfPL/RqvCEHpDHm2b41NgcOSVipTqZ\nCyTGuF+qkMInrNLhe9F862hyK3F92sxuLHoYPf1CoCynDQNMXK4NLVFvGoHs\nojyu\r\n=MC5v\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD/a7ciz3/8s809h7pbZZRx1vMUYU+MrysHHTo/nZKpqAIgXHEWWqmtOTX2OjURzNUOt5hts+T3VtcT3qN6z8g3XAk="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.1.0_1588994796000_0.6058807354784765"
      },
      "_hasShrinkwrap": false
    },
    "1.1.3": {
      "name": "ts-patch",
      "version": "1.1.3",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.1.3",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-7Yd+CW6wzaZvguCVg3Trq3F5WVanSYI9ubWL+fuobgXqLGiqXd4S5Y0XldfaAf+n4t54WfRiP/0vd7zJantdtg==",
        "shasum": "694311b4c3281eda67e9a9c1b4d616e342159aec",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.1.3.tgz",
        "fileCount": 29,
        "unpackedSize": 163393,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeuezhCRA9TVsSAnZWagAA3QwQAIXE7g0maUJLiH5wGBZe\njdjgeoc5qQ6iDSUzakTgsAC4IIqMn3hw+tROK5gbxhR3Xwb1Xady+zJdyiw/\n0K1fCD3qnUvSmOCIp7B5sN8rOMgbDfK8NRR/Y3XvlRWa+RT6KwPRJ9xcsTjv\nugt4HZBj3mGvfi4JYfHUKaglH59BGm2yz6qGY7YQpEoMurYGZqQLoXEIGGYx\nKonbh+fjU8vPtN0Zu1It/Sxpz6iLIIRbMINvLUSjvPCaVJJ5s012AQai03nq\n2b1bD+6oesS+82sjpML5jbrWyf17YQ1nwuhaiZdWzcQH0xiT764EfKX9MMUa\n+hhq5SAtSFmtO0Hdf96Nj0gX61GlDaA1HyKee761UNEbBi5M1A1YsQ3J7nD6\noAjVOcPH82+OdjQIC/kq7jwtUkF6nlN+zpbY7ZYR3UGheWN85xsCPNmCWnWw\n7AiLaSQP7iBp8owBPnzmJJ+46BMKhu+HP4PO8AMdxIyEljFA57ap87KlLIWf\nUc4g5s8gHqTfQP/WCU6JAzOqQdBLpLymHdATtJv6M358wENsknQ7LqSx9BIT\n9jqCJ3qORqYv8niYteLBA5oAR/IgxjaRhZJCDhBiD3wia0dQTJmjci0UJuR+\nh7RGremvHj+oHWgeEz4M2+TBogKV+fMj537elKgtVvXyVHRM79aT76E3k9EO\nvY6D\r\n=ifiX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHNO+q0yOVDPHIrXrXSyNukGulqNEa4RIA+mYJOwATtbAiEAoZU1i38XOinJUt7DZZIhSsk7NmyAPg7sI3WMbLINVG4="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.1.3_1589243105162_0.6669673081086167"
      },
      "_hasShrinkwrap": false
    },
    "1.2.1": {
      "name": "ts-patch",
      "version": "1.2.1",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "_id": "ts-patch@1.2.1",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-aGLfNuHf35ITMWxWO6rBk9vn1HV89wSQPyYwhejUG1IfCsdQGatiAk6FFDSiHUq6HiaaUu0a4iOV9t4Z2069Sw==",
        "shasum": "eb955af2a86346e3f835821f065ae78c58c62321",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.2.1.tgz",
        "fileCount": 29,
        "unpackedSize": 173520,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexgwACRA9TVsSAnZWagAAV9gQAI4Mu4/PQBvdmu1Tmkvy\nepWzT62ErAaxdATTpU02D3HAbHInCOCwqAfwbBprGxs1q2srULOt2UV9lj6d\n0PASS4sbk7+jCAbhOrA1QEcGr6wyvlVB46Vph9sKSBlyyrrKTc5qxn3BhVyw\nu3U2MuZ6WZRQs64NomD/e+8JVu1Roq7LPTIKRUk/3II0Y5ko4WqXc/KHQ5DN\n1645/UmAmwTLeGEaPIutqwhv+oz+CHEjhTQJxh+iX111rT3XGWQY19Vj0uDT\n8kCjb4bBQ32hY5OzfKtlZOs2PE2HTSybyxCA+RgsrQWtqzDJYm47nQuqSE4T\nWjvuO16zeeKOJte69jpVRo5pJaMZLnudzGsiG4kK49DkIyzEmOpbeivGfg5v\noOjE0cDDf1TrxMK/eek1BWAGSpwhN8Su6wQAWdD2sODjCPRdCWdgoJ8SHT03\noOmGjEiSRFVJFMpH4tXJiZsUG8uCOcsC6WkTAnb1j6jvqXLi5Q46XN/cP9r9\nQOZiO8X8Ouei4MlRl9c11y5601y9G1vTC/6p0CvonLMKJAHQhnGlXAwTDSxz\nGbsdsbI84f99BdMm+BTVZShoVm8a48BBgL+tghTEmL1VZnNbb1WM8YH5vg1F\n7Bx2IruDOz3CCGk1R08BTVRukRXfSP7WMZjXop1dmJvUdq/nXbIctMtI0agd\nPRw5\r\n=d3sB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDQWZYIvIf1Ubl0Zi4Slsy2yFgfR3YpeFRQc92qd1KBZAIhAK4AiouyyePKtIDjkIDjn9CP69bHy3ppk9XqJGCmyykS"
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.2.1_1590037504308_0.1703639788107436"
      },
      "_hasShrinkwrap": false
    },
    "1.2.2": {
      "name": "ts-patch",
      "version": "1.2.2",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin\\cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.2.2",
      "dist": {
        "shasum": "a7544eb7b5a9d2db1cc89b57f5e11295d0d8b82a",
        "integrity": "sha512-BdcIyDg6K45CWtN5W7UctDT6Syq5zAOaJxyCtUoxpGTfiaLY82VPyTOFzaOdrHbP7udoQZnsG4K8WB5ipPWjQg==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.2.2.tgz",
        "fileCount": 46,
        "unpackedSize": 328674,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeytXjCRA9TVsSAnZWagAAgpQP/ReCRkshJfB544PaKGHd\nVybwEItaUgETxByvE1/UTuQf3a/inf9XXuTslGLFiIP4wqrIwCIey8VQkVT+\nc4NtBxW4omCWDO/uttQGtDe3FaIAcTBLaQN+4QxmR0pshse8/h4kC0MReVEZ\nrLQISXYSEWTHZp6PsU5IjSV8SrbKAyGLYyR9yIjGqUQH/Mk9AjasTUvzTqHW\nF5DCeWsEeyQgxwEC3z60ytn4elMgkVTzY85StGEFffLWk2Vpvy/MloFD7Qy7\nMQJ2odQyn+9HHxyhrBT1RtKbYxXixixnZpL6Ra8F0lIMx/eAQkxUWBFY/+Gh\nfvDcFceDUzQ7oCkyb8NWYjJXxtMsmwgyIexNyKOafIweP8HSM5OHcoEizssk\n+DsUsyhsIefXpaL1CCe3GijoBMGb9xWxX0Hg0g4jOYEujsBtnieQ4RJjycIJ\nw2S0VV6H6ZGmhCAS1AHobSB2p2/G8W9uSeX+eZNACkQk+OYBzOj56v4ZsFSD\nYfKsGux74D4YddpgE7fYCrFRspcvxzFZ8nriwIitFqMo4btfolMguEpi5IMq\nmO+zHdEX0oloaT/607ezEwgSYNri8aqrvTrePl5TrRclAjckDG74BVmFpcL4\n2gBeDJW+QiF71OC4XZX4jpT79PFzpOyfNKsR1w91J0zmQuaMlKFiDVKbHOBX\nNPys\r\n=1DyZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCJRMBK1aoVsJSpPXfvKfQdoLK32b7ENAv7++O64I8zvQIhALUD5gHkxSVNH4WEWzfMzHhS4GVDT5yrGw8uFlpoD1Cx"
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.2.2_1590351330925_0.9337321674363832"
      },
      "_hasShrinkwrap": false
    },
    "1.2.4": {
      "name": "ts-patch",
      "version": "1.2.4",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.2.4",
      "dist": {
        "shasum": "eaa1e79b238392ccd5acf7abb5c4557daedbb037",
        "integrity": "sha512-GDssCUfH8D9ktfisAKl/IEdfIThAWMlmtUkDjXi85hZAIlGToUMHeTZRDTHYIcfl5uqImVeItaB+bj2ordE+Eg==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.2.4.tgz",
        "fileCount": 49,
        "unpackedSize": 335886,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJey08eCRA9TVsSAnZWagAAh9wP/iZiLsbyJUE9e8/adM22\nrewl3EoVoKeOC8pQgVwlDz4N8gmCeGCNj6Ci0cToajSCRrTz4I7kH1sW6pxA\nFacjBVFbr7Jp/BxflcHHb52g6w5iFz8AiCmLKa5vz2upPY17MNKexfreAQaE\nnDKva8E0cj1ImYIIYUy2eIsJmZgnfpPOiPToeQ2JpByc+y8Ed9lfoT0PWVOC\n/gWqJF+1PEchj6CsGwkn+XX35FWC+ypC7LMcARDVpLnjkjzYyfqtFpTOAhAn\nKFiCgG9Gnp+t7prw1J8qX+iadbSH/aUIafRFDYxOfPglmsg2QO8bguWWowEk\nPXdpL02XYUUWJtFIAknNf4YW5MkbB1A129IX+yvBXgX+76xz3PoIr+icYYpz\nncU0My9+BZUtsRgESrcQgbtFdhYkWxHOdEcDKLA2a3QHKRrcwLf1VXFeUdI9\nLSENTgBl5XNJ7pJUgeRJF6DuhVD0ggQbquRLefxB95719tH83iCFpPk3M0Kc\n4hwZxUcT6mF+4kYEc7R8O2L527vldyijIEkGYRTCO+o16oyn52lOXWOPNwjS\ndQ+aP+goEg4yE0EP6ZCajUURAAzlLhR9/TisihAZXWinlVoloorxOI/IIF+m\nILBj0v7CaK2xCt9DCdyIsseFPgHdWcGovapQ4m1NAsEWdk5zwcaErFxydvXD\n2ile\r\n=9LjH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDI/YGNt+OzycYOhPyGuteMG89SHwb/YzpoYXvh1HPbjAiEAihCt7IBJ7ftuYXw7H/b0XfhiEZfIh1g76YS+GL0rPh8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.2.4_1590382365948_0.14506993344875152"
      },
      "_hasShrinkwrap": false
    },
    "1.2.5": {
      "name": "ts-patch",
      "version": "1.2.5",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.2.5",
      "dist": {
        "shasum": "329a1c7824fb66a24ab32e2d5d5a500ac6ed600a",
        "integrity": "sha512-Ju08nrJUdxcd9GR4RuD9yBw9OQGvqszxj5KOkIr4y1d6cJmh/trlINeBh7a8Me4nkvIXD+thgJs6gDU7JPbUug==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.2.5.tgz",
        "fileCount": 49,
        "unpackedSize": 336839,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe8lBjCRA9TVsSAnZWagAAOskP/ipfLeTMy1vTkTIZFgjP\n9Dfx2N2tjGrmK+JJEdLEjUrB5XyKF/C9FFfE0c4aXraAOqZmTlchyIZUxbdI\nS65S7a+CV2YOz9HQD+i7KtVVVlILWYeqn0Vpno4Q8Ymatp9PVXIAIk10bWOM\npfjgQwVwLyGT5+G19+ZJELu0w6p/hKdtdJbI8Ey9Ap0ohwUdpTryVNiHACB7\nsI3dJFWMkst0OqK8xwI2x96dvNPZ5GdMiK0d7qpvwrkYPhGPEVd+kJnIygrG\nt30I6iNnE4QJGiU2dAG8G2L1E+Lgfi3rB3Iq7g4gx/EOzP3NEwRdtHtN2lge\n0lkbsH4ZfKJEvarLwHFS04ax9V2UCZd7vkYmoqwF70DCpL1Arn2Io29T3hn6\naJ8tuCFfIzYa21omF0N7Q6P1gHuCI8GJXHvff+cls+ozjJkh+IgyDVlpSGmN\npVR5V7EuGGegQVMHxTctVowF6kFqfGY01HMNuWDFgO/WBjKMsQnGr2b/CTK/\nPMZB7CaaW5sb8UPMHFL2s3AZmX1Dnx6ixhJ7Zoc6AZpzYTKDxrQNUsY9Iq0h\nNC5hEN7KKL82PqerQ2dHLeqBduBZzGcdwuGaeFX+9lBdpXHTws7RRpmP65Uu\nnuXlCigOjOuWQWXLfoMIUYOMAGM8zZ652FHrazny65HmY7rIjN1XTRsKSZ1f\nUEvF\r\n=zVKr\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGfw9J3NryHTyJ+YHYg2GSPycwfxDFfXnYhP+GxJ2FKWAiEA+xRWF9kiq/MjEL0txrd8m5234AZld1VqApKpWubTOWE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.2.5_1592938595064_0.7210476801695864"
      },
      "_hasShrinkwrap": false
    },
    "1.3.0": {
      "name": "ts-patch",
      "version": "1.3.0",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^3.0.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.3.0",
      "dist": {
        "shasum": "1669b33d7c52e6e0628d84c8d025fee5a94e474c",
        "integrity": "sha512-y4U+mwiKl/46SXDeai+zITsWmCTcghJ29aakJ1ZC7NGn5qpatpXlZpnAIx0dQzR7atfwuSRNTLAgJ1QNJ/qYbA==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.3.0.tgz",
        "fileCount": 49,
        "unpackedSize": 340553,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfHiRFCRA9TVsSAnZWagAAKfcP/0gBMkuCx6durrtHkIGt\npE6qN3B0Um9MbJzOBXP5v41XRiW5XuAXZQE1Bzyiis5KzBBqKQBFOJLfDC1M\noqexvNNGtdW0EC5ZlByKjq2rDqQ64xksWyndCKwFhLdn/jqydIBjVfNg0LGu\nztaGTq7QQHPwl4ZJEhfAKP8TPz0zfwcUBxjIxDsT6nhhPEORp5oRtXUsEKXF\nIgyJYxGsDaA0En52mFEePSeDj5eg22soQhI2ZQAXdtKVfZjWjtncWt8XSiGz\nVXhBcFKwXQ63glITT1nSsoXbXr5CRmDBoSQeWG/gbk6y4wqKJDoWcKCWYH55\nNu1PiXyyrjKSeg5XQ9zHjtekhaM03e2ZxpUmT8bVd4u3kFaUzoVotig0DxeL\nm1CaVFiAx15GoM7ZY9P7ANcP64+gQHwih4xwazRMEwALXrHGB0RbI8v6mOdr\n4eVOsUvMsMWu6s6cKnrdi+1hJvwujXodN6jNCtYMtGKtvTLwRV/g0E840IwE\nIaey4uBuMoIhyLrYBaxIROKbtqCPF2XS5bBl4niQ+Hc9N2zORDoBWh75O1H0\n2fmxExmjnoVJ90gyk1NayuR8puR7hKJBMr1EB+CVpfJvVBe//WkVPuDYuD4r\nyeN1cfGQDCR1/qwILyfdw1cX04NWUBFbqVf/7n0KGtRyAQ8l8oo/IoZXYP4Y\ncGme\r\n=yHad\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFtp7J3nAQSgs+rZAdazr8PPprdJi04Qzr+JvtzYLdIoAiEA9z9Fpyg6GBaJiXcBAjgTcvAppy0xj1zvCfId6RQFiCs="
          }
        ]
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.3.0_1595810884620_0.6600387479809322"
      },
      "_hasShrinkwrap": false
    },
    "1.3.1": {
      "name": "ts-patch",
      "version": "1.3.1",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S."
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.3.1",
      "dist": {
        "shasum": "304ac71488aa4a904d51684c5bb80e5bfda45fb1",
        "integrity": "sha512-hRQpcppi1zrweNAUCWMdL/rq/Jl8Ez70O4DpfDRsVbCI1jyaXd4Q+tbTmKesOjDu/v4QoFEAXtYeCcpOKLHgkQ==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.3.1.tgz",
        "fileCount": 49,
        "unpackedSize": 276019,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfvtaaCRA9TVsSAnZWagAA1JUP/0fSLC1FIqT/DgenpXxS\ne4EKprWfe71dxonCLoP/zAfu+Zsvo7wVXac/Ba6grm6+84b7Na4wR0j5zMZQ\npTKXc056+I+qMih1BrGhvKGALXgaxJDTEk7ZZMcgETdsNmUz87dGvwBfk9EB\n0vmthkyUf24Af1PlrbMNnateD8UqjS2REZIOVMf/6h9osA47sm+jEg/lQRkI\nIWQ6GGn3lTDxkVmatMr4yHGqykxpqHWSbf8qyS8/RSh8aBvcAjm1ZNntXj8b\n+4GYSMM5JHAyAMAkv8SaqDWsRgYMXbVGVpqv9ZNnY710l/nIi3mmgGQvOh99\nOD1Uh8ftN1IEkm+mMPuWwqp0GNflY/01hdfC+zEkiW7LCFjUZTxOUX13Od/c\n3JIp9N8dim8gLneRYhImiqf/wm0Kd4SxZNbFG7aC1RKqixd2zxkmk2EC6aMr\nCZRH8LhB8VcB3sp4a1ZuWbWfwPoBgvFdcQ/7peO3HREzPthmbbVNXdAPoAm5\nnzZ4nLg+611GxFLRn2DoFmN77rB3S3kuk76q41uDpkaPpnuOijd3lCWp/g3m\nfyxYkKzcqbXLLN2uPc5UcJ+Exb9s+cCoPwEm35JFqB4b6KohLAw5zsny3Glg\nvRgUNxhZ8LAr21LfppdUrzM9v1xlzcYtFT/ClgrlHe4byn18hQOYsa5M1pcK\noQLu\r\n=P68A\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBfKDSBpKCIQ8vQ+5CCc1voClzmCKgfpqUUa8GNpmGbNAiEAjBb+7tptnK3/qW3aMYrxUkzQQPnUXKHGTgRZDo6NhVU="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.3.1_1606342298206_0.3722691055365184"
      },
      "_hasShrinkwrap": false
    },
    "1.3.2": {
      "name": "ts-patch",
      "version": "1.3.2",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.3.2",
      "dist": {
        "shasum": "150770067f0767cbd4240ef3625190f9088db8eb",
        "integrity": "sha512-FpxqNCn03XJHRLa/9GinQl7dAg6XIfxQ80KaJgsGfB1CpmgA2x128Rsg6LaU0b/eUSQltDtuP7/dhFZMusBqeA==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.3.2.tgz",
        "fileCount": 49,
        "unpackedSize": 276634,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgFzxbCRA9TVsSAnZWagAAHtMQAJNqMVrETdwZNriw2S4X\nJ5+pWNA34ImOMH+cJBwOjQMo0qtkW01d0ndFIa1GMfjLLjr5OC/KeSro8mbj\nkvvJofkOm7h1SZSstbHkErXFykcvEbSfgkfIEWWKGaH+YPOgom1sQ9ZEW8zw\nGovG95xUfTzSczaqPPiEgbplUhqMbRHe3Ole2MluA377rF1T9luDLuhY7CGV\nYHPi1oap1zSENDaQE/PuKOj1s7Rst3vsu4jpvKQi/C0tyjlPV6r0MjVGfF/Y\nwlTLxLAyAJuQpzA7qZabVt6g06BjXq9FfMO4HwjY0X0KyyfZ6C3SxiXC6pHj\niuqEJXjHBG2cbtfaQBvb5M7lcA50xvhdKsxneCHezIYj9PB3fvS1v9ynugII\nNwsF5d9IPyPHRx6fU3i3F+v5xRza7Aizwr8coBjz72Y76f/aqKRFC5eZJaug\nRPfxKuy2PCu6M3vaK084wvJRHlsuxrAcHGTeQDl3WMmRWjIYu76oyeWEq/NZ\n/2sJE53IVnO5oDjaMu1qD6FYIcpR+9Nc9ME28/TGNVXINJzC485Ve2CO3Fiq\nmOpQDhtfcK/37XkNxYXPrPhN8hVXjXV9Vm2aMtjrQXusDBdnVa8RQbryDiQ3\nbcZQJ7UhFDNuxzeG8tFvJquk6dEBJUMPIKFyr/Hj71k7W949qCkjV5nUCMFc\nK5ln\r\n=3MTZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCH1UA5srxSBHCheqOjRUxD25hY5ZnD/rZsRK0jmGFWgICIQDeCs8GNLS7jzb87GT99tfcvRqjSZu7m18fk364MdQl8w=="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.3.2_1612135513645_0.9475916792421171"
      },
      "_hasShrinkwrap": false
    },
    "1.3.3": {
      "name": "ts-patch",
      "version": "1.3.3",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.3.3",
      "dist": {
        "shasum": "e9c6dcecae78c60e081f3e564823c8fb8d634f95",
        "integrity": "sha512-ZQYqwuKpXFel/FFJcrtOskykixtimCEwORboawDnoGCFChfTki9aGS99skmxd4lc4PZxZntEJdMIEwhk1QmJdQ==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.3.3.tgz",
        "fileCount": 49,
        "unpackedSize": 282867,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJggz2eCRA9TVsSAnZWagAAAZsP/iEQyO8t4i82BMGDubiF\nXZ66q5Wz8EVqEugjq/D1QaKPJVDAp412WoDL4IfpUJPzMizl3VGDjAy/f4pY\n/NdpPwK+QsSOOMWQH1Li5hpaJ8KoDmbU75Y0Vb2UQ2xBVIx34MLXHPnpLbYt\neF1HbPSDvhQTeRtG30TyPBmC85wn64ZFKUO5iytoYHeu/nLuvqvIT/YNvz+N\nXcM5CRqo0E5qtBZnK0slZwsEPT/ediGCOkro8t0Wf1ub6DRk1lEaOZzUdNt4\nKMq28LDuar20yhu6rRJ1z3yvCebOf1kLLZ6bJASsC2G1VkHXOjzRhAHektqn\nJuC+7+eQMwy79NbAr5zMNR3O6F6W86Cm4kQz6TV/rBM3QJQMX5YcL776LUwX\nT7p2ZN4HmSNH7TkgmMKegOmAqxTtLlkSBQilA2BGylTHq+EORwLEYqCeZfoP\nFAh+X3TmCMXjm/MZNj2sdnNf183dHqN+JNqSIsr+MfQ0QV9w4wC1nsUdTSqi\nTfk+XtPB9AzYngsl8IAH33ANZm43SjmRJzrblxZcxI9BD4sJWJlAwxGIpVWy\nE6yeaIzwQHFImuQiaLJgtxlpUTlxcoQR0/Y4mdTf5e7uARCH7fyIoGjFM+0a\nTpOrTRZq4qEzFxU2qr0ZYhKwl014tRkznYw2PurVBq1CJl9juQtExaT2r5bA\ntXN8\r\n=ImKx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC9W2vC6QL/8bUEsRAp0GlR/wgKfjNboSc5KfMBKXWhhgIgDoN+uRqKXPOT7ZUKnGFFRyR3ugd/Yl9+0Xr+wqT0zvs="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.3.3_1619213725988_0.44968360615937963"
      },
      "_hasShrinkwrap": false
    },
    "1.3.4": {
      "name": "ts-patch",
      "version": "1.3.4",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.3.4",
      "dist": {
        "shasum": "8efc3c5acd50d74c7a118a4e5abf027727119d7a",
        "integrity": "sha512-aRvbAH1N0NtCpCvS99btOvamr5IeWfsfAs0YrHWIYfSAhe5XDqngQldT10Ps3eqMyPcojUIfA11WrMxrxrCH7g==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.3.4.tgz",
        "fileCount": 49,
        "unpackedSize": 283188,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3KuMCRA9TVsSAnZWagAAWw4QAKBNaTJ1osqGPi1RH64R\nLOw5xzwlflNGFw26nyHoRZmzWorwOt2HCMuYgapEDi8ZiTDthxeiunHXuib/\ntUbhpryXDRv7v8gLNeZwz/SRgeVJHAG5nxocb6kfzyDu54RwoYX4V+w6d95k\nxqwas8+mgNiaFdzLsdhysVkl0sXnajgTAZ6F56UpzLHejeYiOTAVBWW97yrs\najhQjF/3NDhKSq6alJlzfTi5LGU44aiTUHfjtAPSBhQ2OuZdStvXZ+aVGNwO\naxHILBSDw70Y7zyKiQ0Msyj9MOtfv2ZKLJ2kpg+oG2MMkoeby6kqH0kYMtwP\nRQKV4MgyK6Kpi2UhGuPHerkEUK871EfzuI1+reJIkxeT4/Vjqn1rEhD2Dur6\npZRXCAzvD4lvO5tZR9w63TLkgneF+unUtOUgW65XwY8kUYmFOxXhLHYmW6VA\nc5M3Qnd1l0QuDjclw/tbNLj0mFzmuP+lXZOsAbc49Nc2MIpUKNumoWW66sta\ngecXrVG7r6wbqgslWlcgFFewBDlvzF53NlAMlgS4kOEO3NFWxQ8SOh5NAnUj\n7JSWYOiRhAMSPboMG1fnWw95Ri/71NqnR58pKeOd2fGciBFxvogfw03REaMv\nl7qlhNjhGkpGIjcd0pReE9zIDyurs0e6MpsQMtk9uIU+Za31iRsIYt2eoXaO\nsBpm\r\n=zKFh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICLFdtWge0p9CF8xPVamyGvfOMfCq5oJawUGr5cta0CDAiEAxu+Ph8CDL3ZypeKxHQ3F93as/ryMDRlh3FVwP/NUmpE="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.3.4_1625074571692_0.19020064391684088"
      },
      "_hasShrinkwrap": false
    },
    "1.4.0": {
      "name": "ts-patch",
      "version": "1.4.0",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.4.0",
      "dist": {
        "shasum": "3cf6476755a05207f1402529829b3413caf62a99",
        "integrity": "sha512-KoL4Gc4MinJbLwXGBnarp/ZDlKKuXZOrcnG0eMuqk1RpLps6l/3YzaxpF0UMJAQVm2ZVreRYVczYIt6J9I7KJw==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.4.0.tgz",
        "fileCount": 49,
        "unpackedSize": 277350,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg7ROtCRA9TVsSAnZWagAAW4AP/2AEmFSJhf/owRshzRfp\nKPBeZjp8OMAa9qJpFPs0uqCrZAZfTC+B/S6tAJet1WDSlQIcZYRhuFfyzUMi\nwrPxaWVuhXao2Xiyi4u6d1Q0AG6IZnib2ahjPR5Bmz5SbZgKX9CQxjB9+RYB\nc8lBb5Y1NnTKZHGPA13i9qnqR9sJw0ojg/MnbdUBbwttf3alORaD2/6OZaPw\nTkEJMUnffBX4138mMwlEC4/LHouguKUCBeFlhEw2JvY27UVkHS4lgHcFeEUZ\nkhcYuR6LKnWwagnBaMgcnP4FqyTUQi9qsfYmwevryiiqLLAmec30f7WXefNm\nqgSeGOWjsWeJpGC0uc8dbuusqAlrD18+E0HiUeNuiyUeLDAUAFSYtNBdRvGT\nhFNoHykxy3N9tzxbJsu88gStS4pFTWyJRNokEvmfreRBgBxmtzOxXyT1TboR\nyKEm/7qE1CVOHeJyzGEYjKhUQvjjp15TX6ZeTHt8AR4cFHxxRKwMvMOgF6FW\n15vCk4hcQH2mq1R4wyQbyqOJx0uVOcdGT3+1T+yfn9KGTIwj49MyG/AdnKWG\nS6wfT6XgdocDGeYWMa/+29QTkAvONeUDlA8em9CGB35Q2W+5WL5IrQ4wzmuO\nxEeivcGSUgpDmuNmUNFrk7slTJ2VSEZ3Okx59h9ZlMRXgJ/f8CmzT/dGu32L\nxjM2\r\n=k9xX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEZn+U+/e3EMMzfRFj/3dz5v+2W41y35TgrpdE/+g8AhAiBDbAuq6yGpUHRPqFn53m1BOdwdqfI/iE/umo2skRR6hg=="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.4.0_1626149805281_0.422857254374563"
      },
      "_hasShrinkwrap": false,
      "deprecated": "Due to VS Code issue, please upgrade to 1.4.1"
    },
    "1.4.1": {
      "name": "ts-patch",
      "version": "1.4.1",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.4.1",
      "dist": {
        "shasum": "f892db5adfbf5f6cbe6b1a707e2e1e56abfb9486",
        "integrity": "sha512-wvD5TotCq1k+OSvbvuqB4TuGKsvSsxPoWWjLxrEbe40SPMar5t+UF0HrF7GkfIAqtfvxitjUEOwP2Mjw1/tr4g==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.4.1.tgz",
        "fileCount": 49,
        "unpackedSize": 278014,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg7f2CCRA9TVsSAnZWagAAbPUP/RMRMhrn792CzF6AfS2I\n8UlI33pp6ntMIMQBZCLjoqYCPHYUzUDahHX8/RO4Jam4jpVnU239x/h5w90d\naJSvn0T0jE/LUqivT0q+RaeIWTNkVrdvIbjwLPlVnEccVTguumSmG9GXeFGT\nU45MTt674kGCZtTJzd6gtGEJB7cJ/D70GmgZJKagP5IKO339Hg3OfK4kL8RJ\nZMcTrWBx2+HJBBLlxW9BuvHQ63wjB2igKah2XGh8MQIeFnEFUyhkhqd1R7fy\nzqXBtIleQJ1+kXmP/iZ0Km8G23f4UvVpfcFDqnh9nJV0dFyxuvwuqPEFiUeU\nS6a074xQqui8aJ6gYKY2//nVtZQcwugsm9Xp/GR8O0AB4VNMG2WHY9Ij/eQj\n/HklHo0qyDXMqCmcoIA/sj1cyQM69kUsgN+6y9PDQ406cXgI3eWm2mPzMvma\ne8VMllYAK/seDz76s3UCdn3J8Cb88DN6mJfGce/iZ3aTG0MiG+s5SRUbVKkW\nyvu6dr6stkJ6jz3o25Q30yk57S+4WbgmYwZ3R6DVW0IsxZKr36GQUbTUh8Qm\nVJLJIgN5sGgqtPZxphuD4sOaGdLohStS+TpjimNiDzzU3GyIA4r7n3hpYDRc\n26VSzJcQiXLFVpIl5A5ypQE5K9tKpqPBe9v5M13sOC/IOPqQIHo2aCuqLCbC\nW1IT\r\n=RB2V\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF5bh9wQ/qQco34P0AcqVJpQLkWemIBCh04B0AuU/buHAiBL7FbFKw/wdMcGXh4wqHYtEt1mUNZI/oFoLINUQ3oNeQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.4.1_1626209665657_0.207949324143611"
      },
      "_hasShrinkwrap": false
    },
    "1.4.2": {
      "name": "ts-patch",
      "version": "1.4.2",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.4.2",
      "dist": {
        "shasum": "2b763dc1de5a24631062844735ca169821c2c604",
        "integrity": "sha512-Nj3mjvQM3t8cB4wGfLKeE8zBT+cx1mDjttOcx9nb2fEl6Q/5u79w19tQniv2eLmeYEbki/+wdQc0zszPEpOxOg==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.4.2.tgz",
        "fileCount": 49,
        "unpackedSize": 278311,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhBetcCRA9TVsSAnZWagAACCEP/3S6QPcoLGniIGV7U2YJ\nHYehEC0H0RAVzrPQ47c0jGF6olmH1ZMXlkY/7OUw37GFwSQd9IAk/NxhoVHi\nmqADjkOy+9gmTUrqfRnUlAWBO9VOCXETKYEgTgqXd3F9Q49cxZBq5lyr5MUv\nNm0wRlm6np5qAJz1r0Rz/bBTbBAkhS1xfXTGjqpINhPHOEIeCzxjFQcvMf77\nru8lnjsSfD7PhVcrCMCy4QOGEqhx/ZMG8Gll5lBsmCBVKBMS98qu5e7/T7cy\nt3JJDyMgY3iO3nmMGOgJf9brtX83ZH11DVoxberMS+HVfP4NMBQHF9cXAJHp\n8lNkPUd0CJ65pDx8YPIeSsDu4Z9YqFEocagv9rCmU9q7t1oesU30FiAgKxv/\nP/qv/UT0s9c8eqqqiNd8AqEtmxP0nqMXbVMXfYCpLUMCw6qmhjBbfpWPttzj\nV0XO0AymeinJiytg3wvAGOGPWuuU9Tm1/VMvCLETYeo2VoqxkiWDwXKjVU2j\nPeiy/9WmRbbI0ZBlcnGmwtWsX9sHX8Uq/tgrNL2DZ5tzq03SjcSA/Qkm0CkR\ndsm6IlEjEzIHcSWQJwr1fSjCO3M6gD+zi6oEW+ME+2UR7zRTNEBZ4P25Ty58\nWqmvqhVezhDw0ymWw7x3vxLiMqGA4Sb7AO4i76hXCtRHlj+ZjYRne+pZEvEZ\npXt9\r\n=nplO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCypenLbOYsy2gCWGVRDm7IvgxA5x5OlhoqxoUxQmSk7gIgKOvmp8g8n9I4vrVjhY8w9djUzJJEYJggxq4GKtSpvWc="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.4.2_1627777884248_0.8531701907770419"
      },
      "_hasShrinkwrap": false
    },
    "1.4.3": {
      "name": "ts-patch",
      "version": "1.4.3",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.4.3",
      "dist": {
        "shasum": "175b855b70cf29b1783d9935662815d0c362e7ab",
        "integrity": "sha512-nLCnlWo87JrDnCoydX0HCKvUbQyIvNOWhmDppBxvuLTDlGco6dlIG3uBNQu+PAnu6SBu4miBLmry8nWV5KsAUw==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.4.3.tgz",
        "fileCount": 49,
        "unpackedSize": 208764,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhIuq/CRA9TVsSAnZWagAAVzIP/izfn3YVKKlRrCT/EuOG\nuttGmKd9v3wQ5chQ9V5QwJ47uWNetoT42Jv9oFQryc2lCkzsQSCi7VXs8wUQ\nXBRvaR/oqq9VQrSV5uj7wQmG9jt57H3SdIRpl3+rMHenTh2vtj8/98cAuWaN\nWxkZmEqc1mhUkxKYMKCu2zohAPoFRlIbr3ZAw95qIKH7W5S+IQRjPiW3OX+E\n7VV7W28FtG8RC6KB+jDFs6smV25yxwS63exMek9WCdKh4NSIoBEo00ehnv9y\n4pJxgXFyprufgLCyd/i4dqp60oKZFYf8gwDzWl6WtpLjsXaFa0DD/P/UgLLX\njdMU6p+Is3eO/NgHHQltmEbU+IqAxFHpmqOaa1VOF41nTAxqGBr2ENz3ZWmp\nzl2eHGt4A/yrLjW6++aN4yzUPh+uFL5D1sfbulfzsZ+1ZiSZQTMXC6SLBy8D\nVCu56c8CkzGcmPmPiE6lZoi0CrNhzx6kKt7Oa/l285ZqB55wK2Dn+iMzqAP+\nbBSpOUANAD+VECRd7uKMsfxJyGcHTUOxpIisN8I/EgABxtRgLwq2wIEiuf9C\nr8NN6pcc3PsJTsC5EFl/PBwV14Hl/rynyOzaL/BKVgwwW5Kqnx2Tg29jRC2L\ng/IUyNn/wfssxsc4cJixBm3w+UYOSxu9ONycyzXleRXUV7xaxjKah1Phgiea\nanL4\r\n=ZiWq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDhraBP29Gmyd/9xYIXvoUo9vkf5gs7qlxgBCuUO2scxgIgTQIk2NI4dk0adPUMh5eE3lp/UXhcp8rqaEEHLCiAJv4="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.4.3_1629678270966_0.22154629407568294"
      },
      "_hasShrinkwrap": false
    },
    "1.4.4": {
      "name": "ts-patch",
      "version": "1.4.4",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0",
        "glob": "^7.1.7",
        "resolve": "^1.20.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.4.4",
      "dist": {
        "shasum": "c4814af4ab36183ddcf04c178f0153ce6ef48245",
        "integrity": "sha512-b0CxxrkrCGsD22gl5BtSFlXzyTFP2mbOVffxMOWRrwdSh37sM01wzxSY4wlbBiHHHAJICmaaDgESzJ8lKkVoZA==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.4.4.tgz",
        "fileCount": 49,
        "unpackedSize": 209466,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKVBTCRA9TVsSAnZWagAA8QcP+QCK4QBABca/zD8aNwTZ\nlj4vRiaSVN0jnbtPt3UpeZirLwM21Lu3Uc2usXV5nE5b3MR1ogC/vt99w9cr\nWPK28C0ET5PiOZu4NyZm1dzpnQY2dkIAm+tf5GakNMGHXbkyg+IWpcp16cM8\nD9zZaFRxcjNpWallHsfs/URt0efyH2iJUcooTxHcTq6r6qahFUZi4Q7XDpLQ\n48e0wIrRTVeeStgW7NQNjc8I6QOufcR+QkMeGXsz3aB2MOt8hZKleZ2JCuUU\nD9wCKm6UKYoXP2ofqsLx7iaARPUL0jgHYZb9KaDpJwLxSH8/2D+LUWnQXYvr\nHuvqSFQhyaLNhkXmbiSpu61wZ80FA8mkmPh+kwdrd5yjz1BY5SEBKe//dDZW\nwLPdrHGYWMmfHMuN31uTDZYcBxD0jMfCC16UYbmlaCWhqZVdXGPcOGHw+UuG\nMC4g4m5PEvNJwfKv80ueSflpdgKg1csSDdUARWQpP83M46Co6iUghv0nT3Qc\nqaz3/ic4zkK84sdXcyutqQtLN3Dd8kx32axMrGzz5x6UMK6FEQ3ltiMcljeZ\nQSh3gP/5umpsWWnyYX449/Xa1XwFZFjJe9s30X9Cje/GrbIOahcNWgjwNUF3\nQoH/ZRUkT19aTw/a3s9S1ZoShOdpE67SM8FdI/s88lVsX0fzhhI3tw1fBulT\nalZT\r\n=eMsL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEvWCA6iQIX3njCOwkBh8F4J0I6v/ZEPaD+TN/DiujEdAiEAj9g6OMXd6MBQHog1entMJUqY71QmT2pe++tt9WZvagQ="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.4.4_1630097491719_0.7045944240464372"
      },
      "_hasShrinkwrap": false
    },
    "1.4.5": {
      "name": "ts-patch",
      "version": "1.4.5",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0",
        "glob": "^7.1.7",
        "resolve": "^1.20.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">2.7.0"
      },
      "_id": "ts-patch@1.4.5",
      "dist": {
        "shasum": "fdbdd973fe33d1f466201bbe3d468e40d16fec1d",
        "integrity": "sha512-8H1lIhT8uNm2TH+fk8FR1DWSyNIZ4E46aCXrUY+6mgzwiOnrqfHwb3sFGX23NR+s/vthyRxxsIZykqfGJVLvsg==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-1.4.5.tgz",
        "fileCount": 49,
        "unpackedSize": 209768,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3Vj7ovumL7lul3awXZURU5EVLrR1Ib5sHnH8uLYKH4AIhAOXelv8QiiUknQef1miaFx+8FwpfQ6XYxjiiVEsU9WTF"
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_1.4.5_1635184756595_0.7539061047919784"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0": {
      "name": "ts-patch",
      "version": "2.0.0",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "glob": "^7.1.7",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "resolve": "^1.20.0",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">=4.0.0"
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@2.0.0",
      "dist": {
        "shasum": "203392cf95f1192181e809fff9dbd1f8e078e880",
        "integrity": "sha512-utGXoASlK2rfxZlCzgsDRiZTC63M0xqqGgYfNZXXNvhbZ3pnekjf8Oar4znvyYqU0zDI8rktABdDnFHRhD9rSw==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-2.0.0.tgz",
        "fileCount": 45,
        "unpackedSize": 164453,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDPPL+LWlR61Jdvi+6DVmLDRK1Vx6FpXEGNQlzYhHIAtAiEAyebpLgXFO/XCag7pogXSXFy/Mz89vqUCS+CLRedQbGU="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_2.0.0_1635794062992_0.7658997110506696"
      },
      "_hasShrinkwrap": false,
      "deprecated": "Broken release. Use 2.0.1 or higher"
    },
    "2.0.1": {
      "name": "ts-patch",
      "version": "2.0.1",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "glob": "^7.1.7",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.5",
        "resolve": "^1.20.0",
        "shelljs": "^0.8.4",
        "strip-ansi": "^6.0.0"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">=4.0.0"
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@2.0.1",
      "dist": {
        "shasum": "08c17caef856b431641fc9fc88015f41195435b6",
        "integrity": "sha512-mP7beU1QkmyDs1+SzXYVaSTD6Xo7ZCibOJ3sZkb/xsQjoAQXvn4oPjk0keC2LfCNAgilqtqgjiWp3pQri1uz4w==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-2.0.1.tgz",
        "fileCount": 45,
        "unpackedSize": 165395,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDJ5cum6U+SiB5Tz8eX3C/mLg8C8w/7aJu3JbEA4x73gwIgX5RorhvdPNYD45J91UE5x9rlITL2PupYXpA7o4SKgNY="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@crosstype.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@crosstype.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_2.0.1_1635806739536_0.2907603900542033"
      },
      "_hasShrinkwrap": false
    },
    "2.0.2": {
      "name": "ts-patch",
      "version": "2.0.2",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "glob": "^8.0.3",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.6",
        "resolve": "^1.22.1",
        "shelljs": "^0.8.5",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">=4.0.0"
      },
      "standard-version": {
        "types": [
          {
            "type": "feat",
            "section": "Features"
          },
          {
            "type": "fix",
            "section": "Bug Fixes"
          },
          {
            "type": "chore",
            "hidden": true
          },
          {
            "type": "docs",
            "hidden": true
          },
          {
            "type": "style",
            "hidden": true
          },
          {
            "type": "refactor",
            "hidden": true
          },
          {
            "type": "perf",
            "hidden": true
          },
          {
            "type": "test",
            "hidden": true
          },
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@2.0.2",
      "dist": {
        "shasum": "be9dc294ced6f53d6a8912f1f6ac98af23a715cd",
        "integrity": "sha512-NbgdS/J/ylaARJVaF1w4cPw378yvw6C1026fU5NKC2GO4jCwRlkuE/G7gwknNMHwkAOhwamKjuzkuLw/u4KlBg==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-2.0.2.tgz",
        "fileCount": 45,
        "unpackedSize": 168514,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCTGmPcpwEGrX3RSoCECtY37xUy7UELydidR5bq4rvARQIgIzzV08/xoGxpr572Gtp832MK3q+QlAa4P8iQ05yH1zY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi8xA6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpO7BAAgbB/Pw+oIGkLJ8HLnEfT3IOIOIuu2GM4c5jeIJewyx3RbMrk\r\neKz2c5PqpcUZcrKMp3PeX5EFdlDtH0AwpyLf/oMj/sHaTH9UnTbEyRtv0kLi\r\nJZLq2pfy6TdDbf5gNen3t6VGlNcykctk2e48QCiRZrnFqy23eUxFLK0jO+wh\r\narvAXifZMXLB7HnePFK9+iWtusrWQalJU5o71t1/jOp9xb/oP3NheIfutTQm\r\n74iWoeiyDgpvLZZ3mJZNtcdNLNiL4deArBuCWrNfJmOpS+nhuyNTA0bYw51t\r\nHRJyfifDm19uuBQonKq2JTTHsro7/ZulQDY3qn1PWSqTGJHVUIBgt52U+gfW\r\ngEcZRCSiTMHqagUL8hNaM2q7t5cFiaNw6a6E6Mf5XYFn8TqiWzK1aZwKhebI\r\noj9hQQdeLhUWtle/baj36x1UWpRYK3+awfLlbH/iQP/zEPfSV+aHXxZA532E\r\nQDlMNXlctxYmhPpo+icJpYqcCB131Wa95lWjkCOqpgazCVdOBBByDgiKWM66\r\nrM8Fykv9Lj/gKgCTy2wDT56EnmQX8PWCa09WGA4PKpmPDO0f9QAsJniECigc\r\nCP+0EMjCaDrClEsfBeAz1T/u87/7kbXsWEi1cslAF50kVhLNoWvkNAUXwYOx\r\nQs9mF7D5nlGWKYzqgA+vjkYdWCwm2cBWXUs=\r\n=5NKq\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_2.0.2_1660096570569_0.15808858986825558"
      },
      "_hasShrinkwrap": false
    },
    "2.1.0": {
      "name": "ts-patch",
      "version": "2.1.0",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "glob": "^8.0.3",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.6",
        "resolve": "^1.22.1",
        "shelljs": "^0.8.5",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/cli.js"
      },
      "peerDependencies": {
        "typescript": ">=4.0.0"
      },
      "standard-version": {
        "types": [
          {
            "type": "feat",
            "section": "Features"
          },
          {
            "type": "fix",
            "section": "Bug Fixes"
          },
          {
            "type": "chore",
            "hidden": true
          },
          {
            "type": "docs",
            "hidden": true
          },
          {
            "type": "style",
            "hidden": true
          },
          {
            "type": "refactor",
            "hidden": true
          },
          {
            "type": "perf",
            "hidden": true
          },
          {
            "type": "test",
            "hidden": true
          },
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@2.1.0",
      "dist": {
        "shasum": "b4ba3e3f029144d7c4c6566916ebd5a453f070f5",
        "integrity": "sha512-+6LbQSGgHUnK+grgk9nvKhesc0/dDNxms0IL1XPZeTfmPFCx/QSuwz9k+9yFe0xYDD7xBlHYK0Zp0qrTCaJcAw==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-2.1.0.tgz",
        "fileCount": 45,
        "unpackedSize": 170915,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCID3BRjmLpd9vT0V5OPz066XTb4BDVc1i5SRwo61f8R5TAiEA+TIYdU3F7JXi7A/Yzn7VIf3wQ+jnDSaZCGTv8frizz8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkmWSACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpNIQ//S3OIN8itHVIyFDJcMOiX2LzeWbHmx/uMv7eGVmCl3x/3qJym\r\nSjapzVA+esYQ2sL8VEeMTkWFBkwk3VKwUmNiRgtaNQ9A/jL6h1LQOSA4BfTo\r\n3lt62mfh7GCYJ0FTIET4Ec+LOjG/IdLR1gc+YhNcUcJ2mSYj+InwivYNNP12\r\nRkU1uekeD/XlVxtaXQCzWKQ2n+PDIVT05ZnDF805DhHjM8JfDnRFUZRdfJDU\r\n6yP1uJrmVsu4lxc0dO/8193aowlLzThHtAUKnT5yEtGllOQHU8jNFzralyUj\r\nVTn+u3Ac6zZu2XwD9KB1Oz1lH4Wb59PSTijqvKXW+SKiEsCDCUo6uxBObWCp\r\n0oAoYe03IdkHYTTFEKoJQ3AmZuk7IPTNs1cBxj3iMVb6jr+K18+F72guIPMB\r\nhwfd2losBlQc4OmsigpklpTD+NiCdKvnI6IhQ0MiNOejF42Hf70AL0it7qyx\r\na8zg4IjnH9QhkcKFhOK188TkYnMuSvBkYs94yObP97ZHr6mlaXvhnF7rlMbO\r\n+B+/fZixgttpNuclNYhw0Z0qdGsci4k37D+344FkGJYQk/dwisTi9phRAKwN\r\ng5hd1zzPX1ysI/i4YsF/J6/OSH+14RBA+rCVqF/mIlmMnXCgDmxFFOXGU1ji\r\nx1WkQ8Y4Yp05w+GehP0F09BcK1eUPeTkaGQ=\r\n=DOYZ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_2.1.0_1670538642453_0.737272060063386"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0-beta1": {
      "name": "ts-patch",
      "version": "3.0.0-beta1",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "peerDependencies": {
        "typescript": ">=5.0.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "standard-version": {
        "types": [
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "readme": "[![npm version](https://badge.fury.io/js/ts-patch.svg)](https://badge.fury.io/js/ts-patch)\n[![NPM Downloads](https://img.shields.io/npm/dm/ts-patch.svg?style=flat)](https://npmjs.org/package/ts-patch)\n![Build Status](https://github.com/nonara/ts-patch/workflows/Build/badge.svg)\n\n# TS Patch\n\nDirectly patch typescript installation to allow custom transformers (plugins).  \n\n- Plugins are specified in `tsconfig.json`, or provided programmatically in `CompilerOptions`.\n- Based on [ttypescript](https://github.com/cevek/ttypescript) - Fully compatible + offers more features\n\n## TypeScript v5 Note\n\nTS v5 has made some fundamental changes which affect the current process. As a result, it is not yet supported.\n\nWe're working on adding support. More notes on that here:\n\n- [Issue #93 — Not working with TypeScript v5 (author's note)](https://github.com/nonara/ts-patch/issues/93)\n\n## Features\n* Patch / unpatch any version of typescript (4.*)\n* Advanced options for patching individual libraries, specific locations, etc. (see `ts-patch /?`)\n* _(New)_ Supports 'transforming' the `Program` instance during creation. (see: [Transforming Program](#transforming-program))\n* _(New)_ Add, remove, or modify diagnostics! (see: [Altering Diagnostics](#altering-diagnostics))\n\n## Setup\n\n1. Install package\n```sh\n<yarn|npm|pnpm> add -D ts-patch\n```\n\n2. Patch typescript\n```shell\n# For advanced options, see: ts-patch /?\nts-patch install\n```\n\n3. Add `prepare` script (keeps patch persisted after npm install)\n\n`package.json`\n ```jsonc\n{\n  /* ... */\n  \"scripts\": {\n    \"prepare\": \"ts-patch install -s\"\n  }\n}\n ```\n\n## Table of Contents\n  - [Configuring](#configuring)\n      - [tsconfig.json](#tsconfigjson)\n      - [Plugin Options](#plugin-options)\n      - [Source Transformer Signatures](#source-transformer-signatures)\n  - [Usage](#usage)\n      - [Transforming AST Nodes](#transforming-ast-nodes)\n          - [Example Node Transformers](#example-node-transformers)\n      - [Transforming Program](#transforming-program)\n          - [Example Program Transformer](#example-program-transformer)\n      - [Altering Diagnostics](#altering-diagnostics)  \n  - [Resources](#resources)\n      - [Recommended Reading](#recommended-reading)\n      - [Recommended Tools](#recommended-tools)\n  - [Credit](#credit)\n  - [HALP!!!](#halp)\n  - [License](#license)\n  \n## Configuring\n### tsconfig.json\n\nAdd transformers to `compilerOptions` in `plugins` array.  \n\n**Examples**\n```jsonc\n{\n    \"compilerOptions\": {\n        \"plugins\": [\n            // Source Transformer: 'type' defaults to 'program'\n            { \"transform\": \"transformer-module\", \"someOption1\": 123, \"someOption2\": 321 },\n\n            // Source Transformer: program signature \n            { \"transform\": \"./transformers/my-transformer.ts\", \"type\": \"program\" },\n\n            // Source Transformer: program signature, applies after TS transformers\n            { \"transform\": \"transformer-module1\", \"type\": \"config\", \"after\": true },\n\n            // Source Transformer: checker signature, applies to TS declarations\n            { \"transform\": \"transformer-module2\", \"type\": \"checker\", \"afterDeclarations\": true }, \n            \n            // Source Transformer: raw signature\n            { \"transform\": \"transformer-module3\", \"type\": \"raw\" },\n\n            // Source Transformer: compilerOptions signature \n            { \"transform\": \"transformer-module4\", \"type\": \"compilerOptions\" },\n\n            // Program Transformer: Only has one signature - no type specified, because it does not apply\n            { \"transform\": \"transformer-module5\", \"transformProgram\": true }\n        ]\n    }\n}\n```\n\n### Plugin Options\n| Option            | Type    | Description |\n| ------------------| ------- | :----------- |\n| **transform**     | string  | Module name or path to transformer _(*.ts or *.js)_ |\n| type              | string  | *Source Transformer* entry point signature _(see: [Source Transformer Signatures](#source-transformer-signatures))_ |\n| import            | string  | Name of exported transformer function _(defaults to `default` export)_ |\n| tsConfig          | string  | tsconfig.json file _for transformer_ (allows specifying compileOptions, path mapping support, etc) |\n| after             | boolean | Apply transformer after stock TS transformers. |\n| afterDeclarations | boolean | Apply transformer to declaration (*.d.ts) files _(TypeScript 2.9+)_. |\n| transformProgram  | boolean | Transform `Program` during `ts.createProgram()` _(see: [Transforming Program](#transforming-program))_ |\n| _..._             |         | Provide your own custom options, which will be passed to the transformer |\n\n_Note: Required options are bold_\n\n### Source Transformer Signatures\nThe following are the possible values for the `type` option and their corresponding entry point signatures.  \n_Note: These apply to Source Transformers only._\n\n#### program (default)\n\nSignature with `ts.Program` instance:\n```ts\n(program: ts.Program, config: PluginConfig, extras: TransformerExtras) => ts.TransformerFactory\n```\n\n_ts.TransformerFactory_ >>> `(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile`  \n_TransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L76)  \n\n_Note: This is *not* the configuration for a [Program Transformer](#transforming-program)._\n\n#### config\nSignature with transformer's config:\n```ts\n(config: PluginConfig) => ts.TransformerFactory\n```\n\n#### checker\nSignature with `ts.TypeChecker`:\n```ts\n(checker: ts.TypeChecker, config: PluginConfig) => ts.TransformerFactory\n```\n\n#### raw\nSignature without `ts-patch` wrapper:\n```ts\n/* ts.TransformerFactory */ \n(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile\n```\n\n#### compilerOptions\n```ts\n(compilerOpts: ts.CompilerOptions, config: PluginConfig) => ts.TransformerFactory\n```\n\n## Usage\n### Transforming AST Nodes\n\nTransformers can be written in JS or TS.\n\n```ts\n// transformer1-module\nimport * as ts from 'typescript';\nexport default function(program: ts.Program, pluginOptions: any) {\n    return (ctx: ts.TransformationContext) => {\n        return (sourceFile: ts.SourceFile) => {\n            function visitor(node: ts.Node): ts.Node {\n                // if (ts.isCallExpression(node)) {\n                //     return ts.createLiteral('call');\n                // }\n                return ts.visitEachChild(node, visitor, ctx);\n            }\n            return ts.visitEachChild(sourceFile, visitor, ctx);\n        };\n    };\n}\n\n```\n\n#### Example Node Transformers\n\n[`{ transform: \"typescript-transform-paths\" }`](https://github.com/LeDDGroup/typescript-transform-paths)\n\n[`{ transform: \"typescript-is/lib/transform-inline/transformer\" }`](https://github.com/woutervh-/typescript-is) \n\n[`{ transform: \"ts-transform-img/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-img) \n\n[`{ transform: \"ts-transform-css-modules/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-css-modules) \n\n[`{ transform: \"ts-transform-react-intl/dist/transform\", import: \"transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-react-intl) \n\n[`{ transform: \"ts-nameof\", type: \"raw\" }`](https://github.com/dsherret/ts-nameof) \n\n[`{ transform: \"typescript-transform-jsx\" }`](https://github.com/LeDDGroup/typescript-transform-jsx) \n\n[`{ transform: \"ts-transformer-minify-privates\" }`](https://github.com/timocov/ts-transformer-minify-privates) \n\n[`{ transform: \"typia/lib/transform\" }`](https://github.com/samchon/typia) \n\n### Transforming Program\n\nSometimes you want to do more than just transform source code. For example you may want to:\n\n- TypeCheck code after it's been transformed\n- Generate code and add it to the program\n- Add or remove emit files during transformation\n\nFor this, we've introduced what we call a Program Transformer. The transform action takes place during `ts.createProgram`, and allows\nre-creating the `Program` instance that typescript uses.\n\n#### Configuring Program Transformer\n\nTo configure a Program Transformer, supply `\"transformProgram\": true` in the config transformer entry.\n\n_Note: The `type`, `before`, and `after` options do not apply to a Program Transformer and will be ignored_\n\n[See Config Example](#tsconfigjson)\n\n#### Signature\n\nThere is only one possible signature for a Program Transformer entry point.\n\n```TS\n(program: ts.Program, host: ts.CompilerHost | undefined, options: PluginConfig, extras: ProgramTransformerExtras) => ts.Program\n```\n\n_ProgramTransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L90)  \n\n#### Example Program Transformer\n```TypeScript\n/** \n * Add a file to Program\n */\nimport * as ts from 'typescript';\nimport * as path from 'path';\nimport { ProgramTransformerExtras, PluginConfig } from 'ts-patch';\n\nexport const newFile = path.resolve(__dirname, 'added-file.ts');\n\nexport default function (\n  program: ts.Program, \n  host: ts.CompilerHost | undefined, \n  options: PluginConfig, \n  { ts: tsInstance }: ProgramTransformerExtras\n) {\n  return tsInstance.createProgram(\n    /* rootNames */ program.getRootFileNames().concat([ newFile ]),\n    program.getCompilerOptions(),\n    host,\n    /* oldProgram */ program\n  );\n}\n```\n\n**Note:** For a more complete example, see [Transforming Program with additional AST transformations](https://github.com/nonara/ts-patch/discussions/29#discussioncomment-325979)\n\n### Altering Diagnostics\n\nDiagnostics can be altered in a Source Transformer.\n\nTo alter diagnostics, use the [program type signature](#program-default), and use the following properties from the \n`TransformerExtras` parameter\n\n| property | description |\n| -------- |----------- |\n| diagnostics | Reference to `Diagnostic` array\n| addDiagnostic() | Directly add `Diagnostic` to `diagnostics` array |\n| removeDiagnostic() | Directly remove `Diagnostic` from `diagnostics` array (uses splice, for safe removal)\n\n#### Notes\n- This alters diagnostics during _emit only_. If you want to alter diagnostics in your IDE as well, you'll need to create a LanguageService plugin to accompany your source transformer\n\n## Resources\n\n### Recommended Reading\n\n- [Advice for working with the TS Compiler API](https://github.com/nonara/ts-patch/discussions/31) (**must read**)\n- [TypeScript Transformer Handbook](https://github.com/madou/typescript-transformer-handbook) (**must read**)\n- Article: [How to Write a TypeScript Transform (Plugin)](https://dev.doctorevidence.com/how-to-write-a-typescript-transform-plugin-fc5308fdd943)\n- Article: [Creating a TypeScript Transformer](https://43081j.com/2018/08/creating-a-typescript-transform?source=post_page-----731e2b0b66e6----------------------)\n\n### Recommended Tools\n\n| Tool | Type | Description |\n| ---- | ---- | ----------- |\n| [TS AST Viewer](https://ts-ast-viewer.com/) | Website | Allows you to see the `Node` structure and other TS properties of your source code.\n| [ts-query](https://www.npmjs.com/package/@phenomnomnominal/tsquery) | NPM Package |  Perform fast CSS-like queries on AST to find specific nodes (by attribute, kind, name, etc)\n| [ts-query Playground](https://tsquery-playground.firebaseapp.com/) | Website | Test `ts-query` in realtime\n| [ts-expose-internals](https://github.com/nonara/ts-expose-internals) | NPM Package | Exposes internal types and methods of the TS compiler API \n\n## Credit\n| Author                |  Module |\n| --------------------- |  ----------- |\n| [Ron S.](https://twitter.com/Ron) | [ts-patch](https://github.com/nonara/ts-patch/) |\n| [cevek](https://github.com/cevek) | [ttypescript](https://github.com/cevek/ttypescript) |\n\n## HALP!!!\n\n- Start here: [Recommended Reading](#recommended-reading)\n- Ask on [StackOverflow](https://stackoverflow.com/questions/tagged/typescript-compiler-api) with the `#typescript-compiler-api` tag\n- Read the handbook and still stuck? [Ask in Discussions](https://github.com/nonara/ts-patch/discussions) - someone may answer if they have time.\n- Check out the `#compiler-api` room on the [TypeScript Discord Server](https://discord.com/invite/typescript).\n\n## License\n\nThis project is licensed under the MIT License, as described in `LICENSE.md`\n",
      "readmeFilename": "README.md",
      "gitHead": "1a5dd4f82ed2c49679fbc883bd34178aed27b30f",
      "_id": "ts-patch@3.0.0-beta1",
      "_nodeVersion": "18.10.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-TVxQhbhyY7h0kOmnOerQ2grHTbskNkyRyBaHK0DW2zEWXdSFCGfPhxqjSjfVqL7e4zbbiYz2t0BzxCTn8j36zg==",
        "shasum": "bf1eb48447218980d0550ba041eb8b492827b6aa",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.0.0-beta1.tgz",
        "fileCount": 143,
        "unpackedSize": 276170,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDXkEzpvouDkfR5uvp1e313bU6Ro5zLJ+iZmnvWNHP3CwIhAJ4/DVCvbJ4kvo9rdXnrCH9eRDVTJvuGGPkf+/wwvr2B"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkMOx1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqKJA/9G1MLyqVg5xs/sJlROE0+iBW5I+wac2nvBZAQzhbtZ2gtY2tP\r\nD8vnx41fuZ8V9+1392UqhxbfRc4iXiOj8NldlY1GVb7zVaNLanQpTA0Jv3oq\r\nVy/Vp2/3njuQ2eGEMDywd5MXIQNcKivjTprT0GqbgEdHlF8znFar9MYUlnGw\r\nTpulKQsYULSOtVDkRB19wkLtHttTRIeM/BnpDYDmIYwLMnyeePsAvZHhbLzi\r\nrXUsiaStfnoVKc3bVIsV6ABSgd5MjTPJtTgO6y9dWTv8ZRS6JbJqpqE5faEv\r\n9l8PqqKbfN3VCAkY82H/sgx/UNEyyReGg5B404l4QFGrt2uVlnjrikznaMZy\r\ng+w1/iNqsYyErcAS6sXMZWcZKwkCI+5Y0tejZFtWe0RLPOGUv/KBZkOCBT2m\r\nyegBC9NwhzdOrMC20vQm4eWpLmGb/KWu3d8NYDfcDqOHzMjvUukVNRiwRmzx\r\noyVpl2UJsqAOiqngI4qKU4ZqyZXukBUWfhJJfGWn4v80DWBQCWtITxvxW+T6\r\neKlWh+WKrZE9yMillDizKwjH7hYXrX6vaDU2RoBrTJJ7SeoKnNRTAuWnBQvw\r\ndkwhEaXh9SM59Bjk9LEBNRg553QmyOsY8DkMm41cXK7BYbFvcbaimmJ97+eL\r\nP3sh0rqfLzuHws+frOddiUcpkmrOGN/Te1w=\r\n=t7wx\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.0.0-beta1_1680927860758_0.6757318664560688"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0-beta2": {
      "name": "ts-patch",
      "version": "3.0.0-beta2",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "peerDependencies": {
        "typescript": ">=5.0.0"
      },
      "directories": {
        "resources": "./resources"
      },
      "standard-version": {
        "types": [
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "readme": "[![npm version](https://badge.fury.io/js/ts-patch.svg)](https://badge.fury.io/js/ts-patch)\n[![NPM Downloads](https://img.shields.io/npm/dm/ts-patch.svg?style=flat)](https://npmjs.org/package/ts-patch)\n![Build Status](https://github.com/nonara/ts-patch/workflows/Build/badge.svg)\n\n# TS Patch\n\nDirectly patch typescript installation to allow custom transformers (plugins).  \n\n- Plugins are specified in `tsconfig.json`, or provided programmatically in `CompilerOptions`.\n- Based on [ttypescript](https://github.com/cevek/ttypescript) - Fully compatible + offers more features\n\n## TypeScript v5 Note\n\nTS v5 has made some fundamental changes which affect the current process. As a result, it is not yet supported.\n\nWe're working on adding support. More notes on that here:\n\n- [Issue #93 — Not working with TypeScript v5 (author's note)](https://github.com/nonara/ts-patch/issues/93)\n\n## Features\n* Patch / unpatch any version of typescript (4.*)\n* Advanced options for patching individual libraries, specific locations, etc. (see `ts-patch /?`)\n* _(New)_ Supports 'transforming' the `Program` instance during creation. (see: [Transforming Program](#transforming-program))\n* _(New)_ Add, remove, or modify diagnostics! (see: [Altering Diagnostics](#altering-diagnostics))\n\n## Setup\n\n1. Install package\n```sh\n<yarn|npm|pnpm> add -D ts-patch\n```\n\n2. Patch typescript\n```shell\n# For advanced options, see: ts-patch /?\nts-patch install\n```\n\n3. Add `prepare` script (keeps patch persisted after npm install)\n\n`package.json`\n ```jsonc\n{\n  /* ... */\n  \"scripts\": {\n    \"prepare\": \"ts-patch install -s\"\n  }\n}\n ```\n\n## Table of Contents\n  - [Configuring](#configuring)\n      - [tsconfig.json](#tsconfigjson)\n      - [Plugin Options](#plugin-options)\n      - [Source Transformer Signatures](#source-transformer-signatures)\n  - [Usage](#usage)\n      - [Transforming AST Nodes](#transforming-ast-nodes)\n          - [Example Node Transformers](#example-node-transformers)\n      - [Transforming Program](#transforming-program)\n          - [Example Program Transformer](#example-program-transformer)\n      - [Altering Diagnostics](#altering-diagnostics)  \n  - [Resources](#resources)\n      - [Recommended Reading](#recommended-reading)\n      - [Recommended Tools](#recommended-tools)\n  - [Credit](#credit)\n  - [HALP!!!](#halp)\n  - [License](#license)\n  \n## Configuring\n### tsconfig.json\n\nAdd transformers to `compilerOptions` in `plugins` array.  \n\n**Examples**\n```jsonc\n{\n    \"compilerOptions\": {\n        \"plugins\": [\n            // Source Transformer: 'type' defaults to 'program'\n            { \"transform\": \"transformer-module\", \"someOption1\": 123, \"someOption2\": 321 },\n\n            // Source Transformer: program signature \n            { \"transform\": \"./transformers/my-transformer.ts\", \"type\": \"program\" },\n\n            // Source Transformer: program signature, applies after TS transformers\n            { \"transform\": \"transformer-module1\", \"type\": \"config\", \"after\": true },\n\n            // Source Transformer: checker signature, applies to TS declarations\n            { \"transform\": \"transformer-module2\", \"type\": \"checker\", \"afterDeclarations\": true }, \n            \n            // Source Transformer: raw signature\n            { \"transform\": \"transformer-module3\", \"type\": \"raw\" },\n\n            // Source Transformer: compilerOptions signature \n            { \"transform\": \"transformer-module4\", \"type\": \"compilerOptions\" },\n\n            // Program Transformer: Only has one signature - no type specified, because it does not apply\n            { \"transform\": \"transformer-module5\", \"transformProgram\": true }\n        ]\n    }\n}\n```\n\n### Plugin Options\n| Option            | Type    | Description |\n| ------------------| ------- | :----------- |\n| **transform**     | string  | Module name or path to transformer _(*.ts or *.js)_ |\n| type              | string  | *Source Transformer* entry point signature _(see: [Source Transformer Signatures](#source-transformer-signatures))_ |\n| import            | string  | Name of exported transformer function _(defaults to `default` export)_ |\n| tsConfig          | string  | tsconfig.json file _for transformer_ (allows specifying compileOptions, path mapping support, etc) |\n| after             | boolean | Apply transformer after stock TS transformers. |\n| afterDeclarations | boolean | Apply transformer to declaration (*.d.ts) files _(TypeScript 2.9+)_. |\n| transformProgram  | boolean | Transform `Program` during `ts.createProgram()` _(see: [Transforming Program](#transforming-program))_ |\n| _..._             |         | Provide your own custom options, which will be passed to the transformer |\n\n_Note: Required options are bold_\n\n### Source Transformer Signatures\nThe following are the possible values for the `type` option and their corresponding entry point signatures.  \n_Note: These apply to Source Transformers only._\n\n#### program (default)\n\nSignature with `ts.Program` instance:\n```ts\n(program: ts.Program, config: PluginConfig, extras: TransformerExtras) => ts.TransformerFactory\n```\n\n_ts.TransformerFactory_ >>> `(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile`  \n_TransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L76)  \n\n_Note: This is *not* the configuration for a [Program Transformer](#transforming-program)._\n\n#### config\nSignature with transformer's config:\n```ts\n(config: PluginConfig) => ts.TransformerFactory\n```\n\n#### checker\nSignature with `ts.TypeChecker`:\n```ts\n(checker: ts.TypeChecker, config: PluginConfig) => ts.TransformerFactory\n```\n\n#### raw\nSignature without `ts-patch` wrapper:\n```ts\n/* ts.TransformerFactory */ \n(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile\n```\n\n#### compilerOptions\n```ts\n(compilerOpts: ts.CompilerOptions, config: PluginConfig) => ts.TransformerFactory\n```\n\n## Usage\n### Transforming AST Nodes\n\nTransformers can be written in JS or TS.\n\n```ts\n// transformer1-module\nimport * as ts from 'typescript';\nexport default function(program: ts.Program, pluginOptions: any) {\n    return (ctx: ts.TransformationContext) => {\n        return (sourceFile: ts.SourceFile) => {\n            function visitor(node: ts.Node): ts.Node {\n                // if (ts.isCallExpression(node)) {\n                //     return ts.createLiteral('call');\n                // }\n                return ts.visitEachChild(node, visitor, ctx);\n            }\n            return ts.visitEachChild(sourceFile, visitor, ctx);\n        };\n    };\n}\n\n```\n\n#### Example Node Transformers\n\n[`{ transform: \"typescript-transform-paths\" }`](https://github.com/LeDDGroup/typescript-transform-paths)\n\n[`{ transform: \"typescript-is/lib/transform-inline/transformer\" }`](https://github.com/woutervh-/typescript-is) \n\n[`{ transform: \"ts-transform-img/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-img) \n\n[`{ transform: \"ts-transform-css-modules/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-css-modules) \n\n[`{ transform: \"ts-transform-react-intl/dist/transform\", import: \"transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-react-intl) \n\n[`{ transform: \"ts-nameof\", type: \"raw\" }`](https://github.com/dsherret/ts-nameof) \n\n[`{ transform: \"typescript-transform-jsx\" }`](https://github.com/LeDDGroup/typescript-transform-jsx) \n\n[`{ transform: \"ts-transformer-minify-privates\" }`](https://github.com/timocov/ts-transformer-minify-privates) \n\n[`{ transform: \"typia/lib/transform\" }`](https://github.com/samchon/typia) \n\n### Transforming Program\n\nSometimes you want to do more than just transform source code. For example you may want to:\n\n- TypeCheck code after it's been transformed\n- Generate code and add it to the program\n- Add or remove emit files during transformation\n\nFor this, we've introduced what we call a Program Transformer. The transform action takes place during `ts.createProgram`, and allows\nre-creating the `Program` instance that typescript uses.\n\n#### Configuring Program Transformer\n\nTo configure a Program Transformer, supply `\"transformProgram\": true` in the config transformer entry.\n\n_Note: The `type`, `before`, and `after` options do not apply to a Program Transformer and will be ignored_\n\n[See Config Example](#tsconfigjson)\n\n#### Signature\n\nThere is only one possible signature for a Program Transformer entry point.\n\n```TS\n(program: ts.Program, host: ts.CompilerHost | undefined, options: PluginConfig, extras: ProgramTransformerExtras) => ts.Program\n```\n\n_ProgramTransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L90)  \n\n#### Example Program Transformer\n```TypeScript\n/** \n * Add a file to Program\n */\nimport * as ts from 'typescript';\nimport * as path from 'path';\nimport { ProgramTransformerExtras, PluginConfig } from 'ts-patch';\n\nexport const newFile = path.resolve(__dirname, 'added-file.ts');\n\nexport default function (\n  program: ts.Program, \n  host: ts.CompilerHost | undefined, \n  options: PluginConfig, \n  { ts: tsInstance }: ProgramTransformerExtras\n) {\n  return tsInstance.createProgram(\n    /* rootNames */ program.getRootFileNames().concat([ newFile ]),\n    program.getCompilerOptions(),\n    host,\n    /* oldProgram */ program\n  );\n}\n```\n\n**Note:** For a more complete example, see [Transforming Program with additional AST transformations](https://github.com/nonara/ts-patch/discussions/29#discussioncomment-325979)\n\n### Altering Diagnostics\n\nDiagnostics can be altered in a Source Transformer.\n\nTo alter diagnostics, use the [program type signature](#program-default), and use the following properties from the \n`TransformerExtras` parameter\n\n| property | description |\n| -------- |----------- |\n| diagnostics | Reference to `Diagnostic` array\n| addDiagnostic() | Directly add `Diagnostic` to `diagnostics` array |\n| removeDiagnostic() | Directly remove `Diagnostic` from `diagnostics` array (uses splice, for safe removal)\n\n#### Notes\n- This alters diagnostics during _emit only_. If you want to alter diagnostics in your IDE as well, you'll need to create a LanguageService plugin to accompany your source transformer\n\n## Resources\n\n### Recommended Reading\n\n- [Advice for working with the TS Compiler API](https://github.com/nonara/ts-patch/discussions/31) (**must read**)\n- [TypeScript Transformer Handbook](https://github.com/madou/typescript-transformer-handbook) (**must read**)\n- Article: [How to Write a TypeScript Transform (Plugin)](https://dev.doctorevidence.com/how-to-write-a-typescript-transform-plugin-fc5308fdd943)\n- Article: [Creating a TypeScript Transformer](https://43081j.com/2018/08/creating-a-typescript-transform?source=post_page-----731e2b0b66e6----------------------)\n\n### Recommended Tools\n\n| Tool | Type | Description |\n| ---- | ---- | ----------- |\n| [TS AST Viewer](https://ts-ast-viewer.com/) | Website | Allows you to see the `Node` structure and other TS properties of your source code.\n| [ts-query](https://www.npmjs.com/package/@phenomnomnominal/tsquery) | NPM Package |  Perform fast CSS-like queries on AST to find specific nodes (by attribute, kind, name, etc)\n| [ts-query Playground](https://tsquery-playground.firebaseapp.com/) | Website | Test `ts-query` in realtime\n| [ts-expose-internals](https://github.com/nonara/ts-expose-internals) | NPM Package | Exposes internal types and methods of the TS compiler API \n\n## Credit\n| Author                |  Module |\n| --------------------- |  ----------- |\n| [Ron S.](https://twitter.com/Ron) | [ts-patch](https://github.com/nonara/ts-patch/) |\n| [cevek](https://github.com/cevek) | [ttypescript](https://github.com/cevek/ttypescript) |\n\n## HALP!!!\n\n- Start here: [Recommended Reading](#recommended-reading)\n- Ask on [StackOverflow](https://stackoverflow.com/questions/tagged/typescript-compiler-api) with the `#typescript-compiler-api` tag\n- Read the handbook and still stuck? [Ask in Discussions](https://github.com/nonara/ts-patch/discussions) - someone may answer if they have time.\n- Check out the `#compiler-api` room on the [TypeScript Discord Server](https://discord.com/invite/typescript).\n\n## License\n\nThis project is licensed under the MIT License, as described in `LICENSE.md`\n",
      "readmeFilename": "README.md",
      "gitHead": "1a5dd4f82ed2c49679fbc883bd34178aed27b30f",
      "_id": "ts-patch@3.0.0-beta2",
      "_nodeVersion": "18.10.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-Ji1PX39mn6Rygk643rmV/Z+0SBWH9Om7bpTqT/Rc2lHiLdI8ZZpPSwSeSYYsUPDtB6Tsfv7/625m3uzL5wye9g==",
        "shasum": "de1f46ad57fbd938a88c0b3c26c37deb5f918761",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.0.0-beta2.tgz",
        "fileCount": 143,
        "unpackedSize": 276035,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCXldN2rXKRLouL/bC27WlBT3jsItM/D32cYbf0ADJrdgIhAIRcjE8/9fdMCdW1O1Tmrxwz+a/AFb+d3tdBbZ29MoeU"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkMPi3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpE1Q//f8avGuk9xtCIFcbolIslTCSEEX+82Bf9oqpJH7gxbZdhlSIT\r\nO0TBxoU+TrlBpDvwUvXOerkIvsI6nyw5OUFWvqg9DT07AMVel2zbsOt2oamc\r\n1z7OsgRDQ12X8wF28YcQU9iE3ECmPZgZV+Tie+Fu23qDn1nqp9IyVhW+f/IM\r\nfV1Cv1CjO8hpEjroXw6FfMkos/TFd9FyKAX/FDea2Bf3G2/HxfIJJyea2Skg\r\nqDXl45CYtJB4X0LcTWIkOhxjSOH84uQ900+4dJj1stJIsWTVVHJ+bIk+pXvy\r\nSb6MBMZYWq7IyW1xW3yevVfu1vekId4OGAWy9tixte0spIOzGK+GED3GU1MW\r\nfiho45SGRkNk8nkrgA++UmFFfBlRpTMxhUECFJPZ3oSfh8OwkHXDDb4OxlIh\r\nJ9PegNLrAEaaIdvSY2KUNmWGN7axKQz46b7Cht8EsYvWpdQ/zDC0606Z5+9C\r\npasXykZohosG3n536PNF/ZTE/tirJCnGPptsj07N1Yfj2hvLnNKoif7f0ofs\r\n7OYzfYlbFfUGrEw4sjh9N86AOmhllFyJxrXS0pFxIKL4S9hq0KttXocLsgBV\r\nLIeWjMoBXnrv3sAcy7gacomtmOsKn9NL3H9ct5RVz85zC1ITs1rZsq6bI3bb\r\nBt6ohcMtvoCP4F/Uq7Dh28Y/tykKuuoBPRc=\r\n=Yn40\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.0.0-beta2_1680930999031_0.6690509186806781"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0-beta3": {
      "name": "ts-patch",
      "version": "3.0.0-beta3",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin\\ts-patch.js",
        "tspc": "bin\\tspc.js"
      },
      "standard-version": {
        "types": [
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@3.0.0-beta3",
      "dist": {
        "shasum": "59ea941a07c2fcde6ac8ab0a4665af1a396603e8",
        "integrity": "sha512-WAuauq0u3jPWJLJRVQi4tz01XQ1KHi05sPxUrzjGx4xUweoCzYtpLHaTlbcBVw0u7iptQQ8hPZNCS36C6Uu8vw==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.0.0-beta3.tgz",
        "fileCount": 155,
        "unpackedSize": 269901,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEBmaZzqyy04hobRpeUvdR+Kp86KcZg/QwoewucHiDR/AiBEgDcfJIL4cx2D6ReSr5p/3hqs1oojh352TlZdM/9bnA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkODkfACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqjBQ/+IgCPrAP8/C89X1alg/U13GO4eipQEHX9FumvVlmqSBIhC4YB\r\nL8VzMysh6nfsBCd/+EBqUq9oBCNUwxASRIODkDtZDESZZr/fAvyowXrYhbNv\r\nG2rbs3EuW9KFrO1cKeZDKePMRZWnOiNS+7NaZr6Syz9uD57idIR2ey1qSGPH\r\ny47pj/26rSJHrQvt5xsxqLLPK3L6WtbgR4htbejpTi4gZVOOZZckYGjrEF5L\r\nypuvR+oW956PqFSqvUmJM+dMXMY3U0+nFDdC08VkbVu23BsM+/Kl/rQM6jI+\r\nirOlnjFLjyRbs0r6fw2HO3UhkaGtI290/TB2izbldv95j0cdQwHxGHcQ4has\r\nceIKC6N1LzffVtl3umVwGWyPIALeBppSOT0VtBHROMRd16Ls50Wl8eMHvAOT\r\ny4Lisq0lO8lLCP0a2BIGwIF4qic7m5KeOyJPmx0Rl+vMPSGonq4DUZ0jkpwF\r\nSgyq3agKBcg504knyI8BDL6V5Ktfyd+AkjSUr28S0juF0jYKhBfC4LjNtDIp\r\nNOtOCcQAEi/ZgxC+RZunJC8flrxbF3rX3FUFEkPbf6PSIXtTVOfY4P3wWL/C\r\nXfDSmES9WU0hJjk8w2SaU+oR5hOxhDzyM6atbNvGYfVa06fVz1T+x8Bw8Ymq\r\nujzSFqgvGTSu2M7ThjT0Nx3NU5TXMSZ52LA=\r\n=Bw/e\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.0.0-beta3_1681406239619_0.23096606408093434"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0-rc1": {
      "name": "ts-patch",
      "version": "3.0.0-rc1",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "directories": {
        "resources": "./resources"
      },
      "standard-version": {
        "types": [
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "readme": "[![npm version](https://badge.fury.io/js/ts-patch.svg)](https://badge.fury.io/js/ts-patch)\n[![NPM Downloads](https://img.shields.io/npm/dm/ts-patch.svg?style=flat)](https://npmjs.org/package/ts-patch)\n![Build Status](https://github.com/nonara/ts-patch/workflows/Build/badge.svg)\n\n# TS Patch\n\nDirectly patch typescript installation to allow custom transformers (plugins).  \n\n- Plugins are specified in `tsconfig.json`, or provided programmatically in `CompilerOptions`.\n- Based on [ttypescript](https://github.com/cevek/ttypescript) - Fully compatible + offers more features\n\n## TypeScript v5 Note\n\nTS v5 has made some fundamental changes which affect the current process. As a result, it is not yet supported.\n\nWe're working on adding support. More notes on that here:\n\n- [Issue #93 — Not working with TypeScript v5 (author's note)](https://github.com/nonara/ts-patch/issues/93)\n\n## Features\n* Patch / unpatch any version of typescript (4.*)\n* Advanced options for patching individual libraries, specific locations, etc. (see `ts-patch /?`)\n* _(New)_ Supports 'transforming' the `Program` instance during creation. (see: [Transforming Program](#transforming-program))\n* _(New)_ Add, remove, or modify diagnostics! (see: [Altering Diagnostics](#altering-diagnostics))\n\n## Setup\n\n1. Install package\n```sh\n<yarn|npm|pnpm> add -D ts-patch\n```\n\n2. Patch typescript\n```shell\n# For advanced options, see: ts-patch /?\nts-patch install\n```\n\n3. Add `prepare` script (keeps patch persisted after npm install)\n\n`package.json`\n ```jsonc\n{\n  /* ... */\n  \"scripts\": {\n    \"prepare\": \"ts-patch install -s\"\n  }\n}\n ```\n\n## Table of Contents\n  - [Configuring](#configuring)\n      - [tsconfig.json](#tsconfigjson)\n      - [Plugin Options](#plugin-options)\n      - [Source Transformer Signatures](#source-transformer-signatures)\n  - [Usage](#usage)\n      - [Transforming AST Nodes](#transforming-ast-nodes)\n          - [Example Node Transformers](#example-node-transformers)\n      - [Transforming Program](#transforming-program)\n          - [Example Program Transformer](#example-program-transformer)\n      - [Altering Diagnostics](#altering-diagnostics)  \n  - [Resources](#resources)\n      - [Recommended Reading](#recommended-reading)\n      - [Recommended Tools](#recommended-tools)\n  - [Credit](#credit)\n  - [HALP!!!](#halp)\n  - [License](#license)\n  \n## Configuring\n### tsconfig.json\n\nAdd transformers to `compilerOptions` in `plugins` array.  \n\n**Examples**\n```jsonc\n{\n    \"compilerOptions\": {\n        \"plugins\": [\n            // Source Transformer: 'type' defaults to 'program'\n            { \"transform\": \"transformer-module\", \"someOption1\": 123, \"someOption2\": 321 },\n\n            // Source Transformer: program signature \n            { \"transform\": \"./transformers/my-transformer.ts\", \"type\": \"program\" },\n\n            // Source Transformer: program signature, applies after TS transformers\n            { \"transform\": \"transformer-module1\", \"type\": \"config\", \"after\": true },\n\n            // Source Transformer: checker signature, applies to TS declarations\n            { \"transform\": \"transformer-module2\", \"type\": \"checker\", \"afterDeclarations\": true }, \n            \n            // Source Transformer: raw signature\n            { \"transform\": \"transformer-module3\", \"type\": \"raw\" },\n\n            // Source Transformer: compilerOptions signature \n            { \"transform\": \"transformer-module4\", \"type\": \"compilerOptions\" },\n\n            // Program Transformer: Only has one signature - no type specified, because it does not apply\n            { \"transform\": \"transformer-module5\", \"transformProgram\": true }\n        ]\n    }\n}\n```\n\n### Plugin Options\n| Option            | Type    | Description |\n| ------------------| ------- | :----------- |\n| **transform**     | string  | Module name or path to transformer _(*.ts or *.js)_ |\n| type              | string  | *Source Transformer* entry point signature _(see: [Source Transformer Signatures](#source-transformer-signatures))_ |\n| import            | string  | Name of exported transformer function _(defaults to `default` export)_ |\n| tsConfig          | string  | tsconfig.json file _for transformer_ (allows specifying compileOptions, path mapping support, etc) |\n| after             | boolean | Apply transformer after stock TS transformers. |\n| afterDeclarations | boolean | Apply transformer to declaration (*.d.ts) files _(TypeScript 2.9+)_. |\n| transformProgram  | boolean | Transform `Program` during `ts.createProgram()` _(see: [Transforming Program](#transforming-program))_ |\n| _..._             |         | Provide your own custom options, which will be passed to the transformer |\n\n_Note: Required options are bold_\n\n### Source Transformer Signatures\nThe following are the possible values for the `type` option and their corresponding entry point signatures.  \n_Note: These apply to Source Transformers only._\n\n#### program (default)\n\nSignature with `ts.Program` instance:\n```ts\n(program: ts.Program, config: PluginConfig, extras: TransformerExtras) => ts.TransformerFactory\n```\n\n_ts.TransformerFactory_ >>> `(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile`  \n_TransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L76)  \n\n_Note: This is *not* the configuration for a [Program Transformer](#transforming-program)._\n\n#### config\nSignature with transformer's config:\n```ts\n(config: PluginConfig) => ts.TransformerFactory\n```\n\n#### checker\nSignature with `ts.TypeChecker`:\n```ts\n(checker: ts.TypeChecker, config: PluginConfig) => ts.TransformerFactory\n```\n\n#### raw\nSignature without `ts-patch` wrapper:\n```ts\n/* ts.TransformerFactory */ \n(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile\n```\n\n#### compilerOptions\n```ts\n(compilerOpts: ts.CompilerOptions, config: PluginConfig) => ts.TransformerFactory\n```\n\n## Usage\n### Transforming AST Nodes\n\nTransformers can be written in JS or TS.\n\n```ts\n// transformer1-module\nimport * as ts from 'typescript';\nexport default function(program: ts.Program, pluginOptions: any) {\n    return (ctx: ts.TransformationContext) => {\n        return (sourceFile: ts.SourceFile) => {\n            function visitor(node: ts.Node): ts.Node {\n                // if (ts.isCallExpression(node)) {\n                //     return ts.createLiteral('call');\n                // }\n                return ts.visitEachChild(node, visitor, ctx);\n            }\n            return ts.visitEachChild(sourceFile, visitor, ctx);\n        };\n    };\n}\n\n```\n\n#### Example Node Transformers\n\n[`{ transform: \"typescript-transform-paths\" }`](https://github.com/LeDDGroup/typescript-transform-paths)\n\n[`{ transform: \"typescript-is/lib/transform-inline/transformer\" }`](https://github.com/woutervh-/typescript-is) \n\n[`{ transform: \"ts-transform-img/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-img) \n\n[`{ transform: \"ts-transform-css-modules/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-css-modules) \n\n[`{ transform: \"ts-transform-react-intl/dist/transform\", import: \"transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-react-intl) \n\n[`{ transform: \"ts-nameof\", type: \"raw\" }`](https://github.com/dsherret/ts-nameof) \n\n[`{ transform: \"typescript-transform-jsx\" }`](https://github.com/LeDDGroup/typescript-transform-jsx) \n\n[`{ transform: \"ts-transformer-minify-privates\" }`](https://github.com/timocov/ts-transformer-minify-privates) \n\n[`{ transform: \"typia/lib/transform\" }`](https://github.com/samchon/typia) \n\n### Transforming Program\n\nSometimes you want to do more than just transform source code. For example you may want to:\n\n- TypeCheck code after it's been transformed\n- Generate code and add it to the program\n- Add or remove emit files during transformation\n\nFor this, we've introduced what we call a Program Transformer. The transform action takes place during `ts.createProgram`, and allows\nre-creating the `Program` instance that typescript uses.\n\n#### Configuring Program Transformer\n\nTo configure a Program Transformer, supply `\"transformProgram\": true` in the config transformer entry.\n\n_Note: The `type`, `before`, and `after` options do not apply to a Program Transformer and will be ignored_\n\n[See Config Example](#tsconfigjson)\n\n#### Signature\n\nThere is only one possible signature for a Program Transformer entry point.\n\n```TS\n(program: ts.Program, host: ts.CompilerHost | undefined, options: PluginConfig, extras: ProgramTransformerExtras) => ts.Program\n```\n\n_ProgramTransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L90)  \n\n#### Example Program Transformer\n```TypeScript\n/** \n * Add a file to Program\n */\nimport * as ts from 'typescript';\nimport * as path from 'path';\nimport { ProgramTransformerExtras, PluginConfig } from 'ts-patch';\n\nexport const newFile = path.resolve(__dirname, 'added-file.ts');\n\nexport default function (\n  program: ts.Program, \n  host: ts.CompilerHost | undefined, \n  options: PluginConfig, \n  { ts: tsInstance }: ProgramTransformerExtras\n) {\n  return tsInstance.createProgram(\n    /* rootNames */ program.getRootFileNames().concat([ newFile ]),\n    program.getCompilerOptions(),\n    host,\n    /* oldProgram */ program\n  );\n}\n```\n\n**Note:** For a more complete example, see [Transforming Program with additional AST transformations](https://github.com/nonara/ts-patch/discussions/29#discussioncomment-325979)\n\n### Altering Diagnostics\n\nDiagnostics can be altered in a Source Transformer.\n\nTo alter diagnostics, use the [program type signature](#program-default), and use the following properties from the \n`TransformerExtras` parameter\n\n| property | description |\n| -------- |----------- |\n| diagnostics | Reference to `Diagnostic` array\n| addDiagnostic() | Directly add `Diagnostic` to `diagnostics` array |\n| removeDiagnostic() | Directly remove `Diagnostic` from `diagnostics` array (uses splice, for safe removal)\n\n#### Notes\n- This alters diagnostics during _emit only_. If you want to alter diagnostics in your IDE as well, you'll need to create a LanguageService plugin to accompany your source transformer\n\n## Resources\n\n### Recommended Reading\n\n- [Advice for working with the TS Compiler API](https://github.com/nonara/ts-patch/discussions/31) (**must read**)\n- [TypeScript Transformer Handbook](https://github.com/madou/typescript-transformer-handbook) (**must read**)\n- Article: [How to Write a TypeScript Transform (Plugin)](https://dev.doctorevidence.com/how-to-write-a-typescript-transform-plugin-fc5308fdd943)\n- Article: [Creating a TypeScript Transformer](https://43081j.com/2018/08/creating-a-typescript-transform?source=post_page-----731e2b0b66e6----------------------)\n\n### Recommended Tools\n\n| Tool | Type | Description |\n| ---- | ---- | ----------- |\n| [TS AST Viewer](https://ts-ast-viewer.com/) | Website | Allows you to see the `Node` structure and other TS properties of your source code.\n| [ts-query](https://www.npmjs.com/package/@phenomnomnominal/tsquery) | NPM Package |  Perform fast CSS-like queries on AST to find specific nodes (by attribute, kind, name, etc)\n| [ts-query Playground](https://tsquery-playground.firebaseapp.com/) | Website | Test `ts-query` in realtime\n| [ts-expose-internals](https://github.com/nonara/ts-expose-internals) | NPM Package | Exposes internal types and methods of the TS compiler API \n\n## Credit\n| Author                |  Module |\n| --------------------- |  ----------- |\n| [Ron S.](https://twitter.com/Ron) | [ts-patch](https://github.com/nonara/ts-patch/) |\n| [cevek](https://github.com/cevek) | [ttypescript](https://github.com/cevek/ttypescript) |\n\n## HALP!!!\n\n- Start here: [Recommended Reading](#recommended-reading)\n- Ask on [StackOverflow](https://stackoverflow.com/questions/tagged/typescript-compiler-api) with the `#typescript-compiler-api` tag\n- Read the handbook and still stuck? [Ask in Discussions](https://github.com/nonara/ts-patch/discussions) - someone may answer if they have time.\n- Check out the `#compiler-api` room on the [TypeScript Discord Server](https://discord.com/invite/typescript).\n\n## License\n\nThis project is licensed under the MIT License, as described in `LICENSE.md`\n",
      "readmeFilename": "README.md",
      "gitHead": "6803dfdd446e5b11d9ecfe9b0f3f4f18d5f23275",
      "_id": "ts-patch@3.0.0-rc1",
      "_nodeVersion": "18.10.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-XURGx+EMJwRVMQ0qMalWTDoa61yhFVmFgGyhJpz300wTGt7HdhE9hT6dI5iPtf+V7NpC2sdl8UQnjkNDkzTpqA==",
        "shasum": "57b807b7b4e58a47930ecf539c128e8a044449ee",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.0.0-rc1.tgz",
        "fileCount": 144,
        "unpackedSize": 273085,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCdppXIXc8N3bZcej+xM2nrqzh8JBp/8kzz/YCs+mfMfwIgZn0tMyjJO6soFNWgoUoHwThFtrSS5kbrHsgNqljSNcE="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkQKSpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqROBAAlcv/tBH5mHPGydAvgTIzHI26xa2UPbNRxQ34YuD50CGnGocc\r\nueZEv4tpPXMtJobE/7m8J2JE8VM41NoE24q9OYtoITGWzN21gVn3m+4pMHeZ\r\n0V/iiQvMuTw+4t+FfImebMpXSX+36cyHHgKQ7zSiY075KOjMO/vpeAtd15Nj\r\nUhopc4++zM1edEVCyyM4+1hh9L3GeK3FQpMW0OBqZBNg6IIcxXqI+USWBLBF\r\nSjlzpuyg5PGA24bDu3SEhnIX7Yu4lRTE2ORaCTWAXUdX3ACyEfqJogVqRE1s\r\nhFyJ3U0yDpG/+IhMc2A3dT3BWjug/yxyYDga5c5ENWTS4LNZfhLTAjEe9vOY\r\nw7tKb2X2lWBOzeDRQg8U85Ogv1YbYpqJnjM04cwGfK0JIVUc4IwA5ZCDRWP8\r\nBe1FwaWIMfdWLpigNA3nq3pYhbbykO/7xYMXuJCyQN1zAXz+gPxQGn41Dfhd\r\ndE3sUQKlbTNyjPstuqv2jxmRHa85G9uhdk4R2mhhOZQXAeVELLMNsgP521sr\r\ntwmGyPOyVRQr6p7Ld24kzWdntAHWPh5mIiwoAKQ/C6ClaHD6M2U3Cn0sxa6T\r\nNtVOPJRHIAOojZZFSylmcqmeMP7t6vmow4BJ4PGZCTfKWCiJqNMKd3OwtW0h\r\n5fBOYf5+tvlSKFu4cTxAgJATipY98EWZvmI=\r\n=ob4j\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.0.0-rc1_1681958056854_0.422168958110714"
      },
      "_hasShrinkwrap": false,
      "deprecated": "Bugs present - move to rc2+"
    },
    "3.0.0-rc2": {
      "name": "ts-patch",
      "version": "3.0.0-rc2",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "directories": {
        "resources": "./resources"
      },
      "standard-version": {
        "types": [
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "readme": "[![npm version](https://badge.fury.io/js/ts-patch.svg)](https://badge.fury.io/js/ts-patch)\n[![NPM Downloads](https://img.shields.io/npm/dm/ts-patch.svg?style=flat)](https://npmjs.org/package/ts-patch)\n![Build Status](https://github.com/nonara/ts-patch/workflows/Build/badge.svg)\n\n# TS Patch\n\nDirectly patch typescript installation to allow custom transformers (plugins).  \n\n- Plugins are specified in `tsconfig.json`, or provided programmatically in `CompilerOptions`.\n- Based on [ttypescript](https://github.com/cevek/ttypescript) - Fully compatible + offers more features\n\n## TypeScript v5 Note\n\nTS v5 has made some fundamental changes which affect the current process. As a result, it is not yet supported.\n\nWe're working on adding support. More notes on that here:\n\n- [Issue #93 — Not working with TypeScript v5 (author's note)](https://github.com/nonara/ts-patch/issues/93)\n\n## Features\n* Patch / unpatch any version of typescript (4.*)\n* Advanced options for patching individual libraries, specific locations, etc. (see `ts-patch /?`)\n* _(New)_ Supports 'transforming' the `Program` instance during creation. (see: [Transforming Program](#transforming-program))\n* _(New)_ Add, remove, or modify diagnostics! (see: [Altering Diagnostics](#altering-diagnostics))\n\n## Setup\n\n1. Install package\n```sh\n<yarn|npm|pnpm> add -D ts-patch\n```\n\n2. Patch typescript\n```shell\n# For advanced options, see: ts-patch /?\nts-patch install\n```\n\n3. Add `prepare` script (keeps patch persisted after npm install)\n\n`package.json`\n ```jsonc\n{\n  /* ... */\n  \"scripts\": {\n    \"prepare\": \"ts-patch install -s\"\n  }\n}\n ```\n\n## Table of Contents\n  - [Configuring](#configuring)\n      - [tsconfig.json](#tsconfigjson)\n      - [Plugin Options](#plugin-options)\n      - [Source Transformer Signatures](#source-transformer-signatures)\n  - [Usage](#usage)\n      - [Transforming AST Nodes](#transforming-ast-nodes)\n          - [Example Node Transformers](#example-node-transformers)\n      - [Transforming Program](#transforming-program)\n          - [Example Program Transformer](#example-program-transformer)\n      - [Altering Diagnostics](#altering-diagnostics)  \n  - [Resources](#resources)\n      - [Recommended Reading](#recommended-reading)\n      - [Recommended Tools](#recommended-tools)\n  - [Credit](#credit)\n  - [HALP!!!](#halp)\n  - [License](#license)\n  \n## Configuring\n### tsconfig.json\n\nAdd transformers to `compilerOptions` in `plugins` array.  \n\n**Examples**\n```jsonc\n{\n    \"compilerOptions\": {\n        \"plugins\": [\n            // Source Transformer: 'type' defaults to 'program'\n            { \"transform\": \"transformer-module\", \"someOption1\": 123, \"someOption2\": 321 },\n\n            // Source Transformer: program signature \n            { \"transform\": \"./transformers/my-transformer.ts\", \"type\": \"program\" },\n\n            // Source Transformer: program signature, applies after TS transformers\n            { \"transform\": \"transformer-module1\", \"type\": \"config\", \"after\": true },\n\n            // Source Transformer: checker signature, applies to TS declarations\n            { \"transform\": \"transformer-module2\", \"type\": \"checker\", \"afterDeclarations\": true }, \n            \n            // Source Transformer: raw signature\n            { \"transform\": \"transformer-module3\", \"type\": \"raw\" },\n\n            // Source Transformer: compilerOptions signature \n            { \"transform\": \"transformer-module4\", \"type\": \"compilerOptions\" },\n\n            // Program Transformer: Only has one signature - no type specified, because it does not apply\n            { \"transform\": \"transformer-module5\", \"transformProgram\": true }\n        ]\n    }\n}\n```\n\n### Plugin Options\n| Option            | Type    | Description |\n| ------------------| ------- | :----------- |\n| **transform**     | string  | Module name or path to transformer _(*.ts or *.js)_ |\n| type              | string  | *Source Transformer* entry point signature _(see: [Source Transformer Signatures](#source-transformer-signatures))_ |\n| import            | string  | Name of exported transformer function _(defaults to `default` export)_ |\n| tsConfig          | string  | tsconfig.json file _for transformer_ (allows specifying compileOptions, path mapping support, etc) |\n| after             | boolean | Apply transformer after stock TS transformers. |\n| afterDeclarations | boolean | Apply transformer to declaration (*.d.ts) files _(TypeScript 2.9+)_. |\n| transformProgram  | boolean | Transform `Program` during `ts.createProgram()` _(see: [Transforming Program](#transforming-program))_ |\n| _..._             |         | Provide your own custom options, which will be passed to the transformer |\n\n_Note: Required options are bold_\n\n### Source Transformer Signatures\nThe following are the possible values for the `type` option and their corresponding entry point signatures.  \n_Note: These apply to Source Transformers only._\n\n#### program (default)\n\nSignature with `ts.Program` instance:\n```ts\n(program: ts.Program, config: PluginConfig, extras: TransformerExtras) => ts.TransformerFactory\n```\n\n_ts.TransformerFactory_ >>> `(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile`  \n_TransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L76)  \n\n_Note: This is *not* the configuration for a [Program Transformer](#transforming-program)._\n\n#### config\nSignature with transformer's config:\n```ts\n(config: PluginConfig) => ts.TransformerFactory\n```\n\n#### checker\nSignature with `ts.TypeChecker`:\n```ts\n(checker: ts.TypeChecker, config: PluginConfig) => ts.TransformerFactory\n```\n\n#### raw\nSignature without `ts-patch` wrapper:\n```ts\n/* ts.TransformerFactory */ \n(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile\n```\n\n#### compilerOptions\n```ts\n(compilerOpts: ts.CompilerOptions, config: PluginConfig) => ts.TransformerFactory\n```\n\n## Usage\n### Transforming AST Nodes\n\nTransformers can be written in JS or TS.\n\n```ts\n// transformer1-module\nimport * as ts from 'typescript';\nexport default function(program: ts.Program, pluginOptions: any) {\n    return (ctx: ts.TransformationContext) => {\n        return (sourceFile: ts.SourceFile) => {\n            function visitor(node: ts.Node): ts.Node {\n                // if (ts.isCallExpression(node)) {\n                //     return ts.createLiteral('call');\n                // }\n                return ts.visitEachChild(node, visitor, ctx);\n            }\n            return ts.visitEachChild(sourceFile, visitor, ctx);\n        };\n    };\n}\n\n```\n\n#### Example Node Transformers\n\n[`{ transform: \"typescript-transform-paths\" }`](https://github.com/LeDDGroup/typescript-transform-paths)\n\n[`{ transform: \"typescript-is/lib/transform-inline/transformer\" }`](https://github.com/woutervh-/typescript-is) \n\n[`{ transform: \"ts-transform-img/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-img) \n\n[`{ transform: \"ts-transform-css-modules/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-css-modules) \n\n[`{ transform: \"ts-transform-react-intl/dist/transform\", import: \"transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-react-intl) \n\n[`{ transform: \"ts-nameof\", type: \"raw\" }`](https://github.com/dsherret/ts-nameof) \n\n[`{ transform: \"typescript-transform-jsx\" }`](https://github.com/LeDDGroup/typescript-transform-jsx) \n\n[`{ transform: \"ts-transformer-minify-privates\" }`](https://github.com/timocov/ts-transformer-minify-privates) \n\n[`{ transform: \"typia/lib/transform\" }`](https://github.com/samchon/typia) \n\n### Transforming Program\n\nSometimes you want to do more than just transform source code. For example you may want to:\n\n- TypeCheck code after it's been transformed\n- Generate code and add it to the program\n- Add or remove emit files during transformation\n\nFor this, we've introduced what we call a Program Transformer. The transform action takes place during `ts.createProgram`, and allows\nre-creating the `Program` instance that typescript uses.\n\n#### Configuring Program Transformer\n\nTo configure a Program Transformer, supply `\"transformProgram\": true` in the config transformer entry.\n\n_Note: The `type`, `before`, and `after` options do not apply to a Program Transformer and will be ignored_\n\n[See Config Example](#tsconfigjson)\n\n#### Signature\n\nThere is only one possible signature for a Program Transformer entry point.\n\n```TS\n(program: ts.Program, host: ts.CompilerHost | undefined, options: PluginConfig, extras: ProgramTransformerExtras) => ts.Program\n```\n\n_ProgramTransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L90)  \n\n#### Example Program Transformer\n```TypeScript\n/** \n * Add a file to Program\n */\nimport * as ts from 'typescript';\nimport * as path from 'path';\nimport { ProgramTransformerExtras, PluginConfig } from 'ts-patch';\n\nexport const newFile = path.resolve(__dirname, 'added-file.ts');\n\nexport default function (\n  program: ts.Program, \n  host: ts.CompilerHost | undefined, \n  options: PluginConfig, \n  { ts: tsInstance }: ProgramTransformerExtras\n) {\n  return tsInstance.createProgram(\n    /* rootNames */ program.getRootFileNames().concat([ newFile ]),\n    program.getCompilerOptions(),\n    host,\n    /* oldProgram */ program\n  );\n}\n```\n\n**Note:** For a more complete example, see [Transforming Program with additional AST transformations](https://github.com/nonara/ts-patch/discussions/29#discussioncomment-325979)\n\n### Altering Diagnostics\n\nDiagnostics can be altered in a Source Transformer.\n\nTo alter diagnostics, use the [program type signature](#program-default), and use the following properties from the \n`TransformerExtras` parameter\n\n| property | description |\n| -------- |----------- |\n| diagnostics | Reference to `Diagnostic` array\n| addDiagnostic() | Directly add `Diagnostic` to `diagnostics` array |\n| removeDiagnostic() | Directly remove `Diagnostic` from `diagnostics` array (uses splice, for safe removal)\n\n#### Notes\n- This alters diagnostics during _emit only_. If you want to alter diagnostics in your IDE as well, you'll need to create a LanguageService plugin to accompany your source transformer\n\n## Resources\n\n### Recommended Reading\n\n- [Advice for working with the TS Compiler API](https://github.com/nonara/ts-patch/discussions/31) (**must read**)\n- [TypeScript Transformer Handbook](https://github.com/madou/typescript-transformer-handbook) (**must read**)\n- Article: [How to Write a TypeScript Transform (Plugin)](https://dev.doctorevidence.com/how-to-write-a-typescript-transform-plugin-fc5308fdd943)\n- Article: [Creating a TypeScript Transformer](https://43081j.com/2018/08/creating-a-typescript-transform?source=post_page-----731e2b0b66e6----------------------)\n\n### Recommended Tools\n\n| Tool | Type | Description |\n| ---- | ---- | ----------- |\n| [TS AST Viewer](https://ts-ast-viewer.com/) | Website | Allows you to see the `Node` structure and other TS properties of your source code.\n| [ts-query](https://www.npmjs.com/package/@phenomnomnominal/tsquery) | NPM Package |  Perform fast CSS-like queries on AST to find specific nodes (by attribute, kind, name, etc)\n| [ts-query Playground](https://tsquery-playground.firebaseapp.com/) | Website | Test `ts-query` in realtime\n| [ts-expose-internals](https://github.com/nonara/ts-expose-internals) | NPM Package | Exposes internal types and methods of the TS compiler API \n\n## Credit\n| Author                |  Module |\n| --------------------- |  ----------- |\n| [Ron S.](https://twitter.com/Ron) | [ts-patch](https://github.com/nonara/ts-patch/) |\n| [cevek](https://github.com/cevek) | [ttypescript](https://github.com/cevek/ttypescript) |\n\n## HALP!!!\n\n- Start here: [Recommended Reading](#recommended-reading)\n- Ask on [StackOverflow](https://stackoverflow.com/questions/tagged/typescript-compiler-api) with the `#typescript-compiler-api` tag\n- Read the handbook and still stuck? [Ask in Discussions](https://github.com/nonara/ts-patch/discussions) - someone may answer if they have time.\n- Check out the `#compiler-api` room on the [TypeScript Discord Server](https://discord.com/invite/typescript).\n\n## License\n\nThis project is licensed under the MIT License, as described in `LICENSE.md`\n",
      "readmeFilename": "README.md",
      "gitHead": "6803dfdd446e5b11d9ecfe9b0f3f4f18d5f23275",
      "_id": "ts-patch@3.0.0-rc2",
      "_nodeVersion": "18.10.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-dsu+3k1cKJ1HVQlCimddJxRfq48XBAQHGAmLyKrIn8pGzz9dhTGsjo/bQFUDicVD2KZB72U+aN82sGkqqThEnQ==",
        "shasum": "6b9d9ae3704fbf32698caa83f8979b33a5f88cf6",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.0.0-rc2.tgz",
        "fileCount": 144,
        "unpackedSize": 273503,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHhEHH+aYeSy2LOLFC9QVezNPgQFEx1zu2poV9zBdoAHAiACawF0nYVuTpPKwzd2HblIBBaOoCd/mcSmZYKE5EYvpg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkQLsmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrjbw/9GoLgwQRx2zOX2Yr0C+f+qwMO9RUNd9OpFLsEs83/IcaW3Gw5\r\nZlxuNQ21wg+Gw3IYMS/K6iDjGIVqsI8pRW0JUXDBa4L710KaR3wL8Y/24C00\r\nicyxKbkifYrf7gffcIbmVbT3fTzbpG8s1F08tl4QKk2dI6zVjwZ1fxOz1zoy\r\nxmszdCB5Y+V0M5SVf8yRoHY8UKKy9E8nGRyJ+6Z8wSXuKQrY4et4HYrpcQUA\r\nokSujE1qy6a/JNf7FBqGE076jbCKBjFyxYyH4+N2TNKp5PpxGzX9j0fyXiun\r\nQuLX9yZJtTSBF5aFY1umokKBLwQZyqBRoGGSpHZdQyTqYnzifn60tKRiR/M6\r\nDusrmMvmfWiXXUOCjzNG9GEkpb9r8blhX6JOLhpZ57jqIcCfW3kJtIO+57V/\r\nEQL9y86XUPF34WtLWahLbLfK2yG7K6aMaBs0wflS2Jwh/KW2oiyB8Dzx9axy\r\n+cjMupO/72p6meD4Sa1D+zBvaueUyePY6dvlk1ZJfSOL3kgHikjO1l9mLdj1\r\nnnfxJpUMj2XeBYdm8EFu2CHLotikDc2KMiGqOMTHOq0mh4ka9HHVPxhya2Aw\r\n93dA904ACo4PgvcCF9GXisbl0tQxJPJp4tMm1Mpg8UFdvdbD5yrDxS88gST1\r\nFUuiQJGalv3Fk1/4bPoGxCfvhc41a4nZhuQ=\r\n=95rk\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.0.0-rc2_1681963813861_0.5500109385201157"
      },
      "_hasShrinkwrap": false,
      "deprecated": "This version is deprecated! Please upgrade to 3.0.0-rc3"
    },
    "3.0.0-rc3": {
      "name": "ts-patch",
      "version": "3.0.0-rc3",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "directories": {
        "resources": "./resources"
      },
      "standard-version": {
        "types": [
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "readme": "[![npm version](https://badge.fury.io/js/ts-patch.svg)](https://badge.fury.io/js/ts-patch)\n[![NPM Downloads](https://img.shields.io/npm/dm/ts-patch.svg?style=flat)](https://npmjs.org/package/ts-patch)\n![Build Status](https://github.com/nonara/ts-patch/workflows/Build/badge.svg)\n\n# TS Patch\n\nDirectly patch typescript installation to allow custom transformers (plugins).  \n\n- Plugins are specified in `tsconfig.json`, or provided programmatically in `CompilerOptions`.\n- Based on [ttypescript](https://github.com/cevek/ttypescript) - Fully compatible + offers more features\n\n## TypeScript v5 Note\n\nTS v5 has made some fundamental changes which affect the current process. As a result, it is not yet supported.\n\nWe're working on adding support. More notes on that here:\n\n- [Issue #93 — Not working with TypeScript v5 (author's note)](https://github.com/nonara/ts-patch/issues/93)\n\n## Features\n* Patch / unpatch any version of typescript (4.*)\n* Advanced options for patching individual libraries, specific locations, etc. (see `ts-patch /?`)\n* _(New)_ Supports 'transforming' the `Program` instance during creation. (see: [Transforming Program](#transforming-program))\n* _(New)_ Add, remove, or modify diagnostics! (see: [Altering Diagnostics](#altering-diagnostics))\n\n## Setup\n\n1. Install package\n```sh\n<yarn|npm|pnpm> add -D ts-patch\n```\n\n2. Patch typescript\n```shell\n# For advanced options, see: ts-patch /?\nts-patch install\n```\n\n3. Add `prepare` script (keeps patch persisted after npm install)\n\n`package.json`\n ```jsonc\n{\n  /* ... */\n  \"scripts\": {\n    \"prepare\": \"ts-patch install -s\"\n  }\n}\n ```\n\n## Table of Contents\n  - [Configuring](#configuring)\n      - [tsconfig.json](#tsconfigjson)\n      - [Plugin Options](#plugin-options)\n      - [Source Transformer Signatures](#source-transformer-signatures)\n  - [Usage](#usage)\n      - [Transforming AST Nodes](#transforming-ast-nodes)\n          - [Example Node Transformers](#example-node-transformers)\n      - [Transforming Program](#transforming-program)\n          - [Example Program Transformer](#example-program-transformer)\n      - [Altering Diagnostics](#altering-diagnostics)  \n  - [Resources](#resources)\n      - [Recommended Reading](#recommended-reading)\n      - [Recommended Tools](#recommended-tools)\n  - [Credit](#credit)\n  - [HALP!!!](#halp)\n  - [License](#license)\n  \n## Configuring\n### tsconfig.json\n\nAdd transformers to `compilerOptions` in `plugins` array.  \n\n**Examples**\n```jsonc\n{\n    \"compilerOptions\": {\n        \"plugins\": [\n            // Source Transformer: 'type' defaults to 'program'\n            { \"transform\": \"transformer-module\", \"someOption1\": 123, \"someOption2\": 321 },\n\n            // Source Transformer: program signature \n            { \"transform\": \"./transformers/my-transformer.ts\", \"type\": \"program\" },\n\n            // Source Transformer: program signature, applies after TS transformers\n            { \"transform\": \"transformer-module1\", \"type\": \"config\", \"after\": true },\n\n            // Source Transformer: checker signature, applies to TS declarations\n            { \"transform\": \"transformer-module2\", \"type\": \"checker\", \"afterDeclarations\": true }, \n            \n            // Source Transformer: raw signature\n            { \"transform\": \"transformer-module3\", \"type\": \"raw\" },\n\n            // Source Transformer: compilerOptions signature \n            { \"transform\": \"transformer-module4\", \"type\": \"compilerOptions\" },\n\n            // Program Transformer: Only has one signature - no type specified, because it does not apply\n            { \"transform\": \"transformer-module5\", \"transformProgram\": true }\n        ]\n    }\n}\n```\n\n### Plugin Options\n| Option            | Type    | Description |\n| ------------------| ------- | :----------- |\n| **transform**     | string  | Module name or path to transformer _(*.ts or *.js)_ |\n| type              | string  | *Source Transformer* entry point signature _(see: [Source Transformer Signatures](#source-transformer-signatures))_ |\n| import            | string  | Name of exported transformer function _(defaults to `default` export)_ |\n| tsConfig          | string  | tsconfig.json file _for transformer_ (allows specifying compileOptions, path mapping support, etc) |\n| after             | boolean | Apply transformer after stock TS transformers. |\n| afterDeclarations | boolean | Apply transformer to declaration (*.d.ts) files _(TypeScript 2.9+)_. |\n| transformProgram  | boolean | Transform `Program` during `ts.createProgram()` _(see: [Transforming Program](#transforming-program))_ |\n| _..._             |         | Provide your own custom options, which will be passed to the transformer |\n\n_Note: Required options are bold_\n\n### Source Transformer Signatures\nThe following are the possible values for the `type` option and their corresponding entry point signatures.  \n_Note: These apply to Source Transformers only._\n\n#### program (default)\n\nSignature with `ts.Program` instance:\n```ts\n(program: ts.Program, config: PluginConfig, extras: TransformerExtras) => ts.TransformerFactory\n```\n\n_ts.TransformerFactory_ >>> `(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile`  \n_TransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L76)  \n\n_Note: This is *not* the configuration for a [Program Transformer](#transforming-program)._\n\n#### config\nSignature with transformer's config:\n```ts\n(config: PluginConfig) => ts.TransformerFactory\n```\n\n#### checker\nSignature with `ts.TypeChecker`:\n```ts\n(checker: ts.TypeChecker, config: PluginConfig) => ts.TransformerFactory\n```\n\n#### raw\nSignature without `ts-patch` wrapper:\n```ts\n/* ts.TransformerFactory */ \n(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile\n```\n\n#### compilerOptions\n```ts\n(compilerOpts: ts.CompilerOptions, config: PluginConfig) => ts.TransformerFactory\n```\n\n## Usage\n### Transforming AST Nodes\n\nTransformers can be written in JS or TS.\n\n```ts\n// transformer1-module\nimport * as ts from 'typescript';\nexport default function(program: ts.Program, pluginOptions: any) {\n    return (ctx: ts.TransformationContext) => {\n        return (sourceFile: ts.SourceFile) => {\n            function visitor(node: ts.Node): ts.Node {\n                // if (ts.isCallExpression(node)) {\n                //     return ts.createLiteral('call');\n                // }\n                return ts.visitEachChild(node, visitor, ctx);\n            }\n            return ts.visitEachChild(sourceFile, visitor, ctx);\n        };\n    };\n}\n\n```\n\n#### Example Node Transformers\n\n[`{ transform: \"typescript-transform-paths\" }`](https://github.com/LeDDGroup/typescript-transform-paths)\n\n[`{ transform: \"typescript-is/lib/transform-inline/transformer\" }`](https://github.com/woutervh-/typescript-is) \n\n[`{ transform: \"ts-transform-img/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-img) \n\n[`{ transform: \"ts-transform-css-modules/dist/transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-css-modules) \n\n[`{ transform: \"ts-transform-react-intl/dist/transform\", import: \"transform\", type: \"config\" }`](https://github.com/longlho/ts-transform-react-intl) \n\n[`{ transform: \"ts-nameof\", type: \"raw\" }`](https://github.com/dsherret/ts-nameof) \n\n[`{ transform: \"typescript-transform-jsx\" }`](https://github.com/LeDDGroup/typescript-transform-jsx) \n\n[`{ transform: \"ts-transformer-minify-privates\" }`](https://github.com/timocov/ts-transformer-minify-privates) \n\n[`{ transform: \"typia/lib/transform\" }`](https://github.com/samchon/typia) \n\n### Transforming Program\n\nSometimes you want to do more than just transform source code. For example you may want to:\n\n- TypeCheck code after it's been transformed\n- Generate code and add it to the program\n- Add or remove emit files during transformation\n\nFor this, we've introduced what we call a Program Transformer. The transform action takes place during `ts.createProgram`, and allows\nre-creating the `Program` instance that typescript uses.\n\n#### Configuring Program Transformer\n\nTo configure a Program Transformer, supply `\"transformProgram\": true` in the config transformer entry.\n\n_Note: The `type`, `before`, and `after` options do not apply to a Program Transformer and will be ignored_\n\n[See Config Example](#tsconfigjson)\n\n#### Signature\n\nThere is only one possible signature for a Program Transformer entry point.\n\n```TS\n(program: ts.Program, host: ts.CompilerHost | undefined, options: PluginConfig, extras: ProgramTransformerExtras) => ts.Program\n```\n\n_ProgramTransformerExtras_ >>> [See Type Declaration](https://github.com/nonara/ts-patch/blob/master/src/installer/plugin-types.ts#L90)  \n\n#### Example Program Transformer\n```TypeScript\n/** \n * Add a file to Program\n */\nimport * as ts from 'typescript';\nimport * as path from 'path';\nimport { ProgramTransformerExtras, PluginConfig } from 'ts-patch';\n\nexport const newFile = path.resolve(__dirname, 'added-file.ts');\n\nexport default function (\n  program: ts.Program, \n  host: ts.CompilerHost | undefined, \n  options: PluginConfig, \n  { ts: tsInstance }: ProgramTransformerExtras\n) {\n  return tsInstance.createProgram(\n    /* rootNames */ program.getRootFileNames().concat([ newFile ]),\n    program.getCompilerOptions(),\n    host,\n    /* oldProgram */ program\n  );\n}\n```\n\n**Note:** For a more complete example, see [Transforming Program with additional AST transformations](https://github.com/nonara/ts-patch/discussions/29#discussioncomment-325979)\n\n### Altering Diagnostics\n\nDiagnostics can be altered in a Source Transformer.\n\nTo alter diagnostics, use the [program type signature](#program-default), and use the following properties from the \n`TransformerExtras` parameter\n\n| property | description |\n| -------- |----------- |\n| diagnostics | Reference to `Diagnostic` array\n| addDiagnostic() | Directly add `Diagnostic` to `diagnostics` array |\n| removeDiagnostic() | Directly remove `Diagnostic` from `diagnostics` array (uses splice, for safe removal)\n\n#### Notes\n- This alters diagnostics during _emit only_. If you want to alter diagnostics in your IDE as well, you'll need to create a LanguageService plugin to accompany your source transformer\n\n## Resources\n\n### Recommended Reading\n\n- [Advice for working with the TS Compiler API](https://github.com/nonara/ts-patch/discussions/31) (**must read**)\n- [TypeScript Transformer Handbook](https://github.com/madou/typescript-transformer-handbook) (**must read**)\n- Article: [How to Write a TypeScript Transform (Plugin)](https://dev.doctorevidence.com/how-to-write-a-typescript-transform-plugin-fc5308fdd943)\n- Article: [Creating a TypeScript Transformer](https://43081j.com/2018/08/creating-a-typescript-transform?source=post_page-----731e2b0b66e6----------------------)\n\n### Recommended Tools\n\n| Tool | Type | Description |\n| ---- | ---- | ----------- |\n| [TS AST Viewer](https://ts-ast-viewer.com/) | Website | Allows you to see the `Node` structure and other TS properties of your source code.\n| [ts-query](https://www.npmjs.com/package/@phenomnomnominal/tsquery) | NPM Package |  Perform fast CSS-like queries on AST to find specific nodes (by attribute, kind, name, etc)\n| [ts-query Playground](https://tsquery-playground.firebaseapp.com/) | Website | Test `ts-query` in realtime\n| [ts-expose-internals](https://github.com/nonara/ts-expose-internals) | NPM Package | Exposes internal types and methods of the TS compiler API \n\n## Credit\n| Author                |  Module |\n| --------------------- |  ----------- |\n| [Ron S.](https://twitter.com/Ron) | [ts-patch](https://github.com/nonara/ts-patch/) |\n| [cevek](https://github.com/cevek) | [ttypescript](https://github.com/cevek/ttypescript) |\n\n## HALP!!!\n\n- Start here: [Recommended Reading](#recommended-reading)\n- Ask on [StackOverflow](https://stackoverflow.com/questions/tagged/typescript-compiler-api) with the `#typescript-compiler-api` tag\n- Read the handbook and still stuck? [Ask in Discussions](https://github.com/nonara/ts-patch/discussions) - someone may answer if they have time.\n- Check out the `#compiler-api` room on the [TypeScript Discord Server](https://discord.com/invite/typescript).\n\n## License\n\nThis project is licensed under the MIT License, as described in `LICENSE.md`\n",
      "readmeFilename": "README.md",
      "gitHead": "356d97d0a01fd478b70cb76942a035bf2e429312",
      "_id": "ts-patch@3.0.0-rc3",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-BDASAqVLJ+fCs0XqNXQCfdAXUZvKlxdOtg4PDYK1nkL5lYVKo+GVmTVPxiowjSf1TkBOezPUISIRutcJEmDxkA==",
        "shasum": "88dcebbc9cc29e92fda4f8c2c290c82ba44b1a76",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.0.0-rc3.tgz",
        "fileCount": 144,
        "unpackedSize": 278020,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH4t1ds8bfjvWHxQKl8ciaYNY4a3UQZAuC+WItfuecyCAiEA9wNcuK/L/gm2+JPTW9V+qVWemPB8NmE4e21sIDCHREE="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.0.0-rc3_1685054317092_0.4387942967812837"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0": {
      "name": "ts-patch",
      "version": "3.0.0",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "standard-version": {
        "types": [
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@3.0.0",
      "dist": {
        "shasum": "431d57fcce7bf4e6ffad2ced2767db75236b3146",
        "integrity": "sha512-chlOJBrZAF6dUEHw3JoADjw2pC4BU97+D7S7drDfM7VkwtSRXFLDCKzoEBUuAA+uxBPVyoVMt6InU3pM7SLU4A==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.0.0.tgz",
        "fileCount": 156,
        "unpackedSize": 278655,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFB1Dhni6tD2lfEYB/8VO35RcRkUwc+CiCndsPGrUfnuAiEApDU+IO69GWYpXieotjg9XsMIRnf1uO+P817D3zL8fic="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.0.0_1686694120783_0.7684765933782118"
      },
      "_hasShrinkwrap": false
    },
    "3.0.1": {
      "name": "ts-patch",
      "version": "3.0.1",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "standard-version": {
        "types": [
          {
            "type": "feat",
            "section": "Features"
          },
          {
            "type": "feature",
            "section": "Features"
          },
          {
            "type": "fix",
            "section": "Bug Fixes"
          },
          {
            "type": "perf",
            "section": "Performance Improvements"
          },
          {
            "type": "revert",
            "section": "Reverts"
          },
          {
            "type": "docs",
            "section": "Documentation",
            "hidden": true
          },
          {
            "type": "style",
            "section": "Styles",
            "hidden": true
          },
          {
            "type": "chore",
            "section": "Miscellaneous Chores",
            "hidden": true
          },
          {
            "type": "refactor",
            "section": "Code Refactoring",
            "hidden": true
          },
          {
            "type": "test",
            "section": "Tests",
            "hidden": true
          },
          {
            "type": "build",
            "section": "Build System",
            "hidden": true
          },
          {
            "type": "ci",
            "section": "Continuous Integration",
            "hidden": true
          },
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@3.0.1",
      "dist": {
        "shasum": "ecbe888506f6ae2c447c969ff65d34ee98f2eefa",
        "integrity": "sha512-FH61Ywi3A9nBQmWU7GGA35TKoQzkkqkwpUzGixybWJ0KSeIVWUzFSX7JPCBEJcMLdXX/A3Jtdhp2tcVgMwaTtA==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.0.1.tgz",
        "fileCount": 156,
        "unpackedSize": 280979,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCRJ0YGuABAd8pyyOvO+jfLcfybROsJZ3D+cxKkL9m3lAIhANGdLJorvJLkdXKGMk/WRP/qHukE1z8JtVpE+cwzGU21"
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.0.1_1687474312418_0.43763784784178816"
      },
      "_hasShrinkwrap": false
    },
    "3.0.2": {
      "name": "ts-patch",
      "version": "3.0.2",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "standard-version": {
        "types": [
          {
            "type": "feat",
            "section": "Features"
          },
          {
            "type": "feature",
            "section": "Features"
          },
          {
            "type": "fix",
            "section": "Bug Fixes"
          },
          {
            "type": "perf",
            "section": "Performance Improvements"
          },
          {
            "type": "revert",
            "section": "Reverts"
          },
          {
            "type": "docs",
            "section": "Documentation",
            "hidden": true
          },
          {
            "type": "style",
            "section": "Styles",
            "hidden": true
          },
          {
            "type": "chore",
            "section": "Miscellaneous Chores",
            "hidden": true
          },
          {
            "type": "refactor",
            "section": "Code Refactoring",
            "hidden": true
          },
          {
            "type": "test",
            "section": "Tests",
            "hidden": true
          },
          {
            "type": "build",
            "section": "Build System",
            "hidden": true
          },
          {
            "type": "ci",
            "section": "Continuous Integration",
            "hidden": true
          },
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@3.0.2",
      "dist": {
        "shasum": "cbdf88e4dfb596e4dab8f2c8269361d33270a0ba",
        "integrity": "sha512-iTg8euqiNsNM1VDfOsVIsP0bM4kAVXU38n7TGQSkky7YQX/syh6sDPIRkvSS0HjT8ZOr0pq1h+5Le6jdB3hiJQ==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.0.2.tgz",
        "fileCount": 156,
        "unpackedSize": 282082,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICVYs5PPvfVfzeWVrz7gynw7KRn8/33Sw/XkiOqUA4BuAiEAsClaUp2qmVm/MeauWsLletaPoZNfYb/bYFMt6ZCNjpY="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.0.2_1689814477833_0.5289664571961696"
      },
      "_hasShrinkwrap": false
    },
    "3.1.0": {
      "name": "ts-patch",
      "version": "3.1.0",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.5.4",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "standard-version": {
        "types": [
          {
            "type": "feat",
            "section": "Features"
          },
          {
            "type": "feature",
            "section": "Features"
          },
          {
            "type": "fix",
            "section": "Bug Fixes"
          },
          {
            "type": "perf",
            "section": "Performance Improvements"
          },
          {
            "type": "revert",
            "section": "Reverts"
          },
          {
            "type": "docs",
            "section": "Documentation",
            "hidden": true
          },
          {
            "type": "style",
            "section": "Styles",
            "hidden": true
          },
          {
            "type": "chore",
            "section": "Miscellaneous Chores",
            "hidden": true
          },
          {
            "type": "refactor",
            "section": "Code Refactoring",
            "hidden": true
          },
          {
            "type": "test",
            "section": "Tests",
            "hidden": true
          },
          {
            "type": "build",
            "section": "Build System",
            "hidden": true
          },
          {
            "type": "ci",
            "section": "Continuous Integration",
            "hidden": true
          },
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@3.1.0",
      "dist": {
        "shasum": "b10197f7e4c5d183c6b9f8ba06357266688821d9",
        "integrity": "sha512-KQYqDzOJjQHdCGcIoXNL4Z4jFlcyGEZXydYpHwI2gGUwQ3EqLyAjMNdIpiRZOHX7q+zPJ7QPxZJH4nwZLPdRcg==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.1.0.tgz",
        "fileCount": 156,
        "unpackedSize": 288727,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCoXbGNw/XEb36QmwtmlfHrYDiKJ4iZsNtAHjyX/S9+WgIgTBLoDp+nfSdjGf3ev1ihAL7IFiDaVJBNloyS2K71AMU="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.1.0_1701802055044_0.6514382564060048"
      },
      "_hasShrinkwrap": false,
      "deprecated": "Version 3.1.0 is deprecated. Please use version 3.1.1."
    },
    "3.1.1": {
      "name": "ts-patch",
      "version": "3.1.1",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.5.4",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "standard-version": {
        "types": [
          {
            "type": "feat",
            "section": "Features"
          },
          {
            "type": "feature",
            "section": "Features"
          },
          {
            "type": "fix",
            "section": "Bug Fixes"
          },
          {
            "type": "perf",
            "section": "Performance Improvements"
          },
          {
            "type": "revert",
            "section": "Reverts"
          },
          {
            "type": "docs",
            "section": "Documentation",
            "hidden": true
          },
          {
            "type": "style",
            "section": "Styles",
            "hidden": true
          },
          {
            "type": "chore",
            "section": "Miscellaneous Chores",
            "hidden": true
          },
          {
            "type": "refactor",
            "section": "Code Refactoring",
            "hidden": true
          },
          {
            "type": "test",
            "section": "Tests",
            "hidden": true
          },
          {
            "type": "build",
            "section": "Build System",
            "hidden": true
          },
          {
            "type": "ci",
            "section": "Continuous Integration",
            "hidden": true
          },
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@3.1.1",
      "dist": {
        "shasum": "40207ee4f75d4a6cd7bc49dd16094a10a507eaa6",
        "integrity": "sha512-ReGYz9jQYC80PFafBx25TC0UI9cSgmUBtpT+WIy8IrhpLVzEHf430k03XQYOMldQMyZDBbzn5fBPELgtIl65cA==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.1.1.tgz",
        "fileCount": 156,
        "unpackedSize": 288996,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEKn5ECvhYOX/5GDL0PqOy/s+XsLcHEb0GghOZDDfKLjAiEAuvSEJh6fIynjCQ6Jb+0D5LFfewHC268WtFq5H/g3Vtc="
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.1.1_1701845079275_0.5477683037385199"
      },
      "_hasShrinkwrap": false
    },
    "3.1.2": {
      "name": "ts-patch",
      "version": "3.1.2",
      "description": "Patch typescript to support custom transformers in tsconfig.json",
      "main": "./index.js",
      "types": "./index.d.ts",
      "keywords": [
        "typescript",
        "transform",
        "transformer",
        "plugin",
        "config",
        "ast"
      ],
      "author": {
        "name": "Ron S.",
        "url": "http://twitter.com/ron"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/nonara/ts-patch.git"
      },
      "bugs": {
        "url": "https://github.com/nonara/ts-patch/issues"
      },
      "homepage": "https://github.com/nonara/ts-patch#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "global-prefix": "^3.0.0",
        "minimist": "^1.2.8",
        "resolve": "^1.22.2",
        "semver": "^7.5.4",
        "strip-ansi": "^6.0.1"
      },
      "bin": {
        "ts-patch": "bin/ts-patch.js",
        "tspc": "bin/tspc.js"
      },
      "standard-version": {
        "types": [
          {
            "type": "feat",
            "section": "Features"
          },
          {
            "type": "feature",
            "section": "Features"
          },
          {
            "type": "fix",
            "section": "Bug Fixes"
          },
          {
            "type": "perf",
            "section": "Performance Improvements"
          },
          {
            "type": "revert",
            "section": "Reverts"
          },
          {
            "type": "docs",
            "section": "Documentation",
            "hidden": true
          },
          {
            "type": "style",
            "section": "Styles",
            "hidden": true
          },
          {
            "type": "chore",
            "section": "Miscellaneous Chores",
            "hidden": true
          },
          {
            "type": "refactor",
            "section": "Code Refactoring",
            "hidden": true
          },
          {
            "type": "test",
            "section": "Tests",
            "hidden": true
          },
          {
            "type": "build",
            "section": "Build System",
            "hidden": true
          },
          {
            "type": "ci",
            "section": "Continuous Integration",
            "hidden": true
          },
          {
            "type": "change",
            "section": "Changes"
          }
        ]
      },
      "licenseText": "Copyright 2021 Ron Spickenagel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation \nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, \ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom \nthe Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR \nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
      "_id": "ts-patch@3.1.2",
      "dist": {
        "shasum": "9d4832eca34ed0b9eb1f8456cb00c941f50b442b",
        "integrity": "sha512-n58F5AqjUMdp9RAKq+E1YBkmONltPVbt1nN+wrmZXoYZek6QcvaTuqvKMhYhr5BxtC53kD/exxIPA1cP1RQxsA==",
        "tarball": "https://registry.npmjs.org/ts-patch/-/ts-patch-3.1.2.tgz",
        "fileCount": 156,
        "unpackedSize": 289325,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDWAA9uuA4i0gl/apxyUJFQekaIsbG1u9ePkQ7TR+3WtgIhAMycng4vBBAse9r0kRzT7eLlFpTH/KfjVnwnR5w+Qg/0"
          }
        ]
      },
      "_npmUser": {
        "name": "nonara",
        "email": "ron@nonara.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nonara",
          "email": "ron@nonara.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/ts-patch_3.1.2_1704931102149_0.5444008488686627"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2019-10-14T20:53:27.331Z",
    "1.0.0": "2019-10-14T20:53:27.486Z",
    "modified": "2024-01-10T23:58:22.510Z",
    "1.0.1": "2019-10-14T21:03:31.507Z",
    "1.0.2": "2019-10-15T19:28:46.014Z",
    "1.0.3": "2019-10-31T16:37:18.802Z",
    "1.0.4": "2019-10-31T20:58:10.474Z",
    "1.0.5": "2019-12-20T04:44:18.074Z",
    "1.0.6": "2020-03-19T03:49:21.005Z",
    "1.0.7": "2020-03-24T22:47:43.030Z",
    "1.0.8": "2020-04-22T00:01:39.441Z",
    "1.0.9": "2020-04-28T00:25:47.499Z",
    "1.0.10": "2020-04-28T01:57:45.884Z",
    "1.1.0": "2020-05-09T03:26:36.129Z",
    "1.1.1": "2020-05-10T22:54:13.391Z",
    "1.1.2": "2020-05-12T00:11:08.053Z",
    "1.1.3": "2020-05-12T00:25:05.285Z",
    "1.2.0": "2020-05-21T02:06:11.040Z",
    "1.2.1": "2020-05-21T05:05:04.489Z",
    "1.2.2": "2020-05-24T20:15:31.091Z",
    "1.2.3": "2020-05-25T02:42:34.006Z",
    "1.2.4": "2020-05-25T04:52:46.125Z",
    "1.2.5": "2020-06-23T18:56:35.252Z",
    "1.3.0": "2020-07-27T00:48:04.775Z",
    "1.3.1": "2020-11-25T22:11:38.338Z",
    "1.3.2": "2021-01-31T23:25:13.801Z",
    "1.3.3": "2021-04-23T21:35:26.104Z",
    "1.3.4": "2021-06-30T17:36:11.811Z",
    "1.4.0": "2021-07-13T04:16:45.480Z",
    "1.4.1": "2021-07-13T20:54:25.799Z",
    "1.4.2": "2021-08-01T00:31:24.387Z",
    "1.4.3": "2021-08-23T00:24:31.139Z",
    "1.4.4": "2021-08-27T20:51:31.914Z",
    "1.4.5": "2021-10-25T17:59:16.758Z",
    "2.0.0": "2021-11-01T19:14:23.146Z",
    "2.0.1": "2021-11-01T22:45:39.691Z",
    "2.0.2": "2022-08-10T01:56:10.810Z",
    "2.1.0": "2022-12-08T22:30:42.626Z",
    "3.0.0-beta1": "2023-04-08T04:24:20.978Z",
    "3.0.0-beta2": "2023-04-08T05:16:39.277Z",
    "3.0.0-beta3": "2023-04-13T17:17:19.873Z",
    "3.0.0-rc1": "2023-04-20T02:34:17.069Z",
    "3.0.0-rc2": "2023-04-20T04:10:14.119Z",
    "3.0.0-rc3": "2023-05-25T22:38:37.301Z",
    "3.0.0": "2023-06-13T22:08:40.936Z",
    "3.0.1": "2023-06-22T22:51:52.691Z",
    "3.0.2": "2023-07-20T00:54:38.087Z",
    "3.1.0": "2023-12-05T18:47:35.220Z",
    "3.1.1": "2023-12-06T06:44:39.512Z",
    "3.1.2": "2024-01-10T23:58:22.300Z"
  },
  "maintainers": [
    {
      "name": "nonara",
      "email": "ron@nonara.com"
    }
  ],
  "description": "Patch typescript to support custom transformers in tsconfig.json",
  "homepage": "https://github.com/nonara/ts-patch#readme",
  "keywords": [
    "typescript",
    "transform",
    "transformer",
    "plugin",
    "config",
    "ast"
  ],
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/nonara/ts-patch.git"
  },
  "author": {
    "name": "Ron S.",
    "url": "http://twitter.com/ron"
  },
  "bugs": {
    "url": "https://github.com/nonara/ts-patch/issues"
  },
  "license": "MIT",
  "readme": "[![npm version](https://badge.fury.io/js/ts-patch.svg)](https://badge.fury.io/js/ts-patch)\n[![NPM Downloads](https://img.shields.io/npm/dm/ts-patch.svg?style=flat)](https://npmjs.org/package/ts-patch)\n![Build Status](https://github.com/nonara/ts-patch/workflows/Build/badge.svg)\n\n# ts-patch\n\nPatch typescript to allow custom transformers (plugins) during build.\n\nPlugins are specified in `tsconfig.json`, or provided programmatically in `CompilerOptions`.\n\n_Migrating from ttypescript is easy! See: [Method 1: Live Compiler](#method-1-live-compiler)_\n\n## Features\n\n* Patch typescript installation via on-the-fly, in-memory patching _or_ as a persistent patch\n* Can patch individual libraries (see `ts-patch /?`)\n* Hook build process by transforming the `Program` (see: [Transforming Program](#transforming-program))\n* Add, remove, or modify diagnostics (see: [Altering Diagnostics](#altering-diagnostics))\n* Fully compatible with legacy [ttypescript](https://github.com/cevek/ttypescript) projects\n* **(new)** Experimental support for ES Module based transformers\n\n# Table of Contents\n\n<!-- TOC -->\n* [ts-patch](#ts-patch)\n  * [Features](#features)\n* [Table of Contents](#table-of-contents)\n* [Installation](#installation)\n* [Usage](#usage)\n  * [Method 1: Live Compiler](#method-1-live-compiler)\n  * [Method 2: Persistent Patch](#method-2-persistent-patch)\n* [Configuration](#configuration)\n  * [Plugin Options](#plugin-options)\n* [Writing Transformers](#writing-transformers)\n  * [Source Transformers](#source-transformers)\n    * [Source Transformer Entry Point](#source-transformer-entry-point)\n    * [Source Transformer Example](#source-transformer-example)\n    * [Altering Diagnostics](#altering-diagnostics)\n    * [Note](#note)\n  * [Program Transformers](#program-transformers)\n    * [Program Transformer Entry Point](#program-transformer-entry-point)\n    * [Configuring Program Transformers](#configuring-program-transformers)\n    * [Program Transformer Example](#program-transformer-example)\n  * [Plugin Package Configuration](#plugin-package-configuration)\n    * [Example](#example)\n  * [Resources](#resources)\n    * [Recommended Reading](#recommended-reading)\n    * [Recommended Tools](#recommended-tools)\n    * [Discussion](#discussion)\n* [Advanced Options](#advanced-options)\n* [Maintainers](#maintainers)\n  * [Help Wanted](#help-wanted)\n* [License](#license)\n<!-- TOC -->\n\n# Installation\n\n1. Install package\n```sh\n<yarn|npm|pnpm> add -D ts-patch\n```\n\n# Usage\n\n## Method 1: Live Compiler\n\nThe live compiler patches on-the-fly, each time it is run.\n\n**Via commandline:** Simply use `tspc` (instead of `tsc`)\n\n**With tools such as ts-node, webpack, ts-jest, etc:** specify the compiler as  `ts-patch/compiler`\n\n## Method 2: Persistent Patch\n\nPersistent patch modifies the typescript installation within the node_modules path. It requires additional configuration\nto remain persisted, but it carries less load time and complexity compared to the live compiler.\n\n1. Install the patch\n\n```shell\n# For advanced options, see: ts-patch /?\nts-patch install\n```\n\n2. Add `prepare` script (keeps patch persisted after npm install)\n\n`package.json`\n ```jsonc\n{\n  /* ... */\n  \"scripts\": {\n    \"prepare\": \"ts-patch install -s\"\n  }\n}\n ```\n\n# Configuration\n\n**tsconfig.json**: Add transformers to `compilerOptions` in `plugins` array.\n\n**Examples**\n```jsonc\n{\n    \"compilerOptions\": {\n        \"plugins\": [\n            // Source Transformers\n            { \"transform\": \"transformer-module\" },\n            { \"transform\": \"transformer2\", \"extraOption\": 123 },\n            { \"transform\": \"trans-with-mapping\", \"resolvePathAliases\": true },\n            { \"transform\": \"esm-transformer\", \"isEsm\": true },\n\n            // Program Transformer\n            { \"transform\": \"transformer-module5\", \"transformProgram\": true }\n        ]\n    }\n}\n```\n\n## Plugin Options\n\n| Option             | Type    | Description                                                                                                   |\n|--------------------|---------|:--------------------------------------------------------------------------------------------------------------|\n| **transform**      | string  | Module name or path to transformer _(*.ts or *.js)_                                                           |\n| after              | boolean | Apply transformer after stock TS transformers                                                                 |\n| afterDeclarations  | boolean | Apply transformer to declaration (*.d.ts) files                                                               |\n| transformProgram   | boolean | Transform `Program` during `ts.createProgram()` _(see: [Program Transformers](#program-transformers))_        |\n| isEsm              | boolean | Transformer is ES Module (_note: experimental_ — requires [esm](https://www.npmjs.com/package/esm))           |\n| resolvePathAliases | boolean | Resolve path aliases in transformer (requires [tsconfig-paths](https://www.npmjs.com/package/tsconfig-paths)) |\n| type               | string  | See: [Source Transformer Entry Point](#source-transformer-entry-point) (default: 'program')                   |\n| import             | string  | Name of exported transformer function _(defaults to `default` export)_                                        |\n| tsConfig           | string  | tsconfig.json file _for transformer_ (allows specifying compileOptions, path mapping support, etc)            |\n| _..._              |         | Provide your own custom options, which will be passed to the transformer                                      |\n\n_Note: Required options are bold_\n\n# Writing Transformers\n\nFor an overview of the typescript compiler (such as what a `SourceFile` and `Program` is) see: [Typescript Compiler Notes](https://github.com/microsoft/TypeScript-Compiler-Notes).\n\n## Source Transformers\n\nSource Transformers will transform the AST of SourceFiles during compilation, allowing you to alter the output of the JS or declarations files.\n\n### Source Transformer Entry Point\n\n```ts\n(program: ts.Program, config: PluginConfig, extras: TransformerExtras) => ts.TransformerFactory\n```\n\n**PluginConfig**: [Type Declaration](https://github.com/nonara/ts-patch/blob/master/projects/core/shared/plugin-types.ts)  \n**TransformerExtras**: [Type Declaration](https://github.com/nonara/ts-patch/blob/master/projects/core/shared/plugin-types.ts)  \n**ts.TransformerFactory**: `(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile`\n\n_Note: Additional [legacy signatures](https://github.com/cevek/ttypescript#pluginconfigtype) are supported, but it is not recommended to develop a new transformer using them._\n\n### Source Transformer Example\n\nTransformers can be written in JS or TS.\n\n```ts\nimport type * as ts from 'typescript';\nimport type { TransformerExtras, PluginConfig } from 'ts-patch';\n\n/** Changes string literal 'before' to 'after' */\nexport default function (program: ts.Program, pluginConfig: PluginConfig, { ts: tsInstance }: TransformerExtras) {\n  return (ctx: ts.TransformationContext) => {\n    const { factory } = ctx;\n    \n    return (sourceFile: ts.SourceFile) => {\n      function visit(node: ts.Node): ts.Node {\n        if (tsInstance.isStringLiteral(node) && node.text === 'before') {\n          return factory.createStringLiteral('after');\n        }\n        return tsInstance.visitEachChild(node, visit, ctx);\n      }\n      return tsInstance.visitNode(sourceFile, visit);\n    };\n  };\n}\n\n```\n\n**Live Examples**:\n\n[`{ transform: \"typescript-transform-paths\" }`](https://github.com/LeDDGroup/typescript-transform-paths)\n\n[`{ transform: \"typescript-is/lib/transform-inline/transformer\" }`](https://github.com/woutervh-/typescript-is)\n\n[`{ transform: \"typia/lib/transform\" }`](https://github.com/samchon/typia) ([💻playground](https://typia.io/playground))\n\n[`{ transform: \"@nestia/core/lib/transform\" }`](https://github.com/samchon/nestia)\n\n### Altering Diagnostics\n\nDiagnostics can be altered in a Source Transformer.\n\nTo alter diagnostics you can use the following, provided from the `TransformerExtras` parameter:\n\n| property           | description                                         |\n|--------------------|-----------------------------------------------------|\n| diagnostics        | Reference to `Diagnostic` array                     |   \n| addDiagnostic()    | Safely add `Diagnostic` to `diagnostics` array      |\n| removeDiagnostic() | Safely remove `Diagnostic` from `diagnostics` array | \n\n### Note\n\n_This alters diagnostics during _emit only_. If you want to alter diagnostics in your IDE as well, you'll need to create a LanguageService plugin to accompany your source transformer_\n\n## Program Transformers\n\nSometimes you want to do more than just transform source code. For example you may want to:\n\n- TypeCheck code after it's been transformed\n- Generate code and add it to the program\n- Add or remove emit files during transformation\n\nFor this, we've introduced what we call a Program Transformer. The transform action takes place during `ts.createProgram`, and allows\nre-creating the `Program` instance that typescript uses.\n\n### Program Transformer Entry Point\n\n```ts\n(program: ts.Program, host: ts.CompilerHost | undefined, options: PluginConfig, extras: ProgramTransformerExtras) => ts.Program\n```\n\n**ProgramTransformerExtras** >>> [Type Declaration](https://github.com/nonara/ts-patch/blob/master/projects/core/shared/plugin-types.ts)\n\n### Configuring Program Transformers\n\nTo configure a Program Transformer, supply `\"transformProgram\": true` in the config transformer entry.\n\n_Note: The `before`, `after`, and `afterDeclarations` options do not apply to a Program Transformer and will be ignored_\n\n[See Config Example](#configuration)\n\n### Program Transformer Example\n```TypeScript\n/** \n * Add a file to Program\n */\nimport * as path from 'path';\nimport type * as ts from 'typescript';\nimport type { ProgramTransformerExtras, PluginConfig } from 'ts-patch';\n\nexport const newFile = path.resolve(__dirname, 'added-file.ts');\n\nexport default function (\n  program: ts.Program, \n  host: ts.CompilerHost | undefined, \n  options: PluginConfig, \n  { ts: tsInstance }: ProgramTransformerExtras\n) {\n  return tsInstance.createProgram(\n    /* rootNames */ program.getRootFileNames().concat([ newFile ]),\n    program.getCompilerOptions(),\n    host,\n    /* oldProgram */ program\n  );\n}\n```\n\n**Note:** For a more complete example, see [Transforming Program with additional AST transformations](https://github.com/nonara/ts-patch/discussions/29#discussioncomment-325979)\n\n**Live Examples**:\n\n[`{ transform: \"@typescript-virtual-barrel/compiler-plugin\", transformProgram: true }`](https://github.com/zaguiini/typescript-virtual-barrel)\n\n## Plugin Package Configuration\n\nThe plugin package configuration allows you to specify custom options for your TypeScript plugin. \nThis configuration is defined in the `package.json` of your plugin under the `tsp` property.\n\nAn example use case is enabling `parseAllJsDoc` if you require full JSDoc parsing in tsc for your transformer in TS v5.3+. (see: [5.3 JSDoc parsing changes](https://devblogs.microsoft.com/typescript/announcing-typescript-5-3/#optimizations-by-skipping-jsdoc-parsing))\n\nFor all available options, see the `PluginPackageConfig` type in [plugin-types.ts](https://github.com/nonara/ts-patch/blob/master/projects/core/shared/plugin-types.ts)\n\n### Example\n\n```jsonc\n{\n  \"name\": \"your-plugin-name\",\n  \"version\": \"1.0.0\",\n  \"tsp\": {\n    \"tscOptions\": {\n      \"parseAllJsDoc\": true\n    }\n  }\n}\n```\n\n## Resources\n\n### Recommended Reading\n\n- How-To: [Advice for working with the TS Compiler API](https://github.com/nonara/ts-patch/discussions/31)\n- How-To: [TypeScript Transformer Handbook](https://github.com/madou/typescript-transformer-handbook)\n- Article: [How to Write a TypeScript Transform (Plugin)](https://dev.doctorevidence.com/how-to-write-a-typescript-transform-plugin-fc5308fdd943)\n- Article: [Creating a TypeScript Transformer](https://43081j.com/2018/08/creating-a-typescript-transform?source=post_page-----731e2b0b66e6----------------------)\n\n### Recommended Tools\n\n| Tool                                                                 | Type        | Description                                                                                 |\n|----------------------------------------------------------------------|-------------|---------------------------------------------------------------------------------------------|\n| [TS AST Viewer](https://ts-ast-viewer.com/)                          | Web App     | Allows you to see the `Node` structure and other TS properties of your source code.         |\n| [ts-expose-internals](https://github.com/nonara/ts-expose-internals) | NPM Package | Exposes internal types and methods of the TS compiler API                                   |\n\n### Discussion\n\n- `#compiler-internals-and-api` on [TypeScript Discord Server](https://discord.com/invite/typescript)\n- TSP [Discussions](https://github.com/nonara/ts-patch/discussions) Board\n\n# Advanced Options\n\n**(env) `TSP_SKIP_CACHE`**\n\nSkips patch cache when patching via cli or live compiler.\n\n**(env) `TSP_COMPILER_TS_PATH`**\n\nSpecify typescript library path to use for `ts-patch/compiler` (defaults to `require.resolve('typescript')`)\n\n**(env) `TSP_CACHE_DIR`**\n\nOverride patch cache directory\n\n**(cli) `ts-patch clear-cache`**\n\nCleans patch cache & lockfiles\n\n# Maintainers\n\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/nonara\"><img src=\"https://avatars0.githubusercontent.com/u/1427565?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ron S.</b></sub></a></td>\n  </tr>\n</table>\n\n## Help Wanted\n\nIf you're interested in helping and are knowledgeable with the TS compiler codebase, feel free to reach out!\n\n# License\n\nThis project is licensed under the MIT License, as described in `LICENSE.md`\n",
  "readmeFilename": "README.md",
  "users": {
    "flumpus-dev": true
  }
}