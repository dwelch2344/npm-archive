{
  "_id": "@stdlib/string-format",
  "_rev": "8-1c1271eb641e2f9c1de8c0f0646cf0bb",
  "name": "@stdlib/string-format",
  "dist-tags": {
    "latest": "0.2.1"
  },
  "versions": {
    "0.0.1": {
      "name": "@stdlib/string-format",
      "version": "0.0.1",
      "description": "Insert supplied variable values into a format string.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/string-format.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-contains": "^0.0.x",
        "@stdlib/assert-is-number": "^0.0.x",
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/assert-is-uppercase": "^0.0.x",
        "@stdlib/math-base-assert-is-finite": "^0.0.x",
        "@stdlib/math-base-assert-is-nan": "^0.0.x",
        "@stdlib/math-base-special-abs": "^0.0.x",
        "@stdlib/string-lowercase": "^0.0.x",
        "@stdlib/string-repeat": "^0.0.x",
        "@stdlib/string-replace": "^0.0.x",
        "@stdlib/string-starts-with": "^0.0.x",
        "@stdlib/string-uppercase": "^0.0.x"
      },
      "devDependencies": {
        "@stdlib/bench": "^0.0.x",
        "@stdlib/constants-float64-ninf": "^0.0.x",
        "@stdlib/constants-float64-pi": "^0.0.x",
        "@stdlib/constants-float64-pinf": "^0.0.x",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "stdstring",
        "utilities",
        "utility",
        "utils",
        "util",
        "string",
        "str",
        "format",
        "fmt",
        "formatter",
        "sprintf",
        "printf",
        "print"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "10da832e2ba6631afac9cb6d098ab18ec6075a10",
      "_id": "@stdlib/string-format@0.0.1",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-OeUGLQ2CZFhPttZxq2QWSsWg/bwaQ/wHmXLsFEzGpMAzMarVnYH3KawQQNVZqy68j4xULP23sv2NA7kEXhUo8A==",
        "shasum": "3439dd0946c1f322c4019cd35c74ef2f1fc13d07",
        "tarball": "https://registry.npmjs.org/@stdlib/string-format/-/string-format-0.0.1.tgz",
        "fileCount": 12,
        "unpackedSize": 48598,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiL5iiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrgoQ//cesmKoDWlaTV1CpzJKsRsKuozp5m/995vlc09GeFwRFCfk4g\r\nyAmo4JCFzY5uqAXpF6e8DCUtxQTgbk1+fAU5ln58SFrsqlZiXTkwI5Jiw8HR\r\niQC/nMkGwmTp/02D2ut5yf63/Du7gpStXUwIYVT+HOl+70n2iTCxIDnLupP5\r\n6yMcIcXplfvWM4GnfEVTmfn9z0FXxnCv4nJIxoTmHLA1S5Uim1wwmziTMuvv\r\nthgcvJ2NgPCA9Em/yg8VKd3W0uRk1ubQevoiq44ejqFamLl18xgd5PiKMK8z\r\n1KA9C3G49tG96acp/B0+vj6IUMXy5AwwuK+SecGYh3xr7sQv0imZyjENbSnq\r\nzXiKW3GKLZUYR/tYLhPURcM677Ao7pYkH7dxY+Jh2Jl+JZrEngKc7WAOzYd7\r\nOVckGjfekw6RXIwt/8FP425b1rXnuCK+avXGVhNYcLMOMPoXesNokucktqOK\r\n6KFqLwUO1z+/1ZtpeYRkaB04uz56F6Zo27evibSz0mFUf0yShMfCcWZIGTuo\r\n/DK2i8uZqBiA5a6+MmwMFibwOrbUoE11ooDgBdxYJxKb53/silrga4xKkMgm\r\nx2HXY8hIQrKDnylNTsjc6STFjNPPeO7LivNhdD3ky++LR9EuQFS5XoB0GR6k\r\nAsaxzO/0HmUzNbQOfkc+ldeY8DeEHOuf5Rc=\r\n=ucNL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDP5Ov2WymNYpbsoT8zKpmBuZaF12TnPUpkGEBp5sUN2AiEA0RRD/sSfCJ+71h0cqixUMGU3pZgM+L4OMaYzhGiQjco="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/string-format_0.0.1_1647286434756_0.13143478441925138"
      },
      "_hasShrinkwrap": false
    },
    "0.0.2": {
      "name": "@stdlib/string-format",
      "version": "0.0.2",
      "description": "Insert supplied variable values into a format string.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/string-format.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/string-base-format-interpolate": "^0.0.x",
        "@stdlib/string-base-format-tokenize": "^0.0.x"
      },
      "devDependencies": {
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/bench": "^0.0.x",
        "@stdlib/constants-float64-ninf": "^0.0.x",
        "@stdlib/constants-float64-pi": "^0.0.x",
        "@stdlib/constants-float64-pinf": "^0.0.x",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "stdstring",
        "utilities",
        "utility",
        "utils",
        "util",
        "string",
        "str",
        "format",
        "fmt",
        "formatter",
        "sprintf",
        "printf",
        "print"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "69aecd706057266ba12c7cd9d2d5acbd3ddc1af7",
      "_id": "@stdlib/string-format@0.0.2",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-JkV2T9AblgbOB6MyjKfpDthrpx+tjxhRUg4/wOkccozVB/BF1lV4YZAjVO7rWZQO8gASU3kLjPBH0cfsNSdTyg==",
        "shasum": "58a12216560d938af7358e55aaacd3d3e94763c7",
        "tarball": "https://registry.npmjs.org/@stdlib/string-format/-/string-format-0.0.2.tgz",
        "fileCount": 10,
        "unpackedSize": 30507,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCJoFFNJD25v4sd5fOBTIdu7i734SImBSIj59X2k7rTogIgFZWn1vFuXCHensglN4IPm9GwV48z2cwk5JrwEndaC28="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiwOIWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpHTBAAjbJq0gH3pn09Jn4EVGQEdcIwfMrRj++yI5fIQ+dgNDZlJzxu\r\nYQfIW4zuZWL03MxshY5eBWtstwCpyIA2b2H8wApX3UIiOPNYmgbeuafjFqa9\r\nsD4s4a4jsLe/rnWuxeuMNE6LuA3NAcyFzGEwYMnMQjPcWuBNNeFODdJO47PF\r\nusVPnIhvbF5nAS/ELk8+Sd03YJmuqysTzGDqL01OR34cUnWq8Vn3UPSj9vNq\r\nYnKQJFErXKi2RqDKSvZJQK7lmkIAfIa8ysG164ekPVeKH3rmjStz2XVlD3D1\r\nXkraMJlCoxprBXKS7qOzpGI9sGLiziNzVsXPNNgMwN0YxGHcA4f6Ddo8wi54\r\nJxpn99iXm6UdDo90gqTG6G00YX+jIQBZ3cwNfhIc/O03/AcEsFR0WHqS8TJK\r\nbN4sKnu40xaF7ejlsTgAcQ1U9GtFbrZP2Gf60Gt0xE9pNgLnKrnUVWI1u1hm\r\nxls2Db4Rf08draPjuE95qNB0oc0VIEn/ljv0BLxnxlwWuCU64aRN8v60Sedc\r\nCUY0Fg/uNlnSHVMV53Zs9PI/8kZ0J5VgK8CANgAWvbOrLjGVTrdeR10hlAQD\r\nFRJbdAWshE6Uzf5dVT6pfQBqPfQoXz3wASy9W0CwGGN0FYN75Mq5vYSNEqKO\r\nGu64dpGPVTJ7NWZGW5rKGWdmlNbDgWNDnOM=\r\n=tpU8\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "kgryte",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/string-format_0.0.2_1656807957906_0.897364723376249"
      },
      "_hasShrinkwrap": false
    },
    "0.0.3": {
      "name": "@stdlib/string-format",
      "version": "0.0.3",
      "description": "Insert supplied variable values into a format string.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/string-format.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/string-base-format-interpolate": "^0.0.x",
        "@stdlib/string-base-format-tokenize": "^0.0.x"
      },
      "devDependencies": {
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/bench": "^0.0.x",
        "@stdlib/constants-float64-ninf": "^0.0.x",
        "@stdlib/constants-float64-pi": "^0.0.x",
        "@stdlib/constants-float64-pinf": "^0.0.x",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "stdstring",
        "utilities",
        "utility",
        "utils",
        "util",
        "string",
        "str",
        "format",
        "fmt",
        "formatter",
        "sprintf",
        "printf",
        "print"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "115127ea53df55418f35e4667cc0372514ce642e",
      "_id": "@stdlib/string-format@0.0.3",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-1jiElUQXlI/tTkgRuzJi9jUz/EjrO9kzS8VWHD3g7gdc3ZpxlA5G9JrIiPXGw/qmZTi0H1pXl6KmX+xWQEQJAg==",
        "shasum": "e916a7be14d83c83716f5d30b1b1af94c4e105b9",
        "tarball": "https://registry.npmjs.org/@stdlib/string-format/-/string-format-0.0.3.tgz",
        "fileCount": 10,
        "unpackedSize": 30507,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC48pmtRgRuzkuaU2z3zS249sF5ImQszC3ghX3EsUAovAIhAPJ6U68s3zVK6EQer42lAyRSBMvaZafQTSLujuVeuDdb"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJizYD+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoiow/6AwVXWHL3RvvZcofJG3qvmrKVozBt1An0iZNa5MfgVB9cG6zY\r\nmUxKGkaZdQUq7K10w/lZ1Zs9meClJa216mOO1IHl7B/qIsRKnToSxvkc8cjw\r\ntW0pMkXWTsPUkwKRkUGkuy+9ajxLr88uvnk0oq4RJldfc1AK8Cx5ugvOC18O\r\nmvGCiHA3GBdpUbsCfDM4Nl226LVjllEShNfWl6drTSL3OLt34kmxpHYpskaK\r\nGY25ysmV6CxXyAudGEmhG2H7XbTSn9+LU3MDR9nI/d2Fz4jewdkX1yJzqW/C\r\nBORvDlKcaA7zQJ0OVeT5yjgs+Iw59cBleqhHxnQduKq7QPnsT1SzBfo17tVj\r\nPaEc4585E13fpoAZuTYXMVO//98WGrsI8p4XErOyO77tP870da7ftn5VMKrd\r\nP3C0EJ0xTNIhO2fcghx3BGiTZsrf6Wcap5KpOplXJgGFMJBhd85BgJHTJjhJ\r\nSv5+y2KpD0f5MwYZgtWR2V8qFjL5ntHWnPhRtRxgpnXgrE9ZABcpzqmh+R7Z\r\ndV1R+9i7nZvdpznH6JKWzezk1Lgk1/h3BXvSQ2VFU18mfBXdmUHxeZKUsvWo\r\nCo+3ToCJnw9R4mqdWyOE2WcWxlZr2wvKXa0ORAzBg/1Lab/EauhlmsbtTUlx\r\nFj/bU+LUjMc11NjWqIQzQv67iAGaHn1j36I=\r\n=bljD\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "kgryte",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/string-format_0.0.3_1657635070801_0.36704667448561024"
      },
      "_hasShrinkwrap": false
    },
    "0.1.0": {
      "name": "@stdlib/string-format",
      "version": "0.1.0",
      "description": "Insert supplied variable values into a format string.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/string-format.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/string-base-format-interpolate": "^0.1.0",
        "@stdlib/string-base-format-tokenize": "^0.1.0"
      },
      "devDependencies": {
        "@stdlib/assert-is-string": "^0.0.8",
        "@stdlib/bench": "^0.0.12",
        "@stdlib/constants-float64-ninf": "^0.0.8",
        "@stdlib/constants-float64-pi": "^0.0.8",
        "@stdlib/constants-float64-pinf": "^0.0.8",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-min": "git+https://github.com/Planeshifter/tap-min.git"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "stdstring",
        "utilities",
        "utility",
        "utils",
        "util",
        "string",
        "str",
        "format",
        "fmt",
        "formatter",
        "sprintf",
        "printf",
        "print"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/stdlib"
      },
      "gitHead": "4f2310de3494fe36f4b74db309593f63e9d24dcc",
      "_id": "@stdlib/string-format@0.1.0",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-KeJaTp51blkxhG8KA7PGusMF/MApzb7Avg9deq5nwkuApVat2+uKefzNMqN5j04uYiq8Tu30IfgLdJ1IT3jRKw==",
        "shasum": "cf85b394efc8a6a17d10436e4473beebb4c08f8e",
        "tarball": "https://registry.npmjs.org/@stdlib/string-format/-/string-format-0.1.0.tgz",
        "fileCount": 12,
        "unpackedSize": 36174,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDhNyrJhU6MXY726+2MA+mG+YpUJwpqIXvopwyLm4b6YAiB+InWqOUAPfaLIw6NN0jdGw+Y6+ouMo8VJ7Pbb+bVCWQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte+stdlibbot@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte+stdlibbot@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/string-format_0.1.0_1695351764279_0.36012668704552864"
      },
      "_hasShrinkwrap": false
    },
    "0.1.1": {
      "name": "@stdlib/string-format",
      "version": "0.1.1",
      "description": "Insert supplied variable values into a format string.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/string-format.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/string-base-format-interpolate": "^0.1.1",
        "@stdlib/string-base-format-tokenize": "^0.1.1"
      },
      "devDependencies": {
        "@stdlib/assert-is-string": "^0.1.0",
        "@stdlib/bench": "^0.1.0",
        "@stdlib/constants-float64-ninf": "^0.1.0",
        "@stdlib/constants-float64-pi": "^0.1.0",
        "@stdlib/constants-float64-pinf": "^0.1.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-min": "git+https://github.com/Planeshifter/tap-min.git"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "stdstring",
        "utilities",
        "utility",
        "utils",
        "util",
        "string",
        "str",
        "format",
        "fmt",
        "formatter",
        "sprintf",
        "printf",
        "print"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/stdlib"
      },
      "gitHead": "836b37cf688bfa381fcb3cb3a2dd327f0a94ad19",
      "_id": "@stdlib/string-format@0.1.1",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-s/AyPpI2hh2mHcvb/OXrVSv2IQbLlXCL55YSW1HyByVsKRMUgE8RsU2uSuwIIbEczbLIffMugG5ly5QxX7fbCw==",
        "shasum": "d286c3c0234479c691fca97df7bf39058d4ff09a",
        "tarball": "https://registry.npmjs.org/@stdlib/string-format/-/string-format-0.1.1.tgz",
        "fileCount": 12,
        "unpackedSize": 36173,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC5ONk8B0hsVuNpHELKIkRdxy0Sn6k3qv84mUcZnV6nlQIgEBNlyrwpOFOPBDDPxgk+8XiTiMAReTXCCo3arzvZvbM="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte+stdlibbot@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte+stdlibbot@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/string-format_0.1.1_1696373083295_0.8151645993915166"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0": {
      "name": "@stdlib/string-format",
      "version": "0.2.0",
      "description": "Insert supplied variable values into a format string.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/string-format.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/string-base-format-interpolate": "^0.2.0",
        "@stdlib/string-base-format-tokenize": "^0.2.0"
      },
      "devDependencies": {
        "@stdlib/assert-is-string": "^0.1.1",
        "@stdlib/constants-float64-ninf": "^0.1.1",
        "@stdlib/constants-float64-pi": "^0.1.1",
        "@stdlib/constants-float64-pinf": "^0.1.1",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-min": "git+https://github.com/Planeshifter/tap-min.git",
        "@stdlib/bench-harness": "^0.1.2",
        "@stdlib/bench": "^0.3.1"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "stdstring",
        "utilities",
        "utility",
        "utils",
        "util",
        "string",
        "str",
        "format",
        "fmt",
        "formatter",
        "sprintf",
        "printf",
        "print"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/stdlib"
      },
      "gitHead": "7137673f0798ef13d7c9fd7becf78e557b1d583b",
      "_id": "@stdlib/string-format@0.2.0",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-JfUszc73E4Kzr/4mONGKhOfJxPnHHxZAM7KmrxngKEWmqiIwWR4aDomN4m6OKT8jhvWCCtj0Rprv7iDrH6/4kg==",
        "shasum": "9928cd486ac2c01904b6288c4f2355ade6f95d50",
        "tarball": "https://registry.npmjs.org/@stdlib/string-format/-/string-format-0.2.0.tgz",
        "fileCount": 12,
        "unpackedSize": 35799,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCSOtBcQnJFBsD6pJYjwolQQALUA0ylOIL+l6ea73qXzQIgN+TtKnIeSYI0ypt7sNQu1QYxKpBXlbKJYXJzpyyZJhU="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte+stdlibbot@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte+stdlibbot@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/string-format_0.2.0_1707880992925_0.858666542386892"
      },
      "_hasShrinkwrap": false
    },
    "0.2.1": {
      "name": "@stdlib/string-format",
      "version": "0.2.1",
      "description": "Insert supplied variable values into a format string.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "directories": {
        "doc": "./docs",
        "lib": "./lib",
        "dist": "./dist"
      },
      "types": "./docs/types",
      "scripts": {},
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/string-format.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/string-base-format-interpolate": "^0.2.1",
        "@stdlib/string-base-format-tokenize": "^0.2.1"
      },
      "devDependencies": {},
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "stdstring",
        "utilities",
        "utility",
        "utils",
        "util",
        "string",
        "str",
        "format",
        "fmt",
        "formatter",
        "sprintf",
        "printf",
        "print"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/stdlib"
      },
      "gitHead": "64931c5fdb4abc3a339b619658d3b5acc089e556",
      "_id": "@stdlib/string-format@0.2.1",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-+HpXkEJ0Z4gthH5KicXvRRJiCiCTSrKzM+mS8N6vwaAD+OG+Oq8Cn43XBD1ic/UHROI9un42MruF1ZLlkSmdOw==",
        "shasum": "00b8c978439ff7216416bcfb45593e0f88b36a15",
        "tarball": "https://registry.npmjs.org/@stdlib/string-format/-/string-format-0.2.1.tgz",
        "fileCount": 12,
        "unpackedSize": 35197,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBjkGACA/mSIm9aG5KERGQYiteymWmtCbys/zUzjuqnUAiBXuGBesme/RDDzZG5fxQeBiGy0GXEuibWjO85M7s3OnQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte+stdlibbot@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte+stdlibbot@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/string-format_0.2.1_1708528475372_0.3506078391507519"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2022-03-14T19:33:54.703Z",
    "0.0.1": "2022-03-14T19:33:54.899Z",
    "modified": "2024-02-21T15:14:36.170Z",
    "0.0.2": "2022-07-03T00:25:58.127Z",
    "0.0.3": "2022-07-12T14:11:10.935Z",
    "0.1.0": "2023-09-22T03:02:44.482Z",
    "0.1.1": "2023-10-03T22:44:43.472Z",
    "0.2.0": "2024-02-14T03:23:13.122Z",
    "0.2.1": "2024-02-21T15:14:35.656Z"
  },
  "maintainers": [
    {
      "name": "stdlib-bot",
      "email": "kgryte+stdlibbot@gmail.com"
    },
    {
      "name": "kgryte",
      "email": "kgryte@gmail.com"
    },
    {
      "name": "planeshifter",
      "email": "pgb@andrew.cmu.edu"
    },
    {
      "name": "rreusser",
      "email": "rsreusser@gmail.com"
    }
  ],
  "description": "Insert supplied variable values into a format string.",
  "homepage": "https://stdlib.io",
  "keywords": [
    "stdlib",
    "stdstring",
    "utilities",
    "utility",
    "utils",
    "util",
    "string",
    "str",
    "format",
    "fmt",
    "formatter",
    "sprintf",
    "printf",
    "print"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/stdlib-js/string-format.git"
  },
  "contributors": [
    {
      "name": "The Stdlib Authors",
      "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
    }
  ],
  "author": {
    "name": "The Stdlib Authors",
    "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
  },
  "bugs": {
    "url": "https://github.com/stdlib-js/stdlib/issues"
  },
  "license": "Apache-2.0",
  "readme": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2022 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n\n<details>\n  <summary>\n    About stdlib...\n  </summary>\n  <p>We believe in a future in which the web is a preferred environment for numerical computation. To help realize this future, we've built stdlib. stdlib is a standard library, with an emphasis on numerical and scientific computation, written in JavaScript (and C) for execution in browsers and in Node.js.</p>\n  <p>The library is fully decomposable, being architected in such a way that you can swap out and mix and match APIs and functionality to cater to your exact preferences and use cases.</p>\n  <p>When you use stdlib, you can be absolutely certain that you are using the most thorough, rigorous, well-written, studied, documented, tested, measured, and high-quality code out there.</p>\n  <p>To join us in bringing numerical computing to the web, get started by checking us out on <a href=\"https://github.com/stdlib-js/stdlib\">GitHub</a>, and please consider <a href=\"https://opencollective.com/stdlib\">financially supporting stdlib</a>. We greatly appreciate your continued support!</p>\n</details>\n\n# format\n\n[![NPM version][npm-image]][npm-url] [![Build Status][test-image]][test-url] [![Coverage Status][coverage-image]][coverage-url] <!-- [![dependencies][dependencies-image]][dependencies-url] -->\n\n> Insert supplied variable values into a format string.\n\n<section class=\"intro\">\n\n</section>\n\n<!-- /.intro -->\n\n<section class=\"installation\">\n\n## Installation\n\n```bash\nnpm install @stdlib/string-format\n```\n\n</section>\n\n<section class=\"usage\">\n\n## Usage\n\n```javascript\nvar format = require( '@stdlib/string-format' );\n```\n\n#### format( str, ...args )\n\nInserts supplied variable values into a format string.\n\n```javascript\nvar str = 'Hello, %s! My name is %s.';\nvar out = format( str, 'world', 'Bob' );\n// returns 'Hello, world! My name is Bob.'\n```\n\nThe format string is a string literal containing zero or more conversion specifications, each of which results in a string value being inserted to the output string. A conversion specification consists of a percent sign (`%`) followed by one or more of the following flags, width, precision, and conversion type characters. It thus takes the following form:\n\n```text\n%[flags][width][.precision]specifier\n```\n\nArguments following the format string are used to replace the placeholders in the format string. The number of arguments following the format string should be equal to the number of placeholders in the format string.\n\n```javascript\nvar str = '%s %s';\nvar out = format( str, 'Hello', 'World' );\n// returns 'Hello World'\n```\n\nTo supply arguments in a different order than they appear in the format string, positional placeholders as indicated by a `$` character in the format string are used. In this case, the conversion specification takes the form:\n\n```text\n%[pos$][flags][width][.precision]specifier\n```\n\n```javascript\nvar str = '%3$s %2$s %1$s';\nvar out = format( str, 'foo', 'bar', 'baz' );\n// returns 'baz bar foo'\n```\n\nThe following table summarizes the supported specifiers:\n\n| type | description                        | example      |\n| ---- | ---------------------------------- | ------------ |\n| s    | string                             | beep boop    |\n| c    | character                          | a            |\n| d, i | signed decimal integer             | -12          |\n| u    | unsigned decimal integer           | 390          |\n| b    | unsigned binary integer            | 11011011     |\n| o    | unsigned octal integer             | 510          |\n| x    | unsigned hexadecimal (lowercase)   | 7b           |\n| X    | unsigned hexadecimal (uppercase)   | 7B           |\n| f, F | decimal floating point             | 390.24       |\n| e    | scientific notation (lowercase)    | 3.9e+1       |\n| E    | scientific notation (uppercase)    | 3.9E+1       |\n| g    | shortest representation (`e`/`f`)  | 3.9          |\n| G    | shortest representation (`E`/`F`)  | 3.9          |\n\n```javascript\nvar str = '%i written as a binary number is %b.';\nvar out = format( str, 9, 9 );\n// returns '9 written as a binary number is 1001.'\n\nstr = '%i written as an octal number is %o.';\nout = format( str, 17, 17 );\n// returns '17 written as an octal number is 21.'\n\nstr = '%i written as a hexadecimal number is %x.';\nout = format( str, 255, 255 );\n// returns '255 written as a hexadecimal number is ff.'\n\nstr = '%i written as a hexadecimal number is %X (uppercase letters).';\nout = format( str, 255, 255 );\n// returns '255 written as a hexadecimal number is FF (uppercase letters).'\n\nstr = '%i written as a floating point number with default precision is %f!';\nout = format( str, 8, 8 );\n// returns '8 written as a floating point number with default precision is 8.000000!'\n\nstr = 'Scientific notation: %e';\nout = format( str, 3.14159 );\n// returns 'Scientific notation: 3.141590e+00'\n\nstr = 'Scientific notation: %E (uppercase).';\nout = format( str, 3.14159 );\n// returns 'Scientific notation: 3.141590E+00 (uppercase).'\n\nstr = '%g (shortest representation)';\nout = format( str, 3.14159 );\n// returns '3.14159'\n```\n\nA conversion specification may contain zero or more flags, which modify the behavior of the conversion. The following flags are supported:\n\n| flag  | description                                                                                |\n| ----- | ------------------------------------------------------------------------------------------ |\n| -     | left-justify the output within the given field width by padding with spaces on the right   |\n| 0     | left-pad the output with zeros instead of spaces when padding is required                  |\n| #     | use an alternative format for `o` and `x` conversions                                      |\n| +     | prefix the output with a plus (+) or minus (-) sign even if the value is a positive number |\n| space | prefix the value with a space character if no sign is written                              |\n\n```javascript\nvar str = 'Always prefix with a sign: %+i';\nvar out = format( str, 9 );\n// returns 'Always prefix with a sign: +9'\n\nout = format( str, -9 );\n// returns 'Always prefix with a sign: -9'\n\nstr = 'Only prefix with a sign if negative: %i';\nout = format( str, 6 );\n// returns 'Only prefix with a sign if negative: 6'\n\nout = format( str, -6 );\n// returns 'Only prefix with a sign if negative: -6'\n\nstr = 'Prefix with a sign if negative and a space if positive: % i';\nout = format( str, 3 );\n// returns 'Prefix with a sign if negative and a space if positive:  3'\n\nout = format( str, -3 );\n// returns 'Prefix with a sign if negative and a space if positive: -3'\n```\n\nThe `width` may be specified as a decimal integer representing the minimum number of characters to be written to the output. If the value to be written is shorter than this number, the result is padded with spaces on the left. The value is not truncated even if the result is larger. Alternatively, the `width` may be specified as an asterisk character (`*`), in which case the argument preceding the conversion specification is used as the minimum field width.\n\n```javascript\nvar str = '%5s';\nvar out = format( str, 'baz' );\n// returns '  baz'\n\nstr = '%-5s';\nout = format( str, 'baz' );\n// returns 'baz  '\n\nstr = '%05i';\nout = format( str, 2 );\n// returns '00002'\n\nstr = '%*i';\nout = format( str, 5, 2 );\n// returns '   2'\n```\n\nThe `precision` may be specified as a decimal integer or as an asterisk character (`*`), in which case the argument preceding the conversion specification is used as the precision value. The behavior of the `precision` differs depending on the conversion type:\n\n-   For `s` specifiers, the `precision` specifies the maximum number of characters to be written to the output.\n-   For floating point specifiers (`f`, `F`, `e`, `E`), the `precision` specifies the number of digits after the decimal point to be written to the output (by default, this is `6`).\n-  For `g` and `G` specifiers, the `precision` specifies the maximum number of significant digits to be written to the output.\n-  For integer specifiers (`d`, `i`, `u`, `b`, `o`, `x`, `X`), the `precision` specifies the minimum number of digits to be written to the output. If the value to be written is shorter than this number, the result is padded with zeros on the left. The value is not truncated even if the result is longer. For \n\nAlternatively, the `precision` may be specified as an asterisk character (`*`), in which case the argument preceding the conversion specification is used as the minimum number of digits.\n\n```javascript\nvar str = '%5.2s';\nvar out = format( str, 'baz' );\n// returns '   ba'\n\nstr = 'PI: ~%.2f';\nout = format( str, 3.14159 );\n// returns 'PI: ~3.14'\n\nstr = 'Agent %.3i';\nout = format( str, 7 );\n// returns 'Agent 007'\n```\n\n</section>\n\n<!-- /.usage -->\n\n<section class=\"examples\">\n\n## Examples\n\n<!-- eslint no-undef: \"error\" -->\n\n```javascript\nvar format = require( '@stdlib/string-format' );\n\nvar out = format( '%s %s!', 'Hello', 'World' );\n// returns 'Hello World!'\n\nout = format( 'Pi: ~%.2f', 3.141592653589793 );\n// returns 'Pi: ~3.14'\n\nout = format( '%-10s %-10s', 'a', 'b' );\n// returns 'a       b       '\n\nout = format( '%10s %10s', 'a', 'b' );\n// returns '       a       b'\n\nout = format( '%2$s %1$s %3$s', 'b', 'a', 'c' );\n// returns 'a b c'\n```\n\n</section>\n\n<!-- /.examples -->\n\n<!-- Section for related `stdlib` packages. Do not manually edit this section, as it is automatically populated. -->\n\n<section class=\"related\">\n\n</section>\n\n<!-- /.related -->\n\n<!-- Section for all links. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n\n<section class=\"main-repo\" >\n\n* * *\n\n## Notice\n\nThis package is part of [stdlib][stdlib], a standard library for JavaScript and Node.js, with an emphasis on numerical and scientific computing. The library provides a collection of robust, high performance libraries for mathematics, statistics, streams, utilities, and more.\n\nFor more information on the project, filing bug reports and feature requests, and guidance on how to develop [stdlib][stdlib], see the main project [repository][stdlib].\n\n#### Community\n\n[![Chat][chat-image]][chat-url]\n\n---\n\n## License\n\nSee [LICENSE][stdlib-license].\n\n\n## Copyright\n\nCopyright &copy; 2016-2024. The Stdlib [Authors][stdlib-authors].\n\n</section>\n\n<!-- /.stdlib -->\n\n<!-- Section for all links. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n<section class=\"links\">\n\n[npm-image]: http://img.shields.io/npm/v/@stdlib/string-format.svg\n[npm-url]: https://npmjs.org/package/@stdlib/string-format\n\n[test-image]: https://github.com/stdlib-js/string-format/actions/workflows/test.yml/badge.svg?branch=v0.2.1\n[test-url]: https://github.com/stdlib-js/string-format/actions/workflows/test.yml?query=branch:v0.2.1\n\n[coverage-image]: https://img.shields.io/codecov/c/github/stdlib-js/string-format/main.svg\n[coverage-url]: https://codecov.io/github/stdlib-js/string-format?branch=main\n\n<!--\n\n[dependencies-image]: https://img.shields.io/david/stdlib-js/string-format.svg\n[dependencies-url]: https://david-dm.org/stdlib-js/string-format/main\n\n-->\n\n[chat-image]: https://img.shields.io/gitter/room/stdlib-js/stdlib.svg\n[chat-url]: https://app.gitter.im/#/room/#stdlib-js_stdlib:gitter.im\n\n[stdlib]: https://github.com/stdlib-js/stdlib\n\n[stdlib-authors]: https://github.com/stdlib-js/stdlib/graphs/contributors\n\n[umd]: https://github.com/umdjs/umd\n[es-module]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\n\n[deno-url]: https://github.com/stdlib-js/string-format/tree/deno\n[deno-readme]: https://github.com/stdlib-js/string-format/blob/deno/README.md\n[umd-url]: https://github.com/stdlib-js/string-format/tree/umd\n[umd-readme]: https://github.com/stdlib-js/string-format/blob/umd/README.md\n[esm-url]: https://github.com/stdlib-js/string-format/tree/esm\n[esm-readme]: https://github.com/stdlib-js/string-format/blob/esm/README.md\n[branches-url]: https://github.com/stdlib-js/string-format/blob/main/branches.md\n\n[stdlib-license]: https://raw.githubusercontent.com/stdlib-js/string-format/main/LICENSE\n\n</section>\n\n<!-- /.links -->\n",
  "readmeFilename": "README.md",
  "users": {
    "flumpus-dev": true
  }
}