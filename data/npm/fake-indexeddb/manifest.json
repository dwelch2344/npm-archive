{
  "_id": "fake-indexeddb",
  "_rev": "51-3b28acf0f9c0e4bfc7707d7685979ac7",
  "name": "fake-indexeddb",
  "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
  "dist-tags": {
    "latest": "5.0.2",
    "beta": "4.0.0-beta.6"
  },
  "versions": {
    "1.0.1": {
      "name": "fake-indexeddb",
      "version": "1.0.1",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --harmony --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "0.0.2"
      },
      "devDependencies": {
        "browserify": "^10.1.3",
        "es6-shim": "^0.31.1",
        "eslint": "^0.20.0",
        "mocha": "^2.2.4",
        "node-qunit-phantomjs": "^1.2.0",
        "phantomjs-polyfill": "0.0.1",
        "qunitjs": "^1.18.0",
        "setimmediate": "^1.0.2"
      },
      "gitHead": "cbae6b5aecc805c91a75a21fd15bedf2b27ac267",
      "_id": "fake-indexeddb@1.0.1",
      "_shasum": "5a350fee80b8e114d3e5c1ae6206d22d18a707cf",
      "_from": ".",
      "_npmVersion": "2.7.4",
      "_nodeVersion": "0.12.2",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "5a350fee80b8e114d3e5c1ae6206d22d18a707cf",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.1.tgz",
        "integrity": "sha512-mVJE8YlgYmmyp/YdEM+ByYOuOkiDOQFXRac1SK7pFk4pk7Td4CcMEsgPDL+pCZzf4BxN3pbDonwCiDp+AIicHQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCWvAZ06x2Q8TuLLXKNCMuWZe995CWgpgUr3KpsrfCoegIgCWzf6lvuUqw39m3H4gWO70IAly6MDiLXmC7eNsirlg0="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.0.2": {
      "name": "fake-indexeddb",
      "version": "1.0.2",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --harmony --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "0.0.2"
      },
      "devDependencies": {
        "browserify": "^10.1.3",
        "es6-shim": "^0.31.1",
        "eslint": "^0.20.0",
        "mocha": "^2.2.4",
        "node-qunit-phantomjs": "^1.2.0",
        "phantomjs-polyfill": "0.0.1",
        "qunitjs": "^1.18.0",
        "setimmediate": "^1.0.2"
      },
      "gitHead": "636a5915e7fc299dddd667374a36b7b3e6a34675",
      "_id": "fake-indexeddb@1.0.2",
      "_shasum": "c07a5b69ad5501500bdc7ac3eb6740212dbaa5fa",
      "_from": ".",
      "_npmVersion": "2.7.4",
      "_nodeVersion": "0.12.2",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "c07a5b69ad5501500bdc7ac3eb6740212dbaa5fa",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.2.tgz",
        "integrity": "sha512-yCxxXnltfJTZxmaviFZTJTgFf6m2iko9n37UmzY7AhhOX7/YECExGf6Wft9a6vUyElqyFU5gbYActYQxdtBy8A==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAqPGA09HdP0HWj3c5N7S2+kZ1g890CnGyna20+f20mlAiEAyY6edXzqoNJ+bz/AsJtzYixYvrFwbyMamzbRTaKAZwc="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.0.3": {
      "name": "fake-indexeddb",
      "version": "1.0.3",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "array.prototype.find": "^1.0.0",
        "array.prototype.findindex": "^1.0.0",
        "realistic-structured-clone": "0.0.2"
      },
      "devDependencies": {
        "browserify": "^10.1.3",
        "eslint": "^0.20.0",
        "mocha": "^2.2.4",
        "node-qunit-phantomjs": "^1.2.0",
        "phantomjs-polyfill": "0.0.1",
        "qunitjs": "^1.18.0",
        "setimmediate": "^1.0.2"
      },
      "gitHead": "6218b9103231cdfa544c85b25940b82244517291",
      "_id": "fake-indexeddb@1.0.3",
      "_shasum": "a72b249943f97983e5f32941187350ee5ef03851",
      "_from": ".",
      "_npmVersion": "2.9.0",
      "_nodeVersion": "2.0.0",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "a72b249943f97983e5f32941187350ee5ef03851",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.3.tgz",
        "integrity": "sha512-581EsebC5v9RuwMhtEC8cTdsqmfZ2dRc4mLhGL8LCw5pzyBQyH1woz293uJCbG9ytE6CKbdYjNCk03+zZcgveQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDVwEyFoGpXJZKtfqvqJenOMVzLLnHLizksDfKAD790MQIgKrbxDDk3GF58dQsVQMfbGv2+Wc4aW0ugZQNtTqfE1EM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.0.4": {
      "name": "fake-indexeddb",
      "version": "1.0.4",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "array.prototype.find": "1.0.0",
        "array.prototype.findindex": "1.0.0",
        "realistic-structured-clone": "0.0.2",
        "setimmediate": "1.0.4"
      },
      "devDependencies": {
        "browserify": "13.0.0",
        "eslint": "0.20.0",
        "mocha": "2.4.5",
        "node-qunit-phantomjs": "1.3.1",
        "qunitjs": "1.22.0"
      },
      "gitHead": "69c89e487cc9dd0d5821c09c44635ad84417f48b",
      "_id": "fake-indexeddb@1.0.4",
      "_shasum": "2ac1425572ff3a9a6998dbd306a4aa6423f4787e",
      "_from": ".",
      "_npmVersion": "3.8.1",
      "_nodeVersion": "4.4.0",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "2ac1425572ff3a9a6998dbd306a4aa6423f4787e",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.4.tgz",
        "integrity": "sha512-LD4p96UbGsycOKwxhIHNAbV3O2cI2O1JdCsO7YH5QcI1jpMe7TeVcwAn2rXZDWR0Egri//XwEmgp85ChZccrHQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHoM5yF1eWdelKnpz7H17QhY0V0X1sT+v7GxbUCl5YhDAiAYv3IZuSiaEm7AgOkUMSLFDOHiaWr1poPOpcNJMWk9CQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-1.0.4.tgz_1458101175295_0.5658804823178798"
      },
      "directories": {}
    },
    "1.0.5": {
      "name": "fake-indexeddb",
      "version": "1.0.5",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "array.prototype.find": "1.0.0",
        "array.prototype.findindex": "1.0.0",
        "realistic-structured-clone": "0.0.2",
        "setimmediate": "1.0.4"
      },
      "devDependencies": {
        "browserify": "13.0.0",
        "eslint": "0.20.0",
        "mocha": "2.4.5",
        "node-qunit-phantomjs": "1.3.1",
        "qunitjs": "1.22.0"
      },
      "gitHead": "7ebe787b62afe3b0e6f7b930a974bc1ede1bdfd6",
      "_id": "fake-indexeddb@1.0.5",
      "_shasum": "7df735304fc7b21d6b2ca15ae1b45972d0ceea5f",
      "_from": ".",
      "_npmVersion": "2.14.20",
      "_nodeVersion": "4.4.1",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "7df735304fc7b21d6b2ca15ae1b45972d0ceea5f",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.5.tgz",
        "integrity": "sha512-4NmLPb0WMMentkH3kvNyvVnk/Q08xjyx0ukFCBUnx3ZXpzbBd08PUuv7SOmGeeHnEEWAeo1+2hPIAwYw89pN8g==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCV5oi0R83fd4cj8ZjOuKdZCZA/lKpbqWmnGm3goBe5PgIgM9sWwHctwgUQKCzAUsjZE717XF4A/BMmNLtzRU706xE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-1.0.5.tgz_1459895627021_0.38554812874644995"
      },
      "directories": {}
    },
    "1.0.6": {
      "name": "fake-indexeddb",
      "version": "1.0.6",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "array.prototype.find": "1.0.0",
        "array.prototype.findindex": "1.0.0",
        "realistic-structured-clone": "0.0.2",
        "setimmediate": "1.0.4"
      },
      "devDependencies": {
        "browserify": "13.0.0",
        "eslint": "0.20.0",
        "mocha": "2.4.5",
        "node-qunit-phantomjs": "1.3.1",
        "qunitjs": "1.22.0"
      },
      "gitHead": "3fc35ba66f1b8df00e22708ea88e31ea95a53b9b",
      "_id": "fake-indexeddb@1.0.6",
      "_shasum": "3f76b37f6202c7bf6a029784c75ab0d6f3f5c061",
      "_from": ".",
      "_npmVersion": "2.15.1",
      "_nodeVersion": "4.4.3",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "3f76b37f6202c7bf6a029784c75ab0d6f3f5c061",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.6.tgz",
        "integrity": "sha512-BghXhBSIlIBP23lKJIze8I6uuUyNFTMYLvnvMp+UlIn9MZo7WOakiIKRm7KmLrGLTpVYzZ5QLQ6PUeZDKcXYdQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDkHgHp2WlfUQ2y7+XdBypT3Q8Zl7u5ncubDy7AOW44nQIhAJgiipSvJap45Nwv+Ujd0U1rKitqY7FwvLq4MiFhBwU8"
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-16-east.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-1.0.6.tgz_1460752600574_0.15043956297449768"
      },
      "directories": {}
    },
    "1.0.8": {
      "name": "fake-indexeddb",
      "version": "1.0.8",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "array.prototype.find": "1.0.0",
        "array.prototype.findindex": "1.0.0",
        "realistic-structured-clone": "0.0.2",
        "setimmediate": "1.0.4"
      },
      "devDependencies": {
        "browserify": "13.1.0",
        "eslint": "3.2.2",
        "mocha": "3.0.2",
        "node-qunit-phantomjs": "1.4.0",
        "qunitjs": "1.x"
      },
      "gitHead": "83f39d9e1684c9d74cf2256a4abd196a5bfe605c",
      "_id": "fake-indexeddb@1.0.8",
      "_shasum": "720b74917901b477d8c9bae0d756d7ce837c4bf7",
      "_from": ".",
      "_npmVersion": "3.10.5",
      "_nodeVersion": "6.3.0",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "720b74917901b477d8c9bae0d756d7ce837c4bf7",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.8.tgz",
        "integrity": "sha512-TXXITHR3eSfy3X9LpHCxkaLlkNWxYs3Kj6fr45jTq3IxXjddPtEiaUZ5zq4JuD82d7mkMsSj6y2CW5ON6Yiu0Q==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDc7bCrA1Q1yiDWjBugQaGjnQbZH6P47HebHeemZmlG7AiEAsk20+vJ4elvM+SquPKa9a3CuL+WPDKaKswRgX/eayLw="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-16-east.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-1.0.8.tgz_1470701666800_0.39897398743778467"
      },
      "directories": {}
    },
    "1.0.9": {
      "name": "fake-indexeddb",
      "version": "1.0.9",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "array.prototype.find": "^1.0.0",
        "array.prototype.findindex": "^1.0.0",
        "realistic-structured-clone": "^0.0.3",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "browserify": "^14.0.0",
        "eslint": "^3.15.0",
        "mocha": "^3.2.0",
        "node-qunit-phantomjs": "^1.5.0",
        "qunitjs": "^1.23.1"
      },
      "gitHead": "2715fa9ef2e81410300884fbb775eb7c81bb9dcf",
      "_id": "fake-indexeddb@1.0.9",
      "_shasum": "057ca616203ed56180c1478ff9fed888fcadde19",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.9.4",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "057ca616203ed56180c1478ff9fed888fcadde19",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.9.tgz",
        "integrity": "sha512-w5rGdImirj2aqiwesrI9aksNR5i6w9Q7ao5/bpWc2UwSik0q6ym3VdzqX/kzNjba0uwoHlrAlz95rLDAked8SQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC2EZY5LaGikHtFnA2Dmj27Yomwx6gHFexCQAciz9oY6QIgHTCy4ODwWdU+tb9TgB6gop/g9U7Tgg2nUWF8xeM+x7A="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-1.0.9.tgz_1486222328524_0.7493137817364186"
      },
      "directories": {}
    },
    "1.0.10": {
      "name": "fake-indexeddb",
      "version": "1.0.10",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --timeout 5000 test/w3c test/fakeIndexedDB",
        "test": "npm run lint && npm run mocha && echo 'For additional indexedDBmock tests, open test/indexedDBmock/index.html in a web browser.'"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "array.prototype.find": "^1.0.0",
        "array.prototype.findindex": "^1.0.0",
        "realistic-structured-clone": "^1.0.0",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "browserify": "^14.0.0",
        "eslint": "^3.15.0",
        "mocha": "^3.2.0",
        "qunitjs": "^1.23.1"
      },
      "gitHead": "6359d89e19c96fa7f1ba84c327a542e2022aee97",
      "_id": "fake-indexeddb@1.0.10",
      "_shasum": "4ef8ca352100b9c5a11c127f09f9a2b0573f6c6e",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.9.4",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "4ef8ca352100b9c5a11c127f09f9a2b0573f6c6e",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.10.tgz",
        "integrity": "sha512-yZAu1in5sq50oDmJaZPBbcC7Lb/w2Z3S86AE16XvA+/hgFQbBQWrmAIUU1FyKEN6+2ZCL3OkQxoEh0TYjqpSMA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFV3sg2w/1eI0VhCyCkaWWVU+QMd+JyqKPk9QRDS7qTQAiBh69qxfF+UAyt6s9LvIJfaOnbLzED3rIVnf759voIAuw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-1.0.10.tgz_1486331653468_0.23863093345426023"
      },
      "directories": {}
    },
    "1.0.11": {
      "name": "fake-indexeddb",
      "version": "1.0.11",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "array.prototype.find": "^1.0.0",
        "array.prototype.findindex": "^1.0.0",
        "realistic-structured-clone": "^1.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "browserify": "^14.0.0",
        "eslint": "^3.15.0",
        "mocha": "^3.2.0",
        "node-qunit-phantomjs": "^1.5.0",
        "qunitjs": "^1.23.1"
      },
      "gitHead": "7cd397c1855b715e214a1120e35b65ef9484efb4",
      "_id": "fake-indexeddb@1.0.11",
      "_shasum": "2749c4521f5a212b46a747d561d13e26eaa4bf57",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.9.4",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "2749c4521f5a212b46a747d561d13e26eaa4bf57",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.11.tgz",
        "integrity": "sha512-jzXjo4nUjM2MJCiCzhv+LK3FBdqgp7ouuayj8v/xhdzrd1df4HmwxvEjeGeEJ669ezhAURLNaBvZCtCjZzbWPQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCxuTBw3GnoqZQzipWJzPTfWLGNKK6ELe/fSuS5NcHrDQIgInVf5xSiAaLCrcU86Y9oNEDRoi6bkxhTQ4sZYqW9JoY="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-1.0.11.tgz_1486425987076_0.8482882333919406"
      },
      "directories": {}
    },
    "1.0.12": {
      "name": "fake-indexeddb",
      "version": "1.0.12",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "index.js",
      "scripts": {
        "build": "browserify exports.js -o dist/fakeIndexedDB.js",
        "lint": "eslint exports.js index.js test lib",
        "mocha": "mocha --timeout 5000 test/w3c test/fakeIndexedDB",
        "qunit": "node-qunit-phantomjs ./test/indexedDBmock/index.html",
        "test": "npm run lint && npm run mocha && npm run qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "array.prototype.find": "^1.0.0",
        "array.prototype.findindex": "^1.0.0",
        "realistic-structured-clone": "^1.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "browserify": "^14.0.0",
        "eslint": "^3.15.0",
        "mocha": "^3.2.0",
        "node-qunit-phantomjs": "^1.5.0",
        "qunitjs": "^1.23.1"
      },
      "gitHead": "3ea1ca94576e7be34bff1affbcbb611542afa4c8",
      "_id": "fake-indexeddb@1.0.12",
      "_shasum": "ede1c117670fb969237b398a4e85b5c89a40acb2",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.10.1",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "ede1c117670fb969237b398a4e85b5c89a40acb2",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-1.0.12.tgz",
        "integrity": "sha512-TeG+sqcyYjKsnZQUI0Ec5ReTmcwdByLdtwRLFU6x8DP0JL1X6Ns4FBzl80TeaGFWM3uzVGAKY0C3HwKA46k8aw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDaU9DXTHsPKj9dDDF1Lm8HNGphigVTzWBldLeO4b/vbgIgVXJjm9QFXUdbM8Xlv/FxiYNhAMJ7ScHCy8jEIXyWZjs="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-1.0.12.tgz_1493091216507_0.7409784465562552"
      },
      "directories": {}
    },
    "2.0.0": {
      "name": "fake-indexeddb",
      "version": "2.0.0",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "files": [
        "build",
        "lib"
      ],
      "dependencies": {
        "realistic-structured-clone": "^1.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.13",
        "babel-polyfill": "^6.23.0",
        "browserify": "^14.0.0",
        "mocha": "^3.2.0",
        "node-qunit-phantomjs": "^1.5.0",
        "qunitjs": "^1.23.1",
        "semver": "^5.3.0",
        "tslint": "^5.1.0",
        "typescript": "^2.3.1"
      },
      "gitHead": "6fbd7aef5c8f70f2664d9a2caf24c071ed002107",
      "_id": "fake-indexeddb@2.0.0",
      "_shasum": "fc8f67d11451f404b896dc6713ce8d9225d30f4d",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.10.1",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "fc8f67d11451f404b896dc6713ce8d9225d30f4d",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-2.0.0.tgz",
        "integrity": "sha512-BcQpT3Z20Wb+YpHkeRnZjdjZPzYAxnCRmJI8mgT7RqrEqj+gVtVi6L27qpydUQKToSK/OesLNLydufYB3Ttr1w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCvDqNfA6rLTuL8FNgZO6rnf9HGse1uS6J9FGmx9WhZ4gIgW8EDjqbEkjN56FaI2lE913Y3k4jy5AvrnKBsv01bA3M="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-2.0.0.tgz_1493473384513_0.5434820242226124"
      },
      "directories": {}
    },
    "2.0.1": {
      "name": "fake-indexeddb",
      "version": "2.0.1",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "files": [
        "build",
        "lib"
      ],
      "dependencies": {
        "realistic-structured-clone": "^1.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.13",
        "babel-polyfill": "^6.23.0",
        "browserify": "^14.0.0",
        "mocha": "^3.2.0",
        "node-qunit-phantomjs": "^1.5.0",
        "qunitjs": "^1.23.1",
        "semver": "^5.3.0",
        "tslint": "^5.1.0",
        "typescript": "^2.3.1"
      },
      "gitHead": "b469b75cce7b8d98ba482940cd0efd2a37d0f7ef",
      "_id": "fake-indexeddb@2.0.1",
      "_shasum": "4f5f078b40a5d33991d6e12c1fcf27780de0234b",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.10.1",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "4f5f078b40a5d33991d6e12c1fcf27780de0234b",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-2.0.1.tgz",
        "integrity": "sha512-p8zZkeGYqt0qfeREuWuzz2KA5+F72KgA5Hm0S54hIeouadHIbXfBjyNPEIy9hW5YHO/m4Cxi5NdJXTGFNCniuA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD9kUZlD3PS9LysLG31K5W4tHD7X2H8FRH7ko87mDTtPwIgGZT0QxdCT5azQEv974qtA3KouuAHYVJtyhAtyYcNaRg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-2.0.1.tgz_1493503389040_0.09547970723360777"
      },
      "directories": {}
    },
    "2.0.2": {
      "name": "fake-indexeddb",
      "version": "2.0.2",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "files": [
        "build",
        "lib"
      ],
      "dependencies": {
        "core-js": "^2.4.1",
        "realistic-structured-clone": "^1.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.13",
        "browserify": "^14.0.0",
        "mocha": "^3.2.0",
        "node-qunit-phantomjs": "^1.5.0",
        "qunitjs": "^1.23.1",
        "semver": "^5.3.0",
        "tslint": "^5.1.0",
        "typescript": "^2.3.1"
      },
      "gitHead": "9f5963ac24e93ed59bde4fd5c6526e35b02cbeee",
      "_id": "fake-indexeddb@2.0.2",
      "_shasum": "6c31db603fcee0ab6da030a6c907657717556264",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.10.1",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "6c31db603fcee0ab6da030a6c907657717556264",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-2.0.2.tgz",
        "integrity": "sha512-onX1BS0w+neTXO4j/7ZxfH2rLRiC+V7935Jz0NHpOQttV1hTkT7f5MkcZcz+Lc/FG6qDuAmyxFkKA8uC/1C6lg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICWtdyjAZC9nmtkCvy7pbnI1aHjQ6dySHcmGMTUwTzMBAiB/JFmB+1JqqyYwsvfOpjgNKCNZMR6/ngMp+LpUf72zaQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-2.0.2.tgz_1493673712246_0.4354236531071365"
      },
      "directories": {}
    },
    "2.0.3": {
      "name": "fake-indexeddb",
      "version": "2.0.3",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "files": [
        "build",
        "lib"
      ],
      "dependencies": {
        "core-js": "^2.4.1",
        "realistic-structured-clone": "^1.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.13",
        "browserify": "^14.0.0",
        "mocha": "^3.2.0",
        "node-qunit-phantomjs": "^1.5.0",
        "qunitjs": "^1.23.1",
        "semver": "^5.3.0",
        "tslint": "^5.1.0",
        "typescript": "^2.3.1"
      },
      "gitHead": "d7cd711a71dbcc2cf33ed8e682f257a4ec2505da",
      "_id": "fake-indexeddb@2.0.3",
      "_shasum": "6319b0cc16b1c6343f462d5cf95291cb11a4b58b",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.10.1",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "6319b0cc16b1c6343f462d5cf95291cb11a4b58b",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-2.0.3.tgz",
        "integrity": "sha512-swdiyBSd/2ioP+0JzRocVtfjecCsY4i2wZ2qw/qtzaHHgScKcxdj9SjwteG3vPet4lR7biRur1tjrgVxqM42OA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDA63gdWvTs61S1OFczAi3zgitl2//TUwa1euxDxke2wAIhALjDh3PqDIvCW6tKF5FHhxziRlBkyQWr1GLCvBD7cRaV"
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/fake-indexeddb-2.0.3.tgz_1494380048122_0.23460051231086254"
      },
      "directories": {}
    },
    "2.0.4": {
      "name": "fake-indexeddb",
      "version": "2.0.4",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "files": [
        "build",
        "lib"
      ],
      "dependencies": {
        "core-js": "^2.4.1",
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^2.2.41",
        "@types/node": "^9.4.6",
        "browserify": "^16.1.0",
        "mocha": "^5.0.1",
        "node-qunit-phantomjs": "^1.5.0",
        "qunitjs": "^1.23.1",
        "semver": "^5.3.0",
        "tslint": "^5.1.0",
        "typescript": "^2.3.1"
      },
      "gitHead": "edd25931240a378fb5fb2ad6941fcd87f407c21a",
      "_id": "fake-indexeddb@2.0.4",
      "_shasum": "401715deb7fc9501866c9f329bde7742599e2de8",
      "_from": ".",
      "_npmVersion": "3.10.10",
      "_nodeVersion": "6.13.0",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "shasum": "401715deb7fc9501866c9f329bde7742599e2de8",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-2.0.4.tgz",
        "fileCount": 47,
        "unpackedSize": 172751,
        "integrity": "sha512-mwNjOLRbgLrCOiGKDaHbWSqaiVgpo20KmHgEIL6qLtwvt68mYWHOFnSMSDANcqcmw22Hh0wAJsyXbQPnwk+EuQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEvY6ZpfyS7u0JtUmIHgPHzLB7CzjJblVeg6wPQU+b1NAiBQUogUcEiuwQjkyWC8YZGVFDYP6wuHSahgZSq2xcXbKw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_2.0.4_1519344147208_0.39524902952128405"
      },
      "_hasShrinkwrap": false
    },
    "2.0.5": {
      "name": "fake-indexeddb",
      "version": "2.0.5",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "core-js": "^2.4.1",
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.5",
        "@types/node": "^10.11.7",
        "browserify": "^16.2.3",
        "husky": "^1.1.2",
        "lint-staged": "^7.3.0",
        "mocha": "^5.2.0",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.14.3",
        "qunitjs": "^1.23.1",
        "semver": "^5.6.0",
        "tslint": "^5.11.0",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "^3.1.3"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "7a654108c5378e39500d3d5bb5542cd724afff3a",
      "_id": "fake-indexeddb@2.0.5",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.1",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "integrity": "sha512-C68kh3Ec3L6JZaTpRm6+TjY5AOs4bwtEOXazzb6733UL0F0jLR7j939e+TdlUmJdxumFQmXIzFhyLu5ZifQc5w==",
        "shasum": "829685232f79bcb9d182b8dd33934e9e5657ed18",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-2.0.5.tgz",
        "fileCount": 47,
        "unpackedSize": 175833,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXQEeCRA9TVsSAnZWagAABvUQAJtwBIfPpUo9yzX8s/md\nMJB21G72HY3H/16ZTBmtUQ9sZGQQUesQ2hVoe8UzknbEsrsiohKU2ZttJQ67\noGvbFOaeFWbNqeD82iiOzzg2C6PVqDdSsutsNdPniULV8CqEQnTn1w5BAi5o\nkbOacQLlqhGpC5LUkbcuNIsEnOWxKXDvmH4Fpx3+ZVDiypJHvmlEFVDk6mzA\nYJ+QWZ4me6MlEaytLNi/fiYb3u0piGJAsrRcwWbQIDnpOjJmtZYO48cxlgOW\nc3cVRLQy7iIq9UvmExFoXJaqk1Wet119QNG+QBDscI8FbsQb5JqwY8t1JOnL\ns4q4Hp2zwQTPp634nZ/o4rZPeYrKRbg9JSnU0d66NbxH9v7u6SbJ6rvFHMVI\nF41bG+Ik9Y1JpthXpsXlpV/G6uRa+zIc2zl7mTdBMDnfo+GUR/rEAjLxk+TC\n2G8cfE66LoLzSpAGu1o20mReGj6XFGDomzFzpmemTuk8MTyBpG/MMgD91DEy\nLyjcF78G1QosDncnqD18XcYFkvkL92WGDGnRDXo1cCNTI7wONS2G0kAxWEOb\nQmlTo/yhLuvPrmzX254qNMcYZcJmde2Q6emtYub8FHVaTBcQwtnvdarA9nwR\n6BHwFtLVJssXu2bgsUEC6+Oxq4zrbe/VIfUcW0eOuQ8Zds/FWpWSSLX6kLiu\n3RSE\r\n=Uwl3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGNk7EbSSlr3MppzTWIAEL0danCl2t8jcL18O7Tgg4iRAiB0qr3Lmx+iS5ACPka3D4IlIl+BZBd+V8FxKX4e7dRsKA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_2.0.5_1549599005873_0.5989680037235239"
      },
      "_hasShrinkwrap": false
    },
    "2.0.6": {
      "name": "fake-indexeddb",
      "version": "2.0.6",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "core-js": "^2.4.1",
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.5",
        "@types/node": "^10.11.7",
        "browserify": "^16.2.3",
        "glob": "^7.1.3",
        "husky": "^1.1.2",
        "lint-staged": "^7.3.0",
        "mocha": "^5.2.0",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.14.3",
        "qunitjs": "^1.23.1",
        "semver": "^5.6.0",
        "tslint": "^5.11.0",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "^3.1.3"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "316e909cf53b79ff569fee11e580cc01a758af31",
      "_id": "fake-indexeddb@2.0.6",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.3",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "integrity": "sha512-xoS/fCfCM/o+KoVdsoSUlkKhJHNUJakWER+T8eVfQ/eBNe5/hGVVvbL6bXou1leYU6hxMheA72tUiYzg/VSKaA==",
        "shasum": "0e96ccab65eda769bac62019361d55e66470c7d8",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-2.0.6.tgz",
        "fileCount": 47,
        "unpackedSize": 176246,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcitQACRA9TVsSAnZWagAA7SwP/i1AIeClGLs+2jTX0DHb\nXc2wBkZ73nIyP1NPpu2ygpbSy6WktAe3wcYgGKJ31fzSLg2D7plewODRHVyT\nqUDXlsmPA95FXr0IA7vcjBMU6oHMh073dsTcYQFHvq3OW5i3LAdTvN9ZKnk3\nUm0pz4socNddlkhbZIHygqL88OalTFV40VvRl0CUt7L9lhpKjkROxKCqOzNi\njNzfdF3cAzPWAKkA/iIkw98NN3aXoHM7KxF0hYf3vUTI+vsFl05NhKqDS7c2\nwqRwCALEZXqX4VENK5PaASgr5OANR1029CLOqV8ju2dmBqGZw/px7RWtx1WQ\ng8306zFln/bIAvDkN43E2rJUZ1yh5gt6A1/5TrU3sQWhV2UpVqW7ZSc2aJIn\nKeV0eXfvBQg0atlGX/PRXOV7IcfCl1BLZP0LK4oUK7YCMgqys8HY2wpTOLQx\nxBhKtZGM0H2+mRUZ01ZVbZuXH5+eL/e9YQN0WY2t4CQhHeMHthnw6O4aiwG0\nbPRXiNcQX0FtGctfhvLwP/8QaOJ7MosIMsbqKpzNpaKx5DOTo8yTOXafunge\nM1pcD+1AWhbm7yEZtb4261gSa1a7ixf37qg/kYMgmrg/fgPllUAZr8ns2BME\nGU+V5tLPB4uuPTOjf49Y4Mn5bvGmwql87iulgmiDJebF6gJI0DTksA7yWGiX\nDs8P\r\n=yn/1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIA7Vqc/n8agUnFErmpEH6pWG31eZioeO0DkenoprqTqtAiEAk0bVqhudeVZEBMftumXAzx9wLfS1cLGEj/vhM7Xz7tg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_2.0.6_1552602111663_0.32270758145909473"
      },
      "_hasShrinkwrap": false
    },
    "2.1.0": {
      "name": "fake-indexeddb",
      "version": "2.1.0",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "core-js": "^2.4.1",
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.6",
        "@types/node": "^11.11.3",
        "browserify": "^16.2.3",
        "glob": "^7.1.3",
        "husky": "^1.1.2",
        "lint-staged": "^8.1.5",
        "mocha": "^6.0.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.14.3",
        "qunitjs": "^1.23.1",
        "semver": "^5.6.0",
        "tslint": "^5.11.0",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.3.3333"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "0ff2d8068eb2291288674fe774f39045259b240b",
      "_id": "fake-indexeddb@2.1.0",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.3",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "integrity": "sha512-GDu/XA/znG1Z6E1rnf72fiqCG/YzhKShngrHtx8+Ij5h9uwqSISs7MPu0ZqAqhyNTl0uGwJhda0aX8ouwej1zw==",
        "shasum": "418780fff50b61540fa4fb6effe2e11528aa9dba",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-2.1.0.tgz",
        "fileCount": 47,
        "unpackedSize": 178579,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJckBL3CRA9TVsSAnZWagAAY1IP/27nvNhxVFhB0drtGrfJ\nolbA72VPEVEE4mOvGpxaZRYUInyL0JnJkfW60hm6G/JDorDMfUls17mlQf4y\n7c+EA5EndueTpbM9F1IvL/cG8AU0E15//NuljZ51EKob+7YgmzVtUSh1uXww\n0lClQkBDfwdmFv1eahsAkfOzPGgbjzg3d5ZJH2i4K5GLRNfOIFj2ChooGepJ\nEHhI6B951Y7NBL3ypTmgaji3/LWli2TxUHECV39NiEQ72yhhYh7X7CpNnG8F\nDX3suFBj1qdqgV6+mhhDtt+1BjhvMvK/0nIrLxl8TN/zTrcJkfLdT4sWi7ml\nze0hCh0UkAutfoNez/Escg/qzVyNfLn7emTrYzosNlo3WAf+aBFBSVaHzC48\nMPyjGSSAq8yeyNWYaU+xn7LO8QCM3rCIl6BKC38+F1RKtzzw50afCpxH9tih\nDKWXJ6pONNvxCyN0fEGYx1/4F4itnIvHIe98/CW6ifJSrag4RqaTChhbqg7Z\nkSRvfMvCPpefZBxFpsYlLOw14TFq8/UKnvBaMk1Jszo0yfEdsFvwYCRW4O63\n4b3txjSlhFKzrFt1c+8Ai9rFPKQEKJk9PC5h14VdNSIe/pZAjZOvWEMT5qBM\nvnX6XNkCy0njqsdbxIDVru/uKoySAZmPx1QCxr3U9uYvYaU5zQ9NrA0ri8Hs\n3Qve\r\n=P9Vq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHbr/+/C7h26vHZbHI67fOJFitKuTdPM/LqrO8MsLieqAiAZdNFW5ASOGFrBXNcudM6J+TtF245XIGE5L/eHDXFSJQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_2.1.0_1552945910370_0.7748144952820961"
      },
      "_hasShrinkwrap": false
    },
    "2.1.1": {
      "name": "fake-indexeddb",
      "version": "2.1.1",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "core-js": "^2.4.1",
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.6",
        "@types/node": "^11.11.3",
        "browserify": "^16.2.3",
        "glob": "^7.1.3",
        "husky": "^1.1.2",
        "lint-staged": "^8.1.5",
        "mocha": "^6.0.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.14.3",
        "qunitjs": "^1.23.1",
        "semver": "^5.6.0",
        "tslint": "^5.11.0",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.3.3333"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "b9854e0d41362fb15c877ab37374926217c1d439",
      "_id": "fake-indexeddb@2.1.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.3",
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "dist": {
        "integrity": "sha512-di5PzbH6/gleD4qcpxT1IDtNNMTKuEs+C2KeJDP1e4mwP2L0UY+vPcTkCdIGq8IcaUUph6IkCrUZJvtpFUdhfg==",
        "shasum": "0a72a53f3844ac76320d15e3f15860d4ce19f0ce",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-2.1.1.tgz",
        "fileCount": 47,
        "unpackedSize": 178668,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc+Bl5CRA9TVsSAnZWagAA2WwP/0VqGwlWumjuThY8YDuM\nXGxTaotXmjk5gc5daOJ/mYAkP1r4eVIoK5Uf6OLBOHGPbpgHbLg0+QW2sQuC\nUQeT3O1DFhqRWPkiUTEtNDtsY81m4nPH7RZ4NezYZMP6/ZAL/eJyMs+xRmOe\nT3xwbAFV0hIHedfVejNJvvWmT3HdC7xMMH653Y2D0PrT/NllmY/PTe3kyY7/\nSdN2B12OjRRGRXDeU3PhNDGncTTEy8pf5VHWgIg6Z/v3/o0dsDJz8x4I3zd5\n4dfx7IGFOR2Yl6mVvrdJKl88xYYUZwczDcU5lY09XaJ9JFcRuZsaCvwxYFa6\ncPnUnsra3Yvc6vypfrRTGSUriTdkPmCbKzWxAmqjaKgVynJ5NZ4vwZtiHv1J\n8nJWE2X7x17oY4vup54Psqznink8q0PeLH9lO3tmlKdOdlMXydzAUwSYJvSD\nB9CZLIJkvAFDcH+nzQGbTXCPIwLpXwymw/BN1v2VXvjKGzmEOGWCJcVmI69P\nmn1EHdeHijLIdHV8OyCpy6FC/FvgNwoenlyoH3FjtkAxdu9rvG4EpSEQLFzb\nVzS4ciBu2qzwvm9FqkhOBFqJrqEgikSrDKybkK6wN1KiBmoZHAX9Du7bYHgl\n7GymKvnF9uDadsv6j0WVAvAoOcEtQpoMIh6xLC0NjFdeIpkwLHGVV75dhuLJ\na+0Y\r\n=UvVR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDxRuGGcQiVa09OgyivuCaTzwwsVShLWJYpKnpd6jd91QIgLisBBMMNcTaJfliZH7GwRBv8FOEH6CtX6JABSe6oxi4="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_2.1.1_1559763320399_0.587136816809275"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0": {
      "name": "fake-indexeddb",
      "version": "3.0.0",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublish": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "2e8642326528429f8f3ab221267270773de1d661",
      "_id": "fake-indexeddb@3.0.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.11.3",
      "dist": {
        "integrity": "sha512-VrnV9dJWlVWvd8hp9MMR+JS4RLC4ZmToSkuCg91ZwpYE5mSODb3n5VEaV62Hf3AusnbrPfwQhukU+rGZm5W8PQ==",
        "shasum": "1bd0ffce41b0f433409df301d334d8fd7d77da27",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.0.0.tgz",
        "fileCount": 47,
        "unpackedSize": 181340,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdzuUKCRA9TVsSAnZWagAAXksP/0yZWD5aJgG5rjBmDCfr\nJ50bUn8ePJdYnvjbU4XPRc9XmSdq7TetJYgtLUEXGmdPpy8iMCu90DieubxL\nvydAYWWAEVWEaxk1GIdcRGWar17MCAckeqgeqX3teuaHWzUmCozWn08wUWsK\nSabgXUJ6S9fuC4ogzOpY2O3+gqLKPcjtzSPUUez6N5Rrf8/qO6GUF8UpDHtz\nRWddsMpEvxtK90cZ7rWaZoroKLHR8AiZPGFp+l1ClElM/M/9TXW/pm7MDaII\nHe8+AdpePvCw5MPU2ZRZv+skQ5RqwbneKaocpjB68AC0pZjAJr4ok0OC4l4e\nMgQoqtGTQ9UdK7EjxyJaqxm/4SJJsPrQ7F78EsAC+ED+LQYS9rV7i5SQ1CGM\n9vDh5KGVPliseiK0Cv93+uLvINuh0oFLA0UG85P6ilO4C55tPYl8DGvZNv/e\nSlIJCDYRoySwovuLt/tXIV47Vn1cT0dDrdYleRwTO5zCu2r6HFDSTSrvb6bn\n4SLBXmVNtesu9p4VaTR7rrotT+P7UiXU8eXgut5OPH60iF3OHXmcGDhp1FnZ\nXl2+EEPU1yK28/1ZdOJ0ja2cNO5x92uaN3OqUiKBQjLD1q93+LPm1udepKq0\nTbpk43CiA9OrcOJFI8YKY3BZg2wvNOvgohQLIjYlGPYYCkEDraRXbzQ75PdU\nntj1\r\n=GVLY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCljDYoKza0pM1fILiOzh++g0uKI9GmNZuiZT0m7ya2swIhAPmFkh6SHaTQ/adjYahsNiiAdc4G0Vk7rbpvQGEg4i4Y"
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.0.0_1573840138246_0.8395491113068421"
      },
      "_hasShrinkwrap": false
    },
    "3.0.1": {
      "name": "fake-indexeddb",
      "version": "3.0.1",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "795e25b8834b2963c829ac94ada8336c458b9414",
      "_id": "fake-indexeddb@3.0.1",
      "_nodeVersion": "14.3.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-F+qD/G91cvuD/ItaTx3wUaGTp0hMV6p5neZswhUvnisMARdG7cZCc+7L6zzx2nELSAdK3G5WGVjyb619WdcZZA==",
        "shasum": "42e478f9faa9a5a358dcb0a6392d979d7458c427",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.0.1.tgz",
        "fileCount": 47,
        "unpackedSize": 182132,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJezB3fCRA9TVsSAnZWagAAfo4P/0NZavViPogA0mRouooU\nMs87rF4jCU9RpbD8PArCQ1r7hTlQ8O1bZLNoZ96vXs+JwHkkHq6YvI5zcp7u\ncqK7NkCY+0IFKB4mLep8EN81dPWwDNsB1okwbEDXJDB7DuCeReTWJh+uWtqx\n4mTQ32Ut6FGcst28x/j+cOeA3sGx5NWdGBACRYWIOjvLvDQFDD2420Licjdx\ncn2qhiw/FwjFpYSu+x+OjGDEInhbusxntyhAhAlJRjaRvXX4TLc5e+EWtWWE\nSwD1Nh9e1kvxnMBzFNrS3JBJmNDb22rJmX6T9JctyAbbUVZIE5sy1oLTBDtL\n2k141XAaFADjNmoNeaMrCve2PUB7+GGvaQjT5OdJBmfFk8rKFKm7M/8gyN1H\nPL0Yh7hBhXxWdXGBtT5Pr/Wg/w6aONSbNCscbSAJX4lZHrfDHvGMrGGSXCJw\nLGmih+LlF+HvZhU+44rrL+Ly9MCEGOTHutfP+TGHI8AxkjllCwohJ9zAa4Gv\n8ZwfBUZRUP/aazn5jLJC5hTo/TlQy/YiN4UpJroeiNKfXoIkJcRWR5RL7eoK\nY7KX24osyliKKsFgqN9DqSHAdROGDbnDKyrv9mALEQFUqHl87CY/NmrFRKYv\nJyNlyhSG3sPBMXn1ACckp70T0GB0fhXkwGUQ5tiI93ZyABv7HmhxOhKK5p6/\nLwX7\r\n=vLjm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIENAxSaGf32LbxVBNIvcP14KH2NbZHS0c/C3vd4u58mtAiEArwPKM6H6yjAoTTNU3Hdy0TPlbsml4xMqjtT42kvjO6U="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.0.1_1590435294516_0.8371512495161533"
      },
      "_hasShrinkwrap": false
    },
    "3.0.2": {
      "name": "fake-indexeddb",
      "version": "3.0.2",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "bf91d5f5cbeec2da627986f188f59c3cde85dbfd",
      "_id": "fake-indexeddb@3.0.2",
      "_nodeVersion": "14.4.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-m1OBz7GIbOG8ETsmlJPlCU/GP+HR7AsWvBJDH1qtDg1o4sbBrOtNduAGweSNwsoN1uKGHedmRMEWcVIr2y7HOQ==",
        "shasum": "53bdef4c6b71b605b53bad1a9f649c4812031210",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.0.2.tgz",
        "fileCount": 47,
        "unpackedSize": 182557,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4X4gCRA9TVsSAnZWagAA9K4P/24GssZvPKAakrQroU4r\nWXyxhkO539FIohE9DtRqLRODiw10roHLmu3x1342SYTGc0zPlC+pGWA7do+6\n5q6T9dSdpdsUcE/xxL7LsoOGHhbFD2ZnASkUYPRSD70CBSKbrO2iJaLIR56T\n8tu9Ny0aHL0+oH1qvFm3/YTiVsDOO7rqce51dliYc+mHf72o7c0OYrNmBd/c\nTuA6Z6smYHHGc7Ufp6wXZSZn75BlnXpFZRVMz4IVRL3jGhDAJ0oIP8xWcths\nAeCR3ozRUqBKo0pJu9IteXiSLq0OEjGrXvfKvvzcDJgOa6ExZhaf8784h3tm\nWR/7u0A4HuyEDoWSsaIqOklwq4L/cD7RCL5kEhvbf/6mRzGUImvX9WqZggIN\nM9XyDbB6uuPP2r9jEaUSmztW5WtLyKWibbR6KBqrgf6tXW9u+NdI7Ongwj9b\nMBreb9y+MTKyfxbaqVp2QmjofCbBzrFwTKPJYVThc3VWE4BCH1a+eVYJYNM1\n8hsz8L1Zkv2D+yz5y8sBC6/UC/EQ8QGDXrcvfMTj1QdXvSmPeP7Q9MyTXyXJ\nwyxjpG7mpOU9bDK8wnnJN42r9XZ+Eb7iep41yvCQfr2deWFJRx56JZtC0y/p\nDZp3mEP8Vy5Q0GWrceDRPaXZ6f0AiEeJ+ArHr8OdbhIg4M4D2O1/vXWR1QJQ\nGWoP\r\n=4Tfj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBtE+FhDtSz4o7VMVgKexasS9+kaLJzlA1Lq5gkdaEbPAiBFdIVltbjemOLBLc/XPYRnJmxAhvnyARRgYmZIehxWzg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.0.2_1591836191919_0.2229332652649847"
      },
      "_hasShrinkwrap": false
    },
    "3.1.0": {
      "name": "fake-indexeddb",
      "version": "3.1.0",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "8dbb5067608b96c29e7007a82575979d62749c54",
      "_id": "fake-indexeddb@3.1.0",
      "_nodeVersion": "14.5.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-wpAlOALUie3nlxwO5yCulEm1Wv+xAYG71fZ1Ygpted26OrRKxtitlpJQbPGNW38TvL3nL9GKcTmFq7GlZcGn+A==",
        "shasum": "2a84c8c67de200b398fc9430b17fcf6f73764d2d",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.1.0.tgz",
        "fileCount": 48,
        "unpackedSize": 184832,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe/nOACRA9TVsSAnZWagAA9HIP/jXpS0M+7DErt4MvOvdD\nVFHH+KLA7HrDnbZjzeusNJnBV1oZ8HFJ714UQ8gZAqqj+6sBOljU/vlhgnPs\nGERepxDbluknQ/dFQjLgj82X45iL0/URhZ6mJ00lt82975drxjgmRdaOGx53\n3JXqo5KcRWKjC0TFOParFcvYzzb3JdnMcjexQQcTsnDXIQizxYZaZt2l3JRj\n4Nmu/nLRMDlKSzNfUVugICCIByyWsbQt+gRX9+kEaz+dzs+EhWG45l1n1sdH\nUDYpXCrCqb9zYKGbmgS5FAf2cJX2qAY3nDhm5ThruCPCoYqnmNvmXIUXyxaH\n3KlpOSw0L5pAtL6LrtsUzHrSb7Pj8Xq1yAGqJZoeG8tCTJB9Uzd96LTies7X\nONrFLDum9crBOt+eS4o/7aiPu2yJSZoHjsUQo7HnC3vXYoMcPjB+ryRPucKR\nvoQVmo9zjwTLu5H7nsGQuZOJEyhXDSGUDw6Y3GNG/LMUKbce5IkIgG8kc1/D\nMdXmsMo8pCt2DA/GBiYr0/SKtupyZjfOkfc7kEjGB/OvDz7bN7F5Fa68gCVu\nPYXZWhDT5iI/HvKU6AcuZVI+3xwv9FGY+aH0/AV+x0653kMSffqwICuMqgGb\n2ZUYJN+OnYDDxUTbCRE2p45iWmUXAjsaZEK5KVL+qAjRI5VcxjRi3M/pH33I\nTU5Y\r\n=xN5c\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICgndD0liNo77ufkCK5V15jPaJeveRAXB4OtbrhOF1BMAiA1fOX7KUEwrvNa98QSdT0MHEregnNTAlN9jo8GQwfTaQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.1.0_1593734016332_0.9964592004109405"
      },
      "_hasShrinkwrap": false
    },
    "3.1.1": {
      "name": "fake-indexeddb",
      "version": "3.1.1",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "b808a62e01fe2614c7abf371df5a806fedaaf2a1",
      "_id": "fake-indexeddb@3.1.1",
      "_nodeVersion": "14.5.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-y3hsVRLVdHb34bG0DcqfgFJ2jYxZ6Jc/Q82QPB/QvUr48ei+WoNG7Ph03J0r5S9dfntwgABLlOpHjn/6WzQA8A==",
        "shasum": "801f0b4c1e096084727014cc24e97f169ffe41c0",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.1.1.tgz",
        "fileCount": 48,
        "unpackedSize": 185061,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfD6R9CRA9TVsSAnZWagAAJPIP/2ObrJPDHQyreHGLZciL\nTqywC3LmMVsoYYUxaWSUkZ6k9+GQZne9VUYnFnw9CAwOuAwVHizcCM95b7ZZ\npGaagdUQnzuALB8U/0z2raK7Xd3HldP3DV6IKCeqRxfTY57ceHcK6IRib6G3\nbQPCEgO36lS/6winZWiv56yD3maSYJ1c5KFvZiVDuTzxx5PUiOx9RVZq6xMw\n4vWbf1TjjVzu+EtXHGka+bwuVca6GtTNl2kiKDK0gsX3swSszs4CE18EPOwL\nzGCB3sVVWdzSZmy+zbvBLlb2BSAdKAnZFbZ6cdJ3x4GeoLCH4sQLti7V14MB\n3WdJWRVqX701CHxpuy4VKIhdclGxBLP3b+0SCgtWdGB4RxDhygA3zW2EG4d+\nC+zMkbTWwbi8+zGSM/jMigI91HGP06OCqP/xv+3eSX5UkpUjjwsOh3vTyO+B\nvBuDTiqST3B6kg1o+Bf3Ev/2Nb8Gsba71nRZ5frSeUt7sPDZWfaIA8mKyZeJ\ngIoL0x3+DbLWlH5n44PuE4fFO+iZ5wNlvH2qdodqkyROkvWYzmkK5gqx/i6Y\nD6AysCtNf9hz/6OR3RBioh2nNZ/rFkAzrqgR5lbCymmrtHUpUYCHTO1LIBn7\nGjRN4vfnyG6Hyvl1W3Lxk3G4U0LFA+v1ZdrqFzz5ybudIqC0rTNMIVxAUaHj\nR224\r\n=1++H\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEMCH19eq8MT7wc8Z7xcPQoN/Zem5PEaCuC6xkkTF5CCTRcCIDB8FI62+Pp5/VE0lqwL3d+JD67RIiTuo4KPJFyjwZ8D"
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.1.1_1594860669185_0.5793576046799034"
      },
      "_hasShrinkwrap": false
    },
    "3.1.2": {
      "name": "fake-indexeddb",
      "version": "3.1.2",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "4a8ceba3aa71008d5660f852e2088ca9a6ccdf01",
      "_id": "fake-indexeddb@3.1.2",
      "_nodeVersion": "14.5.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-W60eRBrE8r9o/EePyyUc63sr2I/MI9p3zVwLlC1WI1xdmQVqqM6+wec9KDWDz2EZyvJKhrDvy3cGC6hK8L1pfg==",
        "shasum": "8073a12ed3b254f7afc064f3cc2629f0110a5303",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.1.2.tgz",
        "fileCount": 48,
        "unpackedSize": 185327,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfF66gCRA9TVsSAnZWagAAh8gQAJVDOd4/X6pG3xenBb+o\nKUe6EXInXugjba/Iu5/1K9GNOnkUVPXtrp+hNcJOqO/SFR4+mmUebAImFiQ1\nPOQLJeo8jRChjI8sxhWWCsdBN2Mh3zc6fGW4pYjh8BjteieHWVy0JCbYtdMN\nj+kr70q48g53R0x4EIAwx1kYwph80P0J9rG5ruhpFkU68VjOWu5Huq1M7NFG\nr2bENjC5x/AkBLwykE0MxCvJWP/HZKw6I6QvewtPFbih1tmGIt209kc6LEJq\nij0NOT4ncxX/8l6KtbohiayYzdMn4MuktlWRWWI4cT01TFNaXYTmsBR/shFm\nwS4ztjaKs5zwBoLCKg0ARipAti5RDIPYOBAg7oSUqyZfwLmSkFln5QKUyaDD\nSXxAkLtG7eLZON1nmRO3fUpt7oTwznHgWnDLoDLhrnnIgh0YHqzZKk2BMzr1\nXDKU7gD0d4mtuSL5ecUMwFM6klYRvH2B4XDiMM9N7K8JST2FGantD88tMmsU\nY4pLRq+9HL+AJlDB0UFhiDOOJcr0wQ/qB4C/cSEzKVzhfosvu5MWxi+3yZL6\n5O+JnFzs9b+tnwxtbnF6FjIlJi2nnKt51b6XyO2PeZHMcXZNCo/S4ml6N9xv\nK5ZGU2765wDqDDaAjcakKVz0WKkhsF628yWBgsp5t9dwCRUHIM/Ikkr+z/9V\naTp3\r\n=q0Ai\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQChEWK+IkzLc2jq+H/wkTreUhAGgDZ43aWKnHrzjUBRAAIhANfSOm4v8svFKvJybnGI1xMmROw1qCg2eHRd0ulu3XYS"
          }
        ]
      },
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.1.2_1595387552330_0.7436180044969112"
      },
      "_hasShrinkwrap": false
    },
    "3.1.3": {
      "name": "fake-indexeddb",
      "version": "3.1.3",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "5aa05c2ec6422acd23e91e65312528d7773ff432",
      "_id": "fake-indexeddb@3.1.3",
      "_nodeVersion": "16.3.0",
      "_npmVersion": "7.15.1",
      "dist": {
        "integrity": "sha512-kpWYPIUGmxW8Q7xG7ampGL63fU/kYNukrIyy9KFj3+KVlFbE/SmvWebzWXBiCMeR0cPK6ufDoGC7MFkPhPLH9w==",
        "shasum": "76d59146a6b994b9bb50ac9949cbd96ad6cca760",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.1.3.tgz",
        "fileCount": 47,
        "unpackedSize": 182446,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgzomyCRA9TVsSAnZWagAA4t4P/3Vi2kIkVXeN3Yuc9XaM\nvwlkKUGmeJe0xrQsrQ7rvX6Z+gOz4lWUEHPDLXXf2hIIydv1P6Nu8U1h9uiM\n/ndbf9cPc71p1OZIcBQP9kHMXVavbpkCJf05mLaZ0N8b4qZTDdXh3Of3Gr3W\njZXQ+RGnK34j9HeO1Wwm9fy1XCEEKI9FfBYBRAH0SJBD0wbhYQBcMq2/U/KB\nPhkQmcyQvink1Vi/lPH5WTxTc7hkqjkuWtWBWAJTd7tPGUmrSfGB7K4hDNe7\n/QfZkxdtHsc0UHVcuiC3kFJj+NXLdO/UpKE4U7pq4UYYieGYlMMuYivGod+J\nDbR1v6+2ZE6/s3sI1FH/B7k/ImEqhKaA9jaqMW+dn3xUDhEMsy8DLNgZ3Dxw\n02kOmYKzo5t9pFwX36wSWZ9Kb+35pno2P17+hhl5GRBNHBDL7CeM3se3dQtC\nn1/JgJmYUr8pDchwOJ+nc0+HH8qetq3RXLpTbKXDBNLQlVs2jYpi8vL+4pEE\niwdBvf6nmQTp617dbTA0dNPpo8qiZNz9Wy3KA7h3v3HK7NZ2rVMz3X1t7Kt9\nQ1ArihGcsPpUuEu5ycndhodmNHlwtKzgPJoIPnli1t9nalgf0NVEn7U+rdGq\n0g+NNdimJsQ7cGIF/ejdZn5NM2NmRryfL3ipIqotKy4EABBg87IWMiqL3UUR\nXo1a\r\n=NZRP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEMCHz60BhkSGM9cRwlRtt5cCEP0YliD93lGhSwRDLOQUxYCIGDpy9v29caakD0Qt7a9iT2DieflcwDzNQtxSzTtbeGF"
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.1.3_1624148402134_0.5852142655708861"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0-beta.0": {
      "name": "fake-indexeddb",
      "version": "4.0.0-beta.0",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "exports": {
        ".": "./build/index.js",
        "./auto": "./auto.js",
        "./lib/fakeIndexedDB": "./build/fakeIndexedDB.js",
        "./lib/FDBCursor": "./build/FDBCursor.js",
        "./lib/FDBCursorWithValue": "./build/FDBCursorWithValue.js",
        "./lib/FDBDatabase": "./build/FDBDatabase.js",
        "./lib/FDBFactory": "./build/FDBFactory.js",
        "./lib/FDBIndex": "./build/FDBIndex.js",
        "./lib/FDBKeyRange": "./build/FDBKeyRange.js",
        "./lib/FDBObjectStore": "./build/FDBObjectStore.js",
        "./lib/FDBOpenDBRequest": "./build/FDBOpenDBRequest.js",
        "./lib/FDBRequest": "./build/FDBRequest.js",
        "./lib/FDBTransaction": "./build/FDBTransaction.js",
        "./lib/FDBVersionChangeEvent": "./build/FDBVersionChangeEvent.js"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --plugins [ @babel/plugin-transform-modules-commonjs ] ] && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@babel/core": "^7.14.6",
        "@babel/plugin-transform-modules-commonjs": "^7.14.5",
        "@types/mocha": "^8.2.3",
        "@types/node": "^16.3.1",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.15.2",
        "glob": "^7.1.7",
        "husky": "^7.0.1",
        "lint-staged": "^11.0.0",
        "mocha": "^9.0.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^2.3.2",
        "qunitjs": "^1.23.1",
        "tslint": "^6.1.3",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "4.3.5"
      },
      "lint-staged": {
        "*.{js,json,ts}": "prettier --write"
      },
      "readme": "# fake-indexeddb ![Build Status](https://github.com/dumbmatter/fakeIndexedDB/actions/workflows/test.yml/badge.svg)\n\nThis is a pure JS in-memory implementation of [the IndexedDB API](https://w3c.github.io/IndexedDB/). Its main utility is for testing IndexedDB-dependent code in Node.js.\n\n## Installation\n\n```sh\nnpm install --save-dev fake-indexeddb\n```\n\nor\n\n```sh\nyarn add --dev fake-indexeddb\n```\n\n## Use\n\nFunctionally, it works exactly like IndexedDB except data is not persisted to disk.\n\nThe easiest way to use it is to import `fake-indexeddb/auto`, which will put all the IndexedDB variables in the global scope:\n\n```js\nimport \"fake-indexeddb/auto\";\n\nvar request = indexedDB.open(\"test\", 3);\nrequest.onupgradeneeded = function () {\n    var db = request.result;\n    var store = db.createObjectStore(\"books\", {keyPath: \"isbn\"});\n    store.createIndex(\"by_title\", \"title\", {unique: true});\n\n    store.put({title: \"Quarry Memories\", author: \"Fred\", isbn: 123456});\n    store.put({title: \"Water Buffaloes\", author: \"Fred\", isbn: 234567});\n    store.put({title: \"Bedrock Nights\", author: \"Barney\", isbn: 345678});\n}\nrequest.onsuccess = function (event) {\n    var db = event.target.result;\n\n    var tx = db.transaction(\"books\");\n\n    tx.objectStore(\"books\").index(\"by_title\").get(\"Quarry Memories\").addEventListener(\"success\", function (event) {\n        console.log(\"From index:\", event.target.result);\n    });\n    tx.objectStore(\"books\").openCursor(IDBKeyRange.lowerBound(200000)).onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n            console.log(\"From cursor:\", cursor.value);\n            cursor.continue();\n        }\n    };\n    tx.oncomplete = function () {\n        console.log(\"All done!\");\n    };\n};\n```\n\nAlternatively, you can explicitly import individual IndexedDB variables:\n\n```js\nimport {\n    indexedDB,\n    IDBCursor,\n    IDBCursorWithValue,\n    IDBDatabase,\n    IDBFactory,\n    IDBIndex,\n    IDBKeyRange,\n    IDBObjectStore,\n    IDBOpenDBRequest,\n    IDBRequest,\n    IDBTransaction,\n    IDBVersionChangeEvent,\n} from \"fake-indexeddb\";\n\n// The rest is the same as above.\n```\n\nLike any imported variable, you can rename it if you want, for instance if you don't want to conflict with built-in IndexedDB variables:\n\n```js\nimport {\n    indexedDB as fakeIndexedDB,\n} from \"fake-indexeddb\";\n```\n\n### ECMAScript modules (`import`) vs CommonJS (`require`)\n\nStarting with version 4, fake-indexeddb uses ES modules rather than CommonJS. That means you need to `import` it, not `require` it. If that's a problem for you, stick to version 3 of fake-indexeddb, which supports `require(\"fake-indexeddb\")`. Version 3 has basically all the same functionality as version 4, and I'll try to make any important bug fixes in both versions.\n\n### TypeScript\n\nAs of version 4, fake-indexeddb includes TypeScript types. As you can see in types.d.ts, it's just using TypeScript's built-in IndexedDB types, rather than generating types from the fake-indexeddb code base. The reason I did this is for compatibility with your application code that may already be using TypeScript's IndexedDB types, so if I used something different for fake-indexeddb, it could lead to spurious type errors. In theory this could lead to other errors if there are differences between Typescript's IndexedDB types and fake-indexeddb's API, but currently I'm not aware of any difference. See [issue #23](https://github.com/dumbmatter/fakeIndexedDB/issues/23) for more discussion.\n\n### Dexie and other IndexedDB API wrappers\n\nIf you import `fake-indexeddb/auto` before calling `new Dexie()`, it should work:\n\n```js\nimport Dexie from \"dexie\";\nimport \"fake-indexeddb/auto\";\n\nconst db = new Dexie(\"MyDatabase\");\n```\n\nThe same likely holds true for other IndexedDB API wrappers like idb.\n\nAlternatively, if you don't want to modify the global scope, then you need to explicitly pass the objects to Dexie:\n\n```js\nimport Dexie from \"dexie\";\nimport { indexedDB, IDBKeyRange } from \"fake-indexeddb\";\n\nconst db = new Dexie(\"MyDatabase\", { indexedDB: indexedDB, IDBKeyRange: IDBKeyRange });\n```\n\n### Jest\n\nOut of the box, Jest v27 only supports CommonJS, not ES modules, so [you'll have to do a little extra work to opt in to ES modules](https://jestjs.io/docs/ecmascript-modules). If you can't do that, you should switch to fake-indexeddb v3, see the above \"ECMAScript modules\" section for more info.\n\nTo use fake-indexeddb in a single Jest test suite, require `fake-indexeddb/auto` at the beginning of the test\nfile, as described above.\n\nTo use it on all Jest tests without having to require it in each file, add the auto setup script to the `setupFiles` in your Jest config:\n\n```json\n\"jest\": {\n    ...\n    \"setupFiles\": [\n        \"fake-indexeddb/auto\"\n    ]\n}\n```\n\n### Wiping/resetting the indexedDB for a fresh state\n\nIf you are keeping your tests completely isolated you might want to \"reset\" the state of the mocked indexedDB. You can do this by creating a new `fakeIndexedDB` instance, which lets you have a totally fresh start.\n\n```\nimport \"fake-indexeddb/auto\";\nimport { IDBFactory } from \"fake-indexeddb\";\n\n// Whenever you want a fresh indexedDB\nindexedDB = new IDBFactory();\n```\n\n### With PhantomJS and other really old environments\n\nPhantomJS (and other really old environments) are missing tons of modern JavaScript features. In fact, that may be why you use fake-indexeddb in such an environment! Prior to v3.0.0, fake-indexeddb imported core-js and automatically applied its polyfills. However, since most fake-indexeddb users are not using really old environments, I got rid of that runtime dependency in v3.0.0. To work around that, you can import core-js yourself before you import fake-indexeddb, like:\n\n```js\nimport \"core-js/stable\";\nimport \"fake-indexeddb/auto\";\n```\n\n## Quality\n\nHere's a comparison of fake-indexeddb and real browser IndexedDB implementations on [the W3C IndexedDB test suite](https://github.com/w3c/web-platform-tests/tree/master/IndexedDB) as of March 18, 2019:\n\n| Implementation       | Percentage of files that pass completely |\n| -------------------- | ---------------------------------------- |\n| Chrome 73            | 99%                                      |\n| Firefox 65           | 97%                                      |\n| Safari 12            | 92%                                      |\n| fake-indexeddb 3.0.0 | 87%                                      |\n| Edge 18              | 61%                                      |\n\nFor browsers, I ran http://w3c-test.org/tools/runner/index.html and counted the passes. For fake-indexeddb, I ran `npm run test-w3c`.\n\n87% is pretty good, right? Especially considering that fake-indexeddb runs in Node.js where failure is guaranteed for tests involving browser APIs like Web Workers. There are definitley still some weak points of fake-indexeddb, most of which are described in `src/test/web-platform-tests/run-all.js`. Your app will probably run fine, though.\n\n## Potential applications:\n\n1. Use as a mock database in unit tests.\n\n2. Use the same API in Node.js and in the browser.\n\n3. Support IndexedDB in old or crappy browsers.\n\n4. Somehow use it within a caching layer on top of IndexedDB in the browser, since IndexedDB can be kind of slow.\n\n5. Abstract the core database functions out, so what is left is a shell that allows the IndexedDB API to easily sit on top of many different backends.\n\n6. Serve as a playground for experimenting with IndexedDB.\n\n## License\n\nApache 2.0\n",
      "readmeFilename": "README.md",
      "gitHead": "f8383286c8158801f09e49163e9f9e8edcb58a5d",
      "_id": "fake-indexeddb@4.0.0-beta.0",
      "_nodeVersion": "16.4.1",
      "_npmVersion": "7.18.1",
      "dist": {
        "integrity": "sha512-du/REOGixtqNR+MWzi3kXNNrQbuqd2wCrxKsZo6Mgw+mkWrN+Y30h9osJcmy/eEjnLHTUQaNPFOee6bDLVUQcw==",
        "shasum": "3ea67f88b48b55e306002460ca2228115fcc00f7",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-4.0.0-beta.0.tgz",
        "fileCount": 50,
        "unpackedSize": 180382,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg7bceCRA9TVsSAnZWagAAjTkP/0dJojD1KnmOVzIFeiIG\n4kFFSIJx55FNazSmBRdRrhMzS3B+OqK8gsAoJ93CKhXE8APvEh2lF7rheikE\n86QxVDgRhecg+BS0sAqbQjZ0xFhG/qKSPoHANaEY+b1Z03/mdqQAKofiAYpd\np9pIRnoMcqnq3EP4qZl2BemBlBeWssmZ6J22WcW4b9N1O+X7mMjAOfdp1eNF\nnP7dPszR+SG65K1Bh/o7t6oghmKvmrz5jBM0naLLJrZsViehXpCLltX3waLz\n/hvq4rf8ARE+6k9qu7wv0TEkrUNIniS1TPoZ8Hb61WZF5W01B9i/3uWBprXk\nAtl8lJPSI3b1YHBKx4dfQ4Eqt6UDAFuQ+lL+Oyo07ch01/FwFM1yg24+HQ2Y\nYWah6ZhwU/ovv2POdFlLNuCIn8aMULCUVuNz/ABI0DKEzji5yZVrWNZ8eDuW\nhoFeP2ZE5deNZPjXiJAPbeUZ50otdkBEG7mJs7DqeDdNTtu7J9f3yFoe4iI+\npEbKviOEC6Jz7kEiSgkBUm9wDlV4M5o771kEvYsGTeNSCQI23NRkkRu6gufS\nR3/s4vsZAxGmlxt0o4NjQVU7NVibGKiJmOxJ87UeH/g0QUBI6hQ7DH8oEQ0p\nuski45h43viOAUF6+aCk4LSqWGyi3jnlfiHmCa9qwF35EyWon1kg5XXdEUH2\nc5Lx\r\n=NMk/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEdiXtO0x1mJ7lQLwfeydbNdqNCWCKALQCMHLWPI1ieSAiEAseDe6qubVKS5PlRypK/AogDtnfJt6+X3ud3gQfQW/MQ="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_4.0.0-beta.0_1626191645723_0.7283153182706441"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0-beta.1": {
      "name": "fake-indexeddb",
      "version": "4.0.0-beta.1",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/index.js",
      "exports": {
        ".": "./build/index.js",
        "./auto": "./auto.js",
        "./lib/fakeIndexedDB": "./build/fakeIndexedDB.js",
        "./lib/FDBCursor": "./build/FDBCursor.js",
        "./lib/FDBCursorWithValue": "./build/FDBCursorWithValue.js",
        "./lib/FDBDatabase": "./build/FDBDatabase.js",
        "./lib/FDBFactory": "./build/FDBFactory.js",
        "./lib/FDBIndex": "./build/FDBIndex.js",
        "./lib/FDBKeyRange": "./build/FDBKeyRange.js",
        "./lib/FDBObjectStore": "./build/FDBObjectStore.js",
        "./lib/FDBOpenDBRequest": "./build/FDBOpenDBRequest.js",
        "./lib/FDBRequest": "./build/FDBRequest.js",
        "./lib/FDBTransaction": "./build/FDBTransaction.js",
        "./lib/FDBVersionChangeEvent": "./build/FDBVersionChangeEvent.js"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --plugins [ @babel/plugin-transform-modules-commonjs ] ] && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1",
        "setimmediate": "^1.0.5"
      },
      "devDependencies": {
        "@babel/core": "^7.14.6",
        "@babel/plugin-transform-modules-commonjs": "^7.14.5",
        "@types/mocha": "^8.2.3",
        "@types/node": "^16.3.1",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.15.2",
        "glob": "^7.1.7",
        "husky": "^7.0.1",
        "lint-staged": "^11.0.0",
        "mocha": "^9.0.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^2.3.2",
        "qunitjs": "^1.23.1",
        "tslint": "^6.1.3",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "4.3.5"
      },
      "lint-staged": {
        "*.{js,json,ts}": "prettier --write"
      },
      "readme": "# fake-indexeddb ![Build Status](https://github.com/dumbmatter/fakeIndexedDB/actions/workflows/test.yml/badge.svg)\n\nThis is a pure JS in-memory implementation of [the IndexedDB API](https://w3c.github.io/IndexedDB/). Its main utility is for testing IndexedDB-dependent code in Node.js.\n\n## Installation\n\n```sh\nnpm install --save-dev fake-indexeddb\n```\n\nor\n\n```sh\nyarn add --dev fake-indexeddb\n```\n\n## Use\n\nFunctionally, it works exactly like IndexedDB except data is not persisted to disk.\n\nThe easiest way to use it is to import `fake-indexeddb/auto`, which will put all the IndexedDB variables in the global scope:\n\n```js\nimport \"fake-indexeddb/auto\";\n\nvar request = indexedDB.open(\"test\", 3);\nrequest.onupgradeneeded = function () {\n    var db = request.result;\n    var store = db.createObjectStore(\"books\", {keyPath: \"isbn\"});\n    store.createIndex(\"by_title\", \"title\", {unique: true});\n\n    store.put({title: \"Quarry Memories\", author: \"Fred\", isbn: 123456});\n    store.put({title: \"Water Buffaloes\", author: \"Fred\", isbn: 234567});\n    store.put({title: \"Bedrock Nights\", author: \"Barney\", isbn: 345678});\n}\nrequest.onsuccess = function (event) {\n    var db = event.target.result;\n\n    var tx = db.transaction(\"books\");\n\n    tx.objectStore(\"books\").index(\"by_title\").get(\"Quarry Memories\").addEventListener(\"success\", function (event) {\n        console.log(\"From index:\", event.target.result);\n    });\n    tx.objectStore(\"books\").openCursor(IDBKeyRange.lowerBound(200000)).onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n            console.log(\"From cursor:\", cursor.value);\n            cursor.continue();\n        }\n    };\n    tx.oncomplete = function () {\n        console.log(\"All done!\");\n    };\n};\n```\n\nAlternatively, you can explicitly import individual IndexedDB variables:\n\n```js\nimport {\n    indexedDB,\n    IDBCursor,\n    IDBCursorWithValue,\n    IDBDatabase,\n    IDBFactory,\n    IDBIndex,\n    IDBKeyRange,\n    IDBObjectStore,\n    IDBOpenDBRequest,\n    IDBRequest,\n    IDBTransaction,\n    IDBVersionChangeEvent,\n} from \"fake-indexeddb\";\n\n// The rest is the same as above.\n```\n\nLike any imported variable, you can rename it if you want, for instance if you don't want to conflict with built-in IndexedDB variables:\n\n```js\nimport {\n    indexedDB as fakeIndexedDB,\n} from \"fake-indexeddb\";\n```\n\n### ECMAScript modules (`import`) vs CommonJS (`require`)\n\nStarting with version 4, fake-indexeddb uses ES modules rather than CommonJS. That means you need to `import` it, not `require` it. If that's a problem for you, stick to version 3 of fake-indexeddb, which supports `require(\"fake-indexeddb\")`. Version 3 has basically all the same functionality as version 4, and I'll try to make any important bug fixes in both versions.\n\n### TypeScript\n\nAs of version 4, fake-indexeddb includes TypeScript types. As you can see in types.d.ts, it's just using TypeScript's built-in IndexedDB types, rather than generating types from the fake-indexeddb code base. The reason I did this is for compatibility with your application code that may already be using TypeScript's IndexedDB types, so if I used something different for fake-indexeddb, it could lead to spurious type errors. In theory this could lead to other errors if there are differences between Typescript's IndexedDB types and fake-indexeddb's API, but currently I'm not aware of any difference. See [issue #23](https://github.com/dumbmatter/fakeIndexedDB/issues/23) for more discussion.\n\n### Dexie and other IndexedDB API wrappers\n\nIf you import `fake-indexeddb/auto` before calling `new Dexie()`, it should work:\n\n```js\nimport Dexie from \"dexie\";\nimport \"fake-indexeddb/auto\";\n\nconst db = new Dexie(\"MyDatabase\");\n```\n\nThe same likely holds true for other IndexedDB API wrappers like idb.\n\nAlternatively, if you don't want to modify the global scope, then you need to explicitly pass the objects to Dexie:\n\n```js\nimport Dexie from \"dexie\";\nimport { indexedDB, IDBKeyRange } from \"fake-indexeddb\";\n\nconst db = new Dexie(\"MyDatabase\", { indexedDB: indexedDB, IDBKeyRange: IDBKeyRange });\n```\n\n### Jest\n\nOut of the box, Jest v27 only supports CommonJS, not ES modules, so [you'll have to do a little extra work to opt in to ES modules](https://jestjs.io/docs/ecmascript-modules). If you can't do that, you should switch to fake-indexeddb v3, see the above \"ECMAScript modules\" section for more info.\n\nTo use fake-indexeddb in a single Jest test suite, require `fake-indexeddb/auto` at the beginning of the test\nfile, as described above.\n\nTo use it on all Jest tests without having to require it in each file, add the auto setup script to the `setupFiles` in your Jest config:\n\n```json\n\"jest\": {\n    ...\n    \"setupFiles\": [\n        \"fake-indexeddb/auto\"\n    ]\n}\n```\n\n### Wiping/resetting the indexedDB for a fresh state\n\nIf you are keeping your tests completely isolated you might want to \"reset\" the state of the mocked indexedDB. You can do this by creating a new `fakeIndexedDB` instance, which lets you have a totally fresh start.\n\n```\nimport \"fake-indexeddb/auto\";\nimport { IDBFactory } from \"fake-indexeddb\";\n\n// Whenever you want a fresh indexedDB\nindexedDB = new IDBFactory();\n```\n\n### With PhantomJS and other really old environments\n\nPhantomJS (and other really old environments) are missing tons of modern JavaScript features. In fact, that may be why you use fake-indexeddb in such an environment! Prior to v3.0.0, fake-indexeddb imported core-js and automatically applied its polyfills. However, since most fake-indexeddb users are not using really old environments, I got rid of that runtime dependency in v3.0.0. To work around that, you can import core-js yourself before you import fake-indexeddb, like:\n\n```js\nimport \"core-js/stable\";\nimport \"fake-indexeddb/auto\";\n```\n\n## Quality\n\nHere's a comparison of fake-indexeddb and real browser IndexedDB implementations on [the W3C IndexedDB test suite](https://github.com/w3c/web-platform-tests/tree/master/IndexedDB) as of March 18, 2019:\n\n| Implementation       | Percentage of files that pass completely |\n| -------------------- | ---------------------------------------- |\n| Chrome 73            | 99%                                      |\n| Firefox 65           | 97%                                      |\n| Safari 12            | 92%                                      |\n| fake-indexeddb 3.0.0 | 87%                                      |\n| Edge 18              | 61%                                      |\n\nFor browsers, I ran http://w3c-test.org/tools/runner/index.html and counted the passes. For fake-indexeddb, I ran `npm run test-w3c`.\n\n87% is pretty good, right? Especially considering that fake-indexeddb runs in Node.js where failure is guaranteed for tests involving browser APIs like Web Workers. There are definitley still some weak points of fake-indexeddb, most of which are described in `src/test/web-platform-tests/run-all.js`. Your app will probably run fine, though.\n\n## Potential applications:\n\n1. Use as a mock database in unit tests.\n\n2. Use the same API in Node.js and in the browser.\n\n3. Support IndexedDB in old or crappy browsers.\n\n4. Somehow use it within a caching layer on top of IndexedDB in the browser, since IndexedDB can be kind of slow.\n\n5. Abstract the core database functions out, so what is left is a shell that allows the IndexedDB API to easily sit on top of many different backends.\n\n6. Serve as a playground for experimenting with IndexedDB.\n\n## License\n\nApache 2.0\n",
      "readmeFilename": "README.md",
      "gitHead": "fecb64f660bc9f75f581d75a6a970c8edc547d2c",
      "_id": "fake-indexeddb@4.0.0-beta.1",
      "_nodeVersion": "16.4.1",
      "_npmVersion": "7.18.1",
      "dist": {
        "integrity": "sha512-0XnW9jGezV9eU1N2w1gybkeYjYpDA+Jc0KD7mtscumXFvE60BK2zlQ4EmrdVT85g8XYBB7hItr3nBBMa47Vi9A==",
        "shasum": "14197aecabdbe903ffe9d94e6855a5534d819ab1",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-4.0.0-beta.1.tgz",
        "fileCount": 50,
        "unpackedSize": 180414,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg7eR3CRA9TVsSAnZWagAAaWUP/jAQV+SfcL36d4f7V09B\nsEk4BhhXKGYGZMnJ3MQ/G/i5MP8MBhacGr/4tyR4xPXgzz5YvVp2ytP4LhmW\n5IKSqJnHEhkflmHof7SsHSaK1ItWsop57VR3OOoiD2WZcZSHmNED1j4e6Fpt\nI2b6wciDErH9EbvyfJonAiYcCGt/MHCI7rDr2fmF9pZ9gk1h5yN/P/A7Vj+2\nDSykLUjU+7QoGsANakvQYA8NfVg3++TvrZ2M/ej0Vng7VtJHO8cCzsOmlwuG\naBu2h0aam9cGrlbc8OlC05uk/sqhFCAt4j9CXn+n3AddTR7xurbh+ts4pVyF\nID/xzFsWGX7GXInrZfMEZgAefFkCZHorR4fsRJ2oKp1XhSdw/wksccppztEy\nHYNRxUQ57h/CAg9WPWBg4wXZxTgjIworqo5k3Y/lRzA6p8fI/+OvawpvZV3v\nYuVgHN1zU2rY2bR/8P+H5DQuec4VR98cP9jiGVs/HrqatXFXWaqtXZDdYET/\n7bw2rkvK4kVJ2Rp18EOL84tz7Y3hPZ12KLKZ8f/HppKFhBa05myOeQ8aogdb\nEW5G8i9Skt7b48xthvjzSfe3Kjtvl2YFez4R9vJ9HX22IyNy149Lq4DzfR9s\nQstijNap1Efy4/x5UtD1vyCvk/9nkQbJ9NljK6YgKCt/WCvkDl9DYkgtTO5C\nc6Kd\r\n=wvCI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCzHaO5Ci3qgMEQkdVYc0jFTm5bUnI2SZ/pZQ2ITjjj8AIgfgApNIIVmiZ2N++zxt0X1Uc4TQLaqoyYLsj0aXZNW9Q="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_4.0.0-beta.1_1626203254623_0.7268829482810388"
      },
      "_hasShrinkwrap": false
    },
    "3.1.4": {
      "name": "fake-indexeddb",
      "version": "3.1.4",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "0dd50f24711d73c8a213111406ed9f683c926259",
      "_id": "fake-indexeddb@3.1.4",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-kweAGUKgo/NLHZpyMcgYk2ihDrWQcpzwZ3Y2Ag6/Wo3h8F/ts0onw0nTEth8YjWzzBY+sxSSKFn69vc7xcK0Qg==",
        "shasum": "39644c3fb4b64e28fca64a6ccf18f265827e18e7",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.1.4.tgz",
        "fileCount": 47,
        "unpackedSize": 182333,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGJBBx7OtiAf5ujWsKfE4f9sgKOIYQ5bhG5Iy9KaCBJ1AiEA6RdIgGxow1jc8pge7iBl1+NaPITWK+SScR3glmnKVq0="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.1.4_1633985753351_0.2922030039318293"
      },
      "_hasShrinkwrap": false
    },
    "3.1.6": {
      "name": "fake-indexeddb",
      "version": "3.1.6",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "ebe5cdbe8ff6993b63d32067a4249e7ab772b2ef",
      "_id": "fake-indexeddb@3.1.6",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-UPbYMRvIZpY5WIdQV3fUMP94tltWiQeY6mzZvpKaGQMX0J6aUj+BVmGvmBA7Ajt89hdxnaoVJjHVxEKH5GoGTg==",
        "shasum": "60b59edffebdc339e41dee422877efa0fcc4d723",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.1.6.tgz",
        "fileCount": 48,
        "unpackedSize": 184104,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHQK5BY/8HwfS8aUG2hXHHOJBx3+TxN/G7flwxpJsWlTAiEAulJnrz7dsGy3Dn8gNWn0Y/psaRsI/ytPcE4qKCgh26o="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.1.6_1634681717505_0.8742925942468887"
      },
      "_hasShrinkwrap": false
    },
    "3.1.7": {
      "name": "fake-indexeddb",
      "version": "3.1.7",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "04ef1ac63538f79a30303f4ed09c19532c43b8df",
      "_id": "fake-indexeddb@3.1.7",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-CUGeCzCOVjmeKi2C0pcvSh6NDU6uQIaS+7YyR++tO/atJJujkBYVhDvfePdz/U8bD33BMVWirsr1MKczfAqbjA==",
        "shasum": "d9efbeade113c15efbe862e4598a4b0a1797ed9f",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.1.7.tgz",
        "fileCount": 48,
        "unpackedSize": 184679,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2qsfCRA9TVsSAnZWagAAJxsP/3mUd06HlihWOXvHPqlS\n2aPGgVfNAWMh9E2qRUJ70O9fedqOy8Bia9pbxIQYAyHkrNAfpvu0iWiWlTe0\nFtk0/ECCK2yagmk0A6dQvVHFQGKsDWXJSe9OY1lzOiqc2PfhTJcfvs3fC46F\nVsbgQbmei/C6ugjZub3jkd6cfUAS6zWEwA8jghEMoFFtHpGCA90C3T65Bs+p\nzfjUr1E88Sa2Dgidesz/IeY7hT0NfmSoJ8AGGOb6FV8TFtCkj8IhG1g/NAw+\nSUTdxIMAVDv44D4UDiE3IU09CqwzXJmdrv8SVu/6OxkQekOgAWVL9F5/95j/\nk6r9vcrHe9oqQ1g38/vrGTKc3LJr3oW2Yg9cGn9OI43rkht5a42AGWiC5vch\nNu9YD0nznx1iyAP8dL4D9NVG1YS7qMgDeXH/dnK80jAsGtpyQ/iSkyRatj0k\nBxnUQFbZM+rIJFlakcWVNnkPmS3+4kF0t4n7CwkHmIO64KpbrfqHkyMFoG+9\nf7t6NyGSjIlQ1+2405ikiOF039z2PJ2N8wXns/q2Ug//6RFe+Jyr0Afxh1aL\nsWnv9msI642WDKXHZYBtxRLTYWwqZ3zyOKS9yzFrrmzlYsaSfgfgx6jNyXJV\nIyrPFR0RSereMSioz9HDnTfSdK6bNIapY/E+ByCPQ9rE2HHXdiZV23ecCTfS\n9ZlE\r\n=K7hF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCbkfWGpslFHxXRSE1mc3J/86ug+MsLtJkEQ967DDNlYgIgUdpsW8s5cvY1d3cLkMNLa0tl2MCcdyShUYmmxNdBkvM="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.1.7_1634687294111_0.7569448918078332"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0-beta.2": {
      "name": "fake-indexeddb",
      "version": "4.0.0-beta.2",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/index.js",
      "exports": {
        ".": "./build/index.js",
        "./auto": "./auto.js",
        "./lib/fakeIndexedDB": "./build/fakeIndexedDB.js",
        "./lib/FDBCursor": "./build/FDBCursor.js",
        "./lib/FDBCursorWithValue": "./build/FDBCursorWithValue.js",
        "./lib/FDBDatabase": "./build/FDBDatabase.js",
        "./lib/FDBFactory": "./build/FDBFactory.js",
        "./lib/FDBIndex": "./build/FDBIndex.js",
        "./lib/FDBKeyRange": "./build/FDBKeyRange.js",
        "./lib/FDBObjectStore": "./build/FDBObjectStore.js",
        "./lib/FDBOpenDBRequest": "./build/FDBOpenDBRequest.js",
        "./lib/FDBRequest": "./build/FDBRequest.js",
        "./lib/FDBTransaction": "./build/FDBTransaction.js",
        "./lib/FDBVersionChangeEvent": "./build/FDBVersionChangeEvent.js"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ] && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1"
      },
      "devDependencies": {
        "@babel/core": "^7.14.6",
        "@babel/preset-env": "^7.15.6",
        "@types/mocha": "^8.2.3",
        "@types/node": "^16.3.1",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.15.2",
        "glob": "^7.1.7",
        "husky": "^7.0.1",
        "lint-staged": "^11.0.0",
        "mocha": "^9.0.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^2.3.2",
        "qunitjs": "^1.23.1",
        "tslint": "^6.1.3",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "4.3.5"
      },
      "lint-staged": {
        "*.{js,json,ts}": "prettier --write"
      },
      "readme": "# fake-indexeddb ![Build Status](https://github.com/dumbmatter/fakeIndexedDB/actions/workflows/test.yml/badge.svg)\n\nThis is a pure JS in-memory implementation of [the IndexedDB API](https://w3c.github.io/IndexedDB/). Its main utility is for testing IndexedDB-dependent code in Node.js.\n\n## Installation\n\n```sh\nnpm install --save-dev fake-indexeddb\n```\n\nor\n\n```sh\nyarn add --dev fake-indexeddb\n```\n\n## Use\n\nFunctionally, it works exactly like IndexedDB except data is not persisted to disk.\n\nThe easiest way to use it is to import `fake-indexeddb/auto`, which will put all the IndexedDB variables in the global scope:\n\n```js\nimport \"fake-indexeddb/auto\";\n\nvar request = indexedDB.open(\"test\", 3);\nrequest.onupgradeneeded = function () {\n    var db = request.result;\n    var store = db.createObjectStore(\"books\", {keyPath: \"isbn\"});\n    store.createIndex(\"by_title\", \"title\", {unique: true});\n\n    store.put({title: \"Quarry Memories\", author: \"Fred\", isbn: 123456});\n    store.put({title: \"Water Buffaloes\", author: \"Fred\", isbn: 234567});\n    store.put({title: \"Bedrock Nights\", author: \"Barney\", isbn: 345678});\n}\nrequest.onsuccess = function (event) {\n    var db = event.target.result;\n\n    var tx = db.transaction(\"books\");\n\n    tx.objectStore(\"books\").index(\"by_title\").get(\"Quarry Memories\").addEventListener(\"success\", function (event) {\n        console.log(\"From index:\", event.target.result);\n    });\n    tx.objectStore(\"books\").openCursor(IDBKeyRange.lowerBound(200000)).onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n            console.log(\"From cursor:\", cursor.value);\n            cursor.continue();\n        }\n    };\n    tx.oncomplete = function () {\n        console.log(\"All done!\");\n    };\n};\n```\n\nAlternatively, you can explicitly import individual IndexedDB variables:\n\n```js\nimport {\n    indexedDB,\n    IDBCursor,\n    IDBCursorWithValue,\n    IDBDatabase,\n    IDBFactory,\n    IDBIndex,\n    IDBKeyRange,\n    IDBObjectStore,\n    IDBOpenDBRequest,\n    IDBRequest,\n    IDBTransaction,\n    IDBVersionChangeEvent,\n} from \"fake-indexeddb\";\n\n// The rest is the same as above.\n```\n\nLike any imported variable, you can rename it if you want, for instance if you don't want to conflict with built-in IndexedDB variables:\n\n```js\nimport {\n    indexedDB as fakeIndexedDB,\n} from \"fake-indexeddb\";\n```\n\n### ECMAScript modules (`import`) vs CommonJS (`require`)\n\nStarting with version 4, fake-indexeddb uses ES modules rather than CommonJS. That means you need to `import` it, not `require` it. If that's a problem for you, stick to version 3 of fake-indexeddb, which supports `require(\"fake-indexeddb\")`. Version 3 has basically all the same functionality as version 4, and I'll try to make any important bug fixes in both versions.\n\n### TypeScript\n\nAs of version 4, fake-indexeddb includes TypeScript types. As you can see in types.d.ts, it's just using TypeScript's built-in IndexedDB types, rather than generating types from the fake-indexeddb code base. The reason I did this is for compatibility with your application code that may already be using TypeScript's IndexedDB types, so if I used something different for fake-indexeddb, it could lead to spurious type errors. In theory this could lead to other errors if there are differences between Typescript's IndexedDB types and fake-indexeddb's API, but currently I'm not aware of any difference. See [issue #23](https://github.com/dumbmatter/fakeIndexedDB/issues/23) for more discussion.\n\n### Dexie and other IndexedDB API wrappers\n\nIf you import `fake-indexeddb/auto` before calling `new Dexie()`, it should work:\n\n```js\nimport Dexie from \"dexie\";\nimport \"fake-indexeddb/auto\";\n\nconst db = new Dexie(\"MyDatabase\");\n```\n\nThe same likely holds true for other IndexedDB API wrappers like idb.\n\nAlternatively, if you don't want to modify the global scope, then you need to explicitly pass the objects to Dexie:\n\n```js\nimport Dexie from \"dexie\";\nimport { indexedDB, IDBKeyRange } from \"fake-indexeddb\";\n\nconst db = new Dexie(\"MyDatabase\", { indexedDB: indexedDB, IDBKeyRange: IDBKeyRange });\n```\n\n### Jest\n\nOut of the box, Jest v27 only supports CommonJS, not ES modules, so you'll have to do a little extra work to opt in to ES modules,  either [for all your test files](https://jestjs.io/docs/ecmascript-modules) or by configuring Jest to [transpile fake-indexeddb](https://stackoverflow.com/a/43197503/786644). If you can't do that, you should use fake-indexeddb v3, see the above \"ECMAScript modules\" section for more info.\n\nTo use fake-indexeddb in a single Jest test suite, require `fake-indexeddb/auto` at the beginning of the test\nfile, as described above.\n\nTo use it on all Jest tests without having to require it in each file, add the auto setup script to the `setupFiles` in your Jest config:\n\n```json\n\"jest\": {\n    ...\n    \"setupFiles\": [\n        \"fake-indexeddb/auto\"\n    ]\n}\n```\n\n### Wiping/resetting the indexedDB for a fresh state\n\nIf you are keeping your tests completely isolated you might want to \"reset\" the state of the mocked indexedDB. You can do this by creating a new instance of `IDBFactory`, which lets you have a totally fresh start.\n\n```\nimport \"fake-indexeddb/auto\";\nimport { IDBFactory } from \"fake-indexeddb\";\n\n// Whenever you want a fresh indexedDB\nindexedDB = new IDBFactory();\n```\n\n### With PhantomJS and other really old environments\n\nPhantomJS (and other really old environments) are missing tons of modern JavaScript features. In fact, that may be why you use fake-indexeddb in such an environment! Prior to v3.0.0, fake-indexeddb imported core-js and automatically applied its polyfills. However, since most fake-indexeddb users are not using really old environments, I got rid of that runtime dependency in v3.0.0. To work around that, you can import core-js yourself before you import fake-indexeddb, like:\n\n```js\nimport \"core-js/stable\";\nimport \"fake-indexeddb/auto\";\n```\n\n## Quality\n\nHere's a comparison of fake-indexeddb and real browser IndexedDB implementations on [the W3C IndexedDB test suite](https://github.com/w3c/web-platform-tests/tree/master/IndexedDB) as of March 18, 2019:\n\n| Implementation       | Percentage of files that pass completely |\n| -------------------- | ---------------------------------------- |\n| Chrome 73            | 99%                                      |\n| Firefox 65           | 97%                                      |\n| Safari 12            | 92%                                      |\n| fake-indexeddb 3.0.0 | 87%                                      |\n| Edge 18              | 61%                                      |\n\nFor browsers, I ran http://w3c-test.org/tools/runner/index.html and counted the passes. For fake-indexeddb, I ran `npm run test-w3c`.\n\n87% is pretty good, right? Especially considering that fake-indexeddb runs in Node.js where failure is guaranteed for tests involving browser APIs like Web Workers. There are definitley still some weak points of fake-indexeddb, most of which are described in `src/test/web-platform-tests/run-all.js`. Your app will probably run fine, though.\n\n## Potential applications:\n\n1. Use as a mock database in unit tests.\n\n2. Use the same API in Node.js and in the browser.\n\n3. Support IndexedDB in old or crappy browsers.\n\n4. Somehow use it within a caching layer on top of IndexedDB in the browser, since IndexedDB can be kind of slow.\n\n5. Abstract the core database functions out, so what is left is a shell that allows the IndexedDB API to easily sit on top of many different backends.\n\n6. Serve as a playground for experimenting with IndexedDB.\n\n## License\n\nApache 2.0\n",
      "readmeFilename": "README.md",
      "gitHead": "5601b38367ae1d962dc4fb799d1f15a07ff0e199",
      "_id": "fake-indexeddb@4.0.0-beta.2",
      "_nodeVersion": "17.1.0",
      "_npmVersion": "8.1.2",
      "dist": {
        "integrity": "sha512-lQWYUMEaKh9yVznnOzIcujMZhnUnbYhfunqqoc0ckCy3RremIETOsK6KbjnyFJptX1fiVu8yb5DoQ2wuc1SPDg==",
        "shasum": "12089efe9fcc456f3a8b2d2e76a502cfc174a1d8",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-4.0.0-beta.2.tgz",
        "fileCount": 51,
        "unpackedSize": 148338,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCFfHEsmhnxCdKpw1sbACovK4Larz9mfpOyVMRgVTpYDQIgFAr6y/zCwIY1os69TLnWE4K+Nxj+hyZswxYTixqi1QU="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_4.0.0-beta.2_1636741347759_0.10148748958960119"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0-beta.3": {
      "name": "fake-indexeddb",
      "version": "4.0.0-beta.3",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/cjs/index.js",
      "module": "./build/esm/index.js",
      "exports": {
        ".": {
          "import": "./build/esm/index.js",
          "require": "./build/cjs/index.js"
        },
        "./auto": {
          "import": "./auto.js",
          "require": "./auto.cjs"
        },
        "./auto.cjs": "./auto.cjs",
        "./lib/fakeIndexedDB": {
          "import": "./build/esm/fakeIndexedDB.js",
          "require": "./build/cjs/fakeIndexedDB.js"
        },
        "./lib/FDBCursor": {
          "import": "./build/esm/FDBCursor.js",
          "require": "./build/cjs/FDBCursor.js"
        },
        "./lib/FDBCursorWithValue": {
          "import": "./build/esm/FDBCursorWithValue.js",
          "require": "./build/cjs/FDBCursorWithValue.js"
        },
        "./lib/FDBDatabase": {
          "import": "./build/esm/FDBDatabase.js",
          "require": "./build/cjs/FDBDatabase.js"
        },
        "./lib/FDBFactory": {
          "import": "./build/esm/FDBFactory.js",
          "require": "./build/cjs/FDBFactory.js"
        },
        "./lib/FDBIndex": {
          "import": "./build/esm/FDBIndex.js",
          "require": "./build/cjs/FDBIndex.js"
        },
        "./lib/FDBKeyRange": {
          "import": "./build/esm/FDBKeyRange.js",
          "require": "./build/cjs/FDBKeyRange.js"
        },
        "./lib/FDBObjectStore": {
          "import": "./build/esm/FDBObjectStore.js",
          "require": "./build/cjs/FDBObjectStore.js"
        },
        "./lib/FDBOpenDBRequest": {
          "import": "./build/esm/FDBOpenDBRequest.js",
          "require": "./build/cjs/FDBOpenDBRequest.js"
        },
        "./lib/FDBRequest": {
          "import": "./build/esm/FDBRequest.js",
          "require": "./build/cjs/FDBRequest.js"
        },
        "./lib/FDBTransaction": {
          "import": "./build/esm/FDBTransaction.js",
          "require": "./build/cjs/FDBTransaction.js"
        },
        "./lib/FDBVersionChangeEvent": {
          "import": "./build/esm/FDBVersionChangeEvent.js",
          "require": "./build/cjs/FDBVersionChangeEvent.js"
        }
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && yarn run build-esm && yarn run build-cjs",
        "build-cjs": "BABEL_ENV=cjs babel src --out-dir build/cjs --extensions \".ts\" && echo '{\"type\":\"commonjs\"}' > build/cjs/package.json",
        "build-esm": "babel src --out-dir build/esm --extensions \".ts\"",
        "prepublishOnly": "yarn run build && rm -rf build/cjs/test && rm -rf build/esm/test",
        "lint": "tslint  'src/**/*.ts' && yarn run tsc",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-jest": "node --experimental-vm-modules node_modules/.bin/jest test/jest.js",
        "test-mocha": "mocha --timeout 10000 build/esm/test/fakeIndexedDB",
        "build-qunit": "mkdir build/esm/test/indexedDBmock && cp src/test/indexedDBmock/* build/esm/test/indexedDBmock && browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/esm/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ]",
        "test-qunit": "yarn run build-qunit && node-qunit-phantomjs build/esm/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "rm -rf build && yarn run lint && yarn run build && yarn run test-jest && node test/test.js && yarn run test-w3c && yarn run test-mocha && yarn run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1"
      },
      "devDependencies": {
        "@babel/cli": "^7.17.6",
        "@babel/core": "^7.17.7",
        "@babel/plugin-transform-modules-commonjs": "^7.17.7",
        "@babel/preset-env": "^7.16.11",
        "@babel/preset-typescript": "^7.16.7",
        "@types/mocha": "^9.1.0",
        "@types/node": "^17.0.21",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.21.1",
        "glob": "^7.2.0",
        "husky": "^7.0.4",
        "jest": "^27.5.1",
        "lint-staged": "^12.3.6",
        "mocha": "^9.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^2.6.0",
        "qunitjs": "^1.23.1",
        "tslint": "^6.1.3",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "4.6.2"
      },
      "lint-staged": {
        "*.{js,json,ts}": "prettier --write"
      },
      "readme": "# fake-indexeddb ![Build Status](https://github.com/dumbmatter/fakeIndexedDB/actions/workflows/test.yml/badge.svg)\n\nThis is a pure JS in-memory implementation of [the IndexedDB API](https://w3c.github.io/IndexedDB/). Its main utility is for testing IndexedDB-dependent code in Node.js.\n\n## Installation\n\n```sh\nnpm install --save-dev fake-indexeddb\n```\n\nor\n\n```sh\nyarn add --dev fake-indexeddb\n```\n\n## Use\n\nFunctionally, it works exactly like IndexedDB except data is not persisted to disk.\n\nThe easiest way to use it is to import `fake-indexeddb/auto`, which will put all the IndexedDB variables in the global scope. (Both `import` and `require` are supported, use whichever you like, but the examples here are all `import`.)\n\n```js\nimport \"fake-indexeddb/auto\";\n\nvar request = indexedDB.open(\"test\", 3);\nrequest.onupgradeneeded = function () {\n    var db = request.result;\n    var store = db.createObjectStore(\"books\", {keyPath: \"isbn\"});\n    store.createIndex(\"by_title\", \"title\", {unique: true});\n\n    store.put({title: \"Quarry Memories\", author: \"Fred\", isbn: 123456});\n    store.put({title: \"Water Buffaloes\", author: \"Fred\", isbn: 234567});\n    store.put({title: \"Bedrock Nights\", author: \"Barney\", isbn: 345678});\n}\nrequest.onsuccess = function (event) {\n    var db = event.target.result;\n\n    var tx = db.transaction(\"books\");\n\n    tx.objectStore(\"books\").index(\"by_title\").get(\"Quarry Memories\").addEventListener(\"success\", function (event) {\n        console.log(\"From index:\", event.target.result);\n    });\n    tx.objectStore(\"books\").openCursor(IDBKeyRange.lowerBound(200000)).onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n            console.log(\"From cursor:\", cursor.value);\n            cursor.continue();\n        }\n    };\n    tx.oncomplete = function () {\n        console.log(\"All done!\");\n    };\n};\n```\n\nAlternatively, you can explicitly import individual IndexedDB variables:\n\n```js\nimport {\n    indexedDB,\n    IDBCursor,\n    IDBCursorWithValue,\n    IDBDatabase,\n    IDBFactory,\n    IDBIndex,\n    IDBKeyRange,\n    IDBObjectStore,\n    IDBOpenDBRequest,\n    IDBRequest,\n    IDBTransaction,\n    IDBVersionChangeEvent,\n} from \"fake-indexeddb\";\n\n// The rest is the same as above.\n```\n\nLike any imported variable, you can rename it if you want, for instance if you don't want to conflict with built-in IndexedDB variables:\n\n```js\nimport {\n    indexedDB as fakeIndexedDB,\n} from \"fake-indexeddb\";\n```\n\n### TypeScript\n\nAs of version 4, fake-indexeddb includes TypeScript types. As you can see in types.d.ts, it's just using TypeScript's built-in IndexedDB types, rather than generating types from the fake-indexeddb code base. The reason I did this is for compatibility with your application code that may already be using TypeScript's IndexedDB types, so if I used something different for fake-indexeddb, it could lead to spurious type errors. In theory this could lead to other errors if there are differences between Typescript's IndexedDB types and fake-indexeddb's API, but currently I'm not aware of any difference. See [issue #23](https://github.com/dumbmatter/fakeIndexedDB/issues/23) for more discussion.\n\n### Dexie and other IndexedDB API wrappers\n\nIf you import `fake-indexeddb/auto` before calling `new Dexie()`, it should work:\n\n```js\nimport Dexie from \"dexie\";\nimport \"fake-indexeddb/auto\";\n\nconst db = new Dexie(\"MyDatabase\");\n```\n\nThe same likely holds true for other IndexedDB API wrappers like idb.\n\nAlternatively, if you don't want to modify the global scope, then you need to explicitly pass the objects to Dexie:\n\n```js\nimport Dexie from \"dexie\";\nimport { indexedDB, IDBKeyRange } from \"fake-indexeddb\";\n\nconst db = new Dexie(\"MyDatabase\", { indexedDB: indexedDB, IDBKeyRange: IDBKeyRange });\n```\n\n### Jest\n\nTo use fake-indexeddb in a single Jest test suite, require `fake-indexeddb/auto` at the beginning of the test\nfile, as described above.\n\nTo use it on all Jest tests without having to include it in each file, add the auto setup script to the `setupFiles` in your Jest config:\n\n```json\n{\n    ...\n    \"setupFiles\": [\n        \"fake-indexeddb/auto.cjs\"\n    ]\n}\n```\n\nThat's \"auto.cjs\" rather than just \"auto\" to make sure it picks up the CommonJS version. Otherwise it would use the ESM version, which Jest does not support without [some extra configuration](https://jestjs.io/docs/ecmascript-modules).\n\n### Wiping/resetting the indexedDB for a fresh state\n\nIf you are keeping your tests completely isolated you might want to \"reset\" the state of the mocked indexedDB. You can do this by creating a new instance of `IDBFactory`, which lets you have a totally fresh start.\n\n```\nimport \"fake-indexeddb/auto\";\nimport { IDBFactory } from \"fake-indexeddb\";\n\n// Whenever you want a fresh indexedDB\nindexedDB = new IDBFactory();\n```\n\n### With PhantomJS and other really old environments\n\nPhantomJS (and other really old environments) are missing tons of modern JavaScript features. In fact, that may be why you use fake-indexeddb in such an environment! Prior to v3.0.0, fake-indexeddb imported core-js and automatically applied its polyfills. However, since most fake-indexeddb users are not using really old environments, I got rid of that runtime dependency in v3.0.0. To work around that, you can import core-js yourself before you import fake-indexeddb, like:\n\n```js\nimport \"core-js/stable\";\nimport \"fake-indexeddb/auto\";\n```\n\n## Quality\n\nHere's a comparison of fake-indexeddb and real browser IndexedDB implementations on [the W3C IndexedDB test suite](https://github.com/w3c/web-platform-tests/tree/master/IndexedDB) as of March 18, 2019:\n\n| Implementation       | Percentage of files that pass completely |\n| -------------------- | ---------------------------------------- |\n| Chrome 73            | 99%                                      |\n| Firefox 65           | 97%                                      |\n| Safari 12            | 92%                                      |\n| fake-indexeddb 3.0.0 | 87%                                      |\n| Edge 18              | 61%                                      |\n\nFor browsers, I ran http://w3c-test.org/tools/runner/index.html and counted the passes. For fake-indexeddb, I ran `npm run test-w3c`.\n\n87% is pretty good, right? Especially considering that fake-indexeddb runs in Node.js where failure is guaranteed for tests involving browser APIs like Web Workers. There are definitley still some weak points of fake-indexeddb, most of which are described in `src/test/web-platform-tests/run-all.js`. Your app will probably run fine, though.\n\n## Potential applications:\n\n1. Use as a mock database in unit tests.\n\n2. Use the same API in Node.js and in the browser.\n\n3. Support IndexedDB in old or crappy browsers.\n\n4. Somehow use it within a caching layer on top of IndexedDB in the browser, since IndexedDB can be kind of slow.\n\n5. Abstract the core database functions out, so what is left is a shell that allows the IndexedDB API to easily sit on top of many different backends.\n\n6. Serve as a playground for experimenting with IndexedDB.\n\n## License\n\nApache 2.0\n",
      "readmeFilename": "README.md",
      "gitHead": "7699d2c42fb4beebab8419489b87d762c2eeca44",
      "_id": "fake-indexeddb@4.0.0-beta.3",
      "_nodeVersion": "17.7.1",
      "_npmVersion": "8.5.2",
      "dist": {
        "integrity": "sha512-UMkfjJ3nCoiQXGoXj8/OSDNPzFjK+y2Vq97dzwBuBmbzRAUpDUnHQRUW2Wo66zBqlSgq7oF2ZdbxTAHCtsjmMQ==",
        "shasum": "06a54641a5e5a3c8ac12ef65a8228bba33c6dabf",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-4.0.0-beta.3.tgz",
        "fileCount": 86,
        "unpackedSize": 258808,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiMoqiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr0mA//ZQoPb5oN8juqFGNg6Wbdb9TZKdz53lcg/1752jU6p0wQAe30\r\nRkWptmYiNNEmlg0Fvm8w2rZPMdzkU2JB5a4BJDQ3trA9qqgasWI8HzokbqKt\r\n2EL4cnKUfjR6FXnELfsh9bBpOy/obvFlTrkgcuBz4LgpphQkEjtJ+tnKKYNX\r\nedDpylNjQYTvNKeGd8kvnZ6V4VY+l1vyu1FNvh6YuaKlZQ+LARLlGyekd9Po\r\nm22MSXvPvyjJqzw1IC12nuyn5WbeGWgJP/tQ1C36oF+eGndMvKX2cRHdROCx\r\nE1xuV4fpz5WWz6tqZM8ui6KazG0Rre7zrNHcMzzcy3OvJXJFJxSXwwQrZwHl\r\n1pnxMhCLgGSzjZNea44Z6g3Bh7I1UmIsBtCh7/RFQHkszBjEK85f1F4LMZ71\r\n/AsBgPMlHNyQpQs/CBbYhsn4PqIKByZioSH9PilMnPTQI2LqFf192N9J9s3k\r\n0oaYxEj+7ugtpGglJfj3+PrI2x96aak30unZI+8dkWlkfgnqpKif3MKNBqEW\r\nnNi82Lv2/DqviXlJ/L9hnWNo13kuBkSQjASsqJCkGaoFNwWOnZrxA1QHrgqm\r\nbUJcBrw+qy6Rru+n3S0kYYBEx6zJ5GXomTXR7WgoNz3Ur0qRCUoPWSQL24WA\r\nZ4Cd7dnC+f4LrQ88TOhLH6MB7dvMHSc08iY=\r\n=d/Og\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDYS+cYvEgpycct0wMqb/iLzuT65KzXdhElLIyX3tWJ4AIhAOTY9TSm0XLfuxqFvELGQyWgM876lse4dfj3Qk1OT1FS"
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_4.0.0-beta.3_1647479458507_0.5688953430209251"
      },
      "_hasShrinkwrap": false
    },
    "3.1.8": {
      "name": "fake-indexeddb",
      "version": "3.1.8",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "main": "build/index.js",
      "scripts": {
        "build": "rm -rf build && tsc",
        "prepublishOnly": "npm run build && rm -rf build/test",
        "lint": "tslint  'src/**/*.ts'",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-mocha": "mocha --timeout 10000 build/test/fakeIndexedDB",
        "build-qunit": "browserify build/test/indexedDBmock/exports-qunit-bundle.js -o build/test/indexedDBmock/exports-qunit-bundle.js && cp src/test/indexedDBmock/index.html build/test/indexedDBmock/index.html",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "npm run lint && npm run build && node test/test.js && npm run test-w3c && npm run test-mocha && npm run test-qunit"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^2.0.1"
      },
      "devDependencies": {
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.7",
        "browserify": "^16.5.0",
        "core-js": "^3.4.1",
        "glob": "^7.1.6",
        "husky": "^3.0.9",
        "lint-staged": "^9.4.3",
        "mocha": "^6.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^1.19.1",
        "qunitjs": "^1.23.1",
        "semver": "^6.3.0",
        "tslint": "^5.20.1",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "3.7.2"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.{js,json,ts}": [
          "prettier --write",
          "git add"
        ]
      },
      "gitHead": "9ce266d9b4aeace460acfd46267ee0af73f7fa54",
      "_id": "fake-indexeddb@3.1.8",
      "_nodeVersion": "17.9.0",
      "_npmVersion": "8.5.5",
      "dist": {
        "integrity": "sha512-7umIgcdnDfNcjw0ZaoD6yR2BflngKmPsyzZC+sV2fdttwz5bH6B6CCaNzzD+MURfRg8pvr/aL0trfNx65FLiDg==",
        "shasum": "229e3cff6fa7355aebb3f147b908d2efa4605d70",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-3.1.8.tgz",
        "fileCount": 48,
        "unpackedSize": 184746,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICYF4/AitnvWE6e4+FEmL58k76jateFAGSMhcGG71ZGLAiBj90yJhLlgwV2heRMwN5nBsGaKbdwLrSfwNvUFOfXCDQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJioRVdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpgJBAAldBDENwC3Bja03pskYUZAqr1oKnBJpN0jAkDQS9PKtz7xeKf\r\nrmDdFNEwcj6+9DmRu5VlWZCEo4TGiSbPmyh678Mlk3xbkY/1mEnkzBOk4FO8\r\nEtMsiMNHLGy5JE4xiGcIYISNf9uL3FbXgfItYGprxDmrdXN57dBNCHtf5tjB\r\nlwhe/q8AgEEOvoHG9rl03wUNHuonu2OXvD5UWotYUVgb7SgdHvCmpMy1mode\r\n8ta8BluTjDeV4bnHphdxPxI9zlDhrSse37FTzg9tNsEc3eB41G4v6VPQsQil\r\n+l1JhXI22KfRU3JkjU0qpuigQp+1hblDGwjL8358dHNK7CwLMAMCKIutUw2K\r\nVeVEw8o2VWiQcUsOZEXg60tPfsQHwdIcURrmmp+8osrmxH8CMsNUlfGdoybJ\r\nb6wpvhFGv1CunbijhlCvjjDclLaS6AbAEJF49/1XUclnsSWirZJe5roR5SQa\r\ndi08hSwWpO5FsIdOYFGqTi2iO58IEYrM0cVIghMWdEWIfRSbS/Yvfs0gM+IT\r\naTKgLfMNG/sXy1uL2aUgxKeCuolIliv/VjYAM73Nh19gnj/OvXcblJ9aeJIp\r\nVXoEpZ3crTIkNQm2Nuul2ElKDsVdX6MSWPpl0uFSZE6Kqo//hDpln6ZrYzu9\r\nZr0ia/CxIA/5vXJX30YkLb/5GPz/qQgwKAg=\r\n=vsTb\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_3.1.8_1654723933649_0.9448691151092434"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0-beta.5": {
      "name": "fake-indexeddb",
      "version": "4.0.0-beta.5",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/cjs/index.js",
      "module": "./build/esm/index.js",
      "exports": {
        ".": {
          "import": "./build/esm/index.js",
          "require": "./build/cjs/index.js"
        },
        "./auto": {
          "import": "./auto/index.mjs",
          "require": "./auto/index.js"
        },
        "./auto.cjs": "./auto.cjs",
        "./lib/fakeIndexedDB": {
          "import": "./build/esm/fakeIndexedDB.js",
          "require": "./build/cjs/fakeIndexedDB.js"
        },
        "./lib/FDBCursor": {
          "import": "./build/esm/FDBCursor.js",
          "require": "./build/cjs/FDBCursor.js"
        },
        "./lib/FDBCursorWithValue": {
          "import": "./build/esm/FDBCursorWithValue.js",
          "require": "./build/cjs/FDBCursorWithValue.js"
        },
        "./lib/FDBDatabase": {
          "import": "./build/esm/FDBDatabase.js",
          "require": "./build/cjs/FDBDatabase.js"
        },
        "./lib/FDBFactory": {
          "import": "./build/esm/FDBFactory.js",
          "require": "./build/cjs/FDBFactory.js"
        },
        "./lib/FDBIndex": {
          "import": "./build/esm/FDBIndex.js",
          "require": "./build/cjs/FDBIndex.js"
        },
        "./lib/FDBKeyRange": {
          "import": "./build/esm/FDBKeyRange.js",
          "require": "./build/cjs/FDBKeyRange.js"
        },
        "./lib/FDBObjectStore": {
          "import": "./build/esm/FDBObjectStore.js",
          "require": "./build/cjs/FDBObjectStore.js"
        },
        "./lib/FDBOpenDBRequest": {
          "import": "./build/esm/FDBOpenDBRequest.js",
          "require": "./build/cjs/FDBOpenDBRequest.js"
        },
        "./lib/FDBRequest": {
          "import": "./build/esm/FDBRequest.js",
          "require": "./build/cjs/FDBRequest.js"
        },
        "./lib/FDBTransaction": {
          "import": "./build/esm/FDBTransaction.js",
          "require": "./build/cjs/FDBTransaction.js"
        },
        "./lib/FDBVersionChangeEvent": {
          "import": "./build/esm/FDBVersionChangeEvent.js",
          "require": "./build/cjs/FDBVersionChangeEvent.js"
        }
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && yarn run build-esm && yarn run build-cjs",
        "build-cjs": "BABEL_ENV=cjs babel src --out-dir build/cjs --extensions \".ts\" && echo '{\"type\":\"commonjs\"}' > build/cjs/package.json",
        "build-esm": "babel src --out-dir build/esm --extensions \".ts\"",
        "prepublishOnly": "yarn run build && rm -rf build/cjs/test && rm -rf build/esm/test",
        "lint": "tslint  'src/**/*.ts' && yarn run tsc",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-jest": "node --experimental-vm-modules node_modules/.bin/jest test/jest.js",
        "test-mocha": "mocha --timeout 10000 build/esm/test/fakeIndexedDB",
        "build-qunit": "mkdir build/esm/test/indexedDBmock && cp src/test/indexedDBmock/* build/esm/test/indexedDBmock && browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/esm/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ]",
        "test-qunit": "yarn run build-qunit && node-qunit-phantomjs build/esm/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "rm -rf build && yarn run lint && yarn run build && yarn run test-jest && node test/test.js && yarn run test-w3c && yarn run test-mocha && yarn run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^3.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.18.6",
        "@babel/core": "^7.18.6",
        "@babel/plugin-transform-modules-commonjs": "^7.18.6",
        "@babel/preset-env": "^7.18.6",
        "@babel/preset-typescript": "^7.18.6",
        "@types/mocha": "^9.1.1",
        "@types/node": "^18.0.0",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.23.3",
        "glob": "^8.0.3",
        "husky": "^7.0.4",
        "jest": "^28.1.2",
        "lint-staged": "^12.5.0",
        "mocha": "^9.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^2.7.1",
        "qunitjs": "^1.23.1",
        "tslint": "^6.1.3",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "4.7.4"
      },
      "lint-staged": {
        "*.{js,json,ts}": "prettier --write"
      },
      "readme": "# fake-indexeddb ![Build Status](https://github.com/dumbmatter/fakeIndexedDB/actions/workflows/test.yml/badge.svg)\n\nThis is a pure JS in-memory implementation of [the IndexedDB API](https://w3c.github.io/IndexedDB/). Its main utility is for testing IndexedDB-dependent code in Node.js.\n\n## Installation\n\n```sh\nnpm install --save-dev fake-indexeddb\n```\n\nor\n\n```sh\nyarn add --dev fake-indexeddb\n```\n\n## Use\n\nFunctionally, it works exactly like IndexedDB except data is not persisted to disk.\n\nThe easiest way to use it is to import `fake-indexeddb/auto`, which will put all the IndexedDB variables in the global scope. (Both `import` and `require` are supported, use whichever you like, but the examples here are all `import`.)\n\n```js\nimport \"fake-indexeddb/auto\";\n\nvar request = indexedDB.open(\"test\", 3);\nrequest.onupgradeneeded = function () {\n    var db = request.result;\n    var store = db.createObjectStore(\"books\", {keyPath: \"isbn\"});\n    store.createIndex(\"by_title\", \"title\", {unique: true});\n\n    store.put({title: \"Quarry Memories\", author: \"Fred\", isbn: 123456});\n    store.put({title: \"Water Buffaloes\", author: \"Fred\", isbn: 234567});\n    store.put({title: \"Bedrock Nights\", author: \"Barney\", isbn: 345678});\n}\nrequest.onsuccess = function (event) {\n    var db = event.target.result;\n\n    var tx = db.transaction(\"books\");\n\n    tx.objectStore(\"books\").index(\"by_title\").get(\"Quarry Memories\").addEventListener(\"success\", function (event) {\n        console.log(\"From index:\", event.target.result);\n    });\n    tx.objectStore(\"books\").openCursor(IDBKeyRange.lowerBound(200000)).onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n            console.log(\"From cursor:\", cursor.value);\n            cursor.continue();\n        }\n    };\n    tx.oncomplete = function () {\n        console.log(\"All done!\");\n    };\n};\n```\n\nAlternatively, you can explicitly import individual IndexedDB variables:\n\n```js\nimport {\n    indexedDB,\n    IDBCursor,\n    IDBCursorWithValue,\n    IDBDatabase,\n    IDBFactory,\n    IDBIndex,\n    IDBKeyRange,\n    IDBObjectStore,\n    IDBOpenDBRequest,\n    IDBRequest,\n    IDBTransaction,\n    IDBVersionChangeEvent,\n} from \"fake-indexeddb\";\n\n// The rest is the same as above.\n```\n\nLike any imported variable, you can rename it if you want, for instance if you don't want to conflict with built-in IndexedDB variables:\n\n```js\nimport {\n    indexedDB as fakeIndexedDB,\n} from \"fake-indexeddb\";\n```\n\n### TypeScript\n\nAs of version 4, fake-indexeddb includes TypeScript types. As you can see in types.d.ts, it's just using TypeScript's built-in IndexedDB types, rather than generating types from the fake-indexeddb code base. The reason I did this is for compatibility with your application code that may already be using TypeScript's IndexedDB types, so if I used something different for fake-indexeddb, it could lead to spurious type errors. In theory this could lead to other errors if there are differences between Typescript's IndexedDB types and fake-indexeddb's API, but currently I'm not aware of any difference. See [issue #23](https://github.com/dumbmatter/fakeIndexedDB/issues/23) for more discussion.\n\n### Dexie and other IndexedDB API wrappers\n\nIf you import `fake-indexeddb/auto` before calling `new Dexie()`, it should work:\n\n```js\nimport Dexie from \"dexie\";\nimport \"fake-indexeddb/auto\";\n\nconst db = new Dexie(\"MyDatabase\");\n```\n\nThe same likely holds true for other IndexedDB API wrappers like idb.\n\nAlternatively, if you don't want to modify the global scope, then you need to explicitly pass the objects to Dexie:\n\n```js\nimport Dexie from \"dexie\";\nimport { indexedDB, IDBKeyRange } from \"fake-indexeddb\";\n\nconst db = new Dexie(\"MyDatabase\", { indexedDB: indexedDB, IDBKeyRange: IDBKeyRange });\n```\n\n### Jest\n\nTo use fake-indexeddb in a single Jest test suite, require `fake-indexeddb/auto` at the beginning of the test\nfile, as described above.\n\nTo use it on all Jest tests without having to include it in each file, add the auto setup script to the `setupFiles` in your Jest config:\n\n```json\n{\n    ...\n    \"setupFiles\": [\n        \"fake-indexeddb/auto.cjs\"\n    ]\n}\n```\n\nThat's \"auto.cjs\" rather than just \"auto\" to make sure it picks up the CommonJS version. Otherwise it would use the ESM version, which Jest does not support without [some extra configuration](https://jestjs.io/docs/ecmascript-modules).\n\n### Wiping/resetting the indexedDB for a fresh state\n\nIf you are keeping your tests completely isolated you might want to \"reset\" the state of the mocked indexedDB. You can do this by creating a new instance of `IDBFactory`, which lets you have a totally fresh start.\n\n```\nimport \"fake-indexeddb/auto\";\nimport { IDBFactory } from \"fake-indexeddb\";\n\n// Whenever you want a fresh indexedDB\nindexedDB = new IDBFactory();\n```\n\n### With PhantomJS and other really old environments\n\nPhantomJS (and other really old environments) are missing tons of modern JavaScript features. In fact, that may be why you use fake-indexeddb in such an environment! Prior to v3.0.0, fake-indexeddb imported core-js and automatically applied its polyfills. However, since most fake-indexeddb users are not using really old environments, I got rid of that runtime dependency in v3.0.0. To work around that, you can import core-js yourself before you import fake-indexeddb, like:\n\n```js\nimport \"core-js/stable\";\nimport \"fake-indexeddb/auto\";\n```\n\n## Quality\n\nHere's a comparison of fake-indexeddb and real browser IndexedDB implementations on [the W3C IndexedDB test suite](https://github.com/w3c/web-platform-tests/tree/master/IndexedDB) as of March 18, 2019:\n\n| Implementation       | Percentage of files that pass completely |\n| -------------------- | ---------------------------------------- |\n| Chrome 73            | 99%                                      |\n| Firefox 65           | 97%                                      |\n| Safari 12            | 92%                                      |\n| fake-indexeddb 3.0.0 | 87%                                      |\n| Edge 18              | 61%                                      |\n\nFor browsers, I ran http://w3c-test.org/tools/runner/index.html and counted the passes. For fake-indexeddb, I ran `npm run test-w3c`.\n\n87% is pretty good, right? Especially considering that fake-indexeddb runs in Node.js where failure is guaranteed for tests involving browser APIs like Web Workers. There are definitley still some weak points of fake-indexeddb, most of which are described in `src/test/web-platform-tests/run-all.js`. Your app will probably run fine, though.\n\n## Potential applications:\n\n1. Use as a mock database in unit tests.\n\n2. Use the same API in Node.js and in the browser.\n\n3. Support IndexedDB in old or crappy browsers.\n\n4. Somehow use it within a caching layer on top of IndexedDB in the browser, since IndexedDB can be kind of slow.\n\n5. Abstract the core database functions out, so what is left is a shell that allows the IndexedDB API to easily sit on top of many different backends.\n\n6. Serve as a playground for experimenting with IndexedDB.\n\n## License\n\nApache 2.0\n",
      "readmeFilename": "README.md",
      "gitHead": "f76e992f4e4c5a037c84704f6bb80b90362b6e2f",
      "_id": "fake-indexeddb@4.0.0-beta.5",
      "_nodeVersion": "18.4.0",
      "_npmVersion": "8.12.1",
      "dist": {
        "integrity": "sha512-THiFbcHmrVwNcxj76Zg40PBp2rY0PCvPhrrfjopjx3rkKCIfKeMv2r6RPwEB1xI4s9voAD8V58kN+AqiFsquOQ==",
        "shasum": "36d245970ae024424a5a0794dbded09b7cad279b",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-4.0.0-beta.5.tgz",
        "fileCount": 100,
        "unpackedSize": 259819,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHXygEHsWJvzr8fRbaJe470K4zJFkNoDCb1VVHPLtXqTAiBODthGsHbfvmRePAQmc5XNIUUTj+/jMWACdR82PO3j9g=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiwGZcACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoiNw/8DgjcO/lCN9tyXnJM3/NFXlpoJ5a5dsOhHhZLRW8c91yEjYk3\r\nIw8ji41ArlXVs2ntvicXKPVanRZ5l3ublRbadLA83anY1xYB0mxTfxsj2QUx\r\nLAMM7cmoITc8ZE7gIrcI73OfvqTfhUUihpH7jx/YmuY5/qr7r8LKiESkN8wb\r\n/7cQtd+wFiUBw50T9vjRxPudaqU0uvwKjTErIJj6FaVQ7GyzCtf+vqrsA+yt\r\nPPi4zA8s154Ti1woWAtu+ieQ44AsLYUz0uRttoKBedpf+86WqnwL86LTHcOX\r\nF9Xp+orSpT84164nMfRG5p7lzyIQhEJDpEzJ6SvkxYNXSnlCPoQON83RX4/f\r\nMR11tnQ2RFk+cW6Hf8LbVOXgv37NrHC+Qo7LZfeO8AdeHtSV+widqIpgGg86\r\npVEtauOlUf0Mp2aKJjVvdbHPLdq4f6QbGvKlMxawVj3om1oxbsZ+gUlcMJOH\r\n5uSZoxSC2V1/nksQe1Ek+lHVPM7JQtZKmJPSNFAOc5W6GEXoWsUo7eECIdKH\r\n89sCugwPcuq4QX8Ca4AMWF9DSD8N/c1+CP3bVuXcUP+J7ero2bS8bNOBqg6n\r\nKOhvUzGPO56GOTY50luBsldgtgwfVP5lf+DLk6zHv3S70056baXQOE88WMF5\r\nQ0FVatFHcVj6gXV002iAASr8v0BZEs+Outc=\r\n=7wwB\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_4.0.0-beta.5_1656776284710_0.22403123469363462"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0-beta.6": {
      "name": "fake-indexeddb",
      "version": "4.0.0-beta.6",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/cjs/index.js",
      "module": "./build/esm/index.js",
      "exports": {
        ".": {
          "import": "./build/esm/index.js",
          "require": "./build/cjs/index.js"
        },
        "./auto": {
          "import": "./auto/index.mjs",
          "require": "./auto/index.js"
        },
        "./auto.cjs": "./auto.cjs",
        "./lib/fakeIndexedDB": {
          "import": "./build/esm/fakeIndexedDB.js",
          "require": "./build/cjs/fakeIndexedDB.js"
        },
        "./lib/FDBCursor": {
          "import": "./build/esm/FDBCursor.js",
          "require": "./build/cjs/FDBCursor.js"
        },
        "./lib/FDBCursorWithValue": {
          "import": "./build/esm/FDBCursorWithValue.js",
          "require": "./build/cjs/FDBCursorWithValue.js"
        },
        "./lib/FDBDatabase": {
          "import": "./build/esm/FDBDatabase.js",
          "require": "./build/cjs/FDBDatabase.js"
        },
        "./lib/FDBFactory": {
          "import": "./build/esm/FDBFactory.js",
          "require": "./build/cjs/FDBFactory.js"
        },
        "./lib/FDBIndex": {
          "import": "./build/esm/FDBIndex.js",
          "require": "./build/cjs/FDBIndex.js"
        },
        "./lib/FDBKeyRange": {
          "import": "./build/esm/FDBKeyRange.js",
          "require": "./build/cjs/FDBKeyRange.js"
        },
        "./lib/FDBObjectStore": {
          "import": "./build/esm/FDBObjectStore.js",
          "require": "./build/cjs/FDBObjectStore.js"
        },
        "./lib/FDBOpenDBRequest": {
          "import": "./build/esm/FDBOpenDBRequest.js",
          "require": "./build/cjs/FDBOpenDBRequest.js"
        },
        "./lib/FDBRequest": {
          "import": "./build/esm/FDBRequest.js",
          "require": "./build/cjs/FDBRequest.js"
        },
        "./lib/FDBTransaction": {
          "import": "./build/esm/FDBTransaction.js",
          "require": "./build/cjs/FDBTransaction.js"
        },
        "./lib/FDBVersionChangeEvent": {
          "import": "./build/esm/FDBVersionChangeEvent.js",
          "require": "./build/cjs/FDBVersionChangeEvent.js"
        }
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && yarn run build-esm && yarn run build-cjs",
        "build-cjs": "BABEL_ENV=cjs babel src --out-dir build/cjs --extensions \".ts\" && echo '{\"type\":\"commonjs\"}' > build/cjs/package.json",
        "build-esm": "babel src --out-dir build/esm --extensions \".ts\"",
        "prepublishOnly": "yarn run build && rm -rf build/cjs/test && rm -rf build/esm/test",
        "lint": "tslint  'src/**/*.ts' && yarn run tsc",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-jest": "node --experimental-vm-modules node_modules/.bin/jest test/jest.js",
        "test-mocha": "mocha --timeout 10000 build/esm/test/fakeIndexedDB",
        "build-qunit": "mkdir build/esm/test/indexedDBmock && cp src/test/indexedDBmock/* build/esm/test/indexedDBmock && browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/esm/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ]",
        "test-qunit": "yarn run build-qunit && node-qunit-phantomjs build/esm/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "rm -rf build && yarn run lint && yarn run build && yarn run test-jest && node test/test.js && node test/dexie.js && yarn run test-w3c && yarn run test-mocha && yarn run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^3.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.18.6",
        "@babel/core": "^7.18.6",
        "@babel/plugin-transform-modules-commonjs": "^7.18.6",
        "@babel/preset-env": "^7.18.6",
        "@babel/preset-typescript": "^7.18.6",
        "@types/mocha": "^9.1.1",
        "@types/node": "^18.0.0",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.23.3",
        "dexie": "^3.2.2",
        "glob": "^8.0.3",
        "husky": "^7.0.4",
        "jest": "^28.1.2",
        "lint-staged": "^12.5.0",
        "mocha": "^9.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^2.7.1",
        "qunitjs": "^1.23.1",
        "tslint": "^6.1.3",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "4.7.4"
      },
      "lint-staged": {
        "*.{js,json,ts}": "prettier --write"
      },
      "readme": "# fake-indexeddb ![Build Status](https://github.com/dumbmatter/fakeIndexedDB/actions/workflows/test.yml/badge.svg)\n\nThis is a pure JS in-memory implementation of [the IndexedDB API](https://w3c.github.io/IndexedDB/). Its main utility is for testing IndexedDB-dependent code in Node.js.\n\n## Installation\n\n```sh\nnpm install --save-dev fake-indexeddb\n```\n\nor\n\n```sh\nyarn add --dev fake-indexeddb\n```\n\n## Use\n\nFunctionally, it works exactly like IndexedDB except data is not persisted to disk.\n\nThe easiest way to use it is to import `fake-indexeddb/auto`, which will put all the IndexedDB variables in the global scope. (Both `import` and `require` are supported, use whichever you like, but the examples here are all `import`.)\n\n```js\nimport \"fake-indexeddb/auto\";\n\nvar request = indexedDB.open(\"test\", 3);\nrequest.onupgradeneeded = function () {\n    var db = request.result;\n    var store = db.createObjectStore(\"books\", {keyPath: \"isbn\"});\n    store.createIndex(\"by_title\", \"title\", {unique: true});\n\n    store.put({title: \"Quarry Memories\", author: \"Fred\", isbn: 123456});\n    store.put({title: \"Water Buffaloes\", author: \"Fred\", isbn: 234567});\n    store.put({title: \"Bedrock Nights\", author: \"Barney\", isbn: 345678});\n}\nrequest.onsuccess = function (event) {\n    var db = event.target.result;\n\n    var tx = db.transaction(\"books\");\n\n    tx.objectStore(\"books\").index(\"by_title\").get(\"Quarry Memories\").addEventListener(\"success\", function (event) {\n        console.log(\"From index:\", event.target.result);\n    });\n    tx.objectStore(\"books\").openCursor(IDBKeyRange.lowerBound(200000)).onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n            console.log(\"From cursor:\", cursor.value);\n            cursor.continue();\n        }\n    };\n    tx.oncomplete = function () {\n        console.log(\"All done!\");\n    };\n};\n```\n\nAlternatively, you can explicitly import individual IndexedDB variables:\n\n```js\nimport {\n    indexedDB,\n    IDBCursor,\n    IDBCursorWithValue,\n    IDBDatabase,\n    IDBFactory,\n    IDBIndex,\n    IDBKeyRange,\n    IDBObjectStore,\n    IDBOpenDBRequest,\n    IDBRequest,\n    IDBTransaction,\n    IDBVersionChangeEvent,\n} from \"fake-indexeddb\";\n\n// The rest is the same as above.\n```\n\nLike any imported variable, you can rename it if you want, for instance if you don't want to conflict with built-in IndexedDB variables:\n\n```js\nimport {\n    indexedDB as fakeIndexedDB,\n} from \"fake-indexeddb\";\n```\n\n### TypeScript\n\nAs of version 4, fake-indexeddb includes TypeScript types. As you can see in types.d.ts, it's just using TypeScript's built-in IndexedDB types, rather than generating types from the fake-indexeddb code base. The reason I did this is for compatibility with your application code that may already be using TypeScript's IndexedDB types, so if I used something different for fake-indexeddb, it could lead to spurious type errors. In theory this could lead to other errors if there are differences between Typescript's IndexedDB types and fake-indexeddb's API, but currently I'm not aware of any difference. See [issue #23](https://github.com/dumbmatter/fakeIndexedDB/issues/23) for more discussion.\n\n### Dexie and other IndexedDB API wrappers\n\nIf you import `fake-indexeddb/auto` before calling `new Dexie()`, it should work:\n\n```js\nimport Dexie from \"dexie\";\nimport \"fake-indexeddb/auto\";\n\nconst db = new Dexie(\"MyDatabase\");\n```\n\nThe same likely holds true for other IndexedDB API wrappers like idb.\n\nAlternatively, if you don't want to modify the global scope, then you need to explicitly pass the objects to Dexie:\n\n```js\nimport Dexie from \"dexie\";\nimport { indexedDB, IDBKeyRange } from \"fake-indexeddb\";\n\nconst db = new Dexie(\"MyDatabase\", { indexedDB: indexedDB, IDBKeyRange: IDBKeyRange });\n```\n\n### Jest\n\nTo use fake-indexeddb in a single Jest test suite, require `fake-indexeddb/auto` at the beginning of the test\nfile, as described above.\n\nTo use it on all Jest tests without having to include it in each file, add the auto setup script to the `setupFiles` in your Jest config:\n\n```json\n{\n    ...\n    \"setupFiles\": [\n        \"fake-indexeddb/auto.cjs\"\n    ]\n}\n```\n\nThat's \"auto.cjs\" rather than just \"auto\" to make sure it picks up the CommonJS version. Otherwise it would use the ESM version, which Jest does not support without [some extra configuration](https://jestjs.io/docs/ecmascript-modules).\n\n### Wiping/resetting the indexedDB for a fresh state\n\nIf you are keeping your tests completely isolated you might want to \"reset\" the state of the mocked indexedDB. You can do this by creating a new instance of `IDBFactory`, which lets you have a totally fresh start.\n\n```\nimport \"fake-indexeddb/auto\";\nimport { IDBFactory } from \"fake-indexeddb\";\n\n// Whenever you want a fresh indexedDB\nindexedDB = new IDBFactory();\n```\n\n### With PhantomJS and other really old environments\n\nPhantomJS (and other really old environments) are missing tons of modern JavaScript features. In fact, that may be why you use fake-indexeddb in such an environment! Prior to v3.0.0, fake-indexeddb imported core-js and automatically applied its polyfills. However, since most fake-indexeddb users are not using really old environments, I got rid of that runtime dependency in v3.0.0. To work around that, you can import core-js yourself before you import fake-indexeddb, like:\n\n```js\nimport \"core-js/stable\";\nimport \"fake-indexeddb/auto\";\n```\n\n## Quality\n\nHere's a comparison of fake-indexeddb and real browser IndexedDB implementations on [the W3C IndexedDB test suite](https://github.com/w3c/web-platform-tests/tree/master/IndexedDB) as of March 18, 2019:\n\n| Implementation       | Percentage of files that pass completely |\n| -------------------- | ---------------------------------------- |\n| Chrome 73            | 99%                                      |\n| Firefox 65           | 97%                                      |\n| Safari 12            | 92%                                      |\n| fake-indexeddb 3.0.0 | 87%                                      |\n| Edge 18              | 61%                                      |\n\nFor browsers, I ran http://w3c-test.org/tools/runner/index.html and counted the passes. For fake-indexeddb, I ran `npm run test-w3c`.\n\n87% is pretty good, right? Especially considering that fake-indexeddb runs in Node.js where failure is guaranteed for tests involving browser APIs like Web Workers. There are definitley still some weak points of fake-indexeddb, most of which are described in `src/test/web-platform-tests/run-all.js`. Your app will probably run fine, though.\n\n## Potential applications:\n\n1. Use as a mock database in unit tests.\n\n2. Use the same API in Node.js and in the browser.\n\n3. Support IndexedDB in old or crappy browsers.\n\n4. Somehow use it within a caching layer on top of IndexedDB in the browser, since IndexedDB can be kind of slow.\n\n5. Abstract the core database functions out, so what is left is a shell that allows the IndexedDB API to easily sit on top of many different backends.\n\n6. Serve as a playground for experimenting with IndexedDB.\n\n## License\n\nApache 2.0\n",
      "readmeFilename": "README.md",
      "gitHead": "ca9178015c7ea206844ad7d2d6dbe87e48a08a24",
      "_id": "fake-indexeddb@4.0.0-beta.6",
      "_nodeVersion": "18.4.0",
      "_npmVersion": "8.12.1",
      "dist": {
        "integrity": "sha512-LQg9kPqNpOcBIxMsuhkwBqP+SO3uUQfZQVVdjPgN915v0kYrVodWl8w9rn2+tGhGtuDSL8HeDL30NDYzOG0QYA==",
        "shasum": "d382cdd95c491b64d82c6571677a24bc2aafae19",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-4.0.0-beta.6.tgz",
        "fileCount": 100,
        "unpackedSize": 260138,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGzka74WRNaDgfeD0iHD/vMpJXswoJgYzz4Ksh21FHRXAiEAql2Gorl2UAyJ78qU8miF8QdoAZ0AV2/uSCcrxOnYhDQ="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiwIt6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrrPg/8D560t6qBL93EDtSMoEiYLqdmgOeg4Gnu5aspd00CdAvThtlS\r\nkwt7IBYKnjJ8tO8ajd30Ivb2JBTjK0hYjIgBrYJUHeGEEMayDxOQaGdiRqxE\r\nQZGgdB7qqVG1REImzHv6Zp+29nSAX69etv89ZnZEGQEpTxU+lDRxL9qN7gDP\r\nWze5rUDOXyHCesG+18D9J8HklNG7+Ji5yPuBoTW8ufyaIeVOgpWar3PGSHzv\r\nqs8C/NF2rmKoGyEzy09N0KiKqDgcZRgCWSqkC1PaHn1wLzvh1Q6xhx8ZvKrx\r\nEzPvYGx8kaptoHqR6XhdqSx1wPgf6zMoZUMv6r4qjPeSEj7TxsbRHth60asC\r\nav4LREQeDJ9dzNBBpDKQ7Uj9BiMaZs3XVPqJaWmEbu4w+f+KTGTk4QPc60ll\r\nwWqb5Fx+8XxExo8VkYL5nN0rofThFazTlLa1tuUlI+k+/0AOwwyg0shkjnxa\r\nI1H6LXAfyxlH2JR91dz3jHSGzz8ZxGVofvU/9o2g/kUCRpO7DEUU1hAT2s37\r\nsgx04gpG5xZ5OmEX1ip0XZVboK9eQW9lBoWOoXH5NuefPbDQgO6DD9oiQxbB\r\ncJBR4Zdutrd7Q1/1BQ6/rtZ7ihRlJcJrs45/X54qwo3ZOV/p9OcEFD+cJwdi\r\niAIjfP7wn9O3ZNuk10jYajS+2LR70BOGOec=\r\n=M5kf\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_4.0.0-beta.6_1656785786220_0.4226463907866451"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0": {
      "name": "fake-indexeddb",
      "version": "4.0.0",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/cjs/index.js",
      "module": "./build/esm/index.js",
      "exports": {
        ".": {
          "import": "./build/esm/index.js",
          "require": "./build/cjs/index.js"
        },
        "./auto": {
          "import": "./auto/index.mjs",
          "require": "./auto/index.js"
        },
        "./auto.cjs": "./auto.cjs",
        "./lib/fakeIndexedDB": {
          "import": "./build/esm/fakeIndexedDB.js",
          "require": "./build/cjs/fakeIndexedDB.js"
        },
        "./lib/FDBCursor": {
          "import": "./build/esm/FDBCursor.js",
          "require": "./build/cjs/FDBCursor.js"
        },
        "./lib/FDBCursorWithValue": {
          "import": "./build/esm/FDBCursorWithValue.js",
          "require": "./build/cjs/FDBCursorWithValue.js"
        },
        "./lib/FDBDatabase": {
          "import": "./build/esm/FDBDatabase.js",
          "require": "./build/cjs/FDBDatabase.js"
        },
        "./lib/FDBFactory": {
          "import": "./build/esm/FDBFactory.js",
          "require": "./build/cjs/FDBFactory.js"
        },
        "./lib/FDBIndex": {
          "import": "./build/esm/FDBIndex.js",
          "require": "./build/cjs/FDBIndex.js"
        },
        "./lib/FDBKeyRange": {
          "import": "./build/esm/FDBKeyRange.js",
          "require": "./build/cjs/FDBKeyRange.js"
        },
        "./lib/FDBObjectStore": {
          "import": "./build/esm/FDBObjectStore.js",
          "require": "./build/cjs/FDBObjectStore.js"
        },
        "./lib/FDBOpenDBRequest": {
          "import": "./build/esm/FDBOpenDBRequest.js",
          "require": "./build/cjs/FDBOpenDBRequest.js"
        },
        "./lib/FDBRequest": {
          "import": "./build/esm/FDBRequest.js",
          "require": "./build/cjs/FDBRequest.js"
        },
        "./lib/FDBTransaction": {
          "import": "./build/esm/FDBTransaction.js",
          "require": "./build/cjs/FDBTransaction.js"
        },
        "./lib/FDBVersionChangeEvent": {
          "import": "./build/esm/FDBVersionChangeEvent.js",
          "require": "./build/cjs/FDBVersionChangeEvent.js"
        }
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && yarn run build-esm && yarn run build-cjs",
        "build-cjs": "BABEL_ENV=cjs babel src --out-dir build/cjs --extensions \".ts\" && echo '{\"type\":\"commonjs\"}' > build/cjs/package.json",
        "build-esm": "babel src --out-dir build/esm --extensions \".ts\"",
        "prepublishOnly": "yarn run build && rm -rf build/cjs/test && rm -rf build/esm/test",
        "lint": "tslint  'src/**/*.ts' && yarn run tsc",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-jest": "node --experimental-vm-modules node_modules/.bin/jest test/jest.js",
        "test-mocha": "mocha --timeout 10000 build/esm/test/fakeIndexedDB",
        "build-qunit": "mkdir build/esm/test/indexedDBmock && cp src/test/indexedDBmock/* build/esm/test/indexedDBmock && browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/esm/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ]",
        "test-qunit": "yarn run build-qunit && node-qunit-phantomjs build/esm/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "rm -rf build && yarn run lint && yarn run build && yarn run test-jest && node test/test.js && node test/dexie.js && yarn run test-w3c && yarn run test-mocha && yarn run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^3.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.18.6",
        "@babel/core": "^7.18.6",
        "@babel/plugin-transform-modules-commonjs": "^7.18.6",
        "@babel/preset-env": "^7.18.6",
        "@babel/preset-typescript": "^7.18.6",
        "@types/mocha": "^9.1.1",
        "@types/node": "^18.0.0",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.23.3",
        "dexie": "^3.2.2",
        "glob": "^8.0.3",
        "husky": "^7.0.4",
        "jest": "^28.1.2",
        "lint-staged": "^12.5.0",
        "mocha": "^9.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^2.7.1",
        "qunitjs": "^1.23.1",
        "tslint": "^6.1.3",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "4.7.4"
      },
      "lint-staged": {
        "*.{js,json,ts}": "prettier --write"
      },
      "gitHead": "b56339981fdfbdd8946f113de3a77da3fb83a624",
      "_id": "fake-indexeddb@4.0.0",
      "_nodeVersion": "18.4.0",
      "_npmVersion": "8.12.1",
      "dist": {
        "integrity": "sha512-oCfWSJ/qvQn1XPZ8SHX6kY3zr1t+bN7faZ/lltGY0SBGhFOPXnWf0+pbO/MOAgfMx6khC2gK3S/bvAgQpuQHDQ==",
        "shasum": "1dfb2023a3be175e35a6d84975218b432041934d",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-4.0.0.tgz",
        "fileCount": 100,
        "unpackedSize": 260131,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDEMAkuOFOUSbTUmdGmrJd3jK7i7mT7IoL74w00llLkPgIgZ1ewCGPmnVlpiMjypsDKewoQDdoZ9bocgzToTnATmGA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiwJN+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoAXxAAo02+rEEWy7d/sRovlQc0scTahTgirOM+JFQY++Wzb0ZAAuju\r\nxnKVAVrqGgeZydsVfQEPOUBOvTOohJWaUSH7uA+tSwnkcuA0GtaIGEy4C+YP\r\nn4NRlmZRi3LiJNzzNOPBH7oojXuwTZzhlcN4xxlL070jfl90Gc5h2+J/IbOA\r\nMsnoh1tnG4S41Wd5y4tWHF9+c0XG9bP5N+2h3TN/C+eWWPrY50f2s4MVeNyz\r\naVeahy4d/RKLrGYIwN/05A2qb2rk0eWintGgImLkSigZ8k0u6ezTySKiJXoO\r\n2/BUrzxJ01x9e1qk+g7jg3ugAOyCrwCBYKbt+42s1eOCZS4ud+GOnxJ3X1Zv\r\nKXFORuVbuCKMdQCoq0y/c1Zbl1A63UQDhKOdDIcwuSeUJhQDHQNwq+hrTSwy\r\ndoBnvnfzWKY1KnFuow685gADLVPmEeP6E8AwEyE2BN0q4FCFqk4GuE6PFRaG\r\nx4E2vxwIyuEztbPZnLs0xplSlcVQ8kyVj+M23Dnf1cWopmTiOpwbSrqk9u7O\r\nMkDIIvbrDKlRzE8FRO+RrOqoHqfUttTYWUt6UbS4C/d+ttPJhqpoxZXYXXRQ\r\n4dvzisX/VVZ+YVl8Bwk1dUU3Q9fIzYraGlBivi5cNHgCrjplkTdbfDRiR7Nm\r\npJeCUzyLEUjJXdOZwZpFGrWmubaAOoWv2B0=\r\n=el95\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_4.0.0_1656787837922_0.887133583437411"
      },
      "_hasShrinkwrap": false
    },
    "4.0.1": {
      "name": "fake-indexeddb",
      "version": "4.0.1",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/cjs/index.js",
      "module": "./build/esm/index.js",
      "exports": {
        ".": {
          "import": "./build/esm/index.js",
          "require": "./build/cjs/index.js"
        },
        "./auto": {
          "import": "./auto/index.mjs",
          "require": "./auto/index.js"
        },
        "./auto.cjs": "./auto.cjs",
        "./lib/fakeIndexedDB": {
          "import": "./build/esm/fakeIndexedDB.js",
          "require": "./build/cjs/fakeIndexedDB.js"
        },
        "./lib/FDBCursor": {
          "import": "./build/esm/FDBCursor.js",
          "require": "./build/cjs/FDBCursor.js"
        },
        "./lib/FDBCursorWithValue": {
          "import": "./build/esm/FDBCursorWithValue.js",
          "require": "./build/cjs/FDBCursorWithValue.js"
        },
        "./lib/FDBDatabase": {
          "import": "./build/esm/FDBDatabase.js",
          "require": "./build/cjs/FDBDatabase.js"
        },
        "./lib/FDBFactory": {
          "import": "./build/esm/FDBFactory.js",
          "require": "./build/cjs/FDBFactory.js"
        },
        "./lib/FDBIndex": {
          "import": "./build/esm/FDBIndex.js",
          "require": "./build/cjs/FDBIndex.js"
        },
        "./lib/FDBKeyRange": {
          "import": "./build/esm/FDBKeyRange.js",
          "require": "./build/cjs/FDBKeyRange.js"
        },
        "./lib/FDBObjectStore": {
          "import": "./build/esm/FDBObjectStore.js",
          "require": "./build/cjs/FDBObjectStore.js"
        },
        "./lib/FDBOpenDBRequest": {
          "import": "./build/esm/FDBOpenDBRequest.js",
          "require": "./build/cjs/FDBOpenDBRequest.js"
        },
        "./lib/FDBRequest": {
          "import": "./build/esm/FDBRequest.js",
          "require": "./build/cjs/FDBRequest.js"
        },
        "./lib/FDBTransaction": {
          "import": "./build/esm/FDBTransaction.js",
          "require": "./build/cjs/FDBTransaction.js"
        },
        "./lib/FDBVersionChangeEvent": {
          "import": "./build/esm/FDBVersionChangeEvent.js",
          "require": "./build/cjs/FDBVersionChangeEvent.js"
        }
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && yarn run build-esm && yarn run build-cjs",
        "build-cjs": "BABEL_ENV=cjs babel src --out-dir build/cjs --extensions \".ts\" && echo '{\"type\":\"commonjs\"}' > build/cjs/package.json",
        "build-esm": "babel src --out-dir build/esm --extensions \".ts\"",
        "prepublishOnly": "yarn run build && rm -rf build/cjs/test && rm -rf build/esm/test",
        "lint": "tslint  'src/**/*.ts' && yarn run tsc",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-jest": "node --experimental-vm-modules node_modules/.bin/jest test/jest.js",
        "test-mocha": "mocha --timeout 10000 build/esm/test/fakeIndexedDB",
        "build-qunit": "mkdir build/esm/test/indexedDBmock && cp src/test/indexedDBmock/* build/esm/test/indexedDBmock && browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/esm/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ]",
        "test-qunit": "yarn run build-qunit && node-qunit-phantomjs build/esm/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "rm -rf build && yarn run lint && yarn run build && yarn run test-jest && node test/test.js && node test/dexie.js && yarn run test-w3c && yarn run test-mocha && yarn run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^3.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.18.6",
        "@babel/core": "^7.18.6",
        "@babel/plugin-transform-modules-commonjs": "^7.18.6",
        "@babel/preset-env": "^7.18.6",
        "@babel/preset-typescript": "^7.18.6",
        "@types/mocha": "^9.1.1",
        "@types/node": "^18.0.0",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.23.3",
        "dexie": "^3.2.2",
        "glob": "^8.0.3",
        "husky": "^7.0.4",
        "jest": "^28.1.2",
        "lint-staged": "^12.5.0",
        "mocha": "^9.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^2.7.1",
        "qunitjs": "^1.23.1",
        "tslint": "^6.1.3",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "4.7.4"
      },
      "lint-staged": {
        "*.{js,json,ts}": "prettier --write"
      },
      "gitHead": "a92a72d67296328ab2067ad0e3403b209a159e15",
      "_id": "fake-indexeddb@4.0.1",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-hFRyPmvEZILYgdcLBxVdHLik4Tj3gDTu/g7s9ZDOiU3sTNiGx+vEu1ri/AMsFJUZ/1sdRbAVrEcKndh3sViBcA==",
        "shasum": "09bb2468e21d0832b2177e894765fb109edac8fb",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-4.0.1.tgz",
        "fileCount": 100,
        "unpackedSize": 260074,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGdG/WDtFS5q09C0voTWGSJ0RuT5KTmDGU2UnTQF4nXUAiBgj8OZm6Z88wJXh3Zjq+qfq2NEz4x0Ka9Hbh8WnrTN8A=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjhlL8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmogvg/8CIsM5MT9b33GQtHF7s+XbXGIwbXmZqdm2JrR5Oqjf5H1chQQ\r\nVkKNdL6TttxLfWtP5int0Ev99lsDIfz+vr+6+y3WTi7TvS4tF3LL5zAzLEaz\r\nTewsdIo8Esmk4+lUKYsrmdeuA7hg9nZywpNJ69B0tBqebm1ZEF+4fVRxBKCC\r\nfDo6L757qetgu77difG8+EMTI+I40A2Uz66gR2Cvt1FxkNr0115VqQnj1j/v\r\n1+rZKnX7YmjfqmEyBoiyYJBJMT1/pFEcCyjZLvCsr1ad5GYe69aefwBgJEGz\r\ntoy+O+hHW8wGjucA+u9T/kMChy4TfhS8oMdLOTJ6L4buACdHKa6WZhXAtNDN\r\n0Lv2oqBTlLDTowICtKu3mJeAps1P05CHxkBs+BcmidTcwKsUujRyiVsUSTyk\r\n6JTV4noqe6cFYgKi9l4Hbz55G5vwTwlLeRHN9UGNXSfKLfFu+yWl+gRPJNjp\r\n+6uPspw1HfTZx8l3FdExvXZG/YIeQUciE9CzxWunwPc9KrPo90f66mZKKjlB\r\njCt5FOYzWEZbB8KOb5LO2rZZgqJ1G8svAoDCjlVb76fpZJqB7FbUAC5Nltls\r\nS/MV0J6agR9LEIF+FOGa4pWY5EqUhhp8imwgyjsEd0Du0a0wvK9WrW7AgrZU\r\nOWBiU9YnHikuGE7uj7NkKvR2FyJq36ns8qY=\r\n=hS8a\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_4.0.1_1669747452820_0.9427642840055552"
      },
      "_hasShrinkwrap": false
    },
    "4.0.2": {
      "name": "fake-indexeddb",
      "version": "4.0.2",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/cjs/index.js",
      "module": "./build/esm/index.js",
      "exports": {
        ".": {
          "types": "./types.d.ts",
          "import": "./build/esm/index.js",
          "require": "./build/cjs/index.js"
        },
        "./auto": {
          "import": "./auto/index.mjs",
          "require": "./auto/index.js"
        },
        "./lib/fakeIndexedDB": {
          "import": "./build/esm/fakeIndexedDB.js",
          "require": "./build/cjs/fakeIndexedDB.js"
        },
        "./lib/FDBCursor": {
          "import": "./build/esm/FDBCursor.js",
          "require": "./build/cjs/FDBCursor.js"
        },
        "./lib/FDBCursorWithValue": {
          "import": "./build/esm/FDBCursorWithValue.js",
          "require": "./build/cjs/FDBCursorWithValue.js"
        },
        "./lib/FDBDatabase": {
          "import": "./build/esm/FDBDatabase.js",
          "require": "./build/cjs/FDBDatabase.js"
        },
        "./lib/FDBFactory": {
          "import": "./build/esm/FDBFactory.js",
          "require": "./build/cjs/FDBFactory.js"
        },
        "./lib/FDBIndex": {
          "import": "./build/esm/FDBIndex.js",
          "require": "./build/cjs/FDBIndex.js"
        },
        "./lib/FDBKeyRange": {
          "import": "./build/esm/FDBKeyRange.js",
          "require": "./build/cjs/FDBKeyRange.js"
        },
        "./lib/FDBObjectStore": {
          "import": "./build/esm/FDBObjectStore.js",
          "require": "./build/cjs/FDBObjectStore.js"
        },
        "./lib/FDBOpenDBRequest": {
          "import": "./build/esm/FDBOpenDBRequest.js",
          "require": "./build/cjs/FDBOpenDBRequest.js"
        },
        "./lib/FDBRequest": {
          "import": "./build/esm/FDBRequest.js",
          "require": "./build/cjs/FDBRequest.js"
        },
        "./lib/FDBTransaction": {
          "import": "./build/esm/FDBTransaction.js",
          "require": "./build/cjs/FDBTransaction.js"
        },
        "./lib/FDBVersionChangeEvent": {
          "import": "./build/esm/FDBVersionChangeEvent.js",
          "require": "./build/cjs/FDBVersionChangeEvent.js"
        }
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && yarn run build-esm && yarn run build-cjs",
        "build-cjs": "BABEL_ENV=cjs babel src --out-dir build/cjs --extensions \".ts\" && echo '{\"type\":\"commonjs\"}' > build/cjs/package.json",
        "build-esm": "babel src --out-dir build/esm --extensions \".ts\"",
        "prepublishOnly": "yarn run build && rm -rf build/cjs/test && rm -rf build/esm/test",
        "lint": "tslint  'src/**/*.ts' && yarn run tsc",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-jest": "node --experimental-vm-modules node_modules/.bin/jest test/jest.js",
        "test-mocha": "mocha --timeout 10000 build/esm/test/fakeIndexedDB",
        "build-qunit": "mkdir build/esm/test/indexedDBmock && cp src/test/indexedDBmock/* build/esm/test/indexedDBmock && browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/esm/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ]",
        "test-qunit": "yarn run build-qunit && node-qunit-phantomjs build/esm/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "rm -rf build && yarn run lint && yarn run build && yarn run test-jest && node test/test.js && node test/dexie.js && yarn run test-w3c && yarn run test-mocha && yarn run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "dependencies": {
        "realistic-structured-clone": "^3.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.18.6",
        "@babel/core": "^7.18.6",
        "@babel/plugin-transform-modules-commonjs": "^7.18.6",
        "@babel/preset-env": "^7.18.6",
        "@babel/preset-typescript": "^7.18.6",
        "@types/mocha": "^9.1.1",
        "@types/node": "^18.0.0",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.23.3",
        "dexie": "^3.2.2",
        "glob": "^8.0.3",
        "husky": "^7.0.4",
        "jest": "^28.1.2",
        "lint-staged": "^12.5.0",
        "mocha": "^9.2.2",
        "node-qunit-phantomjs": "^1.6.3",
        "prettier": "^2.7.1",
        "qunitjs": "^1.23.1",
        "tslint": "^6.1.3",
        "tslint-config-prettier": "^1.15.0",
        "typescript": "4.7.4"
      },
      "lint-staged": {
        "*.{js,json,ts}": "prettier --write"
      },
      "gitHead": "92256e563e40e687cf1ef642a6feabe215dd3bde",
      "_id": "fake-indexeddb@4.0.2",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-SdTwEhnakbgazc7W3WUXOJfGmhH0YfG4d+dRPOFoYDRTL6U5t8tvrmkf2W/C3W1jk2ylV7Wrnj44RASqpX/lEw==",
        "shasum": "e7a884158fa576e00f03e973b9874619947013e4",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-4.0.2.tgz",
        "fileCount": 100,
        "unpackedSize": 260071,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCR4dwRID56mTNZfkV917yqwk6P+Vdc4eR9qiyL1RyMhwIgCK04qE/+rLeqIDrkFGFur0SvBG5B6nRwDPW7EOc7LDs="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_4.0.2_1689350180574_0.8653505846673053"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0": {
      "name": "fake-indexeddb",
      "version": "5.0.0",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/cjs/index.js",
      "module": "./build/esm/index.js",
      "exports": {
        ".": {
          "types": "./types.d.ts",
          "import": "./build/esm/index.js",
          "require": "./build/cjs/index.js"
        },
        "./auto": {
          "import": "./auto/index.mjs",
          "require": "./auto/index.js"
        },
        "./lib/fakeIndexedDB": {
          "import": "./build/esm/fakeIndexedDB.js",
          "require": "./build/cjs/fakeIndexedDB.js"
        },
        "./lib/FDBCursor": {
          "import": "./build/esm/FDBCursor.js",
          "require": "./build/cjs/FDBCursor.js"
        },
        "./lib/FDBCursorWithValue": {
          "import": "./build/esm/FDBCursorWithValue.js",
          "require": "./build/cjs/FDBCursorWithValue.js"
        },
        "./lib/FDBDatabase": {
          "import": "./build/esm/FDBDatabase.js",
          "require": "./build/cjs/FDBDatabase.js"
        },
        "./lib/FDBFactory": {
          "import": "./build/esm/FDBFactory.js",
          "require": "./build/cjs/FDBFactory.js"
        },
        "./lib/FDBIndex": {
          "import": "./build/esm/FDBIndex.js",
          "require": "./build/cjs/FDBIndex.js"
        },
        "./lib/FDBKeyRange": {
          "import": "./build/esm/FDBKeyRange.js",
          "require": "./build/cjs/FDBKeyRange.js"
        },
        "./lib/FDBObjectStore": {
          "import": "./build/esm/FDBObjectStore.js",
          "require": "./build/cjs/FDBObjectStore.js"
        },
        "./lib/FDBOpenDBRequest": {
          "import": "./build/esm/FDBOpenDBRequest.js",
          "require": "./build/cjs/FDBOpenDBRequest.js"
        },
        "./lib/FDBRequest": {
          "import": "./build/esm/FDBRequest.js",
          "require": "./build/cjs/FDBRequest.js"
        },
        "./lib/FDBTransaction": {
          "import": "./build/esm/FDBTransaction.js",
          "require": "./build/cjs/FDBTransaction.js"
        },
        "./lib/FDBVersionChangeEvent": {
          "import": "./build/esm/FDBVersionChangeEvent.js",
          "require": "./build/cjs/FDBVersionChangeEvent.js"
        }
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && npm run build-esm && npm run build-cjs",
        "build-cjs": "BABEL_ENV=cjs babel src --out-dir build/cjs --extensions \".ts\" && echo '{\"type\":\"commonjs\"}' > build/cjs/package.json",
        "build-esm": "babel src --out-dir build/esm --extensions \".ts\"",
        "prepublishOnly": "npm run build && rm -rf build/cjs/test && rm -rf build/esm/test",
        "lint": "eslint  'src/**/*.ts' && tsc",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-jest": "node --experimental-vm-modules node_modules/.bin/jest test/jest.js",
        "test-mocha": "mocha --timeout 10000 build/esm/test/fakeIndexedDB",
        "build-qunit": "mkdir build/esm/test/indexedDBmock && cp src/test/indexedDBmock/* build/esm/test/indexedDBmock && browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/esm/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ]",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/esm/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "rm -rf build && npm run lint && npm run build && npm run test-jest && node test/test.js && node test/dexie.js && npm run test-w3c && npm run test-mocha && npm run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@babel/cli": "^7.23.0",
        "@babel/core": "^7.23.2",
        "@babel/plugin-transform-modules-commonjs": "^7.23.0",
        "@babel/preset-env": "^7.23.2",
        "@babel/preset-typescript": "^7.23.2",
        "@types/mocha": "^10.0.2",
        "@types/node": "^20.8.5",
        "@typescript-eslint/eslint-plugin": "^6.7.5",
        "@typescript-eslint/parser": "^6.7.5",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.33.0",
        "dexie": "^3.2.4",
        "eslint": "^8.51.0",
        "eslint-config-prettier": "^9.0.0",
        "glob": "^10.3.10",
        "husky": "^8.0.3",
        "jest": "^29.7.0",
        "lint-staged": "^14.0.1",
        "mocha": "^10.2.0",
        "node-qunit-phantomjs": "^2.1.1",
        "prettier": "^3.0.3",
        "qunitjs": "^1.23.1",
        "typescript": "^5.2.2"
      },
      "lint-staged": {
        "*.{js,json,ts,cjs,mjs}": "prettier --write"
      },
      "gitHead": "034293e73689c55a6abc90e8e8f2a2c3a2b62eaa",
      "_id": "fake-indexeddb@5.0.0",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-hGMsl73XgJAk5OtC8hFDSLUVzJ3Z1/C06YpFwI7DzCsEsmH5Mvkxplv3PK6uUL7XCYVBTzayp/4gD+cp7Qi8xQ==",
        "shasum": "c9f394d6d36db62760ad596ebec97ba3d700c95b",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-5.0.0.tgz",
        "fileCount": 98,
        "unpackedSize": 256068,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF6dq9obpN9BUib9JEkI4FXrZdDHD8gHp2ZgoMMjZC1rAiBTfwJxXy+GwLJHrw1/doqW969PqDED7vEJ+oW/KhvejQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_5.0.0_1697224113872_0.001506130849876719"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1": {
      "name": "fake-indexeddb",
      "version": "5.0.1",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/cjs/index.js",
      "module": "./build/esm/index.js",
      "exports": {
        ".": {
          "types": "./types.d.ts",
          "import": "./build/esm/index.js",
          "require": "./build/cjs/index.js"
        },
        "./auto": {
          "import": "./auto/index.mjs",
          "require": "./auto/index.js"
        },
        "./lib/fakeIndexedDB": {
          "import": "./build/esm/fakeIndexedDB.js",
          "require": "./build/cjs/fakeIndexedDB.js"
        },
        "./lib/FDBCursor": {
          "import": "./build/esm/FDBCursor.js",
          "require": "./build/cjs/FDBCursor.js"
        },
        "./lib/FDBCursorWithValue": {
          "import": "./build/esm/FDBCursorWithValue.js",
          "require": "./build/cjs/FDBCursorWithValue.js"
        },
        "./lib/FDBDatabase": {
          "import": "./build/esm/FDBDatabase.js",
          "require": "./build/cjs/FDBDatabase.js"
        },
        "./lib/FDBFactory": {
          "import": "./build/esm/FDBFactory.js",
          "require": "./build/cjs/FDBFactory.js"
        },
        "./lib/FDBIndex": {
          "import": "./build/esm/FDBIndex.js",
          "require": "./build/cjs/FDBIndex.js"
        },
        "./lib/FDBKeyRange": {
          "import": "./build/esm/FDBKeyRange.js",
          "require": "./build/cjs/FDBKeyRange.js"
        },
        "./lib/FDBObjectStore": {
          "import": "./build/esm/FDBObjectStore.js",
          "require": "./build/cjs/FDBObjectStore.js"
        },
        "./lib/FDBOpenDBRequest": {
          "import": "./build/esm/FDBOpenDBRequest.js",
          "require": "./build/cjs/FDBOpenDBRequest.js"
        },
        "./lib/FDBRequest": {
          "import": "./build/esm/FDBRequest.js",
          "require": "./build/cjs/FDBRequest.js"
        },
        "./lib/FDBTransaction": {
          "import": "./build/esm/FDBTransaction.js",
          "require": "./build/cjs/FDBTransaction.js"
        },
        "./lib/FDBVersionChangeEvent": {
          "import": "./build/esm/FDBVersionChangeEvent.js",
          "require": "./build/cjs/FDBVersionChangeEvent.js"
        }
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && npm run build-esm && npm run build-cjs",
        "build-cjs": "BABEL_ENV=cjs babel src --out-dir build/cjs --extensions \".ts\" && echo '{\"type\":\"commonjs\"}' > build/cjs/package.json",
        "build-esm": "babel src --out-dir build/esm --extensions \".ts\"",
        "prepublishOnly": "npm run build && rm -rf build/cjs/test && rm -rf build/esm/test",
        "lint": "eslint  'src/**/*.ts' && tsc",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-jest": "node --experimental-vm-modules node_modules/.bin/jest test/jest.js",
        "test-mocha": "mocha --timeout 10000 build/esm/test/fakeIndexedDB",
        "build-qunit": "mkdir build/esm/test/indexedDBmock && cp src/test/indexedDBmock/* build/esm/test/indexedDBmock && browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/esm/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ]",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/esm/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "rm -rf build && npm run lint && npm run build && npm run test-jest && node test/test.js && node test/dexie.js && npm run test-w3c && npm run test-mocha && npm run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@babel/cli": "^7.23.0",
        "@babel/core": "^7.23.2",
        "@babel/plugin-transform-modules-commonjs": "^7.23.0",
        "@babel/preset-env": "^7.23.2",
        "@babel/preset-typescript": "^7.23.2",
        "@types/mocha": "^10.0.2",
        "@types/node": "^20.8.5",
        "@typescript-eslint/eslint-plugin": "^6.7.5",
        "@typescript-eslint/parser": "^6.7.5",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.33.0",
        "dexie": "^3.2.4",
        "eslint": "^8.51.0",
        "eslint-config-prettier": "^9.0.0",
        "glob": "^10.3.10",
        "husky": "^8.0.3",
        "jest": "^29.7.0",
        "lint-staged": "^14.0.1",
        "mocha": "^10.2.0",
        "node-qunit-phantomjs": "^2.1.1",
        "prettier": "^3.0.3",
        "qunitjs": "^1.23.1",
        "typescript": "^5.2.2"
      },
      "lint-staged": {
        "*.{js,json,ts,cjs,mjs}": "prettier --write"
      },
      "gitHead": "b5a7cb2ddd43014c2a3fec410bb65552c2ed5a28",
      "_id": "fake-indexeddb@5.0.1",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-vxybH29Owtc6khV/Usy47B1g+eKwyhFiX8nwpCC4td320jvwrKQDH6vNtcJZgUzVxmfsSIlHzLKQzT76JMCO7A==",
        "shasum": "1111a2b6981eaaad03027d816a8536a940d36cee",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-5.0.1.tgz",
        "fileCount": 98,
        "unpackedSize": 258428,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBZhuH4hdUvQNnUQdfbOZQa2PLrYUuS0/KFQqtYXmeyIAiEAnvQCr6ZlILVEQd3u+ORneBQxttT/mvv+z4uSFV4G6ew="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_5.0.1_1698276532044_0.38520882062198125"
      },
      "_hasShrinkwrap": false
    },
    "5.0.2": {
      "name": "fake-indexeddb",
      "version": "5.0.2",
      "description": "Fake IndexedDB: a pure JS in-memory implementation of the IndexedDB API",
      "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
      "repository": {
        "type": "git",
        "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
      },
      "bugs": {
        "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
      },
      "keywords": [
        "indexeddb",
        "datastore",
        "database",
        "embedded",
        "nosql",
        "in-memory",
        "polyfill",
        "shim"
      ],
      "type": "module",
      "main": "./build/cjs/index.js",
      "module": "./build/esm/index.js",
      "exports": {
        ".": {
          "types": "./types.d.ts",
          "import": "./build/esm/index.js",
          "require": "./build/cjs/index.js"
        },
        "./auto": {
          "import": "./auto/index.mjs",
          "require": "./auto/index.js"
        },
        "./lib/fakeIndexedDB": {
          "import": "./build/esm/fakeIndexedDB.js",
          "require": "./build/cjs/fakeIndexedDB.js"
        },
        "./lib/FDBCursor": {
          "import": "./build/esm/FDBCursor.js",
          "require": "./build/cjs/FDBCursor.js"
        },
        "./lib/FDBCursorWithValue": {
          "import": "./build/esm/FDBCursorWithValue.js",
          "require": "./build/cjs/FDBCursorWithValue.js"
        },
        "./lib/FDBDatabase": {
          "import": "./build/esm/FDBDatabase.js",
          "require": "./build/cjs/FDBDatabase.js"
        },
        "./lib/FDBFactory": {
          "import": "./build/esm/FDBFactory.js",
          "require": "./build/cjs/FDBFactory.js"
        },
        "./lib/FDBIndex": {
          "import": "./build/esm/FDBIndex.js",
          "require": "./build/cjs/FDBIndex.js"
        },
        "./lib/FDBKeyRange": {
          "import": "./build/esm/FDBKeyRange.js",
          "require": "./build/cjs/FDBKeyRange.js"
        },
        "./lib/FDBObjectStore": {
          "import": "./build/esm/FDBObjectStore.js",
          "require": "./build/cjs/FDBObjectStore.js"
        },
        "./lib/FDBOpenDBRequest": {
          "import": "./build/esm/FDBOpenDBRequest.js",
          "require": "./build/cjs/FDBOpenDBRequest.js"
        },
        "./lib/FDBRequest": {
          "import": "./build/esm/FDBRequest.js",
          "require": "./build/cjs/FDBRequest.js"
        },
        "./lib/FDBTransaction": {
          "import": "./build/esm/FDBTransaction.js",
          "require": "./build/cjs/FDBTransaction.js"
        },
        "./lib/FDBVersionChangeEvent": {
          "import": "./build/esm/FDBVersionChangeEvent.js",
          "require": "./build/cjs/FDBVersionChangeEvent.js"
        }
      },
      "types": "./types.d.ts",
      "scripts": {
        "build": "rm -rf build && npm run build-esm && npm run build-cjs",
        "build-cjs": "BABEL_ENV=cjs babel src --out-dir build/cjs --extensions \".ts\" && echo '{\"type\":\"commonjs\"}' > build/cjs/package.json",
        "build-esm": "babel src --out-dir build/esm --extensions \".ts\"",
        "prepublishOnly": "npm run build && rm -rf build/cjs/test && rm -rf build/esm/test",
        "lint": "eslint  'src/**/*.ts' && tsc",
        "prettier": "prettier --write *.json  'src/**/*.{js,ts}'",
        "test-jest": "node --experimental-vm-modules node_modules/.bin/jest test/jest.js",
        "test-mocha": "mocha --timeout 10000 build/esm/test/fakeIndexedDB",
        "build-qunit": "mkdir build/esm/test/indexedDBmock && cp src/test/indexedDBmock/* build/esm/test/indexedDBmock && browserify src/test/indexedDBmock/exports-qunit-bundle.js -o build/esm/test/indexedDBmock/exports-qunit-bundle.js -t [ babelify --presets [ @babel/preset-env ] ]",
        "test-qunit": "npm run build-qunit && node-qunit-phantomjs build/esm/test/indexedDBmock/index.html",
        "test-w3c": "node src/test/web-platform-tests/run-all.js",
        "test": "rm -rf build && npm run lint && npm run build && npm run test-jest && node test/test.js && node test/dexie.js && npm run test-w3c && npm run test-mocha && npm run test-qunit",
        "prepare": "husky install"
      },
      "author": {
        "name": "Jeremy Scheff",
        "email": "jdscheff@gmail.com",
        "url": "http://dumbmatter.com/"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@babel/cli": "^7.23.0",
        "@babel/core": "^7.23.2",
        "@babel/plugin-transform-modules-commonjs": "^7.23.0",
        "@babel/preset-env": "^7.23.2",
        "@babel/preset-typescript": "^7.23.2",
        "@types/mocha": "^10.0.2",
        "@types/node": "^20.8.5",
        "@typescript-eslint/eslint-plugin": "^6.7.5",
        "@typescript-eslint/parser": "^6.7.5",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babelify": "^10.0.0",
        "browserify": "^17.0.0",
        "core-js": "^3.33.0",
        "dexie": "^3.2.4",
        "eslint": "^8.51.0",
        "eslint-config-prettier": "^9.0.0",
        "glob": "^10.3.10",
        "husky": "^8.0.3",
        "jest": "^29.7.0",
        "lint-staged": "^14.0.1",
        "mocha": "^10.2.0",
        "node-qunit-phantomjs": "^2.1.1",
        "prettier": "^3.0.3",
        "qunitjs": "^1.23.1",
        "typescript": "^5.2.2"
      },
      "lint-staged": {
        "*.{js,json,ts,cjs,mjs}": "prettier --write"
      },
      "gitHead": "373d057ee210a6d2baf107d06487ee8e3bf3d9fa",
      "_id": "fake-indexeddb@5.0.2",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-cB507r5T3D55DfclY01GLkninZLfU7HXV/mhVRTnTRm5k2u+fY7Fof2dBkr80p5t7G7dlA/G5dI87QiMdPpMCQ==",
        "shasum": "8e0b6c75c6dc6639cbb50c1aa948772147d7c93e",
        "tarball": "https://registry.npmjs.org/fake-indexeddb/-/fake-indexeddb-5.0.2.tgz",
        "fileCount": 98,
        "unpackedSize": 258722,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIC6h214eM7ECMMStTnnDbSvv4ML7L7Mjh2Rebrhq2G1JAiEA/lg6IBDs/rha3ELtsBU+KP99RI0Xr1S0Pe+MY1BZvc8="
          }
        ]
      },
      "_npmUser": {
        "name": "dumbmatter",
        "email": "jdscheff@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dumbmatter",
          "email": "jdscheff@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/fake-indexeddb_5.0.2_1703949123737_0.8324715252854289"
      },
      "_hasShrinkwrap": false
    }
  },
  "readme": "# fake-indexeddb ![Build Status](https://github.com/dumbmatter/fakeIndexedDB/actions/workflows/test.yml/badge.svg)\n\nThis is a pure JS in-memory implementation of [the IndexedDB API](https://w3c.github.io/IndexedDB/). Its main utility is for testing IndexedDB-dependent code in Node.js.\n\n## Installation\n\n```sh\nnpm install --save-dev fake-indexeddb\n```\n\n## Use\n\nFunctionally, it works exactly like IndexedDB except data is not persisted to disk.\n\nThe easiest way to use it is to import `fake-indexeddb/auto`, which will put all the IndexedDB variables in the global scope. (Both `import` and `require` are supported, use whichever you like, but the examples here are all `import`.)\n\n```js\nimport \"fake-indexeddb/auto\";\n\nvar request = indexedDB.open(\"test\", 3);\nrequest.onupgradeneeded = function () {\n    var db = request.result;\n    var store = db.createObjectStore(\"books\", {keyPath: \"isbn\"});\n    store.createIndex(\"by_title\", \"title\", {unique: true});\n\n    store.put({title: \"Quarry Memories\", author: \"Fred\", isbn: 123456});\n    store.put({title: \"Water Buffaloes\", author: \"Fred\", isbn: 234567});\n    store.put({title: \"Bedrock Nights\", author: \"Barney\", isbn: 345678});\n}\nrequest.onsuccess = function (event) {\n    var db = event.target.result;\n\n    var tx = db.transaction(\"books\");\n\n    tx.objectStore(\"books\").index(\"by_title\").get(\"Quarry Memories\").addEventListener(\"success\", function (event) {\n        console.log(\"From index:\", event.target.result);\n    });\n    tx.objectStore(\"books\").openCursor(IDBKeyRange.lowerBound(200000)).onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n            console.log(\"From cursor:\", cursor.value);\n            cursor.continue();\n        }\n    };\n    tx.oncomplete = function () {\n        console.log(\"All done!\");\n    };\n};\n```\n\nAlternatively, you can explicitly import individual IndexedDB variables:\n\n```js\nimport {\n    indexedDB,\n    IDBCursor,\n    IDBCursorWithValue,\n    IDBDatabase,\n    IDBFactory,\n    IDBIndex,\n    IDBKeyRange,\n    IDBObjectStore,\n    IDBOpenDBRequest,\n    IDBRequest,\n    IDBTransaction,\n    IDBVersionChangeEvent,\n} from \"fake-indexeddb\";\n\n// The rest is the same as above.\n```\n\nLike any imported variable, you can rename it if you want, for instance if you don't want to conflict with built-in IndexedDB variables:\n\n```js\nimport {\n    indexedDB as fakeIndexedDB,\n} from \"fake-indexeddb\";\n```\n\n### TypeScript\n\nAs of version 4, fake-indexeddb includes TypeScript types. As you can see in types.d.ts, it's just using TypeScript's built-in IndexedDB types, rather than generating types from the fake-indexeddb code base. The reason I did this is for compatibility with your application code that may already be using TypeScript's IndexedDB types, so if I used something different for fake-indexeddb, it could lead to spurious type errors. In theory this could lead to other errors if there are differences between Typescript's IndexedDB types and fake-indexeddb's API, but currently I'm not aware of any difference. See [issue #23](https://github.com/dumbmatter/fakeIndexedDB/issues/23) for more discussion.\n\n### Dexie and other IndexedDB API wrappers\n\nIf you import `fake-indexeddb/auto` before importing `dexie`, it should work:\n\n```js\nimport \"fake-indexeddb/auto\";\nimport Dexie from \"dexie\";\n\nconst db = new Dexie(\"MyDatabase\");\n```\n\nThe same likely holds true for other IndexedDB API wrappers like idb.\n\nAlternatively, if you don't want to modify the global scope, then you need to explicitly pass the objects to Dexie:\n\n```js\nimport Dexie from \"dexie\";\nimport { indexedDB, IDBKeyRange } from \"fake-indexeddb\";\n\nconst db = new Dexie(\"MyDatabase\", { indexedDB: indexedDB, IDBKeyRange: IDBKeyRange });\n```\n\n### Jest\n\nTo use fake-indexeddb in a single Jest test suite, require `fake-indexeddb/auto` at the beginning of the test\nfile, as described above.\n\nTo use it on all Jest tests without having to include it in each file, add the auto setup script to the `setupFiles` in your Jest config:\n\n```json\n{\n    \"setupFiles\": [\n        \"fake-indexeddb/auto\"\n    ]\n}\n```\n\n### jsdom (often used with Jest)\n\nAs of version 5, fake-indexeddb no longer includes a `structuredClone` polyfill. This mostly affects old environments like unsupported versions of Node.js, but [it also affects jsdom](https://github.com/dumbmatter/fakeIndexedDB/issues/88), which is often used with Jest and other testing frameworks.\n\nThere are a few ways you could work around this. You could include your own `structuredClone` polyfill by installing core-js and importing its polyfill before you use fake-indexeddb:\n\n```js\nimport \"core-js/stable/structured-clone\";\nimport \"fake-indexeddb/auto\";\n```\n\nOr, [you could manually include the Node.js `structuredClone` implementation in a jsdom environment](https://github.com/jsdom/jsdom/issues/3363#issuecomment-1467894943):\n\n```js\n// FixJSDOMEnvironment.ts\n\nimport JSDOMEnvironment from 'jest-environment-jsdom';\n\n// https://github.com/facebook/jest/blob/v29.4.3/website/versioned_docs/version-29.4/Configuration.md#testenvironment-string\nexport default class FixJSDOMEnvironment extends JSDOMEnvironment {\n  constructor(...args: ConstructorParameters<typeof JSDOMEnvironment>) {\n    super(...args);\n\n    // FIXME https://github.com/jsdom/jsdom/issues/3363\n    this.global.structuredClone = structuredClone;\n  }\n}\n```\n\n```js\n// jest.config.js\n\n/** @type {import('jest').Config} */\nconst config = {\n  testEnvironment: './FixJSDOMEnvironment.ts',\n};\n\nmodule.exports = config;\n```\n\nHopefully a future version of jsdom will no longer require these workarounds.\n\n### Wiping/resetting the indexedDB for a fresh state\n\nIf you are keeping your tests completely isolated you might want to \"reset\" the state of the mocked indexedDB. You can do this by creating a new instance of `IDBFactory`, which lets you have a totally fresh start.\n\n```js\nimport \"fake-indexeddb/auto\";\nimport { IDBFactory } from \"fake-indexeddb\";\n\n// Whenever you want a fresh indexedDB\nindexedDB = new IDBFactory();\n```\n\n### With PhantomJS and other really old environments\n\nPhantomJS (and other really old environments) are missing tons of modern JavaScript features. In fact, that may be why you use fake-indexeddb in such an environment! Prior to v3.0.0, fake-indexeddb imported core-js and automatically applied its polyfills. However, since most fake-indexeddb users are not using really old environments, I got rid of that runtime dependency in v3.0.0. To work around that, you can import core-js yourself before you import fake-indexeddb, like:\n\n```js\nimport \"core-js/stable\";\nimport \"fake-indexeddb/auto\";\n```\n\n## Quality\n\nHere's a comparison of fake-indexeddb and real browser IndexedDB implementations on [the W3C IndexedDB test suite](https://github.com/w3c/web-platform-tests/tree/master/IndexedDB) as of March 18, 2019:\n\n| Implementation       | Percentage of files that pass completely |\n| -------------------- | ---------------------------------------- |\n| Chrome 73            | 99%                                      |\n| Firefox 65           | 97%                                      |\n| Safari 12            | 92%                                      |\n| fake-indexeddb 3.0.0 | 87%                                      |\n| Edge 18              | 61%                                      |\n\nFor browsers, I ran http://w3c-test.org/tools/runner/index.html and counted the passes. For fake-indexeddb, I ran `npm run test-w3c`.\n\n87% is pretty good, right? Especially considering that fake-indexeddb runs in Node.js where failure is guaranteed for tests involving browser APIs like Web Workers. There are definitley still some weak points of fake-indexeddb, most of which are described in `src/test/web-platform-tests/run-all.js`. Your app will probably run fine, though.\n\n## Potential applications:\n\n1. Use as a mock database in unit tests.\n\n2. Use the same API in Node.js and in the browser.\n\n3. Support IndexedDB in old or crappy browsers.\n\n4. Somehow use it within a caching layer on top of IndexedDB in the browser, since IndexedDB can be kind of slow.\n\n5. Abstract the core database functions out, so what is left is a shell that allows the IndexedDB API to easily sit on top of many different backends.\n\n6. Serve as a playground for experimenting with IndexedDB.\n\n## License\n\nApache 2.0\n",
  "maintainers": [
    {
      "name": "dumbmatter",
      "email": "jdscheff@gmail.com"
    }
  ],
  "time": {
    "modified": "2023-12-30T15:12:04.112Z",
    "created": "2015-05-09T22:00:40.970Z",
    "1.0.1": "2015-05-09T22:00:40.970Z",
    "1.0.2": "2015-05-09T22:02:40.573Z",
    "1.0.3": "2015-05-10T13:23:15.971Z",
    "1.0.4": "2016-03-16T04:06:17.825Z",
    "1.0.5": "2016-04-05T22:33:49.371Z",
    "1.0.6": "2016-04-15T20:36:44.738Z",
    "1.0.8": "2016-08-09T00:14:29.309Z",
    "1.0.9": "2017-02-04T15:32:10.547Z",
    "1.0.10": "2017-02-05T21:54:14.215Z",
    "1.0.11": "2017-02-07T00:06:27.698Z",
    "1.0.12": "2017-04-25T03:33:38.439Z",
    "2.0.0": "2017-04-29T13:43:05.191Z",
    "2.0.1": "2017-04-29T22:03:09.639Z",
    "2.0.2": "2017-05-01T21:21:54.170Z",
    "2.0.3": "2017-05-10T01:34:09.824Z",
    "2.0.4": "2018-02-23T00:02:27.352Z",
    "2.0.5": "2019-02-08T04:10:05.988Z",
    "2.0.6": "2019-03-14T22:21:51.809Z",
    "2.1.0": "2019-03-18T21:51:50.537Z",
    "2.1.1": "2019-06-05T19:35:20.542Z",
    "3.0.0": "2019-11-15T17:48:58.448Z",
    "3.0.1": "2020-05-25T19:34:54.678Z",
    "3.0.2": "2020-06-11T00:43:12.219Z",
    "3.1.0": "2020-07-02T23:53:36.571Z",
    "3.1.1": "2020-07-16T00:51:09.325Z",
    "3.1.2": "2020-07-22T03:12:32.499Z",
    "3.1.3": "2021-06-20T00:20:02.504Z",
    "4.0.0-beta.0": "2021-07-13T15:54:05.822Z",
    "4.0.0-beta.1": "2021-07-13T19:07:34.749Z",
    "3.1.4": "2021-10-11T20:55:53.717Z",
    "3.1.6": "2021-10-19T22:15:17.682Z",
    "3.1.7": "2021-10-19T23:48:14.248Z",
    "4.0.0-beta.2": "2021-11-12T18:22:27.944Z",
    "4.0.0-beta.3": "2022-03-17T01:10:58.791Z",
    "3.1.8": "2022-06-08T21:32:13.819Z",
    "4.0.0-beta.5": "2022-07-02T15:38:04.904Z",
    "4.0.0-beta.6": "2022-07-02T18:16:26.519Z",
    "4.0.0": "2022-07-02T18:50:38.103Z",
    "4.0.1": "2022-11-29T18:44:12.932Z",
    "4.0.2": "2023-07-14T15:56:20.778Z",
    "5.0.0": "2023-10-13T19:08:34.150Z",
    "5.0.1": "2023-10-25T23:28:52.375Z",
    "5.0.2": "2023-12-30T15:12:03.923Z"
  },
  "homepage": "https://github.com/dumbmatter/fakeIndexedDB",
  "keywords": [
    "indexeddb",
    "datastore",
    "database",
    "embedded",
    "nosql",
    "in-memory",
    "polyfill",
    "shim"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/dumbmatter/fakeIndexedDB.git"
  },
  "author": {
    "name": "Jeremy Scheff",
    "email": "jdscheff@gmail.com",
    "url": "http://dumbmatter.com/"
  },
  "bugs": {
    "url": "https://github.com/dumbmatter/fakeIndexedDB/issues"
  },
  "license": "Apache-2.0",
  "readmeFilename": "README.md",
  "users": {
    "pje": true,
    "sballan": true,
    "erikvold": true,
    "rdev": true
  }
}