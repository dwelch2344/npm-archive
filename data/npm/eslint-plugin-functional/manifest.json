{
  "_id": "eslint-plugin-functional",
  "_rev": "105-56a7527c9ccc90fe0fa161e4e4647594",
  "name": "eslint-plugin-functional",
  "dist-tags": {
    "latest": "6.0.1",
    "next": "6.0.0-next.7"
  },
  "versions": {
    "0.4.0": {
      "name": "eslint-plugin-functional",
      "version": "0.4.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "@typescript-eslint/typescript-estree": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^1.11.0",
        "@typescript-eslint/parser": "^1.11.0",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.0.1",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": ">=6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@0.4.0",
      "dist": {
        "shasum": "01e8100150844dd0358d0560f664f4a00fd825ca",
        "integrity": "sha512-2pvpQ8j3O0fb6Bbv/qkJyuFtlAfab1UGdljDmLIF95j8qQXdkJmOOwUWPqZ8cqZFd6n9ui8NWpdUNqsoxW0VSw==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-0.4.0.tgz",
        "fileCount": 8,
        "unpackedSize": 137115,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdMcOfCRA9TVsSAnZWagAAla8P/RGoVHLfiEp5Ms//kdBn\n10i/qLQ2OfNa7cWs/qSnjxqutrRMQgxTHOqovxf4x5lhDXAavSMH6BlLRUp6\nWjapTo0pTgIdYEpvlODIaq20GiREEQBa2h4RwTcePSFbHl968VI2NKVqyvlA\nBFyq+8PXkE4cAKqXfUjfwBtIsddPg6V2I1nMjBO7WBn7lQesHrZfrfFSLIe7\niSneg8fnzJ6zGbJQmSK+Eyt5QNMWW52Vog09qzFZhX2sMSHiWrVwv1mr/EOr\nfghqw3FP6zRb6PKDDedreAZMhMrkLWjYFmpzoLZrLZ9+TKDsYV714fEboIKK\nVwKdCo92iHNMq6dDc1uLOdDsNC9y7i4jPFpkiuczzMU0LJ8Jqym6M+xy7w2w\ncZDCfKlowAcnW5ljn0Qjo2F1CPuEnNHyVbWQkBY6xoX9VQot2iCU068hIWZM\nP8VauW/8OTw8cTqgrudPeEh9Jq12Cw7o9aNM53MZzslGKSeEggppjM9J3reg\n39f28nxKvyXLcXD8ZMnkm802f76/oLgv0rxa1N5wObBHV8PMrRjYZF1p/1ZK\nrdUOfs9YtFpe72JTgkyqM7KhT7QAgTJul5o+LuwwqupnAQd9GBH4NNQmecU+\nQP+DoJcCHGZ5GWNWlrkodrCyfZjGPf0hWLiVGws/b8RwEgrfDe9vBHLdK+oa\nfeG6\r\n=fsp3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICnhXqm3uIj1OymixZPw3Lz2z9HPM56eAcznKZn73u9nAiAz2kSO6UiocgugClI/8irIj2qwcjDBVDygmQDVnX51KQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_0.4.0_1563542430670_0.9479977806622104"
      },
      "_hasShrinkwrap": false
    },
    "0.5.0": {
      "name": "eslint-plugin-functional",
      "version": "0.5.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "@typescript-eslint/typescript-estree": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^1.11.0",
        "@typescript-eslint/parser": "^1.11.0",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.0.1",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": ">=6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@0.5.0",
      "dist": {
        "shasum": "5db58c4536c2e758afd5da415d4494bc68cc57d7",
        "integrity": "sha512-gZ/nra+ifra94wpq1YPn8fmAkXjkDusdbpuNfG1xJ+cWg4iXh/J33VWZu5uF7xGx0Z5XzAgTtNGSX+z2jzk9HQ==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-0.5.0.tgz",
        "fileCount": 8,
        "unpackedSize": 144262,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdPmKWCRA9TVsSAnZWagAAGIUP/ArWY9w4SNAaTtDmf49m\nYxBRmK1U9P9fJr7EyrOyV3MI4xvTop63tzI8acfvLtSnTuij5ohXoWlEy7OH\n6Z7DWQbciumtUXuRZ17zX6drMF/VxgmCv0km5Ubke4SPf8sUOshMasVMHfNZ\nN+NtTjWOKdwY/bmBgj3nQzPGhebnjdTT4ym7JAkvPpsWQi1dL+68ngT0mTS9\nsDTFmVjq1VXis2E7Z8MlNwHJe3MkmnyCEoCNlPttyAzN2V2EkE8L9Hj5Lqkt\nW7f4+dNqMs9Xu2HBkrvNupUyyweDdYc0uWdXp+wfmdf8J4nFR+5qUsOqjpmL\nyR9ygjh5axrUDf/G0yTRgcrUiHvXRGCfsxcuqNEJS/DSIw7EcI4FuP60LM3x\n49+qoN9L7AzyeqhPPkY7j7+JRRiiFLLHfroZY3P41LZ1JSVj5y/WfOz0eon1\nR8BMA9c7DnDTeGtLCbhMnkdaLcL8Uq9e/SvxelYeNcNInpKQgQgcqAT6bLV2\nTBB6gCafPH4nBc5UlS1T640FaYNXnyd4NeueRrawdnzTHcNmWtTBHq9HHGiB\ntVlaeQPtZDnpX4TBPjD7tKOVzQDiLuLvkhoIdEQpdM3S0G+KYykVHRAlViBs\nAeOWs8OX/v50K5MUQXsSjjFHRnMY9R9gZYGVh0R00/SUwzxM/pQw9oFluWjH\n35lX\r\n=5/+6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDihs79Ek50EEpCdVa/KNi78SnCRcoXz5hcu7oSXeNDbAiALIww9VcGlg250+rMs3j/WiNNGleSyN+0cefVVEQFp5Q=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_0.5.0_1564369557200_0.23308942811801092"
      },
      "_hasShrinkwrap": false
    },
    "0.5.1": {
      "name": "eslint-plugin-functional",
      "version": "0.5.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^1.11.0",
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "@typescript-eslint/parser": "^1.11.0",
        "@typescript-eslint/typescript-estree": "^1.11.0",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.0.1",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": ">=6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@0.5.1",
      "dist": {
        "shasum": "30c4f424898dfcae2c62fe476b0ee993fc74e65b",
        "integrity": "sha512-0LCAZxOic4cPqoDSDFCsTDKQOFj87Ka0LHqFSkLBRL67c5sClCxCmzLTGZb5DJ7k9QRp/b37SL1JP4LB89WpXw==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-0.5.1.tgz",
        "fileCount": 8,
        "unpackedSize": 192662,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdP6RmCRA9TVsSAnZWagAA8cwP/A9NL65xI4hHMuGgxpWk\nvDx/UwYcVFmKGJ3dPrq1QWhLPpTLZkFcLttJw44mbWVuGifqlAz5tJ1K/oiL\nfrdV/8aZdDSOXvEBEpnbQ/HCG/VjDzvfcY/jqIKLbCyvS7WsuEW21QfN24kf\n0H4lIqs2bbTFewseXpXHecTqLrsLVYEewQNfX0vhuOCrXN+P/fd9zMIUpq8n\n/Ar7ZjBDWc0I1BPo1/Dlng95pvd/cNv+izRGFhz8WnJ7QDThjo5Xq7XVmid1\ndsveORdEYlCF7FUai43+DhR32cATc0gJQwclt3iatasW2EPuxxVQ129tZd/L\nEi7C33sH6r6SyCKco+AkDgYkz14YNamuUFdbF2bpmYt6NbnGpfJbH1p3mcVw\nloqvQ/mzigIeLI9jTyXPTv63eLUPAuFz/W3p4ZAt7CFRmyPW6V2ki+LioS18\nx+gomh1qBZw8eknDqszoelD71elBXu9+Dn/Dn0/DtbDRgM/W8/Y/bqy2wnng\nmLZxypbjqOxE3i1V0K96bkpaG/TkPrrUnRcY6vUV+4DFw5v2znyz0LCpkpMQ\n966joUvLnA3MqkpOMcJjghHL8NXNEOmjYi/HU4rg+xsd5e586fkxkLb/ac25\noAbjungvp5NybIf6ynAUDBxW+7fccaRED0XZHqCF7mRdR1h0MIob5opZpWgZ\n8Bek\r\n=zoku\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFOR4RbXifkDXW6DVqckmjnonqbX/wJX2ePpl3PXQ0T/AiEAldGn5xST5Ew1E+ACVin3QmdA+N7xFSB0q0uWDSS1mBE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_0.5.1_1564451941834_0.4035591261860765"
      },
      "_hasShrinkwrap": false
    },
    "0.5.2": {
      "name": "eslint-plugin-functional",
      "version": "0.5.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^1.11.0",
        "@typescript-eslint/parser": "^1.11.0",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.0.1",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": ">=6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@0.5.2",
      "dist": {
        "shasum": "cdf2adba736eb1c0a7d402d429bb87baad62090d",
        "integrity": "sha512-eqDVCm1aZCZdDG8iM8Gb7aibp0z2AwGQQfVre1jcIvzU1M5uYcuV20seZZyJvGay9pOEI17g+idoXQv8FHVAGg==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-0.5.2.tgz",
        "fileCount": 8,
        "unpackedSize": 148593,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdQMTkCRA9TVsSAnZWagAAPcoP/R6UC5lJm2F57kW9cESN\nI1jfezDeNY10Cm/micKHUkm/G9MAnazvmuMSCjG7OVnNdf63S1YEvDCe1s8E\nVonV74PKxauDA/bjZhaX/TrgFYTAyiBczutW8jRkL7HI1SPJ1hrvrwtPvIm+\nENu5wW2HAMHqhNErMjwDWW+ujFYKdINbswC9Q/uFtOeh6FxZdSd6uaZhxMqP\n/fRi1ZvEQCDqQK/788SwRsn+cluhVQnjIvkyZm2OktbXp6b3zGXQTRWGLbG/\nA5+tBVfp1Th/vpGWyCQRlWll72jnvT8lK0qoDFug8OViwYuBntpSTYpaF1yi\nxr0rJFHejeAXMVIuqVu+BZ4MzZU61lmTpagfOCpW02pqoyO/WeFqbkeEc9uc\nkzGGldcDwaGvY68LxtisdBFvzzkTpfhP8cIgZI9xCGewwQoMhBQjv+mS+2cu\niOTQJM1J+mVX+8SieTQNqpiPjpIy6O5s7Kgy25MqIdEOjJLPdai+tZbFrMUA\nQN7l4h8FkMnM950HK1HrOFs8ttzsdjSHrgKT8v9iACgRtssoBkLiFP8pMRb9\ns2yk+PDhSyT3912NP/gNMtcY8GBuGRosss6G77+zKyaOYTHqmxzBshCCXm+t\nlzOvFuwnnUS0+q/Te3ji2bP4SSuiwvE+EXKApZF3Dgqeii801daUcXvLz27u\nMxQ9\r\n=PFu6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDwrf1M9mTf/3orkkK8OYfmLv/spLLgd7qT6Y6MgUZDHAIhAPy2w4frL5o1mTfcKkQ/t2bFzd+H00+4mwohpsIIn2+U"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_0.5.2_1564525796079_0.10040834294911738"
      },
      "_hasShrinkwrap": false
    },
    "0.5.3": {
      "name": "eslint-plugin-functional",
      "version": "0.5.3",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^1.11.0",
        "@typescript-eslint/parser": "^1.11.0",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.0.1",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": ">=6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@0.5.3",
      "dist": {
        "shasum": "2562059a4605399977aa1fd6da43e26e5a3de9d8",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-0.5.3.tgz",
        "integrity": "sha512-Ddv1Cnc5uPnESXlSryHGtkk6DOepgjEOgWGEvq1+H3IOdNqWTvFDJERQQRMXMYZZxpbmmAyo8GHsDQcVKMz7rA==",
        "fileCount": 8,
        "unpackedSize": 150306,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdSZJ2CRA9TVsSAnZWagAAKoEQAJpsXVB7OsoTo7iIMogP\n05DbV09Ms25j0oZNjmYqS25uyA6yTVcLGRBk6nSRd46IFXRRfs2a3pgETyrN\nMOhusfBPLP/K31q1z1k+R15nqFe/Q736NBC3rgUvGg/nPcAFxl9nutismKS2\n26PydC9hOgvF48WXWlfH7yeTcnzxkfopNlcWBh52AqQfI2M1hum2fpChb2zV\n9MtdpmlSo0k1u/IqA7aIX4U69OPgjPloEXf6uK/Sx1xotdUxIGX72lTw93uc\nilWFyU1PlBdkywCTQp8hOM8nAXIXu53DZAHSAF0mGgTzAt7bSatvGqc3tHQb\nhxZhH/BmMZODzfUUWv19TVVWk90hxqxKnucuU3YcrONpIuJCGxBdFyO6cD5B\n5WLRXN/WVTRkEx91wGPoKR83lhTI8RwHsEtL9jQ9qJ33qDfOvUH/IXdQWwth\noMU5qLzDLustiJr5DwQtsXCmnq6iXQvATdycHJmBxLFyOZoQjmjRmlAOIWc5\nAhQWvQ94zPaBJ/T25nrxldzXrjEWHHTiLagkH5D3/U0ka+EVSyojY9ctKbg7\ntccmrnNVIy8woFPvcXmOSMeGFx17ktcwmsnBRtX17Cb2ynWqiMOqxGco44CQ\ntY8zp9eYmKU4ZLqddT2V9SHZpElh2BE84gvOK3UUDYM4J3r8MePFicDn0ZQG\nIepL\r\n=bxIX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDRjiI5u+46Z4udvPQHDq4jfq6jhOcVGd4IHJv39tY+oQIgB0ZMc7owr0pSSllpf5XRQCVixRgcDrVCSEbO5vYoFMU="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_0.5.3_1565102709860_0.41198567863742386"
      },
      "_hasShrinkwrap": false
    },
    "1.0.0-rc.1": {
      "name": "eslint-plugin-functional",
      "version": "1.0.0-rc.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^1.11.0",
        "@typescript-eslint/parser": "^1.11.0",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.0.1",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": ">=6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@1.0.0-rc.1",
      "dist": {
        "shasum": "241ee3f7a29db4211f412e1ace7cca210951382a",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-1.0.0-rc.1.tgz",
        "integrity": "sha512-tKs4HmTXvPjrO3s24xWvKqL3MPRt4r1QQX0KMwCZKDKniLAgPZuI0wJ5M/6naK4vn784ureba5z6Su8dF4Q1+Q==",
        "fileCount": 8,
        "unpackedSize": 150392,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdSZK9CRA9TVsSAnZWagAAXaMP/2y+0i3KwPST4lVa18Fq\ntqFQjmFHS/saLQQtDKzSCWEQMkUC5otZZu1PYf3a9lLocP2UKrmKUtX2iXFD\nFR4M/j+pT8h97VctiE693nKqbBTfSUvWQo7tY743iFKmux8auXb98LbXskoa\ni1r6IPjExbAyvG2BgWrTjORjHMhk4TiI9qJljC3w/mdPdrMTW9X5Vmkj32nJ\nN/LV8/HFmWjP21i3VWl6G4uAfARuruA85uOiroBnIOmacBwBwPtvekMieh33\nfC1B5IOXUIh2T8nTUoT7ZwbYhwwExhaRaRFyNTeERoBIDqAVlJs6wWIlcEga\n8ia6CkJrmYhNNLufsXHNQEKWbAgLGLr5aUlqrcZPteKyx8ql2L3xYtcDrx0V\nBVW4yFiV8//xDZ/+ecEZEm1cfw+Qt/3TncJBQSa7exTNk3shTQuHsyjyzlbr\nMDAyCztQ4BU2ePceCqzRGqOfkurWIP0yEeBzxizociJQ9L9ofxG+tPol0j9B\ne2UBl9MQyCbsoWKzJ+Sh6G7sehPVUxVuPpeqHfw0x6CWID2E6RDccPlRIfgc\nxHaIK1E/SEMn4YJqatNjmWgTPc/T2a0HIGdgsUcYlOmOkR4vj078aDStfZUz\n20I/usswRyCvaVj6PPKsOW2s5Xe5qtrsSdPOd1a7wPWHeLp/0bF3jgmjv95W\nXQkn\r\n=H/0V\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD8UQilM2m/wSplocsyS5X7XVFld1DG+m21YxP9/bDivAIgExCXDmvqWkQ5LRQg5YQ0unfurbISilnRetKwo7/UoXI="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_1.0.0-rc.1_1565102780786_0.06849821190780947"
      },
      "_hasShrinkwrap": false
    },
    "1.0.0-rc.2": {
      "name": "eslint-plugin-functional",
      "version": "1.0.0-rc.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^1.11.0",
        "@typescript-eslint/parser": "^1.11.0",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.0.1",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": ">=6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@1.0.0-rc.2",
      "dist": {
        "shasum": "42827169f40c16c4ec9fb7c524c96b6cd7c665b0",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-1.0.0-rc.2.tgz",
        "integrity": "sha512-Lrh3zNX7kPOAOeLJA398km/D4+21ZvDs0svcf2qc6zCg6Clzq2Srgw+Box6KVD5hS/l8oCJhr70J3ymcsQ9gyw==",
        "fileCount": 8,
        "unpackedSize": 151467,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdSnseCRA9TVsSAnZWagAA/0MP/2EKjVwm77GrsWszkjnA\nNYM2RvNuH2HCYU+LhbnPxlYAu4tTD6ZaWDx6AUtQGQQZFAmTbHtrudwGu2R/\ngAy/reC5Xf1nkYO+RcatSNvm4y3futfNZY3mz69va7hO6qXYiV6tE60rIJ0R\ndJxd6eC0x3ZLww+FPn/3+QJ+Twrkg2Ank5StpTybtqtGNR4En1K1m4BeI7IM\nHR+rAd30DuTub8DMnDYuTku040Id0SYtWrUvaomPGdcqiClApZVOan8JDgRa\nC1jLj2Q4D3hcXzrll+Ot3RT/sPQIzYQB6b73jizGn3h/vvTk2dhOw2X5Nkxh\n41iL6EPSNrr8//Oq69kZZd0MwP4s8zyrE6Tu0+eyl5Yh3Trb8NLkqrz0qGNf\n0jPt/JAOtjx2z1ZSrudy/rReM4n9RIsyCndIbiXT99t25b3oy+ki984OrbWS\ncV9JNN090LWxZEI/7qU8XeKtmDIXTI9brZ2ZFPSqjJWtg7J2QG9ZsHsQU+nV\nGgiy6PRFYqgT67TaMkRCMtJlubQ6jp4LIAXGQVrnQ6AUIHMEmGlK4FbFtjw4\niSyA6/9ePMaVLqF2fJAZlNqkU0ZFjrxs9OoCuTS3ozQEyrZbTSVY2uYgisUK\n0GpkeJYp3S0Jy7QKnRIFlE16LS4BqQJPlurgzgjcPu7QacMKut2ZuhL+c2sZ\nMOO2\r\n=cugw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAnOSMpZ+In6HKTxkR6kD1kY+ttPSAebz5qYiKNRnXPuAiBtTO25GTmRcVRYZzugPNGlfpL1w5g0zb6zKfwYHPN8lQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_1.0.0-rc.2_1565162268974_0.7764311771119763"
      },
      "_hasShrinkwrap": false
    },
    "1.0.0": {
      "name": "eslint-plugin-functional",
      "version": "1.0.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^2.3.1",
        "@typescript-eslint/parser": "^2.3.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.5.0",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json && cp ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts -f visualstudio",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@1.0.0",
      "dist": {
        "shasum": "8a5537d2a47443b74f1ef329bf5fbaf554cd4d6c",
        "integrity": "sha512-2RxL6RkEmptO1drqKctOtVVzXrdCP9fHQHkUSMbJngD40atTAdW2QSPbIfuaDGqHHPFHTTlRRbR/nxAWtaFVQQ==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-1.0.0.tgz",
        "fileCount": 8,
        "unpackedSize": 151163,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdpEeOCRA9TVsSAnZWagAAYbkP/3cO7ASk1ECvBof8wAkI\nmVuHM7/9M+IK8E5qJIg3EU8TXLkVY8ftaTk3wab0N/JOnP/+rsUtkXSeIKVn\nuAPfbIG+OcMwtj4V/LuT4xEPRmelGshbsv6nB30AR3TbKda5OHJZK1C4fyVd\ncf85pqU5YgbDGGspvvsDwtGpdVakc4PHAdcxCGpPKYPy0j1daGwHncW1aeT/\nqVluKlRcW+Rfx4vShkspvssyIvgd9OL2AEQFkCdetzfinAByjo5i0mGRPWF5\nRnj7G39d1zN4iwBDvkokIt/RxwYYmWOKSbXXjc2l0jMvDoSFNN9UzidQ9FQV\nPY7JCOZ0dVTvmBGXtpj73iqQtQUBxOr09UQRVkuyszOfUCaxHkx7N3eAqOjP\n/Crkw1w0+ifhbzx8dfMxDXhvoD5lHHMK1cCxWmMnQADrSX/BXK28L5ysNt4D\nJp26FBxrBr+p02W7iR6Hw/JA6TCIHKqu7Ueb6up97ZeokE4ywmN2F9Sjh9pe\nJqUA4hjfuqtBsS2WmPA6HkTrUCEgnvvrkcVFd/82yAzrc/MoecqpbhH3lN5z\nbK2LADyPZ2mYYFGiaWpSyPDo8Fxj3yp0AkBroNaTWtJA4CNYIFEm9U2oj7f8\nwZWO8c/RaNyljgxA01Bzu424RHfUrDbGbwI1DMJWeGHjdE1lOj0zRZajF/2a\nHBhz\r\n=jmSM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD3Y02xZtb09GaH+XC79ILHg6nbdimxneqOJmsNUUDdaAIgEeiLXUvw9cUQ6wTbB5b4+fx0t1947KQFF6mpEoIIiuU="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_1.0.0_1571047309526_0.3256022412032906"
      },
      "_hasShrinkwrap": false
    },
    "1.0.1": {
      "name": "eslint-plugin-functional",
      "version": "1.0.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^2.3.1",
        "@typescript-eslint/parser": "^2.3.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.5.0",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json && cp ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts -f visualstudio",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@1.0.1",
      "dist": {
        "shasum": "444b560b6feb11ab2e1c889d2f1507344b75f88c",
        "integrity": "sha512-2A75qCdgjtZM7c7hdlk2Z24L7wPJhmhEwc0+vZiyPVGLr6VFd8T1vJu+PgyBPhPrEsbubgc0/tpjw81p7woUzg==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-1.0.1.tgz",
        "fileCount": 8,
        "unpackedSize": 151263,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd8LFfCRA9TVsSAnZWagAArMcQAJE230wZf2fMmKkR3tiT\nEmirhF4zSN2vW4GUMlDohwjlT8X6j8jTeejcXFq61h6fzUPqLfuyhlodUvqg\nbCdXUBQns+z2uU34dNwhQ8lsyD2WouFUC2cmb58C7LfrLOb1fiVdty77PBed\n1undlUwf4RmU/avTM98TXIq5osEV4ZSQbzmTqKGo6K6cugU0PDg+JfdLGG+G\n6hJl4IxQbf9Z7hrYxneR8Z1Flr+1E+0xjwkh60v+9qwFeLNZxk4htmfVLnkd\nnuyQwy0tv/RzxItZjAgzlAUX9IEwfGwyGbkpkz8bJEDHWUOdJX9lloXyU7WJ\nh4oIkK6Lc81DVXulvvSbRDEI0KaLlkuasmNEaIpwEPEjSAVJvM+dAVJwYLni\nI/k8+T84cRx24+MFT9D+3mk9lARzjB3AcTBjlqY4euf6r0nhaA45PShueHil\nfUvGmRCmHFqox6z4GoergPfORssTyeKyvIZLvP+WGo6e6Ta9+dNfz2D8KarR\nc91bo2xkWJdp33mYBuy4+3st1j9pm5OLLVpkea7903sLCzLHYcIw0KA5oyE2\nCzdD8tqm39NX0FmGuTf83MoKmTxGgqRM0WMZ//sFFnjD5h0AcW3Y9xF+xaag\nCMirIdx4F2LWd3R5wXvpQQMFELo0sWZ1kZYfCJvDL736v3U5ObIwTTgTR//H\normF\r\n=evEP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCqR8udxDdYJivXBqm7JSvJYnw6fD0ppPoo6Xp2sCiyfgIgcVlJGmcuTNI5q20grpBY/iH47YIcaI3f9+NpjuxxaCU="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_1.0.1_1576055134419_0.24528558417209068"
      },
      "_hasShrinkwrap": false
    },
    "1.0.2": {
      "name": "eslint-plugin-functional",
      "version": "1.0.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^2.3.1",
        "@typescript-eslint/parser": "^2.3.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.5.0",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json && cp ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts -f visualstudio",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@1.0.2",
      "dist": {
        "shasum": "0da4c1bc0ec10db369793e746b5fc194d25a4b62",
        "integrity": "sha512-DnF6Oxa7EmR8L2FEz7P2G8SVO91VfNSUjcGD3y7GU29rU5OiBT4nM7EfUwqPrYEiAyNqrtyVOwz990s2Gfu7gQ==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-1.0.2.tgz",
        "fileCount": 8,
        "unpackedSize": 151961,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd8L4TCRA9TVsSAnZWagAA64wP+wczHuNqZoA4KF+ar9uF\nF3bh6ssXWEA0VvTLajZh/OAs4rx/ANSuKfS4XRHHUzV9CZMcsftY3HgvwSBm\nmZXCv4eHNS1HIrh/GAWcbYlfnVOZSNQI1OVpmK6KXdEWa0SyB/1Il9Pd/+3Y\nECve4X4esHQbtca04pnU1tvAu/u61DIttW2iVFp0KzNzg8O9pG4e5X/ASi9Q\nM4fxdhmYLRp4K50c9LE1IkcHT7OXt1zk78bqQdGzeP71YKglWzDNogN9amX0\nia+T57SOn4IuZd4QmobJfic/wY2ZARh0e7+Q94T0OGlxXgdNsO8DGdySseOF\nboqR61blXNkjrR5GvWbQ9sIfMYzru+uymPX9fNFyPqxMZbYHMCtET8ZhWS6O\nw5VXeh133063me3Kuh0mmdz9R0basX9ei3kYd4/S4Zdq4oE3EK69v7aB12WH\nafXKqYuPWzXD9kW3pt61uu5vcaQL2EygB2kpKhFaA3jx7d8AcxegWT+s8NOp\ntUAD2F2J7bERvzMiFV5lmaFq8aSPcTjycN54gczLSA9Lmp/VV9zp9PrJV8dy\ng+TBGh0kSi09ey5HyARog+LGgMP+VhjC5D7+s5AmvI1WZ6Lf/Vezm3NxMpj9\nkDR33betEHScSkSWCRt1KNen6C6dBw0Kv5V+f62zpdOb+N6GDWg5QQTCxM+U\nnM0L\r\n=DvrK\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDRtjK1gjSPIm8Wml52I3ZuNxroGVJ15TZb0fxCBNIAoAiEA0Bzh0M1YKSr3aNG/+tMqn45XDatWmDzPnTCwFWUokQk="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_1.0.2_1576058387057_0.3137964980071395"
      },
      "_hasShrinkwrap": false
    },
    "1.0.3": {
      "name": "eslint-plugin-functional",
      "version": "1.0.3",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^2.3.1",
        "@typescript-eslint/parser": "^2.3.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.5.0",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json && cp ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts -f visualstudio",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@1.0.3",
      "dist": {
        "shasum": "0aee5b3899c15803f4bd2d0f59540ffc70c6d3f7",
        "integrity": "sha512-iuNskak+tAyGMv+8D3QgQ6zz6K9cmfzNWK0hHE7xla6pmWlaTIyFcUXI2qHgmaS2Y0t3yOeDD5wUvjJ9l94IOw==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-1.0.3.tgz",
        "fileCount": 8,
        "unpackedSize": 154216,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeCBb7CRA9TVsSAnZWagAAsFgP/0qTB1JIz4RTfCyQ7mlE\nHt8lBcy3f/W86ymz8/lBl5vWUQh89wCzWatBayv/gBraSu4ZXSxGEFCY2E/W\nOjn7lLXyOrp9sZ8gUEOYcPAzXLrIweZz3RFQFd9VX1EveC4ccadPcXLP6Wq2\nzNixiwIXWt1MYFoCPZ0Z2C4NNQgUaAtH4a23SR3kJ1ytBi4ug/+n/nH/2/sD\nl1EaPs96F67LK/SvMFqXb+J7shxoVLkmZ18+/qYLhXyhMJo5QVZ7qaeRM7HX\nEGPsBOOgtW9/aLh7K3XttON/A9gnjy16/w3jwshpgOFaRlsGSVLC3mKQGb8s\niSOwnI2QkczVMtlfVM9VvfIuAvVx2xPCHbAitrsSxu2UxhlI8kpfoZ+tJyQM\n2F2E8Nanw4NC1IXVo3Iiiv49a+jmZskkRFiI0PMF06Fk5VaSjcdshcUwK87J\nvcWhCBTntrCXf0raU+dtxszrYXv/l/RDeigHM+t3AG6KeT5zd6Mx0fdVWr0Q\nHQhdQXpv+D3Apsr2ME5Js5+d21Zw4kAA3YA66sqWoesyDDHH8gSraktWRpW9\nRpyKBUg5qoY8Yx7NeQQu8A+mjwaD8BtYgCOqzeHTwN7sHgN1gEvrjqq5AHbQ\n9OOVt7eUGcpbSeh8r38SvHnvwv2snSTZwBS60Tqj0ngnzdBjEl1Z9xBmW9bV\njE1L\r\n=lmaP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBhtBRQFkZ/YAmec6J6azkK2JDk1AypLifotY0GJcglHAiBvnHB4P6aKVRrOB9xHf7MPDW5wiDIaQcswY70XFeLD8g=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_1.0.3_1577588474818_0.216587038928725"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0": {
      "name": "eslint-plugin-functional",
      "version": "2.0.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "main": "lib/index.js",
      "module": "lib/index.mjs",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "keywords": [
        "eslint",
        "eslint plugin",
        "immutable",
        "immutability",
        "functional",
        "functional programming",
        "fp"
      ],
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^1.11.0",
        "array.prototype.flatmap": "^1.2.1",
        "deepmerge": "^3.3.0",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^4.16.6",
        "@types/estree": "^0.0.39",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^2.3.1",
        "@typescript-eslint/parser": "^2.3.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.5.0",
        "eslint-config-prettier": "^6.0.0",
        "eslint-plugin-eslint-plugin": "^2.1.0",
        "eslint-plugin-import": "^2.18.2",
        "eslint-plugin-jest": "^22.7.1",
        "eslint-plugin-jsdoc": "^15.5.3",
        "eslint-plugin-prettier": "^3.1.0",
        "glob": "^7.1.4",
        "husky": "^2.4.1",
        "jest": "^24.8.0",
        "json-schema": "^0.2.3",
        "lint-staged": "^8.2.1",
        "prettier": "^1.18.2",
        "rimraf": "^2.6.3",
        "rollup": "^1.16.2",
        "rollup-plugin-commonjs": "^10.0.1",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.1.0",
        "rollup-plugin-typescript2": "^0.21.2",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.0.2",
        "typescript": "^3.5.2"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "scripts": {
        "compile": "rollup -c",
        "compile-tests": "tsc -p tsconfig.tests.json && cp ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "build-tests": "rimraf build && yarn compile-tests",
        "build": "rimraf lib && yarn compile",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint './{src,tests}/**/*.ts' --ext .ts -f visualstudio",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-work": "jest tests/rules/_work.test.ts",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "report-coverage": "codecov -f coverage/lcov.info",
        "preversion": "yarn verify",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts}": "eslint",
        "./{src,tests}/**/*.{ts,json}": [
          "prettier --write",
          "git add"
        ]
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@2.0.0",
      "dist": {
        "shasum": "7f3a8fb4182319cddf11c3b8615f8095b2c740c5",
        "integrity": "sha512-8IV3wyYFGWvrx2klByu5O3qG7fo9/tedBaagPssv9MWmOTGVnCdk7r7DCDbVe8VTZe9Mz7r6KS+1tdkgQAqc9A==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-2.0.0.tgz",
        "fileCount": 8,
        "unpackedSize": 156547,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeCCk+CRA9TVsSAnZWagAAbFwP/0j9yVyLTdy8jo6BIhDJ\nR3gkLKSOEdvydZMTPG32knklz4FMap8HjIqpxF4r50f9Cu27YqpRE6fV8ICb\ntWBSDGD/XrIf6TO3bC9vKZykQkEpMTRyzhQWQ+sXkcW+6DfaVDG70kw5oV0b\nVRpoquBHJ2oJCHzcZGqyNl2mQlLTliaI2F2ytXTC6Cm4xfjO4RzIJEKT8JCO\nCKZgit1bnPRU4qCNx/7fl6ctoRiRYySP3nQ1BdK2Ehom1J1yljaXeb2xSwz9\nLBZXDxCiVEZyENeAyu4uJ/+ko/la63FZIgSQ9fuRavvOkEsyx5hpkTPKnLfS\n34gpF3aW01onAH3kaBxgx+8WOzepDyVQVv2H3CAevcLeBUMsSrdzGarhaz72\no8YGKmXD5zTW9nYei0z0CcsXa6NBftv32jv3sBf8hbZDOw1AExNjXG1l8vYQ\nu6OLjBWAJtj4LtTr0bByyHz5LGVt3bxa1Yo78HZ99Yd5DGXIsJDpWRngJ9TI\nGj6TIkkcewIvhaZltl44oqh0eo7FyPdkFMy/AFFUzY7Q5Po/u5HFRymIFm29\nKJkExVi7tVqdj6IGKz6tUN/0+S47hoDC2aYznhW85hDZ7PGpqwaCq4GBpVcd\nV+/CcBvIXnTmJG1I9iqhqztWlYh+aMb2/reyDZUR8RQQE9xweebuc3zldBhP\n5YwM\r\n=bpnO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDK06oWF4mwJkkytD4DsVzOU8AsrW2/PS+fGd1bez42LAIhAMlLR2QcOTTBiKRYJ5BYkpQhcwGwGoQYX6L0fc6MNoGh"
          }
        ]
      },
      "maintainers": [
        {
          "email": "jonas.kello@gmail.com",
          "name": "jonaskello"
        },
        {
          "email": "rebecca.stevens@outlook.co.nz",
          "name": "rebeccastevens"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_2.0.0_1577593150150_0.26636451760348434"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0": {
      "name": "eslint-plugin-functional",
      "version": "3.0.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "import": "./lib/index.mjs",
        "require": "./lib/index.js",
        "default": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "yarn rimraf lib && yarn compile",
        "build-tests": "yarn rimraf build && yarn compile-tests",
        "compile": "yarn rollup -c",
        "compile-tests": "yarn tsc -p tsconfig.tests.json && cp ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn eslint './{src,tests}/**/*.ts' --ext .ts -f visualstudio",
        "report-coverage": "yarn codecov -f coverage/lcov.info",
        "test": "yarn jest --testPathIgnorePatterns _work.test",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "test-work": "yarn jest tests/rules/_work.test.ts",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "postversion": "yarn auto-changelog -p && git add CHANGELOG.md && git commit -m \"docs(changelog): update changelog for v$npm_package_version\" && git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "yarn lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts,json}": [
          "yarn prettier --write",
          "git add"
        ],
        "./{src,tests}/**/*.{ts}": "eslint"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^2.15.0",
        "array.prototype.flatmap": "^1.2.3",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^6.1.3",
        "@types/estree": "^0.0.42",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^2.3.1",
        "@typescript-eslint/parser": "^2.3.1",
        "auto-changelog": "^1.16.2",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.9.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.20.0",
        "eslint-plugin-jest": "^23.4.0",
        "eslint-plugin-jsdoc": "^20.0.5",
        "eslint-plugin-prettier": "^3.1.2",
        "glob": "^7.1.6",
        "husky": "^4.0.6",
        "jest": "^24.9.0",
        "json-schema": "^0.2.5",
        "lint-staged": "^9.5.0",
        "prettier": "^1.19.1",
        "rimraf": "^3.0.0",
        "rollup": "^1.29.0",
        "rollup-plugin-commonjs": "^10.1.0",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.2.0",
        "rollup-plugin-typescript2": "^0.25.3",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.3.0",
        "typescript": "^3.7.4"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.0.0",
      "dist": {
        "shasum": "a95117dc386889692d4efd152f090cf5d8f50f9a",
        "integrity": "sha512-fweLCVf+disvOapl6iVQJbq6V8Fl8LPaw2MbvVAEYy3NxQZvdUyxUiUyymBT5wmBDGsQoZdzEXLNuT9nnm4sww==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.0.0.tgz",
        "fileCount": 8,
        "unpackedSize": 153043,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeGc2LCRA9TVsSAnZWagAASz8QAKUwphMDzBuCRSGDKVpE\nZFMSZr1MXkvV0Hfw5NPNFi2Cphg85/zodzct+P75WsGNHU6xrlS9tuq3+kBx\nT4VxRyH5ytAyFaFBr4dgJqu6Ci1wdAZxa1R0F+e3P8bBMQV8Z6e4zAE9SbgY\n2Dk6zAc+0EygmGADmwthWe/RUtR5qksyfUKmLjH0Wx8fHFjUp7fFUl/2fzfg\nIsP13E3kYfLbtXHL0Vzi3VpI0uXDkTAUXFCFYWSHHzY/rQ1KUvlvG8153ZhY\n5BZt3RVTl7OH71REghnwarJre/PBWyw04PTjGWtm3in0DgIqftAd62PWW9a4\nu+GU8/oVCYmF3+QlMHs813K8VI3j579u79+8RVDnPkJ5l7kZp04Xh3b9EuLv\nraXjQG4+Qx9HUupByAAG4SiCrjcnZyTUCEJVrbK0JUlq/VgvIPW4l9b+Gr6q\n8Nw3Wwnq5m/JoUTd/WeaLR2WHIMJgwzAvQLta06ScX3pnn929zM3Z7PHvK9h\n1lRSavtOyu2r3nuOXWXHgL2jhdkntwW+GnA8S17W/iwmQCRdfEUFKqeMpdea\n0IDjaSDckrPYClL+ReSYXvHu9B1XrrmeAzsx+/9TquhPh/7joNnXqaITGp/f\ngdXrv+odzDxDkbMYlhIX7GobsjVo4rJXMK7+T4S9zpPUVIb+YQ6NA8QNqAe2\nBBq7\r\n=77Zq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICoymhZhh0r77WSWJL9+hIKfiaw2TQ1/LiirCUcC9KrwAiBFUpn3uCNxwi4DfRx5gSRj6QtYXhjohoNHWE2Ks4GDHQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "jonas.kello@gmail.com",
          "name": "jonaskello"
        },
        {
          "email": "rebecca.stevens@outlook.co.nz",
          "name": "rebeccastevens"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.0.0_1578749323223_0.9609408148726755"
      },
      "_hasShrinkwrap": false
    },
    "3.0.1": {
      "name": "eslint-plugin-functional",
      "version": "3.0.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "import": "./lib/index.mjs",
        "require": "./lib/index.js",
        "default": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "yarn rimraf lib && yarn compile",
        "build-tests": "yarn rimraf build && yarn compile-tests",
        "compile": "yarn rollup -c",
        "compile-tests": "yarn tsc -p tsconfig.tests.json && cp ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn eslint './{src,tests}/**/*.ts' --ext .ts -f visualstudio",
        "report-coverage": "yarn codecov -f coverage/lcov.info",
        "test": "yarn jest --testPathIgnorePatterns _work.test",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "test-work": "yarn jest tests/rules/_work.test.ts",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "yarn auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "yarn lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts,json}": [
          "yarn prettier --write",
          "git add"
        ],
        "./{src,tests}/**/*.{ts}": "eslint"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^2.15.0",
        "array.prototype.flatmap": "^1.2.3",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^2.0.0"
      },
      "devDependencies": {
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^6.1.3",
        "@types/estree": "^0.0.42",
        "@types/glob": "^7.1.1",
        "@types/jest": "^24.0.15",
        "@types/node": "^8.10.49",
        "@typescript-eslint/eslint-plugin": "^2.3.1",
        "@typescript-eslint/parser": "^2.3.1",
        "auto-changelog": "^1.16.2",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^6.8.0",
        "eslint-config-prettier": "^6.9.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.20.0",
        "eslint-plugin-jest": "^23.4.0",
        "eslint-plugin-jsdoc": "^20.0.5",
        "eslint-plugin-prettier": "^3.1.2",
        "glob": "^7.1.6",
        "husky": "^4.0.6",
        "jest": "^24.9.0",
        "json-schema": "^0.2.5",
        "lint-staged": "^9.5.0",
        "prettier": "^1.19.1",
        "rimraf": "^3.0.0",
        "rollup": "^1.29.0",
        "rollup-plugin-commonjs": "^10.1.0",
        "rollup-plugin-json": "^4.0.0",
        "rollup-plugin-node-resolve": "^5.2.0",
        "rollup-plugin-typescript2": "^0.25.3",
        "shelljs": "^0.8.3",
        "ts-jest": "^24.3.0",
        "typescript": "^3.7.4"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0",
        "typescript": ">=3.4.1"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.0.1",
      "dist": {
        "shasum": "c0b43f6416f91b1debfd7f6bd5be00be1de69121",
        "integrity": "sha512-8IhtDsB8b+ungE0hVdd7Xp3u1YtL6SkTbtbpzbNBG8JrjPALKczZdbUazrYOJhVsjJJWgTEQTKM/1+ILzE/SDA==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.0.1.tgz",
        "fileCount": 8,
        "unpackedSize": 153654,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeGdLCCRA9TVsSAnZWagAAy9UP/0fqGbfhnheNuqic7Og5\nL/C1U0kzYR6wqBfl8rtI0uG9a5eFCeJgJyqZGtQZ9dmMBLIyGGCL6NzyKxo0\nBifm7bR85celxYuW8WkXzGADnw35ER+znc6csSzdmp8AwcqfzTNqj1B7qI6s\nm1qV4HFN+5Z1yD1PQ5gOCozzd5SPYvqx5moKZl7r3HfMVCw0JKWX1/EffR3l\nzRRkp3QZ2uL58h4reFrX9mxEAqVATKnbChPwdSwWIle1PVFNyG+p14AsOq8V\nNhi14KLY19kLZUQXPovAo5e1D8aZzQPLykLUKygrBB93ACFVAe6256QWoap0\nSxn7Ac5GiyGJRVNYYIhPisbbZJHzyGFxDYEC5Z2SeQ4F2OEvpniNYlcgW+Uz\nFMTNd5YO+W0GyNLoBaQuKNX0GSzRI8dKoz6brL3pwyJWbGuiipCycOlUaIRT\nbxpx2WslusJfzqCIP1K3gB/VGN/6tNuZxAWZiMvCHRkNNxySQH2MAqop6KlD\n3M68BkG+FC67D9JaZUEJwWmuXiZS/Y3DHsSM9/O4XAgPylIn5givy7JvNd66\n2DBQGdTT8eq3aPkaWGMwhif8LtQHUAHygAybi4oZfYuxJMToZ7luOP7grm/r\nYWIiUl8ny2zogydm0SSOmE3vIY9AVHBwwz+W1fAaTH769x1eWpxG2jGZYGAW\ngsWA\r\n=Umrt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHwVYmtxxXldwl2pqF6qoFeJ4qzB+2IWhU/wiZ3mQ9JkAiBJbRNPTax2vhzM/ZDqaVYWEWx1vRgKZPvT4wqSUTQ5zg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "jonas.kello@gmail.com",
          "name": "jonaskello"
        },
        {
          "email": "rebecca.stevens@outlook.co.nz",
          "name": "rebeccastevens"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.0.1_1578750657937_0.12610102171198112"
      },
      "_hasShrinkwrap": false
    },
    "3.0.2": {
      "name": "eslint-plugin-functional",
      "version": "3.0.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "import": "./lib/index.mjs",
        "require": "./lib/index.js",
        "default": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "yarn rimraf lib && yarn compile",
        "build-tests": "yarn rimraf build && yarn compile-tests",
        "compile": "yarn rollup -c",
        "compile-tests": "yarn tsc -p tests/tsconfig.json && cp ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn eslint './{src,tests}/**/*.ts' --ext .ts -f visualstudio",
        "report-coverage": "yarn codecov -f coverage/lcov.info",
        "test": "yarn jest --testPathIgnorePatterns _work.test",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "test-work": "yarn jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "yarn auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "yarn lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts,json}": [
          "yarn prettier --write",
          "git add"
        ],
        "./{src,tests}/**/*.{ts}": "eslint"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^3.9.1",
        "array.prototype.flatmap": "^1.2.3",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.2"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^15.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^9.0.0",
        "@rollup/plugin-typescript": "^5.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.1",
        "@types/estree": "^0.0.45",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.10",
        "@types/node": "10.17.28",
        "@typescript-eslint/eslint-plugin": "^3.9.1",
        "@typescript-eslint/parser": "^3.9.1",
        "auto-changelog": "^2.2.0",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^7.7.0",
        "eslint-config-prettier": "^6.9.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.20.0",
        "eslint-plugin-jest": "^23.4.0",
        "eslint-plugin-jsdoc": "^30.2.4",
        "eslint-plugin-prettier": "^3.1.2",
        "glob": "^7.1.6",
        "husky": "^4.0.6",
        "jest": "^26.4.2",
        "json-schema": "^0.2.5",
        "lint-staged": "^10.2.11",
        "prettier": "^2.0.5",
        "rimraf": "^3.0.0",
        "rollup": "^2.26.5",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.2.0",
        "tslib": "^2.0.1",
        "typescript": "^4.0.2"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.0.2",
      "dist": {
        "shasum": "f4d3b18a063c912ba96d3ade6eb8f0a14a989264",
        "integrity": "sha512-miOugVKh+Yvu9h4a3M6yPxrbK4orVghD6Uyd3y62Rv0vz+gPqrI4p7UY7CUa3rA9GKwwgJW02tLPQBYsbytqug==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.0.2.tgz",
        "fileCount": 8,
        "unpackedSize": 160589,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfQg1mCRA9TVsSAnZWagAAYVMP/1yVoNK/G7yn8ZU97blo\nKcGfG3Lvco1gSDOd1+nPhVtcrs25nmHwHQrIkECB40rh2M2/PjzWIjWx8Swr\n3LsA6LwRt3OF6PVBBlGt7VwY85i9BTqvLdnTbr1dJRign3y3x3ayogp928uG\nlVyG7rBxyXl5fxfELuvEwdeLx8cca0HDe1tQ3n7mjKocheBJfq1tmAf/GXgq\nBbvlHv5jOxYRXIC6nxeAb0d8/w+5mP2wg52NXL4erbwzqCyjUHbgb9YvIGYq\nFBm3IfHu3G9luaJoMEeFJEV1H1obvKBvZuMFTVJOjp0g02EPcQYP/+nML5z8\nJIoIFJdnx+Ltld3jVAvMjWjY+pxRxA8eQcZP7DJbjtTUnhyeS65R+D3D89Oo\n3rpb9ips01Z6hrHqoyPvD7S79F0yxN/kU3qFGAX9Bfn6elcUJitfT443IHFF\ncDPNPjtxM1XcwcNmHE0IZeX40YnyQ0fEb753++9PuUeljLfarQeDJo5Xm2XX\nWwiCX0/koRxqQjkLqIPgzbsP0b0qwMXrk7hpmDupE6QUETGPrep3laqI8nnn\noq7aLHQ3kce1vc4WAd/E/usp/FD3m/98NL43eAVW1Wa/cXdYlgCXnkgyqXzS\nV9NrlwT8/suietS3THfbwdvi5X7aa91wJ9M6tkmPjiVCHkKoG/nx57z3f9qz\nuzjI\r\n=ie8H\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD6bjsWu5J7NRBoFrns9hLvBpxwWcJP8F9pyOnT6kEMRAIgMvhFABlyoFxCazyPtMM+lEnBGWaY4ba+02AwmwKxUmo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "jonas.kello@gmail.com",
          "name": "jonaskello"
        },
        {
          "email": "rebecca.stevens@outlook.co.nz",
          "name": "rebeccastevens"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.0.2_1598164326383_0.2728944057170264"
      },
      "_hasShrinkwrap": false
    },
    "3.1.0": {
      "name": "eslint-plugin-functional",
      "version": "3.1.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "import": "./lib/index.mjs",
        "require": "./lib/index.js",
        "default": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "yarn rimraf lib && yarn compile",
        "build-tests": "yarn rimraf build && yarn compile-tests",
        "compile": "yarn rollup -c",
        "compile-tests": "yarn tsc -p tests/tsconfig.json && cp ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn eslint './{src,tests}/**/*.ts' --ext .ts -f visualstudio",
        "report-coverage": "yarn codecov -f coverage/lcov.info",
        "test": "yarn jest --testPathIgnorePatterns _work.test",
        "test-compiled": "USE_COMPLIED=1 yarn test",
        "test-work": "yarn jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "yarn auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "husky": {
        "hooks": {
          "pre-commit": "yarn lint-staged"
        }
      },
      "lint-staged": {
        "./{src,tests}/**/*.{ts,json}": [
          "yarn prettier --write",
          "git add"
        ],
        "./{src,tests}/**/*.{ts}": "eslint"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^3.9.1",
        "array.prototype.flatmap": "^1.2.3",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.2"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^15.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^9.0.0",
        "@rollup/plugin-typescript": "^5.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.1",
        "@types/estree": "^0.0.45",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.10",
        "@types/node": "10.17.28",
        "@typescript-eslint/eslint-plugin": "^3.9.1",
        "@typescript-eslint/parser": "^3.9.1",
        "auto-changelog": "^2.2.0",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.5.0",
        "dedent": "^0.7.0",
        "eslint": "^7.7.0",
        "eslint-config-prettier": "^6.9.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.20.0",
        "eslint-plugin-jest": "^23.4.0",
        "eslint-plugin-jsdoc": "^30.2.4",
        "eslint-plugin-prettier": "^3.1.2",
        "glob": "^7.1.6",
        "husky": "^4.0.6",
        "jest": "^26.4.2",
        "json-schema": "^0.2.5",
        "lint-staged": "^10.2.11",
        "prettier": "^2.0.5",
        "rimraf": "^3.0.0",
        "rollup": "^2.26.5",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.2.0",
        "tslib": "^2.0.1",
        "typescript": "^4.0.2"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.1.0",
      "dist": {
        "shasum": "5c2c69456e9fa4d1289c8bb526505a202785c2eb",
        "integrity": "sha512-HJXQRfIohpA/tk4TjMXFf1qVXF4WLiuzpzwU6xtavSwx0M+ULxfTcICb2Jvf3qSbWF0S1tzNKfXCCVqP+qPE5g==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.1.0.tgz",
        "fileCount": 8,
        "unpackedSize": 162629,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfflIMCRA9TVsSAnZWagAApQsP/34lQI/nlvA1vUUHmi4g\nMfjhKQz8HQswqByhWlKD5fYAgbqxxhcqdChyGjIda0B9JvFYeRnYE0HKRpU3\nTcuUxl1ZDIiNGvtK8/086GJRMg5LhC2Dp+wj9rC0XqEiwz5Cql2U1v8NdHmR\nNDEj9pz6Y0v1SwnrrtZ2I5QlmOu9o5/PkYVjotHoyI3Md4KfUvqFR5lafP7u\nW19JiOqLjipNt+368lu2xeIWbpAZkoXphZ+Mrxu888LVG//lstLbXRPhTSyE\nd/r+AMqLOwsxKDrO2ZKVgYvfLqhnNxCIUws/tkXSoH+vJkMps9B9enG0ierT\nJMH/33hZ9pcb80ukJfuK002UFlF4dCwxQl+RxYp+Ka3hSEtPhoolEf/Pi3f7\ntLr9yb2f4Ke8t2n6HE+PVVTAyWZX/jwfzdngnByUGjA0A/HRXvDHXi6e1Ugo\n1CapbGQaB1VDW1MGc2Oey/BXckEocX+22ko21QxiKsqkdoJrmywbU6A7nDZC\nvFpcpdSFIdfa2oCjTYH90SddpOcHdo51s/YCHhcUdvSZDAx4O6AZgRAfxULD\nyZ3QUJxbCVCpvHz2Mo7pLN7QCmE6MINEzpY3IIwCBA4FM4lwi6sBO5F0DAq9\nwR649XKjgmJaD+0RwQUnUb1BvJ6M1M/iQEta1rp9jBAxbfB53BReWs3n+pyT\nPzlt\r\n=Ds79\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDHf8zrYlTEnPSUrvITLJxMCMT6BS1FMcoNdRPpctuyUgIgRngoCyrb+yFnbGNdhgpA7ZRBx0pryAm7tMthU0PHljU="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.1.0_1602114059791_0.9726266723024335"
      },
      "_hasShrinkwrap": false
    },
    "3.2.0": {
      "name": "eslint-plugin-functional",
      "version": "3.2.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.45",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "14.14.12",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^7.0.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^30.7.8",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^4.3.5",
        "jest": "^26.6.3",
        "json-schema": "^0.2.5",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.2.0",
      "dist": {
        "shasum": "c2ce7f22116245b310688f3849f61ce1aac29ebe",
        "integrity": "sha512-U1Rdp3BfWHWXAGFBMPxQLzqDVS/Ral0fuey3EMCzruHAWveILY1Za9BajsU1RgWqZyQ5GQt4lxBjRUcSGhiDZQ==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.2.0.tgz",
        "fileCount": 8,
        "unpackedSize": 154569,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf7P7DCRA9TVsSAnZWagAAJ0YP/jWwvckOpCO8OEcU/Ag0\n3b493T8Ju2PcZbJrmoRJASr9O3kbe/g6cr/ZtBtQvihNHfHFIpFs4a9GSVpQ\nY++vwWJkuqKWzeuUeaZB6FHRCrwKdvbt1dDrVFf6UhTuaSQZUzdnSLVzBVr5\nX9X3zMh9nraiuypX5mx6uSy41HSgwAvZSOtFFAfGiBegVtT8z/9jr1W7wIV5\n86bc33Ym9PdfxXtY+Y0StXR0IRuK+8oT70rYXJ8zXQi5Ue+FETigV3QnGalg\nBxj8y6H2kwVAnJVg1YhOMdgCkPqyYWglgKslgWQSIgIP3G0jcP7dv09O7mPw\noinUEMT6HiEYbHyKdG69jJQaUyQDOnwN5VOQtOFTXCWzYQwlrJ1/bLtWVaHr\nxAlA31TE/GUIltS5V8r7Co3UgA86cezuq3JzCnnI83LwmJqeH7LWx18Y1m7e\nsD67oJ0MnrxqNtaVdysbnteIZjnIcCrO3UVdVq+sqxmWUTnEr5RsBJ9GjiMq\nBVHcsw3HN4gRmqFVMf5yPDWHZftMBK0Rl1J/qoHCv1fMaXWMdsFHHNBqsbvk\nUgCKlnittPqBahi0gE4RoRMRGtsNLB1gqtxJDf2feOLIhy1f+NLnxSb0Pb2R\nB0aDnARoeOARVQNHpL4layXAfR08jFJLzweDaILJ12Q5D+rbYUohuDOD4RM5\nG8HK\r\n=8tT8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFLJoSdThSFwNLjEqChTuoxKU8vQ1qmanvsb+fflLXd4AiACWMX1LC4uWi+DKKnv4NuadLUrmGNPUMxQTwMhdvZMtg=="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.2.0_1609367235063_0.6291579013973987"
      },
      "_hasShrinkwrap": false,
      "deprecated": "broken release - fixed in v3.2.1"
    },
    "3.2.1": {
      "name": "eslint-plugin-functional",
      "version": "3.2.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.45",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "14.14.12",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^7.0.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^30.7.8",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^4.3.5",
        "jest": "^26.6.3",
        "json-schema": "^0.2.5",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.2.1",
      "dist": {
        "shasum": "d5ad668b57646ad24f4ef0476328408681d59061",
        "integrity": "sha512-uJ8W0FznWsKp4exxO79b0xSc1WNROzDiVNGgSFOwdZCBeUHQf89BqwqlshNW9aSz/kg2gVGs+Ue6AeTpNSFM/g==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.2.1.tgz",
        "fileCount": 8,
        "unpackedSize": 154777,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf7s5ZCRA9TVsSAnZWagAArQAP/3hd5/2ghIs6MSz0ZzKl\nve/tlSS1Vxh2k7jUSwo1DUUwYRlyFdZLeqJAxqHf1fr1m9MWQRf+7abvuETY\nSTAekkkoox1GD2yaEvz1XN5lHBfejMkc49Dt35JaJr5Xx8moubLbzEfDMZL+\najjFIlMcXX1MgwA5hD6UBQ46/7MXY5IpD33VYy9d5pn+GEsS9BbGcZ4bTJy5\n44swSu8pLIVrXovioqlqVylJIngWaYD+GF5kVIYrwLl+cfW7a253Fwp7QKvi\nGLOYHXD2vvWTCl5zLaS9xBZN21axToeHvuqW+l93ld/bm/P643MVjGJqPZcf\nrC9wfQ+EIp5teNN+4O9wlDOf2bcrHpou+XO3WohMa/3KYq76Vj0Ds8nLuFIS\n+NxpnVGBsIiRISsS9lHlrM6yHMumBsQ3MRgjFR/VDk3N8bmYHaXsJa/wvpsH\n6Z5KPx1Phlu5Qd3RDYrT8splmC1XhThgzG5tYHDYwlTMTWWxfxzKsWQsd6P8\nqVUspdYmEmxbbisUnuESYgxEyFRuzhS07gpfeGx/o+EN6s9fkLCWVUpo4fG9\nYx2M138c5/LBA/r6w05NVZAclgDVVmdQzuI6aoSBX6KAQCKlkqSxSTP8XS3e\na+g4JyVs8j1V1i2Wu6ssEydYh+druSLHN0jXUeGdMN40YnCKLK5WcgJEjSBj\nlAKP\r\n=Gf/+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDU6tEmgl1NJP3IEFprv0u2mR+gSCwCE7Sr4mQ19ZUXvQIgP8HhvVKPGa7TQepyAQxmdOhVD7fsNKj4uKuUuh1IUP8="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.2.1_1609485913042_0.181867368429786"
      },
      "_hasShrinkwrap": false
    },
    "3.2.2": {
      "name": "eslint-plugin-functional",
      "version": "3.2.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.46",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "15.0.1",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^32.3.0",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^6.0.0",
        "jest": "^26.6.3",
        "json-schema": "^0.3.0",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.2.2",
      "dist": {
        "shasum": "0af4661447e65077edb17ba5b3c95ff0b52b090c",
        "integrity": "sha512-2w1vO4/H6b9Ik9PdSSJb33hA990q8x52cN61FAFPoLQgqmey8OaZ555Lzp6r4rBTLiphSnvl4Q43guASxjxU+A==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.2.2.tgz",
        "fileCount": 8,
        "unpackedSize": 155259,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg+amVCRA9TVsSAnZWagAA1YYP/1QPzq5CpY2pIKfmNfiq\nkH2wamxBALggtRX6OOHLT9iUmVPae3wg/es7ceDaKUpcH07GUPs4ChJcZxm1\nA0AO5uUIdkZyIVUcok4bS5+R7/Jo7OCO3b+0KzinV6NCxuqg+nnUclSklDxE\n1EiIXTQzTQGO5WaIJ6PSSBizOJ7Vx/2iT+uKlnl0skObNnXgl2d5Yu24f7ov\n1GDsptaa3wgmdfB8govumwZBoo8JdjPfz+v+PhpPKdkQrmmW6xlae9Gic5YA\n4zl+ZP/DZpav4DTIig7NrMNHRFbRR307hbuo0Yrt+ub1tpAID7xb5V5s9+nv\npBTDXz4uiPyRh8nGJLmujVt/KRVXX12EVZLhBHIJ5lD9cI0MZPp6ImPK6/4r\nlT623kYJB9e7vTv8hONMeeu2+bPrmb+7bA+YHuMMKabp6PWOhyuyu1i2wX4J\nXfEP0JsgsndPiH2OgSqGUrkoKq1PALF4iH6dvTJX6xSDBkucuclXVeAwbRlp\nW8B1UN23GVrWzMTIww6SVwlrI955FhLJgfIpLg3jIXEuZKTBFECL2DtClQRm\ntTLmNaugR1oNISQebHyElSi6ji2RIPkh57mcsWsUYFEaDCODg5r/t4nWix+2\nYHle2CDi1PfLNxJ8SiSQQp+Z8Y4tKmLVuFnPDZCO+LGt7m7Tg4Hxk8kSOkI6\nhOrj\r\n=s3p0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD35dBsQkG9AlUNNjmhDaFQ00hSfq0QLoCRMJL3dCJX0wIgEeGzleAVALZG2xtHUW/Lv0HBxYeinerzCRWtlXtxYKo="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.2.2_1626974613123_0.17899720469007785"
      },
      "_hasShrinkwrap": false
    },
    "3.3.0": {
      "name": "eslint-plugin-functional",
      "version": "3.3.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.46",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "15.0.1",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^32.3.0",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^6.0.0",
        "jest": "^26.6.3",
        "json-schema": "^0.3.0",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.3.0",
      "dist": {
        "shasum": "8cad0182c097ffc1b6c2be760516b684f12a454b",
        "integrity": "sha512-ous+c6iApSeW6H6M2hTofWWUN8R7/6Mb4sOd1vSgQOp5ceRJOqK6zTTl3N/LLV8YT63oxq+eSCWAmGeo44Sq8A==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.3.0.tgz",
        "fileCount": 8,
        "unpackedSize": 162011,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg/wNjCRA9TVsSAnZWagAAWksP/1oiSEbSS3YDvH7xYEUk\nAUp/fDwEmnbaZrIixy/DH3IKBA4D9emdDZWBM/fsUCtKQRILF9td4TG9WDlt\nU3+ISNht1VKMHBV6V/KvxjYy6FluqnooVbzx5C5mOxz7R2zdzqwVdAc3BayQ\nmOpaawDGASM0gRU84a5FvLqbC1yiV9+P2NjTffmmr8n5FdAt0hTMz3beJ5aG\n8gaDWgZsRpFn3ghu3ZgC/bVgK1IaHhC6bZgI7tNHZi1A1WCNHZXuzfu6mgKU\nOwAexBBhpMXBXehIeiT8euL0a2ZtaAjn4QQHxaTK+rzcSc3W2foVz0zLI7m8\nAKOnEYK5B/7sU1oVptxfUT6xfZ0v17xQYu0U8Wx0h8PJKb0QZR4CKQBCW3GV\nIph1f++cKQ1O7ezWioV+qp3uGgFnD3llU1UXsAEvgEq+FqYymujKSRUtE6Bs\naCcucBZugkps8dYY0Xi5N3nsmd1rM3qUz9i9TICM1LpH5upXKJLNPsAsV5Ew\nuROJnZdwbW2CgPRPN3bwJsEwsydz+OGttW4EpOTJtuktPG/DRZbJNp8xxWnw\n9ZPHpwW4xTStfM5TQs5KFIBaDz7oRhl5c/gtObsCmwFAbAPLDZT2GN7PTCMf\n/y2I4+e2GIwagYUi8PmlK1ja11qMqJ9eHNd+VW4h0QyVseZchQL8FyTkPupK\nTu7J\r\n=JeMq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC5dRLc4O7UoRKbg8ei/Y7Mu7HaHsOtCATlEFXpfs0MhwIgF7R+YfVz0qGNAwyd2LmzdVI5G8PStqcR53wBeuASqtY="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.3.0_1627325282950_0.16731435481438695"
      },
      "_hasShrinkwrap": false
    },
    "3.4.0": {
      "name": "eslint-plugin-functional",
      "version": "3.4.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.46",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "15.0.1",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^32.3.0",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^6.0.0",
        "jest": "^26.6.3",
        "json-schema": "^0.3.0",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.4.0",
      "dist": {
        "shasum": "655eccbcc112442e83184346aa803918d9e8769a",
        "integrity": "sha512-2UvFDli5ncjjFwy+Bslq6Cn2TVt+pCE7DlVXKehpVstGfb+E1cdzrOgoB+4M+/V56vs15K2+M8kFRxMW3rxhnQ==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.4.0.tgz",
        "fileCount": 8,
        "unpackedSize": 163281,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhBMbvCRA9TVsSAnZWagAAdNMP+wVEZaiY+iAnBpcs3zo/\nwLt5Ytd++km8Qeq9F9uKfoYK6Alle6+D30RwlLHQE0iJrbVdk59vMwUHf6zY\nNBOVoHcgko/AslUR8eYMhXdyGfESNuuTmzCBZDAZ+uIyD/0RZ3MX+EAMKYpW\nq63IbGkeocZarHdpiei7j0ambiohPuWmxRElbFc5rqqE3tsRgrdVHbgAgqDB\nm8mG27ZsQliRSfZcR8K/OH7+J96K5UC8F+aUdkLDi6izhohXE36utxFR/HB8\neWlZViK6/O2cbazo8uvqEIOAcQCD1RXMJ0fQ81FQ+T3UTxJn7O6oPSqfLk2g\nwTxO+A8fGEhsk1ihy3i50sUGNdpxI1pa0HZmAHkuVpPml0xNTRUQ5ajvog3Z\nYn1Vb5oqOEhqPxI78xW0OV+/Umfezz/JtOOB8xUVTRqhH/cBQkaGqydm1Hdp\n3hgovfC/jlo7rru7VxMLKmk4C9ii8mstjhHwMPFk4XMDNbOjE+il/AuedRBu\n7OQWVBrsxnvLrN5l8Acnh7eVed7KRyy0+C/tszy89Ep8YhBhRJ4NXaVb2+fS\n3wmLCISQI/mbKgK6TVipCrMkQiJaCqEZiNI+tOTf3Ou0rtYvhUSeT8nQz97b\nKsoAm7MtjmF3gMMEmClSzSX35jqhpa76zXVC6GY8Hnuueb8cIUBgNEsxZX/Y\nd4Ty\r\n=1BcB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCAxoAN/13X+d/eTT9xJVmBtGTShPNJooCHZErCq4xWhQIgO2TlMYqPjWG2fZtTig0eVjDgNqhnRtDTeIQQTHqO9Vg="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.4.0_1627703023801_0.5048777420882085"
      },
      "_hasShrinkwrap": false
    },
    "3.4.1": {
      "name": "eslint-plugin-functional",
      "version": "3.4.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.46",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "15.0.1",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^32.3.0",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^6.0.0",
        "jest": "^26.6.3",
        "json-schema": "^0.3.0",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "tsutils": "^3.17.1",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.4.1",
      "dist": {
        "shasum": "14f513f71299ae0727e59fd2ac47ca7e1dc7c67d",
        "integrity": "sha512-6J/++BOgQUwgWMToPFScYRBk+2fE5ljiw4M+aQTheYWRK1MImohUQh5oqzecKFVD+AlEM2rZsdhH9tlSiK17cw==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.4.1.tgz",
        "fileCount": 8,
        "unpackedSize": 165869,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhBPprCRA9TVsSAnZWagAATuoP+gOTjE+1VCf2UqMkI6ky\n+JN55JeHRNgypNv3VXVm1az8AXNLW7bDvhPBdyq4T/Bc+iIZBsvo6uwkjIls\nOzFcnw9ihB6AjxNhA4AB+JeJH15qQzjfg2lDFOBuKnPz/CoN2MSyZ7OkmIQ+\nueKEssoS56zbaY8D9SsUE3fK3YsS2DjFkBeXPiUSUWcCkkDYLUJ9h+kN3hKz\nWJEJN1tva/oZA0IsIaiQp52QLTQVhbSOnvPgGed/KnYZgpzWIEeYZ8zvIVwe\nJHpu6/GXvC9rReHy2Ra4AAZaBg6S9EFEUthhAUIEM50Qo6gh8syCAUce/1Ol\n8f1W1bKK7A7qHkTUMMxYTz2WV02EFgYAU7euInIvegdmATMkYQRaXJlgj2Td\nmb7x9u3Oq/rXeAtDGB+bOpA7KMW8EwiAlZvbnJf0HsE1SIoRbn6nWMPWvlhL\nnWgfUQW8pZPSosqOJtHMVQ0x99e6a/KPvYTk1e+8Nstyc+ymTIGIiauGeybs\n30N66VhOracOoq2dT/n2WFQ6nxS9tT9WAPvZR+cF2HneshepPd4lf58hguAU\n8VIth1cLpyC7zpzh2vla9LXyicrbhLuOKdx3rHTXoLMdQF0HscFCvw9zo1uA\n4RjrhgnoRYnNOlcGhYoxCur+myuCcn8uqlgFgKsRJ1rOtGSBA0a02e/ZIOkL\ngwD7\r\n=mZCy\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDeOf3Nnmlkx9SC9moEsFES6j0kQHepsW6hJbh7kGj1YgIgLbYYB1LOqNo1OHxCidpHZIvKbwSI/9AyiqGT6zyafXQ="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.4.1_1627716203503_0.20451079974016362"
      },
      "_hasShrinkwrap": false
    },
    "3.5.0": {
      "name": "eslint-plugin-functional",
      "version": "3.5.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.46",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "15.0.1",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^32.3.0",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^6.0.0",
        "jest": "^26.6.3",
        "json-schema": "^0.3.0",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.5.0",
      "dist": {
        "shasum": "3bd24cdc939286f15045b280b64266f8ae70282d",
        "integrity": "sha512-F4ovkdg7eIRlAqeMgCv36I6v2yUHybyPdxZ78vT3YHtvRb3HAOtSKZY87ioUMKd2MgfBFoWmGTd/5Ev/JcGVIw==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.5.0.tgz",
        "fileCount": 8,
        "unpackedSize": 169044,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhBoSNCRA9TVsSAnZWagAAhEQP/RFplR103+lDpeQqu98T\ndDr+/QL9RoHQko+uvde7roR1hK3TGOifvXit3udbYi08F20yMgbxDF6SlPY3\nrQhNUZZT9h4kE+0VZs7JcdbLXAERnG2QtzBcJQSIpSwBXBwO1n2u/QPIQCU9\n6j9aYOumN3LevPYcs4/f0TJicJkmXkDHB5RpAX1vKZm8ynws9gl8RYONP0pK\nWRP6LxO0hnYQ3xSUjcusb1iCIPKUhWZaCa7FG+UQtHjI/GeD/jRAxpqjaBHD\nrzxs+pbYFs+yXosfKPLyQBI9/rGzV8XvGeP3NFQHMFw3q6bNoXYHlXNo8hYb\nfJCZMfludYsKGBv/x09rtM7u0AREOlzR3+lKeHlhqVq4EXwSjrbCAggOsM8N\n7Y0wSL6/IDMwWZveCnMFuvHjUpt+6qkDfJvPjN25LaTqi2/F3fYZvPSgTTVn\njuu5GD6i9+DMEdwvDiF6SOOh02f+xFnvetnTWepVwXbsryFseQhmB+I7GKii\nTy+EMJYqd1iDfAvXP2H/zzXmhHGxauhe85jac14m+Mfs9uRuW5FPZgfBC4WO\nqxMKZEyPC6kMda4t4FcIwHq1KPcNtBD/wVqQb3srj4cTYnIdvgL/+1k4cn2B\nzbCV9vqCBW3fAfYCNIim8KciNiMuV72rNgduNwFcFmFLbSasMgvz//r05uTN\nJhWM\r\n=FMTd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGRCkZssc062dHrSj/I93w4Vd5iCg48RXND+p5EghmXIAiEAlolliXJMLjln7ZJh6GpChCQg0m/hAdBTR+TVsQLoywQ="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.5.0_1627817100579_0.48169394142242705"
      },
      "_hasShrinkwrap": false
    },
    "3.6.0": {
      "name": "eslint-plugin-functional",
      "version": "3.6.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.46",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "16.4.10",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^32.3.0",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^6.0.0",
        "jest": "^26.6.3",
        "json-schema": "^0.3.0",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.6.0",
      "dist": {
        "shasum": "566126a33cd05b64ffb1bcaa11c96ee280398a44",
        "integrity": "sha512-Utujj1dfQ5Bf79kN2BCoMHqnpM4KTMjQ5emMicaWHtcvySBc01+drGVEo9AEojUD9Rs9siprMCzbrT4zwFYzRA==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.6.0.tgz",
        "fileCount": 8,
        "unpackedSize": 170988,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhFSK9CRA9TVsSAnZWagAABscP/RakOF4H4TRLnVC9qm74\npnDY1R9NLzgzn5dzjLGordh2KO7Y7ASfDmaSFsOr5f6zU06avUJSCHwuEifR\n/z0/N5pegBYXFeNz46nldrP5Pm/0GIQZoP1i69CkFIaFj5TxOlN2y0FBW6Rr\nwVSnnjMBTG59sYTnLwIQ1k5Pr5Iu7l1eUKuK02xmzx1TX5ktMEgWllIQfEd9\nXYei/ZQVug7gErA4KiYbOh2GI5c3ALqaNsrWng9Zb5G527AU34GCIxxD9d+p\nOFMEustRYejq/fALYddDbwJ35Df+cT+rWZ1XXC1/4qPynH02i5iBc2VyLlFK\nE1xlDGj7XAu5rIV8KVqz3GQR01SDUP0XNWUWBR9mVeu0iu5TVam+9ghq3olt\nLxpE75RO84QOORUzUvyCwC+Kee0Mc2B7E91WEPz400KpLwlTIoyuOrH2RGL4\nBwwq+FYmh2xcolBeyAguC0g0uf4iUWDS0q1wl3vUX9hOnBzGTaoxttEXIKkw\n9pffC1SDxvl1FL9qa/oSbfYytq/Or6swnQPGfUPNHQ/LdGW3fBQ81p4QGm/a\nxJbogc9znKxZly0Aj1b0/kZ4YKny5FanwJ/qxq74hEi6PQkXMlD0M+oXuW9j\nGYIQmuR5TuVDP4Iaw7eKuvF+9VwU6uqGj1EcHKLZUgHb7EK0X8S5/fH8QvCb\nYA5Y\r\n=2sqo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCQi904VxDWtC57Nc0ds+HAg9ArB22vZtTqjPNS/JqG/gIgbjn5ixDC0JESVcg7qnJeFSkMQipm7AGM6draRerTKQM="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.6.0_1628775101538_0.004340855306713909"
      },
      "_hasShrinkwrap": false
    },
    "3.7.0": {
      "name": "eslint-plugin-functional",
      "version": "3.7.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.46",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "16.4.10",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^32.3.0",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^6.0.0",
        "jest": "^26.6.3",
        "json-schema": "^0.3.0",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.7.0",
      "dist": {
        "shasum": "b8fadf2b8c597f9f05a67b9e96bb3f90c82f3345",
        "integrity": "sha512-nyea0v1CM7RmcnZf5/c2GTTvSSgrj468o75MpVRIs6nlAbFU/7694r6DFMc5YxV3Sso0fSgXbTPYSsff/r9T1g==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.7.0.tgz",
        "fileCount": 8,
        "unpackedSize": 173873,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKbgHCRA9TVsSAnZWagAAum4P/2c2fAvF8Z9PY/dF634k\nzrCNFjQo3+QU4ltheUugFl7u/mfZ62hnmcq8yotsG+U6V4pGep2tk/np2AX0\nCuJWUZvyewPNyskYXINGDwFkDHmzXwSX9eDOcqxHu3FIg1RsxxFCDNT4YN28\n0w0Re/iOLwhTHTqAiSMWXrDLD/7tqrfTGy415ggDuV8liUmDWp3N7mQdaL39\nBEColbAU+oJr0T4ZvBWnmteJuTUHfYx3DBktqFrj+MffOYswu6zLQTEpbZxQ\nGzC3myeUXr81W7vZEIf8sl6Gd559NFg6BYmbotgrTT94f/B5cGT0ydjZVzkh\n3uFrE+l19RhKABmWijj5q1Ws97WN65zQv9P69JmgME4MBTcrtMhc7OPsC4cS\nOl9CtbHnaBFkue8DdiQVCmBbzGzCAk8eTdNdqYj7jpNor7dE73Aeo4WIIske\nG1LWBRXwX4ngEgNb0ZQVbNRYYxWBHYuSSlqj9ERTOnllo2abDWAtnIzhPYKn\nG5xCNrgRfvEogPr3t0f/a2ILsqIAh0zHoMdGoY1jTswA2rChj9m3KjiG7Gyn\nP4GS2pFb9qh5idPIoprQhtTNgei862vVwgwUbrKiawj2myw2gOKN/5yjLURf\nELZxqtSiVsXVYxA/MTOkmH/g39K73IOewoLRk9JiEYPlyqsspRmryRmY5fsQ\nNqZV\r\n=lOcV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICBBWSS0bYDSqEtK75N0zJ5lmumuW751RsnGmcrZ0gwTAiB5nePi3Bj9cMhyZzJrXnqaZIu6y9CjWKZRBOfF0NX5Nw=="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.7.0_1630124038988_0.1916278771719857"
      },
      "_hasShrinkwrap": false
    },
    "3.7.1": {
      "name": "eslint-plugin-functional",
      "version": "3.7.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.46",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "16.4.10",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^32.3.0",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^7.0.2",
        "jest": "^26.6.3",
        "json-schema": "^0.3.0",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.7.1",
      "dist": {
        "shasum": "42a25f85bd0b36878da789326b1f467c0e8cb193",
        "integrity": "sha512-ykMhjogt/bb2TOydUYiypwy8mTyX27Te2sb1T+5X2Bs71EcldPFhNyWow0KrCtn+BNV1aYoLg1umGxE2NhuuUw==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.7.1.tgz",
        "fileCount": 8,
        "unpackedSize": 175158,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHgoKUAu+aucaXT7NovkD4+zpgmlT6vZehxzKnOe/POKAiEA4V1p3bchKGlvo8FBri7tAn7N7BptY7Sp0ub1/iLV6cI="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.7.1_1632063627319_0.35509979072523823"
      },
      "_hasShrinkwrap": false
    },
    "3.7.2": {
      "name": "eslint-plugin-functional",
      "version": "3.7.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "compile": "rollup -c",
        "compile-tests": "tsc -p tests/tsconfig.json && cpx ./tests/helpers/tsconfig.json ./build/tests/helpers/",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "eslint . -f visualstudio",
        "lint-fix": "yarn lint --fix",
        "test": "jest --testPathIgnorePatterns _work.test",
        "test-compiled": "cross-env USE_COMPLIED=1 yarn test",
        "test-work": "jest tests/rules/_work.test.ts --no-coverage",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build",
        "preversion": "yarn verify",
        "version": "auto-changelog -p && git add CHANGELOG.md",
        "postversion": "git push --tags && yarn publish --new-version $npm_package_version && git push && echo \"Successfully released version $npm_package_version!\""
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^4.9.1",
        "array.prototype.flatmap": "^1.2.4",
        "deepmerge": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "object.fromentries": "^2.0.3"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^17.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^11.0.0",
        "@rollup/plugin-typescript": "^8.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.2.6",
        "@types/estree": "^0.0.46",
        "@types/glob": "^7.1.1",
        "@types/jest": "^26.0.19",
        "@types/node": "16.4.10",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "auto-changelog": "^2.2.1",
        "babel-eslint": "^10.0.2",
        "codecov": "^3.8.1",
        "cpx": "^1.5.0",
        "cross-env": "^7.0.3",
        "dedent": "^0.7.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-eslint-plugin": "^2.2.0",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-jest": "^24.1.3",
        "eslint-plugin-jsdoc": "^32.3.0",
        "eslint-plugin-prettier": "^3.2.0",
        "glob": "^7.1.6",
        "husky": "^7.0.2",
        "jest": "^26.6.3",
        "json-schema": "^0.3.0",
        "lint-staged": "^10.5.3",
        "prettier": "^2.2.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.34.2",
        "rollup-plugin-auto-external": "^2.0.0",
        "shelljs": "^0.8.3",
        "ts-jest": "^26.4.4",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.1.3"
      },
      "peerDependencies": {
        "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=10.18.0"
      },
      "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jonas Kello\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "_id": "eslint-plugin-functional@3.7.2",
      "dist": {
        "shasum": "c90325dddfa822fab27419375084d12158f05da1",
        "integrity": "sha512-BuWPOeE0nuXYlZjObYOHnYf7G3iG+sysxw84I579MsrH+hy5XdXb2sdabmXQ5z7eFGCg2/DWNbZ/yz5GAgtcUg==",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-3.7.2.tgz",
        "fileCount": 8,
        "unpackedSize": 175090,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBxEtXhFb060mqO8BWmMKcqO3vdW77lXEHSDue2nPa9mAiEAjmHR4DcNjxQyzG5dHZtqcrjrsRFJmTYtb7zoxzYhGvY="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_3.7.2_1632128248740_0.4503657643000525"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0-rc1": {
      "name": "eslint-plugin-functional",
      "version": "4.0.0-rc1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "postinstall": "yarn husky install",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^5.0.0",
        "deepmerge-ts": "^1.1.3",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^13.2.1",
        "@commitlint/config-conventional": "^13.2.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@rebeccastevens/eslint-config": "^1.1.4",
        "@rollup/plugin-commonjs": "^21.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.0.5",
        "@rollup/plugin-typescript": "^8.2.5",
        "@semantic-release/changelog": "^6.0.0",
        "@semantic-release/commit-analyzer": "^9.0.1",
        "@semantic-release/git": "^10.0.0",
        "@semantic-release/github": "^8.0.1",
        "@semantic-release/npm": "^8.0.0",
        "@semantic-release/release-notes-generator": "^10.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.28.1",
        "@types/estree": "^0.0.50",
        "@types/node": "16.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "ava": "^3.15.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.1",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.12.3",
        "dedent": "^0.7.0",
        "eslint": "^8.0.1",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-ava": "^13.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^3.6.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-jsdoc": "^36.1.1",
        "eslint-plugin-markdown": "^2.2.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^5.1.0",
        "eslint-plugin-sonarjs": "^0.10.0",
        "eslint-plugin-unicorn": "^37.0.1",
        "espree": "^9.0.0",
        "husky": "^7.0.2",
        "json-schema": "^0.3.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^11.2.3",
        "markdownlint-cli": "^0.29.0",
        "nyc": "^15.1.0",
        "prettier": "^2.4.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.58.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^18.0.0",
        "ts-node": "^10.3.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.10.1",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.4.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-logo.svg?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/jonaskello/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/jonaskello/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/jonaskello/eslint-plugin-functional/branch/master/graph/badge.svg)](https://codecov.io/gh/jonaskello/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/jonaskello/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/jonaskello/eslint-plugin-functional)](https://github.com/jonaskello/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n> :wave: If you previously used the rules in [tslint-immutable](https://www.npmjs.com/package/tslint-immutable), this package is the ESLint version of those rules. Please see the [migration guide](docs/user-guide/migrating-from-tslint.md) for how to migrate.\n\n## Features\n\n- [No mutations](#no-mutations)\n- [No object-orientation](#no-object-orientation)\n- [No statements](#no-statements)\n- [No exceptions](#no-exceptions)\n- [Currying](#currying)\n- [Stylistic](#stylistic)\n\n### No mutations\n\nOne aim of this project is to leverage the type system in TypeScript to enforce immutability at compile-time while still using regular objects and arrays. Additionally, this project will also aim to support disabling mutability for vanilla JavaScript where possible.\n\n### No object-orientation\n\nJavaScript is multi-paradigm, allowing both object-oriented and functional programming styles. In order to promote a functional style, the object oriented features of JavaScript need to be disabled.\n\n### No statements\n\nIn functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be disabled to promote a functional style.\n\n### No exceptions\n\nFunctional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n### Currying\n\nJavaScript functions support syntax that is not compatible with curried functions. To enable currying this syntax has to be disabled.\n\n### Stylistic\n\nMake things look nicer (in our opinion).\n\n## Installation\n\n### JavaScript\n\n```sh\n# Install with npm\nnpm install eslint eslint-plugin-functional --save-dev\n\n# Install with yarn\nyarn add -D eslint eslint-plugin-functional\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag with npm or `global` with yarn) then you must also install `eslint-plugin-functional` globally.\n\n### TypeScript\n\nTo use this plugin with TypeScript, a TypeScript parser for ESLint is needed.\nWe recommend [@typescript-eslint/parser](https://www.npmjs.com/package/@typescript-eslint/parser).\n\n```sh\n# Install with npm\nnpm install eslint @typescript-eslint/parser eslint-plugin-functional --save-dev\n\n# Install with yarn\nyarn add -D eslint @typescript-eslint/parser eslint-plugin-functional\n```\n\n[tsutils](https://www.npmjs.com/package/tsutils) is also recommended as a peer dependency but if you are using [@typescript-eslint/eslint-plugin](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) then you don't need explicitly add it.\n\n## Usage\n\nAdd `functional` to the plugins section of your `.eslintrc` configuration file. Then configure the rules you want to use under the rules section.\n\n```jsonc\n{\n  \"plugins\": [\"functional\"],\n  \"rules\": {\n    \"functional/rule-name\": \"error\"\n  }\n}\n```\n\nThere are several rulesets provided by this plugin.\n[See below](#rulesets) for what they are and what rules are including in each.\nEnable rulesets via the \"extends\" property of your `.eslintrc` configuration file.\n\n```jsonc\n{\n  // ...\n  \"extends\": [\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n### With TypeScript\n\nAdd `@typescript-eslint/parser` to the \"parser\" filed in your `.eslintrc` configuration file.\nTo use type information, you will need to specify a path to your `tsconfig.json` file in the \"project\" property of \"parserOptions\".\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"./tsconfig.json\"\n  }\n}\n```\n\nSee [@typescript-eslint/parser's README.md](https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser#readme) for more information on the available parser options.\n\n### Example Config\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"tsconfig.json\"\n  },\n  \"env\": {\n    \"es6\": true\n  },\n  \"plugins\": [\n    \"@typescript-eslint\",\n    \"functional\"\n  ],\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/eslint-recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:@typescript-eslint/recommended-requiring-type-checking\",\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Recommended** (plugin:functional/recommended)\n- **Lite** (plugin:functional/lite)\n\nCategorized:\n\n- **No Mutations** (plugin:functional/no-mutations)\n- **No Object Orientation** (plugin:functional/no-object-orientation)\n- **No Statements** (plugin:functional/no-statements)\n- **No Exceptions** (plugin:functional/no-exceptions)\n- **Currying** (plugin:functional/currying)\n- **Stylistic** (plugin:functional/stylistic)\n\nOther:\n\n- **All** (plugin:functional/all) - Enables all rules defined in this plugin.\n- **External Recommended** (plugin:functional/external-recommended) - Configures recommended rules not defined by this plugin.\n\nThe [below section](#supported-rules) gives details on which rules are enabled by each ruleset.\n\n## Supported Rules\n\n**Key**:\n\n|      Symbol       | Meaning                                                                                                                                |\n| :---------------: | -------------------------------------------------------------------------------------------------------------------------------------- |\n|  :hear_no_evil:   | Ruleset: Lite<br><sub><sup>This ruleset is designed to enforce a somewhat functional programming code style.</sup></sub>               |\n|  :speak_no_evil:  | Ruleset: Recommended<br><sub><sup>This ruleset is designed to enforce a functional programming code style.</sup></sub>                 |\n|     :wrench:      | Fixable<br><sub><sup>Problems found by this rule are potentially fixable with the `--fix` option.</sup></sub>                          |\n| :thought_balloon: | Only Available for TypeScript<br><sub><sup>The rule either requires Type Information or only works with TypeScript syntax.</sup></sub> |\n|   :blue_heart:    | Works better with TypeScript<br><sub><sup>Type Information will be used if available making the rule work in more cases.</sup></sub>   |\n\n### No Mutations Rules\n\n:see_no_evil: = `no-mutations` Ruleset.\n\n| Name                                                           | Description                                                                | <span title=\"No Mutations\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------- | -------------------------------------------------------------------------- | :---------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)             | Disallow mutating objects and arrays                                       |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                             | Disallow mutable variables                                                 |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-method-signature`](./docs/rules/no-method-signature.md)   | Enforce property signatures with readonly modifiers over method signatures |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`prefer-readonly-type`](./docs/rules/prefer-readonly-type.md) | Use readonly types and readonly modifiers where possible                   |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: | :thought_balloon: |\n\n### No Object-Orientation Rules\n\n:see_no_evil: = `no-object-orientation` Ruleset.\n\n| Name                                                       | Description                                                              | <span title=\"No Object-Orientation\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------- | ------------------------------------------------------------------------ | :------------------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-class`](./docs/rules/no-class.md)                     | Disallow classes                                                         |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-mixed-type`](./docs/rules/no-mixed-type.md)           | Restrict types so that only members of the same kind are allowed in them |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-this-expression`](./docs/rules/no-this-expression.md) | Disallow `this` access                                                   |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n\n### No Statements Rules\n\n:see_no_evil: = `no-statements` Ruleset.\n\n| Name                                                                   | Description                                                | <span title=\"No Statements\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------------------- | ---------------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statement`](./docs/rules/no-conditional-statement.md) | Disallow conditional statements (if and switch statements) |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-expression-statement`](./docs/rules/no-expression-statement.md)   | Disallow expressions to cause side-effects                 |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-loop-statement`](./docs/rules/no-loop-statement.md)               | Disallow imperative loops                                  |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                     | Disallow functions that return nothing                     |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n:see_no_evil: = `no-exceptions` Ruleset.\n\n| Name                                                       | Description                                           | <span title=\"No Exceptions\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------- | ----------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)   | Disallow rejecting Promises                           |                                                  |                                          |                                                  |          |              |\n| [`no-throw-statement`](./docs/rules/no-throw-statement.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n| [`no-try-statement`](./docs/rules/no-try-statement.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          |              |\n\n### Currying Rules\n\n:see_no_evil: = `currying` Ruleset.\n\n| Name                                                             | Description                               | <span title=\"Currying\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :-----------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |             :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n\n### Stylistic Rules\n\n:see_no_evil: = `stylistic` Ruleset.\n\n| Name                                           | Description             | <span title=\"Stylistic\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------- | ----------------------- | :------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md) | Tacit/Point-Free style. |              :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: | :thought_balloon: |\n\n## Recommended standard rules\n\nIn addition to the immutability rules above, there are a few standard rules that need to be enabled to achieve immutability.\n\nThese rules are all included in the _external-recommended_ rulesets.\n\n### [no-var](https://eslint.org/docs/rules/no-var)\n\nWithout this rule, it is still possible to create `var` variables that are mutable.\n\n### [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\n\nWithout this rule, function parameters are mutable.\n\n### [prefer-const](https://eslint.org/docs/rules/prefer-const)\n\nThis rule is helpful when converting from an imperative code style to a functional one.\n\n### [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-readonly.md)\n\nThis rule is helpful when working with classes.\n\n### [@typescript-eslint/prefer-readonly-parameter-types](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-readonly-parameter-types.md)\n\nFunctional functions must not modify any data passed into them.\nThis rule marks mutable parameters as a violation as they prevent readonly versions of that data from being passed in.\n\nHowever, due to many 3rd-party libraries only providing mutable versions of their types, often it can not be easy to satisfy this rule. Thus by default we only enable this rule with the \"warn\" severity rather than \"error\".\n\n### [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\n\nAlthough our [no-conditional-statement](./docs/rules/no-conditional-statement.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## How to contribute\n\nFor new features file an issue. For bugs, file an issue and optionally file a PR with a failing test.\n\n## How to develop\n\nTo execute the tests run `yarn test`.\n\nTo learn about ESLint plugin development see the [relevant section](https://eslint.org/docs/developer-guide/working-with-plugins) of the ESLint docs. You can also checkout the [typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) repo which has some more information specific to TypeScript.\n\nIn order to know which AST nodes are created for a snippet of TypeScript code you can use [AST explorer](https://astexplorer.net/) with options JavaScript and @typescript-eslint/parser.\n\n### Commit Messages\n\n> tl;dr: use `npx cz` instead of `git commit`.\n\nCommit messages must follow [Conventional Commit messages guidelines](https://www.conventionalcommits.org/en/v1.0.0/). You can use `npx cz` instead of `git commit` to run a interactive prompt to generate the commit message. We've customize the prompt specifically for this project. For more information see [commitizen](https://github.com/commitizen/cz-cli#readme).\n\n### How to publish\n\nPublishing is handled by [semantic release](https://github.com/semantic-release/semantic-release#readme) - there shouldn't be any need to publish manually.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "6f14b9f55dce7a95e8c066401277167dfba9cdb0",
      "_id": "eslint-plugin-functional@4.0.0-rc1",
      "_nodeVersion": "16.11.0",
      "_npmVersion": "8.0.0",
      "dist": {
        "integrity": "sha512-B+TNGhnBJNMJBCIgcn0yPcMs0p35RG6CQR4UP79dX9XGAGOXWTYp+cMqsP8myWsrKeE8PfCRhaNMlHeAKnhD1A==",
        "shasum": "f42d751eb5513dca58ecb214ec30505290971d74",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.0.0-rc1.tgz",
        "fileCount": 6,
        "unpackedSize": 175355,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHsBv4oOh88gJgz4lkBMGnOVlCyEhuzvJ5vJilu+8ia4AiAzOjVwxa4eUDlsc+6LCKjclbasku5y6cTwhuWvBNkn7A=="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.0.0-rc1_1634256772408_0.8746776000168877"
      },
      "_hasShrinkwrap": false,
      "deprecated": "broken"
    },
    "4.0.0-rc2": {
      "name": "eslint-plugin-functional",
      "version": "4.0.0-rc2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^5.0.0",
        "deepmerge-ts": "^1.1.3",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^13.2.1",
        "@commitlint/config-conventional": "^13.2.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@rebeccastevens/eslint-config": "^1.1.4",
        "@rollup/plugin-commonjs": "^21.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.0.5",
        "@rollup/plugin-typescript": "^8.2.5",
        "@semantic-release/changelog": "^6.0.0",
        "@semantic-release/commit-analyzer": "^9.0.1",
        "@semantic-release/git": "^10.0.0",
        "@semantic-release/github": "^8.0.1",
        "@semantic-release/npm": "^8.0.0",
        "@semantic-release/release-notes-generator": "^10.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.28.1",
        "@types/estree": "^0.0.50",
        "@types/node": "16.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "ava": "^3.15.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.1",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.12.3",
        "dedent": "^0.7.0",
        "eslint": "^8.0.1",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-ava": "^13.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^3.6.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-jsdoc": "^36.1.1",
        "eslint-plugin-markdown": "^2.2.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^5.1.0",
        "eslint-plugin-sonarjs": "^0.10.0",
        "eslint-plugin-unicorn": "^37.0.1",
        "espree": "^9.0.0",
        "husky": "^7.0.2",
        "json-schema": "^0.3.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^11.2.3",
        "markdownlint-cli": "^0.29.0",
        "nyc": "^15.1.0",
        "prettier": "^2.4.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.58.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^18.0.0",
        "ts-node": "^10.3.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.10.1",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.4.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-logo.svg?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/jonaskello/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/jonaskello/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/jonaskello/eslint-plugin-functional/branch/master/graph/badge.svg)](https://codecov.io/gh/jonaskello/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/jonaskello/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/jonaskello/eslint-plugin-functional)](https://github.com/jonaskello/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n> :wave: If you previously used the rules in [tslint-immutable](https://www.npmjs.com/package/tslint-immutable), this package is the ESLint version of those rules. Please see the [migration guide](docs/user-guide/migrating-from-tslint.md) for how to migrate.\n\n## Features\n\n- [No mutations](#no-mutations)\n- [No object-orientation](#no-object-orientation)\n- [No statements](#no-statements)\n- [No exceptions](#no-exceptions)\n- [Currying](#currying)\n- [Stylistic](#stylistic)\n\n### No mutations\n\nOne aim of this project is to leverage the type system in TypeScript to enforce immutability at compile-time while still using regular objects and arrays. Additionally, this project will also aim to support disabling mutability for vanilla JavaScript where possible.\n\n### No object-orientation\n\nJavaScript is multi-paradigm, allowing both object-oriented and functional programming styles. In order to promote a functional style, the object oriented features of JavaScript need to be disabled.\n\n### No statements\n\nIn functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be disabled to promote a functional style.\n\n### No exceptions\n\nFunctional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n### Currying\n\nJavaScript functions support syntax that is not compatible with curried functions. To enable currying this syntax has to be disabled.\n\n### Stylistic\n\nMake things look nicer (in our opinion).\n\n## Installation\n\n### JavaScript\n\n```sh\n# Install with npm\nnpm install eslint eslint-plugin-functional --save-dev\n\n# Install with yarn\nyarn add -D eslint eslint-plugin-functional\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag with npm or `global` with yarn) then you must also install `eslint-plugin-functional` globally.\n\n### TypeScript\n\nTo use this plugin with TypeScript, a TypeScript parser for ESLint is needed.\nWe recommend [@typescript-eslint/parser](https://www.npmjs.com/package/@typescript-eslint/parser).\n\n```sh\n# Install with npm\nnpm install eslint @typescript-eslint/parser eslint-plugin-functional --save-dev\n\n# Install with yarn\nyarn add -D eslint @typescript-eslint/parser eslint-plugin-functional\n```\n\n[tsutils](https://www.npmjs.com/package/tsutils) is also recommended as a peer dependency but if you are using [@typescript-eslint/eslint-plugin](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) then you don't need explicitly add it.\n\n## Usage\n\nAdd `functional` to the plugins section of your `.eslintrc` configuration file. Then configure the rules you want to use under the rules section.\n\n```jsonc\n{\n  \"plugins\": [\"functional\"],\n  \"rules\": {\n    \"functional/rule-name\": \"error\"\n  }\n}\n```\n\nThere are several rulesets provided by this plugin.\n[See below](#rulesets) for what they are and what rules are including in each.\nEnable rulesets via the \"extends\" property of your `.eslintrc` configuration file.\n\n```jsonc\n{\n  // ...\n  \"extends\": [\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n### With TypeScript\n\nAdd `@typescript-eslint/parser` to the \"parser\" filed in your `.eslintrc` configuration file.\nTo use type information, you will need to specify a path to your `tsconfig.json` file in the \"project\" property of \"parserOptions\".\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"./tsconfig.json\"\n  }\n}\n```\n\nSee [@typescript-eslint/parser's README.md](https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser#readme) for more information on the available parser options.\n\n### Example Config\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"tsconfig.json\"\n  },\n  \"env\": {\n    \"es6\": true\n  },\n  \"plugins\": [\n    \"@typescript-eslint\",\n    \"functional\"\n  ],\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/eslint-recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:@typescript-eslint/recommended-requiring-type-checking\",\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Recommended** (plugin:functional/recommended)\n- **Lite** (plugin:functional/lite)\n\nCategorized:\n\n- **No Mutations** (plugin:functional/no-mutations)\n- **No Object Orientation** (plugin:functional/no-object-orientation)\n- **No Statements** (plugin:functional/no-statements)\n- **No Exceptions** (plugin:functional/no-exceptions)\n- **Currying** (plugin:functional/currying)\n- **Stylistic** (plugin:functional/stylistic)\n\nOther:\n\n- **All** (plugin:functional/all) - Enables all rules defined in this plugin.\n- **External Recommended** (plugin:functional/external-recommended) - Configures recommended rules not defined by this plugin.\n\nThe [below section](#supported-rules) gives details on which rules are enabled by each ruleset.\n\n## Supported Rules\n\n**Key**:\n\n|      Symbol       | Meaning                                                                                                                                |\n| :---------------: | -------------------------------------------------------------------------------------------------------------------------------------- |\n|  :hear_no_evil:   | Ruleset: Lite<br><sub><sup>This ruleset is designed to enforce a somewhat functional programming code style.</sup></sub>               |\n|  :speak_no_evil:  | Ruleset: Recommended<br><sub><sup>This ruleset is designed to enforce a functional programming code style.</sup></sub>                 |\n|     :wrench:      | Fixable<br><sub><sup>Problems found by this rule are potentially fixable with the `--fix` option.</sup></sub>                          |\n| :thought_balloon: | Only Available for TypeScript<br><sub><sup>The rule either requires Type Information or only works with TypeScript syntax.</sup></sub> |\n|   :blue_heart:    | Works better with TypeScript<br><sub><sup>Type Information will be used if available making the rule work in more cases.</sup></sub>   |\n\n### No Mutations Rules\n\n:see_no_evil: = `no-mutations` Ruleset.\n\n| Name                                                           | Description                                                                | <span title=\"No Mutations\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------- | -------------------------------------------------------------------------- | :---------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)             | Disallow mutating objects and arrays                                       |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                             | Disallow mutable variables                                                 |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-method-signature`](./docs/rules/no-method-signature.md)   | Enforce property signatures with readonly modifiers over method signatures |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`prefer-readonly-type`](./docs/rules/prefer-readonly-type.md) | Use readonly types and readonly modifiers where possible                   |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: | :thought_balloon: |\n\n### No Object-Orientation Rules\n\n:see_no_evil: = `no-object-orientation` Ruleset.\n\n| Name                                                       | Description                                                              | <span title=\"No Object-Orientation\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------- | ------------------------------------------------------------------------ | :------------------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-class`](./docs/rules/no-class.md)                     | Disallow classes                                                         |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-mixed-type`](./docs/rules/no-mixed-type.md)           | Restrict types so that only members of the same kind are allowed in them |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-this-expression`](./docs/rules/no-this-expression.md) | Disallow `this` access                                                   |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n\n### No Statements Rules\n\n:see_no_evil: = `no-statements` Ruleset.\n\n| Name                                                                   | Description                                                | <span title=\"No Statements\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------------------- | ---------------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statement`](./docs/rules/no-conditional-statement.md) | Disallow conditional statements (if and switch statements) |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-expression-statement`](./docs/rules/no-expression-statement.md)   | Disallow expressions to cause side-effects                 |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-loop-statement`](./docs/rules/no-loop-statement.md)               | Disallow imperative loops                                  |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                     | Disallow functions that return nothing                     |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n:see_no_evil: = `no-exceptions` Ruleset.\n\n| Name                                                       | Description                                           | <span title=\"No Exceptions\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------- | ----------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)   | Disallow rejecting Promises                           |                                                  |                                          |                                                  |          |              |\n| [`no-throw-statement`](./docs/rules/no-throw-statement.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n| [`no-try-statement`](./docs/rules/no-try-statement.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          |              |\n\n### Currying Rules\n\n:see_no_evil: = `currying` Ruleset.\n\n| Name                                                             | Description                               | <span title=\"Currying\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :-----------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |             :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n\n### Stylistic Rules\n\n:see_no_evil: = `stylistic` Ruleset.\n\n| Name                                           | Description             | <span title=\"Stylistic\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------- | ----------------------- | :------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md) | Tacit/Point-Free style. |              :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: | :thought_balloon: |\n\n## Recommended standard rules\n\nIn addition to the immutability rules above, there are a few standard rules that need to be enabled to achieve immutability.\n\nThese rules are all included in the _external-recommended_ rulesets.\n\n### [no-var](https://eslint.org/docs/rules/no-var)\n\nWithout this rule, it is still possible to create `var` variables that are mutable.\n\n### [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\n\nWithout this rule, function parameters are mutable.\n\n### [prefer-const](https://eslint.org/docs/rules/prefer-const)\n\nThis rule is helpful when converting from an imperative code style to a functional one.\n\n### [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-readonly.md)\n\nThis rule is helpful when working with classes.\n\n### [@typescript-eslint/prefer-readonly-parameter-types](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-readonly-parameter-types.md)\n\nFunctional functions must not modify any data passed into them.\nThis rule marks mutable parameters as a violation as they prevent readonly versions of that data from being passed in.\n\nHowever, due to many 3rd-party libraries only providing mutable versions of their types, often it can not be easy to satisfy this rule. Thus by default we only enable this rule with the \"warn\" severity rather than \"error\".\n\n### [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\n\nAlthough our [no-conditional-statement](./docs/rules/no-conditional-statement.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## How to contribute\n\nFor new features file an issue. For bugs, file an issue and optionally file a PR with a failing test.\n\n## How to develop\n\nTo execute the tests run `yarn test`.\n\nTo learn about ESLint plugin development see the [relevant section](https://eslint.org/docs/developer-guide/working-with-plugins) of the ESLint docs. You can also checkout the [typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) repo which has some more information specific to TypeScript.\n\nIn order to know which AST nodes are created for a snippet of TypeScript code you can use [AST explorer](https://astexplorer.net/) with options JavaScript and @typescript-eslint/parser.\n\n### Commit Messages\n\n> tl;dr: use `npx cz` instead of `git commit`.\n\nCommit messages must follow [Conventional Commit messages guidelines](https://www.conventionalcommits.org/en/v1.0.0/). You can use `npx cz` instead of `git commit` to run a interactive prompt to generate the commit message. We've customize the prompt specifically for this project. For more information see [commitizen](https://github.com/commitizen/cz-cli#readme).\n\n### How to publish\n\nPublishing is handled by [semantic release](https://github.com/semantic-release/semantic-release#readme) - there shouldn't be any need to publish manually.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "b1ddc88a2e54c91967d4629d09a54ca6ac6e3055",
      "_id": "eslint-plugin-functional@4.0.0-rc2",
      "_nodeVersion": "16.11.0",
      "_npmVersion": "8.0.0",
      "dist": {
        "integrity": "sha512-NwYYUHj557e0xxsf4O1C1Sa6hQj3s7Uge5m27lGxbp8ct4/FBzLmSFNvl9wsIh1ytw8QJ4CaCDNcwNce05upfA==",
        "shasum": "5da4a0af435f466a53f64dc9dc0156d4af41322a",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.0.0-rc2.tgz",
        "fileCount": 6,
        "unpackedSize": 177094,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDui/LRakx2EiSElGWb2fAH9JPWmEZ8WXu9KSD5FEp52wIhANoJYZnjf5cZGgXaqOBT3nRxONkU89mpdaD9jvSqPXss"
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.0.0-rc2_1634259030209_0.378613820025971"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0": {
      "name": "eslint-plugin-functional",
      "version": "4.0.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^5.0.0",
        "deepmerge-ts": "^1.1.3",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^13.2.1",
        "@commitlint/config-conventional": "^13.2.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@rebeccastevens/eslint-config": "^1.1.4",
        "@rollup/plugin-commonjs": "^21.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.0.5",
        "@rollup/plugin-typescript": "^8.2.5",
        "@semantic-release/changelog": "^6.0.0",
        "@semantic-release/commit-analyzer": "^9.0.1",
        "@semantic-release/git": "^10.0.0",
        "@semantic-release/github": "^8.0.1",
        "@semantic-release/npm": "^8.0.0",
        "@semantic-release/release-notes-generator": "^10.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.28.1",
        "@types/estree": "^0.0.50",
        "@types/node": "16.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "ava": "^3.15.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.1",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.12.3",
        "dedent": "^0.7.0",
        "eslint": "^8.0.1",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-ava": "^13.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^3.6.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-jsdoc": "^36.1.1",
        "eslint-plugin-markdown": "^2.2.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^5.1.0",
        "eslint-plugin-sonarjs": "^0.10.0",
        "eslint-plugin-unicorn": "^37.0.1",
        "espree": "^9.0.0",
        "husky": "^7.0.2",
        "json-schema": "^0.3.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^11.2.3",
        "markdownlint-cli": "^0.29.0",
        "nyc": "^15.1.0",
        "prettier": "^2.4.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.58.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^18.0.0",
        "ts-node": "^10.3.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.10.1",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.4.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "173ed4a50cdec09baace3a109670d03cd0c1fea8",
      "_id": "eslint-plugin-functional@4.0.0",
      "_nodeVersion": "14.18.0",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-o8hY+wIdcTuAnrcBaaeDLWouUKowmTrxKw39AfP2bRu5oDWcz2b1CUTIGFw0U3iqgLv/yQc/OLvBAFgVlzszag==",
        "shasum": "f7cf2dee5fb26ac8c375909c992775fc10db3263",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.0.0.tgz",
        "fileCount": 6,
        "unpackedSize": 177805,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDQX1g6E8yzANcHgpjTYsPdEpcaEWq35Ow2TsepKhE/yAiAd1VoQfyXtdx+S9Ih9MQkg7TMMRsywcMAu06l8Gh12mA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.0.0_1634449103777_0.21129728239836876"
      },
      "_hasShrinkwrap": false
    },
    "4.0.1": {
      "name": "eslint-plugin-functional",
      "version": "4.0.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^5.0.0",
        "deepmerge-ts": "^1.1.3",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^13.2.1",
        "@commitlint/config-conventional": "^13.2.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@rebeccastevens/eslint-config": "^1.1.5",
        "@rollup/plugin-commonjs": "^21.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.0.5",
        "@rollup/plugin-typescript": "^8.2.5",
        "@semantic-release/changelog": "^6.0.0",
        "@semantic-release/commit-analyzer": "^9.0.1",
        "@semantic-release/git": "^10.0.0",
        "@semantic-release/github": "^8.0.1",
        "@semantic-release/npm": "^8.0.0",
        "@semantic-release/release-notes-generator": "^10.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.28.1",
        "@types/estree": "^0.0.50",
        "@types/node": "16.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "ava": "^3.15.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.1",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.12.3",
        "dedent": "^0.7.0",
        "eslint": "^8.0.1",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-ava": "^13.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^3.6.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-jsdoc": "^36.1.1",
        "eslint-plugin-markdown": "^2.2.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^5.1.0",
        "eslint-plugin-sonarjs": "^0.10.0",
        "eslint-plugin-unicorn": "^37.0.1",
        "espree": "^9.0.0",
        "husky": "^7.0.2",
        "json-schema": "^0.3.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^11.2.3",
        "markdownlint-cli": "^0.29.0",
        "nyc": "^15.1.0",
        "prettier": "^2.4.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.58.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^18.0.0",
        "ts-node": "^10.3.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.10.1",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.4.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "f1538f1db491bcaecd91872c05f76c9b327f250f",
      "_id": "eslint-plugin-functional@4.0.1",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-2OnB3IRdBmLOhKKrT6u1MRlq7S6vq9cguPe/bfI3iJqW2vr7VJddwUdLAe4eCpxfzfgRQ8PL5wrN8ZwOO8r+Zg==",
        "shasum": "633396ebd8bdf245cb0b4778c5cd73be14b45555",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.0.1.tgz",
        "fileCount": 6,
        "unpackedSize": 177977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC1xMyABcHDSYBXwk21QvUTWDNep3GcirBsEm9sS5ICVQIhAJ0ZD+PMZwfRbvxg0d6tT0xion7JdCws/QydnuSTl+eC"
          }
        ]
      },
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.0.1_1635059880599_0.97149655874333"
      },
      "_hasShrinkwrap": false
    },
    "4.0.2": {
      "name": "eslint-plugin-functional",
      "version": "4.0.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^5.0.0",
        "deepmerge-ts": "^1.1.3",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^13.2.1",
        "@commitlint/config-conventional": "^13.2.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@rebeccastevens/eslint-config": "^1.1.5",
        "@rollup/plugin-commonjs": "^21.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.0.5",
        "@rollup/plugin-typescript": "^8.2.5",
        "@semantic-release/changelog": "^6.0.0",
        "@semantic-release/commit-analyzer": "^9.0.1",
        "@semantic-release/git": "^10.0.0",
        "@semantic-release/github": "^8.0.1",
        "@semantic-release/npm": "^8.0.0",
        "@semantic-release/release-notes-generator": "^10.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.28.1",
        "@types/estree": "^0.0.50",
        "@types/node": "16.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "ava": "^3.15.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.1",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.12.3",
        "dedent": "^0.7.0",
        "eslint": "^8.0.1",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-ava": "^13.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^3.6.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-jsdoc": "^36.1.1",
        "eslint-plugin-markdown": "^2.2.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^5.1.0",
        "eslint-plugin-sonarjs": "^0.10.0",
        "eslint-plugin-unicorn": "^37.0.1",
        "espree": "^9.0.0",
        "husky": "^7.0.2",
        "json-schema": "^0.3.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^11.2.3",
        "markdownlint-cli": "^0.29.0",
        "nyc": "^15.1.0",
        "prettier": "^2.4.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.58.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^18.0.0",
        "ts-node": "^10.3.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.10.1",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.4.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "8f24eb3cad206f53732859787de9a4729921a900",
      "_id": "eslint-plugin-functional@4.0.2",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-OznwyoZofhDLurZZdfA6ER5yNQWrVTthv+l/FT7HL3+8UkZ9YQXld997s/5Rg7HeLicNWROwBYweOJ8JonbVFg==",
        "shasum": "a14649129abe4b7c5d37625b4dce73c1ee16b2e4",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.0.2.tgz",
        "fileCount": 6,
        "unpackedSize": 180829,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGxOVhQpX1Ypj1grlHRFLh7MD1fgXpywzfgSkvKCGkUKAiAJZ0lwEoBphXSPoWQEV6fowrVNZD/0TMMPvC9P6aEahA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.0.2_1635080160330_0.06117212826743734"
      },
      "_hasShrinkwrap": false
    },
    "4.1.0": {
      "name": "eslint-plugin-functional",
      "version": "4.1.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^5.0.0",
        "deepmerge-ts": "^2.0.1",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^13.2.1",
        "@commitlint/config-conventional": "^14.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@rebeccastevens/eslint-config": "^1.1.5",
        "@rollup/plugin-commonjs": "^21.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.0.5",
        "@rollup/plugin-typescript": "^8.2.5",
        "@semantic-release/changelog": "^6.0.0",
        "@semantic-release/commit-analyzer": "^9.0.1",
        "@semantic-release/git": "^10.0.0",
        "@semantic-release/github": "^8.0.1",
        "@semantic-release/npm": "^8.0.0",
        "@semantic-release/release-notes-generator": "^10.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.28.1",
        "@types/estree": "^0.0.50",
        "@types/node": "16.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "ava": "^3.15.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.1",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.12.3",
        "dedent": "^0.7.0",
        "eslint": "^8.0.1",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-ava": "^13.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^3.6.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-jsdoc": "^37.1.0",
        "eslint-plugin-markdown": "^2.2.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^5.1.0",
        "eslint-plugin-sonarjs": "^0.10.0",
        "eslint-plugin-unicorn": "^39.0.0",
        "espree": "^9.0.0",
        "husky": "^7.0.2",
        "json-schema": "^0.3.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^12.1.2",
        "markdownlint-cli": "^0.29.0",
        "nyc": "^15.1.0",
        "prettier": "^2.4.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.58.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^18.0.0",
        "ts-node": "^10.3.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.10.1",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.4.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "b0aaf2c4ff77132ae9e3a9093cda0f9c9d73aa03",
      "_id": "eslint-plugin-functional@4.1.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-B7JfnLDfPSF8QtVlEiLqnnopvXoTXQyNMGroiRD0ed+BERwpRMyV/O/G90P0DMQPe5LSUF/PQR5MdljySrkXTg==",
        "shasum": "a3aba2750666f980486edf3a3133b62e7d852f51",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.1.0.tgz",
        "fileCount": 6,
        "unpackedSize": 182250,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2Qz1CRA9TVsSAnZWagAA8sQP/1GFJUeKBFHroGeVUJht\nkOhGiKAEHBxyOLUzHTTqnT/oN4mfbF/BTi0uwPhyXbQdBxyCjSrCFh8gzBs1\nWuGr4J8Gq49EVPcY/mpLYU0YjCG3kYEiCAaA7XxOoLO4GbT5rJWmNzGK1/Ly\nKwr+cu7UYzvew4T65P/vZMe2lkDyQ8Un1CCWZkn4WhOO5DHKWEXS8gaOHQwK\nSmhxOFb3RCi8xqPz+X+6/HCyVJHYML8soWLCVWwvV0Y4yBpLBAfAFmJum483\nG5WsAwzX0NSUax6101Uhkee6TQHfXpIxH7jfE2PXKmU+knt9UA7qT2DZnSFv\nA0G8ABnt3LufjQaNdBfahUNQZ+l/G+xhVPh/fnMzNTixAAM+GEtkXigPcHhH\n9OYHqzLeyg6SQFo1ViTWTjBtKM/mhTnHDIIlITVVzbh6rCGpHc0G3VaQwChJ\nF6qwmth9pdG+T7tZjzMMoYVnWfxdnPmgdDq+2cQarJ0bkJOgxF9wrbn+et0j\n+IOWXGD3v4bqPQlWfBHpRY7IFn56QXFKamFop7hCaqcCf+cuPoaMU9OcSsqG\nZvg+UFg6oXlrkcqTrqKemYUS/m3+qxHjfzewOVwoyI70g7fxalSJV5ay6Y3j\n6ND0l/H8fD6r5Y4coel2cEyprKxgAMuf5h6qIJAxEJGdYOokf4Upx0PRxLtv\nNg/7\r\n=d4u8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFN/WbInaTXmyf9kaDxeMESw3gCoGtvSaaeEFXoBHbgfAiBcxLlWYq4bGobnbG8vh5YC+uo0SvO5r9yR6HOHjD7GgA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.1.0_1641614581631_0.45486280192076944"
      },
      "_hasShrinkwrap": false
    },
    "4.1.1-beta.1": {
      "name": "eslint-plugin-functional",
      "version": "4.1.1-beta.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^5.0.0",
        "deepmerge-ts": "^2.0.1",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^13.2.1",
        "@commitlint/config-conventional": "^14.1.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@rebeccastevens/eslint-config": "^1.1.5",
        "@rollup/plugin-commonjs": "^21.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.0.5",
        "@rollup/plugin-typescript": "^8.2.5",
        "@semantic-release/changelog": "^6.0.0",
        "@semantic-release/commit-analyzer": "^9.0.1",
        "@semantic-release/git": "^10.0.0",
        "@semantic-release/github": "^8.0.1",
        "@semantic-release/npm": "^8.0.0",
        "@semantic-release/release-notes-generator": "^10.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.28.1",
        "@types/estree": "^0.0.50",
        "@types/node": "16.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "ava": "^3.15.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.1",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.12.3",
        "dedent": "^0.7.0",
        "eslint": "^8.0.1",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-ava": "^13.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^3.6.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-jsdoc": "^37.1.0",
        "eslint-plugin-markdown": "^2.2.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^5.1.0",
        "eslint-plugin-sonarjs": "^0.10.0",
        "eslint-plugin-unicorn": "^39.0.0",
        "espree": "^9.0.0",
        "husky": "^7.0.2",
        "json-schema": "^0.3.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^12.1.2",
        "markdownlint-cli": "^0.29.0",
        "nyc": "^15.1.0",
        "prettier": "^2.4.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.58.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^18.0.0",
        "ts-node": "^10.3.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.10.1",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.4.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-logo.svg?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/jonaskello/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/jonaskello/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/jonaskello/eslint-plugin-functional/branch/master/graph/badge.svg)](https://codecov.io/gh/jonaskello/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/jonaskello/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/jonaskello/eslint-plugin-functional)](https://github.com/jonaskello/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n> :wave: If you previously used the rules in [tslint-immutable](https://www.npmjs.com/package/tslint-immutable), this package is the ESLint version of those rules. Please see the [migration guide](docs/user-guide/migrating-from-tslint.md) for how to migrate.\n\n## Features\n\n- [No mutations](#no-mutations)\n- [No object-orientation](#no-object-orientation)\n- [No statements](#no-statements)\n- [No exceptions](#no-exceptions)\n- [Currying](#currying)\n- [Stylistic](#stylistic)\n\n### No mutations\n\nOne aim of this project is to leverage the type system in TypeScript to enforce immutability at compile-time while still using regular objects and arrays. Additionally, this project will also aim to support disabling mutability for vanilla JavaScript where possible.\n\n### No object-orientation\n\nJavaScript is multi-paradigm, allowing both object-oriented and functional programming styles. In order to promote a functional style, the object oriented features of JavaScript need to be disabled.\n\n### No statements\n\nIn functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be disabled to promote a functional style.\n\n### No exceptions\n\nFunctional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n### Currying\n\nJavaScript functions support syntax that is not compatible with curried functions. To enable currying this syntax has to be disabled.\n\n### Stylistic\n\nEnforce code to be written in a more functional style.\n\n## Installation\n\n### JavaScript\n\n```sh\n# Install with npm\nnpm install -D eslint eslint-plugin-functional\n\n# Install with yarn\nyarn add -D eslint eslint-plugin-functional\n```\n\n### TypeScript\n\n```sh\n# Install with npm\nnpm install -D eslint @typescript-eslint/parser tsutils eslint-plugin-functional\n\n# Install with yarn\nyarn add -D eslint @typescript-eslint/parser tsutils eslint-plugin-functional\n```\n\n## Usage\n\nAdd `functional` to the plugins section of your `.eslintrc` configuration file. Then configure the rules you want to use under the rules section.\n\n```jsonc\n{\n  \"plugins\": [\"functional\"],\n  \"rules\": {\n    \"functional/rule-name\": \"error\"\n  }\n}\n```\n\nThere are several rulesets provided by this plugin.\n[See below](#rulesets) for what they are and what rules are including in each.\nEnable rulesets via the \"extends\" property of your `.eslintrc` configuration file.\n\n```jsonc\n{\n  // ...\n  \"extends\": [\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n### With TypeScript\n\nAdd `@typescript-eslint/parser` to the \"parser\" filed in your `.eslintrc` configuration file.\nTo use type information, you will need to specify a path to your `tsconfig.json` file in the \"project\" property of \"parserOptions\".\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"./tsconfig.json\"\n  }\n}\n```\n\nSee [@typescript-eslint/parser's README.md](https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser#readme) for more information on the available parser options.\n\n### Example Config\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"tsconfig.json\"\n  },\n  \"env\": {\n    \"es6\": true\n  },\n  \"plugins\": [\n    \"@typescript-eslint\",\n    \"functional\"\n  ],\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/eslint-recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:@typescript-eslint/recommended-requiring-type-checking\",\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Recommended** (plugin:functional/recommended)\n- **Lite** (plugin:functional/lite)\n- **Off** (plugin:functional/off)\n\nCategorized:\n\n- **No Mutations** (plugin:functional/no-mutations)\n- **No Object Orientation** (plugin:functional/no-object-orientation)\n- **No Statements** (plugin:functional/no-statements)\n- **No Exceptions** (plugin:functional/no-exceptions)\n- **Currying** (plugin:functional/currying)\n- **Stylistic** (plugin:functional/stylistic)\n\nOther:\n\n- **All** (plugin:functional/all) - Enables all rules defined in this plugin.\n- **External Recommended** (plugin:functional/external-recommended) - Configures recommended rules not defined by this plugin.\n\nThe [below section](#supported-rules) gives details on which rules are enabled by each ruleset.\n\n## Supported Rules\n\n**Key**:\n\n|      Symbol       | Meaning                                                                                                                                |\n| :---------------: | -------------------------------------------------------------------------------------------------------------------------------------- |\n|  :hear_no_evil:   | Ruleset: Lite<br><sub><sup>This ruleset is designed to enforce a somewhat functional programming code style.</sup></sub>               |\n|  :speak_no_evil:  | Ruleset: Recommended<br><sub><sup>This ruleset is designed to enforce a functional programming code style.</sup></sub>                 |\n|     :wrench:      | Fixable<br><sub><sup>Problems found by this rule are potentially fixable with the `--fix` option.</sup></sub>                          |\n| :thought_balloon: | Only Available for TypeScript<br><sub><sup>The rule either requires Type Information or only works with TypeScript syntax.</sup></sub> |\n|   :blue_heart:    | Works better with TypeScript<br><sub><sup>Type Information will be used if available making the rule work in more cases.</sup></sub>   |\n\n### No Mutations Rules\n\n:see_no_evil: = `no-mutations` Ruleset.\n\n| Name                                                           | Description                                                                | <span title=\"No Mutations\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------- | -------------------------------------------------------------------------- | :---------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)             | Disallow mutating objects and arrays                                       |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                             | Disallow mutable variables                                                 |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-method-signature`](./docs/rules/no-method-signature.md)   | Enforce property signatures with readonly modifiers over method signatures |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`prefer-readonly-type`](./docs/rules/prefer-readonly-type.md) | Use readonly types and readonly modifiers where possible                   |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: | :thought_balloon: |\n\n### No Object-Orientation Rules\n\n:see_no_evil: = `no-object-orientation` Ruleset.\n\n| Name                                                       | Description                                                              | <span title=\"No Object-Orientation\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------- | ------------------------------------------------------------------------ | :------------------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-class`](./docs/rules/no-class.md)                     | Disallow classes                                                         |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-mixed-type`](./docs/rules/no-mixed-type.md)           | Restrict types so that only members of the same kind are allowed in them |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-this-expression`](./docs/rules/no-this-expression.md) | Disallow `this` access                                                   |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n\n### No Statements Rules\n\n:see_no_evil: = `no-statements` Ruleset.\n\n| Name                                                                   | Description                                                | <span title=\"No Statements\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------------------- | ---------------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statement`](./docs/rules/no-conditional-statement.md) | Disallow conditional statements (if and switch statements) |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-expression-statement`](./docs/rules/no-expression-statement.md)   | Disallow expressions to cause side-effects                 |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-loop-statement`](./docs/rules/no-loop-statement.md)               | Disallow imperative loops                                  |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                     | Disallow functions that return nothing                     |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n:see_no_evil: = `no-exceptions` Ruleset.\n\n| Name                                                       | Description                                           | <span title=\"No Exceptions\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------- | ----------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)   | Disallow rejecting Promises                           |                                                  |                                          |                                                  |          |              |\n| [`no-throw-statement`](./docs/rules/no-throw-statement.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n| [`no-try-statement`](./docs/rules/no-try-statement.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          |              |\n\n### Currying Rules\n\n:see_no_evil: = `currying` Ruleset.\n\n| Name                                                             | Description                               | <span title=\"Currying\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :-----------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |             :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n\n### Stylistic Rules\n\n:see_no_evil: = `stylistic` Ruleset.\n\n| Name                                           | Description             | <span title=\"Stylistic\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------- | ----------------------- | :------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md) | Tacit/Point-Free style. |              :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: | :thought_balloon: |\n\n## Recommended standard rules\n\nIn addition to the immutability rules above, there are a few standard rules that need to be enabled to achieve immutability.\n\nThese rules are all included in the _external-recommended_ rulesets.\n\n### [no-var](https://eslint.org/docs/rules/no-var)\n\nWithout this rule, it is still possible to create `var` variables that are mutable.\n\n### [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\n\nWithout this rule, function parameters are mutable.\n\n### [prefer-const](https://eslint.org/docs/rules/prefer-const)\n\nThis rule is helpful when converting from an imperative code style to a functional one.\n\n### [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-readonly.md)\n\nThis rule is helpful when working with classes.\n\n### [@typescript-eslint/prefer-readonly-parameter-types](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/prefer-readonly-parameter-types.md)\n\nFunctional functions must not modify any data passed into them.\nThis rule marks mutable parameters as a violation as they prevent readonly versions of that data from being passed in.\n\nHowever, due to many 3rd-party libraries only providing mutable versions of their types, often it can not be easy to satisfy this rule. Thus by default we only enable this rule with the \"warn\" severity rather than \"error\".\n\n### [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\n\nAlthough our [no-conditional-statement](./docs/rules/no-conditional-statement.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## How to contribute\n\nFor new features file an issue. For bugs, file an issue and optionally file a PR with a failing test.\n\n## How to develop\n\nTo execute the tests run `yarn test`.\n\nTo learn about ESLint plugin development see the [relevant section](https://eslint.org/docs/developer-guide/working-with-plugins) of the ESLint docs. You can also checkout the [typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) repo which has some more information specific to TypeScript.\n\nIn order to know which AST nodes are created for a snippet of TypeScript code you can use [AST explorer](https://astexplorer.net/) with options JavaScript and @typescript-eslint/parser.\n\n### Commit Messages\n\n> tl;dr: use `npx cz` instead of `git commit`.\n\nCommit messages must follow [Conventional Commit messages guidelines](https://www.conventionalcommits.org/en/v1.0.0/). You can use `npx cz` instead of `git commit` to run a interactive prompt to generate the commit message. We've customize the prompt specifically for this project. For more information see [commitizen](https://github.com/commitizen/cz-cli#readme).\n\n### How to publish\n\nPublishing is handled by [semantic release](https://github.com/semantic-release/semantic-release#readme) - there shouldn't be any need to publish manually.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "3f6406c1b444db51f23c807dbce886b17568f20c",
      "_id": "eslint-plugin-functional@4.1.1-beta.1",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-jxbLeqpfDRhWx7Y4uBmIEkVoBmlNXUESPlGZ6kfqj5I1OG/ChMgDMFwuBtKDxJtDjbP8Qy+3CErdVQDhDW0mkg==",
        "shasum": "7a705762557d49728629e87dbc270ecebc39da7f",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.1.1-beta.1.tgz",
        "fileCount": 6,
        "unpackedSize": 182694,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2S5QCRA9TVsSAnZWagAA/R8QAIafEx0qGmVxSonlLgFH\nBZNUcZR+0a26wkFsPaZOF/7lxtCcT9fIdMdiioIoFQgRtoece0uLQLhvIgkn\nBFI+B0MPD3ARtrwcXNPZwx2F9c94BI22Ua7Zo2Ta5XLdAlqJbHIba0nbNex6\nmWqXhIRrKL4gvSkZzCP6X7eHO7b5TjVSs295lK3+biWfbVcS18rR9qKf28UE\nkirfgiPMYW2SzXaMM3xqyAoYQzehUAJwhFFj/qe1htLQ9CLaUJMH46CQ1det\ng3ue7dReRe9xxrtA38Pq/ACFEMFyvAm0/QF2bClBPJB1CHPaoV+NHoulBtF2\nCRf0Sq41qvab8Vy2vC/ykiR61z6/2rVVNCP755YRWyc98wr1Gw5eqvkzawz3\n7YjggtXfeqMQYcZ4M5GQNgBOWGvU+2SjzBkRn4kaq5pPTbab8KzmkXxHR/57\n06vI4w03tZh7dXsz/6JRFOD741piwUPhieX/KIYI3BfAM7MThNvGz3fw6k23\nAfE1Ei1ruia8LHqS1ivDMic8VVtLOoxQ3pFi9MVLU09FNf1T0m9F3WWkB74B\nG88ObfEavXgPqVh61fteWXCgan+aA2V3DvxZNQFDSCtM+wT/rLaV9grLhbgo\n6odc6ygjsTekrtnUvALgZFA/T1xFt2V615e88+lrOTiwFejo/Tow5hPRDTts\nDvY6\r\n=TlaU\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHhzV+fZCRYLZUQDq1NTGIL/zSNH4QX2oPM4Ckp61auhAiBwTw+Cs4rQ4po4YZPG3ZIerXN+wX4ZxQiVz24CNhTBUQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.1.1-beta.1_1641623120258_0.5258053767146285"
      },
      "_hasShrinkwrap": false
    },
    "4.1.1": {
      "name": "eslint-plugin-functional",
      "version": "4.1.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^5.0.0",
        "deepmerge-ts": "^2.0.1",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^13.2.1",
        "@commitlint/config-conventional": "^14.1.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@rebeccastevens/eslint-config": "^1.1.5",
        "@rollup/plugin-commonjs": "^21.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.0.5",
        "@rollup/plugin-typescript": "^8.2.5",
        "@semantic-release/changelog": "^6.0.0",
        "@semantic-release/commit-analyzer": "^9.0.1",
        "@semantic-release/git": "^10.0.0",
        "@semantic-release/github": "^8.0.1",
        "@semantic-release/npm": "^8.0.0",
        "@semantic-release/release-notes-generator": "^10.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.28.1",
        "@types/estree": "^0.0.50",
        "@types/node": "16.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "ava": "^3.15.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.1",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.12.3",
        "dedent": "^0.7.0",
        "eslint": "^8.0.1",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-ava": "^13.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^3.6.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-jsdoc": "^37.1.0",
        "eslint-plugin-markdown": "^2.2.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^5.1.0",
        "eslint-plugin-sonarjs": "^0.10.0",
        "eslint-plugin-unicorn": "^39.0.0",
        "espree": "^9.0.0",
        "husky": "^7.0.2",
        "json-schema": "^0.3.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^12.1.2",
        "markdownlint-cli": "^0.29.0",
        "nyc": "^15.1.0",
        "prettier": "^2.4.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.58.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^18.0.0",
        "ts-node": "^10.3.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.10.1",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.4.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "bac53a8cd66c94b25bb1b11f698ee8b0ea8dd629",
      "_id": "eslint-plugin-functional@4.1.1",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-FgYMsScNCDilsxpYLboYLkY/y36VfocUD02tB1CJc8q4d+/H06ADKa9v6Dmk8kKlzIIW4V/wfNOVuxNusa0avw==",
        "shasum": "181b6c491fb73f05887cf51349118eeef0681bd5",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.1.1.tgz",
        "fileCount": 6,
        "unpackedSize": 182653,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2TFgCRA9TVsSAnZWagAAa/IP/Rl/oHwaKuLZXCqUy/+g\nIsGDlI6kERK3H50cuBw+Wtx+aCDQDymEsmDJDJdEtru+zKsXaVmZ1h6mJDH2\ncFjr82KyrDsXQWSrVu1mMZjFXAq3C1pyoz2V9ddC6l0fPvQoRzHMY/44zjQr\n1WYOtpMgu0upnwQeHgKZCYctmqClUpoxbkcchaUkSdAtr8ambu5hFq3rWf+8\nJJl6VYPD36iZ9/W9l2+vLfi6jtt5K8akNtWtMJKyudseSEiZ2qoPZR7nndfD\npiEpKyL0LrkIfkfzrIMQVfeGiCKzaNGc4DLZeBBlmdXg16fGwC7DCp4I3rxw\nmsJGLQiLFI1umxx6FL+WNkxuqtWYlTEy8uVP8tNTe/2fFAFJtkgUiCbwQ4vs\nCJdC7eNKjEsw52Fgo4RmEPzczPZONCp+eiqQnDxYkM758jn//mjTkRhC9Ohu\nQKfb8b1m19UnGqPVileCKNkFtomXG88u3TU690w7oC3v17tw3ktc3M+gKrpY\ntukQ0Lpl+9PTHEz/8XlP8NkrJWa/CeV+hM7ZOay14vIupXjwMYC6AQibcYfr\n1upPctUNiGBUkj2sfFcm8Yaixc44sg5/3MlbBTz8Rb4Q+9SMk3Bn78Lv18E0\nGXC6/i7EmabfEbOUYGNIlHk/k7varjKLXuZbi+7VqLnQsyXPpRpihb5Qk9Ov\nXXSG\r\n=GKBv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIG+gaPb1yCNVxQTFZT8QoXIUk0GFixYMmaQWIl7H9t1mAiBpnfNHqOYw6GV4cxxZNeLWCDQejVVKRLnb5XqRWQ39mw=="
          }
        ]
      },
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.1.1_1641623904247_0.40583694775429335"
      },
      "_hasShrinkwrap": false
    },
    "4.2.0": {
      "name": "eslint-plugin-functional",
      "version": "4.2.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/experimental-utils": "^5.0.0",
        "deepmerge-ts": "^2.0.1",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^13.2.1",
        "@commitlint/config-conventional": "^14.1.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@rebeccastevens/eslint-config": "^1.1.5",
        "@rollup/plugin-commonjs": "^21.0.0",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.0.5",
        "@rollup/plugin-typescript": "^8.2.5",
        "@semantic-release/changelog": "^6.0.0",
        "@semantic-release/commit-analyzer": "^9.0.1",
        "@semantic-release/git": "^10.0.0",
        "@semantic-release/github": "^8.0.1",
        "@semantic-release/npm": "^8.0.0",
        "@semantic-release/release-notes-generator": "^10.0.2",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^7.28.1",
        "@types/estree": "^0.0.50",
        "@types/node": "16.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "ava": "^3.15.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.1",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.12.3",
        "dedent": "^0.7.0",
        "eslint": "^8.0.1",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-ava": "^13.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^3.6.1",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-jsdoc": "^37.1.0",
        "eslint-plugin-markdown": "^2.2.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.0",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^5.1.0",
        "eslint-plugin-sonarjs": "^0.11.0",
        "eslint-plugin-unicorn": "^39.0.0",
        "espree": "^9.0.0",
        "husky": "^7.0.2",
        "json-schema": "^0.3.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^12.1.2",
        "markdownlint-cli": "^0.29.0",
        "nyc": "^15.1.0",
        "prettier": "^2.4.1",
        "rimraf": "^3.0.0",
        "rollup": "^2.58.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^18.0.0",
        "ts-node": "^10.3.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.10.1",
        "tslib": "^2.0.3",
        "tsutils": "^3.21.0",
        "typescript": "^4.4.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "6d7b9748abe487846e0290d2a5114430bf3f5b4a",
      "_id": "eslint-plugin-functional@4.2.0",
      "_nodeVersion": "16.13.2",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-3v1DuKQTGwJo93UQ5SKzEjvJTaMGfznzwgGjWEBhLXxJfOMhcW7O6QUO1pmb5aLou9hoh7r31lkPvWmbIbIbew==",
        "shasum": "b6d942c07c760eb30c943e02ef041971a23674e6",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.2.0.tgz",
        "fileCount": 6,
        "unpackedSize": 184032,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh/zNgCRA9TVsSAnZWagAArKIP/RSnqrzdwif8tkMIzpoB\nd5ZyfrcMCHntmveAUJDBynP/eDwfCEC+E2mQLajgUhnUd+TAYbmvuYD/ALm9\n6JYUCAkU5w2gqE9Su7DDqnYjZ6fqRm1eO26iwVQ07zKIzBw2afyqqV4M0rXG\n8V+p4jwWqYz0Z8wrtmrPAqIsgNG2P0p2Nmh9wXHrqgFjeQl6+wS7FNPGW0LW\n3o4T90BzNoosrKy/0Z/Q2TzzNox4pPxqLzw/6OfZUvkuWhspK3JLPeBK1sab\nHi0WvKRpQuO/yVXeCtkkaCAw/yyhR/MC6ejHLss7BIDJ36bJyCSytxq+vI1V\ndwvtoMhyldmx9xImKZXFE4fKDUZiuxAVKF3gkPnrQrAmkfhnWLAbIY7zFKgo\n3po9EgDy120ekgvUCddsJYbXRD+TSN9x1xyGdRV2hs/+1TCBomFn2r2wj2ip\nQncrTVW/0c60idIwTabTuCTdUN50PtM9WgBLG4JAUb08xuC0Pr+PjZOQ4MwC\nJU1hf+AU6QCMloTiHiNDsSzk92r/J8A9R69L0zBnsiN1eP233rVKWEMFf61q\nvONhcWlOIxu322w/7HKYtkmlwnnmC8iAKv7hv/tXuY4omeIaaQVYcrrMLrNb\ntdwthBAG1CV1YptfLoXJNcYkxMpFr6UPM3Mnxz5MpT+FbCZV6SDCmQ5rgGQ/\ngw0m\r\n=e0Hy\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICVTPr+ZNoVbGFR71zFTsm3T3r0YmeiuLDzZF3EHfJlJAiAm+E5tmvJfmlOul8sCgD3dJFWkjydnRLQkwJ1BqJvdKQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.2.0_1644114784774_0.4856258885224509"
      },
      "_hasShrinkwrap": false
    },
    "4.2.1": {
      "name": "eslint-plugin-functional",
      "version": "4.2.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^16.1.0",
        "@commitlint/config-conventional": "^16.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.0",
        "@rollup/plugin-commonjs": "^21.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.1.3",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.2",
        "@semantic-release/npm": "^9.0.0",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^0.0.51",
        "@types/node": "17.0.23",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.0.1",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.18.3",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.5.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^4.1.0",
        "eslint-plugin-functional": "^4.2.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^37.7.1",
        "eslint-plugin-markdown": "^2.2.1",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.12.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^40.1.0",
        "espree": "^9.3.0",
        "husky": "^7.0.4",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^12.3.3",
        "markdownlint-cli": "^0.31.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.2",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.12.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^2.11.1",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "3a3ea621c43df8b57810393426986a0d75ea9263",
      "_id": "eslint-plugin-functional@4.2.1",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "8.4.1",
      "dist": {
        "integrity": "sha512-j16ozgXrr0UdPBirdbgDZgRBPr9Prj3j1xoisE435wzRDMWQlSHHJ41LCzNrlfGDb7OFAyXVcVatVwALz2jckw==",
        "shasum": "c486f15695a31f916847c89f0f85a09c8ee423c6",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.2.1.tgz",
        "fileCount": 6,
        "unpackedSize": 185552,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC35tLiT4B1eYOTnA+OZbWD/Kk+9/Q+ocU2vkfnqcdDKwIgDQ5skrSQj3ne2IYWyKQD1WYIWRGu8T417D82nO7nF30="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTRrJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrGCw/+Iw/adB6HGASdZCYx1oNYXR9+DoSsFdJ9Ry2T4d6Ze2KoYf6r\r\n7YhafwdndxwWGiIUNejv7lVSq2httXK7EJcmCnQcvISiO3PPocrs061/Cmwr\r\n6v7sp4Y4xShTjgMDBfHQJrYXytMpfkQ2ssh/lmiS76HIx4jNYUtyvzlF5pkf\r\nl99kwWR/F9TXIKb7g34GW5nh/ynvw0FDlMT2Q+zKZLKT/sJuJVdi56CYnsc3\r\n224pBvIxmJOYn5WSWO20wFNI6dnX/JjDje5Yynvpg81YG4ZtaqJxEEbhzkX5\r\ngE3IgXFHJ9UqfATE/zV2NfChogis3sWihYY29pL1D/WKB406EFRiPCEA7/R+\r\nirUMMOP/YxTgycMP3bOdjcZ+YArYQ2a2cMh+iakLaODgLVE+ARIQFhSZVxgU\r\n73fRIDVzZrYApoVThWXNZjrjq+sUoDZayr2yEpd1uXNPGRJZRVF4cqVQbKug\r\nQK5X6yc8Vg2y4/03ilK9csuo+6ix3gpbtCnn0fNJ7SMMd9jQeIuUB0kzmrWA\r\nNEsk1AXstBjlx3AiDz/mELRtmBm+2einr7NazinDSZezjAFcdMbKJ/EmA2Zu\r\not4CPeXwAX+mcgA6Qnoqb7tG/b7PI2R5OuMgUt0VNpxbv3rqoSLfNkOGZ8Gq\r\nRi7Pwf2ODCyzxcaXH2tJNqvM1xwsZohhivk=\r\n=nKsE\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.2.1_1649220297553_0.016684057472828195"
      },
      "_hasShrinkwrap": false
    },
    "4.2.2": {
      "name": "eslint-plugin-functional",
      "version": "4.2.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/jonaskello/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/jonaskello/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jonaskello/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^16.1.0",
        "@commitlint/config-conventional": "^16.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.0",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^13.1.3",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.2",
        "@semantic-release/npm": "^9.0.0",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^0.0.51",
        "@types/node": "18.0.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.0.1",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^5.18.3",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^2.5.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^4.1.0",
        "eslint-plugin-functional": "^4.2.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^37.7.1",
        "eslint-plugin-markdown": "^2.2.1",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.12.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^40.1.0",
        "espree": "^9.3.0",
        "husky": "^7.0.4",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^12.3.3",
        "markdownlint-cli": "^0.31.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.2",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^3.12.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^2.11.1",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "473171dce32654049250653dcdad34a3c99f957f",
      "_id": "eslint-plugin-functional@4.2.2",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "8.4.1",
      "dist": {
        "integrity": "sha512-sDz61AoXnR5dIipurwqoxvZ/CHzF1FHVGR5bUR+vJjqYiRNp+Y/m2SXEpyDqYwv8zSdZpBP77g8WR3+ZiJdZpw==",
        "shasum": "d4c10fec0f45db892590255a03f2f9ad06eddd24",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.2.2.tgz",
        "fileCount": 6,
        "unpackedSize": 185820,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCDkbCRH/9ywQs6Thx8p/WNSZQxwshUS6KtPR+wyuSeqwIga9WTpL3Gk7X6G49+t3wVmPFdMxjYoHpoAKs8LRhhIek="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2qQ8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrcbg/8DqnDFrJZD/exA2Pmm0LWmOEBW7HO2bvFZ6W3hIM5e+9CxQyl\r\nk1oCAR4Kh0QdhuOgyaJZG6IXEotoc6An3XaSGaKwCSnQR4dKwPK9RUlINWaV\r\nzwyLlP7oHdKVm/ZMApdaM42UxR+RjDp4RroUk+JxsBPLihpJ34GgSkUYsxQv\r\ni5W3HAl2EPMasJE2RD8gPtoO2fLGpY3Uci4sZVDMhSMEn0xo8BweURCfUfJs\r\nR+g/3Vjywcp7bDEQm5bebLmGxcqBt4IpUVgYEiGV2DMVeBZMYDAL6o/FozWH\r\nU3KOrpnx780+Sxj7IWh3x/UwlG12RduxNqy7f0lyklDH6oitf6+EIq9/0Jdz\r\ncMkaxOgNTt0palY+rWFpWIWAfCniLf3zSP8OP4fgBK3dtxFDRP9PAWqcjHim\r\nFTiXo4Xvu8imO2fY6rDh8XFszwTjUHgrIB6SpC3ZEi3kcHuY/c9FkJrw44aS\r\nI7XmTXuM+LdzNWHbEtUJYMv7N4mfv+mE0RNKMpcdNJYsdkBLBLG73mmRBQny\r\njuZXcDCAKhWj46jLUUGLdOCOWuFoKV60qYqmniGQfFW2+3Lfwfz5kr5B9kQI\r\nC8QUQQEPbOBqdnyEKIpST0VK+cRqHiHy8zNDzutzlOI56G5H1Yd32DXepszA\r\nqAGvElgLD92ew/BouSQFxd2Fr8Gzzqj3dzY=\r\n=0b5b\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jonaskello",
        "email": "jonas.kello@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.2.2_1658496060351_0.233513261918868"
      },
      "_hasShrinkwrap": false
    },
    "4.3.0": {
      "name": "eslint-plugin-functional",
      "version": "4.3.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.22",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "18.0.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-functional": "^4.2.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^2.11.1",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "72fa96cea880d764ce818ce6270104870d578306",
      "_id": "eslint-plugin-functional@4.3.0",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-zXiVnGcMQveW9+1GeARaeDhIQE8AtDgUgjiPqDSfthztlxERF6LsQ9UbIrpJCpdr7F8jPhjEBNoW45gjRFTgeg==",
        "shasum": "8a5599531e014f1159e8a01ab6aaf78e297f7fe8",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.3.0.tgz",
        "fileCount": 6,
        "unpackedSize": 191130,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDjGptsmNBCpfYDPa/B0HSZZqAJ0gF+tmkendYshq8wkwIhAL1wDoHckiU0FHwveQWIrDQ/qj0yz+uln3wBxdwJhwTl"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjGgwrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoHHg//RQCvfE9+kc2fXZaQzl399/OFPP1dQKXZTMcYnNSJqJWeHZCT\r\nZqd/hzQnFYwylJCbH3E58NTTxzqJKCvFE5q5Lmn+akB43voTExLNCwoJS8LK\r\nVkHMplkHYU2JbpgtHtInJUHj9AWhwMHuFR0brmT3jVLaRP4klveD8VUMbS5A\r\nh3zDQMgBAlpP0Z9XEhraMH+kNp3xPO9Jpma2XOpsbwg3irbcMiUqfBs/zzc4\r\nbv9+BmglAb6esGyzaL6CldTTNN/7EGAzmw6feRdJHIa9RBrfN75JWI5+q6k/\r\nh3AS1zwpEy/S+Z4HSP7DxvSbuwNatpJyxGQZMwLK+ro32d2iE2yFbAPltCNC\r\ne8k+dbmv4+YGIQ4R/BSN1/4uYTa+XLH2xXyaVpwSI54nUm3NSp5S/+GnGi00\r\nVpLIM8JUFU30pcCJeKbsoMYolEmhVAMiiCsjkVX3+l6DfsrxHTAHqnKS0xuM\r\nyeZQ6J6/34tpTLKkhWnSYCbBdWca/YCzQ9XV8EX1cxsfFszak8ueF3zIA6kz\r\nTRMOHD3YxaVGY1DJ/d+4Mj4DmMCmQ0DFZRdFWvKLM6nxD0MKWHFokPA4SsKm\r\nM6bk63hq4h6k7QQWWSiqzqbfwCaUY4gwGtcj3XAxmPaZ9IVFdHGvIRB52rAM\r\nV1L1OGoSYBAJwmPXt5k698kKMje2jo8T60I=\r\n=XLpU\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.3.0_1662651435650_0.5344341326029654"
      },
      "_hasShrinkwrap": false
    },
    "4.3.1": {
      "name": "eslint-plugin-functional",
      "version": "4.3.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.23",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "18.0.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-functional": "^4.2.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^2.11.1",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "5a84639acefdaa9c7375247f887199e1aad1b8c4",
      "_id": "eslint-plugin-functional@4.3.1",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-Mlm0A4gtQya2jLg6BvL8FoyHtedMj3gGJNMe9SWIyRhFmIibGFjOldzZ86LxOQYnwLMV9AD5aeLBRfxPFTkkaQ==",
        "shasum": "bf645ebb7020a9e291e5577655e7e9c63c2b5f84",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.3.1.tgz",
        "fileCount": 6,
        "unpackedSize": 192781,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBFiq8pF76bXwjw/SWdsNuR0cc7vSzIqI+c8GAHSSizpAiB8qcjdV2+ZfVBElxyzxV55/1cRw1h/L+IEyM299Z6kmw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjIYk8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrJNw/9GrXBPE4VLB1dN8+c7cMA/d5CeuH5uER+Dq8Cdb3rwGrK9sA5\r\nDdC6kGHA7SpvNxIBlcT23hOKfxIETqc6+E775YgpGLyHCnlnZmReOWocmnae\r\nq4yvczNhDsNSmeWpFCYS27aQDbihVbhw0ShmKnG3PPfuhlXOIXM9sWg9Ns35\r\n66yeLtipOY6PQZQ4IPwXRHd+3QAqAGfiJ+ztoBCVYVpzK6yMlo22ooU6THpQ\r\nB4oWfl1UgcRrFf5BAa/MDNRpfyVzd2+3eRmBcxx/ilL2ErpR85NwKft7aOE0\r\nj2KB7zJZJ5axMvwHzKaF2j0Fmkf8wgNmvYbu0nsmgT9tCNMWshwM6Dt0x0hS\r\nKoY8hm/9R+pBOXpJ7hJj40LrHs/542fDENFaOvK0+aRPBLziNLmHZVntPDjf\r\nfCccm5AW6XXPkQDvY7G8M4RtkdhGlWkfFq8Wv8vMuQvJgnhUuM3xvC2osReD\r\nbVsAK3IurmkK/j7JWjqDezH3TJtR/zgJCJJGBYyeqwiC186e/gZwNRnzff8m\r\nfbCriIHUVTxvv2IPHJvDWXFD6145wiWZTXiiojCEd2RpKLeBZZ7ZAT2M2g7+\r\nBwvyk/n04PVlYMxM2pfRnXDbLM9MUTnVEpfG/VEvlZzpTuV11mwis0+zpBOB\r\nMmBZuQoKbTfUXN9P04mPufMmf5hXTRQOJPg=\r\n=u//G\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.3.1_1663142204254_0.5556239332241117"
      },
      "_hasShrinkwrap": false
    },
    "4.3.1-beta.1": {
      "name": "eslint-plugin-functional",
      "version": "4.3.1-beta.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.23",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "18.0.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-functional": "^4.2.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^2.11.1",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n> :wave: If you previously used the rules in [tslint-immutable](https://www.npmjs.com/package/tslint-immutable), this package is the ESLint version of those rules. Please see the [migration guide](docs/user-guide/migrating-from-tslint.md) for how to migrate.\n\n## Features\n\n- [No mutations](#no-mutations)\n- [No object-orientation](#no-object-orientation)\n- [No statements](#no-statements)\n- [No exceptions](#no-exceptions)\n- [Currying](#currying)\n- [Stylistic](#stylistic)\n\n### No mutations\n\nOne aim of this project is to leverage the type system in TypeScript to enforce immutability at compile-time while still using regular objects and arrays. Additionally, this project will also aim to support disabling mutability for vanilla JavaScript where possible.\n\n### No object-orientation\n\nJavaScript is multi-paradigm, allowing both object-oriented and functional programming styles. In order to promote a functional style, the object oriented features of JavaScript need to be disabled.\n\n### No statements\n\nIn functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be disabled to promote a functional style.\n\n### No exceptions\n\nFunctional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n### Currying\n\nJavaScript functions support syntax that is not compatible with curried functions. To enable currying this syntax has to be disabled.\n\n### Stylistic\n\nEnforce code to be written in a more functional style.\n\n## Installation\n\n### JavaScript\n\n```sh\n# Install with npm\nnpm install -D eslint eslint-plugin-functional\n\n# Install with yarn\nyarn add -D eslint eslint-plugin-functional\n```\n\n### TypeScript\n\n```sh\n# Install with npm\nnpm install -D eslint @typescript-eslint/parser tsutils eslint-plugin-functional\n\n# Install with yarn\nyarn add -D eslint @typescript-eslint/parser tsutils eslint-plugin-functional\n```\n\n## Usage\n\nAdd `functional` to the plugins section of your `.eslintrc` configuration file. Then configure the rules you want to use under the rules section.\n\n```jsonc\n{\n  \"plugins\": [\"functional\"],\n  \"rules\": {\n    \"functional/rule-name\": \"error\"\n  }\n}\n```\n\nThere are several rulesets provided by this plugin.\n[See below](#rulesets) for what they are and what rules are including in each.\nEnable rulesets via the \"extends\" property of your `.eslintrc` configuration file.\n\n```jsonc\n{\n  // ...\n  \"extends\": [\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n### With TypeScript\n\nAdd `@typescript-eslint/parser` to the \"parser\" filed in your `.eslintrc` configuration file.\nTo use type information, you will need to specify a path to your `tsconfig.json` file in the \"project\" property of \"parserOptions\".\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"./tsconfig.json\"\n  }\n}\n```\n\nSee [@typescript-eslint/parser's README.md](https://github.com/typescript-eslint/typescript-eslint/tree/main/packages/parser#readme) for more information on the available parser options.\n\n### Example Config\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"tsconfig.json\"\n  },\n  \"env\": {\n    \"es6\": true\n  },\n  \"plugins\": [\n    \"@typescript-eslint\",\n    \"functional\"\n  ],\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/eslint-recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:@typescript-eslint/recommended-requiring-type-checking\",\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Recommended** (plugin:functional/recommended)\n- **Lite** (plugin:functional/lite)\n- **Off** (plugin:functional/off)\n\nCategorized:\n\n- **No Mutations** (plugin:functional/no-mutations)\n- **No Object Orientation** (plugin:functional/no-object-orientation)\n- **No Statements** (plugin:functional/no-statements)\n- **No Exceptions** (plugin:functional/no-exceptions)\n- **Currying** (plugin:functional/currying)\n- **Stylistic** (plugin:functional/stylistic)\n\nOther:\n\n- **All** (plugin:functional/all) - Enables all rules defined in this plugin.\n- **External Recommended** (plugin:functional/external-recommended) - Configures recommended rules not defined by this plugin.\n\nThe [below section](#supported-rules) gives details on which rules are enabled by each ruleset.\n\n## Supported Rules\n\n**Key**:\n\n|      Symbol       | Meaning                                                                                                                                |\n| :---------------: | -------------------------------------------------------------------------------------------------------------------------------------- |\n|  :hear_no_evil:   | Ruleset: Lite<br><sub><sup>This ruleset is designed to enforce a somewhat functional programming code style.</sup></sub>               |\n|  :speak_no_evil:  | Ruleset: Recommended<br><sub><sup>This ruleset is designed to enforce a functional programming code style.</sup></sub>                 |\n|     :wrench:      | Fixable<br><sub><sup>Problems found by this rule are potentially fixable with the `--fix` option.</sup></sub>                          |\n| :thought_balloon: | Only Available for TypeScript<br><sub><sup>The rule either requires Type Information or only works with TypeScript syntax.</sup></sub> |\n|   :blue_heart:    | Works better with TypeScript<br><sub><sup>Type Information will be used if available making the rule work in more cases.</sup></sub>   |\n\n### No Mutations Rules\n\n:see_no_evil: = `no-mutations` Ruleset.\n\n| Name                                                           | Description                                                                | <span title=\"No Mutations\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------- | -------------------------------------------------------------------------- | :---------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)             | Disallow mutating objects and arrays                                       |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                             | Disallow mutable variables                                                 |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-method-signature`](./docs/rules/no-method-signature.md)   | Enforce property signatures with readonly modifiers over method signatures |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`prefer-readonly-type`](./docs/rules/prefer-readonly-type.md) | Use readonly types and readonly modifiers where possible                   |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: | :thought_balloon: |\n\n### No Object-Orientation Rules\n\n:see_no_evil: = `no-object-orientation` Ruleset.\n\n| Name                                                       | Description                                                              | <span title=\"No Object-Orientation\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------- | ------------------------------------------------------------------------ | :------------------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-class`](./docs/rules/no-class.md)                     | Disallow classes                                                         |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-mixed-type`](./docs/rules/no-mixed-type.md)           | Restrict types so that only members of the same kind are allowed in them |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-this-expression`](./docs/rules/no-this-expression.md) | Disallow `this` access                                                   |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n\n### No Statements Rules\n\n:see_no_evil: = `no-statements` Ruleset.\n\n| Name                                                                   | Description                                                | <span title=\"No Statements\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------------------- | ---------------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statement`](./docs/rules/no-conditional-statement.md) | Disallow conditional statements (if and switch statements) |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-expression-statement`](./docs/rules/no-expression-statement.md)   | Disallow expressions to cause side-effects                 |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-loop-statement`](./docs/rules/no-loop-statement.md)               | Disallow imperative loops                                  |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                     | Disallow functions that return nothing                     |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n:see_no_evil: = `no-exceptions` Ruleset.\n\n| Name                                                       | Description                                           | <span title=\"No Exceptions\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------- | ----------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)   | Disallow rejecting Promises                           |                                                  |                                          |                                                  |          |              |\n| [`no-throw-statement`](./docs/rules/no-throw-statement.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n| [`no-try-statement`](./docs/rules/no-try-statement.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          |              |\n\n### Currying Rules\n\n:see_no_evil: = `currying` Ruleset.\n\n| Name                                                             | Description                               | <span title=\"Currying\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :-----------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |             :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n\n### Stylistic Rules\n\n:see_no_evil: = `stylistic` Ruleset.\n\n| Name                                           | Description             | <span title=\"Stylistic\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------- | ----------------------- | :------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md) | Tacit/Point-Free style. |              :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: | :blue_heart: |\n\n## Recommended standard rules\n\nIn addition to the immutability rules above, there are a few standard rules that need to be enabled to achieve immutability.\n\nThese rules are all included in the _external-recommended_ rulesets.\n\n### [no-var](https://eslint.org/docs/rules/no-var)\n\nWithout this rule, it is still possible to create `var` variables that are mutable.\n\n### [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\n\nWithout this rule, function parameters are mutable.\n\n### [prefer-const](https://eslint.org/docs/rules/prefer-const)\n\nThis rule is helpful when converting from an imperative code style to a functional one.\n\n### [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\n\nThis rule is helpful when working with classes.\n\n### [@typescript-eslint/prefer-readonly-parameter-types](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly-parameter-types.md)\n\nFunctional functions must not modify any data passed into them.\nThis rule marks mutable parameters as a violation as they prevent readonly versions of that data from being passed in.\n\nHowever, due to many 3rd-party libraries only providing mutable versions of their types, often it can not be easy to satisfy this rule. Thus by default we only enable this rule with the \"warn\" severity rather than \"error\".\n\n### [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\n\nAlthough our [no-conditional-statement](./docs/rules/no-conditional-statement.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## How to contribute\n\nFor new features file an issue. For bugs, file an issue and optionally file a PR with a failing test.\n\n## How to develop\n\nTo execute the tests run `yarn test`.\n\nTo learn about ESLint plugin development see the [relevant section](https://eslint.org/docs/developer-guide/working-with-plugins) of the ESLint docs. You can also checkout the [typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) repo which has some more information specific to TypeScript.\n\nIn order to know which AST nodes are created for a snippet of TypeScript code you can use [AST explorer](https://astexplorer.net/) with options JavaScript and @typescript-eslint/parser.\n\n### Commit Messages\n\n> tl;dr: use `npx cz` instead of `git commit`.\n\nCommit messages must follow [Conventional Commit messages guidelines](https://www.conventionalcommits.org/en/v1.0.0/). You can use `npx cz` instead of `git commit` to run a interactive prompt to generate the commit message. We've customize the prompt specifically for this project. For more information see [commitizen](https://github.com/commitizen/cz-cli#readme).\n\n### How to publish\n\nPublishing is handled by [semantic release](https://github.com/semantic-release/semantic-release#readme) - there shouldn't be any need to publish manually.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "3afba732c734b2add5bea7df16ee8cb1e8bda1d8",
      "_id": "eslint-plugin-functional@4.3.1-beta.1",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-GMHwHVSkTSWkQ9+cEWAMHzWPAZBMcQrfUmvHKrPCcK62tnqbqGS7tkjBE4kvZsJmf3CDmHel+ao7btzUtxsuqQ==",
        "shasum": "b8c96ca4cd07e92b5ff71fc621223dc09fe34316",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.3.1-beta.1.tgz",
        "fileCount": 6,
        "unpackedSize": 192816,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQChlO3gQlZ4IQYgz+wV295X6wgDqL+6fnnl97uQjLMRtgIgfF7siAR/VoUiqHVmYEEr44f5yt9XtBl1jUdWZtt7LEA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjIYl6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo/Tg/+J3sdyV6EU5SdhoWVTBsU7M0Az9UED+N+dPkqRP0NtbvIzuOa\r\nkLYQQ50YOVDQumpaFryC8ovMo3UfijcLlQy4RXxgbHWiKruJ1or5WQEgyxpF\r\nCRzzx1f1rrTin3+iGR7drkl/oNdZwGCnGSU9aBykczW2YZT0Q8pCuN6+sY/w\r\nrYrQtp7YTSHiLBvnO/msvCIBPE1QeaCzps002FUCiWIAv7eCOHBKdCE5oLYX\r\nRR7VywttsbIrMLh5c74xGpHgmD9z/aF7wgWGkpIOCrFnUgI/vtw/mKjgHNBc\r\nmX/WFd8TqqLyV5EaficbxmefR0nAqJ6UvTgRwWD7oPrRAiWb57HJ/5pvXC2H\r\nqbY/rPivr3jeuWViLj0e4rhTntSE7wmhM3GwUN1WZZSr2d430Trw8tE62Am6\r\nnlkzmspN+jSVverT8TQj+r6O+Qz6UHT5NdG5dqfVASK+bcIcllOYe6KFyUea\r\nbzQObswSql5H3ElSg4iGnYXkknh/CHKiC1OVnEu1SezREqvrsTajbQQoZkct\r\nDxn5FrcOBjOS0UOEx+JqUvkaL3NUqEvXWP0rQ742pZJQkmtldPSF6GfJuSBP\r\nn/kG724+y1MNWNNI+SP8diXMeEk28tcFP/s1e4K7KZZe0DUvN3Lv2Jcgjc4I\r\nxQXZhp/mBpzV9j8PJGQb+jRf3aDGJodRNP8=\r\n=6zMl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.3.1-beta.1_1663142266256_0.02063011833394257"
      },
      "_hasShrinkwrap": false
    },
    "4.4.0-beta.1": {
      "name": "eslint-plugin-functional",
      "version": "4.4.0-beta.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^0.0.7",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.23",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^2.11.1",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n> :wave: If you previously used the rules in [tslint-immutable](https://www.npmjs.com/package/tslint-immutable), this package is the ESLint version of those rules. Please see the [migration guide](docs/user-guide/migrating-from-tslint.md) for how to migrate.\n\n## Features\n\n- [No mutations](#no-mutations)\n- [No object-orientation](#no-object-orientation)\n- [No statements](#no-statements)\n- [No exceptions](#no-exceptions)\n- [Currying](#currying)\n- [Stylistic](#stylistic)\n\n### No mutations\n\nOne aim of this project is to leverage the type system in TypeScript to enforce immutability at compile-time while still using regular objects and arrays. Additionally, this project will also aim to support disabling mutability for vanilla JavaScript where possible.\n\n### No object-orientation\n\nJavaScript is multi-paradigm, allowing both object-oriented and functional programming styles. In order to promote a functional style, the object oriented features of JavaScript need to be disabled.\n\n### No statements\n\nIn functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be disabled to promote a functional style.\n\n### No exceptions\n\nFunctional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n### Currying\n\nJavaScript functions support syntax that is not compatible with curried functions. To enable currying this syntax has to be disabled.\n\n### Stylistic\n\nEnforce code to be written in a more functional style.\n\n## Installation\n\n### JavaScript\n\n```sh\n# Install with npm\nnpm install -D eslint eslint-plugin-functional\n\n# Install with yarn\nyarn add -D eslint eslint-plugin-functional\n```\n\n### TypeScript\n\n```sh\n# Install with npm\nnpm install -D eslint @typescript-eslint/parser tsutils eslint-plugin-functional\n\n# Install with yarn\nyarn add -D eslint @typescript-eslint/parser tsutils eslint-plugin-functional\n```\n\n## Usage\n\nAdd `functional` to the plugins section of your `.eslintrc` configuration file. Then configure the rules you want to use under the rules section.\n\n```jsonc\n{\n  \"plugins\": [\"functional\"],\n  \"rules\": {\n    \"functional/rule-name\": \"error\"\n  }\n}\n```\n\nThere are several rulesets provided by this plugin.\n[See below](#rulesets) for what they are and what rules are including in each.\nEnable rulesets via the \"extends\" property of your `.eslintrc` configuration file.\n\n```jsonc\n{\n  // ...\n  \"extends\": [\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n### With TypeScript\n\nAdd `@typescript-eslint/parser` to the \"parser\" filed in your `.eslintrc` configuration file.\nTo use type information, you will need to specify a path to your `tsconfig.json` file in the \"project\" property of \"parserOptions\".\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"./tsconfig.json\"\n  }\n}\n```\n\nSee [@typescript-eslint/parser's README.md](https://github.com/typescript-eslint/typescript-eslint/tree/main/packages/parser#readme) for more information on the available parser options.\n\n### Example Config\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"tsconfig.json\"\n  },\n  \"env\": {\n    \"es6\": true\n  },\n  \"plugins\": [\n    \"@typescript-eslint\",\n    \"functional\"\n  ],\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/eslint-recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:@typescript-eslint/recommended-requiring-type-checking\",\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Recommended** (plugin:functional/recommended)\n- **Lite** (plugin:functional/lite)\n- **Off** (plugin:functional/off)\n\nCategorized:\n\n- **No Mutations** (plugin:functional/no-mutations)\n- **No Object Orientation** (plugin:functional/no-object-orientation)\n- **No Statements** (plugin:functional/no-statements)\n- **No Exceptions** (plugin:functional/no-exceptions)\n- **Currying** (plugin:functional/currying)\n- **Stylistic** (plugin:functional/stylistic)\n\nOther:\n\n- **All** (plugin:functional/all) - Enables all rules defined in this plugin.\n- **External Recommended** (plugin:functional/external-recommended) - Configures recommended rules not defined by this plugin.\n\nThe [below section](#supported-rules) gives details on which rules are enabled by each ruleset.\n\n## Supported Rules\n\n**Key**:\n\n|      Symbol       | Meaning                                                                                                                                |\n| :---------------: | -------------------------------------------------------------------------------------------------------------------------------------- |\n|  :hear_no_evil:   | Ruleset: Lite<br><sub><sup>This ruleset is designed to enforce a somewhat functional programming code style.</sup></sub>               |\n|  :speak_no_evil:  | Ruleset: Recommended<br><sub><sup>This ruleset is designed to enforce a functional programming code style.</sup></sub>                 |\n|     :wrench:      | Fixable<br><sub><sup>Problems found by this rule are potentially fixable with the `--fix` option.</sup></sub>                          |\n| :thought_balloon: | Only Available for TypeScript<br><sub><sup>The rule either requires Type Information or only works with TypeScript syntax.</sup></sub> |\n|   :blue_heart:    | Works better with TypeScript<br><sub><sup>Type Information will be used if available making the rule work in more cases.</sup></sub>   |\n\n### No Mutations Rules\n\n:see_no_evil: = `no-mutations` Ruleset.\n\n| Name                                                                                   | Description                                                     | <span title=\"No Mutations\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------------------- | --------------------------------------------------------------- | :---------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)                                     | Disallow mutating objects and arrays                            |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                                                     | Disallow mutable variables                                      |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`prefer-immutable-parameter-types`](./docs/rules/prefer-immutable-parameter-types.md) | Require function parameters to be typed as certain immutability |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`type-declaration-immutability`](./docs/rules/type-declaration-immutability.md)       | Enforce the immutability of types based on patterns             |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n\n### No Object-Orientation Rules\n\n:see_no_evil: = `no-object-orientation` Ruleset.\n\n| Name                                                       | Description                                                              | <span title=\"No Object-Orientation\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------- | ------------------------------------------------------------------------ | :------------------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-class`](./docs/rules/no-class.md)                     | Disallow classes                                                         |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-mixed-type`](./docs/rules/no-mixed-type.md)           | Restrict types so that only members of the same kind are allowed in them |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-this-expression`](./docs/rules/no-this-expression.md) | Disallow `this` access                                                   |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n\n### No Statements Rules\n\n:see_no_evil: = `no-statements` Ruleset.\n\n| Name                                                                   | Description                                                | <span title=\"No Statements\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------------------- | ---------------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statement`](./docs/rules/no-conditional-statement.md) | Disallow conditional statements (if and switch statements) |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-expression-statement`](./docs/rules/no-expression-statement.md)   | Disallow expressions to cause side-effects                 |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-loop-statement`](./docs/rules/no-loop-statement.md)               | Disallow imperative loops                                  |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                     | Disallow functions that return nothing                     |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n:see_no_evil: = `no-exceptions` Ruleset.\n\n| Name                                                       | Description                                           | <span title=\"No Exceptions\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------- | ----------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)   | Disallow rejecting Promises                           |                                                  |                                          |                                                  |          |              |\n| [`no-throw-statement`](./docs/rules/no-throw-statement.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n| [`no-try-statement`](./docs/rules/no-try-statement.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          |              |\n\n### Currying Rules\n\n:see_no_evil: = `currying` Ruleset.\n\n| Name                                                             | Description                               | <span title=\"Currying\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :-----------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |             :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n\n### Stylistic Rules\n\n:see_no_evil: = `stylistic` Ruleset.\n\n| Name                                                                       | Description                                        | <span title=\"Stylistic\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------- | -------------------------------------------------- | :------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`prefer-property-signatures`](./docs/rules/prefer-property-signatures.md) | Enforce property signatures over method signatures |              :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md)                             | Tacit/Point-Free style.                            |              :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: |   :blue_heart:    |\n\n## Recommended standard rules\n\nIn addition to the immutability rules above, there are a few standard rules that need to be enabled to achieve immutability.\n\nThese rules are all included in the _external-recommended_ rulesets.\n\n### [no-var](https://eslint.org/docs/rules/no-var)\n\nWithout this rule, it is still possible to create `var` variables that are mutable.\n\n### [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\n\nDon't allow function parameters to be reassigned, they should be treated as constants.\n\n### [prefer-const](https://eslint.org/docs/rules/prefer-const)\n\nThis rule is helpful when converting from an imperative code style to a functional one.\n\n### [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\n\nThis rule is helpful when working with classes.\n\n### [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\n\nAlthough our [no-conditional-statement](./docs/rules/no-conditional-statement.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## How to contribute\n\nFor new features file an issue. For bugs, file an issue and optionally file a PR with a failing test.\n\n## How to develop\n\nTo execute the tests run `yarn test`.\n\nTo learn about ESLint plugin development see the [relevant section](https://eslint.org/docs/developer-guide/working-with-plugins) of the ESLint docs. You can also checkout the [typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) repo which has some more information specific to TypeScript.\n\nIn order to know which AST nodes are created for a snippet of TypeScript code you can use [AST explorer](https://astexplorer.net/) with options JavaScript and @typescript-eslint/parser.\n\n### Commit Messages\n\n> tl;dr: use `npx cz` instead of `git commit`.\n\nCommit messages must follow [Conventional Commit messages guidelines](https://www.conventionalcommits.org/en/v1.0.0/). You can use `npx cz` instead of `git commit` to run a interactive prompt to generate the commit message. We've customize the prompt specifically for this project. For more information see [commitizen](https://github.com/commitizen/cz-cli#readme).\n\n### How to publish\n\nPublishing is handled by [semantic release](https://github.com/semantic-release/semantic-release#readme) - there shouldn't be any need to publish manually.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "5d41e7c7cd8fa6f05f4db34a8e2088c62267772b",
      "_id": "eslint-plugin-functional@4.4.0-beta.1",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-EjN8N1piyUaqjJXmiKWp3/MRT5TI2K3fwSoLVRrvjI/zLKWETHfMCU6F6SIIKFPAYZB/5hjqTdVyLeXITT2mnw==",
        "shasum": "85fe944b467d394eef8decb7346cfac1529829b7",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.4.0-beta.1.tgz",
        "fileCount": 6,
        "unpackedSize": 229813,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHkXN7gOV/KuJIXwLSjcxwkKYcvBrs/yvruvaNwyRJY6AiEA1FSDQ4aQea0rD+U5ubZnAQQKf2d/D/0ze//QqKEFy1k="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKCRHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr4sw/+LX4LTcdzQmQhOi7itdvTGjDHgYZJ/bldTG+WibUXtJsQqJRI\r\nWwsJtBNMe1sVEdg/+1Cz2UUxgI5nBcVbk3rkfgnlRoEDFe5DORhS6f2yZnac\r\ncQ9IxoPT/KzBBzUaBdy/TFEMAQgs8sEhJIkm59p6nZ8Hw/EbyuTMuRZP88fS\r\nPLolXCQf2F3gC17PvnBD0NmflxJGYFrSMSEP57wqUhE//d71bsfjlTo/dXKY\r\nfVRBXWWf0OmVn2AmTlvAn5/gtFpxGMfPhg2eek5ebaRGj+ei1M2uEvkG+KpV\r\n5LiactJ3tOp5M+mAatmA3gpa2DVKo/SP2MQ4WhK4fH0d+v4J2rVg/xT2/89G\r\nPxBqMxxIf2qxWJAK8i1PEGdEk6dANpF7dzBjt4dIPkEpGofhoDiQr9XAX76v\r\nCZ3tOj7+euSqsxvcAcfzzz8pckjGNogm8l0U1TJa5dCZj7hJh3v08ykky4oZ\r\nwnTcjTixBO0TuPVIPyRlgZvA6o1HXb5JQ3p/i1iARXiZ+oZMb5B75uPDkkQI\r\n+Avgsk4/aH1uKO42axZmORZfIFhKp3RkKPzN01NN/ndKWS0tZV00txnkrcxN\r\n+Ll4SaJXCUtl3hSZ8KCosIretQwReOEKibTHwqxnZpj6XzZPQfK4+u5yzBAB\r\nOCzEur3SnvXbp0tZjtEvAk1oCmxVZ10WJXg=\r\n=W3fZ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.4.0-beta.1_1663575111134_0.2714853294471551"
      },
      "_hasShrinkwrap": false,
      "deprecated": "invalid"
    },
    "5.0.0-beta.1": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^0.0.7",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.23",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^2.11.1",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n> :wave: If you previously used the rules in [tslint-immutable](https://www.npmjs.com/package/tslint-immutable), this package is the ESLint version of those rules. Please see the [migration guide](docs/user-guide/migrating-from-tslint.md) for how to migrate.\n\n## Features\n\n- [No mutations](#no-mutations)\n- [No object-orientation](#no-object-orientation)\n- [No statements](#no-statements)\n- [No exceptions](#no-exceptions)\n- [Currying](#currying)\n- [Stylistic](#stylistic)\n\n### No mutations\n\nOne aim of this project is to leverage the type system in TypeScript to enforce immutability at compile-time while still using regular objects and arrays. Additionally, this project will also aim to support disabling mutability for vanilla JavaScript where possible.\n\n### No object-orientation\n\nJavaScript is multi-paradigm, allowing both object-oriented and functional programming styles. In order to promote a functional style, the object oriented features of JavaScript need to be disabled.\n\n### No statements\n\nIn functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be disabled to promote a functional style.\n\n### No exceptions\n\nFunctional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n### Currying\n\nJavaScript functions support syntax that is not compatible with curried functions. To enable currying this syntax has to be disabled.\n\n### Stylistic\n\nEnforce code to be written in a more functional style.\n\n## Installation\n\n### JavaScript\n\n```sh\n# Install with npm\nnpm install -D eslint eslint-plugin-functional\n\n# Install with yarn\nyarn add -D eslint eslint-plugin-functional\n```\n\n### TypeScript\n\n```sh\n# Install with npm\nnpm install -D eslint @typescript-eslint/parser tsutils eslint-plugin-functional\n\n# Install with yarn\nyarn add -D eslint @typescript-eslint/parser tsutils eslint-plugin-functional\n```\n\n## Usage\n\nAdd `functional` to the plugins section of your `.eslintrc` configuration file. Then configure the rules you want to use under the rules section.\n\n```jsonc\n{\n  \"plugins\": [\"functional\"],\n  \"rules\": {\n    \"functional/rule-name\": \"error\"\n  }\n}\n```\n\nThere are several rulesets provided by this plugin.\n[See below](#rulesets) for what they are and what rules are including in each.\nEnable rulesets via the \"extends\" property of your `.eslintrc` configuration file.\n\n```jsonc\n{\n  // ...\n  \"extends\": [\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n### With TypeScript\n\nAdd `@typescript-eslint/parser` to the \"parser\" filed in your `.eslintrc` configuration file.\nTo use type information, you will need to specify a path to your `tsconfig.json` file in the \"project\" property of \"parserOptions\".\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"./tsconfig.json\"\n  }\n}\n```\n\nSee [@typescript-eslint/parser's README.md](https://github.com/typescript-eslint/typescript-eslint/tree/main/packages/parser#readme) for more information on the available parser options.\n\n### Example Config\n\n```jsonc\n{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"tsconfig.json\"\n  },\n  \"env\": {\n    \"es6\": true\n  },\n  \"plugins\": [\n    \"@typescript-eslint\",\n    \"functional\"\n  ],\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/eslint-recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:@typescript-eslint/recommended-requiring-type-checking\",\n    \"plugin:functional/external-recommended\",\n    \"plugin:functional/recommended\",\n    \"plugin:functional/stylistic\"\n  ]\n}\n```\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Recommended** (plugin:functional/recommended)\n- **Lite** (plugin:functional/lite)\n- **Off** (plugin:functional/off)\n\nCategorized:\n\n- **No Mutations** (plugin:functional/no-mutations)\n- **No Object Orientation** (plugin:functional/no-object-orientation)\n- **No Statements** (plugin:functional/no-statements)\n- **No Exceptions** (plugin:functional/no-exceptions)\n- **Currying** (plugin:functional/currying)\n- **Stylistic** (plugin:functional/stylistic)\n\nOther:\n\n- **All** (plugin:functional/all) - Enables all rules defined in this plugin.\n- **External Recommended** (plugin:functional/external-recommended) - Configures recommended rules not defined by this plugin.\n\nThe [below section](#supported-rules) gives details on which rules are enabled by each ruleset.\n\n## Supported Rules\n\n**Key**:\n\n|      Symbol       | Meaning                                                                                                                                |\n| :---------------: | -------------------------------------------------------------------------------------------------------------------------------------- |\n|  :hear_no_evil:   | Ruleset: Lite<br><sub><sup>This ruleset is designed to enforce a somewhat functional programming code style.</sup></sub>               |\n|  :speak_no_evil:  | Ruleset: Recommended<br><sub><sup>This ruleset is designed to enforce a functional programming code style.</sup></sub>                 |\n|     :wrench:      | Fixable<br><sub><sup>Problems found by this rule are potentially fixable with the `--fix` option.</sup></sub>                          |\n| :thought_balloon: | Only Available for TypeScript<br><sub><sup>The rule either requires Type Information or only works with TypeScript syntax.</sup></sub> |\n|   :blue_heart:    | Works better with TypeScript<br><sub><sup>Type Information will be used if available making the rule work in more cases.</sup></sub>   |\n\n### No Mutations Rules\n\n:see_no_evil: = `no-mutations` Ruleset.\n\n| Name                                                                                   | Description                                                     | <span title=\"No Mutations\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------------------- | --------------------------------------------------------------- | :---------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)                                     | Disallow mutating objects and arrays                            |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                                                     | Disallow mutable variables                                      |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`prefer-immutable-parameter-types`](./docs/rules/prefer-immutable-parameter-types.md) | Require function parameters to be typed as certain immutability |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`type-declaration-immutability`](./docs/rules/type-declaration-immutability.md)       | Enforce the immutability of types based on patterns             |               :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n\n### No Object-Orientation Rules\n\n:see_no_evil: = `no-object-orientation` Ruleset.\n\n| Name                                                       | Description                                                              | <span title=\"No Object-Orientation\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------- | ------------------------------------------------------------------------ | :------------------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-class`](./docs/rules/no-class.md)                     | Disallow classes                                                         |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-mixed-type`](./docs/rules/no-mixed-type.md)           | Restrict types so that only members of the same kind are allowed in them |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-this-expression`](./docs/rules/no-this-expression.md) | Disallow `this` access                                                   |                    :heavy_check_mark:                    |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n\n### No Statements Rules\n\n:see_no_evil: = `no-statements` Ruleset.\n\n| Name                                                                   | Description                                                | <span title=\"No Statements\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ---------------------------------------------------------------------- | ---------------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statement`](./docs/rules/no-conditional-statement.md) | Disallow conditional statements (if and switch statements) |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-expression-statement`](./docs/rules/no-expression-statement.md)   | Disallow expressions to cause side-effects                 |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`no-loop-statement`](./docs/rules/no-loop-statement.md)               | Disallow imperative loops                                  |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                     | Disallow functions that return nothing                     |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n:see_no_evil: = `no-exceptions` Ruleset.\n\n| Name                                                       | Description                                           | <span title=\"No Exceptions\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------- | ----------------------------------------------------- | :----------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)   | Disallow rejecting Promises                           |                                                  |                                          |                                                  |          |              |\n| [`no-throw-statement`](./docs/rules/no-throw-statement.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n| [`no-try-statement`](./docs/rules/no-try-statement.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                |                                          |                :heavy_check_mark:                |          |              |\n\n### Currying Rules\n\n:see_no_evil: = `currying` Ruleset.\n\n| Name                                                             | Description                               | <span title=\"Currying\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :-----------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |             :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                |          |              |\n\n### Stylistic Rules\n\n:see_no_evil: = `stylistic` Ruleset.\n\n| Name                                                                       | Description                                        | <span title=\"Stylistic\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | <span title=\"Recommended\">:speak_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------- | -------------------------------------------------- | :------------------------------------------: | :--------------------------------------: | :----------------------------------------------: | :------: | :---------------: |\n| [`prefer-property-signatures`](./docs/rules/prefer-property-signatures.md) | Enforce property signatures over method signatures |              :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                |          | :thought_balloon: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md)                             | Tacit/Point-Free style.                            |              :heavy_check_mark:              |            :heavy_check_mark:            |                :heavy_check_mark:                | :wrench: |   :blue_heart:    |\n\n## Recommended standard rules\n\nIn addition to the immutability rules above, there are a few standard rules that need to be enabled to achieve immutability.\n\nThese rules are all included in the _external-recommended_ rulesets.\n\n### [no-var](https://eslint.org/docs/rules/no-var)\n\nWithout this rule, it is still possible to create `var` variables that are mutable.\n\n### [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\n\nDon't allow function parameters to be reassigned, they should be treated as constants.\n\n### [prefer-const](https://eslint.org/docs/rules/prefer-const)\n\nThis rule is helpful when converting from an imperative code style to a functional one.\n\n### [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\n\nThis rule is helpful when working with classes.\n\n### [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\n\nAlthough our [no-conditional-statement](./docs/rules/no-conditional-statement.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## How to contribute\n\nFor new features file an issue. For bugs, file an issue and optionally file a PR with a failing test.\n\n## How to develop\n\nTo execute the tests run `yarn test`.\n\nTo learn about ESLint plugin development see the [relevant section](https://eslint.org/docs/developer-guide/working-with-plugins) of the ESLint docs. You can also checkout the [typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) repo which has some more information specific to TypeScript.\n\nIn order to know which AST nodes are created for a snippet of TypeScript code you can use [AST explorer](https://astexplorer.net/) with options JavaScript and @typescript-eslint/parser.\n\n### Commit Messages\n\n> tl;dr: use `npx cz` instead of `git commit`.\n\nCommit messages must follow [Conventional Commit messages guidelines](https://www.conventionalcommits.org/en/v1.0.0/). You can use `npx cz` instead of `git commit` to run a interactive prompt to generate the commit message. We've customize the prompt specifically for this project. For more information see [commitizen](https://github.com/commitizen/cz-cli#readme).\n\n### How to publish\n\nPublishing is handled by [semantic release](https://github.com/semantic-release/semantic-release#readme) - there shouldn't be any need to publish manually.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "c0873a057bb3844f0da1f7ae185cf02faa42edf9",
      "_id": "eslint-plugin-functional@5.0.0-beta.1",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-wEMSCPFWD4cfya0lPhAmXhIEp1oWBOlD+IX6/ZZ+XbnHy8+L87X+CvkxZLscDKTm7fBRubWzHgNKnY/A+bgEuA==",
        "shasum": "1f644043a79836741deb1de3004bca80929c7765",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.1.tgz",
        "fileCount": 6,
        "unpackedSize": 230939,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGtZmcpCTKaISdalJ6S5mbvqZCRP1jOAKfO6hmA3tABsAiEAzctBKo9tZ9DMxo4eiwgyQ86+6Qu32nwMUqxKg22WG90="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKEw5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoqphAAmtHmvk5U+WtlZVDF6dhRogBjUv/kTBKncL3L8PO23pGdMBhQ\r\nnGLcv6kqJlxonRHbmlN8Vss8JurjxxirRd5Mzi2RRdhogwqdkqXqbwRjTrBI\r\njXQmZeEddSqEFneWVrNly/iBZQkdvyT6UJuDoekSCJ4CKOvzc+TRqESo57P8\r\nBvVwsnoyriJSJ21PZkpUN+rM3JRk2OxJsBgXh8N554rtqw/vaKgMKRS9+EDP\r\n+ZYevAsGB43HGUnz74Q4Cbv6w8C97lNiThpnCufY9V397nSjuQRWgVUaBKlf\r\nJD8RdoB4YHI1LpOoiT0ZIvPPZgOc8J9AQLhBPuHVxLf2jKjlaGt87VrdKuUW\r\nwYq+Gq1xmGofTpp0ZOGxzN8tFQ9fJKIC1mjxhZcZxic5X7jFSzuPmKzxMEzI\r\n95waUGqLnex0ZScvVjjNxbqUZhIUk2WwlidqouqWqh9y7U8odXsVs0+/ymlr\r\nOx1E++vrLi5jzSqnlRSSB3sUvVfQQBtBse1Tlh+2ro9N8gNR8aqqsUzLF5X+\r\nM0/4YRtUp/GnDUUfilQoLMNR86vTBVeUa1U/vrIQIiLe+/Lv526Pz0nf4Fs4\r\nRNGvC/Uizf/YFW+i3YQbNJ3wHfdDbhEWRyMgjD2X/uqzJQwmLeXtNBjsIyak\r\nAJY6dKm09IWI6o3OtGGnttd0dSeoLBS/TjQ=\r\n=vtRR\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.1_1663585337416_0.8883618448673991"
      },
      "_hasShrinkwrap": false
    },
    "4.3.2": {
      "name": "eslint-plugin-functional",
      "version": "4.3.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.23",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "18.0.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^2.11.1",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "fa3de39a61be7df48708e412b81669b13ee86c4e",
      "_id": "eslint-plugin-functional@4.3.2",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-GoR36d/P8/ZG984mGXMIrnCEBSoPC/WgBCh3zH7z7xsvIlvByO4fSexzsuo1ap3HVyKIY7L+gtRohscGBsZ5Fg==",
        "shasum": "e6afed23cb1f9fd9d110e146bbcc39c07df21b95",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.3.2.tgz",
        "fileCount": 6,
        "unpackedSize": 192888,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCizrB5EObYZ0qAg3CGzoedTgChJZhc82lUsOMt5IrblwIgCeUHSbcQ1omOfiUVW3rGQ8vglKiLzjMC+YvO1AaaiE4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKKthACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr5dhAAhxggokXpEFjpljvbk02wI1+Tz/+i/E0vQdzF+HoEEZg+Ou80\r\nxS+whiXpVtSNEjZNz0wzV3uJXGTt87Ztdg40ZnSTQ0Dq9lNIiumsilzB3Lcl\r\nf8TRhg83e75LiTUc3AReWS7DUSgsH3zK+4hge6uzQacShcLG/ko3QKkYf5v9\r\nZE+gPgo212AheoTnUQdIJnl9Q3y3v8riK4z2vWJsypmD6qu8x3LLRWyClNYG\r\n5gk8AzBH5ajfjlM9csEdeQyp90T9aMc3IgT1y+ELN15OQrxJ2ttsewVCGGWg\r\ni4/Zvn+1mlaVWz/iy0ru6T/G0hfKiAkkIngP2Rp3Zfk3nLkLE+5r2mYAyKci\r\nrSxTz7JNP6jLw9hdlaMZf1LyTh0E6a7jx9O5+RntMU1VytQ9agu+7S5Hgob6\r\n31n+/wLRmOgE+ayGjkescT4XCl1uI5/hHOWaY89gGKizJd3rxaaupTRXLQSj\r\ngz45ffN4tkImAW3ji1DmkCKoKowHWljUgxk64HO/gsz5IMmOKzSJL9t8oXvN\r\nw/nt1pWa9hWrDS3wT/l+oy9u3fX5ia8jyCFLo8wTUm7g9kNJ8mKDobE9nOtm\r\nhz/+FY+c/8AlxEdJzNHlkfm/WWf0mI+nweVgTYIQOxyEPTAQI4CM50l2ROvZ\r\ndUgKaQDZILfSCBkByr5IxMdsw464rmO84lE=\r\n=rKi2\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.3.2_1663609696834_0.9634488636301961"
      },
      "_hasShrinkwrap": false
    },
    "4.4.0": {
      "name": "eslint-plugin-functional",
      "version": "4.4.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.23",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "18.0.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^2.11.1",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "6fed40eb9341d1c5fdc967ea9a63787b22fde49c",
      "_id": "eslint-plugin-functional@4.4.0",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-DY/Iax9knIgzvxhVeSe+KoF9e4imLvzCvUEN1a+bWciDiBi3s1CG/1fw7AQVXoAqoNw9eYuP7C2u3OtHzMFy+A==",
        "shasum": "695a06b02f742cc5c5ced31caccec28ab13431db",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.4.0.tgz",
        "fileCount": 6,
        "unpackedSize": 195710,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDCxSG5O4psMVt/PTTWoPPaKrCszmtA5OZNGm+7tslf1wIgT7dcBHK13D7Uiy9Yo8r/tYVnHs8sN0Z0X5dIMwqWaQQ="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKa4nACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr3ew//Z6rLwKXSoIJ6H4+OyoCBSmewIfS50WKj1KcCXFqtdsr/GXHC\r\nlnEwU9jZBkDb9C4xuMBn8pRCS+Dcws1W85YhP8eKAgsvi4wN3rwid2pvbkjK\r\nyZj4Iciz3ivBOsTc4CVyXpB1ViepgB9bzD3HPZKazsmyN6wc+1gJMtPbsOjV\r\nr24hcEGlSf/WKMhWTzw+6EONZ2dcqds6yvSwnAOl6PxWjZPBSp+JN+a18ix+\r\n+SdIfw25SxlzAhkkEdLNdX9L+ff8ZFuYQtT1UQieWRgywWwer6tfeIoOXsEX\r\nRDJMDNlalCVnAmrdm/EFz7w6FAfy8wV7pE6jFhb6f8XQSQbmLBR0B9lDUZXa\r\ng0JMqQnieKuVPfKvciVMZHmH17AgUq23Y/wb7u+FBIrPdkeM+GMjaQvOzBiU\r\nIHZxa8o/mOBcKNcpyRzC6e6ypUTI8pbE9CXX3sW68ZKUlYkqOGtaG54ceT37\r\nTvkZ19YbP4cx1/JXbbpTkQYE6C8RVBRFcraPi3wCQydGi6px3OH6LPRKjT30\r\nqKrhTOKp86S4uxvv73lV6aqW4FgPJjYGnJXLw4cRSKsGWv6GiJtKF98GYD+I\r\n50BWvJi5dGBP107PjsELxLSOW5NHFreQrznl9twOjkta9A6n1gyDTuk/JN9q\r\nLurvDEfxM+X8VkafH2Ob42kgATU0snHjgDg=\r\n=zzO0\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.4.0_1663675943496_0.15635484625335017"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.2": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^0.0.7",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.23",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^3.0.0",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "621b44ce10cc335827e3d84470f024d855dbccce",
      "_id": "eslint-plugin-functional@5.0.0-beta.2",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-XHcCmjGDkGouWWHPNiaGHOlZyf1A/QFpAMp9w5sc6+D1t45E+16U+ISXrMfuKyNUPrIvuiIFMg2fBm2mlHV9uQ==",
        "shasum": "331afad8304193e254c9a89aeb1597c6ca07d431",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.2.tgz",
        "fileCount": 6,
        "unpackedSize": 230906,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD+KO3/BWpEPqzKqjWbINMXLK8cEzKm7qRFOQKOrvaFQAIhAJc/Z8J4Dq5SOe/3KCOZFC5UB4nuhdecI+rocom2/WeR"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjK69ZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmow6g//cQ+uXbOYX3v5EXPqozTF17rE9MERMJsBjbrAATGv3svBtX51\r\nD+ZCVH//Dm9Il7LbSksbr+yBSGnoOdvMpGuvR/d8chlPQEu7/XuiZ9QvcV5x\r\nSeq7aijHUlmT8KDyVYfsCe0DONYnYKgRZfyKm4obKadYsDrIpISSMLYGCNVS\r\nriLwEguUwwVzrWXkQUgNMF+X8Z0uPP4mo2e3Rf3tDU1o0AWRw8NrdhQxAo+a\r\n7TNxYwkl8/l1Ol8qMKe0zYY6odOmZ5Y4JgdVg3147MNNE3Bt/WmuDRD/t/1z\r\nMCK/cjjWVw1vUxxYBF25rC3Kb38oRtak64hTXtpzHqqe2yM7kcR2Bm0NuAVD\r\nqQtaxnjLQTTbIu2d6OfDnKSNXvWyi0xsw9juZt1Bvs8w/O6kux1JXiQLjQ/D\r\nR0Zu+SE7ogTFlSCEvSydb8Sy5XufsWhlC7nstYad/zVTTcMHgq+Xmpi9KRSL\r\nRPv73Ds3G7j5oxC+eeivETmp+n/OfnY285RwNIGLpYRQiRd95tpC8pMR3EtU\r\nURwhv3mPovC5Wugn3vcQO/r3K7/MKFBPlpAFckxBUotSt1HTH3AtFuE0klJY\r\nD5pIxHpAoxzS/l13ukl07OUD5kobSIjm6HjX5CD+FiLg3nAE+js6GTKXZVkP\r\nRRUI9S8TXPVv+z2NGrSsECBPmO1CkpTh3io=\r\n=S3M9\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.2_1663807321064_0.14083336435817473"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.3": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.3",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.0",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.24.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^3.0.0",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "a266e01f4bea5497a99ccd1ec9dc4330aed3c416",
      "_id": "eslint-plugin-functional@5.0.0-beta.3",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-KMSc3XGCjFrJXhoVKDaQvIOh6PC/KZlT/h6CqwymSBQn9TJ1YouWD3pQ5cC0bhPLMjuFwYL4bpSdBpO/9KucNg==",
        "shasum": "422ed121a9e43e503d54be40be0672af0225d087",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.3.tgz",
        "fileCount": 6,
        "unpackedSize": 230428,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICRWYCY1e42jM2ZDZgcDsQT5SyT+A3cm722nsJAFsO+PAiBgo0YK/OF5G+dmHc5unEILKd2OodUz41/jSEpaYPdWhg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMCSVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqhLA/+LLLoS6LzJr8gIcBmB5TN8iBgQsdkj74tq7y1VblSZE+DpGTp\r\nzAoEWbXwpqMWW3ad3btZ5zgXOll+AkP2cm4rJ/rUD8KwdyhKLwsbmjwYB3dx\r\nQOBHjWoP5bpfOay1cMU7CFlgMj+IwOyvkYanIXMCJsMCEH6WfPEc4h8ZtMc1\r\nVQyCG2LzoKAR56D/0ggWtrqsBSqXjtqh7k/HZY46tBncE9D+2L19KsBkaGrJ\r\n8vqsfwMlza0IgLrEFn/R5enRzsOvuhh88U9+lYRolQUE5V36seYFdq+Oz1N/\r\n8kB/3SlW/ieem1tbNhMv+vv2DgQ9kMhSZFS3QOIO5/avdEJH9mS0GApGcjrk\r\n7zOsFF5qV68RgapGV9B/wozRjc3m20iP5rX+K/ivFaD17mno+wo5GzOy4wms\r\nVHFT8QHMMVARHEF6TVHuGRyiibbbNrQkyCDANOB5TkkUYK31Aesq/KpEHAnd\r\nQbuVWUImqXmwBI18r/Qa/OYo3nFToH+KzXvBK1z7Pk4xKaCEO9bGDzSoOrLj\r\n498IWxvEevhCg3JTDsOgssGCFKVp8PW0rOg+hrJxC2JgdWL9ofW5O7MnlVd4\r\nudw11d+L41zW+GiP5bkSPETMkR/bpcX7v4FJZlWLQJWpUbW+g6/J/XALQl9n\r\nsR2oVkCXZ1iE9cjfRqOD77xL6edqRlGMlc0=\r\n=7TXV\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.3_1664099477048_0.890393308748284"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.4": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.4",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.0",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.24.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^3.0.0",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "441729e965728f62039adf011854c758682130bc",
      "_id": "eslint-plugin-functional@5.0.0-beta.4",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-eqtXzXmZxN0dqu4th0yJNERfLMUBgf3McGuSpQu1I+BiX06xTx6n8iFv25IkQLsj5zcbA623Kz+avAISDT5qWA==",
        "shasum": "1568a6924a16a97500cb794609508fd523725298",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.4.tgz",
        "fileCount": 6,
        "unpackedSize": 230428,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCV1Qbcu9s7EuMoeGF1pSxuGo2jouD/8B/eMk6wAToFSQIgI/9MY92vZqXP3Q5NKxFxJMPNWq1HVydVGoljCfh3I3E="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjNQ1sACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmph4hAAi7vxadjc7i266wmB6RiSOE4pjKnyR9/zuMpvjvLXDUDsKf7j\r\nw4HUFpWQ4Hja8gr7m74mq6gT8GoXIJ8MSmgrQIWcRIqzQ+/tnYo7atuGHiRy\r\nxNGTeoFeXya77QzzjdO8kFzH0PsWkGCKfX+4dZEztJsWPuB5CK4QeHAuyw2u\r\nHv3sOE70ItNUqib+wE0ttn2zpjKTa6r7rR1CYlsI5OGtgMtUpO/xeAAmWXkV\r\nvpQI4MDN/Mjt5gW+SCyNvdurP7Q9A2QOggCnMeg/9JdnnGsbeiLLeVzvTqkk\r\n/KG4A7yGjEibSKmWXlmnuCGG4KUoaoSS+xLZdDGXbvmK7XOwWggfi+AZLRkh\r\nTO5e4ryAydUoaj/+5KHedvXeF25pH/8MMJaK2IbVx127Qnhg3UaWvj5kGYmY\r\nP+XBbDl6bIgRqTFihzkZTKCTe2Vp0s25AV1KcKpRfkNN6w2gMa1mCl5Hy2Bn\r\nIVp9nYViegODt4Ei3UnGy58b9T1X8+vxTDszMP9US2cReoNRePwBhIPmILsr\r\naPtzLUjnCJVNEtedvMtGP/rEFNArbOtKNgvF53jkYPwN8Yd39ln2YOoE+kiG\r\nf3YkGkNpZMAz8/t6Od/yTGCW8T1lkzMs245h6jsnAHKjr2hA8ruLAFcDo1Ax\r\njjXzOLRco5Dg/sPx05TkKhB7KTBljVusVeg=\r\n=jFEz\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.4_1664421227799_0.7582637288553469"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.5": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.5",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.0",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.24.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^3.0.0",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "d90c657985946b2702bf69e88107796c6288e9f7",
      "_id": "eslint-plugin-functional@5.0.0-beta.5",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-Ng4K7Gw3BmhckpcingZT3A2nRv95btm3OvHpSw0Mxe8iOdoyLITAMlNeT1H1ktFkzAa/otNn008HeYX44OkBxg==",
        "shasum": "92e3e6b465c806608dd3a16ab765b8157bc14202",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.5.tgz",
        "fileCount": 6,
        "unpackedSize": 232029,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFEiEluEYpI89VGDmOQbzR63+kWd9+djm+YK2phb9dpPAiEA5uUzkExfVo0XOjMQ9virIm01lpK/vQd9ZG3+ylE+sEE="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjNRa+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp9Eg/8D52fQ9sa8pWUIZ3Odzxl1Vjnm8ihLNMq5HpP/M6JhU20WPSZ\r\nBfgdYEhlyUMroElRxfpwr1vQ2c6z/2Vq7FqV9eP2k7FIyevK/U0GfEiu9NRN\r\nUiHtGwLfr8/e+Z3ycF2BohG783FbUfdrwcm5TWG6clzXvY8GpylLm1lX8IxI\r\naBHmUYvv1P0kseVYG0LRKlGbeyz6+WjL2S1oyIzAyhMjoLgqkIEaRSC2t03X\r\nnAALpdUSYOXhDjiRUEH4cqCVuuoBGFgd+d0je25+jxvfw3KQsJXbAW4HIDHL\r\nJDhphN4Ogj9MRDHBvJu9zpPAfAqfpHRY1DC1noOC1Hmbw4PG7go/jLYhMlJ0\r\nTdyyKqz5COw4NC7hy4Ef57wfM7Rp0h7ZFDzKLMqf3EMZ6I62pUhuvX65O9nK\r\nmkrsdNMy942Ftm2xm3eej2UL0mp7YKpp5HCL4edvNhQn3QwIGzImaynIO9w2\r\nmDPzM/fUmztqWjIldn/J/XK2fHhn6yPbMPgzX5/rR7XKyma7A1se3jczgHR6\r\n2vIGfxPf8GQU/U8n6E1IZOEtHktOIhfJViC99G0r8Ni8hkI4yHWu1p1zk3yA\r\nykaEvGMJxOGtEHt9Bttu8Rl71BmHDz+nghNJeoyeL83vYxYp+PZy3LG85dv5\r\nDoEVpHk8WXlXAiBB1CIkBbEbbAWFGgGYNKE=\r\n=Sxh4\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.5_1664423613975_0.3058407306548603"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.6": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.6",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.0",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.24.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^3.0.0",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "132b86efbfdb3784944c9e3892ad156104ff3233",
      "_id": "eslint-plugin-functional@5.0.0-beta.6",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-bZYnICyUSI0sonu8Nq4MB3QNtt9VPIYt/w+jSNk1PJ4crpdhyAB2XSXsh4QzvyMDn0ovH5RLzqBdApcSUE0c7Q==",
        "shasum": "b27bd52c388ab51361e0c85d5a1ad5e373b1b656",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.6.tgz",
        "fileCount": 6,
        "unpackedSize": 232719,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHr/BtXo8U+6XPWC41IK9wBomLZfhgitaUbAN1E2VOAnAiEA4bw+sHQYPS/POnNtePA25qbG3AD2C47cD1djV+BZHyI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjNYgTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmriAw//eZY1HA3pR7/w+S3mGT6JMrbYKbAYQ5Hs3luktZ9R0D/aRN2h\r\nbsDhtKvaTMPQYhbCeNwlpefy51XpCWjMkQVRBOZ11QxWnlSFBCQhJ0P7+b6i\r\niEty5YahJc9ODuRKUUA4C6F52ZX8DYugV82+U0dwyzRAK78LdJk6xGHWSczN\r\nobScvl6I6qg8OcVKDN+ieUXO9PzyFuS5dth9wSAGHbcW8wbsalqXNrq7MoXx\r\nSXAK8LRKzYe5utgIzxLVAzMLz4JNr6bLCuaP3Ou3/7UOyzq+iN4ujebfHlGY\r\n36mvmvbsgs0gE4M6SWXy01Br6iQesJgLuG7+H5SkWoAYtfwmN9gtb//zk0WI\r\ntzoQvEV/xRwwVEbsybDClsaEOHo5x/3a2WY/5YehPTtUM/GIJkngpHI8GbRH\r\nvL3EbaTTLqYttLCfQAarJgi7qJ2mz+MimkLVRgMoO9fwB4YXHo854c53Do5u\r\n6rcZe/CCMvSaphRY/h5cEOCl6O/zVcDeopT7fErfC9NPuvyR4e281sVy2fR9\r\nyBdkhi0ZrLFrf+L7M6fCsIpsRDX9xJdMjAoxnKofOvWspDLh+lQWpm3P2jnn\r\nyqQqDn5hPJKkSj5qmuKE7vWkksy8xDrVzKlnMwT4Qe3q8OEeIJE+LjXsIfkt\r\nCrKyY+NHrwaGtU2kNHTWm/GnjawHxmDJOPA=\r\n=Wa/L\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.6_1664452627467_0.4706160306032947"
      },
      "_hasShrinkwrap": false
    },
    "4.4.1": {
      "name": "eslint-plugin-functional",
      "version": "4.4.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "prebuild": "rimraf lib",
        "build": "yarn compile",
        "prebuild-tests": "rimraf build",
        "build-tests": "yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.ts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "prelint": "yarn build && yarn link && yarn link 'eslint-plugin-functional'",
        "lint": "yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn build && yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.3.23",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "18.0.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.8.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "type-fest": "^3.0.0",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": "^3.4.1 || ^4.0.0"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "gitHead": "47542c81c336b36ab44f00f23232f932da344d73",
      "_id": "eslint-plugin-functional@4.4.1",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-YhSfHS52Si62Sn126g9wGx+XnWMoWhwEt6ctVXfcJj+xMUiggjOqUVMca7fuLNzX8jYiNBIeU1Y0teHGePZ3NA==",
        "shasum": "de967e2a307387281ff78466ab66967f17ff9e99",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-4.4.1.tgz",
        "fileCount": 6,
        "unpackedSize": 195613,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICPYmIk+vy5bCQFwhVB8Vv++gTv9AwZ+Q0AjyKctdqVtAiEA4vTGWR3wnP5oxj8M2NzLBGwpBHnrK3YrnEnfpOTax4Y="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjOsGAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpv2w/+LMx3guaIiqJ79wUW4WTNbx6XFlXZ1g7m8dtSQPBcZOGIZkCB\r\nUGCjehY7F77k3xs4opj6fbiYZHmbhmoPVQs1lTpTh2pRjoB+fif2hSNYITzz\r\nKiSqi1GrIrR6l+PR0i4arygYzlm54q8SdpdENFjqJbne6nuzOpylZzYNEVSI\r\nzD+AdpJPS3R6dU4Le3nWqTRLzK3EArCWnIRpqAhWtNnFrZ8SwMng6fwRfW/u\r\nzUwLi17SgFCMMrzrZJfK4ebsq2JUP2ywmZa+DCp+Sqcq+T2hyTsLxyPphhKK\r\nbsYF4nA/tZWIsvQ/ezduSEf+bQ6T60bvOu+WHwmeNfrPSxINjnneRLPAxY31\r\n8wVfG2ekY2aD7QcNBX2N4LHr0YPwdG1uLVQ1QZAcZEAIi1BPGbM8PTuMhdR7\r\ndAqQrTxTrAph1T0//bnI7AVIrLlOxD2VRPvnZEEdPVc542cYdIrUJb61MdSK\r\nYKY8NNzkFvNFf1bvTt5QJeFVqwHutbHxWbfGgNVOtDRZz7HIgfR66qycNH32\r\nhu25vWJKYEjr347Se63ODRrfM9sGS5cVn7Wdb+38oYlCuOGuwtik4PBAuYvU\r\npLYw/Si3bshcOU19RKJVt74ieLpjAGJWSQEv/YkhcSyBEPCzzJI9gDa2hYg4\r\nXDZK1KYOBQDfLdiNYcvGVvnz/NrcNPraX+Q=\r\n=mfRx\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_4.4.1_1664795007916_0.6396370148220147"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.7": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.7",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.0.2",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.4",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.24.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "35328237f852c309d87bbd48bfbdabf7c73e0832",
      "_id": "eslint-plugin-functional@5.0.0-beta.7",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-63Y80jZIZJ+ZuKz+F8eSB9UYs/guSkPi2m75s/VBE01BR9r0rL+ebWuizsoBXZdqvdpT3cZ333/+c0kCiM8SqA==",
        "shasum": "30fb0d140acdd29989ab6b50ffc84500268a4239",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.7.tgz",
        "fileCount": 6,
        "unpackedSize": 252553,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDpIiTNOFMAu2/1aBXYIyYuSAlDjhJRdFraFitw7f8n+AIhANyOleNS3uUNS9SF8M/dn34LxRVAVKib5iFe+wAAtZbz"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPGTKACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmooBw//ZjJFQAYrqpxwNN6IHzVUICTy0KGPHRk6M6OtSKZNyWyELTY6\r\ne/I4Qobv7kOWeiGQ6dnexpOFwquXulLyy3WQYPWmR6N0xnIRfNgWmsYZeVfJ\r\nm3hLaSF2rGjXry2HJVQ7EAjoo61ZIo/IyehXIqy4L9g2IN2YQ/6GxZ2gy7EB\r\ntAEaBbSdTirzKiKAZRLjrwvGAbdrU70e8DmtuVfxgUrJ9y6iwabDttEm1F1f\r\n3VW7R0rRqterVxcGvgiuU0rY2UXjhMO2Y61e4LX+DbBaIvkV4031KkZQTUKC\r\n/6Xkqy0OEPupijJenXxGUvyGUMH4ASGRHTU0uVK5TwwMS7dFg5ku1qQynH/d\r\np462rGx9t4OTUvPY+1anTNlnXiTYhbDxhsy/cibWWX2sg0Q2lBr8EvWj/Kst\r\nt8w7yH26W+G4KnAkwGbXGtlNHQOMxUVU4Bzuh5eX8mDX9XDNg8YyiD4zPNLI\r\nRHre77KkZARsl/c89iW0hceT3jDFKYp+fop0jts7PFFb2YS6crzIem29Dfdj\r\n35n5dq21vkTrHmv2Da3K4E0v8k6p+YLUHYGHOKYC5J3iSdb/g5/3mVs4t8er\r\nGKwZO4Tn73jaCDBloVidfGv0JspWnIjo+vSA80ojAjs7QZ4ToBFDw6lxcuvb\r\nPerQEn0HeUQ1qHm5cmoVpitIxqLBQ6xmlkg=\r\n=uNDK\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.7_1664902346026_0.377011061943052"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.8": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.8",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.0.2",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.4",
        "@rollup/plugin-commonjs": "^22.0.1",
        "@rollup/plugin-json": "^4.1.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.24.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.15.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.3",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "0517e3f9a0a1944baa00fe26f167f3e59bb477cd",
      "_id": "eslint-plugin-functional@5.0.0-beta.8",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-rejIbYjAxkiKF9guRrlfN3z+Zu8/27P323FqwG+988l8NoNEcOCKPRV3X05S+j8Pug3mQ7r4E3oMF/WY85UC3Q==",
        "shasum": "816a6afd4996f2854649e721a95b88a20ec49817",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.8.tgz",
        "fileCount": 6,
        "unpackedSize": 252218,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCgRC55pVrHQwQHIYtOAxZ2MKJ628/O2B/N3MTQz+0IUwIhAKJrEUipNU28SIyNhHiCjMqlgkmlEUX2WaDhBFe0drNT"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPTXyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpwVA//WZy+roP7eczJZiGxgTsCScMtmu2Z2ChNFhQb1mPs3ipm4h9i\r\nHbsOiqDU5rwRn8DiLulkkXDZgalGDqm9mTwAJudQ7RtZ+vF/mwuA5MiagH0L\r\nQJuBXegaxkPwEPLT/N8IO/6AnEIVWIys2FFRIm7pQ1C3oAF2NE8YMwNvwve3\r\nRDiLO9KrjHXVP5CY6OyK9By8ELEJ0UwHFztUH6CpWpxzxuoHBO5ulsBDPegs\r\nFJIv/hbIjo2jUCh/GotJq/L+VFFWTm7UE3aSnEjOz6NK2xvFrRfKM2PZC53j\r\nK25ec9KwJCltv16fld2RfYxoBLQiCaf2ApQC1uXvmVHxpiuho4w8Qg0eJzfZ\r\nyAhyzCKxxEXJt1pF/6VeZeZF+GdHLkd1IZfvMZsQTbjHDInld5y5X5OzGtYT\r\nSptDRO5df5teqS342vACfbq0DPwmDmEAKsLM1I7Gq8HwS43jrYmKAwAfbfPD\r\nszkK7FUJcWChbwQwGAZZr75em4oGtMMvYa3tMuvtUEqQYjlSHBTqMxXFlbNj\r\nfUlxk9bva43JFIrmqZ4pBLwWUWeLzV6UsyYwACX1JgSkztZSR9fA9z1Nd7YW\r\nM1kyvjvbjCVs0ww6ABJ4dEVCe5mZUen9tndLXt5DM2VBhlVV45a+XxmouybS\r\n5g56HHleG/wGZRDdLLYAgVB7w3MaviOfkMg=\r\n=dJAd\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.8_1664955890286_0.3779930338183559"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.9": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.9",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.10.2",
        "deepmerge-ts": "^4.0.3",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.1.0",
        "semver": "^7.3.7"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.0.0",
        "@commitlint/config-conventional": "^17.0.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.4",
        "@rollup/plugin-commonjs": "^23.0.0",
        "@rollup/plugin-json": "^5.0.0",
        "@rollup/plugin-node-resolve": "^14.0.0",
        "@rollup/plugin-typescript": "^8.3.0",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.1",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.11.7",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.10.2",
        "@typescript-eslint/parser": "^5.10.2",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.4",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.4.1",
        "dedent": "^0.7.0",
        "eslint": "^8.24.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-import-resolver-typescript": "^3.0.0",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.0",
        "eslint-plugin-import": "^2.25.4",
        "eslint-plugin-jsdoc": "^39.0.0",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.0.0",
        "eslint-plugin-promise": "^6.0.0",
        "eslint-plugin-sonarjs": "^0.16.0",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^43.0.0",
        "espree": "^9.3.0",
        "husky": "^8.0.0",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.0.0",
        "lint-staged": "^13.0.0",
        "markdownlint-cli": "^0.32.0",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.4.0",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.0.0",
        "tslib": "^2.3.1",
        "tsutils": "^3.21.0",
        "typescript": "^4.5.5",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.4",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "b651c5bf69946e5f49b37d7b099704511dfc39d3",
      "_id": "eslint-plugin-functional@5.0.0-beta.9",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-kyjSha09uOzwd5b6BEFlmBZ53OVwRcPeVClqg5t24tBl15Csq5AYai4XsuctikIY+ojcgq5clxqxNHTVH/xCtQ==",
        "shasum": "8bfe73103ac72d6967bfdf305ae6fcb7d284c6f4",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.9.tgz",
        "fileCount": 6,
        "unpackedSize": 253816,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFCvMttXvANW3XpO/2gXayUgI4aC4upEmKReNS41XptgAiEA/TLg5jun1ClMIVdvGY6JkGIoaUvA1/8Udis8aOvMjfA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjR4kQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmot2xAAhuSI29pYB+fYDYa/ZMxiJwz23I4y8sry2057Jhx7EjwSlESw\r\ngvAHG9s8j0naP6JlzHr7/2Z4Qw/TvIjaDPgB9YvY2KVDwgd2HiVQQx+hV4CB\r\nk1gOFwsEVcfZUHhKPobSJm4GlPCbwnW7k0HRhYlHYmJMBtJ/157jNU8/+4YS\r\nPfsSGwEApbP9JdvsfkY6ufDNDXzlvhq9H43zXuJxNo1ei/wJdCkRUl9zwd6z\r\nglxRIMXxaSusr89V1Tpba/COjsHtvPuZIFN4w/uCTjEoUO+L8ebPIoLYYLqK\r\nVrM8dwhmTNWdIanl2xSNu9/9/85nrI1+PY8dcQ6W0OAZoaWUhAPqpqoV6m3m\r\nRa7GLWfW7qI0H34ywNcZB3c/6PSNooIBWb1u6wajq9Pcx61TLAMUm09g3ghV\r\nFB1xVweD3vhxtafvbRMXPNtyHlKV1kYKW58HItlxxVtA85q+jnSwLMn2wBVb\r\nlRvf4RGbI88haUMQpwqfp2vqZnSpGLVV3pK776UkZpPbf1aVGUV6Q6MxJX2c\r\nDIeY7yrCFru9GusVuVGRDqdaWJGJKiOiL86bjXGA0l4OxIyCyaFxvSZpmsWU\r\nz695G+BlY+7IV/RSF3y/uCjm10q3r+FnnejGqydPosPnK71M590Qda+7mZVt\r\nzDLVwtoPdE3Xj98w6bCsXtRE//56aOOg7Lo=\r\n=3nm1\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.9_1665632528151_0.3860906991248372"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.10": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.10",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.40.0",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.0",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.1.2",
        "@commitlint/config-conventional": "^17.1.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.4",
        "@rollup/plugin-commonjs": "^23.0.0",
        "@rollup/plugin-json": "^5.0.0",
        "@rollup/plugin-node-resolve": "^15.0.0",
        "@rollup/plugin-typescript": "^9.0.1",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.6",
        "@types/estree": "^1.0.0",
        "@types/node": "^18.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.40.0",
        "@typescript-eslint/parser": "^5.40.0",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.5",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.12.0",
        "dedent": "^0.7.0",
        "eslint": "^8.25.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.5.1",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.6",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-jsdoc": "^39.3.6",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.2.1",
        "eslint-plugin-promise": "^6.1.0",
        "eslint-plugin-sonarjs": "^0.16.0",
        "eslint-plugin-tsdoc": "^0.2.17",
        "eslint-plugin-unicorn": "^44.0.2",
        "espree": "^9.4.0",
        "husky": "^8.0.1",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.2.0",
        "lint-staged": "^13.0.3",
        "markdownlint-cli": "^0.32.2",
        "nyc": "^15.1.0",
        "prettier": "^2.7.1",
        "rimraf": "^3.0.2",
        "rollup": "^3.2.1",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.9.1",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.1.0",
        "tslib": "^2.4.0",
        "tsutils": "^3.21.0",
        "typescript": "^4.8.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.4",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n### No Mutations Rules\n\n| Name                                                                             | Description                                    | <span title=\"No Mutations\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------------- | ---------------------------------------------- | :----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)                               | Disallow mutating objects and arrays           |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |              :green_circle:              |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                                               | Disallow mutable variables                     |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |                   |\n| [`prefer-immutable-types`](./docs/rules/prefer-immutable-types.md)               | Require types of data to be immutable          |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          | :thought_balloon: |\n| [`type-declaration-immutability`](./docs/rules/type-declaration-immutability.md) | Enforce type alias immutability using patterns |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Other Paradigms Rules\n\n| Name                                                         | Description                                                        | <span title=\"No Other Paradigms\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------ | ------------------------------------------------------------------ | :----------------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-classes`](./docs/rules/no-classes.md)                   | Disallow classes                                                   |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-mixed-types`](./docs/rules/no-mixed-types.md)           | Disallow types that contain both callable and non-callable members |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n| [`no-this-expressions`](./docs/rules/no-this-expressions.md) | Disallow `this` access                                             |                   :heavy_check_mark:                   |             :heavy_check_mark:              |                                                |                                          |          |                   |\n\n### No Statements Rules\n\n| Name                                                                     | Description                                                    | <span title=\"No Statements\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------------------ | -------------------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statements`](./docs/rules/no-conditional-statements.md) | Disallow conditional statements (`if` and `switch` statements) |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |                                          |          | :thought_balloon: |\n| [`no-expression-statements`](./docs/rules/no-expression-statements.md)   | Disallow expressions to cause side-effects                     |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          | :thought_balloon: |\n| [`no-loop-statements`](./docs/rules/no-loop-statements.md)               | Disallow imperative loops                                      |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                       | Disallow functions that return nothing                         |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n| Name                                                         | Description                                           | <span title=\"No Exceptions\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ------------------------------------------------------------ | ----------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)     | Disallow rejecting Promises                           |                                                   |                                             |                                                |                                          |          |              |\n| [`no-throw-statements`](./docs/rules/no-throw-statements.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n| [`no-try-statements`](./docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          |              |\n\n### Currying Rules\n\n| Name                                                             | Description                               | <span title=\"Currying\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |              :heavy_check_mark:              |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n\n### Stylistic Rules\n\n| Name                                                                       | Description                                        | <span title=\"Stylistic\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------- | -------------------------------------------------- | :-------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`prefer-property-signatures`](./docs/rules/prefer-property-signatures.md) | Enforce property signatures over method signatures |              :heavy_check_mark:               |                                             |                                                |                                          |          | :thought_balloon: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md)                             | Tacit/Point-Free style.                            |              :heavy_check_mark:               |                                             |                                                |                                          | :wrench: |   :blue_heart:    |\n\n### Key\n\n|       Symbol       | Meaning                                                                                                                          |\n| :----------------: | -------------------------------------------------------------------------------------------------------------------------------- |\n|   :fleur_de_lis:   | Ruleset: Current                                                                                                                 |\n|  :speak_no_evil:   | Ruleset: Strict                                                                                                                  |\n|   :see_no_evil:    | Ruleset: Recommended                                                                                                             |\n|   :hear_no_evil:   | Ruleset: Lite                                                                                                                    |\n| :heavy_check_mark: | Enabled as Error                                                                                                                 |\n|   :green_circle:   | Enabled as Error with Overrides                                                                                                  |\n|      :wrench:      | Fixable                                                                                                                          |\n| :thought_balloon:  | Only Available for TypeScript                                                                                                    |\n|    :blue_heart:    | <span title=\"Type Information will be used if available making the rule work in more cases.\">Works better with TypeScript</span> |\n\n<!--\n|    :warning:    | Enabled as Warning                |\n| :yellow_circle: | Enabled as Warning with Overrides |\n-->\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "84b7809c7cce9f91e26d33b25de6c2fdb6254b88",
      "_id": "eslint-plugin-functional@5.0.0-beta.10",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-4uitjPozRlxSekr/y1Uf//XDzquD9S8Ir4tG1yueI4wiIuq17gogizWxJmu1T3xggGR+FhqdIEPGmJ33xhiL/A==",
        "shasum": "426d95bb19eebfc0e176e682c017f821ec918576",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.10.tgz",
        "fileCount": 6,
        "unpackedSize": 256325,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC8yrWf+V6aMp5A/WF5LFGr1OPJCKoK90e83HlcMOm1zAIgCTOQAfrU93gCqEJ2Eep0SptHZkeLEe/0l7VS9RKifIY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjTNoRACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmps9A/9G+jAbCUkpy05bAaHtTxxStSZ8aDlWrYsoEl362WnDazNIIfR\r\nNZUm6na2UYEoHAuQBcjiznnBLrC0S2V8iP9RTmdOsEbqpea0r1CCTfjC2bZI\r\nfmzfmtInMP1s/wSInSp3gCgGeuReQ36kQ6fxeZARv4dhsbSNK0+w0J4kngZA\r\nBqcOhSrJP+HB07DH4zyAjGKayh2CP7ymVbC5eMiUJunKTFDS97/s67DTOm08\r\nSz6OKgncdN23AsRT3mYQFLBO4+nF0lDvr7AtdgfLo5Q/UNWSu3o3wH83CtqH\r\nWWs4m8uZlIZ67CVtGhE60Sb+NcK4Vb5yJgPlIh8jjPcGBa3S/xDKWvEEZF1T\r\noLNvIjlaXzv0otUL7PQNR5URi8tKUVZGvLXSd/eZ5ReN31tRyg4N93la+GO6\r\nttoEppxmUHJfJBlVPgu78AJWg5KEfsE64mRlrCdiaixJ4MKQa/kmuLdrDrUG\r\nauufZKFzjV27CNqG5qaQ7Ip50Mni4UM8qR04/rAbN1LfJHEklbE5l+lUlQgl\r\nGbysx3OWBFj6y856CdENP3K8+JG9nUsefAYa4szDbW4loe+CbX22lnZoL9jt\r\nmWuo4CURM1HMggdw6tOs69XxpJfmfDidCywx1PUbY/rYdSB2lkW6OTnDO+ab\r\nF84qluvFbs75Pffncjtb80TfZXTkFFEHmnY=\r\n=30pI\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.10_1665980945037_0.6646854901475399"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.11": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.11",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.40.0",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.0",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.1.2",
        "@commitlint/config-conventional": "^17.1.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.4",
        "@rollup/plugin-commonjs": "^23.0.0",
        "@rollup/plugin-json": "^5.0.0",
        "@rollup/plugin-node-resolve": "^15.0.0",
        "@rollup/plugin-typescript": "^9.0.1",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.6",
        "@types/estree": "^1.0.0",
        "@types/node": "^18.11.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.40.0",
        "@typescript-eslint/parser": "^5.40.0",
        "ava": "^4.3.3",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.5",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.12.0",
        "dedent": "^0.7.0",
        "eslint": "^8.25.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.5.1",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.6",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-jsdoc": "^39.3.6",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.2.1",
        "eslint-plugin-promise": "^6.1.0",
        "eslint-plugin-sonarjs": "^0.16.0",
        "eslint-plugin-tsdoc": "^0.2.17",
        "eslint-plugin-unicorn": "^44.0.2",
        "espree": "^9.4.0",
        "husky": "^8.0.1",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.2.0",
        "lint-staged": "^13.0.3",
        "markdownlint-cli": "^0.32.2",
        "nyc": "^15.1.0",
        "prettier": "^2.7.1",
        "rimraf": "^3.0.2",
        "rollup": "^3.2.1",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.9.1",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.1.0",
        "tslib": "^2.4.0",
        "tsutils": "^3.21.0",
        "typescript": "^4.8.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.4",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n### No Mutations Rules\n\n| Name                                                                             | Description                                    | <span title=\"No Mutations\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------------- | ---------------------------------------------- | :----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)                               | Disallow mutating objects and arrays           |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |              :green_circle:              |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                                               | Disallow mutable variables                     |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |                   |\n| [`prefer-immutable-types`](./docs/rules/prefer-immutable-types.md)               | Require types of data to be immutable          |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          | :thought_balloon: |\n| [`type-declaration-immutability`](./docs/rules/type-declaration-immutability.md) | Enforce type alias immutability using patterns |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Other Paradigms Rules\n\n| Name                                                         | Description                                                        | <span title=\"No Other Paradigms\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------ | ------------------------------------------------------------------ | :----------------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-classes`](./docs/rules/no-classes.md)                   | Disallow classes                                                   |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-mixed-types`](./docs/rules/no-mixed-types.md)           | Disallow types that contain both callable and non-callable members |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n| [`no-this-expressions`](./docs/rules/no-this-expressions.md) | Disallow `this` access                                             |                   :heavy_check_mark:                   |             :heavy_check_mark:              |                                                |                                          |          |                   |\n\n### No Statements Rules\n\n| Name                                                                     | Description                                                    | <span title=\"No Statements\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------------------ | -------------------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statements`](./docs/rules/no-conditional-statements.md) | Disallow conditional statements (`if` and `switch` statements) |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |                                          |          | :thought_balloon: |\n| [`no-expression-statements`](./docs/rules/no-expression-statements.md)   | Disallow expressions to cause side-effects                     |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          | :thought_balloon: |\n| [`no-loop-statements`](./docs/rules/no-loop-statements.md)               | Disallow imperative loops                                      |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                       | Disallow functions that return nothing                         |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n| Name                                                         | Description                                           | <span title=\"No Exceptions\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ------------------------------------------------------------ | ----------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)     | Disallow rejecting Promises                           |                                                   |                                             |                                                |                                          |          |              |\n| [`no-throw-statements`](./docs/rules/no-throw-statements.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n| [`no-try-statements`](./docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          |              |\n\n### Currying Rules\n\n| Name                                                             | Description                               | <span title=\"Currying\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |              :heavy_check_mark:              |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n\n### Stylistic Rules\n\n| Name                                                                       | Description                                        | <span title=\"Stylistic\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------- | -------------------------------------------------- | :-------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`prefer-property-signatures`](./docs/rules/prefer-property-signatures.md) | Enforce property signatures over method signatures |              :heavy_check_mark:               |                                             |                                                |                                          |          | :thought_balloon: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md)                             | Tacit/Point-Free style.                            |              :heavy_check_mark:               |                                             |                                                |                                          | :wrench: |   :blue_heart:    |\n\n### Key\n\n|       Symbol       | Meaning                                                                                                                          |\n| :----------------: | -------------------------------------------------------------------------------------------------------------------------------- |\n|   :fleur_de_lis:   | Ruleset: Current                                                                                                                 |\n|  :speak_no_evil:   | Ruleset: Strict                                                                                                                  |\n|   :see_no_evil:    | Ruleset: Recommended                                                                                                             |\n|   :hear_no_evil:   | Ruleset: Lite                                                                                                                    |\n| :heavy_check_mark: | Enabled as Error                                                                                                                 |\n|   :green_circle:   | Enabled as Error with Overrides                                                                                                  |\n|      :wrench:      | Fixable                                                                                                                          |\n| :thought_balloon:  | Only Available for TypeScript                                                                                                    |\n|    :blue_heart:    | <span title=\"Type Information will be used if available making the rule work in more cases.\">Works better with TypeScript</span> |\n\n<!--\n|    :warning:    | Enabled as Warning                |\n| :yellow_circle: | Enabled as Warning with Overrides |\n-->\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "84b7809c7cce9f91e26d33b25de6c2fdb6254b88",
      "_id": "eslint-plugin-functional@5.0.0-beta.11",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-syvYKAz4PDYlYODZtbmIkA+IUwQ5PNTLbz09wft7e0Lrmhi6T0+Tk2YJMPXejCjkQOIpzwZvdzDqJ9hp9Z1yjA==",
        "shasum": "a33a01d6d113e48a36260ab0465b9345aa90ea6d",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.11.tgz",
        "fileCount": 6,
        "unpackedSize": 256326,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCok58JnpiyXz5qoLPPD9uGXoZ630bVBtMCXY01HBZpPwIhAPu148zOivEtzd4DzybcN3mc5livtojBsTalQvyeKgAs"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjUTMPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqaZw//fu5qbQ0SIZjzIjKrVK6yGil/z0p9Qx3Ipx3U6tuXFLRTt6oq\r\nauLkBL8x9HMrOU1+dnOIMHDGKxg6CQ24c2GODJLVuOrxaa16sTw4WGDuk3YC\r\n+EjRDqX4Q+v6ZL2u19d4DZOcu/ctrInUo1hHWbj0iH1hUthuqy91B8w7iyyJ\r\n4AG2r72IH1GuIONbvoTy98UkV7iy3BsmawMIp98ti70a2w7ZVFwYrabyVGa6\r\nk0XCUwEH/oA6hf46UMSV6EpDjuE0HFdPmPaIeokD6OVjEI/Gqs7/C/TI9hEj\r\n9y4nw9RLcDfNGBGxVYyVp67Rfag3Z8u08FSOv3+rv+HLIx1wcY2dq9kXyNXY\r\n8sl8ABUK+VE16OVwKie8RYfxYGcu2p1f0wM2WkSxDjo20RxMTWLkCq53NLD8\r\n6FmbSplWTFQvCdRb++qT1jTe9VZO0OOC4pHHXYsiKLpjZsmRLT13wNY0w4E6\r\nbQdkVGpjVSrEBI+vo3kLTx4z/CLO55gFt3JBzU4WT3MlUCyU8QC7yQArKWAJ\r\n1rfmAZZpPm2+xACRVovOkbcEe530V0BpMFa74Uubd1O8bILcR7qCPCahgYcK\r\nUJj5d0htruLqvtkiTzQHBjxz1kGDgkhqM2JKb8dSMXUZ+MNra+0keXCt5RrL\r\nweUxlb2L/RPmLLNIlLJ6PdO8yFKFa5ByRgE=\r\n=VUmq\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.11_1666265871469_0.6706269172645212"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.12": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.12",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.40.1",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.2",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.1.2",
        "@commitlint/config-conventional": "^17.1.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.4",
        "@rollup/plugin-commonjs": "^23.0.0",
        "@rollup/plugin-json": "^5.0.0",
        "@rollup/plugin-node-resolve": "^15.0.0",
        "@rollup/plugin-typescript": "^9.0.1",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.7",
        "@types/estree": "^1.0.0",
        "@types/node": "^18.11.2",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.40.0",
        "@typescript-eslint/parser": "^5.40.0",
        "ava": "^5.0.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.5",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.12.0",
        "dedent": "^0.7.0",
        "eslint": "^8.25.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.5.2",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.6",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-jsdoc": "^39.3.14",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.2.1",
        "eslint-plugin-promise": "^6.1.1",
        "eslint-plugin-sonarjs": "^0.16.0",
        "eslint-plugin-tsdoc": "^0.2.17",
        "eslint-plugin-unicorn": "^44.0.2",
        "espree": "^9.4.0",
        "husky": "^8.0.1",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.2.0",
        "lint-staged": "^13.0.3",
        "markdownlint-cli": "^0.32.2",
        "nyc": "^15.1.0",
        "prettier": "^2.7.1",
        "rimraf": "^3.0.2",
        "rollup": "^3.2.3",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.9.1",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.1.0",
        "tslib": "^2.4.0",
        "tsutils": "^3.21.0",
        "typescript": "^4.8.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.4",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "784d16dde95025b564f2aea77931eef008e9e727",
      "_id": "eslint-plugin-functional@5.0.0-beta.12",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-AxMjQ2eXbi3FES85sDng5AkOBKiXHtovRaSaqXV0NFeVWGTFTmgDJoloocpbQrPIENrA/za4FQzpBiHFtF2adg==",
        "shasum": "4a60f768f3bfd623d3eff10be78fb11b7d3093c0",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.12.tgz",
        "fileCount": 6,
        "unpackedSize": 259183,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBwtmYFe5BFQxy7rr4OefdfOWvYoYbBBCvCZM69qFkpOAiAYJUox6qZiB0czIa6zo2XiC642lAH8aPdflUKeZi+pDg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjaohZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpenhAAixKIgjRbu7CgNPzLnieTHM/ctoUigJ7lqrCXAhrUgeLD8UKs\r\nfXvqgOAqCzA31GHeEiuslLbqgUfOUgh/HSn2/BOoFuydOeELMahXvuyjuqQS\r\n9d+Hh3ZVCnZZeZm6H1gdhL4g/3EFJb8CVpuN4Q93ktfVM0Z69p1LE3pvsOkx\r\nmBAT35sUfjok4zJsK6DYmMdKB3Aw8uXtqJcj6labtZKId6+0aEPknJ4HIk5b\r\nQk0jJqXULByONcguN9LSfZTmLi2dBVRhGVN9YAyJYngpyObI4AaqdjrnWH4K\r\nh80PQCiYZKpbzxE4htPfJupVXulrOF0edgk0dsJT5MNo4KyXK7yKlOmD/cdT\r\nJAnd+7V67OZ3GOBssH70bm39IX6C04z9WmeuHaBYNoyPTPqHUggH6Ql0MjTJ\r\na/ZGELHnuISSp0wLJZSgyjNhLOrovgDiRT6Oaeh36AFNJm2CJdRxJEWnJCit\r\nGgjndL+vpXLKNhlq+MQN31k8glge8PqD5/MuYVKhm7UOeGyxd2vvNfddw4ck\r\nxDVld+y2LZrw6mESoRxbkcTtVq/aMcuJt9QmF49WBDe4HRpcxT4ty2lYvuaP\r\nXfm4lTZmrJrOdyErpBWbvA5jNJOuHsy1tm8VvDTnFSNMppwQ5vxgNxeuBP47\r\nFp4T4/FAL3BMqbrgfPBdM5/ytJuxCxy5iHE=\r\n=HcAE\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.12_1667926105245_0.6262175321348067"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.13": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.13",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.40.1",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.2",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.1.2",
        "@commitlint/config-conventional": "^17.1.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.4",
        "@rollup/plugin-commonjs": "^23.0.0",
        "@rollup/plugin-json": "^5.0.0",
        "@rollup/plugin-node-resolve": "^15.0.0",
        "@rollup/plugin-typescript": "^9.0.1",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.7",
        "@types/estree": "^1.0.0",
        "@types/node": "^18.11.2",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.40.0",
        "@typescript-eslint/parser": "^5.40.0",
        "ava": "^5.0.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.5",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.12.0",
        "dedent": "^0.7.0",
        "eslint": "^8.25.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.5.2",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.6",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-jsdoc": "^39.3.14",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.2.1",
        "eslint-plugin-promise": "^6.1.1",
        "eslint-plugin-sonarjs": "^0.16.0",
        "eslint-plugin-tsdoc": "^0.2.17",
        "eslint-plugin-unicorn": "^44.0.2",
        "espree": "^9.4.0",
        "husky": "^8.0.1",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.2.0",
        "lint-staged": "^13.0.3",
        "markdownlint-cli": "^0.32.2",
        "nyc": "^15.1.0",
        "prettier": "^2.7.1",
        "rimraf": "^3.0.2",
        "rollup": "^3.2.3",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.9.1",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.1.0",
        "tslib": "^2.4.0",
        "tsutils": "^3.21.0",
        "typescript": "^4.8.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.4",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n### No Mutations Rules\n\n| Name                                                                             | Description                                    | <span title=\"No Mutations\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------------- | ---------------------------------------------- | :----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)                               | Disallow mutating objects and arrays           |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |              :green_circle:              |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                                               | Disallow mutable variables                     |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |                   |\n| [`prefer-immutable-types`](./docs/rules/prefer-immutable-types.md)               | Require types of data to be immutable          |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              | :wrench: | :thought_balloon: |\n| [`type-declaration-immutability`](./docs/rules/type-declaration-immutability.md) | Enforce type alias immutability using patterns |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Other Paradigms Rules\n\n| Name                                                         | Description                                                        | <span title=\"No Other Paradigms\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------ | ------------------------------------------------------------------ | :----------------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-classes`](./docs/rules/no-classes.md)                   | Disallow classes                                                   |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-mixed-types`](./docs/rules/no-mixed-types.md)           | Disallow types that contain both callable and non-callable members |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n| [`no-this-expressions`](./docs/rules/no-this-expressions.md) | Disallow `this` access                                             |                   :heavy_check_mark:                   |             :heavy_check_mark:              |                                                |                                          |          |                   |\n\n### No Statements Rules\n\n| Name                                                                     | Description                                                    | <span title=\"No Statements\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------------------ | -------------------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statements`](./docs/rules/no-conditional-statements.md) | Disallow conditional statements (`if` and `switch` statements) |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |                                          |          | :thought_balloon: |\n| [`no-expression-statements`](./docs/rules/no-expression-statements.md)   | Disallow expressions to cause side-effects                     |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          | :thought_balloon: |\n| [`no-loop-statements`](./docs/rules/no-loop-statements.md)               | Disallow imperative loops                                      |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                       | Disallow functions that return nothing                         |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n| Name                                                         | Description                                           | <span title=\"No Exceptions\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ------------------------------------------------------------ | ----------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)     | Disallow rejecting Promises                           |                                                   |                                             |                                                |                                          |          |              |\n| [`no-throw-statements`](./docs/rules/no-throw-statements.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n| [`no-try-statements`](./docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          |              |\n\n### Currying Rules\n\n| Name                                                             | Description                               | <span title=\"Currying\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |              :heavy_check_mark:              |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n\n### Stylistic Rules\n\n| Name                                                                       | Description                                        | <span title=\"Stylistic\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------- | -------------------------------------------------- | :-------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`prefer-property-signatures`](./docs/rules/prefer-property-signatures.md) | Enforce property signatures over method signatures |              :heavy_check_mark:               |                                             |                                                |                                          |          | :thought_balloon: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md)                             | Tacit/Point-Free style.                            |              :heavy_check_mark:               |                                             |                                                |                                          | :wrench: |   :blue_heart:    |\n\n### Key\n\n|       Symbol       | Meaning                                                                                                                          |\n| :----------------: | -------------------------------------------------------------------------------------------------------------------------------- |\n|   :fleur_de_lis:   | Ruleset: Current                                                                                                                 |\n|  :speak_no_evil:   | Ruleset: Strict                                                                                                                  |\n|   :see_no_evil:    | Ruleset: Recommended                                                                                                             |\n|   :hear_no_evil:   | Ruleset: Lite                                                                                                                    |\n| :heavy_check_mark: | Enabled as Error                                                                                                                 |\n|   :green_circle:   | Enabled as Error with Overrides                                                                                                  |\n|      :wrench:      | Fixable                                                                                                                          |\n| :thought_balloon:  | Only Available for TypeScript                                                                                                    |\n|    :blue_heart:    | <span title=\"Type Information will be used if available making the rule work in more cases.\">Works better with TypeScript</span> |\n\n<!--\n|    :warning:    | Enabled as Warning                |\n| :yellow_circle: | Enabled as Warning with Overrides |\n-->\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "aa662b654a859b23ea62fd615c6ed3e116faf604",
      "_id": "eslint-plugin-functional@5.0.0-beta.13",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-XlIjav0aIgzfos7E+aV/eg0wjjgFxkpzM+Kr3vSbrgsRX1vm7W0j6BEMbvlr3kJkeLu8JdYDjpNKanx93q1/Pg==",
        "shasum": "946b7e147abf739845e53c9d68741b9edd5baf76",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.13.tgz",
        "fileCount": 6,
        "unpackedSize": 265454,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE/Xvh+hfkJ5tOR58qCspocpJaCmiw3xo/GvZm0t/ThPAiEAorGVV3AtwP70XEHUiiCeX75Ep/i2sHgwhZZpozFu1yc="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjc4WWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpxhQ//fdXXlJgMGWN5ZqkQZdbXZPPHFiOwW9MAvWXeFRrHEZrJl8Dp\r\nexnL7tMGa4siXZZKXoVTiJY5NbSHWY633RkhOYybZzwzw5GFB2VXpCDjYasx\r\nzeMPR3KsKgBd4TWkXzr2W+Mkk2HrddCauzaQOmrOlkQ3GYwo2x3T8RNZU5wY\r\n4WrXLfrt8r+7vDDDpc2vlC0rPQZd81aUs2IKx5ClAE+mAmYQ6baz71rpXFBg\r\nrKgKTKcVLCKH5GLpZJrBn6bFhV6zGDDms/iXbmZOdbmkRkSddZNOTrOcjWCH\r\n9gioeqnShXSy6p82aD+fn6m8P7hjaUwueGTwhR39OBYA7TFNRHsar8cBJDse\r\neGaH3mmk2lX+AVQ/XA9akQAWboXrD+pT2zIm++ZohwYhsS/n2wYeRtClFb5H\r\nBNUT73sC9h+l0E1tJHPqdLa+NNnH2iMP76nzZIPlmjn/mFBXI3xH3kp74QMw\r\nyfPWRVgSaDzpvB0yJwE52k9qZnNh2LqrM6Hm8A595OWtTcqQYPFJpftFdtf4\r\nPWBhXMaRWC/8Gck1fqTylcEHX1Y6NahyFfPvJwrFk62UUYxHXorFIbtBZ0i0\r\nkzX5FSwe3fKvxvNKZMKg8fel9hw6yMlp+c9D11iTFbLM+RLf3NC48APNTAPa\r\nKlevn2NACjgjhNyefvemNKfImQgIdPvMjcE=\r\n=tVmY\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.13_1668515222671_0.7075264242535828"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.14": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.14",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.40.1",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.2",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.1.2",
        "@commitlint/config-conventional": "^17.1.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.4",
        "@rollup/plugin-commonjs": "^23.0.0",
        "@rollup/plugin-json": "^5.0.0",
        "@rollup/plugin-node-resolve": "^15.0.0",
        "@rollup/plugin-typescript": "^9.0.1",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.7",
        "@types/estree": "^1.0.0",
        "@types/node": "^18.11.2",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.40.0",
        "@typescript-eslint/parser": "^5.40.0",
        "ava": "^5.0.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.5",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.12.0",
        "dedent": "^0.7.0",
        "eslint": "^8.25.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.5.2",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.6",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-jsdoc": "^39.3.14",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.2.1",
        "eslint-plugin-promise": "^6.1.1",
        "eslint-plugin-sonarjs": "^0.16.0",
        "eslint-plugin-tsdoc": "^0.2.17",
        "eslint-plugin-unicorn": "^44.0.2",
        "espree": "^9.4.0",
        "husky": "^8.0.1",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.2.0",
        "lint-staged": "^13.0.3",
        "markdownlint-cli": "^0.32.2",
        "nyc": "^15.1.0",
        "prettier": "^2.7.1",
        "rimraf": "^3.0.2",
        "rollup": "^3.2.3",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.9.1",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.1.0",
        "tslib": "^2.4.0",
        "tsutils": "^3.21.0",
        "typescript": "^4.8.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.4",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n### No Mutations Rules\n\n| Name                                                                             | Description                                    | <span title=\"No Mutations\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------------- | ---------------------------------------------- | :----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)                               | Disallow mutating objects and arrays           |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |              :green_circle:              |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                                               | Disallow mutable variables                     |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |                   |\n| [`prefer-immutable-types`](./docs/rules/prefer-immutable-types.md)               | Require types of data to be immutable          |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              | :wrench: | :thought_balloon: |\n| [`type-declaration-immutability`](./docs/rules/type-declaration-immutability.md) | Enforce type alias immutability using patterns |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Other Paradigms Rules\n\n| Name                                                         | Description                                                        | <span title=\"No Other Paradigms\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------ | ------------------------------------------------------------------ | :----------------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-classes`](./docs/rules/no-classes.md)                   | Disallow classes                                                   |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-mixed-types`](./docs/rules/no-mixed-types.md)           | Disallow types that contain both callable and non-callable members |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n| [`no-this-expressions`](./docs/rules/no-this-expressions.md) | Disallow `this` access                                             |                   :heavy_check_mark:                   |             :heavy_check_mark:              |                                                |                                          |          |                   |\n\n### No Statements Rules\n\n| Name                                                                     | Description                                                    | <span title=\"No Statements\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------------------ | -------------------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statements`](./docs/rules/no-conditional-statements.md) | Disallow conditional statements (`if` and `switch` statements) |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |                                          |          | :thought_balloon: |\n| [`no-expression-statements`](./docs/rules/no-expression-statements.md)   | Disallow expressions to cause side-effects                     |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          | :thought_balloon: |\n| [`no-loop-statements`](./docs/rules/no-loop-statements.md)               | Disallow imperative loops                                      |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                       | Disallow functions that return nothing                         |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n| Name                                                         | Description                                           | <span title=\"No Exceptions\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ------------------------------------------------------------ | ----------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)     | Disallow rejecting Promises                           |                                                   |                                             |                                                |                                          |          |              |\n| [`no-throw-statements`](./docs/rules/no-throw-statements.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n| [`no-try-statements`](./docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          |              |\n\n### Currying Rules\n\n| Name                                                             | Description                               | <span title=\"Currying\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |              :heavy_check_mark:              |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n\n### Stylistic Rules\n\n| Name                                                                       | Description                                        | <span title=\"Stylistic\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------- | -------------------------------------------------- | :-------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`prefer-property-signatures`](./docs/rules/prefer-property-signatures.md) | Enforce property signatures over method signatures |              :heavy_check_mark:               |                                             |                                                |                                          |          | :thought_balloon: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md)                             | Tacit/Point-Free style.                            |              :heavy_check_mark:               |                                             |                                                |                                          | :wrench: |   :blue_heart:    |\n\n### Key\n\n|       Symbol       | Meaning                                                                                                                          |\n| :----------------: | -------------------------------------------------------------------------------------------------------------------------------- |\n|   :fleur_de_lis:   | Ruleset: Current                                                                                                                 |\n|  :speak_no_evil:   | Ruleset: Strict                                                                                                                  |\n|   :see_no_evil:    | Ruleset: Recommended                                                                                                             |\n|   :hear_no_evil:   | Ruleset: Lite                                                                                                                    |\n| :heavy_check_mark: | Enabled as Error                                                                                                                 |\n|   :green_circle:   | Enabled as Error with Overrides                                                                                                  |\n|      :wrench:      | Fixable                                                                                                                          |\n| :thought_balloon:  | Only Available for TypeScript                                                                                                    |\n|    :blue_heart:    | <span title=\"Type Information will be used if available making the rule work in more cases.\">Works better with TypeScript</span> |\n\n<!--\n|    :warning:    | Enabled as Warning                |\n| :yellow_circle: | Enabled as Warning with Overrides |\n-->\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "f33f9a824bc211225a4ade2ab1a8e7fcbb48a764",
      "_id": "eslint-plugin-functional@5.0.0-beta.14",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-oFcdl9/6wv1tm3+rC3W1rPgr1jrKK0w6l7qokTBJJD4JSFH0UAnR82mPUOk05vxpwpys5vEqWly0f7fgVXowyA==",
        "shasum": "2d71825bb6dba01e1b3fa8e8f929fae4096f3b16",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.14.tgz",
        "fileCount": 6,
        "unpackedSize": 267324,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCOuUVIn25L9eRqk+630Ncma+WQMKkuqhnqUQeL5O4EuwIgMR7IxXXqICTD1CUy149uM4II2Y4pQPDXgvVpSQpgb+E="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjdLz3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrW1xAAhFsIEAbC04uutH/2GUffgksWxotz0MKSfLMxGq+qM4HxH74i\r\nM9r+X/VJ3l39zOictiMBIkvG4CxGYhPHIxP8NOu1bnl+ciaZ/L76dJ12E8MH\r\nrXrrqM3ZqHbYX70V0bjy/Ruec5mZ0Ym17DI9ropwxCjYChNWSa/zFrfIQV3S\r\nLFDuSDF9TWqoyg8X4q1fo6nFs0LWd5lrXTgqqq7kE2b4iZSaSB0tw+MBrpkm\r\nouUUFN/LRcwjmW14/pCo1yx5fW84yhjQ7jI9aJdltgILfo8TWIRTUAU4a+BK\r\nxRzL/9DUPNVV8t0VJ/tLniSV+ZyOZ3igXUEfYt8IuS2kZB8v2+TNMEYEdE6J\r\nnXEaXFTAmVSmltupyyi1dR2hPNIzjc08qLqklswzFNHEXYHrO9d5S/ZA1xgb\r\nlgILKS9VPFgno+OcpbtUndClFUs34pHo0b8I0BTVitS/rxUAusrJkY7bmNj6\r\n+tcXvwu9vgFrFQH9+cerM6ReUkrKdJm0ZDmNaHMJmVVueEwHEu5cQmKbYjLy\r\nQb+Le4Gf9MUmKv4GM5pFFFp7RyZ2HxItyKMRhPEHsqoOHrS/IdbFN9etbY8P\r\nEkNdyiQncQv8pJZRuxTfehl9upbhAGLCb1Frk9A+5gSMrmUARmIRw7hepwNf\r\nBINMiovJvEednuV2esnJaY179gY3hewxnu8=\r\n=YgKT\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.14_1668594935317_0.32631697795798"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.15": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.15",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.40.1",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.2",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.1.2",
        "@commitlint/config-conventional": "^17.1.0",
        "@google/semantic-release-replace-plugin": "^1.1.0",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.5",
        "@rollup/plugin-commonjs": "^23.0.0",
        "@rollup/plugin-json": "^5.0.0",
        "@rollup/plugin-node-resolve": "^15.0.0",
        "@rollup/plugin-typescript": "^9.0.1",
        "@semantic-release/changelog": "^6.0.1",
        "@semantic-release/commit-analyzer": "^9.0.2",
        "@semantic-release/git": "^10.0.1",
        "@semantic-release/github": "^8.0.6",
        "@semantic-release/npm": "^9.0.1",
        "@semantic-release/release-notes-generator": "^10.0.3",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.7",
        "@types/estree": "^1.0.0",
        "@types/node": "^18.11.2",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.12",
        "@typescript-eslint/eslint-plugin": "^5.40.0",
        "@typescript-eslint/parser": "^5.40.0",
        "ava": "^5.0.0",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.2.5",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.12.0",
        "dedent": "^0.7.0",
        "eslint": "^8.25.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-import-resolver-typescript": "^3.5.2",
        "eslint-plugin-ava": "^13.2.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.6",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-jsdoc": "^39.3.14",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.2.1",
        "eslint-plugin-promise": "^6.1.1",
        "eslint-plugin-sonarjs": "^0.16.0",
        "eslint-plugin-unicorn": "^44.0.2",
        "espree": "^9.4.0",
        "husky": "^8.0.1",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.2.0",
        "lint-staged": "^13.0.3",
        "markdownlint-cli": "^0.32.2",
        "nyc": "^15.1.0",
        "prettier": "^2.7.1",
        "rimraf": "^3.0.2",
        "rollup": "^3.2.3",
        "rollup-plugin-auto-external": "^2.0.0",
        "semantic-release": "^19.0.5",
        "ts-node": "^10.9.1",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.1.0",
        "tslib": "^2.4.0",
        "tsutils": "^3.21.0",
        "typescript": "^4.8.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "tsutils": "^3.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "tsutils": {
          "optional": true
        },
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.4",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n### No Mutations Rules\n\n| Name                                                                             | Description                                    | <span title=\"No Mutations\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------------- | ---------------------------------------------- | :----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)                               | Disallow mutating objects and arrays           |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |              :green_circle:              |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                                               | Disallow mutable variables                     |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |                   |\n| [`prefer-immutable-types`](./docs/rules/prefer-immutable-types.md)               | Require types of data to be immutable          |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              | :wrench: | :thought_balloon: |\n| [`type-declaration-immutability`](./docs/rules/type-declaration-immutability.md) | Enforce type alias immutability using patterns |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Other Paradigms Rules\n\n| Name                                                         | Description                                                        | <span title=\"No Other Paradigms\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------ | ------------------------------------------------------------------ | :----------------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-classes`](./docs/rules/no-classes.md)                   | Disallow classes                                                   |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-mixed-types`](./docs/rules/no-mixed-types.md)           | Disallow types that contain both callable and non-callable members |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n| [`no-this-expressions`](./docs/rules/no-this-expressions.md) | Disallow `this` access                                             |                   :heavy_check_mark:                   |             :heavy_check_mark:              |                                                |                                          |          |                   |\n\n### No Statements Rules\n\n| Name                                                                     | Description                                                    | <span title=\"No Statements\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------------------ | -------------------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statements`](./docs/rules/no-conditional-statements.md) | Disallow conditional statements (`if` and `switch` statements) |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |                                          |          | :thought_balloon: |\n| [`no-expression-statements`](./docs/rules/no-expression-statements.md)   | Disallow expressions to cause side-effects                     |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          | :thought_balloon: |\n| [`no-loop-statements`](./docs/rules/no-loop-statements.md)               | Disallow imperative loops                                      |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                       | Disallow functions that return nothing                         |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n| Name                                                         | Description                                           | <span title=\"No Exceptions\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ------------------------------------------------------------ | ----------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)     | Disallow rejecting Promises                           |                                                   |                                             |                                                |                                          |          |              |\n| [`no-throw-statements`](./docs/rules/no-throw-statements.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n| [`no-try-statements`](./docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          |              |\n\n### Currying Rules\n\n| Name                                                             | Description                               | <span title=\"Currying\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |              :heavy_check_mark:              |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n\n### Stylistic Rules\n\n| Name                                                                       | Description                                                             | <span title=\"Stylistic\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------- | ----------------------------------------------------------------------- | :-------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`prefer-property-signatures`](./docs/rules/prefer-property-signatures.md) | Enforce property signatures over method signatures                      |              :heavy_check_mark:               |                                             |                                                |                                          |          | :thought_balloon: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md)                             | Tacit/Point-Free style.                                                 |              :heavy_check_mark:               |                                             |                                                |                                          | :wrench: |   :blue_heart:    |\n| [`readonly-type`](./docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>`. |              :heavy_check_mark:               |                                             |                                                |                                          | :wrench: | :thought_balloon: |\n\n### Key\n\n|       Symbol       | Meaning                                                                                                                          |\n| :----------------: | -------------------------------------------------------------------------------------------------------------------------------- |\n|   :fleur_de_lis:   | Ruleset: Current                                                                                                                 |\n|  :speak_no_evil:   | Ruleset: Strict                                                                                                                  |\n|   :see_no_evil:    | Ruleset: Recommended                                                                                                             |\n|   :hear_no_evil:   | Ruleset: Lite                                                                                                                    |\n| :heavy_check_mark: | Enabled as Error                                                                                                                 |\n|   :green_circle:   | Enabled as Error with Overrides                                                                                                  |\n|      :wrench:      | Fixable                                                                                                                          |\n| :thought_balloon:  | Only Available for TypeScript                                                                                                    |\n|    :blue_heart:    | <span title=\"Type Information will be used if available making the rule work in more cases.\">Works better with TypeScript</span> |\n\n<!--\n|    :warning:    | Enabled as Warning                |\n| :yellow_circle: | Enabled as Warning with Overrides |\n-->\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "dd9c732f988739a37eade005f5e469b704fd5961",
      "_id": "eslint-plugin-functional@5.0.0-beta.15",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-qIswX0wz/bkCeTq2jBEjm2EwXqGUrA//lJpZkjI0urqRsHoC08BTINbmL0nQf7BOWqoKa8M9Mk/Dp3MR7zVnuQ==",
        "shasum": "1e7171e2170301c0d2ead416bfeda840ca2fd13b",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.15.tgz",
        "fileCount": 6,
        "unpackedSize": 277680,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB+JGI0hEt6kjGyz5a/ih2R8Of9D3LmOJxzT+9p6AaGMAiEAyXpjxSGdGCdEVqLv/kfgj3KxV7QI3aZrPQoKnTWAQAI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjgdC7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr6Og/+KFQgqrffo72KbVhHcGRMFLWErx4kfhfJrPeO5wcUSYCwGbvf\r\nOVWUT3bCIc9aqtmJfbDoJd2YlilBNviF8o54/nxkFEDK04hZnOvVfm72e3+3\r\nckwfNNI/NO8kfKdy/W6sR+kG9ZxI19bJDYfESa1EWTsBwIWRVjTWB9Jot2WU\r\n0Bxu3wRK+Frcp+a13ygDZM4qud1ZJ6mgN9Rb8fa6PV4hF+3dv/3C/avH7qa+\r\n1pllXaUpNhcvEC4hbwuu3/GuX6Njxc3J5U/+zHE2J/E1Emhcq61g3FfQ54b7\r\nUPZMQsVDCVAA18hjkAgoZ+0Ou6P99SJ7qWnqfT8Rfx21zo+gGM9Amxpo4d1+\r\nshxAn4/fNyIR6U0iZpo+JegM4CgK+NT1MsDRNDdFHgC5e7SWoAGk+jK3XUwW\r\nknNrDCdt2uP0FUwRUgrxsYRmQQoWZdSoNh1oNCjaSFiTi0Syq+kVWGPSY4k8\r\nul8VWi2r2dut1QxF325obiiovdCDVBIAjJyV8lFrHCSjxCNdeeXelN2xy/8G\r\nJKcmOwXV3L4O8svN+dIT/BXFTnOgEwSiQ3JOkYLPTu3MtO6KXOpt7ir36JwJ\r\nSVGkHen6jxQPxwp2sBj8vS+e4ybUu1dxZmwT/wZ/u0T6PRGZ3UGGBNWb0n9N\r\nWcXXVG4yrTGI5YG8+tX2aqpOMoSd70ctCfE=\r\n=mg2f\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.15_1669451963334_0.711376668872647"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.16": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0-beta.16",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "license": "MIT",
      "author": {
        "name": "Jonas Kello"
      },
      "contributors": [
        {
          "name": "Rebecca Stevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile",
        "build-tests": "rimraf build && yarn compile-tests",
        "check-format": "prettier --list-different \"./**/*.{md,ts}\"",
        "check-spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "format": "prettier --write \"./**/*.{md,ts}\"",
        "lint": "yarn build && yarn lint-js && yarn lint-md",
        "lint-js": "eslint .",
        "lint-md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.49.0",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.3",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "^3.0.1",
        "@commitlint/cli": "^17.4.2",
        "@commitlint/config-conventional": "^17.4.2",
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@rebeccastevens/eslint-config": "1.4.6",
        "@rollup/plugin-commonjs": "^24.0.1",
        "@rollup/plugin-json": "^6.0.0",
        "@rollup/plugin-node-resolve": "^15.0.1",
        "@rollup/plugin-typescript": "^11.0.0",
        "@types/dedent": "^0.7.0",
        "@types/eslint": "^8.4.10",
        "@types/estree": "^1.0.0",
        "@types/node": "^16.10.0",
        "@types/rollup-plugin-auto-external": "^2.0.2",
        "@types/semver": "^7.3.13",
        "@typescript-eslint/eslint-plugin": "^5.49.0",
        "@typescript-eslint/parser": "^5.49.0",
        "ava": "^5.1.1",
        "babel-eslint": "^10.1.0",
        "chalk": "^4.1.2",
        "codecov": "^3.8.2",
        "commitizen": "^4.3.0",
        "conventional-commit-types": "^3.0.0",
        "cross-env": "^7.0.3",
        "cspell": "^6.19.2",
        "dedent": "^0.7.0",
        "eslint": "^8.32.0",
        "eslint-ava-rule-tester": "^4.0.0",
        "eslint-config-prettier": "^8.6.0",
        "eslint-import-resolver-typescript": "^3.5.3",
        "eslint-plugin-ava": "^14.0.0",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-eslint-plugin": "^5.0.8",
        "eslint-plugin-import": "^2.27.5",
        "eslint-plugin-jsdoc": "^39.6.8",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-node": "^11.1.0",
        "eslint-plugin-optimize-regex": "^1.2.1",
        "eslint-plugin-prettier": "^4.2.1",
        "eslint-plugin-promise": "^6.1.1",
        "eslint-plugin-sonarjs": "^0.18.0",
        "eslint-plugin-unicorn": "^45.0.2",
        "espree": "^9.4.1",
        "husky": "^8.0.3",
        "json-schema": "^0.4.0",
        "jsonc-parser": "^3.2.0",
        "lint-staged": "^13.1.0",
        "markdownlint-cli": "^0.33.0",
        "nyc": "^15.1.0",
        "prettier": "^2.8.3",
        "rimraf": "^4.1.2",
        "rollup": "^3.10.1",
        "rollup-plugin-auto-external": "^2.0.0",
        "ts-node": "^10.9.1",
        "tsc-prog": "^2.2.1",
        "tsconfig-paths": "^4.1.2",
        "tslib": "^2.4.1",
        "typescript": "^4.9.4",
        "word-wrap": "^1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.2.4",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![CI](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n### No Mutations Rules\n\n| Name                                                                             | Description                                    | <span title=\"No Mutations\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------------- | ---------------------------------------------- | :----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`immutable-data`](./docs/rules/immutable-data.md)                               | Disallow mutating objects and arrays           |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |              :green_circle:              |          |   :blue_heart:    |\n| [`no-let`](./docs/rules/no-let.md)                                               | Disallow mutable variables                     |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |                   |\n| [`prefer-immutable-types`](./docs/rules/prefer-immutable-types.md)               | Require types of data to be immutable          |                :heavy_check_mark:                |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              | :wrench: | :thought_balloon: |\n| [`type-declaration-immutability`](./docs/rules/type-declaration-immutability.md) | Enforce type alias immutability using patterns |                :heavy_check_mark:                |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            | :wrench: | :thought_balloon: |\n\n### No Other Paradigms Rules\n\n| Name                                                         | Description                                                        | <span title=\"No Other Paradigms\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------ | ------------------------------------------------------------------ | :----------------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-classes`](./docs/rules/no-classes.md)                   | Disallow classes                                                   |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-mixed-types`](./docs/rules/no-mixed-types.md)           | Disallow types that contain both callable and non-callable members |                   :heavy_check_mark:                   |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n| [`no-this-expressions`](./docs/rules/no-this-expressions.md) | Disallow `this` access                                             |                   :heavy_check_mark:                   |             :heavy_check_mark:              |                                                |                                          |          |                   |\n\n### No Statements Rules\n\n| Name                                                                     | Description                                                    | <span title=\"No Statements\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| ------------------------------------------------------------------------ | -------------------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`no-conditional-statements`](./docs/rules/no-conditional-statements.md) | Disallow conditional statements (`if` and `switch` statements) |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |                                          |          | :thought_balloon: |\n| [`no-expression-statements`](./docs/rules/no-expression-statements.md)   | Disallow expressions to cause side-effects                     |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          | :thought_balloon: |\n| [`no-loop-statements`](./docs/rules/no-loop-statements.md)               | Disallow imperative loops                                      |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          |                   |\n| [`no-return-void`](./docs/rules/no-return-void.md)                       | Disallow functions that return nothing                         |                :heavy_check_mark:                 |             :heavy_check_mark:              |               :heavy_check_mark:               |            :heavy_check_mark:            |          | :thought_balloon: |\n\n### No Exceptions Rules\n\n| Name                                                         | Description                                           | <span title=\"No Exceptions\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ------------------------------------------------------------ | ----------------------------------------------------- | :-----------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`no-promise-reject`](./docs/rules/no-promise-reject.md)     | Disallow rejecting Promises                           |                                                   |                                             |                                                |                                          |          |              |\n| [`no-throw-statements`](./docs/rules/no-throw-statements.md) | Disallow throwing exceptions                          |                :heavy_check_mark:                 |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n| [`no-try-statements`](./docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns |                :heavy_check_mark:                 |             :heavy_check_mark:              |                                                |                                          |          |              |\n\n### Currying Rules\n\n| Name                                                             | Description                               | <span title=\"Currying\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: | :blue_heart: |\n| ---------------------------------------------------------------- | ----------------------------------------- | :------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :----------: |\n| [`functional-parameters`](./docs/rules/functional-parameters.md) | Functions must have functional parameters |              :heavy_check_mark:              |             :heavy_check_mark:              |                 :green_circle:                 |              :green_circle:              |          |              |\n\n### Stylistic Rules\n\n| Name                                                                       | Description                                                             | <span title=\"Stylistic\">:fleur_de_lis:</span> | <span title=\"Strict\">:speak_no_evil:</span> | <span title=\"Recommended\">:see_no_evil:</span> | <span title=\"Lite\">:hear_no_evil:</span> | :wrench: |   :blue_heart:    |\n| -------------------------------------------------------------------------- | ----------------------------------------------------------------------- | :-------------------------------------------: | :-----------------------------------------: | :--------------------------------------------: | :--------------------------------------: | :------: | :---------------: |\n| [`prefer-property-signatures`](./docs/rules/prefer-property-signatures.md) | Enforce property signatures over method signatures                      |              :heavy_check_mark:               |                                             |                                                |                                          |          | :thought_balloon: |\n| [`prefer-tacit`](./docs/rules/prefer-tacit.md)                             | Tacit/Point-Free style.                                                 |              :heavy_check_mark:               |                                             |                                                |                                          | :wrench: |   :blue_heart:    |\n| [`readonly-type`](./docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>`. |              :heavy_check_mark:               |                                             |                                                |                                          | :wrench: | :thought_balloon: |\n\n### Key\n\n|       Symbol       | Meaning                                                                                                                          |\n| :----------------: | -------------------------------------------------------------------------------------------------------------------------------- |\n|   :fleur_de_lis:   | Ruleset: Current                                                                                                                 |\n|  :speak_no_evil:   | Ruleset: Strict                                                                                                                  |\n|   :see_no_evil:    | Ruleset: Recommended                                                                                                             |\n|   :hear_no_evil:   | Ruleset: Lite                                                                                                                    |\n| :heavy_check_mark: | Enabled as Error                                                                                                                 |\n|   :green_circle:   | Enabled as Error with Overrides                                                                                                  |\n|      :wrench:      | Fixable                                                                                                                          |\n| :thought_balloon:  | Only Available for TypeScript                                                                                                    |\n|    :blue_heart:    | <span title=\"Type Information will be used if available making the rule work in more cases.\">Works better with TypeScript</span> |\n\n<!--\n|    :warning:    | Enabled as Warning                |\n| :yellow_circle: | Enabled as Warning with Overrides |\n-->\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "10dbfd3f2235e0556acb44d6a59e3def0a8276e7",
      "_id": "eslint-plugin-functional@5.0.0-beta.16",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-46AH0d7cUepj77Rqbu5f3N7uce1dSioHbVupGUvpksVPuF4O1QHpRB43RWvl2U7F92ZPc26svhUMdkBdXzGC2A==",
        "shasum": "7599ba471970e803815af65480e971d5c10a06fd",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0-beta.16.tgz",
        "fileCount": 6,
        "unpackedSize": 282328,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDjN0y8XQuB9txjpuvDd9uGEr9h64o6aem3oQ9gjnVQVQIhAL1PHLHIuBHu3HipKuajkl8PNiYE9oAwBUiEq0XDRT2m"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0hJlACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpYsg/+NOpUiL3DmfBYooMJ515ERAS34mZKQPlQeRU3nwRC0FL57Gu9\r\nVDegSvR4Iwk9hpMtPTYmDa1wFtCbe69h2q1ur0RIURgwndqeTqUqmfBif8Zd\r\nB22540uOOYqvd/JNxsTEqW3F4ssz2N9Wsg/QfNAeuVgusOzIfgb9kqklZvVN\r\noHqjWi/Rq27hnWlTkRX19oGN4A4r65NRri0qK73+f19Scyc7sms0ovSIlfmT\r\n5dSIqv3oGKGMXrje5Goa1PS6mfrlC4eZ70IkRE40lRVtiiUgFpXPG7QYCXUk\r\nm1q1AX84nQVdc3MiOMiSP8gzK9fBKvDzsoFNXWw9Zde1xlkXhiGDVIr+KwKx\r\nG9rOWDkTXto8DCE0lZM0BI0INw3cbu6dp7OSHmLq5W5fP7c/b7UUaf+lgKRT\r\nOCnmXIO/kQLyw/Wz/PhAmVcW9D9aIOiZQoAayex8xCJ8bIUBJWnRTg/Vh83G\r\nYJ4rCb+Emj3NnmGTSQdwLJeAeN2yJyXLpD04KO8abSUbAaVmM2zLTaEwoitz\r\nDs6TfzVLFG+6yajzVtcK+wor/GxTN461rYjUIIEk8XLZakbFDTEsKLseNF9E\r\nlFOEBTHfo7EteqSi4a2+/TaOcLm/LFw8zTlVf46oNZS0mnz2/ie/bjN8NyFt\r\n9Y7QMu4Q55euDu32Uu1UqOubEi/1GlrhldY=\r\n=g+j+\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0-beta.16_1674711652876_0.2554340346067363"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0": {
      "name": "eslint-plugin-functional",
      "version": "5.0.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile && yarn build:docs",
        "build-tests": "rimraf build && yarn compile-tests",
        "build:docs": "eslint-doc-generator",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "lint": "yarn build && yarn lint:js && yarn lint:md && yarn lint:eslint-docs && yarn lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.49.0",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.3",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "3.0.1",
        "@commitlint/cli": "17.4.2",
        "@commitlint/config-conventional": "17.4.2",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "1.4.6",
        "@rollup/plugin-commonjs": "24.0.1",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-node-resolve": "15.0.1",
        "@rollup/plugin-typescript": "11.0.0",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.4.10",
        "@types/estree": "1.0.0",
        "@types/node": "16.10.0",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.3.13",
        "@typescript-eslint/eslint-plugin": "5.49.0",
        "@typescript-eslint/parser": "5.49.0",
        "ava": "5.1.1",
        "babel-eslint": "10.1.0",
        "chalk": "4.1.2",
        "codecov": "3.8.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cross-env": "7.0.3",
        "cspell": "6.19.2",
        "dedent": "0.7.0",
        "eslint": "8.32.0",
        "eslint-ava-rule-tester": "4.0.0",
        "eslint-config-prettier": "8.6.0",
        "eslint-doc-generator": "1.4.2",
        "eslint-import-resolver-typescript": "3.5.3",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.0.8",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "39.6.9",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "4.2.1",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.18.0",
        "eslint-plugin-unicorn": "45.0.2",
        "espree": "9.4.1",
        "husky": "8.0.3",
        "json-schema": "0.4.0",
        "jsonc-parser": "3.2.0",
        "lint-staged": "13.1.0",
        "markdownlint-cli": "0.33.0",
        "nyc": "15.1.0",
        "prettier": "2.8.3",
        "prettier-plugin-packagejson": "2.4.0",
        "rimraf": "4.1.2",
        "rollup": "3.11.0",
        "rollup-plugin-auto-external": "2.0.0",
        "ts-node": "10.9.1",
        "tsc-prog": "2.2.1",
        "tsconfig-paths": "4.1.2",
        "tslib": "2.5.0",
        "typescript": "4.9.4",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.3.1",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "342b86e601d4d9aeddf54c98ccbfcf4267ffb151",
      "_id": "eslint-plugin-functional@5.0.0",
      "_nodeVersion": "18.13.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-m+eOc59wv48azpnrQ1w/2QgxkudfQX15Hn3/5OvFVufDIc93Ar3C81pppL4TfTaqcJVD2KTYiOHHuwphp1Z66Q==",
        "shasum": "7caf899105a946bd45d0afe79c95de0df2290ea4",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.0.tgz",
        "fileCount": 6,
        "unpackedSize": 287365,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCID0XVlgFyblNLVg+GQIP+PdLdsCzUkMsNlx1oKeB7iN8AiAC7jQ+NSDixnq3a1Q0iKSBPGGj4DQ3JFuztTNuXoaEwA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj1hQyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrtYhAAiq1jU5LhsKhEMUxQNx3ePrUnhOaVJEH8W5Zewp+ewPK4WNMz\r\nw9UxavzX/YYGhcdpLHcvnVz5pIgHqMSjDw1Ur3+Bu79t1h9bJkaBuyyf6VpE\r\nU11dBnQm+wL0TpUppdWhR8jaUJawE37KMzKh6FoKGE35Soy/A1uRTMcQWw7M\r\nCrrsbvHaNCoCg51YkLNMcGSwTDfEtkqa8VkdAz9Y0uWSXcD6SmVqzMehtm7l\r\nKFEwGpTpVPaWX5JdgVI17iWdGf9QNddBk9rvOdsHvuJtuVNXkBM9GwA+Jssm\r\nASmg08ri53V4JqrzJSj42PPh1Nu3J2fuXRN3EdxRIq8tFLD6i2QUsFVe6CM5\r\n0tBFuYr+GKLGP/5NueG0zOiL7ZXwVlpDRL1/QBrSu+xgvWYq9/j3J7VpD+S1\r\nykKNNjhK5mYFFod2lFdhtGyF4IqYodpV0bHGVVd+goZ0OBkFdx2e8D2tnb0U\r\ny4m+JQronJ/bS/UkV/MQaDmHVtK84nEXHioG8Qe5Edc9bjdkO+wOZi4WlUTo\r\n9DSQo+kAIXXN/SwYl3I0dz7cjnaDBQiPZ+L4fhId1NPc27XgTP0PFGTctxrR\r\n4r4O5kkYgY1B5PN1Di/BmxAjZJRj8I1Mi+sy8DjUJ1T8pa6WIAdekCCehxxD\r\nGD1g0IPrEscHIm7XvVzoLp6pU1Yas0BJi6U=\r\n=RzV0\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.0_1674974257805_0.8088220007535145"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1": {
      "name": "eslint-plugin-functional",
      "version": "5.0.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile && yarn build:docs",
        "build-tests": "rimraf build && yarn compile-tests",
        "build:docs": "eslint-doc-generator",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "lint": "yarn build && yarn lint:js && yarn lint:md && yarn lint:eslint-docs && yarn lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.49.0",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.4",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "3.0.1",
        "@commitlint/cli": "17.4.2",
        "@commitlint/config-conventional": "17.4.2",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "1.5.0",
        "@rollup/plugin-commonjs": "24.0.1",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-node-resolve": "15.0.1",
        "@rollup/plugin-typescript": "11.0.0",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.4.10",
        "@types/estree": "1.0.0",
        "@types/node": "16.10.0",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.3.13",
        "@typescript-eslint/eslint-plugin": "5.50.0",
        "@typescript-eslint/parser": "5.50.0",
        "ava": "5.1.1",
        "babel-eslint": "10.1.0",
        "chalk": "4.1.2",
        "codecov": "3.8.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cross-env": "7.0.3",
        "cspell": "6.19.2",
        "dedent": "0.7.0",
        "eslint": "8.32.0",
        "eslint-ava-rule-tester": "4.0.0",
        "eslint-config-prettier": "8.6.0",
        "eslint-doc-generator": "1.4.2",
        "eslint-import-resolver-typescript": "3.5.3",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.0.8",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "39.6.9",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "4.2.1",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.18.0",
        "eslint-plugin-unicorn": "45.0.2",
        "espree": "9.4.1",
        "husky": "8.0.3",
        "json-schema": "0.4.0",
        "jsonc-parser": "3.2.0",
        "lint-staged": "13.1.0",
        "markdownlint-cli": "0.33.0",
        "nyc": "15.1.0",
        "prettier": "2.8.3",
        "prettier-plugin-packagejson": "2.4.0",
        "rimraf": "4.1.2",
        "rollup": "3.11.0",
        "rollup-plugin-auto-external": "2.0.0",
        "ts-node": "10.9.1",
        "tsc-prog": "2.2.1",
        "tsconfig-paths": "4.1.2",
        "tslib": "2.5.0",
        "typescript": "4.9.4",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.3.1",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "97c5ea4883bd9687679568accabded04ef69f9c3",
      "_id": "eslint-plugin-functional@5.0.1",
      "_nodeVersion": "18.13.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-zwl6daCIlr3ljGg+4mp9+LWoOzgzj3gY04XPa5w6xaEOgNnpmUiZMim0aTlKbuKwfpnpZ7SzpscrtA0/04+ugQ==",
        "shasum": "ba6b6afa7513142977443d6a9c7344f537a857fa",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.1.tgz",
        "fileCount": 6,
        "unpackedSize": 287768,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDQZvL1XQ1IFKrl3Pq8IfDxcklpuCgrJgW+X9PnaxcKbAIhAMk+8DI6RiU2qiRUrM1gcgqkXyTXY0PM/R9oVQAJVoh7"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj22fLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqphA//f5tlcdLS5bbVq+Kgf/0g7A6mVD4A7oz6wmcBjcDxemgUkc8P\r\n3eFQeBJCFpAPkacGnpsgMb22G1WB9j8nEGMVfFWD2pkCueMc4lHShdNc250X\r\nlcQwIg/2wHx24Ywvb1Fi5D9W5t3wzIuGqLryGP7R2yOo/YqcikcEf5X85Qsp\r\n4LzOQ7mc0//w0qabUURHieJ+auWKDa0UwDWkwi55M52+eO0PcKT8GEZ5LI6w\r\n/rNo1uj6LQdRUZE4FkYwqkygq0NR7VsfmgyccN0nsh1415/R4lV3vcDw4+ID\r\nUJBq5/UJxYxVxSxorGbGykNUTtaWeQkWMg69cz6fKzvoIMqKUu9Y0xRB853k\r\n1dWuhu/epUgbY7zcactGRqmk9Cz0kzb16ZifKW8B1S9C4eOUnBb0TqUlKUA/\r\nO+cUzmoRqestzReNI+8NWyuf73XVlxP21RmNhnsEcQ3VUgibXYIH8jTlhO+K\r\nFdUGm1hVoMTo0p37iPS9Fsb7WqmGG5uGPlOHOi/krEzGJPP1+XmLefQScTYt\r\nKOmI7XQvnsqrHYaIQMqC1S0yhncrniNt5LK/Bte4A0a2IrtcZ9+GL/A5+frb\r\n7cj8G8ktYdBKysaj8Y+4ipBNjm/ZETJVJ3zjiBuRVCdIaIneSWrRX7SEqfZf\r\n1166MtMJUe8Ei5lSC3xjtQVN+rfrS+EKYAs=\r\n=8VM5\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.1_1675323339825_0.5337428522419152"
      },
      "_hasShrinkwrap": false
    },
    "5.0.2": {
      "name": "eslint-plugin-functional",
      "version": "5.0.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile && yarn build:docs",
        "build-tests": "rimraf build && yarn compile-tests",
        "build:docs": "eslint-doc-generator",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "lint": "yarn build && yarn lint:js && yarn lint:md && yarn lint:eslint-docs && yarn lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^5.49.0",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.4",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "3.0.1",
        "@commitlint/cli": "17.4.2",
        "@commitlint/config-conventional": "17.4.2",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "1.5.0",
        "@rollup/plugin-commonjs": "24.0.1",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-node-resolve": "15.0.1",
        "@rollup/plugin-typescript": "11.0.0",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.4.10",
        "@types/estree": "1.0.0",
        "@types/node": "16.10.0",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.3.13",
        "@typescript-eslint/eslint-plugin": "5.50.0",
        "@typescript-eslint/parser": "5.50.0",
        "ava": "5.1.1",
        "babel-eslint": "10.1.0",
        "chalk": "4.1.2",
        "codecov": "3.8.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cross-env": "7.0.3",
        "cspell": "6.19.2",
        "dedent": "0.7.0",
        "eslint": "8.32.0",
        "eslint-ava-rule-tester": "4.0.0",
        "eslint-config-prettier": "8.6.0",
        "eslint-doc-generator": "1.4.2",
        "eslint-import-resolver-typescript": "3.5.3",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.0.8",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "39.6.9",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "4.2.1",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.18.0",
        "eslint-plugin-unicorn": "45.0.2",
        "espree": "9.4.1",
        "husky": "8.0.3",
        "json-schema": "0.4.0",
        "jsonc-parser": "3.2.0",
        "lint-staged": "13.1.0",
        "markdownlint-cli": "0.33.0",
        "nyc": "15.1.0",
        "prettier": "2.8.3",
        "prettier-plugin-packagejson": "2.4.0",
        "rimraf": "4.1.2",
        "rollup": "3.11.0",
        "rollup-plugin-auto-external": "2.0.0",
        "ts-node": "10.9.1",
        "tsc-prog": "2.2.1",
        "tsconfig-paths": "4.1.2",
        "tslib": "2.5.0",
        "typescript": "4.9.4",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.3.1",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "369e77269034b80e15af0de8822e7503d7c5960b",
      "_id": "eslint-plugin-functional@5.0.2",
      "_nodeVersion": "18.13.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-1WYI3Ke+phPeQUc4TndkJk5soPNBDl2AqiR6xgfFWewvTIzYQF/+9Np6nLwFbj4OBTiYQbZSRrbvu0KIjl7cDg==",
        "shasum": "fa710060d7b6fcc2e24149f6738f937804a6b304",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.2.tgz",
        "fileCount": 6,
        "unpackedSize": 289443,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD7+DIygtSLUPtDoW8SqCN6OGcYQdudTJjHOphkannV/QIhAKDHlU6Uo4bSOBPD7jKqlpuKr3mEeD6EDj+kA2gqG9Ao"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj3ujRACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrqKQ//fNdQ2OVs7ZXy45mm0t+NCzNlNSiCIkY+q+0y5+uSgWyUXwhS\r\ni1rR4JGrVM4wznsbm586gLiICSrvIMHidMHY7ce8FteSlYSSFwoJLeVUa3ix\r\npGpfnItchxKXOIw5/jdgTNU029MFS2+aAuQI74ckT4f1BOLhpaqC7KOWcmdz\r\nnLL3BbtHkvsCY4/XJyOEh0M4F/l1P0zYVdsYhlJjOH81LphPUzFV0cfDgabc\r\nL+dkk0tJ4lY30eteoJoAPVwy5zHFO++Kq3eJ1Hu+lsyuGove3k0VA7xZ/vqi\r\nRoBvvcxvvtAcpyQR5kXmjRgGsm0xksM6N7qSkkZrHl7lemQ+c82hEPIzayWO\r\nN7pSbZGecpH8NT6YQXrHCzrvcWO5Sqg/L1XyPWAsWBtez24G13kNU4ysqbn6\r\nB14Jkkz415ssqiti4r8pbc0bPpqYIxBuQF9ASwq/0995hTzjSL/XHpPQZY3v\r\n4m0MnjOmL6jPqb5AGs6fsDH6k/SLTXf3EAR1fEOVN1YpO2L9AAUtcaUNJ3kx\r\n2tZVAGo8BWhJjTTdqyTKOp+g6+836E4b7TlaNeQ+69+MVA1P246mbAnR0Ham\r\nkp5YoenG1IjUfDPjf/WTitmcIfkNm25wWf8TViseNz5ewNIB1DygEQbdjEob\r\nsAOavIGzi3yuiC8oO6jfWQMRmG6GKZsjtN4=\r\n=p2Sg\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.2_1675552976860_0.881464864421879"
      },
      "_hasShrinkwrap": false
    },
    "5.0.3": {
      "name": "eslint-plugin-functional",
      "version": "5.0.3",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile && yarn build:docs",
        "build-tests": "rimraf build && yarn compile-tests",
        "build:docs": "eslint-doc-generator",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "lint": "yarn build && yarn lint:js && yarn lint:md && yarn lint:eslint-docs && yarn lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/type-utils": "^5.50.0",
        "@typescript-eslint/utils": "^5.50.0",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.4",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "3.0.1",
        "@commitlint/cli": "17.4.2",
        "@commitlint/config-conventional": "17.4.2",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "1.5.0",
        "@rollup/plugin-commonjs": "24.0.1",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-node-resolve": "15.0.1",
        "@rollup/plugin-typescript": "11.0.0",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.4.10",
        "@types/estree": "1.0.0",
        "@types/node": "16.10.0",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.3.13",
        "@typescript-eslint/eslint-plugin": "5.50.0",
        "@typescript-eslint/parser": "5.50.0",
        "ava": "5.1.1",
        "babel-eslint": "10.1.0",
        "chalk": "4.1.2",
        "codecov": "3.8.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cross-env": "7.0.3",
        "cspell": "6.19.2",
        "dedent": "0.7.0",
        "eslint": "8.32.0",
        "eslint-ava-rule-tester": "4.0.0",
        "eslint-config-prettier": "8.6.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.3",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.0.8",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "39.6.9",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "4.2.1",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.18.0",
        "eslint-plugin-unicorn": "45.0.2",
        "espree": "9.4.1",
        "husky": "8.0.3",
        "json-schema": "0.4.0",
        "jsonc-parser": "3.2.0",
        "lint-staged": "13.1.0",
        "markdownlint-cli": "0.33.0",
        "nyc": "15.1.0",
        "prettier": "2.8.3",
        "prettier-plugin-packagejson": "2.4.0",
        "rimraf": "4.1.2",
        "rollup": "3.11.0",
        "rollup-plugin-auto-external": "2.0.0",
        "ts-node": "10.9.1",
        "tsc-prog": "2.2.1",
        "tsconfig-paths": "4.1.2",
        "tslib": "2.5.0",
        "typescript": "4.9.4",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.3.1",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "8efc7ddf083dd8670c53bbdbdf5cc2836e376233",
      "_id": "eslint-plugin-functional@5.0.3",
      "_nodeVersion": "18.13.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-NHQ5BpCmFU+YmkHb/AwfBo7+rtb4zEM6QOYQoF2RPEiYRAucYFHDnLWqZAzgkQUWu3LBvpgoeN8Y/VsmYihvJw==",
        "shasum": "f7d4d35dd1bc2ce486a97cbf8bfe5bf0f871fd64",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.3.tgz",
        "fileCount": 6,
        "unpackedSize": 289800,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD/o746kMrNQBKFiMvOAYDbamQ2IrnnS5OnTMUPIs33HwIhAMqMsmNU+tNGdgc/cOyILXzK+wQT5I/v10zrUeePrSXp"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj4EpJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrrRw//XAFYP8qlKyuNMVeEwBm9c4BgMpZA9M7a8qdYO3ReJHbyonS3\r\nxgNZalP2E3mIG0vcytNq4AZDSybEIAWOVkcFyAYa5YdU5hhoyuxUIyQCFzca\r\nRSHOC/3ZyHBXWqauk63qeYbSIb+yjYK1rGJts4nUBeg3FZuH0TtjRqBzO5Kk\r\nkqCNBp3ck17ZaHVRreY4JMQRj+MF0VxY8QtYE0KS5VjfoIcf0XYjT0+hWlD9\r\nTCPjYChT+EpADDQqkoJYhvoLYe7fRjAFBjMi0Lo7BGFZHDAxDywFxKpjEObZ\r\nZUB1OYAbmLDgqNZxckEomt4evNZJGxoL5uqN9MZdV5GIewpQ4sgE7hIKLhks\r\nFxeZrBcntDUcWaTY5Tc00g+OW5xvpP2/MTh4UmTa1PP4FTZXNk8Zy8Mcemo/\r\nLplPci5XG1Dg+DbYOsxMWFUDEmpDXq7J/rDnc6X6EwwmKaEDhCwIvdVSVpyY\r\n8mDjoQae9cFjz+Xk65euSQTJLR89JAoKDtI1tjmMfJr3k8J9iYE0oPv8GlOK\r\nQjcwwvASL2AXWDhiiZf6ZCX879nCA2i5K1ie+gtiacP6TPAbba9yNrhxLw2J\r\nmBGiGu2nAi09XRKIjs34NBa1ixXuW6PvZno9vc3CTeFX4CLwoiHpbFOSwJP9\r\nnPk1aYomE01xR9Carbnyyo4U+FbGR50DWIc=\r\n=ytbC\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.3_1675643465763_0.36429556573705923"
      },
      "_hasShrinkwrap": false
    },
    "5.0.4": {
      "name": "eslint-plugin-functional",
      "version": "5.0.4",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "rimraf lib && yarn compile && yarn build:docs",
        "build-tests": "rimraf build && yarn compile-tests",
        "build:docs": "eslint-doc-generator",
        "compile": "rollup -c",
        "compile-tests": "ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "cz": "git-cz",
        "lint": "yarn build && yarn lint:js && yarn lint:md && yarn lint:eslint-docs && yarn lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:spelling": "cspell --config=.cspell.json \"**/*.{md,ts}\"",
        "prepare": "yarn husky install",
        "test": "nyc ava",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "verify": "yarn lint && yarn build-tests && yarn test-compiled && rimraf build"
      },
      "resolutions": {
        "npm/chalk": "^4.1.2"
      },
      "dependencies": {
        "@typescript-eslint/type-utils": "^5.50.0",
        "@typescript-eslint/utils": "^5.50.0",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.4",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "3.0.1",
        "@commitlint/cli": "17.4.2",
        "@commitlint/config-conventional": "17.4.2",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "1.5.0",
        "@rollup/plugin-commonjs": "24.0.1",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-node-resolve": "15.0.1",
        "@rollup/plugin-typescript": "11.0.0",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.4.10",
        "@types/estree": "1.0.0",
        "@types/node": "16.10.0",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.3.13",
        "@typescript-eslint/eslint-plugin": "5.50.0",
        "@typescript-eslint/parser": "5.50.0",
        "ava": "5.1.1",
        "babel-eslint": "10.1.0",
        "chalk": "4.1.2",
        "codecov": "3.8.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cross-env": "7.0.3",
        "cspell": "6.19.2",
        "dedent": "0.7.0",
        "eslint": "8.32.0",
        "eslint-ava-rule-tester": "4.0.0",
        "eslint-config-prettier": "8.6.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.3",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.0.8",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "39.6.9",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "4.2.1",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.18.0",
        "eslint-plugin-unicorn": "45.0.2",
        "espree": "9.4.1",
        "husky": "8.0.3",
        "json-schema": "0.4.0",
        "jsonc-parser": "3.2.0",
        "lint-staged": "13.1.0",
        "markdownlint-cli": "0.33.0",
        "nyc": "15.1.0",
        "prettier": "2.8.3",
        "prettier-plugin-packagejson": "2.4.0",
        "rimraf": "4.1.2",
        "rollup": "3.11.0",
        "rollup-plugin-auto-external": "2.0.0",
        "ts-node": "10.9.1",
        "tsc-prog": "2.2.1",
        "tsconfig-paths": "4.1.2",
        "tslib": "2.5.0",
        "typescript": "4.9.4",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "yarn@3.3.1",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "52ba9806d1b3b7294e5c20e29e8485edb9eb6852",
      "_id": "eslint-plugin-functional@5.0.4",
      "_nodeVersion": "18.13.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-vV5jUAWfFQfe4OfE1YM99mUYX5AW0uL7tJa+rYIwwTRzeQc39j6SfvGdLUg2sXkTpmcfO3VwBLD7Ij5yjpRM8w==",
        "shasum": "768851d70371952d666855ef4fdb16d5e8414d15",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.4.tgz",
        "fileCount": 6,
        "unpackedSize": 289155,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEKX+ChJEu3hLG/WE8cdsjI6dGIuK9gQCKXzukafjJdCAiEArI2SYYRs/ZcjQkzefWrZLc2jxS6eD/wzwv7W3hlB5sU="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj4FLZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpEpA/9GHrtEIGw/N8Y3+5jozt5nc7zc1D/GJFO7rWuimvtV5syD0Ld\r\nbOtG0UAP7YEKCmQajl/MzJewpIHYy1FfhlVPufsLe2Akjup/89hmoLfvYeR6\r\nsYlQ4iFCXidNA16R69Tf3TcuOfqi7LBWyNDkPOCccG1GWME82ctCJzVRT6cb\r\nlahphOdKCLCmivV0H6mbhg91GAdgo+oOExRj4wLc3y/GE1tTJWO2ixTKfFSh\r\nQpbwY7DK7asrfUqFnwP2haszBZEqy1EkbUWRfIomT5ZGqILZw6BuVBmfH7Lh\r\n6k5MLM2fT0GrXL6nrSEBtbXvp71aSmER3A5EHo+zVpm/TeDz5x4gs29GY1B9\r\n7k3Yz3QsffAmG2AN83FwbDQpXavogdqjkectio0jmVGXH2v/6FvekRtTPF+x\r\ntGCshx6Wij3tb0TxWpljUmBHdY3UF1Lj5T1V8t+zk08JNvB5v0c8lR5caHZB\r\nJ1XTVtahYfnd+vf1vpHtKgLcIsehYNePjaqRuHdU6skePhmsBA+PyRdLVA06\r\nQB7xyMwf4l+/skyGZiySHCJvMBWdibGlHWevuo1EcT9tq0uyfDhPL0Rdodp+\r\n/ZJoqzoYr4/YOsw6VEFRDHEmlaGHkTd8CEDPX1VJwupC0w/i1O+fhiOJN1aS\r\nT6FC9J6HtgdsmsvEGs0LilLqDhDFM9aTu4I=\r\n=EEau\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.4_1675645656960_0.9437256461568708"
      },
      "_hasShrinkwrap": false
    },
    "5.0.5": {
      "name": "eslint-plugin-functional",
      "version": "5.0.5",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf build && ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "format": "prettier \"**/*\" --ignore-unknown",
        "format:write": "pnpm run format --write",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:knip": "knip --config knip.jsonc --production --exclude exports",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/type-utils": "^5.50.0",
        "@typescript-eslint/utils": "^5.50.0",
        "deepmerge-ts": "^4.2.2",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.4",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "3.0.1",
        "@babel/core": "^7.21.0",
        "@babel/eslint-parser": "^7.19.1",
        "@commitlint/cli": "17.4.4",
        "@commitlint/config-conventional": "17.4.4",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.0",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "1.5.2",
        "@rollup/plugin-commonjs": "24.0.1",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-node-resolve": "15.0.1",
        "@rollup/plugin-typescript": "11.0.0",
        "@semantic-release/changelog": "6.0.2",
        "@semantic-release/commit-analyzer": "9.0.2",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "8.0.7",
        "@semantic-release/npm": "9.0.2",
        "@semantic-release/release-notes-generator": "10.0.3",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.21.1",
        "@types/estree": "1.0.0",
        "@types/json-schema": "^7.0.11",
        "@types/node": "16.18.14",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.3.13",
        "@typescript-eslint/eslint-plugin": "5.54.1",
        "@typescript-eslint/parser": "5.54.1",
        "ava": "5.2.0",
        "chalk": "4.1.2",
        "codecov": "3.8.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.28.0",
        "dedent": "0.7.0",
        "eslint": "8.35.0",
        "eslint-ava-rule-tester": "4.0.0",
        "eslint-config-prettier": "8.7.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.3",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.0.8",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "40.0.1",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "4.2.1",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.18.0",
        "eslint-plugin-unicorn": "46.0.0",
        "espree": "9.4.1",
        "husky": "8.0.3",
        "json-schema": "0.4.0",
        "jsonc-parser": "3.2.0",
        "knip": "^1.14.1",
        "lint-staged": "13.1.2",
        "markdownlint-cli": "0.33.0",
        "nyc": "15.1.0",
        "prettier": "2.8.4",
        "prettier-plugin-packagejson": "2.4.3",
        "rimraf": "4.3.1",
        "rollup": "3.18.0",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "20.1.1",
        "ts-node": "10.9.1",
        "tsc-prog": "2.2.1",
        "tsconfig-paths": "4.1.2",
        "tslib": "2.5.0",
        "typescript": "4.9.5",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@7.29.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "df3f078d67ba8fa96ebf2b7dd67363b3d1e1db91",
      "_id": "eslint-plugin-functional@5.0.5",
      "_nodeVersion": "19.7.0",
      "_npmVersion": "9.5.0",
      "dist": {
        "integrity": "sha512-KUrONL/t9cByc+H/2xSUmyew/rJ7+ejLaqz3+y0dFkxNIBgyoeonB78THsozlRGsMr0gP+bLyWxyOREl6l6dkA==",
        "shasum": "348654c25f2a8229f50f7c02de1b808136050269",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.5.tgz",
        "fileCount": 5,
        "unpackedSize": 283473,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCN559ctyPRLowG6Zqbn6WVxfpIWH4WU1uqzxhc3aRYcwIhAPVubARwZOhXzPBFO6R/slsVcMZYkeeYdHTqR1DKKroA"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkBsnfACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp8YhAAnB15mA4WzLKtD2UIe33269gvQnUsrl4TzPyrJgFo7O2Oqg8d\r\ng2DF2sV/5GBqI8hRG7eH92TrdmOXdH1Iv0AZSYb4dfCS8bF8GWABqL6Oiqhh\r\nFosXrRf3ny8JXTLp3DN0bMJHgALCikteea/SM0G1Osra+Q1w0lgmBhCAE9bx\r\nG4Ov8716HxWBrvANQbXGQ+DkcKqzpjYZ5yM2ZZlOA17PXabLOHVRLgmnFofv\r\nLwjvLM4CRKrKieoOaqNfcZJLp1cHEwVS1I94IqWGGmGRpbgU+/doJ/7Gly5P\r\n1Or8STjqY2nFBkwfrBlUCpoWjB2pKg3gqEIgh3fXSdm8WEL2BC7wSwEh0hFe\r\nyVtEXCbN91B/cEfmAs1CGeCIXFeuPNHnd0eDbQg3CaBuOvzvjlHHlqqRVAS+\r\nr/kYv7o2PAZExX+qxgq0d8gfFv4igueKHzr3oUeXSbZPY6Z2g4j9pTNLJe/+\r\nJxr+mbTIjPrRUtpljVCt81UYQKSPXE/Kvccy+At5kVGgS+EwflANsU51OOKa\r\no+FQW96ZmN4JIi/vz3Jlqk4VgJc8nu8THdaoe0hQ5sje1BFsbdwcRfOjM38C\r\nd1MHwSlt4QgoLMenu25jUkEwsprK49uUHLjvXxAPVkikS8XGYixF25n8Rm36\r\noa8dGVwDmatdWD00//kb1fYyk6lEOq6aFjc=\r\n=7a6r\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.5_1678166494988_0.7345828840999984"
      },
      "_hasShrinkwrap": false
    },
    "5.0.6": {
      "name": "eslint-plugin-functional",
      "version": "5.0.6",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf build && ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "knip --config knip.jsonc --production --exclude exports",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/type-utils": "^5.50.0",
        "@typescript-eslint/utils": "^5.50.0",
        "deepmerge-ts": "^4.3.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.5",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "3.0.1",
        "@babel/core": "^7.21.0",
        "@babel/eslint-parser": "^7.19.1",
        "@commitlint/cli": "17.4.4",
        "@commitlint/config-conventional": "17.4.4",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.0",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "1.5.3",
        "@rollup/plugin-commonjs": "24.0.1",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-node-resolve": "15.0.1",
        "@rollup/plugin-typescript": "11.0.0",
        "@semantic-release/changelog": "6.0.2",
        "@semantic-release/commit-analyzer": "9.0.2",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "8.0.7",
        "@semantic-release/npm": "9.0.2",
        "@semantic-release/release-notes-generator": "10.0.3",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.21.1",
        "@types/estree": "1.0.0",
        "@types/json-schema": "^7.0.11",
        "@types/node": "16.18.14",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.3.13",
        "@typescript-eslint/eslint-plugin": "5.54.1",
        "@typescript-eslint/parser": "5.54.1",
        "ava": "5.2.0",
        "chalk": "4.1.2",
        "codecov": "3.8.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.28.0",
        "dedent": "0.7.0",
        "eslint": "8.35.0",
        "eslint-ava-rule-tester": "4.0.0",
        "eslint-config-prettier": "8.7.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.3",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.0.8",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "40.0.1",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "4.2.1",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.18.0",
        "eslint-plugin-unicorn": "46.0.0",
        "espree": "9.4.1",
        "husky": "8.0.3",
        "json-schema": "0.4.0",
        "jsonc-parser": "3.2.0",
        "knip": "^1.14.1",
        "lint-staged": "13.1.2",
        "markdownlint-cli": "0.33.0",
        "nyc": "15.1.0",
        "prettier": "2.8.4",
        "prettier-plugin-packagejson": "2.4.3",
        "rimraf": "4.3.1",
        "rollup": "3.18.0",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "20.1.1",
        "ts-node": "10.9.1",
        "tsc-prog": "2.2.1",
        "tsconfig-paths": "4.1.2",
        "tslib": "2.5.0",
        "typescript": "4.9.5",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@7.29.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "122bdbf403eaca1731c4b59f8a5766ec1231f91c",
      "_id": "eslint-plugin-functional@5.0.6",
      "_nodeVersion": "19.7.0",
      "_npmVersion": "9.5.0",
      "dist": {
        "integrity": "sha512-7/NzMapT2BwveBgSmxL9v14bRm00ZCZsOiAb6VtFNomVWFhxkmYLg3zsH5H+TA9Zm5COsgePUe1c5ABsuW8Akw==",
        "shasum": "52e81c72eb6fde147cef3d66fc21568d3fda01e8",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.6.tgz",
        "fileCount": 5,
        "unpackedSize": 283239,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD7biKomxEu1yvZDHq/Gfvuzo8Ji3DNAAlxXLdU7SZzdwIhAPLLVXsanrhhrDpCiZTlkEoaafpJmVvlakXlfaOouZby"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkC/BpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoafA/9HVsIINgstTPHXCojvEnM4UlD8tUwOaIjsedlTkc976VRGwE0\r\n/YuQP0mFBZDSdjmVjROLcJIxBcLwHnIwnVG6RLYWE5/6w8HqrvDCPpSFymQk\r\nhl13IhKCwbJKwm/XkzqK08MnCJIo70QoiW9c2/xtRVS8h3qb6HepCn7Zv0DO\r\nfMVJOG7HtCGaQXZnhMpWJlB6IgI23TXQQpPyFtyEEXpQjVlOUfjgtrWd2Hf2\r\nOBq14T8hjub1mwsgu1vAMtQvGOVXbv+XW4C34iUxHNT9yh5fcoBARNLdLLbI\r\n7vVKlykjqvHt5xw2eS8gt/ih2ZOQUKLJ4oo1WhUHqM/7O9moWwff1Rjd2Fk3\r\nc9E44fbV8o1y9JITVtYDlqZHfFLy2o4m5xzbFaETkAMiKpCWk8+kNrUiS3WT\r\nwp3y+NH61nD92+3WUbbjFnfj+Ws/xyPHqO3f01Te5MLIpAj9FcWVFjAcaRNG\r\nHDgd/uU/ScC9y5K262vl1fv0CKpPPM2s3j5MTf24Q5saAhJ/LWNDD9N2nkl+\r\nNOfFz0wj9pCy2CNxKXAJUTSZ9zz01s0B2O/wuanjESH+QWTGdATUqomG/3Fx\r\nFURq8i+GWeX8Rz0He6Nc8L1SLiMafD7LiD+ecOFFutWGxcymseBi4q0JvUvP\r\nvd3YKC8mOdZ/W1L++08gBVsFdU48sj8/NR8=\r\n=MKCN\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.6_1678504041371_0.7368970398608934"
      },
      "_hasShrinkwrap": false
    },
    "5.0.7": {
      "name": "eslint-plugin-functional",
      "version": "5.0.7",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf build && ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "knip --config knip.jsonc --production --exclude exports",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/type-utils": "^5.50.0",
        "@typescript-eslint/utils": "^5.50.0",
        "deepmerge-ts": "^5.0.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.5",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "4.0.0",
        "@babel/core": "7.21.3",
        "@babel/eslint-parser": "7.21.3",
        "@commitlint/cli": "17.4.4",
        "@commitlint/config-conventional": "17.4.4",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.0",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "1.5.3",
        "@rollup/plugin-commonjs": "24.0.1",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-node-resolve": "15.0.1",
        "@rollup/plugin-typescript": "11.0.0",
        "@semantic-release/changelog": "6.0.2",
        "@semantic-release/commit-analyzer": "9.0.2",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "8.0.7",
        "@semantic-release/npm": "9.0.2",
        "@semantic-release/release-notes-generator": "10.0.3",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.21.3",
        "@types/estree": "1.0.0",
        "@types/json-schema": "7.0.11",
        "@types/node": "16.18.16",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.3.13",
        "@typescript-eslint/eslint-plugin": "5.56.0",
        "@typescript-eslint/parser": "5.56.0",
        "ava": "5.2.0",
        "chalk": "4.1.2",
        "codecov": "3.8.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.30.2",
        "dedent": "0.7.0",
        "eslint": "8.36.0",
        "eslint-ava-rule-tester": "4.0.0",
        "eslint-config-prettier": "8.7.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.3",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.0.8",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "40.1.0",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "4.2.1",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.18.0",
        "eslint-plugin-unicorn": "46.0.0",
        "espree": "9.5.0",
        "husky": "8.0.3",
        "json-schema": "0.4.0",
        "jsonc-parser": "3.2.0",
        "knip": "1.16.0",
        "lint-staged": "13.2.0",
        "markdownlint-cli": "0.33.0",
        "nyc": "15.1.0",
        "prettier": "2.8.4",
        "prettier-plugin-packagejson": "2.4.3",
        "rimraf": "4.4.0",
        "rollup": "3.20.0",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "20.1.3",
        "ts-node": "10.9.1",
        "tsc-prog": "2.2.1",
        "tsconfig-paths": "4.1.2",
        "tslib": "2.5.0",
        "typescript": "5.0.2",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@7.30.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "44520f55210966460b0c21878a627ae209d9b5f1",
      "_id": "eslint-plugin-functional@5.0.7",
      "_nodeVersion": "19.8.1",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-NJqwvlGvpnjphScwArGAjCWnHWIE7RQfWvl0PYeBn8i9HVzrD8V3ZGt0DpghCzZrFW7B4V644OKB9ZN3SPofFA==",
        "shasum": "a87724c346d2c0791aa9549918fef9a649502c53",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.7.tgz",
        "fileCount": 5,
        "unpackedSize": 281983,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB6NXOqWr2XsNILc0Rf7H7IAAM54rdD0glvtpe07oykEAiB7gx5pwwPGBkjkhuUL9yelRLv1D3RRnR0Rg1oB5JSfVg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkGR7fACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoUug//RJWt5iKARRx7IuU+QfS2h9rjyHOkrVlcd5PcjhC8xWhKzs6L\r\nv3MUVnGibtJZsGStINRFHTqNfJyTn5eoCVzLvGeF4JDJMzRrfcapFFl2ujkH\r\npjzVH1RActMLIr1z8xEEt7X1QLvgUBUbVNJsut/i07/wEojMlHE+bDvr8XZt\r\n/9uOsGLDEA6A6KoGbdruiLMlh/3gugJ50SJ20xjdQ09E1mJD3Iu8uoxJR2tQ\r\nzuR5RABXiYhot+Brte+li6EHyrto1l0TRXDxkKFFmkMgJvw6pEH3jG1Yj2tY\r\nN/JwoJX0umMy4ZtgcIi0z1PS0j6dd9S4JJaOx5lzbAfbqyml0brnlv+NhL2P\r\nhtxOpdxxalz9xPTe/FsiM7ozNyQaLZTg/NdnbZIIebp1eV6E9riWq5AuD61I\r\npfeUWH6qNhPPoMua6vrFE8nXhzCAcUNCndGFqpYSqOVb6FIb1T/BqVewl6gl\r\nLbyTk7Tp+zDfE2ZnH8598QyH0HAL8Z0zjdsDwa6W+BJaExqR9tePQjQidrdL\r\nZ2SF5qNuQD+OAoCjx6+yMrSWlShpRXDfA2T7cPsN6WddKjfbd84ur/FOgmeQ\r\nzajRfj3Wy9QouMx/q4dGZ113NVt7LKsxgR27HDgBnpgjCYvK7ijMYbZkOpbE\r\n8l+wspSIoPypcpz1dPaedNGvPiuH/9Ogc7w=\r\n=pShM\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.7_1679367903139_0.028796626980916562"
      },
      "_hasShrinkwrap": false
    },
    "5.0.8": {
      "name": "eslint-plugin-functional",
      "version": "5.0.8",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf build && ts-node -P scripts/tsconfig.json scripts/compile-tests.mts",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/type-utils": "^5.50.0",
        "@typescript-eslint/utils": "^5.50.0",
        "deepmerge-ts": "^5.0.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^1.2.5",
        "semver": "^7.3.8"
      },
      "devDependencies": {
        "@ava/typescript": "4.0.0",
        "@babel/core": "7.21.4",
        "@babel/eslint-parser": "7.21.3",
        "@commitlint/cli": "17.5.1",
        "@commitlint/config-conventional": "17.4.4",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.0",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "1.6.7",
        "@rollup/plugin-commonjs": "24.0.1",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-node-resolve": "15.0.2",
        "@rollup/plugin-typescript": "11.1.0",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "9.0.2",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "8.0.7",
        "@semantic-release/npm": "10.0.3",
        "@semantic-release/release-notes-generator": "10.0.3",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.37.0",
        "@types/json-schema": "7.0.11",
        "@types/node": "16.18.23",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.3.13",
        "@typescript-eslint/eslint-plugin": "5.57.1",
        "@typescript-eslint/parser": "5.57.1",
        "ava": "5.2.0",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.1",
        "dedent": "0.7.0",
        "eslint": "8.38.0",
        "eslint-ava-rule-tester": "4.0.0",
        "eslint-config-prettier": "8.8.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.0.8",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "40.1.2",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "4.2.1",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "46.0.0",
        "espree": "9.5.1",
        "husky": "8.0.3",
        "json-schema": "0.4.0",
        "jsonc-parser": "3.2.0",
        "knip": "2.9.0",
        "lint-staged": "13.2.1",
        "markdownlint-cli": "0.33.0",
        "nyc": "15.1.0",
        "prettier": "2.8.7",
        "prettier-plugin-packagejson": "2.4.3",
        "rimraf": "5.0.0",
        "rollup": "3.20.2",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.1",
        "ts-node": "10.9.1",
        "tsc-prog": "2.2.1",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.5.0",
        "typescript": "5.0.4",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.0.2"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@7.32.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "ab6f9f74dd85a1972a12ad06af773b784995d79e",
      "_id": "eslint-plugin-functional@5.0.8",
      "_nodeVersion": "19.9.0",
      "_npmVersion": "9.6.3",
      "dist": {
        "integrity": "sha512-rXC5THzqqSXUrbTBG+dLLYn10Af0C9Df+N4TT3onPrOz+kgInshLJdRAvEcV+8HHNsZyDrNLcgWh5jzVaAnleQ==",
        "shasum": "3b49718b2a717f196a3d077f970b6b698ccbe925",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-5.0.8.tgz",
        "fileCount": 5,
        "unpackedSize": 282367,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDU5bn5HxmTIcJrVogRMJICzfXNDNbSnOeGk88wOKP87AiEAjtjQSHo9UKzHNFirEhi9DRtJXwVcT8z+BblJNE9pv38="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkOgv1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpqEA/+Nlps3jMphuaQEE0kAa5MmmM37HpCvHrjLqOVeyBYRevRMGBK\r\ndLGBc9eU87cOgNQ9l/oZQEoNSytomXfD9XtJ8XzeZZ2Ak6ZKImEUajjTLjrR\r\nldjW5JjmkQ/84Lejce6Qih7gmjJAha+S8qOI20zBacnUKXWO0YRgCrI8e35V\r\n5rD4wJYaAzQjA7xt2QcxkEnAr5oEgrJD3KKWUXZN3G6cO7vZwf+ckhopqyja\r\nNwaMTyqGiP63IWh49PGU2wzMjfXNm6OUvWarxoII7BXiC8u9FOx/XtL/QkxZ\r\nn2gZ53e1SRGz98ld/jH9L4O+peU6CXR9cQAdTc+N44D3XLKiJmPHgL5dMRfj\r\nPSWYXhhdYqUYWi7ABWZ2DEIhKu5OcKlDSQqJ7ioHEC6rAHjttpEwL/0jraI9\r\nPoQFo8FVWycQcBnyYK1+XbnbKU6bZUIqgNBM54yeMpkbKNfetKbMGIq4uigC\r\n+xpQaBca/3jWtqN8+wUiZy6woxSxD9H0Dml680OxrITF1VanrvbuIh3MAzTn\r\nWd0AMEOfsW14mh+AAyE5CRFAoYDOhmKebL3F+rDaCBJ0qXvd1SK2knWLLvJS\r\n43KpAGbg7xIyeK3B2wfZmWdfN8bSs7qZcuQMBRH18Ps9qZ7lThtE6rHNPnh3\r\n7jIISghBg7KtV8gdnavubDUJuQumERn8fGQ=\r\n=PM9C\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_5.0.8_1681525749686_0.21423826563698678"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0-next.1": {
      "name": "eslint-plugin-functional",
      "version": "6.0.0-next.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf tests-compiled && rollup -c rollup.config.tests.ts --configPlugin @rollup/plugin-typescript",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^6.0.0",
        "deepmerge-ts": "^5.1.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^2.0.1",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "devDependencies": {
        "@ava/typescript": "4.1.0",
        "@babel/core": "7.22.9",
        "@babel/eslint-parser": "7.22.9",
        "@commitlint/cli": "17.6.6",
        "@commitlint/config-conventional": "17.6.6",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.0",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "2.0.0",
        "@rollup/plugin-commonjs": "25.0.3",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-typescript": "11.1.2",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "10.0.1",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "9.0.3",
        "@semantic-release/npm": "10.0.4",
        "@semantic-release/release-notes-generator": "11.0.4",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.44.0",
        "@types/node": "16.18.23",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.5.0",
        "@typescript-eslint/eslint-plugin": "6.0.0",
        "@typescript-eslint/parser": "6.0.0",
        "@typescript-eslint/rule-tester": "6.0.0",
        "ava": "5.3.1",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.1",
        "dedent": "1.0.2",
        "eslint": "8.45.0",
        "eslint-config-prettier": "8.8.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.1.0",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "46.4.4",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-n": "16.0.1",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "5.0.0",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "48.0.0",
        "espree": "9.6.1",
        "glob": "^10.3.3",
        "husky": "8.0.3",
        "knip": "2.15.5",
        "lint-staged": "13.2.3",
        "markdownlint-cli": "0.35.0",
        "nyc": "15.1.0",
        "prettier": "3.0.0",
        "prettier-plugin-packagejson": "2.4.5",
        "rimraf": "5.0.1",
        "rollup": "3.26.2",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.7",
        "ts-node": "10.9.1",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.6.0",
        "typescript": "5.1.6",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.3.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@8.0.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![Release](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Donate\n\n[Any donations would be much appreciated](./DONATIONS.md). 😄\n\n## Getting Started\n\n[See our getting started guide](./GETTING_STARTED.md).\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n<!-- begin auto-generated rules list -->\n\n💼 Configurations enabled in.\\\n⚠️ Configurations set to warn in.\\\n🚫 Configurations disabled in.\\\n☑️ Set in the `lite` configuration.\\\n✅ Set in the `recommended` configuration.\\\n🔒 Set in the `strict` configuration.\\\n🎨 Set in the `stylistic` configuration.\\\n🔧 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n💡 Manually fixable by [editor suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).\\\n❌ Deprecated.\n\n### Currying\n\n| Name                                                         | Description                    | 💼                           | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :----------------------------------------------------------- | :----------------------------- | :--------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [functional-parameters](docs/rules/functional-parameters.md) | Enforce functional parameters. | ☑️ ✅ 🔒 ![badge-currying][] |     |     |     |     |     |\n\n### No Exceptions\n\n| Name                                                     | Description                                            | 💼                                | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :----------------------------------------------------- | :-------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-promise-reject](docs/rules/no-promise-reject.md)     | Disallow try-catch[-finally] and try-finally patterns. |                                   |     |       |     |     |     |\n| [no-throw-statements](docs/rules/no-throw-statements.md) | Disallow throwing exceptions.                          | ☑️ ✅ 🔒 ![badge-no-exceptions][] |     |       |     |     |     |\n| [no-try-statements](docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns. | 🔒 ![badge-no-exceptions][]       |     | ☑️ ✅ |     |     |     |\n\n### No Mutations\n\n| Name                                                                         | Description                                                     | 💼                               | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------------- | :-------------------------------------------------------------- | :------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [immutable-data](docs/rules/immutable-data.md)                               | Enforce treating data as immutable.                             | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [no-let](docs/rules/no-let.md)                                               | Disallow mutable variables.                                     | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [prefer-immutable-types](docs/rules/prefer-immutable-types.md)               | Require function parameters to be typed as certain immutability | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  | 💡  |     |\n| [prefer-readonly-type](docs/rules/prefer-readonly-type.md)                   | Prefer readonly types over mutable types.                       |                                  |     |     | 🔧  |     | ❌  |\n| [type-declaration-immutability](docs/rules/type-declaration-immutability.md) | Enforce the immutability of types based on patterns.            | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  |     |     |\n\n### No Other Paradigms\n\n| Name                                                     | Description                                                               | 💼                                     | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :------------------------------------------------------------------------ | :------------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-classes](docs/rules/no-classes.md)                   | Disallow classes.                                                         | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-mixed-types](docs/rules/no-mixed-types.md)           | Restrict types so that only members of the same kind are allowed in them. | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-this-expressions](docs/rules/no-this-expressions.md) | Disallow this access.                                                     | 🔒 ![badge-no-other-paradigms][]       |     | ☑️ ✅ |     |     |     |\n\n### No Statements\n\n| Name                                                                 | Description                                    | 💼                                | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------------------- | :--------------------------------------------- | :-------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [no-conditional-statements](docs/rules/no-conditional-statements.md) | Disallow conditional statements.               | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-expression-statements](docs/rules/no-expression-statements.md)   | Disallow expression statements.                | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-loop-statements](docs/rules/no-loop-statements.md)               | Disallow imperative loops.                     | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n| [no-return-void](docs/rules/no-return-void.md)                       | Disallow functions that don't return anything. | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n\n### Stylistic\n\n| Name                                                                   | Description                                                            | 💼  | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------- | :--------------------------------------------------------------------- | :-- | :-- | :-- | :-- | :-- | :-- |\n| [prefer-property-signatures](docs/rules/prefer-property-signatures.md) | Prefer property signatures over method signatures.                     | 🎨  |     |     |     |     |     |\n| [prefer-tacit](docs/rules/prefer-tacit.md)                             | Replaces `x => f(x)` with just `f`.                                    |     | 🎨  |     |     | 💡  |     |\n| [readonly-type](docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>` | 🎨  |     |     | 🔧  |     |     |\n\n<!-- end auto-generated rules list -->\n\n[badge-currying]: https://img.shields.io/badge/-currying-red.svg\n[badge-lite]: https://img.shields.io/badge/-lite-green.svg\n[badge-no-exceptions]: https://img.shields.io/badge/-no--exceptions-blue.svg\n[badge-no-mutations]: https://img.shields.io/badge/-no--mutations-orange.svg\n[badge-no-other-paradigms]: https://img.shields.io/badge/-no--other--paradigms-yellow.svg\n[badge-no-statements]: https://img.shields.io/badge/-no--statements-purple.svg\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Contributing\n\n[See our contributing guide](./CONTRIBUTING.md).\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "a56d30311ecbff475110fede716a08c65c4dc95b",
      "_id": "eslint-plugin-functional@6.0.0-next.1",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-YWLtp2miIdGOSVpLvnYZDBQjwGGzzhYpY8TBnDgTA0WOd+ctIiXW9bnHMbARokqz2pJ2oriiUoOfIFyASdZwpw==",
        "shasum": "eae0dfd0acfa206b11eace31592108144bb871a5",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-6.0.0-next.1.tgz",
        "fileCount": 5,
        "unpackedSize": 269640,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDwO7KTt8QaIM2I+/WK5MpZiR+9SWEjyA7PYEwgItXkxQIgJQS/3UfS94ik/mULEjkomRLN0Z2GrcD1v860fS8GAzs="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_6.0.0-next.1_1689434877108_0.5755670964052328"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0-next.2": {
      "name": "eslint-plugin-functional",
      "version": "6.0.0-next.2",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf tests-compiled && rollup -c rollup.config.tests.ts --configPlugin @rollup/plugin-typescript",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^6.0.0",
        "deepmerge-ts": "^5.1.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^2.0.1",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "devDependencies": {
        "@ava/typescript": "4.1.0",
        "@babel/core": "7.22.9",
        "@babel/eslint-parser": "7.22.9",
        "@commitlint/cli": "17.6.6",
        "@commitlint/config-conventional": "17.6.6",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.0",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "2.0.0",
        "@rollup/plugin-commonjs": "25.0.3",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-typescript": "11.1.2",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "10.0.1",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "9.0.3",
        "@semantic-release/npm": "10.0.4",
        "@semantic-release/release-notes-generator": "11.0.4",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.44.0",
        "@types/node": "16.18.23",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.5.0",
        "@typescript-eslint/eslint-plugin": "6.0.0",
        "@typescript-eslint/parser": "6.0.0",
        "@typescript-eslint/rule-tester": "6.0.0",
        "ava": "5.3.1",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.1",
        "dedent": "1.0.2",
        "eslint": "8.45.0",
        "eslint-config-prettier": "8.8.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.1.0",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "46.4.4",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-n": "16.0.1",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "5.0.0",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "48.0.0",
        "espree": "9.6.1",
        "glob": "^10.3.3",
        "husky": "8.0.3",
        "knip": "2.15.5",
        "lint-staged": "13.2.3",
        "markdownlint-cli": "0.35.0",
        "nyc": "15.1.0",
        "prettier": "3.0.0",
        "prettier-plugin-packagejson": "2.4.5",
        "rimraf": "5.0.1",
        "rollup": "3.26.2",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.7",
        "ts-node": "10.9.1",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.6.0",
        "typescript": "5.1.6",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.3.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@8.0.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![Release](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Donate\n\n[Any donations would be much appreciated](./DONATIONS.md). 😄\n\n## Getting Started\n\n[See our getting started guide](./GETTING_STARTED.md).\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n<!-- begin auto-generated rules list -->\n\n💼 Configurations enabled in.\\\n⚠️ Configurations set to warn in.\\\n🚫 Configurations disabled in.\\\n☑️ Set in the `lite` configuration.\\\n✅ Set in the `recommended` configuration.\\\n🔒 Set in the `strict` configuration.\\\n🎨 Set in the `stylistic` configuration.\\\n🔧 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n💡 Manually fixable by [editor suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).\\\n❌ Deprecated.\n\n### Currying\n\n| Name                                                         | Description                    | 💼                           | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :----------------------------------------------------------- | :----------------------------- | :--------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [functional-parameters](docs/rules/functional-parameters.md) | Enforce functional parameters. | ☑️ ✅ 🔒 ![badge-currying][] |     |     |     |     |     |\n\n### No Exceptions\n\n| Name                                                     | Description                                            | 💼                                | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :----------------------------------------------------- | :-------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-promise-reject](docs/rules/no-promise-reject.md)     | Disallow try-catch[-finally] and try-finally patterns. |                                   |     |       |     |     |     |\n| [no-throw-statements](docs/rules/no-throw-statements.md) | Disallow throwing exceptions.                          | ☑️ ✅ 🔒 ![badge-no-exceptions][] |     |       |     |     |     |\n| [no-try-statements](docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns. | 🔒 ![badge-no-exceptions][]       |     | ☑️ ✅ |     |     |     |\n\n### No Mutations\n\n| Name                                                                         | Description                                                     | 💼                               | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------------- | :-------------------------------------------------------------- | :------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [immutable-data](docs/rules/immutable-data.md)                               | Enforce treating data as immutable.                             | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [no-let](docs/rules/no-let.md)                                               | Disallow mutable variables.                                     | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [prefer-immutable-types](docs/rules/prefer-immutable-types.md)               | Require function parameters to be typed as certain immutability | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  | 💡  |     |\n| [prefer-readonly-type](docs/rules/prefer-readonly-type.md)                   | Prefer readonly types over mutable types.                       |                                  |     |     | 🔧  |     | ❌  |\n| [type-declaration-immutability](docs/rules/type-declaration-immutability.md) | Enforce the immutability of types based on patterns.            | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  |     |     |\n\n### No Other Paradigms\n\n| Name                                                     | Description                                                               | 💼                                     | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :------------------------------------------------------------------------ | :------------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-classes](docs/rules/no-classes.md)                   | Disallow classes.                                                         | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-mixed-types](docs/rules/no-mixed-types.md)           | Restrict types so that only members of the same kind are allowed in them. | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-this-expressions](docs/rules/no-this-expressions.md) | Disallow this access.                                                     | 🔒 ![badge-no-other-paradigms][]       |     | ☑️ ✅ |     |     |     |\n\n### No Statements\n\n| Name                                                                 | Description                                    | 💼                                | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------------------- | :--------------------------------------------- | :-------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [no-conditional-statements](docs/rules/no-conditional-statements.md) | Disallow conditional statements.               | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-expression-statements](docs/rules/no-expression-statements.md)   | Disallow expression statements.                | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-loop-statements](docs/rules/no-loop-statements.md)               | Disallow imperative loops.                     | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n| [no-return-void](docs/rules/no-return-void.md)                       | Disallow functions that don't return anything. | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n\n### Stylistic\n\n| Name                                                                   | Description                                                            | 💼  | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------- | :--------------------------------------------------------------------- | :-- | :-- | :-- | :-- | :-- | :-- |\n| [prefer-property-signatures](docs/rules/prefer-property-signatures.md) | Prefer property signatures over method signatures.                     | 🎨  |     |     |     |     |     |\n| [prefer-tacit](docs/rules/prefer-tacit.md)                             | Replaces `x => f(x)` with just `f`.                                    |     | 🎨  |     |     | 💡  |     |\n| [readonly-type](docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>` | 🎨  |     |     | 🔧  |     |     |\n\n<!-- end auto-generated rules list -->\n\n[badge-currying]: https://img.shields.io/badge/-currying-red.svg\n[badge-lite]: https://img.shields.io/badge/-lite-green.svg\n[badge-no-exceptions]: https://img.shields.io/badge/-no--exceptions-blue.svg\n[badge-no-mutations]: https://img.shields.io/badge/-no--mutations-orange.svg\n[badge-no-other-paradigms]: https://img.shields.io/badge/-no--other--paradigms-yellow.svg\n[badge-no-statements]: https://img.shields.io/badge/-no--statements-purple.svg\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Contributing\n\n[See our contributing guide](./CONTRIBUTING.md).\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "b42c6ab92068eed8b9cc32b6d21c210ebdb72aa1",
      "_id": "eslint-plugin-functional@6.0.0-next.2",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-T6LKGGKcNljKRyj5UtL5H/wI3FRJViw7V0vJs0SHSVGX2iQJdSj1gS4S6bN8BBTaf6RfVIKY2AYIuj9LZf2mFw==",
        "shasum": "145cdadc984b9c23ce01f768b9ffa4a7b8cedec9",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-6.0.0-next.2.tgz",
        "fileCount": 5,
        "unpackedSize": 271104,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDobqaZJeUFfWjP5GXheeRDTSOPFEpc8HKynNeUyzbiIAIgODCVEF5EMZ+O9Vwe/Q/ig8mrwHsjtGuuqIvoR2F8kbY="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_6.0.0-next.2_1689560953436_0.12166276956758137"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0-next.3": {
      "name": "eslint-plugin-functional",
      "version": "6.0.0-next.3",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf tests-compiled && rollup -c rollup.config.tests.ts --configPlugin @rollup/plugin-typescript",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^6.0.0",
        "deepmerge-ts": "^5.1.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^2.0.1",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "devDependencies": {
        "@ava/typescript": "4.1.0",
        "@babel/core": "7.22.9",
        "@babel/eslint-parser": "7.22.9",
        "@commitlint/cli": "17.6.6",
        "@commitlint/config-conventional": "17.6.6",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.0",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "2.0.1",
        "@rollup/plugin-commonjs": "25.0.3",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-typescript": "11.1.2",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "10.0.1",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "9.0.3",
        "@semantic-release/npm": "10.0.4",
        "@semantic-release/release-notes-generator": "11.0.4",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.44.0",
        "@types/node": "16.18.23",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.5.0",
        "@typescript-eslint/eslint-plugin": "6.0.0",
        "@typescript-eslint/parser": "6.0.0",
        "@typescript-eslint/rule-tester": "6.0.0",
        "ava": "5.3.1",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.1",
        "dedent": "1.0.2",
        "eslint": "8.45.0",
        "eslint-config-prettier": "8.8.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.1.0",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "46.4.4",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-n": "16.0.1",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "5.0.0",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "48.0.0",
        "espree": "9.6.1",
        "glob": "^10.3.3",
        "husky": "8.0.3",
        "knip": "2.15.5",
        "lint-staged": "13.2.3",
        "markdownlint-cli": "0.35.0",
        "nyc": "15.1.0",
        "prettier": "3.0.0",
        "prettier-plugin-packagejson": "2.4.5",
        "rimraf": "5.0.1",
        "rollup": "3.26.2",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.7",
        "ts-node": "10.9.1",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.6.0",
        "typescript": "5.1.6",
        "word-wrap": "1.2.3"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.3.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@8.0.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![Release](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Donate\n\n[Any donations would be much appreciated](./DONATIONS.md). 😄\n\n## Getting Started\n\n[See our getting started guide](./GETTING_STARTED.md).\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n<!-- begin auto-generated rules list -->\n\n💼 Configurations enabled in.\\\n⚠️ Configurations set to warn in.\\\n🚫 Configurations disabled in.\\\n☑️ Set in the `lite` configuration.\\\n✅ Set in the `recommended` configuration.\\\n🔒 Set in the `strict` configuration.\\\n🎨 Set in the `stylistic` configuration.\\\n🔧 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n💡 Manually fixable by [editor suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).\\\n❌ Deprecated.\n\n### Currying\n\n| Name                                                         | Description                    | 💼                           | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :----------------------------------------------------------- | :----------------------------- | :--------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [functional-parameters](docs/rules/functional-parameters.md) | Enforce functional parameters. | ☑️ ✅ 🔒 ![badge-currying][] |     |     |     |     |     |\n\n### No Exceptions\n\n| Name                                                     | Description                                            | 💼                                | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :----------------------------------------------------- | :-------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-promise-reject](docs/rules/no-promise-reject.md)     | Disallow try-catch[-finally] and try-finally patterns. |                                   |     |       |     |     |     |\n| [no-throw-statements](docs/rules/no-throw-statements.md) | Disallow throwing exceptions.                          | ☑️ ✅ 🔒 ![badge-no-exceptions][] |     |       |     |     |     |\n| [no-try-statements](docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns. | 🔒 ![badge-no-exceptions][]       |     | ☑️ ✅ |     |     |     |\n\n### No Mutations\n\n| Name                                                                         | Description                                                     | 💼                               | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------------- | :-------------------------------------------------------------- | :------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [immutable-data](docs/rules/immutable-data.md)                               | Enforce treating data as immutable.                             | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [no-let](docs/rules/no-let.md)                                               | Disallow mutable variables.                                     | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [prefer-immutable-types](docs/rules/prefer-immutable-types.md)               | Require function parameters to be typed as certain immutability | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  | 💡  |     |\n| [prefer-readonly-type](docs/rules/prefer-readonly-type.md)                   | Prefer readonly types over mutable types.                       |                                  |     |     | 🔧  |     | ❌  |\n| [type-declaration-immutability](docs/rules/type-declaration-immutability.md) | Enforce the immutability of types based on patterns.            | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  |     |     |\n\n### No Other Paradigms\n\n| Name                                                     | Description                                                               | 💼                                     | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :------------------------------------------------------------------------ | :------------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-classes](docs/rules/no-classes.md)                   | Disallow classes.                                                         | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-mixed-types](docs/rules/no-mixed-types.md)           | Restrict types so that only members of the same kind are allowed in them. | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-this-expressions](docs/rules/no-this-expressions.md) | Disallow this access.                                                     | 🔒 ![badge-no-other-paradigms][]       |     | ☑️ ✅ |     |     |     |\n\n### No Statements\n\n| Name                                                                 | Description                                    | 💼                                | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------------------- | :--------------------------------------------- | :-------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [no-conditional-statements](docs/rules/no-conditional-statements.md) | Disallow conditional statements.               | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-expression-statements](docs/rules/no-expression-statements.md)   | Disallow expression statements.                | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-loop-statements](docs/rules/no-loop-statements.md)               | Disallow imperative loops.                     | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n| [no-return-void](docs/rules/no-return-void.md)                       | Disallow functions that don't return anything. | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n\n### Stylistic\n\n| Name                                                                   | Description                                                            | 💼  | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------- | :--------------------------------------------------------------------- | :-- | :-- | :-- | :-- | :-- | :-- |\n| [prefer-property-signatures](docs/rules/prefer-property-signatures.md) | Prefer property signatures over method signatures.                     | 🎨  |     |     |     |     |     |\n| [prefer-tacit](docs/rules/prefer-tacit.md)                             | Replaces `x => f(x)` with just `f`.                                    |     | 🎨  |     |     | 💡  |     |\n| [readonly-type](docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>` | 🎨  |     |     | 🔧  |     |     |\n\n<!-- end auto-generated rules list -->\n\n[badge-currying]: https://img.shields.io/badge/-currying-red.svg\n[badge-lite]: https://img.shields.io/badge/-lite-green.svg\n[badge-no-exceptions]: https://img.shields.io/badge/-no--exceptions-blue.svg\n[badge-no-mutations]: https://img.shields.io/badge/-no--mutations-orange.svg\n[badge-no-other-paradigms]: https://img.shields.io/badge/-no--other--paradigms-yellow.svg\n[badge-no-statements]: https://img.shields.io/badge/-no--statements-purple.svg\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Contributing\n\n[See our contributing guide](./CONTRIBUTING.md).\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "3fa69dc9ca322fab310814776b76990a983b0c51",
      "_id": "eslint-plugin-functional@6.0.0-next.3",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-+pKg8bwO0nNuyeM47OdKlsJFIN7gC5cd+AEPX4AgzSBzCNYWHs38IUbGiK1yuTeb05q9BUtulQU5Z8VSJMFXGQ==",
        "shasum": "ce23c4b8af173e5ee24b6f261a06cdd9c6af5259",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-6.0.0-next.3.tgz",
        "fileCount": 5,
        "unpackedSize": 272886,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF1JGbnvOibvtSp1lyhJEq8kYGOjGzwhjEgvv0gQJZKoAiEA5oAvmg04usEVnIiZUBJNsULQH4ODfVpouwyhWmtqemE="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_6.0.0-next.3_1689563611559_0.24521771349500066"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0-next.4": {
      "name": "eslint-plugin-functional",
      "version": "6.0.0-next.4",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf tests-compiled && rollup -c rollup.config.tests.ts --configPlugin @rollup/plugin-typescript",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^6.1.0",
        "deepmerge-ts": "^5.1.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^2.0.1",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "devDependencies": {
        "@ava/typescript": "4.1.0",
        "@babel/core": "7.22.9",
        "@babel/eslint-parser": "7.22.9",
        "@commitlint/cli": "17.6.7",
        "@commitlint/config-conventional": "17.6.7",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.7",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "2.0.1",
        "@rollup/plugin-commonjs": "25.0.3",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-typescript": "11.1.2",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "10.0.1",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "9.0.4",
        "@semantic-release/npm": "10.0.4",
        "@semantic-release/release-notes-generator": "11.0.4",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.44.0",
        "@types/node": "16.18.38",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.5.0",
        "@typescript-eslint/eslint-plugin": "6.1.0",
        "@typescript-eslint/parser": "6.1.0",
        "@typescript-eslint/rule-tester": "6.1.0",
        "ava": "5.3.1",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.2",
        "dedent": "1.2.0",
        "eslint": "8.45.0",
        "eslint-config-prettier": "8.8.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.1.1",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "46.4.4",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-n": "16.0.1",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "5.0.0",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "48.0.0",
        "espree": "9.6.1",
        "glob": "^10.3.3",
        "husky": "8.0.3",
        "knip": "2.16.0",
        "lint-staged": "13.2.3",
        "markdownlint-cli": "0.35.0",
        "nyc": "15.1.0",
        "prettier": "3.0.0",
        "prettier-plugin-packagejson": "2.4.5",
        "rimraf": "5.0.1",
        "rollup": "3.26.3",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.7",
        "ts-node": "10.9.1",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.6.0",
        "typescript": "5.1.6",
        "word-wrap": "1.2.4"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.3.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@8.0.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![Release](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Donate\n\n[Any donations would be much appreciated](./DONATIONS.md). 😄\n\n### Enterprise Users\n\n`eslint-plugin-functional` is available as part of the Tidelift Subscription.\n\nTidelift is working with the maintainers of `eslint-plugin-functional` and a growing network of open source maintainers to ensure your open source software supply chain meets enterprise standards now and into the future.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-eslint-plugin-functional?utm_source=npm-eslint-plugin-functional&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Getting Started\n\n[See our getting started guide](./GETTING_STARTED.md).\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n<!-- begin auto-generated rules list -->\n\n💼 Configurations enabled in.\\\n⚠️ Configurations set to warn in.\\\n🚫 Configurations disabled in.\\\n☑️ Set in the `lite` configuration.\\\n✅ Set in the `recommended` configuration.\\\n🔒 Set in the `strict` configuration.\\\n🎨 Set in the `stylistic` configuration.\\\n🔧 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n💡 Manually fixable by [editor suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).\\\n❌ Deprecated.\n\n### Currying\n\n| Name                                                         | Description                    | 💼                           | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :----------------------------------------------------------- | :----------------------------- | :--------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [functional-parameters](docs/rules/functional-parameters.md) | Enforce functional parameters. | ☑️ ✅ 🔒 ![badge-currying][] |     |     |     |     |     |\n\n### No Exceptions\n\n| Name                                                     | Description                                            | 💼                                | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :----------------------------------------------------- | :-------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-promise-reject](docs/rules/no-promise-reject.md)     | Disallow try-catch[-finally] and try-finally patterns. |                                   |     |       |     |     |     |\n| [no-throw-statements](docs/rules/no-throw-statements.md) | Disallow throwing exceptions.                          | ☑️ ✅ 🔒 ![badge-no-exceptions][] |     |       |     |     |     |\n| [no-try-statements](docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns. | 🔒 ![badge-no-exceptions][]       |     | ☑️ ✅ |     |     |     |\n\n### No Mutations\n\n| Name                                                                         | Description                                                     | 💼                               | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------------- | :-------------------------------------------------------------- | :------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [immutable-data](docs/rules/immutable-data.md)                               | Enforce treating data as immutable.                             | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [no-let](docs/rules/no-let.md)                                               | Disallow mutable variables.                                     | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [prefer-immutable-types](docs/rules/prefer-immutable-types.md)               | Require function parameters to be typed as certain immutability | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  | 💡  |     |\n| [prefer-readonly-type](docs/rules/prefer-readonly-type.md)                   | Prefer readonly types over mutable types.                       |                                  |     |     | 🔧  |     | ❌  |\n| [type-declaration-immutability](docs/rules/type-declaration-immutability.md) | Enforce the immutability of types based on patterns.            | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  |     |     |\n\n### No Other Paradigms\n\n| Name                                                     | Description                                                               | 💼                                     | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :------------------------------------------------------------------------ | :------------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-classes](docs/rules/no-classes.md)                   | Disallow classes.                                                         | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-mixed-types](docs/rules/no-mixed-types.md)           | Restrict types so that only members of the same kind are allowed in them. | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-this-expressions](docs/rules/no-this-expressions.md) | Disallow this access.                                                     | 🔒 ![badge-no-other-paradigms][]       |     | ☑️ ✅ |     |     |     |\n\n### No Statements\n\n| Name                                                                 | Description                                    | 💼                                | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------------------- | :--------------------------------------------- | :-------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [no-conditional-statements](docs/rules/no-conditional-statements.md) | Disallow conditional statements.               | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-expression-statements](docs/rules/no-expression-statements.md)   | Disallow expression statements.                | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-loop-statements](docs/rules/no-loop-statements.md)               | Disallow imperative loops.                     | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n| [no-return-void](docs/rules/no-return-void.md)                       | Disallow functions that don't return anything. | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n\n### Stylistic\n\n| Name                                                                   | Description                                                            | 💼  | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------- | :--------------------------------------------------------------------- | :-- | :-- | :-- | :-- | :-- | :-- |\n| [prefer-property-signatures](docs/rules/prefer-property-signatures.md) | Prefer property signatures over method signatures.                     | 🎨  |     |     |     |     |     |\n| [prefer-tacit](docs/rules/prefer-tacit.md)                             | Replaces `x => f(x)` with just `f`.                                    |     | 🎨  |     |     | 💡  |     |\n| [readonly-type](docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>` | 🎨  |     |     | 🔧  |     |     |\n\n<!-- end auto-generated rules list -->\n\n[badge-currying]: https://img.shields.io/badge/-currying-red.svg\n[badge-lite]: https://img.shields.io/badge/-lite-green.svg\n[badge-no-exceptions]: https://img.shields.io/badge/-no--exceptions-blue.svg\n[badge-no-mutations]: https://img.shields.io/badge/-no--mutations-orange.svg\n[badge-no-other-paradigms]: https://img.shields.io/badge/-no--other--paradigms-yellow.svg\n[badge-no-statements]: https://img.shields.io/badge/-no--statements-purple.svg\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Contributing\n\n[See our contributing guide](./CONTRIBUTING.md).\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "e2e9a01076c30d6af783944dbbffa18e6ebbff7c",
      "_id": "eslint-plugin-functional@6.0.0-next.4",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-phsINnhelfA5yv4lKEU3f8koVeV3ywygAU6w0Dhn++DRghnwabH4VMvd02/9LWx5VQXowRao3gLcOD8gxZ37lQ==",
        "shasum": "85bb59c49b4084add68e34ddd6ac4724fa1a0fc7",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-6.0.0-next.4.tgz",
        "fileCount": 5,
        "unpackedSize": 275924,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCbGNc779vFWW5ghqPMsjx2H3hdLIHM07Dg48nXBlYP+gIhAJU1dud7EUGgvp58nyhtmL73arjKNamEbpQ6tdXUTPJK"
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_6.0.0-next.4_1689900763434_0.9700174090066747"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0-next.5": {
      "name": "eslint-plugin-functional",
      "version": "6.0.0-next.5",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf tests-compiled && rollup -c rollup.config.tests.ts --configPlugin @rollup/plugin-typescript",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^6.1.0",
        "deepmerge-ts": "^5.1.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^2.0.1",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "devDependencies": {
        "@ava/typescript": "4.1.0",
        "@babel/core": "7.22.9",
        "@babel/eslint-parser": "7.22.9",
        "@commitlint/cli": "17.6.7",
        "@commitlint/config-conventional": "17.6.7",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.7",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "2.0.2",
        "@rollup/plugin-commonjs": "25.0.3",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-typescript": "11.1.2",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "10.0.1",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "9.0.4",
        "@semantic-release/npm": "10.0.4",
        "@semantic-release/release-notes-generator": "11.0.4",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.44.0",
        "@types/node": "16.18.38",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.5.0",
        "@typescript-eslint/eslint-plugin": "6.1.0",
        "@typescript-eslint/parser": "6.1.0",
        "@typescript-eslint/rule-tester": "6.1.0",
        "ava": "5.3.1",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.2",
        "dedent": "1.2.0",
        "eslint": "8.45.0",
        "eslint-config-prettier": "8.8.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.1.1",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "46.4.4",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-n": "16.0.1",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "5.0.0",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "48.0.0",
        "espree": "9.6.1",
        "glob": "^10.3.3",
        "husky": "8.0.3",
        "knip": "2.16.0",
        "lint-staged": "13.2.3",
        "markdownlint-cli": "0.35.0",
        "nyc": "15.1.0",
        "prettier": "3.0.0",
        "prettier-plugin-packagejson": "2.4.5",
        "rimraf": "5.0.1",
        "rollup": "3.26.3",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.7",
        "ts-node": "10.9.1",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.6.0",
        "typescript": "5.1.6",
        "word-wrap": "1.2.4"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.3.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@8.0.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![Release](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Donate\n\n[Any donations would be much appreciated](./DONATIONS.md). 😄\n\n### Enterprise Users\n\n`eslint-plugin-functional` is available as part of the Tidelift Subscription.\n\nTidelift is working with the maintainers of `eslint-plugin-functional` and a growing network of open source maintainers to ensure your open source software supply chain meets enterprise standards now and into the future.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-eslint-plugin-functional?utm_source=npm-eslint-plugin-functional&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Getting Started\n\n[See our getting started guide](./GETTING_STARTED.md).\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n<!-- begin auto-generated rules list -->\n\n💼 Configurations enabled in.\\\n⚠️ Configurations set to warn in.\\\n🚫 Configurations disabled in.\\\n☑️ Set in the `lite` configuration.\\\n✅ Set in the `recommended` configuration.\\\n🔒 Set in the `strict` configuration.\\\n🎨 Set in the `stylistic` configuration.\\\n🔧 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n💡 Manually fixable by [editor suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).\\\n❌ Deprecated.\n\n### Currying\n\n| Name                                                         | Description                    | 💼                           | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :----------------------------------------------------------- | :----------------------------- | :--------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [functional-parameters](docs/rules/functional-parameters.md) | Enforce functional parameters. | ☑️ ✅ 🔒 ![badge-currying][] |     |     |     |     |     |\n\n### No Exceptions\n\n| Name                                                     | Description                                            | 💼                                | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :----------------------------------------------------- | :-------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-promise-reject](docs/rules/no-promise-reject.md)     | Disallow try-catch[-finally] and try-finally patterns. |                                   |     |       |     |     |     |\n| [no-throw-statements](docs/rules/no-throw-statements.md) | Disallow throwing exceptions.                          | ☑️ ✅ 🔒 ![badge-no-exceptions][] |     |       |     |     |     |\n| [no-try-statements](docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns. | 🔒 ![badge-no-exceptions][]       |     | ☑️ ✅ |     |     |     |\n\n### No Mutations\n\n| Name                                                                         | Description                                                     | 💼                               | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------------- | :-------------------------------------------------------------- | :------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [immutable-data](docs/rules/immutable-data.md)                               | Enforce treating data as immutable.                             | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [no-let](docs/rules/no-let.md)                                               | Disallow mutable variables.                                     | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [prefer-immutable-types](docs/rules/prefer-immutable-types.md)               | Require function parameters to be typed as certain immutability | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  | 💡  |     |\n| [prefer-readonly-type](docs/rules/prefer-readonly-type.md)                   | Prefer readonly types over mutable types.                       |                                  |     |     | 🔧  |     | ❌  |\n| [type-declaration-immutability](docs/rules/type-declaration-immutability.md) | Enforce the immutability of types based on patterns.            | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  |     |     |\n\n### No Other Paradigms\n\n| Name                                                     | Description                                                               | 💼                                     | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :------------------------------------------------------------------------ | :------------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-classes](docs/rules/no-classes.md)                   | Disallow classes.                                                         | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-mixed-types](docs/rules/no-mixed-types.md)           | Restrict types so that only members of the same kind are allowed in them. | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-this-expressions](docs/rules/no-this-expressions.md) | Disallow this access.                                                     | 🔒 ![badge-no-other-paradigms][]       |     | ☑️ ✅ |     |     |     |\n\n### No Statements\n\n| Name                                                                 | Description                                    | 💼                                | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------------------- | :--------------------------------------------- | :-------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [no-conditional-statements](docs/rules/no-conditional-statements.md) | Disallow conditional statements.               | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-expression-statements](docs/rules/no-expression-statements.md)   | Disallow expression statements.                | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-loop-statements](docs/rules/no-loop-statements.md)               | Disallow imperative loops.                     | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n| [no-return-void](docs/rules/no-return-void.md)                       | Disallow functions that don't return anything. | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n\n### Stylistic\n\n| Name                                                                   | Description                                                            | 💼  | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------- | :--------------------------------------------------------------------- | :-- | :-- | :-- | :-- | :-- | :-- |\n| [prefer-property-signatures](docs/rules/prefer-property-signatures.md) | Prefer property signatures over method signatures.                     | 🎨  |     |     |     |     |     |\n| [prefer-tacit](docs/rules/prefer-tacit.md)                             | Replaces `x => f(x)` with just `f`.                                    |     | 🎨  |     |     | 💡  |     |\n| [readonly-type](docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>` | 🎨  |     |     | 🔧  |     |     |\n\n<!-- end auto-generated rules list -->\n\n[badge-currying]: https://img.shields.io/badge/-currying-red.svg\n[badge-lite]: https://img.shields.io/badge/-lite-green.svg\n[badge-no-exceptions]: https://img.shields.io/badge/-no--exceptions-blue.svg\n[badge-no-mutations]: https://img.shields.io/badge/-no--mutations-orange.svg\n[badge-no-other-paradigms]: https://img.shields.io/badge/-no--other--paradigms-yellow.svg\n[badge-no-statements]: https://img.shields.io/badge/-no--statements-purple.svg\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Contributing\n\n[See our contributing guide](./CONTRIBUTING.md).\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "180e19134b9f90f530a481864accd018261d9799",
      "_id": "eslint-plugin-functional@6.0.0-next.5",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-+ySLdQe2K8F3h9cHN/LA+lxda33Ksp1r4ZMOqiMpJ3sjz2HTE5zRc9KAqP8IykOuvkziHMbubeuOZTnvofN5GQ==",
        "shasum": "079f7b16b7dcc01956820cb55f389272dd2fea4a",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-6.0.0-next.5.tgz",
        "fileCount": 5,
        "unpackedSize": 277404,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEEID7f4FRCOCvpYxeqH6tEajZVl6L/yMcoYcSdp+Ht3AiEA/YCTndYmEC3GiQfTC0alKMntRLudRVCi2X3FhI+d9Q0="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_6.0.0-next.5_1689912404166_0.28632919874609253"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0-next.6": {
      "name": "eslint-plugin-functional",
      "version": "6.0.0-next.6",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf tests-compiled && rollup -c rollup.config.tests.ts --configPlugin @rollup/plugin-typescript",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^6.1.0",
        "deepmerge-ts": "^5.1.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^2.0.1",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "devDependencies": {
        "@ava/typescript": "4.1.0",
        "@babel/core": "7.22.9",
        "@babel/eslint-parser": "7.22.9",
        "@commitlint/cli": "17.6.7",
        "@commitlint/config-conventional": "17.6.7",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.7",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "2.0.2",
        "@rollup/plugin-commonjs": "25.0.3",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-typescript": "11.1.2",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "10.0.1",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "9.0.4",
        "@semantic-release/npm": "10.0.4",
        "@semantic-release/release-notes-generator": "11.0.4",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.44.0",
        "@types/node": "16.18.38",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.5.0",
        "@typescript-eslint/eslint-plugin": "6.1.0",
        "@typescript-eslint/parser": "6.1.0",
        "@typescript-eslint/rule-tester": "6.1.0",
        "ava": "5.3.1",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.2",
        "dedent": "1.2.0",
        "eslint": "8.45.0",
        "eslint-config-prettier": "8.8.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.1.1",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "46.4.4",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-n": "16.0.1",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "5.0.0",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "48.0.0",
        "espree": "9.6.1",
        "glob": "^10.3.3",
        "husky": "8.0.3",
        "knip": "2.16.0",
        "lint-staged": "13.2.3",
        "markdownlint-cli": "0.35.0",
        "nyc": "15.1.0",
        "prettier": "3.0.0",
        "prettier-plugin-packagejson": "2.4.5",
        "rimraf": "5.0.1",
        "rollup": "3.26.3",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.7",
        "ts-node": "10.9.1",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.6.0",
        "typescript": "5.1.6",
        "word-wrap": "1.2.4"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.3.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@8.0.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![Release](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Donate\n\n[Any donations would be much appreciated](./DONATIONS.md). 😄\n\n### Enterprise Users\n\n`eslint-plugin-functional` is available as part of the Tidelift Subscription.\n\nTidelift is working with the maintainers of `eslint-plugin-functional` and a growing network of open source maintainers to ensure your open source software supply chain meets enterprise standards now and into the future.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-eslint-plugin-functional?utm_source=npm-eslint-plugin-functional&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Getting Started\n\n[See our getting started guide](./GETTING_STARTED.md).\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n<!-- begin auto-generated rules list -->\n\n💼 Configurations enabled in.\\\n⚠️ Configurations set to warn in.\\\n🚫 Configurations disabled in.\\\n☑️ Set in the `lite` configuration.\\\n✅ Set in the `recommended` configuration.\\\n🔒 Set in the `strict` configuration.\\\n🎨 Set in the `stylistic` configuration.\\\n🔧 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n💡 Manually fixable by [editor suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).\\\n❌ Deprecated.\n\n### Currying\n\n| Name                                                         | Description                    | 💼                           | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :----------------------------------------------------------- | :----------------------------- | :--------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [functional-parameters](docs/rules/functional-parameters.md) | Enforce functional parameters. | ☑️ ✅ 🔒 ![badge-currying][] |     |     |     |     |     |\n\n### No Exceptions\n\n| Name                                                     | Description                                            | 💼                                | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :----------------------------------------------------- | :-------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-promise-reject](docs/rules/no-promise-reject.md)     | Disallow try-catch[-finally] and try-finally patterns. |                                   |     |       |     |     |     |\n| [no-throw-statements](docs/rules/no-throw-statements.md) | Disallow throwing exceptions.                          | ☑️ ✅ 🔒 ![badge-no-exceptions][] |     |       |     |     |     |\n| [no-try-statements](docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns. | 🔒 ![badge-no-exceptions][]       |     | ☑️ ✅ |     |     |     |\n\n### No Mutations\n\n| Name                                                                         | Description                                                     | 💼                               | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------------- | :-------------------------------------------------------------- | :------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [immutable-data](docs/rules/immutable-data.md)                               | Enforce treating data as immutable.                             | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [no-let](docs/rules/no-let.md)                                               | Disallow mutable variables.                                     | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [prefer-immutable-types](docs/rules/prefer-immutable-types.md)               | Require function parameters to be typed as certain immutability | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  | 💡  |     |\n| [prefer-readonly-type](docs/rules/prefer-readonly-type.md)                   | Prefer readonly types over mutable types.                       |                                  |     |     | 🔧  |     | ❌  |\n| [type-declaration-immutability](docs/rules/type-declaration-immutability.md) | Enforce the immutability of types based on patterns.            | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  |     |     |\n\n### No Other Paradigms\n\n| Name                                                     | Description                                                               | 💼                                     | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :------------------------------------------------------------------------ | :------------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-classes](docs/rules/no-classes.md)                   | Disallow classes.                                                         | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-mixed-types](docs/rules/no-mixed-types.md)           | Restrict types so that only members of the same kind are allowed in them. | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-this-expressions](docs/rules/no-this-expressions.md) | Disallow this access.                                                     | 🔒 ![badge-no-other-paradigms][]       |     | ☑️ ✅ |     |     |     |\n\n### No Statements\n\n| Name                                                                 | Description                                    | 💼                                | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------------------- | :--------------------------------------------- | :-------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [no-conditional-statements](docs/rules/no-conditional-statements.md) | Disallow conditional statements.               | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-expression-statements](docs/rules/no-expression-statements.md)   | Disallow expression statements.                | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-loop-statements](docs/rules/no-loop-statements.md)               | Disallow imperative loops.                     | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n| [no-return-void](docs/rules/no-return-void.md)                       | Disallow functions that don't return anything. | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n\n### Stylistic\n\n| Name                                                                   | Description                                                            | 💼  | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------- | :--------------------------------------------------------------------- | :-- | :-- | :-- | :-- | :-- | :-- |\n| [prefer-property-signatures](docs/rules/prefer-property-signatures.md) | Prefer property signatures over method signatures.                     | 🎨  |     |     |     |     |     |\n| [prefer-tacit](docs/rules/prefer-tacit.md)                             | Replaces `x => f(x)` with just `f`.                                    |     | 🎨  |     |     | 💡  |     |\n| [readonly-type](docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>` | 🎨  |     |     | 🔧  |     |     |\n\n<!-- end auto-generated rules list -->\n\n[badge-currying]: https://img.shields.io/badge/-currying-red.svg\n[badge-lite]: https://img.shields.io/badge/-lite-green.svg\n[badge-no-exceptions]: https://img.shields.io/badge/-no--exceptions-blue.svg\n[badge-no-mutations]: https://img.shields.io/badge/-no--mutations-orange.svg\n[badge-no-other-paradigms]: https://img.shields.io/badge/-no--other--paradigms-yellow.svg\n[badge-no-statements]: https://img.shields.io/badge/-no--statements-purple.svg\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Contributing\n\n[See our contributing guide](./CONTRIBUTING.md).\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "5b1acb982e1b56b03ff2eb855a36221ffca3af38",
      "_id": "eslint-plugin-functional@6.0.0-next.6",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-zC4sKyxSRjBqLvqZrxly2rjHFQaPczuJA+Q0pJrD4nMMWQrI1eLtK3KzKRviQnf+LpmWSfPawJcdVwEFSnhW5A==",
        "shasum": "703dad2cd2d4083c2b022e5b2780bba6f5b8155f",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-6.0.0-next.6.tgz",
        "fileCount": 5,
        "unpackedSize": 281854,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH8hdGhQWOGkqwhHW6qNq53747xlD8EnKH1Ir7SFwlhXAiEAsQBTJqDzi65V9dmIT6AKWNHU4hcrpzJanBJbGMiRFKU="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_6.0.0-next.6_1689921170976_0.64885179191267"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0-next.7": {
      "name": "eslint-plugin-functional",
      "version": "6.0.0-next.7",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf tests-compiled && rollup -c rollup.config.tests.ts --configPlugin @rollup/plugin-typescript",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 nyc ava",
        "test-work": "ONLY_TEST_WORK_FILE=1 ava",
        "test:js": "nyc ava",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^6.1.0",
        "deepmerge-ts": "^5.1.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^2.0.1",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "devDependencies": {
        "@ava/typescript": "4.1.0",
        "@babel/core": "7.22.9",
        "@babel/eslint-parser": "7.22.9",
        "@commitlint/cli": "17.6.7",
        "@commitlint/config-conventional": "17.6.7",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@google/semantic-release-replace-plugin": "1.2.7",
        "@istanbuljs/nyc-config-typescript": "1.0.2",
        "@rebeccastevens/eslint-config": "2.0.2",
        "@rollup/plugin-commonjs": "25.0.3",
        "@rollup/plugin-json": "6.0.0",
        "@rollup/plugin-typescript": "11.1.2",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "10.0.1",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "9.0.4",
        "@semantic-release/npm": "10.0.4",
        "@semantic-release/release-notes-generator": "11.0.4",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.44.0",
        "@types/node": "16.18.38",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.5.0",
        "@typescript-eslint/eslint-plugin": "6.1.0",
        "@typescript-eslint/parser": "6.1.0",
        "@typescript-eslint/rule-tester": "6.1.0",
        "ava": "5.3.1",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.2",
        "dedent": "1.2.0",
        "eslint": "8.45.0",
        "eslint-config-prettier": "8.8.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-ava": "14.0.0",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.1.1",
        "eslint-plugin-import": "2.27.5",
        "eslint-plugin-jsdoc": "46.4.4",
        "eslint-plugin-markdown": "3.0.0",
        "eslint-plugin-n": "16.0.1",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "5.0.0",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "48.0.0",
        "espree": "9.6.1",
        "glob": "^10.3.3",
        "husky": "8.0.3",
        "knip": "2.16.0",
        "lint-staged": "13.2.3",
        "markdownlint-cli": "0.35.0",
        "nyc": "15.1.0",
        "prettier": "3.0.0",
        "prettier-plugin-packagejson": "2.4.5",
        "rimraf": "5.0.1",
        "rollup": "3.26.3",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.7",
        "ts-node": "10.9.1",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.6.0",
        "typescript": "5.1.6",
        "word-wrap": "1.2.4"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.3.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@8.0.0",
      "engines": {
        "node": ">=16.10.0"
      },
      "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![Release](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Donate\n\n[Any donations would be much appreciated](./DONATIONS.md). 😄\n\n### Enterprise Users\n\n`eslint-plugin-functional` is available as part of the Tidelift Subscription.\n\nTidelift is working with the maintainers of `eslint-plugin-functional` and a growing network of open source maintainers to ensure your open source software supply chain meets enterprise standards now and into the future.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-eslint-plugin-functional?utm_source=npm-eslint-plugin-functional&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Getting Started\n\n[See our getting started guide](./GETTING_STARTED.md).\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n<!-- begin auto-generated rules list -->\n\n💼 Configurations enabled in.\\\n⚠️ Configurations set to warn in.\\\n🚫 Configurations disabled in.\\\n☑️ Set in the `lite` configuration.\\\n✅ Set in the `recommended` configuration.\\\n🔒 Set in the `strict` configuration.\\\n🎨 Set in the `stylistic` configuration.\\\n🔧 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n💡 Manually fixable by [editor suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).\\\n❌ Deprecated.\n\n### Currying\n\n| Name                                                         | Description                    | 💼                           | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :----------------------------------------------------------- | :----------------------------- | :--------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [functional-parameters](docs/rules/functional-parameters.md) | Enforce functional parameters. | ☑️ ✅ 🔒 ![badge-currying][] |     |     |     |     |     |\n\n### No Exceptions\n\n| Name                                                     | Description                                            | 💼                                | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :----------------------------------------------------- | :-------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-promise-reject](docs/rules/no-promise-reject.md)     | Disallow try-catch[-finally] and try-finally patterns. |                                   |     |       |     |     |     |\n| [no-throw-statements](docs/rules/no-throw-statements.md) | Disallow throwing exceptions.                          | ☑️ ✅ 🔒 ![badge-no-exceptions][] |     |       |     |     |     |\n| [no-try-statements](docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns. | 🔒 ![badge-no-exceptions][]       |     | ☑️ ✅ |     |     |     |\n\n### No Mutations\n\n| Name                                                                         | Description                                                     | 💼                               | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------------- | :-------------------------------------------------------------- | :------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [immutable-data](docs/rules/immutable-data.md)                               | Enforce treating data as immutable.                             | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [no-let](docs/rules/no-let.md)                                               | Disallow mutable variables.                                     | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [prefer-immutable-types](docs/rules/prefer-immutable-types.md)               | Require function parameters to be typed as certain immutability | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  | 💡  |     |\n| [prefer-readonly-type](docs/rules/prefer-readonly-type.md)                   | Prefer readonly types over mutable types.                       |                                  |     |     | 🔧  |     | ❌  |\n| [type-declaration-immutability](docs/rules/type-declaration-immutability.md) | Enforce the immutability of types based on patterns.            | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  |     |     |\n\n### No Other Paradigms\n\n| Name                                                     | Description                                                               | 💼                                     | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :------------------------------------------------------------------------ | :------------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-classes](docs/rules/no-classes.md)                   | Disallow classes.                                                         | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-mixed-types](docs/rules/no-mixed-types.md)           | Restrict types so that only members of the same kind are allowed in them. | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-this-expressions](docs/rules/no-this-expressions.md) | Disallow this access.                                                     | 🔒 ![badge-no-other-paradigms][]       |     | ☑️ ✅ |     |     |     |\n\n### No Statements\n\n| Name                                                                 | Description                                    | 💼                                | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------------------- | :--------------------------------------------- | :-------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [no-conditional-statements](docs/rules/no-conditional-statements.md) | Disallow conditional statements.               | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-expression-statements](docs/rules/no-expression-statements.md)   | Disallow expression statements.                | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-loop-statements](docs/rules/no-loop-statements.md)               | Disallow imperative loops.                     | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n| [no-return-void](docs/rules/no-return-void.md)                       | Disallow functions that don't return anything. | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n\n### Stylistic\n\n| Name                                                                   | Description                                                            | 💼  | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------- | :--------------------------------------------------------------------- | :-- | :-- | :-- | :-- | :-- | :-- |\n| [prefer-property-signatures](docs/rules/prefer-property-signatures.md) | Prefer property signatures over method signatures.                     | 🎨  |     |     |     |     |     |\n| [prefer-tacit](docs/rules/prefer-tacit.md)                             | Replaces `x => f(x)` with just `f`.                                    |     | 🎨  |     |     | 💡  |     |\n| [readonly-type](docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>` | 🎨  |     |     | 🔧  |     |     |\n\n<!-- end auto-generated rules list -->\n\n[badge-currying]: https://img.shields.io/badge/-currying-red.svg\n[badge-lite]: https://img.shields.io/badge/-lite-green.svg\n[badge-no-exceptions]: https://img.shields.io/badge/-no--exceptions-blue.svg\n[badge-no-mutations]: https://img.shields.io/badge/-no--mutations-orange.svg\n[badge-no-other-paradigms]: https://img.shields.io/badge/-no--other--paradigms-yellow.svg\n[badge-no-statements]: https://img.shields.io/badge/-no--statements-purple.svg\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Contributing\n\n[See our contributing guide](./CONTRIBUTING.md).\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
      "readmeFilename": "README.md",
      "gitHead": "fef136d5fdbb76316de270087a28954115502b1b",
      "_id": "eslint-plugin-functional@6.0.0-next.7",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-Y3dmNp7P2bHUjo2iKtpTlZVP7sKzLjwOcBNp7wocOT/zSyS9hMAVCz+DEXjD4vZAqwo8VUhzKWBJ3slkOM9LlA==",
        "shasum": "8cc3c11158f526ab1c30eb435e6943e46fa2ea71",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-6.0.0-next.7.tgz",
        "fileCount": 5,
        "unpackedSize": 283644,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEJ87i0tlemsOJpWbz876DUP8XTeH+bU/CpY3bZn48l5AiByMDp7prSMvUqShxMDNjNrBPz4QctGCzXmmHp9xaKBSg=="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_6.0.0-next.7_1690200940167_0.2737651778653125"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0": {
      "name": "eslint-plugin-functional",
      "version": "6.0.0",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf tests-compiled && tsc -p tsconfig.tests-compiled.json && tsc-alias -p tsconfig.tests-compiled.json",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 vitest run --coverage",
        "test-work": "vitest",
        "test:js": "vitest --coverage",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^6.2.0",
        "deepmerge-ts": "^5.1.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^2.0.1",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "devDependencies": {
        "@babel/core": "7.22.9",
        "@babel/eslint-parser": "7.22.9",
        "@commitlint/cli": "17.6.7",
        "@commitlint/config-conventional": "17.6.7",
        "@cspell/dict-cryptocurrencies": "3.0.1",
        "@rebeccastevens/eslint-config": "2.0.2",
        "@rollup/plugin-typescript": "11.1.2",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "10.0.1",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "9.0.4",
        "@semantic-release/npm": "10.0.4",
        "@semantic-release/release-notes-generator": "11.0.4",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.44.1",
        "@types/node": "16.18.39",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.5.0",
        "@typescript-eslint/eslint-plugin": "6.2.0",
        "@typescript-eslint/parser": "6.2.0",
        "@typescript-eslint/rule-tester": "6.2.0",
        "@vitest/coverage-c8": "0.33.0",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.2",
        "dedent": "1.3.0",
        "eslint": "8.46.0",
        "eslint-config-prettier": "8.9.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.1.1",
        "eslint-plugin-import": "2.28.0",
        "eslint-plugin-jsdoc": "46.4.5",
        "eslint-plugin-markdown": "3.0.1",
        "eslint-plugin-n": "16.0.1",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "5.0.0",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "48.0.1",
        "espree": "9.6.1",
        "husky": "8.0.3",
        "knip": "2.17.1",
        "lint-staged": "13.2.3",
        "markdownlint-cli": "0.35.0",
        "prettier": "3.0.0",
        "prettier-plugin-packagejson": "2.4.5",
        "rimraf": "5.0.1",
        "rollup": "3.27.0",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.7",
        "semantic-release-replace-plugin": "1.2.7",
        "ts-node": "10.9.1",
        "tsc-alias": "1.8.7",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.6.1",
        "typescript": "5.1.6",
        "vite-tsconfig-paths": "4.2.0",
        "vitest": "0.33.0",
        "word-wrap": "1.2.5"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.3.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@8.6.10",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "27db8bf41857a849d97340b1503dc32e42c6a633",
      "_id": "eslint-plugin-functional@6.0.0",
      "_nodeVersion": "18.17.0",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-jOUHUMA9cN2CIpgPj93fW1vTI3c95ZYUHMPJxEJL4KAtFkJDcT/9/YlfyrLOBxHkAcwBhJ29HSmeC/CUnN0k3g==",
        "shasum": "37c32dd78443f156bb0b45febaa5d19f596cd7e7",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-6.0.0.tgz",
        "fileCount": 5,
        "unpackedSize": 281558,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQChwv3BKVS9lyTlM/8BvVqZQilV8vTxSzGw8ZxI72yumwIhAMAaj1jz1xJpxp2ioK2HioAMOBTF3GkMXo+HJMJtG6Gc"
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_6.0.0_1690725948426_0.27116452210832365"
      },
      "_hasShrinkwrap": false
    },
    "6.0.1": {
      "name": "eslint-plugin-functional",
      "version": "6.0.1",
      "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
      "keywords": [
        "eslint",
        "eslint plugin",
        "fp",
        "functional",
        "functional programming",
        "immutability",
        "immutable"
      ],
      "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
      "bugs": {
        "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
      },
      "funding": [
        {
          "type": "ko-fi",
          "url": "https://ko-fi.com/rebeccastevens"
        }
      ],
      "license": "MIT",
      "author": {
        "name": "Rebecca Stevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "contributors": [
        {
          "name": "Jonas Kello"
        }
      ],
      "exports": {
        "default": "./lib/index.js",
        "import": "./lib/index.mjs",
        "require": "./lib/index.js"
      },
      "main": "lib/index.js",
      "scripts": {
        "build": "pnpm run build:node && pnpm run build:docs",
        "build-tests": "rimraf tests-compiled && tsc -p tsconfig.tests-compiled.json && tsc-alias -p tsconfig.tests-compiled.json",
        "build:docs": "eslint-doc-generator",
        "build:node": "rimraf lib && rollup -c rollup.config.ts --configPlugin @rollup/plugin-typescript",
        "cz": "git-cz",
        "lint": "pnpm run build && pnpm run lint:js && pnpm run lint:md && pnpm lint:eslint-docs && pnpm run lint:prettier && pnpm run lint:knip && pnpm run lint:spelling",
        "lint:eslint-docs": "eslint-doc-generator --check",
        "lint:js": "eslint .",
        "lint:js-fix": "eslint . --fix",
        "lint:knip": "pnpm run lint:knip:development && pnpm run lint:knip:production",
        "lint:knip:development": "knip --exclude exports,nsExports,types,nsTypes",
        "lint:knip:production": "knip --production --strict --exclude exports,nsExports,types,nsTypes",
        "lint:md": "markdownlint \"**/*.md\" --config=.markdownlint.json --ignore-path=.markdownlintignore",
        "lint:prettier": "prettier \"**/*\" --ignore-unknown --list-different",
        "lint:prettier-fix": "prettier \"**/*\" --ignore-unknown --write",
        "lint:spelling": "cspell \"**\" \".github/**/*\"",
        "prepare": "husky install",
        "release": "semantic-release",
        "test": "pnpm run test:js",
        "test-compiled": "USE_COMPILED_TESTS=1 vitest run --coverage",
        "test-work": "vitest",
        "test:js": "vitest --coverage",
        "type-check": "tsc --noEmit --skipLibCheck",
        "verify": "pnpm run lint && pnpm run type-check && pnpm run build-tests && pnpm run test-compiled && rimraf build"
      },
      "dependencies": {
        "@typescript-eslint/utils": "^6.2.0",
        "deepmerge-ts": "^5.1.0",
        "escape-string-regexp": "^4.0.0",
        "is-immutable-type": "^2.0.1",
        "semver": "^7.5.4",
        "ts-api-utils": "^1.0.1"
      },
      "devDependencies": {
        "@babel/core": "7.22.9",
        "@babel/eslint-parser": "7.22.9",
        "@commitlint/cli": "17.6.7",
        "@commitlint/config-conventional": "17.6.7",
        "@rebeccastevens/eslint-config": "2.0.2",
        "@rollup/plugin-typescript": "11.1.2",
        "@semantic-release/changelog": "6.0.3",
        "@semantic-release/commit-analyzer": "10.0.1",
        "@semantic-release/git": "10.0.1",
        "@semantic-release/github": "9.0.4",
        "@semantic-release/npm": "10.0.4",
        "@semantic-release/release-notes-generator": "11.0.4",
        "@types/dedent": "0.7.0",
        "@types/eslint": "8.44.2",
        "@types/node": "16.18.39",
        "@types/rollup-plugin-auto-external": "2.0.2",
        "@types/semver": "7.5.0",
        "@typescript-eslint/eslint-plugin": "6.2.0",
        "@typescript-eslint/parser": "6.2.0",
        "@typescript-eslint/rule-tester": "6.2.0",
        "@vitest/coverage-c8": "0.33.0",
        "chalk": "4.1.2",
        "commitizen": "4.3.0",
        "conventional-commit-types": "3.0.0",
        "cspell": "6.31.2",
        "dedent": "1.5.1",
        "eslint": "8.46.0",
        "eslint-config-prettier": "9.0.0",
        "eslint-doc-generator": "1.4.3",
        "eslint-import-resolver-typescript": "3.5.5",
        "eslint-plugin-eslint-comments": "3.2.0",
        "eslint-plugin-eslint-plugin": "5.1.1",
        "eslint-plugin-import": "2.28.0",
        "eslint-plugin-jsdoc": "46.4.6",
        "eslint-plugin-markdown": "3.0.1",
        "eslint-plugin-n": "16.0.1",
        "eslint-plugin-optimize-regex": "1.2.1",
        "eslint-plugin-prettier": "5.0.0",
        "eslint-plugin-promise": "6.1.1",
        "eslint-plugin-sonarjs": "0.19.0",
        "eslint-plugin-unicorn": "48.0.1",
        "espree": "9.6.1",
        "husky": "8.0.3",
        "knip": "2.19.0",
        "lint-staged": "13.2.3",
        "markdownlint-cli": "0.35.0",
        "prettier": "3.0.1",
        "prettier-plugin-packagejson": "2.4.5",
        "rimraf": "5.0.1",
        "rollup": "3.27.2",
        "rollup-plugin-auto-external": "2.0.0",
        "semantic-release": "21.0.7",
        "semantic-release-replace-plugin": "1.2.7",
        "ts-node": "10.9.1",
        "tsc-alias": "1.8.7",
        "tsconfig-paths": "4.2.0",
        "tslib": "2.6.1",
        "typescript": "5.1.6",
        "vite-tsconfig-paths": "4.2.0",
        "vitest": "0.33.0",
        "word-wrap": "1.2.5"
      },
      "peerDependencies": {
        "eslint": "^8.0.0",
        "typescript": ">=4.3.5"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      },
      "packageManager": "pnpm@8.6.12",
      "engines": {
        "node": ">=16.10.0"
      },
      "gitHead": "4649ab5220eecdfaf03034faea7bf23f211b281e",
      "_id": "eslint-plugin-functional@6.0.1",
      "_nodeVersion": "18.19.1",
      "_npmVersion": "9.6.2",
      "dist": {
        "integrity": "sha512-FDsPbSa3RKRh3i9re8ASmjN6iUfnSjyo++pfedL3S410/F4h0PwxBeNo+C2+qstHfW2XL4Gml8D4l6KMoQkJKg==",
        "shasum": "06d31e534201026918220164778df2e8e786dfd1",
        "tarball": "https://registry.npmjs.org/eslint-plugin-functional/-/eslint-plugin-functional-6.0.1.tgz",
        "fileCount": 5,
        "unpackedSize": 281548,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDG93/CkSpvwbVD8ly2Q+4f6mVdabEMsjG8qgcQ/HUqnAiEAv5rWR2KBn/u9MGxUvFW8Y4S31TZU6lBZg8TampTc+jc="
          }
        ]
      },
      "_npmUser": {
        "name": "rebeccastevens",
        "email": "rebecca.stevens@outlook.co.nz"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jonaskello",
          "email": "jonas.kello@gmail.com"
        },
        {
          "name": "rebeccastevens",
          "email": "rebecca.stevens@outlook.co.nz"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/eslint-plugin-functional_6.0.1_1708689048758_0.39569813246739227"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2019-07-19T13:20:30.669Z",
    "0.4.0": "2019-07-19T13:20:30.805Z",
    "modified": "2024-02-23T11:50:49.361Z",
    "0.5.0": "2019-07-29T03:05:57.378Z",
    "0.5.1": "2019-07-30T01:59:01.932Z",
    "0.5.2": "2019-07-30T22:29:56.216Z",
    "0.5.3": "2019-08-06T14:45:09.977Z",
    "1.0.0-rc.1": "2019-08-06T14:46:20.927Z",
    "1.0.0-rc.2": "2019-08-07T07:17:49.967Z",
    "1.0.0": "2019-10-14T10:01:49.621Z",
    "1.0.1": "2019-12-11T09:05:34.682Z",
    "1.0.2": "2019-12-11T09:59:47.269Z",
    "1.0.3": "2019-12-29T03:01:14.978Z",
    "2.0.0": "2019-12-29T04:19:10.295Z",
    "3.0.0": "2020-01-11T13:28:43.383Z",
    "3.0.1": "2020-01-11T13:50:58.074Z",
    "3.0.2": "2020-08-23T06:32:06.495Z",
    "3.1.0": "2020-10-07T23:40:59.916Z",
    "3.2.0": "2020-12-30T22:27:15.231Z",
    "3.2.1": "2021-01-01T07:25:13.173Z",
    "3.2.2": "2021-07-22T17:23:33.296Z",
    "3.3.0": "2021-07-26T18:48:03.128Z",
    "3.4.0": "2021-07-31T03:43:43.982Z",
    "3.4.1": "2021-07-31T07:23:23.662Z",
    "3.5.0": "2021-08-01T11:25:01.152Z",
    "3.6.0": "2021-08-12T13:31:41.679Z",
    "3.7.0": "2021-08-28T04:13:59.241Z",
    "3.7.1": "2021-09-19T15:00:27.467Z",
    "3.7.2": "2021-09-20T08:57:28.897Z",
    "4.0.0-rc1": "2021-10-15T00:12:52.677Z",
    "4.0.0-rc2": "2021-10-15T00:50:30.402Z",
    "4.0.0": "2021-10-17T05:38:24.010Z",
    "4.0.1": "2021-10-24T07:18:00.774Z",
    "4.0.2": "2021-10-24T12:56:00.491Z",
    "4.1.0": "2022-01-08T04:03:01.873Z",
    "4.1.1-beta.1": "2022-01-08T06:25:20.449Z",
    "4.1.1": "2022-01-08T06:38:24.357Z",
    "4.2.0": "2022-02-06T02:33:04.927Z",
    "4.2.1": "2022-04-06T04:44:57.749Z",
    "4.2.2": "2022-07-22T13:21:00.570Z",
    "4.3.0": "2022-09-08T15:37:15.858Z",
    "4.3.1": "2022-09-14T07:56:44.389Z",
    "4.3.1-beta.1": "2022-09-14T07:57:46.417Z",
    "4.4.0-beta.1": "2022-09-19T08:11:51.341Z",
    "5.0.0-beta.1": "2022-09-19T11:02:17.650Z",
    "4.3.2": "2022-09-19T17:48:16.992Z",
    "4.4.0": "2022-09-20T12:12:23.684Z",
    "5.0.0-beta.2": "2022-09-22T00:42:01.293Z",
    "5.0.0-beta.3": "2022-09-25T09:51:17.253Z",
    "5.0.0-beta.4": "2022-09-29T03:13:48.004Z",
    "5.0.0-beta.5": "2022-09-29T03:53:34.236Z",
    "5.0.0-beta.6": "2022-09-29T11:57:07.629Z",
    "4.4.1": "2022-10-03T11:03:28.128Z",
    "5.0.0-beta.7": "2022-10-04T16:52:26.187Z",
    "5.0.0-beta.8": "2022-10-05T07:44:50.491Z",
    "5.0.0-beta.9": "2022-10-13T03:42:08.452Z",
    "5.0.0-beta.10": "2022-10-17T04:29:05.244Z",
    "5.0.0-beta.11": "2022-10-20T11:37:51.691Z",
    "5.0.0-beta.12": "2022-11-08T16:48:25.475Z",
    "5.0.0-beta.13": "2022-11-15T12:27:02.856Z",
    "5.0.0-beta.14": "2022-11-16T10:35:35.547Z",
    "5.0.0-beta.15": "2022-11-26T08:39:23.520Z",
    "5.0.0-beta.16": "2023-01-26T05:40:53.027Z",
    "5.0.0": "2023-01-29T06:37:38.031Z",
    "5.0.1": "2023-02-02T07:35:39.959Z",
    "5.0.2": "2023-02-04T23:22:57.024Z",
    "5.0.3": "2023-02-06T00:31:05.954Z",
    "5.0.4": "2023-02-06T01:07:37.132Z",
    "5.0.5": "2023-03-07T05:21:35.133Z",
    "5.0.6": "2023-03-11T03:07:21.561Z",
    "5.0.7": "2023-03-21T03:05:03.344Z",
    "5.0.8": "2023-04-15T02:29:09.931Z",
    "6.0.0-next.1": "2023-07-15T15:27:57.324Z",
    "6.0.0-next.2": "2023-07-17T02:29:13.652Z",
    "6.0.0-next.3": "2023-07-17T03:13:31.790Z",
    "6.0.0-next.4": "2023-07-21T00:52:43.656Z",
    "6.0.0-next.5": "2023-07-21T04:06:44.428Z",
    "6.0.0-next.6": "2023-07-21T06:32:51.275Z",
    "6.0.0-next.7": "2023-07-24T12:15:40.345Z",
    "6.0.0": "2023-07-30T14:05:48.629Z",
    "6.0.1": "2024-02-23T11:50:48.962Z"
  },
  "maintainers": [
    {
      "name": "jonaskello",
      "email": "jonas.kello@gmail.com"
    },
    {
      "name": "rebeccastevens",
      "email": "rebecca.stevens@outlook.co.nz"
    }
  ],
  "description": "ESLint rules to disable mutation and promote fp in TypeScript.",
  "homepage": "https://github.com/eslint-functional/eslint-plugin-functional#readme",
  "keywords": [
    "eslint",
    "eslint plugin",
    "fp",
    "functional",
    "functional programming",
    "immutability",
    "immutable"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eslint-functional/eslint-plugin-functional.git"
  },
  "contributors": [
    {
      "name": "Jonas Kello"
    }
  ],
  "author": {
    "name": "Rebecca Stevens",
    "email": "rebecca.stevens@outlook.co.nz"
  },
  "bugs": {
    "url": "https://github.com/eslint-functional/eslint-plugin-functional/issues"
  },
  "license": "MIT",
  "readme": "<div align=\"center\">\n\n![eslint-logo](docs/assets/eslint-functional-logo.png?sanitize=true)\n\n# eslint-plugin-functional\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-functional.svg?style=flat)](https://www.npmjs.com/package/eslint-plugin-functional)\n[![Release](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml/badge.svg)](https://github.com/eslint-functional/eslint-plugin-functional/actions/workflows/release.yml)\n[![Coverage Status](https://codecov.io/gh/eslint-functional/eslint-plugin-functional/branch/main/graph/badge.svg)](https://codecov.io/gh/eslint-functional/eslint-plugin-functional)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat)](https://github.com/semantic-release/semantic-release)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat)](https://github.com/prettier/prettier)\n[![MIT license](https://img.shields.io/github/license/eslint-functional/eslint-plugin-functional.svg?style=flat)](https://opensource.org/licenses/MIT)\n[![GitHub Discussions](https://img.shields.io/github/discussions/eslint-functional/eslint-plugin-functional)](https://github.com/eslint-functional/eslint-plugin-functional/discussions)\n\nAn [ESLint](http://eslint.org) plugin to disable mutation and promote functional programming in JavaScript and TypeScript.\n\n</div>\n\n## Donate\n\n[Any donations would be much appreciated](./DONATIONS.md). 😄\n\n### Enterprise Users\n\n`eslint-plugin-functional` is available as part of the Tidelift Subscription.\n\nTidelift is working with the maintainers of `eslint-plugin-functional` and a growing network of open source maintainers to ensure your open source software supply chain meets enterprise standards now and into the future.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-eslint-plugin-functional?utm_source=npm-eslint-plugin-functional&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Getting Started\n\n[See our getting started guide](./GETTING_STARTED.md).\n\n## Rulesets\n\nThe following rulesets are made available by this plugin:\n\nPresets:\n\n- **Strict** (`plugin:functional/strict`)\\\n  Enforce recommended rules designed to strictly enforce functional programming.\n\n- **Recommended** (`plugin:functional/recommended`)\\\n  Has the same goal as the `strict` preset but a little more lenient, allowing for functional-like coding styles and nicer integration with non-functional 3rd-party libraries.\n\n- **Lite** (`plugin:functional/lite`)\\\n  Good if you're new to functional programming or are converting a large codebase.\n\nCategorized:\n\n- **Currying** (`plugin:functional/currying`)\\\n  JavaScript functions support syntax that is not compatible with curried functions. To enforce currying, this syntax should be prevented.\n\n- **No Exceptions** (`plugin:functional/no-exceptions`)\\\n  Functional programming style does not use run-time exceptions. Instead expressions produces values to indicate errors.\n\n- **No Mutations** (`plugin:functional/no-mutations`)\\\n  Prevent mutating any data as that's not functional\n\n- **No Other Paradigms** (`plugin:functional/no-other-paradigms`)\\\n  JavaScript is multi-paradigm, allowing not only functional, but object-oriented as well as other programming styles. To promote a functional style, prevent the use of other paradigm styles.\n\n- **No Statements** (`plugin:functional/no-statements`)\\\n  In functional programming everything is an expression that produces a value. JavaScript has a lot of syntax that is just statements that does not produce a value. That syntax has to be prevented to promote a functional style.\n\n- **Stylistic** (`plugin:functional/stylistic`)\\\n  Enforce code styles that can be considered to be more functional.\n\nOther:\n\n- **All** (`plugin:functional/all`)\\\n  Enables all rules defined in this plugin.\n\n- **Off** (`plugin:functional/off`)\\\n  Disable all rules defined in this plugin.\n\n- **External Vanilla Recommended** (`plugin:functional/external-vanilla-recommended`)\\\n  Configures recommended [vanilla ESLint](https://www.npmjs.com/package/eslint) rules.\n\n- **External Typescript Recommended** (`plugin:functional/external-typescript-recommended`)\\\n  Configures recommended [TypeScript ESLint](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin) rules. Enabling this ruleset will also enable the vanilla one.\n\nThe [below section](#rules) gives details on which rules are enabled by each ruleset.\n\n## Rules\n\n<!-- begin auto-generated rules list -->\n\n💼 Configurations enabled in.\\\n⚠️ Configurations set to warn in.\\\n🚫 Configurations disabled in.\\\n☑️ Set in the `lite` configuration.\\\n✅ Set in the `recommended` configuration.\\\n🔒 Set in the `strict` configuration.\\\n🎨 Set in the `stylistic` configuration.\\\n🔧 Automatically fixable by the [`--fix` CLI option](https://eslint.org/docs/user-guide/command-line-interface#--fix).\\\n💡 Manually fixable by [editor suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).\\\n❌ Deprecated.\n\n### Currying\n\n| Name                                                         | Description                    | 💼                           | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :----------------------------------------------------------- | :----------------------------- | :--------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [functional-parameters](docs/rules/functional-parameters.md) | Enforce functional parameters. | ☑️ ✅ 🔒 ![badge-currying][] |     |     |     |     |     |\n\n### No Exceptions\n\n| Name                                                     | Description                                            | 💼                                | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :----------------------------------------------------- | :-------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-promise-reject](docs/rules/no-promise-reject.md)     | Disallow try-catch[-finally] and try-finally patterns. |                                   |     |       |     |     |     |\n| [no-throw-statements](docs/rules/no-throw-statements.md) | Disallow throwing exceptions.                          | ☑️ ✅ 🔒 ![badge-no-exceptions][] |     |       |     |     |     |\n| [no-try-statements](docs/rules/no-try-statements.md)     | Disallow try-catch[-finally] and try-finally patterns. | 🔒 ![badge-no-exceptions][]       |     | ☑️ ✅ |     |     |     |\n\n### No Mutations\n\n| Name                                                                         | Description                                                     | 💼                               | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------------- | :-------------------------------------------------------------- | :------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [immutable-data](docs/rules/immutable-data.md)                               | Enforce treating data as immutable.                             | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [no-let](docs/rules/no-let.md)                                               | Disallow mutable variables.                                     | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     |     |     |     |\n| [prefer-immutable-types](docs/rules/prefer-immutable-types.md)               | Require function parameters to be typed as certain immutability | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  | 💡  |     |\n| [prefer-readonly-type](docs/rules/prefer-readonly-type.md)                   | Prefer readonly types over mutable types.                       |                                  |     |     | 🔧  |     | ❌  |\n| [type-declaration-immutability](docs/rules/type-declaration-immutability.md) | Enforce the immutability of types based on patterns.            | ☑️ ✅ 🔒 ![badge-no-mutations][] |     |     | 🔧  |     |     |\n\n### No Other Paradigms\n\n| Name                                                     | Description                                                               | 💼                                     | ⚠️  | 🚫    | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------- | :------------------------------------------------------------------------ | :------------------------------------- | :-- | :---- | :-- | :-- | :-- |\n| [no-classes](docs/rules/no-classes.md)                   | Disallow classes.                                                         | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-mixed-types](docs/rules/no-mixed-types.md)           | Restrict types so that only members of the same kind are allowed in them. | ☑️ ✅ 🔒 ![badge-no-other-paradigms][] |     |       |     |     |     |\n| [no-this-expressions](docs/rules/no-this-expressions.md) | Disallow this access.                                                     | 🔒 ![badge-no-other-paradigms][]       |     | ☑️ ✅ |     |     |     |\n\n### No Statements\n\n| Name                                                                 | Description                                    | 💼                                | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :------------------------------------------------------------------- | :--------------------------------------------- | :-------------------------------- | :-- | :-- | :-- | :-- | :-- |\n| [no-conditional-statements](docs/rules/no-conditional-statements.md) | Disallow conditional statements.               | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-expression-statements](docs/rules/no-expression-statements.md)   | Disallow expression statements.                | ✅ 🔒 ![badge-no-statements][]    |     | ☑️  |     |     |     |\n| [no-loop-statements](docs/rules/no-loop-statements.md)               | Disallow imperative loops.                     | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n| [no-return-void](docs/rules/no-return-void.md)                       | Disallow functions that don't return anything. | ☑️ ✅ 🔒 ![badge-no-statements][] |     |     |     |     |     |\n\n### Stylistic\n\n| Name                                                                   | Description                                                            | 💼  | ⚠️  | 🚫  | 🔧  | 💡  | ❌  |\n| :--------------------------------------------------------------------- | :--------------------------------------------------------------------- | :-- | :-- | :-- | :-- | :-- | :-- |\n| [prefer-property-signatures](docs/rules/prefer-property-signatures.md) | Prefer property signatures over method signatures.                     | 🎨  |     |     |     |     |     |\n| [prefer-tacit](docs/rules/prefer-tacit.md)                             | Replaces `x => f(x)` with just `f`.                                    |     | 🎨  |     |     | 💡  |     |\n| [readonly-type](docs/rules/readonly-type.md)                           | Require consistently using either `readonly` keywords or `Readonly<T>` | 🎨  |     |     | 🔧  |     |     |\n\n<!-- end auto-generated rules list -->\n\n[badge-currying]: https://img.shields.io/badge/-currying-red.svg\n[badge-lite]: https://img.shields.io/badge/-lite-green.svg\n[badge-no-exceptions]: https://img.shields.io/badge/-no--exceptions-blue.svg\n[badge-no-mutations]: https://img.shields.io/badge/-no--mutations-orange.svg\n[badge-no-other-paradigms]: https://img.shields.io/badge/-no--other--paradigms-yellow.svg\n[badge-no-statements]: https://img.shields.io/badge/-no--statements-purple.svg\n\n## External Recommended Rules\n\nIn addition to the above rules, there are a few other rules we recommended.\n\nThese rules are what are included in the _external recommended_ rulesets.\n\n### Vanilla Rules\n\n- [no-var](https://eslint.org/docs/rules/no-var)\\\n  Without this rule, it is still possible to create `var` variables that are mutable.\n\n- [no-param-reassign](https://eslint.org/docs/rules/no-param-reassign)\\\n  Don't allow function parameters to be reassigned, they should be treated as constants.\n\n- [prefer-const](https://eslint.org/docs/rules/prefer-const)\\\n  This rule provides a helpful fixer when converting from an imperative code style to a functional one.\n\n### Typescript Rules\n\n- [@typescript-eslint/prefer-readonly](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-readonly.md)\\\n  This rule is helpful when working with classes.\n\n- [@typescript-eslint/switch-exhaustiveness-check](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/switch-exhaustiveness-check.md)\\\n  Although our [no-conditional-statements](./docs/rules/no-conditional-statements.md) rule also performs this check, this rule has a fixer that will implement the unimplemented cases which can be useful.\n\n## Contributing\n\n[See our contributing guide](./CONTRIBUTING.md).\n\n## Prior work\n\nThis project started off as a port of [tslint-immutable](https://github.com/jonaskello/tslint-immutable) which was originally inspired by [eslint-plugin-immutable](https://github.com/jhusain/eslint-plugin-immutable).\n",
  "readmeFilename": "README.md"
}