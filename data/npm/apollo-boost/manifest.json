{
  "_id": "apollo-boost",
  "_rev": "115-0d0d919bd5f7103ba1a29587ba340ed4",
  "name": "apollo-boost",
  "dist-tags": {
    "latest": "0.4.9",
    "alpha": "0.3.0-alpha.12",
    "beta": "0.4.0-rc.3",
    "next": "0.3.0-rc.3",
    "test": "0.4.9-test.0"
  },
  "versions": {
    "0.1.0": {
      "name": "apollo-boost",
      "version": "0.1.0",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache-inmemory": "^1.1.8",
        "apollo-client": "^2.2.4",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.3",
        "@types/jest": "21.1.10",
        "apollo-cache": "^1.1.3",
        "browserify": "15.2.0",
        "graphql": "0.12.3",
        "jest": "20.0.4",
        "lodash": "4.17.4",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.9.1",
        "typescript": "2.5.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.0",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "peggyrayzis",
        "email": "peggyrayzis@gmail.com"
      },
      "dist": {
        "integrity": "sha512-Fgn7rMyv8iv1dF3nwhyO8daYonO+ugjxRouwLD2i9aluQHnbVc3Q57PX8g6XziYlB1SaLj4ByPTM28/i2rqXcA==",
        "shasum": "14383527f823852e9de2cd97fcea17aa543ab27d",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.0.tgz",
        "fileCount": 11,
        "unpackedSize": 23023,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD5+7rPAMqJBXHtwFTVH+nE0YzKoDdj31SPtkpACDS3jQIhAN2AdXusW/X+Mc2VlEbUmJK72Xs2RyZH5FkqT78Y1COr"
          }
        ]
      },
      "maintainers": [
        {
          "name": "peggyrayzis",
          "email": "peggyrayzis@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.0_1518639401771_0.6010767730260063"
      },
      "_hasShrinkwrap": false
    },
    "0.1.1": {
      "name": "apollo-boost",
      "version": "0.1.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache-inmemory": "^1.1.9",
        "apollo-client": "^2.2.5",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.3",
        "@types/jest": "21.1.10",
        "apollo-cache": "^1.1.4",
        "browserify": "15.2.0",
        "graphql": "0.12.3",
        "jest": "20.0.4",
        "lodash": "4.17.4",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.9.1",
        "typescript": "2.5.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.1",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "peggyrayzis",
        "email": "peggyrayzis@gmail.com"
      },
      "dist": {
        "integrity": "sha512-ZuMqN6NbuvI3oEGPJ4Mfih1vMpRDYkyVKQb9BO9FbET9jAVH07cKG1P+3YDH/rChck3ljboHP4lVNDOPRoFM6A==",
        "shasum": "162688f695fb5d28afaab74d4e997709901460ab",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.1.tgz",
        "fileCount": 11,
        "unpackedSize": 23363,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDWtUNkvtZu7WwyJ0sb1l7tHbSTbgv281j7Wxn01w4TlAIhAJ7ZdeD72qT/jamD0/NXQ7DubYwfOgrgfn74UwcdIcyo"
          }
        ]
      },
      "maintainers": [
        {
          "name": "peggyrayzis",
          "email": "peggyrayzis@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.1_1518652591517_0.864770507666933"
      },
      "_hasShrinkwrap": false
    },
    "0.1.2": {
      "name": "apollo-boost",
      "version": "0.1.2",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache-inmemory": "^1.1.10",
        "apollo-client": "^2.2.6",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.4",
        "@types/jest": "21.1.10",
        "apollo-cache": "^1.1.5",
        "browserify": "15.2.0",
        "graphql": "0.13.1",
        "jest": "20.0.4",
        "lodash": "4.17.5",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.9.1",
        "typescript": "2.5.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "mapCoverage": true
      },
      "_id": "apollo-boost@0.1.2",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "peggyrayzis",
        "email": "peggyrayzis@gmail.com"
      },
      "dist": {
        "integrity": "sha512-ZfHvRt+xX26F0KxKYbBk3gtImY/Lsajvy6KpXPlWvxMJ7yTichyqnzibOZnLQw0anPsU9OYJWmPkNuHYneqw9g==",
        "shasum": "3eab9ab8d68b6f89620165dc0f8049afdd35353c",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.2.tgz",
        "fileCount": 11,
        "unpackedSize": 23041,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIG24bGUtcTgMqPpgtLJgRhSdBobIzMbq6WI0DA/WMHACAiAGKcHEogrQ/W/NA7A4tNbrbmnH//MyNECkhhotCsCCpA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "peggyrayzis",
          "email": "peggyrayzis@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.2_1520355751172_0.8560700944854482"
      },
      "_hasShrinkwrap": false
    },
    "0.1.3": {
      "name": "apollo-boost",
      "version": "0.1.3",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache-inmemory": "^1.1.11",
        "apollo-client": "^2.2.7",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.4",
        "@types/jest": "21.1.10",
        "apollo-cache": "^1.1.6",
        "browserify": "15.2.0",
        "graphql": "0.13.1",
        "jest": "20.0.4",
        "lodash": "4.17.5",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.9.1",
        "typescript": "2.5.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "mapCoverage": true
      },
      "_id": "apollo-boost@0.1.3",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "peggyrayzis",
        "email": "peggyrayzis@gmail.com"
      },
      "dist": {
        "integrity": "sha512-a7vlKjbrlWnwE6ANsd8mnTZnt9NfnJ4+xKYa0gdmYqv8X+3SvXNbC3GGhV1E/WtLgGwKiHdQy4CH6qZV/0pkBg==",
        "shasum": "5f83af503e5482811867341d2e28cffd42da6bae",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.3.tgz",
        "fileCount": 11,
        "unpackedSize": 23065,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCX6+/vadpNmIxidSsem/lRsAVX5jkFA5g6pz+EzGhTXQIgVTqANcgg8hsTZcMCxYhV06aAwrUhHVtYiJVwBPswNOc="
          }
        ]
      },
      "maintainers": [
        {
          "name": "peggyrayzis",
          "email": "peggyrayzis@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.3_1520962055072_0.2491978272251183"
      },
      "_hasShrinkwrap": false
    },
    "0.1.4": {
      "name": "apollo-boost",
      "version": "0.1.4",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache-inmemory": "^1.1.12",
        "apollo-client": "^2.2.8",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.5",
        "@types/jest": "21.1.10",
        "apollo-cache": "^1.1.7",
        "browserify": "15.2.0",
        "graphql": "0.13.2",
        "jest": "20.0.4",
        "lodash": "4.17.5",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.9.1",
        "typescript": "2.5.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.4",
      "_npmVersion": "5.8.0",
      "_nodeVersion": "9.4.0",
      "_npmUser": {
        "name": "jbaxleyiii",
        "email": "james@meteor.com"
      },
      "dist": {
        "integrity": "sha512-CQ/ZXoR/dXPL1KqRzDHRK7uXix3PjtBb2V4c89xQkdBkY3SGoM9uq9+qISDAwLabB8/xRG2a/9RXCoriu7L0VQ==",
        "shasum": "c17ce6cd17f5c2859e06880aab9af0265fc929e2",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.4.tgz",
        "fileCount": 11,
        "unpackedSize": 23046,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD2z/Vw6FWEhggz0bXb2QN4hbfKL5Kf4N+ohOXMJc6AlAIhALGC0tX8Nt4KxvQ3V30lvVlz9XxildACyEBpwOcTLelr"
          }
        ]
      },
      "maintainers": [
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.4_1522071552236_0.36819576168811174"
      },
      "_hasShrinkwrap": false
    },
    "0.1.5": {
      "name": "apollo-boost",
      "version": "0.1.5",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache-inmemory": "^1.2.0",
        "apollo-client": "^2.3.0",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "21.1.10",
        "apollo-cache": "^1.1.8",
        "browserify": "15.2.0",
        "graphql": "0.13.2",
        "jest": "20.0.4",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.9.1",
        "typescript": "2.5.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.5",
      "_npmVersion": "5.8.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-Fjf7tKxrltG9txeIPTDTdkmcHgCNweLAannR4bDU0eUarUMzscwKe5Qn2QNl74JKjWi5OC/0A7BXKPwDWJ/oow==",
        "shasum": "21e9b4b37e514b997a5e53d2f224d31ad69c9b57",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.5.tgz",
        "fileCount": 11,
        "unpackedSize": 23046,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa6gWFCRA9TVsSAnZWagAAU/wQAJ1+sG/1ab07VKVDKR7/\n3dpL795oAAIK7Dr9ULPoYqHCIlh5Y2lGwg91FG6MWY53dMTC3H9IrGv5EMuZ\ni4NdqvEJZ6Qqb3lZaYKbieiPT7ed5iEAZl1P0oJD9mG3kQMpb+tn0kK5gFAo\nc0AbiI7YpTsGIWJXTjM1c/8zju24xXfCnS1j63VT6PpGSCNDHG7SYPLQt7qd\nZ65Nuyc+N6BJ/zzVhrgAo7QtQiLsPkrIpoqljf/2atjzNlvFKstXux/n3GWf\nakjev2583zor6shXNj7L/tLskK77G3WM+gSE3T8Zxee/tWaZv/48QTUEBFlr\nWpQ4jXqoOD7/oxZk0Ioqp4aV3B0p5u0EFi5IqoKl1bEwiF3mcIGd38iiOKlY\nQkuulyqUroGVgK+mqgbhaUwFEfcfEiN5Y7PnT0KngL8cug/7Op8sCqt2uWN2\nLYzfBGDaxSq4tCOyw2/XnEayDsw73EUXq/5WeggypHgqlyrxWVW1StCDYEjY\nDsoeRAaY8/jnpP55j0Xl2UqrYZKJeArrHqR7gSSm9uynd4SKb9Lp/sqABwxS\n5B2etNDASh/LdEkcnFpmrXRPKF1vcXmUB/HLZ7wqfVs70SIf8nkJ3ZkGQlOA\nqW1v5oTjxKYzfJ6YGWWJdQY24zHv6XF2ZNljrJG9bSVSOtHK18gXv4IQPdYm\n7Dks\r\n=CcpV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICJ46XJtYBQQzC5H4l/oGw0PLre3flTQxBYnat3fBp+QAiEAvajep8h6gc0ySNH6ET9HLKRM6o5Rn+qDEWXIWz1W8uc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.5_1525286276053_0.7572647636654402"
      },
      "_hasShrinkwrap": false
    },
    "0.1.6": {
      "name": "apollo-boost",
      "version": "0.1.6",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache-inmemory": "^1.2.1",
        "apollo-client": "^2.3.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "21.1.10",
        "apollo-cache": "^1.1.8",
        "browserify": "15.2.0",
        "graphql": "0.13.2",
        "jest": "20.0.4",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.9.1",
        "typescript": "2.5.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.6",
      "_npmVersion": "5.8.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-z29fxgaNV7HLCcjgS7MgqPKdMc9is1pf4gaVk2ma9JvMZEwq7d5mAc1sBSq+u6de/oUdElES6f1wc1v1HruU+A==",
        "shasum": "922d423536e408abfff816904ad2753d50feb9bf",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.6.tgz",
        "fileCount": 11,
        "unpackedSize": 23046,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa7NulCRA9TVsSAnZWagAAd+AP/RvYe5W42IwjZkAFTqSB\n2g1RYNenPvTCrfcwtu4HVdqggQBpaHvj4FoCNSG1uP9U3Vkkiw0hYgPOAx5k\nN73PDuhU6eqS9ITEV0XCF9gUxHn7etgjzGpqGTO0XTbAtkFbkDRe7IcKYHQz\nFkxWWtMW+isd4DqHOigDbK8zAeLGTPD+NduBeOg/FrSjO4Gs8AJTPESr8w6q\ndowTXJMWfgbHqJ4yqekgg3lFcqgt6tlyjLZVsfn7sYVc+tDxot/biX++DvBV\nLOH2Cy8ECk/6fUtINhfuZaHzrp5rgIgTgOJRDU4rbkxpwr5D8QOveUcn3HZV\nSelmHYvc3FiDKCujZSNuHcFj34YIOHboEtgle2eXf6e0YWfe5olYJJqpm5eJ\nCAHvwmdXUItRLu6/jAf1sXrzsZmAEnkhNVuL6BNiYNq9lvO5Fp/VV9Y/O6XM\n8ssgaxBiycPaWrOvFOpVNtMChfPAYtWLNZezY/coe/GuSRZxYccz2qPtLfIw\nKjGm82mw1evYGGDWBhyiTOVjKDpBKZ5oEwP5OpRAS0fquNDzw9FyEEaAEyyo\nrpS/RObxPhQI6MtXedjk3t/QuxZxT2Vifr4t9hTcRGRq5x7V8F0GvI/xUlbI\nfW70u+OKAHvb4+SZZP5em9bZ4Y0F90krInd96IOTpsXAoqmbwaMIQtoHCWZy\nxi8t\r\n=xqV0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCvQQz7zRRKFTWdLY9uJbhup81WVGo+TEX7Y5qZHlFInwIgDmPMXhtT32xiJjbEF/9Lff0jWgM2U7dwopKF5b78W1M="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.6_1525472163582_0.8204928567636023"
      },
      "_hasShrinkwrap": false
    },
    "0.1.7": {
      "name": "apollo-boost",
      "version": "0.1.7",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache-inmemory": "^1.2.2",
        "apollo-client": "^2.3.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-cache": "^1.1.9",
        "apollo-utilities": "^1.0.13",
        "browserify": "15.2.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.10.0",
        "typescript": "2.8.3",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.7",
      "_npmVersion": "6.0.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "hwillson",
        "email": "hugh@octonary.com"
      },
      "dist": {
        "integrity": "sha512-xGqIxmz/4T11xIbCYqO/snWqe3cHENIxKteiWj5AYcViw2qSekqx579VMTXoCYlJkdO4ilYkdc0vt/iKUMYLig==",
        "shasum": "22cd49d2257e44df9b991c606cebb8189ec8f230",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.7.tgz",
        "fileCount": 11,
        "unpackedSize": 22590,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbDgb4CRA9TVsSAnZWagAAbHMP/jd3fC5CI2ExAHPUDPcb\nhiwKKP/91s1/yKlFVBOCC/2E30pNsQ+M877921jR7oHcL31BUmf1wsb57+es\neyui7XYDI8V9OJGmqgkGKcEg/SeJhAHwhwNt+r3TWvczgJN6ucgEggaXES7D\n3iAbuNe3bJ/uAmH7r3wVGnjbD83FNrdo/BFxS0ODhKCUxMxTmy5rF0tNlOKf\nPZRfFMZgvQ2fracmSLT2dZDPNadQzw2QkoQIbd5LJbb1sf3w8TpGR1AtHHu9\nDlIt9mi58p05cRifmePlyvO4nXoJrfofGZc9HDdfxkrYFV40r/9hv7eIRgzi\nIkULYdj4lf1PKDVlX1pe/NZmu+2oXHiEI0/h9T+Ro3fqBC+7k7FG9lRilHDI\nUw819k9+DhB2RapFjRRCIeM+r5tuiXgwnHjMUEnhytTBfDpneqkMoLuXfWBw\nbQvlPL9M21G8Iol+cKGEdTZQ5wp4jySXKqmdNuOPbaOssW+hoEoa0+X3KbEG\n/4c5PPNxAeQkqffEiFdZFT+NnCi3xWMV06EtIwgLXJMYTLYymeA7Ax9LB/4B\ncsavJnKwyWJOmKX6B0ShHqichip4pUdMQWrXgfE6FWDbU7G/39rnAjH0ZMsU\nzKwtsx2qCb30r+7wqnO2Iv7A2voxm6TxBO9+vSZ/iQ6gG/j3m5jAh2dwGE8b\nSkOC\r\n=u2HR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE8ssPHyDYnsZEb+JToReipw0WdC+L3mo/S8aMets1OjAiEA+RWySyo6glwqnDwQ5nBjniey2uNMnJ7bz2O6KVTpY4Y="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.7_1527645943197_0.0014085640826826396"
      },
      "_hasShrinkwrap": false
    },
    "0.1.8": {
      "name": "apollo-boost",
      "version": "0.1.8",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.10",
        "apollo-cache-inmemory": "^1.2.3",
        "apollo-client": "^2.3.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.14",
        "browserify": "15.2.0",
        "fetch-mock": "6.4.3",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.10.0",
        "typescript": "2.8.3",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.8",
      "_npmVersion": "6.0.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-3sF6dX/9CA1m/AOCJ/IkPEQ6AKD5hmy698V2wkmZyYYJSREdHnaM+6o8a4DXwITqdONXhFT1TwYRthG6tuHEGg==",
        "shasum": "5b4947b0efd4e0ffc53947fa5f3d31b40ee0118f",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.8.tgz",
        "fileCount": 11,
        "unpackedSize": 27361,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbIPO4CRA9TVsSAnZWagAAnrsQAJGJHxLYGv9Xla/60zsJ\nD0Br/Vx6eYjZhGheFXT/iBmviTHV2Wky6V/SL3bITjYOgJvcl0jkigZAHy/O\n/t7BOyiZkW98w+rHAX3iIE5Gj+5RmUcJjKTu7GFPRXPPrJIz8bWYz/1iuAQn\ncDnNKGWHsRqMSfC+v11s2h5I8+XC4X8ErIwzJ8UosYBaeAZS1f1XVzijwjEu\nmrvpOSwvbWk9ycLdoCg0Na2s0zBJS2Js/nQat1bggLPTf5+X+oeNNbAs8B8N\n7M4FVvJuOYEa0/r46pZvAr9a+Nvu51sGTxPR1dWlvraVlzORZLk2M3S8Xfu6\nGB6sw22FDSW0J4/L87dQhMSgH7fZ8AU9tcfgJYDiOshKbn9kYU2pzNGD7Ydk\nx76wBCTbmgcAfxGP7z0rHdHza5drAnrub5TSQ/V81rSCbdxLk1FKEo9jpICb\nl/Ro+zcmKlQjLV5DHqFXYbdBiodP67i7P+Uo8r5uabRbpsAGUdEvtsUJldwT\nix81GOvY3YtLVB5bUIpQ2xfLquNgZaOM7P8F8SuDj5HZVe+ivyBu5/jUiD8a\nn7XXrbxPfIjv36ghHkpwPSKO5Eahfpcj8h3/CO6Ml4sAvHKPtIDrX56dvCTB\n0tisIWqtg1yA5Nbezvsy+oLM8itMl1rpyVgFX/Ul4huu8auKWB976CSfiaRE\nKvxr\r\n=5a3C\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB4m63C0LOE/xUCw3pCYp0E6MBktdHAwBs3mwrOO7FDmAiA7shP4lMAekEIGKUOpo1OG3/xp1R1yd7oEYdEIeGzbVQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.8_1528886198972_0.8727986975225828"
      },
      "_hasShrinkwrap": false
    },
    "0.1.9": {
      "name": "apollo-boost",
      "version": "0.1.9",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.11",
        "apollo-cache-inmemory": "^1.2.4",
        "apollo-client": "^2.3.4",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.15",
        "browserify": "15.2.0",
        "fetch-mock": "6.4.3",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.10.0",
        "typescript": "2.8.3",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.9",
      "_npmVersion": "6.0.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-OX+XyyOwUhpi9gaUeYl/3D3FDFc5v2fb0M4fzQnRPep0T5zemB9AVcoK5yLWOnn6VOKSNcfeN9iPHvCpEHjPgA==",
        "shasum": "09f446c7117cba5f105116ef903bc14fb234ed84",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.9.tgz",
        "fileCount": 11,
        "unpackedSize": 27390,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbIc4dCRA9TVsSAnZWagAAhAgQAJ5Bvu7VLIfPeVUBMyLS\nr0zsPTKSdny2QHLW7jmozGGDrKkspWi8ztF3+HOomSWFW3nO935o/CjEkUS9\nZOrVw8zdWhb8zqaTzkOCqbysZkA3EI8+lLH5hT3Vlr1VPn0vpP4a+9nnlKW2\n7b+KVJ6rO+QI3PYSnp5gB0BakeYhJ477qBYdREiqhmE8iaYVTSAI//ne0GIY\nB8H+4AqaGmlDg7CihuZY0X+ja6QI+liLfeBIiWye/KsUmg9vdUhd2DQ/WIi0\nfJ4RF85JmCZUgqSebbBrbcE00lYBw1yze7K91E8u4sQd5kc1kv+0T4s6AGXn\nOqJpy65HhYX2aYD22gIiLzGnlFGYwz4Lf7gLTaRA9HjXff+7EHEP6S1riF6t\nRVfLPvPwGL9f5ehjMooiAdFz4kup2Tn3ae3u/En5T0KCjLbZHNt7iRUOs509\nDq8Lkm1DZpRtJsKtw712qNzyK8Vm+nfKowyO0KvK19ExM4vjshq8U3RwANrC\n0Ltozk9wqvMVEkNJwiN1STi3z015M7a3h6pRGv8+1T5qj1mjiv6PgIuQsRxU\nriVhIDcZ1Dpo2LFdaiwKSfHYiLzZs90zs82iKdN+FkXJUNezrCQOGIEok9zK\npqU/NBubY+C6QV8yIebpaJq02uaPGgC+eHAyOFBfImsRrAE2R3UiTqjhMd+i\nYami\r\n=OiBf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCc0/Wrk84WcPjGU2mJPXAeoVhd4vjGcakNj7dKYzReQQIhAPh0Pt217ZdzaHtzGEqEz7D/VkhFEPOix3P5TWk2wO0i"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.9_1528942108968_0.3549358126333637"
      },
      "_hasShrinkwrap": false
    },
    "0.1.10": {
      "name": "apollo-boost",
      "version": "0.1.10",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.12",
        "apollo-cache-inmemory": "^1.2.5",
        "apollo-client": "^2.3.5",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.16",
        "browserify": "15.2.0",
        "fetch-mock": "6.4.3",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.10.0",
        "typescript": "2.8.3",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.10",
      "_npmVersion": "6.0.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-Bevaab5xqmOuxVmn8DV+7suoKP/ADX8NKzvfZhD3LgbP72MzpFXxulnP5/xSIBKn08mZvloeYGYdQkoxa7q3/Q==",
        "shasum": "154bc7ef71ae2e46e16800bd756c4c9dc8fd5998",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.10.tgz",
        "fileCount": 11,
        "unpackedSize": 27423,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbKa1zCRA9TVsSAnZWagAA5y0P/0/gaj6cbw1Vkc4Ste4d\nCk7RJkZcvOnZzfl3CEviV9TC7LAkdwe022SxrLJivuLf6IL7qTGEgw+bkVWG\nnrtvNERbyn0Zsu+P6+VpLOXWi48NZMkpBECRAWjqW6dYa9B6aya3FkU4CCVC\nQ9uhX56lzEfwZUq2T6bnqWyFXGwbYERSJFXPWDqE6WyC7J2MDN4jqul6Jtlg\n1qPqFbUFly+9GYHJ2iP8qAUKaDXn2Yj/UJnPa8v+evCmDsf+lTrK6bDTCKqC\nQoOVtScJBS5xnGOAcwcFNmZhbqw93rlSO3R0ROfzh/y1WA2puI+W3ebZOH6i\ndfiUSug3RUjPZKtk8EMplzOr2RAKvCv7Ft3jJa0a6J8aLCFkQZlZw5QPhGwz\n1DuvfDK49/V63fRLfEQ98Q/c4aKoGir1RGVU3gAXPhY7psgzD0XdO76U9t1e\nDDctCvGlnPvzlC+RKYePY7Pyc4dX0LzJbng7tpOzEuuzc4SvO5Nq/WCzz0If\nmbZQTkFsmQA0Mam18guZcejdKWIDrxjECSgdb+o2fFOiJNM7387Op4ZxSmiX\nFTqHbslbxH3y3nBw6xw7/zVMCQH4hW4LjYUowrv+KDg62zXqB1VWdElCFhGo\nMWwo9w+3JfRijfQySi+TvgCRWhCNasj4oSyg52zYCxveW4BSC2X7VfkZBaHq\nm83j\r\n=AqIz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGfZoM6phpZjn07d6M4kC37Vu7IKHrDclT4IvvUGxBqSAiBIdR3rujLws5IB4JiNOemPnG23Gupf5dhwxl3eqVPEUQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.10_1529458034490_0.46320421585777094"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.1": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13-alpha.1",
        "apollo-cache-inmemory": "^1.2.6-alpha.1",
        "apollo-client": "^2.4.0-alpha.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.0",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17-alpha.1",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-r/F0KbOW8sZ0nVkXhTo3F0OMzZjXxOGHA2nUSnqRrQMrcCyCMput+KJF4U1iDlP4cN3FdWxoEaRu09SAlWpt1g==",
        "shasum": "4c63b23914739dbe97967a0045ca551c80c1748f",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.1.tgz",
        "fileCount": 11,
        "unpackedSize": 28286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbUMqSCRA9TVsSAnZWagAAhb8P/iFP39GmUshN6x0ZoKOx\nIrybDcN6biMUujwYFZkf85aDOecGhlUM/hsgft0XQLI59elW+mSlEL+BS8Wa\n+7jGxFo5kfYtPrcYG6x68tWz5xtfPpGvTrVaLFQKDQ5M8smo0TjOp4s5KKTp\nXLUBDjEZe2yYLtYYxIM4JppXEU08+zAn76CC0PONktM/hZuQh0cZHlUcvy7D\ncPdPd7gyso7K0iiTwb33q9lUZIk/Lwv86Qj+ufRI+kDI7MA18N5Fdj2Fn3xM\nBec/Rg1e+TRhhu6XVuBP1cy5Ehnqh8+Pa9dPM5JaVzzaReWAW6eiu8LU6toB\nfD+zG+oBY3S3JlP84iT9Ahvv0ed77xd1/Cv40LHyTklTXhhwwJgY+VSMw6Cn\nSnGsmXZSUAGLLGbOaRUG+5q+ELoba9qiB/aWfotoziV1OU7fylXru3ys3bbY\n/ltVWc25eTy5mk14A7sNqndS8S0ikVgZu0uE4frsMsGchtdLZ51rIXhORKgW\nGCGLKu54aZnjbzq06Y03+pfGDasa5mP1vKtHl2Pvxn71vViGJl8+8FjxBrsU\ny7RnGDmM0oEpT9nxHHHiXVGg+TYF7r+oz/RgaJVtK332s+vKP9+9J0Am6Fpz\n39RI5Ifc7ZvN2X6XJirlmqrp39C68a5UG85xYwQd5PmcBKLPjxfkvUciTVeR\n3PMA\r\n=44o3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCEs7x6OO9CQbgO9invcqxFbmDZ4/Mvr3V6VChGTne6bQIhAOYFOPqi1N0XRumNgcIVMjZVCyleWsUHK1QS9COEZhoZ"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.1_1532021393940_0.531041143874939"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.2": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.2",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13-alpha.2",
        "apollo-cache-inmemory": "^1.2.6-alpha.2",
        "apollo-client": "^2.4.0-alpha.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.0",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17-alpha.2",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.2",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-C44qz3ilyKiM3k+1fmqlJaPDXPqzpG7PI69YUfj88uQ4xBZTZU3nLQt34YlWU1subDXBJUl0K80wdYw9hzQSIg==",
        "shasum": "362e66daaa5331fea4593900121877a44108f1ad",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.2.tgz",
        "fileCount": 11,
        "unpackedSize": 28286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbVd61CRA9TVsSAnZWagAAzVwP/ivJTy7tFQDknDtRC0Gp\n0/sgd8irnsmlhgeUMWnz90og6MLTC2yfuHYj50FxnlVldoMSdnY398mZP3OA\nTuaZDhcooKD73afW3dEgerM+vuhXYe9gbDzNh82r+hXjA+ID2YWaJ4YxNamV\nV+2g6Smw1YyyJVnT7yM8G8X3x8SmDxAiflXtgjHbGj7hR3ZUeOZUlhyH484q\niRhz0wFaIWLi/IulKbqwAG/iB4Kwvs16ItqACITaxB/vzCob0CPz3LvmLdKm\nanFNDQtLXAD4MZNFlDMs9ZmumL/st23eReuC18ckZm6feKSZazmX2zru62GU\n7Egc1isI200fYNORt5ZB2pksS2JFYJVGsyf/G+BrKOstFLy7vvtF7nORSuda\nXgoGeBpGnNBNnwsrDHf+xtDZOgKxkYAjo3sj0fFQBI7+EYZacEisDH+Mt7Ys\nEjUhKOnyYQ9xp1VjNxhqUgnZ+8cchXKzCUuLqI2RUdpiypOG54+vKgsRbbN5\nU/qmAIEr1iHHVL2gkc1if8TxF+/3/1chChVEMKtKfmbp2hIAqdAlcn48jI/M\n92BuVRHLIiTwsozUIPGL6nN+6I+bIrp4gCQLZke/wI6x1pvSqtbk5A0QF3T2\npoDrbj+eZ2+fxzAE5jsJ1LRbLYygSkJo485dbiDR2nYXuin/UNXOGAEIjU3X\nvmHR\r\n=HpPS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCv+jimBK3zdMfZxL8xAYSzTZMjMR44jTk4XOjb2yY0SQIhAP/rEDL40dYBqTSD6Gx3C+muzN/hVZpW5ucv7TBjqvlA"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.2_1532354229710_0.5232233813522982"
      },
      "_hasShrinkwrap": false
    },
    "0.1.11": {
      "name": "apollo-boost",
      "version": "0.1.11",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13",
        "apollo-cache-inmemory": "^1.2.6",
        "apollo-client": "^2.3.6",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.1",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.11",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-ZpoBvLgzayohyAlXHihKQI3PyhGgnAYjLQ1yPVrqWcQe9ETzfz41wOedsIzOrFR8ACw9Y8s3BEijl/jwefZ6Fg==",
        "shasum": "348f5e65baf409694e91869cb29151ef29482ada",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.11.tgz",
        "fileCount": 12,
        "unpackedSize": 31202,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbV4CWCRA9TVsSAnZWagAAsVAQAJaNN/j3h6x7GCDDZ14H\n0UB+Xs5Cdbu+RannrvV/q98+27skvFT0Ixee8yVvKZLcuux8QWy4lvT8yYgu\n0YaVz69M/tfBleDWkwa7yahvGkpCXy1iSVBYaRJwW9PteRNpGlXTZrYro4zF\ndWGUEpRsKMS1NO8gZMjLPdCWjnBIXxpmJ0CL8ExrvtxHk2Vf8Tjn32n6NXH5\naGVPjQcWMnhy3pOksz5uiP6bdcfxm/JVdd4oqQ/ZNRaO37j7Ii4+OpZE4oBj\nfvYpZpMxhsIcnSdkWGrQm36ZdAQAm1fnrT4mHmPBSHNHEkXAUkMae+zjdAt6\naHUCchU95ye2YCygF2GWuIR/7ZSaxBTUG+29+NXJQXb4fa+8cvaeOryc8ppI\ndn8r7nCEHtwAZxKBHe2V+Olr/yp1FhmxUTie/9U6qeBzhHdjy8MEur2nj+22\n6LIDjpeM+8KNpZxgXiORqvsse4A5tVcqwbWkiOVd8KP1EwI8mUSjcJn7gOc2\ngUJrjbgkr5ytQuFratpocqgsDywMrq3/YvILKtmOXbJNVKCj8jgWJopnIcDg\nRjjLS/DZXsefjlIAAZsfhIJIfHr1w/Sl5lWSt/vXDgbTruL//pSlteDstLHz\n9RcXn3Wm/9+LCr7LrcvyRdy53H6nb/VfARim3TIzNP3VEGiVMyjVaSZzFzS7\nQVDX\r\n=3u7U\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCC1JtuUvaMy2EeFMGvGiY+xSTvJ9IDfcAcJQUeQyqbKgIhAIMDXiODQSf3rNGH0eVmoCsK8CcO/HO/cSrtYRdZkHaG"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.11_1532461206684_0.10423552275312731"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.3": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.3",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13-alpha.3",
        "apollo-cache-inmemory": "^1.2.6-alpha.3",
        "apollo-client": "^2.4.0-alpha.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.0",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17-alpha.3",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.3",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-4aB1B+RwDU8Caoc1324VBYcI2/AARn87ZKA/h25mlsqFK4npZD4Wr6JAHy/a030Li/wxTwWvJYyXzuPEY2srpA==",
        "shasum": "050004185c09921548ea6bf8a3780f928fce42ff",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.3.tgz",
        "fileCount": 11,
        "unpackedSize": 28286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbV5tfCRA9TVsSAnZWagAA+2sP/j8IhFdp6pLN5N6knupV\nGR/xQ9z+cV56acm2R0DlDMS3z0+ycfctaw13CjX/qEdTC1Upg3/1pC8Eo413\nwwYLuprC4/oxeZ8kR8THsrLTLmp2NKRyhFy74DOr3q8DUW1jniI8IzImmM1w\nfvlwXUKMKjlQG6pQ37+FrXXTScjA7aPgOxyFPFQIA+p0QlU2Yvr5PlXyN+SZ\nQ2wSVMwO3TPfy+3fQLn0EUVsV8FdqupsYy6O7DyouzN7nBop0JoFxOZ4MiiC\ni9K/XpkIK9Ax0oMPlUDkOuc2SK962nZQEPCGz38m+DLNHwKM8EZzisgseFl8\n44FWbP9szsX1vm7VVCPDFHF1cMHZ868vR3Rx6tU+J8UqwzYgo3pTMFlmjb4i\nGf18mctXl0SilJ719ZQ/nfLY8ZXLwXl3letEPN9Ng+0ov4L9c9rzkeEHnXK9\nA5pmw6Dsa8hf05drjfzKZlB3v2BdNtzjszhBCFyW8ZbFa1N8yCaN0EOxkQ7D\npxRpaFc7YuQRR3yWh5uYuLabzS1FJgxHK0kKgrKd/nLZbeVMJAeqWj02sNVs\n39H00LQT6+OLd7yJ0hDXbzPktaVXpi6+PTxpKgtuxV8ztk07LXGnNneZSFe1\nK7VUliHfIT6Z8e1R3CMDnyO2Po4+J5w24UJvPeyN0umWS7Fh9GKnbOSthEyr\nNpj/\r\n=n/5q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDlPE3d+BMnbkON9fCNQFfbPexKzF7wr1NN9k0L+194lAIgCg3177OB8b7SXN13wCi29l7T7tcNNYlvDw4YRSPZECM="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.3_1532468063794_0.11664581927775397"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.4": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.4",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13-alpha.4",
        "apollo-cache-inmemory": "^1.2.6-alpha.4",
        "apollo-client": "^2.4.0-alpha.4",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.0",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17-alpha.4",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.4",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-rBrJ9oZAooCEl1e1vz8sNwB35HnDkATvLhZwfNcshzWDDIot2ZgOxXTw5K7OH7KCWorvCAnivvoFROgXCp88bA==",
        "shasum": "61f97c6733e1efa9f7e7a327b7b52d0811910e8f",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.4.tgz",
        "fileCount": 11,
        "unpackedSize": 28286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbV8fwCRA9TVsSAnZWagAAJPwQAJPVpm5KyShEzmcp7HtP\nGwkNhtyLSTnp3Q15/VK9XyTFXHezcY7OA1N3iDmrcZRFQbE8LTT10kLf6udK\nVlULBLD3VJDeF2DHhIpzHHuyCBzlaLI7EtJXm5JlhkOIuXTcsMqByOw+iAy1\nOx/y7f7YaiX7mzjpWga5hZdTFOk61avqZ+VdcZFEOQQXVTZ/rIKJsin2SwVX\n/amvxmKzNUbn4qzFisxD1/cshxPd1UujC9/JKFpQHUwnPZh4/LYY3G+L2lq1\nMHdW7MXWm4YGrck3AGHd2Zt9TLCtw6FwdCsw8LVtiR4l/fUy5C+zTgFa59rq\nVhfYI9RYKWY680Q3XLyUhPdUbaUhW4sKQxq8087uMSnLwp/NNJeMzmxVXb+p\n+NEs0Q0SXdnAGMdE9dE71Omf7wJwAHY4xrhwqPCExh+0fzBLmYfyNOK1+LJW\n2yTOy4uZW3kyNMBJfNKC9I8no7/mWasmaj3vnQdlA1nuxxE3PWCSOdiPkgSG\nS5xYFDJaWra8XtMX77gtJVcyaR8G1WOQBZuBh1uFgZtiNUGMsOzJVPJuk5gW\nQIenbbo89tgSMvnrrsHj/NFE/WoajeTVGWaVfa9qQfkCQUd5TuAS+LbJSPNS\nDZMeReBNrO4/Ar9clKVZSiVGxhKZKf6OWwEGgyGorliidOFjCj6GnEKzNz6M\nB+M+\r\n=9LlP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD7bh3C6KoOYkWRQnDWINImJb0G5zHeFW0urP/wMzveFgIhAMySzuwrfdZdea9Umyv145n6jJDThyeeuLEA1DhkcBQd"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.4_1532479472368_0.952862299959762"
      },
      "_hasShrinkwrap": false
    },
    "0.1.12": {
      "name": "apollo-boost",
      "version": "0.1.12",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13",
        "apollo-cache-inmemory": "^1.2.6",
        "apollo-client": "^2.3.7",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.1",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "_id": "apollo-boost@0.1.12",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-uv43RVUpuQFPLbNMoCStyipbZn46Qc2rN3U5PFQOAP/lKVKgkpNGJx1+Mwv267RFxOg0ZPifmyivTaStim9nhA==",
        "shasum": "f595ccdc0adb5dcd6313cd9f0bf7187de2eb2f14",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.12.tgz",
        "fileCount": 12,
        "unpackedSize": 31202,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbV9PTCRA9TVsSAnZWagAAHaEP/R+nXBb0pzsouWyi+bSu\nEWP/hsSV8v9DULZ6QCoQ0h1h0SjZoJ5iTus8quFCa/99I+ErLo5gx8SWjlz5\nTrkaUO/mEZXfuLFT8bFPLS5cTmUjdWx52mvxa+4PqyvdfksKjzYtz+Ja0uxU\nWmfx4MjCvrMG6JtWwC3+WMikOP6ep1OMFUctBSHk++RVrWtdoKWq/dUTg5AU\n/l3RkZcQ0N1bYUK+8Yd8rUefztg5SCxx00XJ6B/1haos3W3DVHROUBnoo/pg\nF5zLG8bHf+UAG1BPTf9LfDMympUlFCQMjkbkpmB7x1cc8IjzI7fxNjalqcYf\nQ0pJ8FeNqGF+AbZFKLxgdE6fkAhrIQXcOLYrOKu+J7t4yHMnx2E3ZPMtYeGv\no2Km7PQ/DR2/hYPtTYETOKVFdhnTgcCBJd3hv1Dwpkh5m+1pemqqnLKXU7sM\nNHCfvn0xGRV+5ejwf0dUxFmFDojkFoIIGgNsCaxwQOJfDpyrcNx4zUiVsvu/\nb0KIw7xqcE4hZxIqUIy9Efs4dGBRnENx4fLdbt3vzGSLwfNKqCHmsSkQmdSC\ntadko7+13gsK4Wo7dloVhMXdB8hxHgAxYHJ3U+nbu8oaj7UC/pvml/AyqeLA\nwWcixcNZt4aVpj/v4YC0me2dvx3zRkPi/dKUTBSeNHUnbPWfyNIQrjDf2qYR\nPIbq\r\n=UI1A\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICqTEVftaNL4A1dp1m8FkBpBkqVFC8AHqU2Fxa1p8QwFAiAq/fm1b0zTQxUYV90TFb2OyM9cy+g1JGQhyb6k0hjTBw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.12_1532482515381_0.8002476173867163"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.5": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.5",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13-alpha.4",
        "apollo-cache-inmemory": "^1.2.6-alpha.4",
        "apollo-client": "^2.4.0-alpha.5",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.2",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17-alpha.4",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.5",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-NqtmUxVATWEfA/GwzTZwBqz8Fb7i/sAgs2WuuI9lkPuwcYG2ujcV64YFDcGiKjhrAXEKVgUYyYUHRJLXB3Q6Zw==",
        "shasum": "c1e82539a6331285f94ab502d7c82074fb24ac55",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.5.tgz",
        "fileCount": 11,
        "unpackedSize": 28286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWAGFCRA9TVsSAnZWagAA15wP/23Zb/IZsC9d91avBlNO\n8xt0BSmiBWtuyIqn7FFuCZOw2TgWJxpXfN+/C5sxloU1zTCSaiAIeoUy9o34\n8yeq3fqZsiLjMZxNm7DeG8+0gw/RaKJt5t8a1YH5OD02lYDHMJc31EwgslKe\naUs5ieSDolKp4+D6d7N484L9EvyNvW8g12i3lfaSemQ1x6sc3dMHug27vJSg\njyDKN8/rOT+XuAwHx0K79gzboYpjg9P8Gok0zqrsYYwkokP34knUGJRLNYwi\nQ7A70i5Hi3zqGgHvUV1Ax9XVkAhiFMJtyBvTgSxktd1T7gxHKrJa03qoBtu2\nq+6/6EZlzqGQwoAygKOaq6Ctqs293idtzAe2pzwtWcr5nLjiBlFYkH8V5HNe\nmkEDxwrl7pjzJMRG4PKv8+GTmjdPn72NS6D4qFtfo0rzHMyqZN0ilYe0hjj4\n2Cx0njc63nzIt97luYuN7tFoiL3nlsYbvSwSaNSZLbm1v8q+M0CYox/lSJfQ\nE8tWGrY4cJmx0Nj3gtcpKCr1YGFS/WckvOlnT8B0uYe7Us1RKElpDGZc1ryS\nTIYmkGDj4IkQVSpcBS0y9dTim5/NaU52ubwVu9CMGHSHbkAVCA18fneI8n7/\nBIvWbPCns5oqXhmoHIp36nKNk5BOjDJjCegbH2aT9pLZj1db3Vj8ohml5HmL\nMU3y\r\n=ooX4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDWDlP19ZbGvOg48vV5ONNGObPX36TmNSSpfzOXVHG3rAIhAP9dYhqA4W+c2zyeo8DIJ0uQkLY6i4MaeWP46oJAzt96"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.5_1532494213099_0.8216823264886759"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.6": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.6",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13-alpha.6",
        "apollo-cache-inmemory": "^1.2.6-alpha.6",
        "apollo-client": "^2.4.0-alpha.6",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.2",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17-alpha.4",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.6",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-BOoUjna9oJPTFuMVg1fg+Z4/58CPLzkmTMn20HME7ItryghP1dHVUb7mhoU4vaEMO6LQXkrMwGvfPFFavVJdQA==",
        "shasum": "1cda643100a9c6f7c053cead67fb6ba6e207c127",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.6.tgz",
        "fileCount": 11,
        "unpackedSize": 28286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWAcUCRA9TVsSAnZWagAA8QkQAJFYS2hvzSOyiDGwrSgI\ny5IDCxccvQYM3kObyyd4yBGQjLpZbklhjPvpsx8NFkw1bQfW7Ev8DK7eiU0t\nagR+JZkA3SE0zZ4ModWoY5AMlj03TSIfVJuQ5X2E9Vps6uO6IOhRrBLH6aZ1\nYWkSx1RJTJ72Fx31qwe/Hbl4WZRt/ISfWrH1EAcOi9jpCUu39XxVZ76x3GgL\nrTt8qMhbGzxJYEiEU/XLrSpS2gE+rlTOrVE6Of/jAlifXfyymlv2pcbAhZau\nphvLiM6pxD9kOCug2mVXXxMcjUJtWK5lPD1cLAcyXO6mpkARKMSHZFyDriul\nQeZYxfOTKQta3D33kH9UzwQpEEDEfnUWr/LSFAlupkCRlbhSeug+q77gRIQM\nZYD39zoXz5/HOXEBb57q1m7dywKMQwTcs7hsilYuZT2ffwyh4qJdZeYQm1lI\n+gpVQJ90FztLwiAqcxAYQdJvhDLYOCxgOgpXcJvWiA3RVMSBN9BByj+rNppK\nhKNRVAiXZCu9ljEJkTb8ktd6PvMLm+o4I9c/e7M53iBo/Z3KS3Zlk8d0GXvZ\ndzSlkVo679wPokyZ4a/3uoHZOhAP8eNBl3JrmBS2Q2AlGGdN2xMcsPeuAsyW\nN6DSa3FTXvAG14k0577d3un4nOB6o0E+i2bI1bU4lWtQhL0d+tpKVWu0rXYE\noinD\r\n=y8RY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDNPZ9gRkQ/+N1qS2QmS/IhQPKaqtUaSSMSDE5bXbc1/QIgaNDrVc9yxz6UG1f71LRn+2N+ZbUo6Ys2zRu/EooVkyY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.6_1532495636525_0.2713004180387151"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.7": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.7",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13-alpha.7",
        "apollo-cache-inmemory": "^1.2.6-alpha.7",
        "apollo-client": "^2.4.0-alpha.7",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.2",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17-alpha.7",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.7",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-THbOxZESh67omCVmdIih/kb5730WnjwU95oHeR97N1I9Y938LRGXveFBstF5WNrjd7ea7z1F75+npkhZiBhnJw==",
        "shasum": "4394383274e8fe95a545b814c42a21546361942e",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.7.tgz",
        "fileCount": 11,
        "unpackedSize": 28286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWAouCRA9TVsSAnZWagAA368QAJlNxrDDLM5Rf9y815IS\nw/MLtPOVPboIlgASo/1PcaqJh7Yh6a9kSccP4/W5GY9Sqfr4BcMRBlgsa5wC\nmKHH3HztpkN6Ku/4uzV5klsSjWS+yuqbBIiFPe47w6mO+I665eIMDXGE4GgU\ngC4AdXFM0qsLQPpqkUjZBMqMywufI9LrYcmM7jwIT2D9QQCMk4mXR5hSmXzA\nMyvFCBR/671QisZHTKqUZCgtQOflIeOnT2I9+fCof8Ee1jips9sthhj/HgVC\nL3DL9mhrQe3eDBa/BqAPlGTDVGqH77Ji5WxZG2t86yJos9tjV/JQMCJ63egj\n931oFC9Urg4CvmvO/05I6ixdtPvHGVj0nlyqlPEPTLULCfrcK4w721b/JbYC\nC5Yc8/Vn0kKt1kNZSJXL20WKWDUpI9cnvvB35JngRSkO0wnrX4E4mOsoIdSN\nJAUOSikMo7jyNLgcA8YtFJE9S8YG3G5P5Zm95AiQYs+72pxTtb26oLAF4UE0\nGl+Bg8vpD8NVWtKZ3ol283GlUvBBY6I2E49jTxtp4wi/5sgRrcsWv4JWVhsQ\nWHsNdEso7Wrkkc+f5zSXAXNM62Osf2foRzhKNym0J9aEWFo3JZ3rGkPVRyYy\nW8MhcV2UuVlJ0Zb/bOxOjKeiZDn7mZl21959TaSyU7/AQQNNbY71To3182Sg\npACS\r\n=uMVZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAZVi/LjuKdQG/JjHHDFYRWAVubasKaGDVWapFW7BNudAiBdLZ73Rr3iCkpgZtJ8mlw0mWGmpelrXUheO1TxSHXvyw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.7_1532496430489_0.9074452027901614"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.8": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.8",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13-alpha.8",
        "apollo-cache-inmemory": "^1.2.6-alpha.8",
        "apollo-client": "^2.4.0-alpha.8",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.2",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17-alpha.8",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.8",
      "_npmVersion": "6.2.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-YevkgTn7FieFMbWi8PdYcRKxjj5k20PhdMf3gyivn6s0KTIDZEr3PBzE91sSH43/PUXCkRH/AvQ5f3W/rDsXJw==",
        "shasum": "5aba6ea0bd5d108b52afb7e99992ec794c60e30b",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.8.tgz",
        "fileCount": 11,
        "unpackedSize": 28286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWL6mCRA9TVsSAnZWagAAn8YP/RneeaGm4Uq1j7ZCm5UI\ngiCX9Io6iA5uBdUiB6G8CRiZ2pjQWlQ7AUAKDy6pQmvajVlpvHVLcM9bVJAf\n89vOXlONpqr2owhHwgl700cnWNJCD1PLl0ZSFb+kvtK6lQGiWn71+95vYxHn\n0ThQLSuM3ji/m2V4T5gKq7X+LoG9msZt0S72S2nXtL0EmsOx873Wb/aEkLTA\nlbwuhNL3BNf9ufVkpK0RFAp/i+9+3aBFJiAhZ16t9zc12iiUbkQB0IiRUi6r\nPJsATnqpJhMWApuyYmhMpzzuwpSUWfbqIcUMYNO4KRto9CN7uGVeU2NcLwd0\n7jcH7+qt2p2bDOicmLaMR7HQ5ybxTTgLwVqvBx6P6xjQC/QLrzs+SELL/I7E\nVJaPXrrsxzjdgc4I52RkYJLaisVFMrxRwgaKEzU4oVt4GxZfjPdB4ATPBg0e\na/BhxnQeZwrnkTGOcD9oyjeiicYznQszlwApXhZfcZznl3hhrfwg0kqg4sMD\n06pcu1mroHTQOxzIRtem7fO5Mul5/x4jPRn7W/C+8c+IO//XCQYxIxJXZAvr\nK1/4/u7MfDcCFqfsCyHXRI+d9O9V8TLEwTn89M+zFwaMXxdP7lEuX3gnOMYa\nz8xNUQXv1jnw98qdWxXZNlh1iTYbfvNi0IE5cVWokbwTkM/+2AnwzOPoH0sJ\nf4IS\r\n=86x8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEzYhgpi71lMFalu6iZudbZTDNb5XtbrEwoI8Vc8u/+QAiEAzpWfDrHjbbsnTmA/otL4AB0sgO0MTeN5D6fe0OetISQ="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.8_1532542630360_0.11203105312474837"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.9": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.9",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.13-alpha.9",
        "apollo-cache-inmemory": "^1.2.6-alpha.9",
        "apollo-client": "^2.4.0-alpha.9",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.2",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.17-alpha.9",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.9",
      "_npmVersion": "6.2.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-FVgCJwxKo/UbKncabSO3/leof5gunl0KOK2cPKuV/NJhSVNQw9qR+O8qIxNubb+1KxMte2FFG+aTAtmY7kItVw==",
        "shasum": "eb744c102cbf84df6a4bff7585f2846a824558d9",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.9.tgz",
        "fileCount": 11,
        "unpackedSize": 28286,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWMZ3CRA9TVsSAnZWagAApv4P/2MdMegOk2CHZiCV8PpG\nIdh+RqJvSY2vrktICqqlTDSNCjgA+ZI03KywzZKO25SycHJoEpl9kRzztVmV\nqdmNX+lGvQ/9eotoZVEcIk0e3bh6Gp/HkZ6iWT2grUxN3LuQ+sm+ScDRUR+X\nWJwgAQnRN95TXPxoQDXqWXhLBU3DYEqd+ikGkvZuuy4fxQlXccHEYeO58QTh\nSvrfVVCSoS7DyFWTm2zplYLOvtUWZYdZHZpk4sGeVeUAbmlGHvveYxlIKWeu\n8AFyOgJ0Qmw55VjXUVztht3I8sQI7nOyVmHquNJklwumqBV83WkQjTCFUssX\n08nh6GEzy+AurELdD9jAzLSu3lnsy40TGeKfIkO8Zjw9FSmI/zBGaAsQpnXx\n9pKGDXhdJxL86Odh9QAMr1gN2vV1qz3wjMIbnIiQehLiHBoHQ54uQBhOQK53\njvwiBb+jeaYo2yDY3jap6Lgd63s7gBhEMRvRYTSsHKoG77QMgbsIvgLueOcS\nROz8CtEv3tVmXr7xqPoqqaPDwTmY7MCjYDQNV6Z2zdHO6+AqROgfVSt7UkK7\nLoNIroadFfzdAdMZbZZ9RzOewfPipuQJugSapIhq7KDwMGtbO4P9+pV0bHTt\nTJValSqP9s1pFrU9ub1E/lUpMyRI207WvO4XPcGjex86Ql1tyaq365ChZ4Eg\nZUDS\r\n=3vH6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIESKLHCLDAee/R5rrDhIfZeA1ru/ynVjwebr8v1B0a5yAiEAufmWkny9km8j8H2ol8WiRQf0MVT8f6MvlsqOnBNavxA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.9_1532544631015_0.4949111606351395"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.10": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.10",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "1.1.13-alpha.10",
        "apollo-cache-inmemory": "1.2.6-alpha.10",
        "apollo-client": "2.4.0-alpha.10",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.2",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "1.0.17-alpha.10",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.10",
      "_npmVersion": "6.2.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-xN9yH4bUuJf4atn0pXrSUyVmBhUCUewnFzS+9ZcyfpJFWjQo0YLqFE07HbrCZx6y+/I0jZ3yH0iVQohOAam74g==",
        "shasum": "2507b28dd64283d650d788468018c95e40c0c1e8",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.10.tgz",
        "fileCount": 11,
        "unpackedSize": 28287,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWMqiCRA9TVsSAnZWagAASPYP/3H6ZVSFTQof0yrC0cm2\nDq7l0fG+QBJDwZ0V3JKVwX1D1I8ZaDWz6CAENrfjNrvbxVwWHI9NBK8vOwzF\npIj73+VU8j9TSynj2mWilOrIDJzmzdf72SuBizbYbTXq7KuwrqpI7Lq1gESm\n/9hzzI4ocm4y91HkkjO6Aw6QALe7nNhJHT5L+2fw9JJFPD/AgG3+bHGQDfdm\n3GTTrDCPboF39EBs3/zsVXNRh3gaipmHsmoM5ik0GiYnO2wsWYFQz3BbE/C1\nVb/u9IoaBjWIsN6vJ1vYS+ZgzCa3eqzWkrJuHU99Y7BXnjMoT4E/oNOwPCnB\nIqi2pMJsyyVbcSqWGL7K0+nPSWV3qeVHi9Pd/GFxCRnkTjoROSugkK7cHKMg\nrpq8C7dqmqbX9bsBig0X0yFbgG+yK3WrBZpaZxcMAAuMZ7zDSWdG4ZGSZFBl\nUXU/6vCAHqPPfK0HyeeGE41qU6se9PWRWshPup0S7E9bSt/c4FLiMMK+BZF1\n8vYqpYKNYHPzdFt3jODqqF9hznJdS1WKfVOfB2kABnFHke6bIHbHY/wTjcnZ\nE1oVESQUQSn+ov5htskuo7UCqYZMI2sBXVmOvK4nOdLFlmTU4Zw5vYPV+vrH\n2Ms36h8u8I69jAUeEaPVM6zXy6dIP8wXaIOtMOSr9sC3jdoUKgOze3nto8+c\nvmTr\r\n=Mi30\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIByk4j0ixcJ+yRXcDJc5i2eCVjvNZibTUKyPwIXcr/lSAiAbL6PDHp4d12Dk+yxJ7F0goYj6gGQHvgwpsku2z0MytQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.10_1532545698535_0.695691034796152"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.11": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.11",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "1.1.13-alpha.10",
        "apollo-cache-inmemory": "1.2.6-alpha.10",
        "apollo-client": "2.4.0-alpha.10",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "1.6.0-alpha.3",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "1.0.17-alpha.10",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.11",
      "_npmVersion": "6.2.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-PiwiP0n2Tmdxm2d2CjUzL2B4WINjYzKI1n3uU6thMadUP0CHzK/ynUgIE67FdfeOlfAz+xgFUnnHxeydERH5JQ==",
        "shasum": "0daae3f328143b75a2bec056226dfb0d54f7b18d",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.11.tgz",
        "fileCount": 11,
        "unpackedSize": 28287,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWlRPCRA9TVsSAnZWagAA8dYP/iiUMe5wV+adZC0GMW9N\nWsOA+qefxqqIXYz3ivbSEFrZlg9pTOGIXcNXZpu/DUeVEWK499R5VNE1WcA/\nhsV6fG7aEO5z0EPwyW/w7pHC9OMCK/fkwW5JId2sC5xeagiFG+tPMTzYpfgH\n/kH45/ZHNOsbb6h5MlGBour3WWAs6A86YwG3Jbl3n6EY6u+ymH1Lci2RYf1M\nmeq9wtQ3LGbAfj9q69w/9anA8+7V7yB4/A9boOo1NcGVmBGBMrM0ithrbRS5\n0t600qL6gtoD/0S+y5lREORhLFTl3JvkHvlFi9zcXWyadw7qoz5EUJ5wol2p\n3T+BSOGA4Z1byHuVIiNAAu3bq+26SX9zdThVtiaoi9qTPavOCfU8EK/TNBot\njBxuhWd2e1ItCEBCy51sg0Gu7mHgXNoYche3eSU9S2Sg2lvj3KYd0LPmENHX\nuqPNk2e0dBN+trCAy3DFDY5axk37ro3yU+etAR1vMNxtGfKZ2IgJLdEDjFdt\nFUSjAtH+XFQy877fWMCu2vJMdWPA/BF4Ch3HLczrbNP1pz2WSPVt44JQjEfT\nxX7wl+nMo04gTmu9t8kMlSRip1uxHrltHfzcJuIUw1JiiZnTc6tgGNZG2Pf8\n3xETaMn6/qwTrGnIuCK4005a3fuOGPmuaF5GvjxVNlGXvinpmasrXaka4ibv\nIjsE\r\n=KjpY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDXU1uFYQE3ECdcZcAkbhddDPqOU/tGj46FYSjs7wGVvwIhAKUPZoFHEpPGrXmHesC+bYCzQian+tS46p328hI2gowW"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.11_1532646479370_0.14028899962884123"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.12": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.12",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "1.1.13-alpha.12",
        "apollo-cache-inmemory": "1.2.6-alpha.12",
        "apollo-client": "2.4.0-alpha.12",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "alpha",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "1.0.17-alpha.12",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.0",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.12",
      "_npmVersion": "6.2.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-If+6XPcIZ9nDSO3fFCH1PXFqX3eg+03fiilb3fRKqSdy5GRzCSJv0sx/FFWQl1LwxJvl+9ufbvtkS0cj74+BqQ==",
        "shasum": "4fc18cf409867d81251e4523e8adff409dce52cb",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.12.tgz",
        "fileCount": 11,
        "unpackedSize": 28279,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbWnQpCRA9TVsSAnZWagAA+UcQAJk3G+nEHhPrpmuhvJhu\nPsEsnA4pt2maEExTdG2GRDGCzanM0ROCLuNUHZU0YNFP6b3uhCe8qkuIE4ZN\nP1jq6nhGcGAPJ44tvb+PzDsU2adz8paJUN5wzZtRalAPayWGFkSjXg8QRJw0\na3t/okvT3LcJAOkroSqNu0Fbw9e91ghLTp/N4gn3urzBuEGXHjT0qHcmoKnx\n/nGMwrI5MMNNdMQV+W2MCj4eZaDXOr3ZsHR4+uhBQ0WN45jqgD+eL+aH+370\nSw8gPSoXB8Pcuusld4vhX2pbbzaYlH7pJGmJoY8kJrk6XOq9rdNYikRl/GcT\nzLl5mP9n+l+dGTnegCw4sYBnhKuy6wxucwXp5AQYlWXueBE7yTPzHuKzxuIu\nag7Qi0VYk+lqvQutYfqLrHr7huMuwZU/tYB5E6gAQ4Eguh0Aatvm44Np0LEv\nisY1Vs2eTeyeOlyztTXHcn5qUav2qsps2KE06VD0rtGqzcp3iBp/eLt4mroo\nOKsa5pUuGFF//Cnr4GZVYEJJgMy+p2+NTzhHlLPEEAZXtZfHK9zKBgWfZOQB\nwyt5JUD3aAkHsngV/AnJff9ojz2jKUnBuC4gAIcq/eKpwkbuda0o6lLhG7qL\nhEnwcG6kimNfJa6+5ZgGVMD3ylpggwFsC24/0Ms8CPFox4jHM8bD4aYb+tDd\npEok\r\n=DF62\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCCP4tBwCK0muxJuvn2/VPRGeUWiM7iiJGWh/lDPNMYFwIgM1tAotKGvmy8VD7q3+L8Wi/yWs653ckW3v6/AUV+dF4="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.12_1532654633756_0.30508126321338924"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.13": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.13",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "1.1.13-alpha.13",
        "apollo-cache-inmemory": "1.2.6-alpha.13",
        "apollo-client": "2.4.0-alpha.13",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "alpha",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "1.0.17-alpha.13",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.1",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglifyjs": "2.4.11"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ]
      },
      "readme": "# apollo-boost\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest.\n\n### Apollo Boost options\n\nHere are the options you can pass to the `ApolloClient` exported from `apollo-boost`. None of them are required.\n- uri: A string representing your GraphQL server endpoint. Defaults to `/graphql`\n- fetchOptions: An object representing any options you would like to pass to fetch (credentials, headers, etc). These options are static, so they don't change on each request.\n- request?: (operation: Operation) => Promise<void>;\n  - This function is called on each request. It takes an operation and can return a promise. To dynamically set `fetchOptions`, you can add them to the context of the operation with `operation.setContext({ headers })`. Any options set here will take precedence over `fetchOptions`.\n  - Use this function for authentication\n- onError: (errorObj: { graphQLErrors: GraphQLError[], networkError: Error, response?: ExecutionResult, operation: Operation }) => void\n  - We include a default error handler to log out your errors for you. If you would like to handle your errors differently, specify this function\n- clientState: An object representing your configuration for `apollo-link-state`. This is useful if you would like to use the Apollo cache for local state management. Learn more in our [quick start](https://www.apollographql.com/docs/link/links/state.html#start).\n- cacheRedirects: An map of functions to redirect a query to another entry in the cache before a request takes place. This is useful if you have a list of items and want to use the data from the list query on a detail page where you're querying an individual item. More on that [here](https://www.apollographql.com/docs/react/advanced/caching.html#cacheRedirect).\n\nThat's it! Here's an example of all those options in action:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://nx9zvp49q7.lp.gql.zone/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: async (operation) => {\n    const token = await AsyncStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  onError: ({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      sendToLoggingService(graphQLErrors);\n    }\n    if (networkError) {\n      logoutUser();\n    }\n  },\n  clientState: {\n    defaults: {\n      isConnected: true\n    },\n    resolvers: {\n      Mutation: {\n        updateNetworkStatus: (_, { isConnected }, { cache }) => {\n          cache.writeData({ data: { isConnected }});\n          return null;\n        }\n      }\n    }\n  },\n  cacheRedirects: {\n    Query: {\n      movie: (_, { id }, { getCacheKey }) =>\n        getCacheKey({ __typename: 'Movie', id });\n    }\n  }\n});\n```\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.13",
      "_npmVersion": "6.2.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-Ghh9uztt29terTPef/V/586blVShjiqsI1x4Eok0eF4hFid8MpzMH/ZQB1XsH3teUaiQmLzABGXbYkgOswF6yw==",
        "shasum": "9023ee9c178ccaff3c7ca803a85bc4211597f05b",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.13.tgz",
        "fileCount": 12,
        "unpackedSize": 31241,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbYBh6CRA9TVsSAnZWagAAPsEP/jq6kEVC3gbrSC0d8xn6\ngN6/b2g7xUORyoU5KzrHS96rhrOv5+6ZusyND3ZRIidI8ljeB65FeNW6Wt4e\nVrM5Ev1XWC0UP84vo8RCQ+TX34rL7x8Foug0MPrNZwiRoeptLO3sqXKerAQQ\nmlpHR+CayliV/GaGtrJ5jBCnHaFG86J0eCVT9arfLQ0WaZ5rAIKgWA9XbImL\nhg+1+LMDGCUKqY0jj6f7olKK1iSh+rFCGUlr000SGmrSNBCOPOw3vWUXqTye\nAsqMsX1MJN9rYWpEmI7KNYsB/1bQwMVXB8Ordp1WlF4wSK9n+GmUrI2cLNxx\nB5P1auekV5YM5DZCN7J+89nKVBoFdIt+mFvw1xwbCqlTwKwRe2gOJhg40IQA\n7dtG/2hX+E8cBG1KUVgu2KBAC0yTDpEHBLbTA3T/UnBLIPuubDe+3lnWh68R\n+3yybmcozTrNdLB6cdvXUOSEq38BHjn2NbJt/moiCZGzmycvDep43ok/4Yri\nXAg4h4Bgm0/8vyvYIu6kwebqpiYg42y/hOD8Ykk3IfMy1EBFe4gB17bPMGEu\nNmzK9NywUsbajecxtDeMEBzmGlBauMXl9WIgUYr8ENFIEfOGb/2jLUUS1DA/\nP0aqMgRKlEHxhWmE7CtER/jOSlwdH8pGLNuudPDE+eb3QziYbQW2wL1Pcve1\nd2Ii\r\n=6LIO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDHhPEOycWX4Xbgar6n9JMsmlvJO1HOYjPtruGQMkxetQIgHOxx/Go6MzpedzvglfLkkR1PfIYCfePxLLK7POjX3yk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.13_1533024378244_0.09790799676496253"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-alpha.14": {
      "name": "apollo-boost",
      "version": "0.2.0-alpha.14",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "1.1.13-alpha.14",
        "apollo-cache-inmemory": "1.2.6-alpha.14",
        "apollo-client": "2.4.0-alpha.14",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "alpha",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "1.0.17-alpha.14",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.2",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglify-js": "^3.4.6"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-alpha.14",
      "_npmVersion": "6.2.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-PYFJIbmbQ6tLh52biN2Dk7s8ZmgfsB6AkD/zsctDnOQeRUdV1PHKt6Bux2hqlCFE/mbPznTw+CN8il6o+D3H2Q==",
        "shasum": "2b11880d4840900172f6e6a3dd5ea85b4eadb4e8",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-alpha.14.tgz",
        "fileCount": 12,
        "unpackedSize": 28767,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbalMZCRA9TVsSAnZWagAAplgP/3l9Ps4v5oBlUHatgqMh\nC3t4nAY6I6cK808rBSShXMoF2OuSz534yanNUO0OqIr0OADA8Orgi5i6s76G\nWUV6vS/JXMHj6XiqkidiZMoNVdBjCxD4cKk/EfExREFdWTtBXc92V7aPi6lm\nPcAk3UhxErOnUpUyPwUgc6Xs/XqlJQzQIDQWGeiTIwf8tWu3KjkRGKBQ4PTj\n7F83zlMBO+Ma5XjBQPii7gkLq/pEMm1chcIXXBYbp3fc9aSj/p/+hoU7MOAm\n3mp71AoYPv3Ege4rlKByhdWnGxWVxSxULHiIq/5gS7g/vEv0kDzPYr9K6sLs\n7p8pgW+uxVftuuX43oReH+zaKgYzbOWY3UPFyMPHgLm30+LZjZZTJyZ2AdBA\ny6EO/bHMRsfHaCpEHbyrIPWS4l9dswoQddska5BU34+ABfILL4quD9g4E0gl\nc0DIGR2ghBTnxmMq10ixLDOet6n0xW9wMC9DnS00d5RzYIUYJZdhcAiJkpt2\nPFfh0GJ3xgwbwuvpaOuL9vC2Brbp1ONhacjn9uW80pZ+miWQ3KXbuIMiGNEW\nZ+UcLM0q93oaJXTfaZwwuWlhRgy62OrVIbeM1/t3w7HfxIGjN4jiRtNN2r0I\nl5WgMRhhVSV9JM5zJxlb+tQezEG0dd13LuhbGjItqN09MByOJCIntInF7ZXb\nt4fm\r\n=Qa8a\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC4mHdrwQJ/lXJRxR9kt/+7Ql1JB0x92Jl4XUGiVdRyoQIhAM3xjntNbO+CDAh4jmKMCrgBWRxI/sMWWcMuatoJmFHq"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-alpha.14_1533694745355_0.6280654072705121"
      },
      "_hasShrinkwrap": false
    },
    "0.1.13": {
      "name": "apollo-boost",
      "version": "0.1.13",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.14",
        "apollo-cache-inmemory": "^1.2.7",
        "apollo-client": "^2.3.8",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "22.2.3",
        "apollo-utilities": "^1.0.18",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.2",
        "graphql": "0.13.2",
        "jest": "23.0.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "20.0.14",
        "tslint": "5.11.0",
        "typescript": "2.9.2",
        "uglify-js": "^3.4.6"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "_id": "apollo-boost@0.1.13",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-oaAHQO6xBPLtK3cK4+FYT3/BR3RFUYvldlK3zTn6JD7AL4lMovvvV68S+AZyQlECS7Cy3EjFqsANmAMbvvJxSA==",
        "shasum": "194ad4527eb7cad0ac491f133f314b9ae9f31286",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.13.tgz",
        "fileCount": 12,
        "unpackedSize": 28728,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbbC89CRA9TVsSAnZWagAAH7kP/Aj83Bv8JljU++0PPwyu\nYJKwFWPB/c0GFV+OctyQr60TII7SxBXGzv6HASCX+52iMT5Qvq10j1RVhLgh\nlg3x4mSjsiNNsiBBL3Ai9s9NtTq12qvZ2mihnpBzRwfsWptz0+El+orIlcal\nxX5ZtySJcw9KvJnaYh0ytA0ktC9bg4esWYvJgc333VPiiCHwkvfGuSV1wx5v\nse93ltr4t8IY7HunrdDNtnbWRVjzk+dSLu6zwh7VjY0qOmT9LiLKExkbG08T\nD75fjMvNikUdnrMO7wSyUgvRo2ROGv31vtSFe6rOv1y2TV+RgmJxslW8owwO\nQSamgpNysTYpTF7Ai8uy3pWJsqKwtjgRTvO9saViUKM5GDTMA6Le3tr6vr5x\nHEUtWpWPPnnvEls4sMjImVpvpxpVrxrEFdbMX0HJ2cJHHvE6nf4ajWM9nwKe\nXldoHk5gZGXumjzcGxqbntTmb+GPmU3EvBTtzIwtzAHfYdub3lE2Ew3GoGJs\nzAOnlhbd3s2nnM2j8whRLH6Y5sqJPVkuHHSQ/bWZ4EM+a8BdEXqGeDE+itRX\nTWBd6D56tmyWYHGSG5W9KvP8QHooYKAqrWcRjFvNG7BCR3tKy3CPbV5IRGgM\nMIa4MaNHtMAcjOWz28hzR6nxLGNFb6F18noBuFd2P8ItAqW65/h/rdomi+aD\ne7RU\r\n=USGV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBoPJwn54IFdck6BpPMoILotemx5x7X2zduOATMVt2IeAiBCWuwXY0f21EAz7iT80X1P26Mege+Agq/tzFj6HBPGtg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.13_1533816636863_0.392676731019608"
      },
      "_hasShrinkwrap": false
    },
    "0.1.14": {
      "name": "apollo-boost",
      "version": "0.1.14",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint --type-check -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "watch": "tsc -w -p .",
        "clean": "rimraf coverage/* && rimraf lib/*",
        "prepublishOnly": "npm run build",
        "build:browser": "browserify ./lib/index.js --i apollo-utilities -o=./lib/bundle.js && npm run minify:browser",
        "minify:browser": "uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.js",
        "filesize": "npm run build && npm run build:browser"
      },
      "dependencies": {
        "apollo-cache": "^1.1.15",
        "apollo-cache-inmemory": "^1.2.8",
        "apollo-client": "^2.4.0",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "devDependencies": {
        "@types/graphql": "0.12.7",
        "@types/jest": "23.3.1",
        "apollo-utilities": "^1.0.19",
        "browserify": "15.2.0",
        "fetch-mock": "6.5.2",
        "graphql": "0.13.2",
        "jest": "23.5.0",
        "lodash": "4.17.10",
        "rimraf": "2.6.2",
        "ts-jest": "23.1.3",
        "tslint": "5.11.0",
        "typescript": "3.0.1",
        "uglify-js": "3.4.7"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "_id": "apollo-boost@0.1.14",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-MJiX4LX+FMml40jLo/isJVnHkcHc+zcwJe0/zOPzBY+P6/6dg6/ivO4O6B0I3vBbcIM8UBc7rKf2LZn84A9boA==",
        "shasum": "0e0aa0b9f86644571ca394bbe3922216925fe4c9",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.14.tgz",
        "fileCount": 10,
        "unpackedSize": 26718,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdtUgCRA9TVsSAnZWagAArLsP/2jYiYbWtPlbJCldXXnP\nUrHU+0O/oRT3rcWMZblM//kFJ8U3lCveXeX714d4tP4KFz+JUeWW3N/vjGqU\nhuvL4SjF/s29puPq4BonNAYjtZNKFuS94JjtPJ0739PYW42ipypcXH5K0h0V\nB8R0KHA7uHmckoaqT63wuyxY9xti2qBoh/NoHZTaCJCgHulKUQqw9O4ABeM7\n1awqPkyx51tG7VSquUCgyzFDvLJM8aPGKV9mSMGD3EVmB/R+xkoX319hxxmY\naZpTwmMGPduPPyA5EzP+qrn0NZvSnLlbc5ni9sO6sKbx8GzfyOSZrQ8gh0DE\nwL3HDWuHfb3M8p+CSIc+NXUOk+pN3WSoFEuI5YDo2sTEmpNMPrgi3z3TdaZ6\niYEEXApn07d4XQS+jWK1x11BpVJtpkBGlq7IsfSwLhHhqnc2N9CKhjwLOfJX\ng5GeW5kTdZYcjhOIk7awGk5XAzmtWMAgJATKHjQ+VYpK0GKWbIvduCU1SIUQ\nHVBcdzvUVOH8qsh8846cxTqVyqEx2PrI0KlwUl/lK2FUlX+gjVJfUUV/gYpu\nGqzP/FjkOqv1K/FQR+ccMPCuw0OtnsmPgRNuLFKCvps7plv0YlLPFmtWEwbO\nLsFcgxtY3EVNBoQQ8I1dBLMS6huND1mxzg9lVzF1xq0MY/5RYS6076xddkge\nmuuE\r\n=ZMWZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCSR5H07Nbg1n7bIkXqdBLGHNC0U5AxQFMRnxoGzW0G+QIhAP/lL3rnu+rkNbi/uHUZTSMWz+5Z6ukHOJ5b3Yv3VWjq"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.14_1534514463719_0.5487266353709184"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-verify.1": {
      "name": "apollo-boost",
      "version": "0.2.0-verify.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-verify.1",
        "apollo-cache-inmemory": "^1.3.0-verify.1",
        "apollo-client": "^2.5.0-verify.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "b37faabb6f20de0f5dddbeccbb1a5f3eb608ac68",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-verify.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-S8dOkziYkygsvWJaySgf+BEf08VLJLNfQPH9IWUz8ZREZuOWOEeCofzghMKp3QQC1chIPvsBo/Rp9WiRf+VKDg==",
        "shasum": "cc6977de4ebc940b3928084e694a4a41451d6d2f",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-verify.1.tgz",
        "fileCount": 18,
        "unpackedSize": 687880,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdvsGCRA9TVsSAnZWagAAnIEP/jdND2BpvrGmFsWsy/qn\nrK/8TOAo8Ce2Hupa/2Y/ygRm9WgC7UqlYDOjL6V1J2bRihAX05zLRVw6wkRV\nw1P63aWF53SkedjYjntv6QIkeLIEryN4M3L6vMhwjnsB9pB+aSCEfwntEYkr\nzxDbPdnl70HotzCqWXjYkV0y5SKig4PVuj5kBZ+YQ6T/Cv11c+UF5Afvy9ds\nqxoWt3fHaLhFF1zJ5Bx+Wr8pP6sUFlH/CO5DURR19qqGqkDEOOSndB+AFUu8\n44s73lzouGUhE1Zg2iIO54n4V6ik0qEEpUXDBbE2DXFK5TQEgs0MOWgciUzy\nIaov6n/l9PA79yjmNvD/nipPrEnq0shbkzI8CbT2kflT3UDpbF0i4MS6WiQp\nmiV4VesQ0IMrtPLOZpo46hGZP8MbhohcBSmd6mi7ZRy8yobSgK4OXBMHSjRw\n6BvS9alH3Au3nFMffw16LaLh2bN43vMJLGHta5BjRQs4vZn6wH/a7NqENZlh\nEWvOGs7VhgG5t3t4NxXPHV9cEfNHKwxpPQMC5IuPAylkMWIM+WvPMOrV7KVm\nDhcyESbgD8KpzIxg2cXRCQB16Qx55XU5jPR0PARwVPOxmduvvcwCgWTppBy+\nOkjkzQ0VTyldVCda2iRxa9SoMX/+1br++v1HOqvqdnsdSD7tBDAezT3PJCQL\nXsTa\r\n=r4ys\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCbehb9JyL0n0MKRDttweebA9xAFDUBXV7/yejp+Xcd/AIhAIyEvmm4BHWhKxiuqk3v9vsK/Y5DgHshQVFNqkor0Pz6"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-verify.1_1534524165692_0.8865047043364451"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-verify.2": {
      "name": "apollo-boost",
      "version": "0.2.0-verify.2",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-verify.2",
        "apollo-cache-inmemory": "^1.3.0-verify.2",
        "apollo-client": "^2.5.0-verify.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "797a82a8b1e3aad73c479ef70dc255282780948d",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-verify.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-8nr4O/vfD+IxBHWHd4rxaupHLFtBVEJnq2Ce41yPEo+g5rOkpPXDzx0YUwo8GiTxpct5pJcq+vNrt3QvRosCOg==",
        "shasum": "77110b98b4460054bcbddf32fba47ee306d3a4c5",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-verify.2.tgz",
        "fileCount": 17,
        "unpackedSize": 566270,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdwFiCRA9TVsSAnZWagAATGwP/RMKvw9TWU2i9EUgLdlb\nA7EBIrvqcnq3a2U1R5B80dA6DOEcLDkbtZowIfSZSX7v/I5OkYJ4i++W6caU\nKilpD12rFJqQijq2PN9JZq2R8zlYFpHckV+ooR8owJsrpDJ5YrZ/gZAHBS7G\n/RYTIhDhjg8aykw0WrWj2N68a19pyoAGS7OoUb5TSGDjhb7zdgE2jknGfZ8T\nwnIbg13vsls/aUQnVtJOxQm6JaJ9879Dvfh+ue6y5fIcO6FO0CbMzhZXodGr\no4y0Ogv7qQwJIkTv6DhuSTgcDemeU764ZnyHu1DnerzDk6gi4vyxutIs7i13\nRbWkFOmsne7lAZ7N2q6m3bxNuT/Bww3Jvjeae8x93MshiPlmMz4oLNOivM4S\n1W4/IN03tZ6qRWGRqWIRZw/M3M6OtjyOn6/sXaeaEYK4uTqUcqm6EZGlG8X4\nYOAMu3yZXAZ28gyr+yFfJvpAJ1kNE9n3okD7SEoI3OYFz8zLO4uLVFNsmz8d\nBUra87OLjPz2uzIE04C995rKHYyrYxZ1iy5Md5MPWvocn8ya7Nrnl1BStw3J\nFi7lqOnPDAIJc4QQvVV65ONm3dtMiPhGh5IfPoddjdpzyjMw6q0LdcqihCKn\nBKoo4+69Y/eBDNvSBDUWD6Z/xsIBNoaLSqtGThf0kB5s80TZjn5608y42bkx\n/xyw\r\n=mhTJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCw3lxoJvL+97jpmYTyY6zSk0UUqiHs9VTrZukKIcvvgAIgd4LicWRqBPtUBta7cI43XIMh02hqpz0GFcfVgVOOq9U="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-verify.2_1534525793296_0.7566523450152982"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-verify.3": {
      "name": "apollo-boost",
      "version": "0.2.0-verify.3",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-verify.3",
        "apollo-cache-inmemory": "^1.3.0-verify.3",
        "apollo-client": "^2.5.0-verify.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "4524d36d457da4ea34b8f28048a16b67bffa294c",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-verify.3",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-LVZWqDbjh3pQcvxIhplZRR1yFgIYAx/VkbiD0rAcRukZzmC+DnNNqTvPnwJxhZCogxf44rZnPd2wa2gQTCoUPg==",
        "shasum": "302d0abe01b679c928d58498bdcd4053d25e4ea3",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-verify.3.tgz",
        "fileCount": 17,
        "unpackedSize": 566281,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdw/TCRA9TVsSAnZWagAAjiIP/Aitmw85OS+jxuwo7Nya\nO8smweoqBEJ15oD1LJ42n3B3flMTSIu4xlEZ77r8hekNUF0ZGmstHzZ3VYCD\nWI4iXlAyNreZQpw6P9PT/2L1tSJ9jNYduySSE+tNxshDS28LXB9v/97mbTyV\nRMZLAGXtZRcIP1aPz9a+v1P63WTao1W6SgiQWNdIgpKPxI5CzNJwOmn31lD+\n4VzsFEg4btQPC+jL0UFaSqIYcg7x7l9jYJoDEjwhlkV6Evbl5igXxTZPAAY4\nXx8exPxxyxnLnzr2zPB5Tv4YE+5tmQhAA8NDaBWOtL87qJ1EsVoH5PtkWk5S\nCGtvsTRmaNgUj8AKZ+IP+kvVKUIcELsWwZ4mc0C4iKd4zAPQoeAiytZeou2Y\n3DnKwu3CPctUpZLtbC2FpVWxOivKbttYBy1WwULgoYLZniIEftXLZLsWs+HK\ncrk/IsfzVnUy2cdbeZLxp4Rx/naD/Y9FAB3b+iO+1qwpaONI4Wgp4WOYoLCo\nkYQ7bk5a6X0EhB8yk3WF86WmkF/0iySw7OLdfFhWD+j0IJPSTXdlP0q2G/OI\n5dgXpzjt323wfLv4xyBrRC5ZH2It6OMrP7DqJzdEHhNibAHG9CrrSVh1bFJf\nn02KDY/5qy+E9PQdR60QiGrmLyV5FsqJZekmKj29eE2Od48r58mR9/jmVgsz\ntNMo\r\n=O7MQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC1arWtt6i7Yu95R4J2tot2v5hOEew17iyhDGCi9Y2jNAIgdaivpzryNvv7DaKV2VYKMh2tbhvKW6zPvcRppnahOGU="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-verify.3_1534529491170_0.45717660289005635"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-verify.4": {
      "name": "apollo-boost",
      "version": "0.2.0-verify.4",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-verify.4",
        "apollo-cache-inmemory": "^1.3.0-verify.4",
        "apollo-client": "^2.5.0-verify.4",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "aa5d083bdc328149e506b275c07d978b3b7fefd9",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.2.0-verify.4",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-n0xuSou4FsziFXnQ+ksoUKSzsrxN0TkERoeYhtB8ZSWoR1/vPPCNplDHm+RHX5eJ0SpY4Ev1Z7c0qEvQ6uNx9Q==",
        "shasum": "91199356496a641e26379b45af4a488c6f00b616",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.2.0-verify.4.tgz",
        "fileCount": 17,
        "unpackedSize": 566368,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdxdkCRA9TVsSAnZWagAAFEMP/2HA25o/dj2i5m7pGL1n\neu4wg57mLemmWnITsjiGuYsQ+HJtG+yOW74mR+EyVlKN7Da6OuQO3OV5cCKD\nU5uOuEbhNEBGMMQGA31bgE9HUbH2UGMVROBIAEg3gEjEilzzlRCzc5niHeQt\nIqpiMpUI0LSTpnw83BTji4hcHzQg6QVnTbkUXxykftXx3TLsTNQtekNZ2Js8\nnFLzlaCGoTq18q1y0aB5sHaoA02rwnmIY5kIKqWRDae8r/3oefC6oY31EbDX\nEwyBvXeJdxW6Bn52GJ9vMFMYigwfh+lqcf7jopD6TcbCxCaBGzWwaJjVYNtM\nuutzK2nKcPGRgRdBVcQZNFyEZ9AERzSMybgJKSafLo2lLuslJX6QimJGq7Rs\nUbeigpUU6o7N02OR60AEOpWUg/FvMkGghb1MVtZHlVG3qf82rSS15eUlPBqu\nOyjXp54DXx34AsZnwObFOTS+GLkgX3+kpLFpqC44rIgwubs6uEGfndr/x32v\nLRL/siyhvysRzWukssMxyv7wRm+1E22x/1ShqYcemhFdbr+iTP5jYEkMpTzE\nrnLFdiWjR0B8wOxSsHtVP0iY9iOEe1uYBlzlGi4VKMCuPxr1eGBC08NXS18r\nQuVqJRqgEZ39tVIExkwyPI7EdlBruuuhIK6Tfjs009XfZnk5i8dxaa0n6I3m\n+Bvs\r\n=zfvA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHFrvLxWd8SvOnVo10irj9DjE1eYc4886A1+AhbqdpR8AiEAzaisk/gYzWLFFeA94C1g1MpdYR0ImKnRX2g3sVQ2/SA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.2.0-verify.4_1534531428348_0.8022510702238297"
      },
      "_hasShrinkwrap": false
    },
    "0.1.15": {
      "name": "apollo-boost",
      "version": "0.1.15",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.16",
        "apollo-cache-inmemory": "^1.2.9",
        "apollo-client": "^2.4.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "40cccc16db43e190f341794f74e495bd8e390a82",
      "_id": "apollo-boost@0.1.15",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-cKKr//5MERno1+ZdPcppGwLVMoRWyvoiTe1YC/kJqfciHgBGIb89w9EjAPnUfyvXpmpNhAk4WWb52FcMETRrcA==",
        "shasum": "86357437fe150383d9c75f483cf656013c243258",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.15.tgz",
        "fileCount": 17,
        "unpackedSize": 566859,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbgtW6CRA9TVsSAnZWagAAXFsP/0e8wWC+FjVJxeoez9MC\nJW+NqfFSpt2o/d+1GeG3E03MeKsHYfXbHVkJZjhrrb+a1WgxMpRk96c+suas\njtRrHJlR+i8Oxn00TPrSK+H2H1gLYtbzQWfHKk7rjSkT7n/mb3iGqX7+VpuT\nEz6GA7NLWZfBYxw80QlEMgnKOxeVEcNiMwAlgfVMq8XZEddZ7RSjDDdQbTD5\n7NlLGDRX7IXkIPls3c45KTvRHHPHRDP5WxAEvXF0U2A7jAHdw6LhzA0SIRx6\ngvIJU4ZpibtdknoGX2Hda078q06ihay6M6fHQUUDALg0mwcIUPpRTAlbkafz\nMWmm+gVoDkzdVqvkWeLqDIPKDIcDvRR46a9JLhgc9GsW3Um2qk4zkjIGXvH8\nyY8ds/ic7oPr9DN2DYknGcJO0oYQaaojwUX18Z6fSIkkwvnhQ/HDD7XQkLZ8\nbc5oFsKFO7pHNkQ0AbR2C+YUb/OqgT3j55i1BqaglfJiwYk2jyGqn481jx/w\nbLGcM0eT1fjdMtBcGj9N2LlphhwFOTfI+Fpc1/LfATUjSsRKtuQsSs2ZKqP6\njGV6n021d1Q0OsTz92j3ov1DlsV5cSwNwpYTQpGQLk1JyincT4KRM+qRfnts\nqUBUywMU2Cyb9s2na7GBxKsBW/tXhJ9yRd8kj9hFxw3NlDNXxwMuqLXOneW2\nbMZw\r\n=X4zd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDt7m71ia+wmhsXdQd7yFoottnFp/XJoXQiK7CE0ULtqwIgcC0gPdiDXcp1fggUPPYG0tnXJwXS4LfKczzFqYAfTmQ="
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.15_1535301049195_0.5245207742167424"
      },
      "_hasShrinkwrap": false
    },
    "0.1.16": {
      "name": "apollo-boost",
      "version": "0.1.16",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.17",
        "apollo-cache-inmemory": "^1.2.10",
        "apollo-client": "^2.4.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "6b8a3651d85c0b9eaa88385caf970905f497cf21",
      "_id": "apollo-boost@0.1.16",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "mdg",
        "email": "npm@meteor.com"
      },
      "dist": {
        "integrity": "sha512-ppnQr90n2cn0ZMveEbqxW6NxmskIpThiLziLlRpRLy4keoAICg1NZecxJQmeaBLMtyhf5UholAjpS2SLmEJeHg==",
        "shasum": "77f73a30c49ab6d749ddc3e5683a7e322c15f07d",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.16.tgz",
        "fileCount": 17,
        "unpackedSize": 567303,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbmN6dCRA9TVsSAnZWagAAgpwQAI0eTbG3DEBQb9sUtSxA\nS3yf6KNk+JaVPaW5eb/uc0Wnwbmsyxr4n/Er75tr6/H3MMKPtcnqPXe/8x+g\nYcwUs+MZOUWNYZKyPHs533rkzrO3NgDcAXLwyOzynB994BkYz6Wu3f4moMI+\nbPZwWGc+i9ShHQpV+/ZYhp57F1G5YC1LLrRIju2Lk1AQYLuxn0OtIs55b6rS\n/f3caFbwxRHdNqTgMoU5qTlYb7ha10+HPJd69FeBqZe/5wAB5jhB11V15gF0\nDKr6yXmlD6C715KiBX2+TGTQYFjq2WuRiYRpZxRv5ah3zzLNXZTReA5xDxfH\n1MPuFbXUGKTPdpcPbEFtxn3U2/8ezlpQ2IHRh/A49J8hv9d7OoogtXf2c9qq\nVh4VY1Crd6Wdw0D1QKwYPqkcnjNhW4OagkPDTDOIvpBMvTLHtjzYpZktrecr\nq2CA0TJjaRovwT2HLMRBf8NKMl0jJylXkpQkOTe0F4aEzZLEV9cowJrk/z6p\n0uraial2ccH3ommr1HrB9m7+gnd2M1VCXsSRkN7BBHQsS8EuB271UZtlI4B9\nVQvpv0rP/X/B/skESaVCepO64aqDCWa632iU5XGDQuAHwtpX8HQklQ7UmCA7\n2qAqY4gHsy+8gq0IClzrXZDX+ge3jkg1+8xNH09obvKyNgPoGLJ7eZOtnyY/\nDNj0\r\n=6+d4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDH6vu4ENTMeYT/c4LxJHdJoV5lX7jVkLF14T0+VzunawIhAJcS0tQCTSniqYq+TRuKjM4nHorg5tEmmCMGg+s/DjB3"
          }
        ]
      },
      "maintainers": [
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "npm@meteor.com",
          "name": "mdg"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.16_1536745116364_0.3686394477584065"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.0": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.0",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.0",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.0",
        "apollo-client": "^2.4.3-local-state-alpha.0",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "46323ee30b416809433e8fccffdb933eaa68c99a",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.0.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.0",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-tqqwBx0u6TRbPwVbSkTo5R5tSzjU5u3/IWmrhZDdC41A2VvoQf95DKGBxGS+q09+Vylz60KzziM+Nn/zrF2e9A==",
        "shasum": "316fef21369f9cca306a54786d784ffbab75edfb",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.0.tgz",
        "fileCount": 17,
        "unpackedSize": 1329517,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbtkzaCRA9TVsSAnZWagAAdW8P/1herINR6wctFr39HFTJ\n0gkiYx7Dkd1D+siWplZUAZiWJCrcRFYnk8X2Nh+7+S6qFUzikaXq+I8La321\n3RkBhfJhCNMCh8C31zbBf/rfHka2yFE4djcpxeWDUF2UJZHsQDVJN2UQvEGy\nMmJ/51wYyinfof1GWJxMyuLxOyj3v7pQEGXcPJ1iDFPKeLDqIyx/Omzcmbt4\n9+Cvavkdh4gzm+LbMyq9ysAoGWZwTTPjif/179H7XlvqSAA6NDeV2AsucKaQ\nrWxhCrxq/pCWLjeEDIMEvi270s2f510zXNylB6PVTMycAjRo9CsncwLr7cpW\nkkjzpw0GnULMZXrMvNGwUCD70uvcIz6NPVdFkF1+9JRAr1964QpClhKCrlRy\n0PZQ7PSYiy22KmPbz6IzbxBjGTA6GJIgFTX9MM6ztYu1whxWNYT2CS0pk1zN\n/LX2G/kZWlVxJnqphCcbQ0NbWNW6O+GBWLQA43q2+dJb0sTItawEqY+R3CSS\nAlnQPN300Dz0YrAXJeiN4GCw3JrFgXDcDlhsoaCFX1habgESwoOH9sAh9Lke\nyCK9dUiZcuO2iq/R2O452bY0pzaSkdhwxA2JsVhq2jUCeMBTAUquyZXmJtBZ\nK1toourkPeB3h8m8tYQJkbMNEC66nuiwmouCeDdNuSTiteua8xdB4W77G46i\nRx8i\r\n=lpyl\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCBlBM7/p7pXSIojmsrY+7uAvG7OZNY2CPx2KddP14GWgIgfPDlLSDrFNsy39f3+SzU2A74VfkRt15nItiXG+VUHTk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.0_1538673881824_0.35120293791312407"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.1": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.1",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.1",
        "apollo-client": "^2.4.3-local-state-alpha.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "492967ff84b67a125dd871e59e5f00ea96fd8bab",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.1.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-MDMsXKNUoBYiIveP9R5tl33yTQzHlHu9JadSHpnEbjnlHlOxWfle8AXAJfMES+subnEHzAZrgBLCmUrdlCdP0w==",
        "shasum": "4838a87fe47506eecb6de090c742dc49175408a2",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.1.tgz",
        "fileCount": 17,
        "unpackedSize": 1329557,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbtlB1CRA9TVsSAnZWagAAqK0P/15K3L5mtXsO5w9QJmXD\nidXi6JDpdniuiE/XHjXCoYGhodLRtsIoR1izzzbzT9Kvxpd8kSQ9f6wuhtjW\nSuH1mZ3eBQxY3bsCv0MY38aj/4UxFoLp56aBFGPqOimRoSDY3S8pO4CKQJJ6\nlGihm7mIazsqZV9B8P+F7moINeAp43XxKy3xD6LrqvTkxTFU055XoKVZJmK0\nsFiGnFHNfkHxSq2eHdQgXnQxqmsBkwilE9s0a6mdpNqrAY0BBTPMbxYBAmfg\nrMgjcPaIvPgACsacK2kC8t15ZkhvMBblmkhgsTpE1KHUwuXhKZQTg2JsfbxN\ne71JizO/Uu/gvijdf/5ELoF0ifzwHb6HCOqG7Dq817lAynUgqFakeQY1m8cD\nO+NcKUWmiAKLA4gVJHGnMSGjP+22AI67piT+cDDJxms3fnvkU5cdqXKH0ZAk\nfIMREg6+uGJzk5uknhojk1ilRnTTafUOj3ko1IsydeGVp85J7cqkZDNQWMAW\n7GKOE86rbRHoA0O0hdsRu8rMRPNejFsv45c2HrKre2uvxgAR3hR+4MYlnRDH\n4IwoK8/kUACf7KWDNFEAVzMFc4pyMCIJhzezB+6+NowDjddkunsD52JRB6DA\nozo1QZ8N9Q1NsxOC31NrFv0YzSZcvgyfsJzuQvKYqFUqtwsqWEqmLlQyUd2i\n2KWS\r\n=tk2O\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE3fat/O3lfAtCFT2tBKm4DEDjDhx87DKgPO/Nq3IzO3AiEAocdT80l/+XJMm6lvfVwyz1yPmcfqCKb0OU6yOY714uE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.1_1538674804753_0.9239501397329208"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.2": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.2",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.2",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.2",
        "apollo-client": "^2.4.3-local-state-alpha.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "bdb948ce7d73df51e02efdde8d866c66c5c0930c",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.2.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.2",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-ELtm5zMjZUb7V0ypHgxysfcDsj0S1YxxDfoJlvlBwFFnD8I7nyq4ee493pNgIJYxY59IsqvaA/gXkcFhuZ1k0A==",
        "shasum": "543b3f9ff5ace48c4dccad65e9c5afb5c9bf0849",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.2.tgz",
        "fileCount": 17,
        "unpackedSize": 1332292,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbttDqCRA9TVsSAnZWagAAhm0QAIu0rCEUPgDY6UHJ7ypj\nYPtaAyy3tpOsPlUgQCSBfFgMvm5JiiS36G+MG2kJfNFruzdP7wxLI0mj26Py\nmTVDc2wcDe0Dwukxh3twJuLzNqgccLX9qv128Ok8I2naZ4eds+OTE5r6hYIM\nD2Ta9tXVKJ20EzU34Xy9E1ILD7tkNXRLvia9UpEeGez8z93Z9QZlt9/3RNUZ\nJULXbsl8wArkuyMNVj94CF2+cWW7+u1LaLdJHcx38zOPEpb41cZu9i8nCgdN\nt48QiCnb2SaseRzP3lLqPhTy3nsscET/pvwC9zFXLehtJgudyHinVbvGEy1S\nAxSQ3W7bcPYIXvALVuPhiJGA7uCI7BSqUWUH0LQIZWHDhq8+A1F8ByOm5WzZ\n5kwJ2ohSCyBKtl0WSWG0kRa+Y2rFZuqwQFcZ+VxITnAwT/LEenCdcXfNfd6E\nRZT/iQ+H8/Yh7n2pZIlcQjeeP6TutsLNq3wi9NAAcLKIsFr/lv/NYlE+IrBV\n5RrjpuERuB9GCnWN3APb5QlJDcEX6vDwBQsV3MCzvCcAq9mE3kZ6+HoZ05cf\nG2YdeLqewQgfAzy1dDWbNY+79Go+EcxMDx7pYnWOgaJb84OWw+eXwOwWB4mr\n/Ov5UQbk07ZbIlN5iY0Jh1d7ImXc9QaUvSgBEJVkl1qGTpupfecMtCeBxJX5\nx5sB\r\n=nyCo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDHtiI3aXFf3ZDTWXqyV7rpnu8/JXwVDncNaRFyAFpGTAiBES64uzxqfzJ6WoAZErroWHn/BqT5RI/i6cGi0uCQ8MQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.2_1538707689549_0.17089911485702491"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.3": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.3",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.3",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.3",
        "apollo-client": "^2.4.3-local-state-alpha.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "c82d181fdda51843bebf97f11c23c46b60a9e8aa",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.3.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.3",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-ZVKBABjFsETw5SBnTSdbfJBxrWJ6uOSfv76dL2rou5wb6oODoOYfe9gXLA2brlxldY4KseOlIr/MsEV/BhXLBA==",
        "shasum": "4f7040e8a6aad09a2bbb326c2ae9134df589813b",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.3.tgz",
        "fileCount": 17,
        "unpackedSize": 1333851,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbt2m0CRA9TVsSAnZWagAAla8P/2rYADqjHlELZD7s0MPl\nnRfLwblsWHFarvQnAr7oePklld9GFaEGAtGNb4UEj4aBsdmYGYxXq343MgKm\nwQFtHqMLshfiLqVsRaGnJw8ULQk/dGEYalhXojmrCH8LwN/hIr4uiiRALuhO\n+wq5bdiafYeOFOiUe4l+6pGbxgZJL4/sjCX6YrHAzSgmHgEScT1KtJ0ALbPc\n5A2TPSd7WPOAgt4h/2ciamxsgZUX1c8UbXUrft1EE81dMNIyucU4Z28Sejnf\nNxHEZBCyWU9/LWNQOPu5JQK/HYfIWrQfqVAuMjrjJcHvWPHgQvTchx+Vn6yM\nEYgxSh7dBh+TRkUfcIDyb6BpSDIXGPErGjELLKd6LwHhhgNgdLd26dwAm06V\nmld/VL3eCkWrlcCcycOsr/3BS76wiFEoWVjWxsQd8zDCOszYwBC+BP7dZzZT\ntxgJU+St6ivIOCmhwkCmoeAz+EQedPXLj7qNfVzMsPbwcvGoDxCxUxk4fPoM\nKBZOBPIueEXEl5aLjDRJEm16bH/nlFD6KgRAF4u3bNr4Uy163zdOJ2OpeH0K\nLDqe3iRqmEJrAYyIw1t4PmTjTsgN1U4b7x33pOm3lPg7YNtvyHxze5fGTXmB\nS4OKI9YBwDR283IoYGnAmozcjb1ZnM7bc21UeHnPNFYYFh4PhsDRwvH2GJ68\nX5VA\r\n=vRQA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCLKz6n1YMr2GpUo7ZoT0a2Aggt12IWrguJA4gQIZ56uAIgXYIfY048s6IO3rh+ImwuJCVPHEaGh1cdRAbkEkALTIY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.3_1538746803652_0.8450115781216261"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.4": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.4",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.4",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.4",
        "apollo-client": "^2.4.3-local-state-alpha.4",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "0e5fe6e6c9551b78b3cdfa180c6a0928bb9244bd",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.4.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.4",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-RNbkKeuYx7D1Ic6pFV/7SZj1bKHpB6MgLgVYW+MCsdg2fTOOpKmUaHNum159YeABYMtsA6SFtRkgx2roy5+Vhg==",
        "shasum": "606de2f4ae7fcdeb3ec13e908c1537c70b68f58f",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.4.tgz",
        "fileCount": 17,
        "unpackedSize": 1333874,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbt2ysCRA9TVsSAnZWagAARxUP/3bwq6lf/sJM6ZVRJXec\nnt7/rqOSssiULhF30SisTPpjUHsDWO8eWbRBg1evsYGAhCcBIZbeOUkh2ksb\naM8wAxEXXWFUMgT6h34y734e+7tgmm0xcHxUF5thuDhve4zqXvw9GvMRJHe3\nU0yxLSfs/+A44Nha7x2YH/oeCoN7Z8W70pELryfcWYNF25EwLCE2VdcP56do\nwmvutM26Gz7kLrufkQAbFXrfv7hl/MWUeGl8YPCIp9HhNn5dUT8a1qqjzTA0\n/RJuN4ad5HRw1vXw6t/jRu75ybwMBfngUUvIn+Qpr6LhVR5N4DtAvUGG9LQ5\nlR7xvqkzjtQILWLW7COkaqN4IefM9Lt7PGfkIJd8CRqx+RkwZTjCVpxPtvOD\n2l+opibjy+qFnugnTSmjZDxm7yMTH2NYIsx3t3Ar+IttmO+xuiWAvI84o9et\n24BnU/pzxooQLV4x6r8/LbNpYBBfbtdGJ10scAYdoUu/zbjdIm5OOZKCz1uv\nIBwqQ6w+77legsx7v/nFokZsShR6PZQmg8J6KaCsH8OnMYnAyKrlwadIGUHi\n8f1QiMNb3b0UQ1dzEVZbJpIuMx63vB+czNMTzi9G7rS+vcvwOOkZwoAgiQVS\nd0A3wyyqZ5hSgntpmMapd5gBp4f7i31UTkzUegR55GU5R0hdFIosem3yxqXw\n4Gc/\r\n=SJhq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEm/v7LTjpUPw+r2pXwdPrWdyJt+XSuBnDS19Q0B8G+vAiEAusinVty06RjSCWKqBfOG5BFvsEq089hXZzUcn1IqTAY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.4_1538747563842_0.9026226734783278"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.5": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.5",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.5",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.5",
        "apollo-client": "^2.4.3-local-state-alpha.5",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "212eebf60eb772d5184de25d9fd0a3265703f94d",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.5.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.5",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-GuWv23aVkle2C87icVn0iJD9zvtegm9yTO7KfxRhPc2OiaufMHEa61D/O28HDAoHPAWtA918aUpMpUiGbNn7SA==",
        "shasum": "5092108e848ede9abfc63e1873c98780a7f3433c",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.5.tgz",
        "fileCount": 17,
        "unpackedSize": 1333853,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbt7ufCRA9TVsSAnZWagAAQpsP/1nwsY5rD4ezw9yv7+bZ\nNIqCuiCddSsUblQANzKdv8SGhJ+xSiRfVmZk9tC7ny+wLaTiX0/unUBBsk32\nGGSTuwHtwidwgZRCyQcG+Q6TYncZAqTJ2UqU+vFutdYs0HVZPc5d7RrrdPwI\nrcPidvJJdL90FoZIPr+7K0HQlY8sWBWfXvefPIUOuZEor2flPIVqoKMS2eC/\n2w/wporD0o6k7Y5e0Tu3R7eT0pVMWKd2wuaXF2elFymxJtTYLDW69EREHkwz\nDLp+kJg1UhTVMJLc7UiKFzVwjAnOhZgSe2RrRvdp9QltJFDeRvi94eftKoIW\nmwBN3zK2gitl5Lph7ihoGkyUPb5k4eomyZMUdnj72fpSwHbOeUhuJnexEStj\naAiXgVSrmx6R4mM96MORP7ppmnAWC7SYC2vUyp75Dyw351lWTS647W+22Bsq\nisZSYEbSSw4rdJBeYs7Iq/9GsXhvdGeKtQDNiwEcqkTF4jsr4/hKmcGYVtSp\nTMbE/6g97oKu0ZwDPNjRnJii0Zn4VO5PMx9udOHSQNFmWfq+8GvocA7K0VKH\nZWTfqdRyFO6OEcIYhgdse22bYVGN9evRzSKO7IJIuqDgisPxh5rgJSCOXF+Y\n2AZZFliyKSD8zINbOkY+b6nNbq+8+pd2PE18fTE34DGQIZnrEjcdq4sT/Vdb\nXA1i\r\n=UXbI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGgMP/fHJdSlztfbyQKqj7LQdwAba9TGa3PXr+KLfz2gAiAbGLljwY/SauUzG+FpXI7aU/45aV2FjpbM6AXFi3Pddg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.5_1538767774855_0.8729580668088746"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.6": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.6",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.6",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.6",
        "apollo-client": "^2.4.3-local-state-alpha.6",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "20abe0675bf14eb4d87d4001fafa1b42e24564b8",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.6.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.6",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-fyPwMSjtL4iMkgEKnO3BCAhOq7dbZA9gPmDFpXpZ0cQn9uGrDhAcHlmQuToBkZIZFi2kVlNkk32Vm5wsdYj5hQ==",
        "shasum": "8428c94441445d5ce85cff7c400490cb3e22794d",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.6.tgz",
        "fileCount": 17,
        "unpackedSize": 1334595,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbuin5CRA9TVsSAnZWagAAAJ8P/iA7dyqXImEE9mLQoY7E\ngvC3uxFZ9BfQGVo0Pys16LIihSTJU6n0WJNCEHVeEte3DHwP86/Z3ggiTQyV\nc/Pm3UsmjEaQTZRFJUOfRaYlZvY0P6OpfuyyN0KtSdDrt6supdpiVSIJVHwR\nIUUcO7bchigSYGbDp5qo4zXOx1dOaXGMLMeW+vFEHXyeCWnEHTwlwzfUW3mS\nYIyguZjFGNRVzlLbZVuFfHolc2OzIMJhwiZFZLRgNdXrOvZbgw/uWGCGaN6r\ntl8esvJZHXZhj1Uw/S56/208Nvb/CdGD50NbUKg1KcCpHbWVdIZMdrKx4LoF\nmoQUy8V4qbSeKVrPzPOxQhWEaV6yW/yz/SHCezvsngA7ERI8ZI1rlxtoHYtE\nRAPYbL0w10ov2PixOQGeDBo8v+GWGfuoBBX0sEzsXzzSDDL6MpcI+dZgdigt\nFvqt5eK65yySv2T4sWSMshvRHNxUXeQIj3cJ2WMFJpw/NUZvAWg/fjodwPY7\nZb/qPRY33wLTfe7B8wAOaRq1w1Is6AfkTkSc1QMe9CG2vmERrm3gJ95qqLev\nrukNZIfdsI8r1gxG8Sz1OQ7LwO3t+EcUBji4Jk+Dbywwwsl9HX6lLBq0Pcf3\nBadFlL9OuhnCDjsgnG9CR15E0Kw/7Nqy7G1dS7jgPeNe0oZo5+B3uDBBReuA\n4yeB\r\n=kYe7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCYP2IyTE6/uuJYGDy2dtL7Ga0tTHYKydxUpOAHP/KDDgIgYoLqoI5B4Qr7Is8TPcydyC+B+vK63ur8hKtkzgEg92w="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.6_1538927096254_0.6632932985534661"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.7": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.7",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.7",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.7",
        "apollo-client": "^2.4.3-local-state-alpha.7",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "2a872426024b3b647212d4d4ade273efac689a5d",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.7.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.7",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-j0lDa4vjffhtnVPpfOcHbmuVcbVI73v9fF3VsWFR4BvNWepbWgbr2bVezYf8U40pLFf8mKFJb2YzN4njVlYI0Q==",
        "shasum": "70fdb9efa466cf99cdba131a4c59f58a2bb5674a",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.7.tgz",
        "fileCount": 17,
        "unpackedSize": 1336296,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbvPkrCRA9TVsSAnZWagAAx9sP/Rj0wloJ6Arv0dhzzvOX\nCxVY/tVCb9V2KkHBwNrj1B4q40v5Qj2hU47C8r8Due+C/63kMZqOcRtsTrL7\nQ349KiAPDgoZ1c1Hb2Ej2U50bz7MqWmuK0B/WMhXYjzFNb3HcKxcEgRf2Pff\nyKVgCRDhrAFDS0G65YbfpkujSWjBGiMd2ju/kclXC6nuRKnnD4TVClGXJjuP\n6uL/tyJhdeFWTtr6fhPpRWnVZyzac0U4G0ZHmMwHOPOcti0AiFHiXNLqTtMS\nfNV2TfQoPzHCJGjacGH6b/ocMwah78IwfR58udyQAiYjQSRhYBs6jiDDxXKE\nZ705CcLwOCnAub+nzjS4uBFX3Q3Fvyh68DKg0LjpXZAxtQGQ+ZzAeoDPiGFL\nqk0+gRkqtNICp/GBJajBiOqIl1tvqsfGCRcH+gB/MBSiIzM0zXRS1fJz1yV+\nWesbAj//EvFQhJDsO5jHZnz8aG2MoBcaZRKmXEVdvgzjq9Qyppa/Fe/eq1Pi\nhMoVviCVjq1sUhEWu5T0lBC7q6Wphdt+2QsOOOOzLlnX3q15c2zX/1wxL1iP\nMEqp8WmtueIg0xkKYJlmKxkR72Xl0n6DZl2Njv3ccR4ZW5541BRGdlWbM/ei\n7OKxuOIDjXftMozp/QGUFTDkvzQL6btms8ZSOsbLoDOBZdAxvMeO1f7nQkcr\nq5Fc\r\n=pa6q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCgBQh2BeUpXK+UWhAU+Kj5q0qRvE5OqanSc5/datYifAIhAPALpF9C49OUIJao6u+IwGA9vkdDGotDzCe8uThEYklY"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.7_1539111210658_0.29790562117996444"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.8": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.8",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.8",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.8",
        "apollo-client": "^2.4.3-local-state-alpha.8",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "f2b76919d190b65c73256220e3331228bb8a8b72",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.8.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.8",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-DqZ/fKJPMiIKxUnKNz06QUVIqEz+U88/67yQlO2NGyHIWutR+cW9EOel3SQuugUYAdSbcS+76bIDIxkoTufsVw==",
        "shasum": "a04c4cae9873bd209ad557995010055388ae3bb6",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.8.tgz",
        "fileCount": 17,
        "unpackedSize": 1337470,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbvRCcCRA9TVsSAnZWagAApP4P/iDUdp/3JCPBpZNv8FPs\nT9/dy9ddH1sDWDUDhaT/UVChi0zCJZ7YxLBUoEvi3wDztnT+BAv2GGtOVhrY\nrDduIs1JWG8+diRZZAYPpgB80LBGDUJYHT+uPKvnipIl1rYykNvMQT6T4+3+\nubH03KHkgK1PsVIO1FyyyUDTrYPD3Qd5bx1ZDZ+o0+XcS10/nb5YlCur9Fiz\nt/ynH/3L9Cccu9an2fbwR/xm8zgBdycjQQnET2vsD7Qxh6pe1a/aRmp5Snv1\npmYvud3w+gocCsHEchRznTJhlji5qTub2UFhf6q3d4q8CIvieJK+Ssgg3jK4\nd2JXzVsU/eJqXeIRJ1soXmYuzu41pZv0aAVwp79QjuTtcaB78m5+ku5VWxmW\nQCKQWvqpPwjF8TSewEOWgihIrEIEKNjvzbS2egYyWVtlVjR8jk8vQjKeIQ97\ncGGK/RHffRFCrfQ5CLPi2CkpYfpr9PhuBFzIW7gswtJT3Pryv8pbm3Toy2D5\n3hmEwBWhfhxnsip32Ro+3btWT4kzSQPg46f7W5RDXAJ7wOs8o+Ul5MLSr2eX\n6j9Z8szbcDbPQ6f0mCrLJ/0PTNHGtNR2Q50dCn8QgBuC/y/I5w/rS3E8TD6W\nIuqsFx9iLnsrsb21hx+Mapdtl7De4RTDdALDDMpfg8Lx6A2P5wIY/o+TsmOO\nwZbK\r\n=GWyv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGskheMZNSCaDvQ0UlI1yL6N5P7kEoBBuiqwWjAH802RAiEA1MIcxmzohrcEE4k7jKugXeqeJraz3Zv34X3T5T7qcIM="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.8_1539117211674_0.5872122197176821"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.9": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.9",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.9",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.9",
        "apollo-client": "^2.4.3-local-state-alpha.9",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "bf9299494cdb2bc29e10ebb52dc6276b2e2fc90b",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.9.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.9",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-RZKJ9ZPDYldSmzO3t/eUcPaU35B5divPopnrh14q+mTynpyYnk2aGkc084J2cbN+cLMZf79FfSgUCe+2qqXUxg==",
        "shasum": "d19fb2bdbaf8196c09f877042547ca89ed9f4d28",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.9.tgz",
        "fileCount": 17,
        "unpackedSize": 1351670,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbyikSCRA9TVsSAnZWagAAT/UP/jNNAADToy/Jk5oW6mX+\nETjVzwoFY/VtG22RmoVsYB3lDMDu12cJvDqIvQNRJbP7imUu3xXCKcKY8vRY\nQLnY2DnCJWjwleNRdolpri1iysIrYZv3SUbJHi0nZYmCLhEGomoAqQNUo4mf\nxId5CrkIWaf2hA17ffyUjIEBcLCIqemMMpKUrsDJdcqdfF0oisywI6Z1fYMo\n1c9MLi33VX5+/8TV/X99yI2j4tLQiLHzk4+71EN3PhhCSNYUoJdE9LJsIDL6\nhIliIAx9BYT/ZBn2xxdxsJZfV/RUvQ1ldPZiomhe517JyX9OtYby9ltQJuuR\nsbmUjpWDoGgqSlp7nEeHFPIMnPCGV52WGHwxm85qepWnwUX1Fl10UcPOGF1w\n31y6i4eX5G6Ua4amSDq31g1CpY9hTjAX1uAQSq7qbH5PMR831yKr5jZIIt6C\ndzSDht+uBLowZ6w64NO9PgGd0Ah4ylPZG1XGtbg7RQy0lJ+jOSxBLdRgbt/a\nZJzkCS/K7IVbnzUUXgVm+nFlCIV4wONSLNw0oqIxIuABkk39E45j3e9KF/V6\nX4ODnhvGmv9bUEbl9KaqBGadLqAAEmQkctr8TfCOJDyHwwg3/mZH3wi3kdTh\n+MQiRKZOtWYE96/nBROXueSvTlKYf/F343fmTHTH2Y/8bTsYvv5XLRHV+MsL\ncjov\r\n=yX3Q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD4rwjyDeq0D1IT9tCIGEZAZbrwHGbeMUHvsIBbXIY/FwIge+Pxth0P61NZJZAU/es5si0i+IXsc/RVLAWRjlfSOs8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.9_1539975441719_0.5265888130024365"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17": {
      "name": "apollo-boost",
      "version": "0.1.17",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18",
        "apollo-cache-inmemory": "^1.3.6",
        "apollo-client": "^2.4.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "87ac6dc37cf6b3f1b8b8e6d21e46f357b6d8060b",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17.tgz",
      "_id": "apollo-boost@0.1.17",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.11.4",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-f6edZV5UM6Ywj69XZP7w7Yy3mS23fGrTVTCzQv9MY5wZnkJ6jw3QzYGPYtEPQd/Jap5Ri61/hpFM3QqwiGSV0g==",
        "shasum": "ccba9dc8b2ab8a6bcac2ab7a358a44a6e649d7b7",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17.tgz",
        "fileCount": 17,
        "unpackedSize": 1289762,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbzlU6CRA9TVsSAnZWagAAYXMP/3vs0bu2lNajeIm1ckm5\nQIO7le9i4pe8s1la6OWLWIPWwHEjwdnVyKeyMtZF4c3Rpk+1n8ljVGzk3OgD\nwb02zwkQAbe9yt92EYWNaXXquhies3BqaabfzwBxHsePOwq2ITO4cn8EJXVo\noKRrMGvsc04VHxDvqGWF5GsSy4LxaH9hGu7E7NHa5YgcgmX5LA1n7SPE4QJM\ncYgwsMdgRSqVNN83iCfOV/J1mX9RU7oycbFyxDkyHTw2uaHXfGUxbEhqfYlZ\ne+mv+oNj/8JvSGgXK+3xaxtP5UA7WAdq78y0o1uRy8krnvOX9Ux1W9ru99Zv\nXqAkinLZ6oH1ChZTM04Ds4vbqzCs8HG9LwTa7pip8W9Nm1kB7FuHPh1DDh9z\nnnQ037zhgT9IshrU6DmjyIG1gHC109hsOHZpcZ44PF7sDAQgrJ41zP+CoTJi\nq4rm15/6NP5jMNK3vdt/mvlrdWdkzY1Qnty7vnMX9SXa2WqT4gf73+vUXtPQ\nuXewvT9J8Jsfwws2eL9TysAjL299XF3yN18qyo+xeC2K8iiVle9Qh+75byHM\npI5DOS3uxPSVcfSBGSGdP2li/dmiSWiEO/ZRM8/ziGlBAsfE2e9MP78MDOFc\nM9ZAs1b2gQwCC4ezycsthIZmq3Y6A4nZdfT9QhX0EhZBXJkEjnajSXos9f8e\nkrQC\r\n=LnHQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQChLLU/5ZdJkdWuyFk+FyvSCuEYIMBFIIQE9ZQOnIC0TgIhANjKAqzp467MBWidf9CFOvdAft0wrPcIF/tIjJ/noCXj"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17_1540248889803_0.07120660371609677"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.10": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.10",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.10",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.10",
        "apollo-client": "^2.4.3-local-state-alpha.10",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "b5daa3bdf3e1bec9e969b7435cfc5ea6d9f159ce",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.10.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.10",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-461vpJtZNa1xgUT5CMKqL8H5djvdzGDi1hSJuVzkad/Bp4c0mDewb6b2HTsvUT3Cf333Q7gCvrSSTscpqvTA0A==",
        "shasum": "4a8efff38967f3d0de3d7d5e684dbc0e82725373",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.10.tgz",
        "fileCount": 17,
        "unpackedSize": 1356461,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbzz2vCRA9TVsSAnZWagAAk9kP/0j8ZVzzDzxN1eaIDam5\nZvpPZsmOE//p+4bPDeZh8hMyb7GCjmErYXvI2Boqd2h/LOHvu2urur2MSTJP\nyZrFBWy+UxuPcD4Ld9iOwvPmj0gj8F2Oq0oteP7GoDVvtb6Pm89knNAJHAn5\n7sfbaNTr6buYp919C+x6pTsoaexFRbPMviA4m+4KOxVWB1Q5rL0ccaLQ4A08\nBj5SToVjPCGzNVp1ckhmTlilRGe3wRwU+ncIYD004W8k2QOcTZb1wPgaCLg1\nZpNomLBMK5d54HpXr2MHgyA6x07eIiZ8e+1aVsNe5gDFlYbsrbmkYo67PkLB\nEQbu/1g93har9KSpCB3pc6RLl/9y1hxcSjH2CCtxjdsCuTD5WaS7C9RgZAR5\nW5LHqNlGJ9QTN780vkUAYuVx3LDhZsuZ050QBKgUzMpGVzx5lii6h08xs/AB\nuZkQcNR3xwzTsVnQt9guKM/2ieAStx+dxdMhcafWYo2O2meyICw06nM5C+cx\nc0ZovldpfMNvfFpF8s2f72yR9HnWnE/ehE/DVN35aEdzR02HP8goNgDLc5jF\nR6gptxMLgT6+zI17nAH8UsaDwTmDDE5uCkU5m7Ix/1H9PsDsh+3PsGGr5it5\nmW6JLTwVvr7pB+ygSx5SSNykezh+UK/NT8Ujg1joCRaE1LaKPXEN765pS1+i\nhjUF\r\n=T1kq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFluJX0pQukbYZGpOL53znYiNVfrUNvo7n76n7DfNVUoAiEA2iEAwBMM9zotNDmEqoH4BaUq8hzyEYps7XkdKLGXuEI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.10_1540308398691_0.45487426933971764"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.11": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.11",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.11",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.11",
        "apollo-client": "^2.4.3-local-state-alpha.11",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "9cb985fcb3ae37eb98dfca9211da0d45048b8c1c",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.11.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.11",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-Yapj9QdKrr/eUKMR1CEahy/9Fu3W887YppadXBghiwc0DZ0zeu0S7P7zlUV9CJZ23XIhH01buT4MxEx1rDmS5g==",
        "shasum": "040b1767e321e5cef53b75ad8092d4ec1b6777cf",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.11.tgz",
        "fileCount": 17,
        "unpackedSize": 1362757,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0gvwCRA9TVsSAnZWagAAuoQQAKH760cvG0B5Z1YcSPWK\nWX4oCmv6uSsW1xyZeoCE6EQFdjWdyrDXIeqbdXfYGDzhhqA0fcCUGKKOu4AD\n57xFR3Zy1DyJZiB9nGUibiVwvexBBK518ooa+wuyE1/AOK+sdN/aaqQBjjmX\ndz3pjwtrn4q0DU/cY4PcUoNVqmpqPYhkgPNEK/z0SaRLsQ9yQgbaeMU02A8a\nMgQ8kKb29RskCBZI44YOTPzNHAnzqi04bSIVHCikcBnS2kPw5fLCmnuKL/+f\nUO30UCC/G7WFzxzUjif2hD6ByFJjiPNDrVDgaDJI+ETRHp2pp89vCCO15cL4\ncguL1iwcnUk6lJDVWirZluOhcU7F5dpkwO/BkiyXZO5sEAygeJEFTN9K+Bat\nyTsY1pzkFOkz+l1VYXpoHyGNXApmspQPI2B6S3g7ECjQYUGE7/ErTa+n51ST\nt+RHE4eV6oaORT1BEmI02ARn5rHTiQFJXj33UhzE0nkcmva3eQF9WAZty9q8\nmY9Jp6tujLzM5hf7D2ao7XOOwDYKx7z0htDfE5OrdDFuq91KuceOBnV1CJuS\n/d02gsS9x6/taMRo+SKzvtKYDZ5zA2NHi3hW/fumN5fDLg8q41NfVoS8kJ5z\nHgfSJrWPeND7rIjyFmaIyhlZriODMVZ+oJxcANXkOHtd+OxpHrO6UsXQGgwn\nGbVV\r\n=ZTtg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH9fuwpq2mvUJ/WzKlAAHSRowqkUqzRt8Q3vF61NwvZYAiEAu2Cu/3eiQHKUz0pR34D0BkT+CKw7gfxQsOXdzPKD5qc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.11_1540492271395_0.5978500258411701"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.12": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.12",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.12",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.12",
        "apollo-client": "^2.4.3-local-state-alpha.12",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "30aaccf8b9b02340ea0c21b41022802386901dd0",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.12.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.12",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-b+UcLcUaS80vQfsXaCzejP6WaPujO50uB6HPsjmWWlT99NoaoDuI+IpsgRTceJJLDTqIUygMWkzlPgIoEYsPDQ==",
        "shasum": "cf3b9958fe4f45c120404bf27ad45b7c010a1d74",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.12.tgz",
        "fileCount": 17,
        "unpackedSize": 1364854,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0xGTCRA9TVsSAnZWagAAY1YP/iXhwMtTn2eIVr2/GrQL\nXDfXZOhU50megukwSv0JtSwsiYR6bVxLM9z+ncp8olXNn4IH3Z6dERCt0m7i\neTxajN1TvtfHS5XtBaVB4xrNuY2EmdyS5ftsnpZ4edcgiupA7tsS0Pq5gDX2\nQHbysqikdx9hEoQqNzba68iXOdiQ/w+lyvVpfNOeEAwxRBNZYNEfbLWgefHJ\naFDr9AP+nAmadqckXVCgZZbGBzv1uV9bWccYrs8pzH3IUFGoE0Pv+CAyiptG\nEfkfBzdQCIsTXGAYItBj87572q7CkrxAU7taJOGPlEy6QDLp/8pVKhgnPh2o\npl8PUuR6ZufU2oWINIwrkJ5beWfZvMsswBlH5FRfNNL+EhmrgPROtFuqw9pJ\njID1cFh3EV8ZPoR/mhSuyVw4ssFN/qU3oYYw0bvfVD34rfKyhAvQ3g9YnJ+b\n2qCjq+Cdd/EANyTW/GynnlQNhCaP5yznBOknuji5x4wQz93sYdTaTMHc4k+i\nfCjWAS0RTeGj+wKfm/1hwMmpnLtFZaI49zAJmjjbMYe4e89bXFyJYL8IHyBK\nV4hswbvfMUdoqewqD412qYk9H3GsRxo/6YOseZkhwqm+zFnl5WPBU5aQjie2\nS9XMKW1uFwM6xSmT9S9LIdHdnPQ56tmsyEWVY3extR7KlDcIEm81ICbWr1HF\nv+6W\r\n=7fNk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA4zWf0Uh9eLJIpRb1LRJ1HOrbQZRf2sB6Od/OA6J36uAiAj9Gl6sWREDssSgwlaZMFUqzIqnyjJfoUBj07YxNIs1Q=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.12_1540559250299_0.0831663894207253"
      },
      "_hasShrinkwrap": false
    },
    "0.1.18": {
      "name": "apollo-boost",
      "version": "0.1.18",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.19",
        "apollo-cache-inmemory": "^1.3.7",
        "apollo-client": "^2.4.4",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "45d1902c7c7948ef6a34184afbf2cf3120e44503",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.18.tgz",
      "_id": "apollo-boost@0.1.18",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.11.4",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-wOkP3DbaXDyeSOc1WhV8vHVTOSX2x9s6TdwBm1HVwqCKVDBwd6F/HrwzuifYnUb7IlXSVWv6XEth0QTVwO+m7Q==",
        "shasum": "a97843b6c1d8fbc8aecc6dd21979b850d2818fa7",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.18.tgz",
        "fileCount": 17,
        "unpackedSize": 1293362,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb01FhCRA9TVsSAnZWagAAOfEP/ixGQ2nXxuOeYpVacGTJ\noCYKQ7f6+aYAg0WU6tsX9nO9zjczfAtUmyAryUWkj7TXEfUvM2leSszbioR+\n4ZUU3ex0BpY58rvm9IeZaGUTM2xY6NOXAunUQNHPzQ4XWQavDomUG1M/cajC\nXKdGqyB4mU0EMEOwdNpA0mz6NC68241eNWvzPwRieohO4/ylimWU/qfaeCn2\nRrGgB4QMH2K1+jSpx2XFK1ToWmwhbal+zD4AK4Jp/LFLsEbHYjt3Eamj3TVQ\nXdt2daJ9giuINQwPlyhbcit4CI4qV0uWZnGBVHgRQd0HaORvtKLJUeZfUQ/b\n/Fbvco7nV0jabAtVNaTIK+IwQsYKOxFtkV6J8UFOG7sgLwxSz7dBWhoGlhPF\n4DvhH97SNQyyl9WYMQb+WO988sCAyWaIKhFxQs8rrZIBTymveBMrfDceVllo\nivKs8v3DwHvh9L3xr00SP6sHE29m0Q/+GNQRb3wwCLitp9vy0mFO803lnKx9\nV07ahzYhzeJj+O638KvZ4Wx2CHGS5xN/ZB2eVfTuEfmebXTRzOsJ2h52p791\niB/l2ry6wGWN7mjcDxkmTxBRzfim5PPf93FWvDldWFyFTSG/DPtqVLLGvj2y\nQ9jOfvWomsUUNApX/AGWV/GSXSgtcg1jmkTfDcfWc/aPIOu6U7BUDsVQ8m9v\nbsgV\r\n=FjA8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGIvTRfTUQEfM7n9e6qgQdhhRqaxJ8UxURK2I8fb0r/BAiEAmp+WkMqXvKDV+PXXN7Gw3b+WqPef9JfNTXOiTJ/Wf5k="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.18_1540575584677_0.100555332602698"
      },
      "_hasShrinkwrap": false
    },
    "0.1.19": {
      "name": "apollo-boost",
      "version": "0.1.19",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.20",
        "apollo-cache-inmemory": "^1.3.8",
        "apollo-client": "^2.4.5",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "31b0ee4a027c60394cf9297df8f9eeeda3918272",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.19.tgz",
      "_id": "apollo-boost@0.1.19",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.11.4",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-IjY8HpPbOTCGBzAoQhY3qh7cnIAiZAX4azFinkh7g4B2ut5YfJBnLwhfWOkM1rKUCrkoJ+QMZTRIIm53uYvkSw==",
        "shasum": "6ab4b94da38610eb3bee16bfbec99e34a38a5574",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.19.tgz",
        "fileCount": 17,
        "unpackedSize": 1294160,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2HfACRA9TVsSAnZWagAAWjoP/jdvC/IGpTuxe9jtDQ6f\nHScOXJJ1v8CxtQcEPxI7LmhYQAwezoqUK3+/GAnEiHJa0NZmXz/jABYTbdrL\naLXEJ2lV8VeHd0BQ5naxyQPimP4SX+3PqIhcwum6nBjY79IH1uJbYFtLXe6l\nyUWs0zO2i7h2lM53d5hKBNGZna3K00i0k4p+Efat+RSkwellD7ml/w0mnXKj\ntccfY1p+wabPJN1e+TXiUTSIBstGrLaN/5VbpjjdS1k+jzafe5uKyhb4h/q6\n9znQElDDomYgBUVDztItzwJCyMyc4QoouR4TsEIx+MX7jOVzK27q1fcTGETv\nk6+ahltqvYuRbhN5CR+YWbjjYU3Cpx4Up+rTdvmM6Pj907F1+zjI477Zwpi7\nh2/qJeOP544t7kmIkcKLHsiIT6Z+O+ub+GqPl+4tXbbCsyVX8npcKFe6W4f7\n09KNZ8C3MgeF24QzWBlFZk7qSoUdvhHnhOS3mqmseOg2iaW8CFVwFCjGwZ4b\nREbJfGVc1DrYl5lTIwOrk2REJkcU7TbSgjujOXKZI6NMkDI19f+zsekSL2gV\n1d0CYPodEgcZQHWYfKAVSH7UxsLk2zct9hCz5u8563NmTV+O5z1GiIfAMa2h\n/N1jC+Tymkmsnp+B1SUdBgmofdpXCm3qHMaCS0Rr2IY05FymkQ6FVYmSp8Z6\n9VyF\r\n=9mj8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCfOmJj3rvQDC6ruau6dAyZG8KgPSD4uHxi8ufy3ld5xgIhAKMykVJ6vvPfBN5fXXF2Sp9jbq43KPIXq8FlWoSzeSxg"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.19_1540913088197_0.9939648962916423"
      },
      "_hasShrinkwrap": false
    },
    "0.1.20": {
      "name": "apollo-boost",
      "version": "0.1.20",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.20",
        "apollo-cache-inmemory": "^1.3.9",
        "apollo-client": "^2.4.5",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "9e7f06b856b133216bb639f787d8da81a6ab2df4",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.20.tgz",
      "_id": "apollo-boost@0.1.20",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-n2MiEY5IGpD/cy0RH+pM9vbmobM/JZ5qz38XQAUA41FxxMPlLFQxf0IUMm0tijLOJvJJBub3pDt+Of4TVPBCqA==",
        "shasum": "cc3e418ebd2bea857656685d32a7a20443493363",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.20.tgz",
        "fileCount": 17,
        "unpackedSize": 1297313,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb3go9CRA9TVsSAnZWagAACtYP/0i/cbvmoz7FRHf438/i\n6WM9zgn3siQP0faFGWmWCwqY4O5PSLxM5sCLdd3ebw8ZXDNPLRxXhktKT/v8\nJcbSCniUwGnU1Q3mXxzHY0gybV93T68qD8J7FFR/sgj8uyCiPCXCh9OyNN2E\nWuHgabECL/rDQRlpY7do7xzhOmnnPpzpuY+Lr9PBm0oJe1d2vFSOWbGA71lG\nXTbX9icfyFc1oOjjuNAOwYmd+ra5XUnud88UIvtiOhkajVbEfqqdaWkd7tSq\nJ4zrf0ltkNSOkMX2HngDYEu8gWAC+SBCBMoBuDrHfsJaI1N6KV9yyEEJEcXH\nyUIUeKV/vR4k3Qc2KG7ep/qNdKMvgghFP+b5oj3CYm0wFwDS8V0+si0Ai2rB\nZMPwE/09kJEhhMFxe24eMOIVP4pBD243VaQDd15sdB3J6TjLFeF+UpEU41gM\nBplT83Us+JypfXIOQU/jmQYDbgkL+tnkr19Z0kcWK+YEWH1zfwc+l6EYqKVJ\nf1LSrf8gDzkeD03gTrCtk5pgCjyBXg9Md0Y8uLEsqAsGpnDHVE2w9Skum4nV\n+h4ECDoRqpZWGn1koz2B8YaoK+BIu7R5SkyoAXfoXGNqh5pkQmMZXlp4yC+2\nsXhXKFf9UT1okxPrZ5+zz/Pt9+Uj5GuuDNGI0idJXEs52vwgW3wedN4ujpCj\nGqI6\r\n=XMbQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCg0rZ7OFmB1cjB+beTavBfrsbMU7BgJSOuLk+7A0x4NQIhAO2EikoEZSjWXjAsQIAAQ1vKpKv6vClD8uAj4EEEAsiu"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.20_1541278268502_0.5635764904389502"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.13": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.13",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.13",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.13",
        "apollo-client": "^2.4.3-local-state-alpha.13",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "7f2ae57d86e61b38008e56f9aec2ac49f4674a29",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.13.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.13",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-ATzxHWHKKI6a7r8vLiZAdS+ledIOQFMqbX4S0XWfe7SKk6jeCWf09GS18DUW/Ii0SoEL2NEfETmRW2hHsdLBDg==",
        "shasum": "e553965f2870ec539ea02e27a32e2d9c2f335644",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.13.tgz",
        "fileCount": 17,
        "unpackedSize": 1370668,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb4N8zCRA9TVsSAnZWagAA1kkP+wZWLYRN4T5w221Ziytf\nIGVaT9uZ6bq26Ddzzy5/7YNydR7BoeaihyuhDRmO34TPDBG8UXFMW8TaDOl8\nJ54hK5YozyvUoyEtVE3Rq/esYeztoRU/Lj/X/JUfHZ6vDejYknhJQLrrmScT\nLLVztaWBny25ibXDsNRWp5nMBBNxLTXqFMLmtN9R20wN3ZQRrxNsHHBJRtpI\nE3hJyxdJqRkSheipiFrEo3Y9X67ln5VXmvq2LUI4fzBGv8LL+HGHdpUHB9aw\n2zWIbKp37HfR23UuNe2z1QWOeTecbWP49dS5VDzsaRFZ+BUbTxzPE3MpI27F\nDX6VPHw+pMik+3cG0FIViapmWFxXLpPrLlTgSVp8eHjztgSJBCXPzbQvPLdf\nPPokNF1uWUxfJy8gq1wBXGrtNeg491ZjpNlFt05R3lBa8MQGYpA2h303kfmn\ngPYEvHzsPYW0Hizcl20t3cDoexqNrv4EYQbLlstusXxokqKboYTCw+PD6Uh6\nsx3iax1oGIDMsH4qaWSVLeLCfOGUqEMxvgJXy9Mk1foO6YSeq8iRvYCrBvhK\n58bifbyon9QAF8wiSCctFAPQYl6tjn4ZMHQUCxLPuDv/NzQBgboFpwA7FMIg\nEEQoucLosHMdN4RuL26VVyNsXFm6wIs5RRBYjQ4hpQXpqq10gmASQ1fClZyl\nJ32D\r\n=863X\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBWsxncda/l9YWTTKv+cZVTzeKrKAwwF1tz49yco4EDFAiEAyzZJg9ujApBKbfvNXYrncCuNtB4uWtVLq4W5y1ykd3A="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.13_1541463858606_0.9706715716320784"
      },
      "_hasShrinkwrap": false
    },
    "0.1.17-local-state-alpha.14": {
      "name": "apollo-boost",
      "version": "0.1.17-local-state-alpha.14",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.18-local-state-alpha.14",
        "apollo-cache-inmemory": "^1.3.1-local-state-alpha.14",
        "apollo-client": "^2.4.3-local-state-alpha.14",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "312181a01e472dcd68f4857ccf692a737fe7f1e2",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.17-local-state-alpha.14.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.1.17-local-state-alpha.14",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-l6ATXykjxAUUKdTpMKpsXDGL6D3nJQu+dSG+xfhuNut1xYdJlvLzZklacjYGho4zxdqB/m5kEAH+LyqRCVXJaw==",
        "shasum": "be7f5de980c3dec49c398f28007141d85f092eeb",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.17-local-state-alpha.14.tgz",
        "fileCount": 17,
        "unpackedSize": 1370995,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb4eKhCRA9TVsSAnZWagAAV+sP/0jCnUx6tm5nnvnFg44A\nqxcSJl/WkeXQOGlBX+9hhMOLa5RzqDJHu5uupjIQeF03CDIiHjejUbd1L6CJ\nEvaURyc+KKcR5cvdp55WpkNLiOcw2zbQXkkLUkb3ruPbZUc7Jzk01UEQx3y8\nAfRoPIEKvj+W6rn1gAh+YPCmRAVgh+jH3dF7//U49yTunW3f+mmfPiJMinuf\nNmpJ2tIijrDXDmgp7uRolYEIvaI05WBDiVk5dPBnoj7Si+3DJ+EbHuMAeRik\nv/PxMVbr97NyhIcmPDpAJQGpb62qGLnQH45QEXkSdpG3LZz4L2slC3mv+ZRv\nPwavkedsNWRne7ucKiD5rc/Yt8o+rpi64YrFW/J6g/HQqGWAMjmsbC06sspY\n8oCFlzvAtLi1jnxilmWYiyGom51M7/xhkjgJI+nW2Lp5DlIpzeoRyrXWwITK\nG0Lssvx7OhLozqf1gIatBnQHoXlpHyX6w+gZheNSHz0xjsLW97VWgS+XHWb6\naV7A2pHabGR5UqzaKRKed66PxG6h1wrxRh92eR9Z7d2+MYHUlFBTJbOzPBrI\nRATyMVlAXGJrvYFtCjIiwpaGUdXXSsShKD99yKt5Sdkrt33cQv8J0Ot5xwr7\n5BC2ptop8LlFQe/+KrTf8yIwVXuJ4ob3oSNrDxpi4H6LsCbtm9ghiZWrkAeB\n/RAl\r\n=futo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFSibrhtJT9USPGr+YT0dntQcY3yktLmcIJh7eTuMK1OAiA6R6QlmGpbKMVpkRychZkKu0wouG0+xySuxl/6I5/cog=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.17-local-state-alpha.14_1541530273073_0.1454049837729341"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.1": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.1",
        "apollo-cache-inmemory": "^1.4.0-alpha.1",
        "apollo-client": "^2.5.0-alpha.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "cc787f8f294943fe1f1b8de427ed9a70725744f6",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.3.0-alpha.1.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-9hjiJiZHZUKXBZNH50LqetX9JQH7vSVFoud2txqkAf75ZG3xxvGWZYix9h8bWzlY3QBjkC3x5aNjQMBiIzUqNA==",
        "shasum": "38448aaa1e47725e0ea7f298ca87413f7dd142e4",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.1.tgz",
        "fileCount": 17,
        "unpackedSize": 1371687,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb4iYJCRA9TVsSAnZWagAAH3AP/i5gRrcTPH5R+6JfTJAK\nLiw/k+voo4fupHcCBTRJu7NMqbO+glrvtoebmNz5PsjNFSWxqOe59HZddQXR\nuSiXYx7aLiA7LN4ItCy/47AFyXI2MNJyzboMyxCRtlH44jKdYpYbFXpEDFCf\npNJBhK7bdwf4hZAyEXIZOWcKytkPf5EbWU0rpPdL9LLOvPV5jKyBuFxkEiVK\nWUb1nzLOSl23ZDy0AU2KL8ldtPn8yR6Mdpp9Hu6DStJ2zzApgMZMloHciyMX\nbJ4w3JLcsmjVM3UtaGXFem7s0YueFGO6/fvks9lXt/Fw3uOqXidviRqTSeSY\nM36hiZf8fpfwZjmCebQgeSSQhM7ObIFhHJZGvJNn/SrHZF7Ia5IzQ2CYplLc\nVJMUTTvgJtu53v8sB61+8LHDP/UzODBoMm1pYaH30RuJY9vx0Fq6PIzxKiY/\nDTNvyWivmvRRl3+J7UAjQlvhec+xSGRZGDTxrfvJv5/7rnWyCKno/989pupZ\nXgsjsjoKchPmZBAgHvHnZEjAwBL8NF20iVZCyS0h3+uf28uwGNd8HWuEJCV/\nNgy3LrnH1hFfMrVlzLB/qtbFdMqyn9C3qd6j7nese//rZgAULVXJr28nDcFc\nq+fhx+aCp43dcq/L3R+MfloxyXK4ZuYUtdUV9+UHp45dDHx0XtGPbOTPmFQq\nrKGo\r\n=a9H3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDBWyb503mJW/O2T319HY8EEVNHVVDOYESaLXpaPhFwJgIhAKtN3HV4HaUxJRHHDQtt/2HBYwg3rZakmJLbQvefstOk"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.1_1541547528439_0.969541950144017"
      },
      "_hasShrinkwrap": false
    },
    "0.1.21": {
      "name": "apollo-boost",
      "version": "0.1.21",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.20",
        "apollo-cache-inmemory": "^1.3.10",
        "apollo-client": "^2.4.6",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "87cecbeea9255b6c3c7f2e4b2a65a27819609335",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.21.tgz",
      "_id": "apollo-boost@0.1.21",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.11.4",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-3cA4LjzrMckbX02Vd02yfKsgunnqdZTLE5SRXr7SCzfJfkPjmD9VGS8eLUCd/FE5taM/FHNAuqy3u3PaPCjYvw==",
        "shasum": "1c6b5f53120bd46faa825715da40cf5578fd6fbb",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.21.tgz",
        "fileCount": 17,
        "unpackedSize": 1297498,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb70QbCRA9TVsSAnZWagAAdJcQAIEHuiNVrUQuLO5nGYeo\nmLYl+gNkt2GuWY/QSlWsPksEK3ygFnKv4ycJJCsihpm5joomDbdI+zbeBnCx\nbc57rzl4+9wRHdT3SDnWFOQMNZ07RxYMoAzj1Hlv1QdJxHqANfBBFSwBsWLG\nmwWGMTBY6XvgWkT1xGc+NmO6ZeEoBT70mAL5RPsJ9XRsklkkHvhGdCTD19iR\nkpFMPv7pnbRpH34XsEGAAMXlhc8auKwvZGAs+QW3clVwfEUZCwF3VN6t+hBt\nHcCRK7jH+ILhV++w9XSdUfIgkiYokHf7se6ancmPBes53EYsCd1Wb7sGJITo\nYT20iAwj4sNR0NkrVwLPlOgE3MKryxFrVldJJ8EhnzXAre3y+/l8d/Cd7FV+\n6pWP2AtIJrq2ciz8E7GblvtkRQ7TyHKZlUQNAVTBLyvFk/gxfU7/HoJYJrEm\npom60W5jon0cvTIasqIH5LNF4TCDJB5x7AnSrxj39K8ZyImQSB4RjLOVSkgg\nYv2nBKGiSJLcYht7LLnqFvFurXCZLX/RJ4gzEdI74bZrTLPFaRLbmrTa/osp\nP5MD11Iq21i0LL2g3irwxvmEyflqdj8ZwHgT1AjX6O0KdA83JYzkA55+LELf\nuAY6I7XZeGwBKiCIGlyXcgtOesPYh9Nd6tvMV6j8UY/kljO1vfr0GYdB7KOV\nBNzK\r\n=gxBd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC9et6lNAv9vaT5uiWZTog2OZbacq9lY9sdC9YvGo+qTgIhALlIk+J/5RRLo+I3cDbmQrYJXg9e+orNWXbWuFxlWU6m"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.21_1542407194741_0.6834298302141311"
      },
      "_hasShrinkwrap": false
    },
    "0.1.22": {
      "name": "apollo-boost",
      "version": "0.1.22",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.21",
        "apollo-cache-inmemory": "^1.3.11",
        "apollo-client": "^2.4.7",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "1da881cce56a1cde8e2fd5eb86e9429f718f09b4",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.22.tgz",
      "_id": "apollo-boost@0.1.22",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-JOU2MIhJISOfL/2hWkuBqH7sqNs28ZS8wRVjmcMEJ+DjmF5otVsDBtx+IMp9PEReoznrbSfjo3p4ix4AgtbooA==",
        "shasum": "0b6c607fcb02d06894e925010560b3237d1bce86",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.22.tgz",
        "fileCount": 17,
        "unpackedSize": 1299906,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb9aB0CRA9TVsSAnZWagAALwYQAI7wECp8Alo53f1eb7vc\nsqiZfveu+OopLICC8MLOCcPztsYYZdDRIs8py6gjRZT/ZLUdk7RHYJ0Yz3II\ncCpRwWhtqCv5JedWOBZMc4TVGmCVf9+juJAlLCCb58G0sHOQXiSDeNGy2qeE\nkfftJyqI/CIKGxFsvrj5WeyQ4SbfFgKFDgWBk6F0u89iYfzPlHvVAABqulz8\nujIhC+rUJfTcpkgAumsZg8ZIG2LT2PNqTyL5jrPXFqXWMtrYUL9wRV0CyVsX\nrt11KByPKE6xLl+A2o1qYbMI7LSv9mABP03HbEfr+DiW/3gz5UFBgp1q0Bge\nnZMRNMvzv+99UkKQuVN9euIbwueKYThhaX1gpRUi9jP0E/4KvlLBb6LnVsdv\nuJfnveJOnYsRtVY8BqDfL2znQbLpNaff61c1aD71QEJ7EDh3NAEZDMC8C+DN\nFuuW0203A4f5WPT7jiUrAnhPjDFoQkzEZhb2d+4EluLeOM54mh/EzR8LOZ9i\n+geOzvl7B1BEDI5e32ssnjt4mSezlRIQGSD6wmSyhQWZ4tSGoO8xXRydqAXV\nMyEeTxmRrIYNeXOLCFiYO0+pf3wlyfMgNFxkYFLU/H557rekrC2tG7HfrBsW\nmRtT5dZN3swvQ6TQo6V6IBOIYuTvo+tncHg1wWkE3d3hFh5Cqk/PmrqOnI1J\nIFZ3\r\n=b8kB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHMCeg7uGRFcFyKxwSof/y9J7vE8wJZ21QCtBTsukGCwAiAvz85vUCdJl9eHPDy0yY0Unz4R+UfliRu4kaygiiOp7Q=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.22_1542824051637_0.21285718256367447"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.2": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.2",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.2",
        "apollo-cache-inmemory": "^1.4.0-alpha.2",
        "apollo-client": "^2.5.0-alpha.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "a3e32b0ec42d221d443b402d108b428c53975d05",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.3.0-alpha.2.tgz",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.2",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-9FyU58FKkdeYWCwHnE5TyNpNju+xl9tFZOciQEYZSg0LNg3R0n8AyO74iI0cj5ZYrFticb11PURromP285NBzw==",
        "shasum": "19c13021e4629cbb4d452a1991011dcc72aff08e",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.2.tgz",
        "fileCount": 17,
        "unpackedSize": 1355013,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcDxMICRA9TVsSAnZWagAA1cEP/Rhz2TiqCINH6aFQ8dw+\njmiRoCqT3JFEjd6UMn2iwHqpU8pQqMVS7cL1EJCwqvSbR7vy1yiQf5gJ5ZG7\nhK7aOgt3Hq7Yteeyt7La4V//iG1QU6dfsSwshZyqzwbrXkLVjnKRHbdj/qnh\nyXN7KL1xmShVHE+0QBGM4SV7Sq2mnw01ERmPecWayA0NWnwYynLyDfP2rpTr\nxFQ7nn1bTNDqX76pjZpyScPRw/vTf7JwHeH/pHfXHKXXBB+6cZhTIsN+0pay\ncqAZVYcVKVT7jwleMqCPoJDrV8jBcv1HoHmfetBI54fhTWl3kvVurb6ozqBD\nD6X0tBYnKflBKUqb0dB/ZpAPTTgRJqNBSbg08qcEp/6aJRwV6i+y6l73zSDa\ndRHY209XS1C/ybgLA0OQNqDDK69KMZRv5G945LBsoijE65h69gDo8URRv01K\npqGe17UhME1B860V2sKnUibs7P/q6gFRSlxmfO/S2G0rqHBgrGHF1MMxzG5J\nLYD2awYam51ZL5DmuN20X7W9iEW0RwLnhkIkMUYouLb2EZ0p1SrOM5jqBA4G\n/5l/StTXXHMFder/YVd/VoY/jFxFeibf+EKFIHu0X7aWujBefPPbX5ctOPAk\nqNEqQw2C1dT7gOJNsDjIXu4/or3onBvnUWOHHFgHXMpgR94GBcDfQ98iqUcm\nkAOF\r\n=2Kk5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFZg04IBZIv4X1GySO9Rf1Eq62OeHM3V60vvoOedx/jnAiEAgtK+p5oUG7UZy377t1x+Dz6Y8RwhLMN5J5q0nLc98pw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.2_1544491783621_0.04711044106291884"
      },
      "_hasShrinkwrap": false
    },
    "0.1.23": {
      "name": "apollo-boost",
      "version": "0.1.23",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.22",
        "apollo-cache-inmemory": "^1.3.12",
        "apollo-client": "^2.4.8",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "4c78a05160c4b0f236eeae99ed7ea4d27c8332e4",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:apollo-boost-0.1.23.tgz",
      "_id": "apollo-boost@0.1.23",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "8.14.1",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-yQr1Ph3DEVvU7XeQhAh+6p2wZ++azxgGAtwXc+D5EP1CHU0HMVfVgtj1M0CDO1z14SZgQbrurQ60bgiyquoiVg==",
        "shasum": "9a9b806cfdc1d29b0b09b1ef0a15fde2e71c92bd",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.23.tgz",
        "fileCount": 17,
        "unpackedSize": 1299378,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcGp4sCRA9TVsSAnZWagAANrwP/0/8iDcuAbFhWSPKjSIQ\nX6wpJqq482bup9tdEuWtCDSAvtYT5tcpwke3v+cilCOh5mhWWXybzXcqtRm6\nueYiilIuT4iLyBt87ZsNG60TuDR1W2vCXc09it1uEbPPbrA1xLUfpGcPGyNx\nTL2O9pSUiF2Kg5py5NEX4czu1zHeOniD+bsutD5p0WOgq2llENXNJy7VbRpW\n9Vpe3nzdP+dlzEEJ01OqpRLJLodqHyFO219Q8jhZru3CDnY7IxVGE2+ffD4e\n8qX+yFt8+yLimhxCzeOWptxRFdIa7ISg/gi3J97o3ySJXiqrqE3HVmQoTs9G\n5M0O56Zp3NQMFcYaIyZdOvfWL/WfFsifAk2kLwiJTMz38kC32nQEB4nm2e/T\nj+mO6Wetww0flH1STzGyDdymqwqRZc2UL4MhJdLFhcHpg0DVjVBrArRk64EY\nj66Uo2m8WQYSURU9N2wrAeapjRa2HXsKAUUFsqDMxmh38T3Q/lU9Tw/kSHA1\n1q6vFRRS2Wa3N98krtAE8E3l9bQYdMoLC6IIx6OT1fZ0Bp696i70bXtiiyWn\nanYqZUYWzAame04Qp9QTi9iGf/gyXIBE4MeGJ0hmTb8AqvNR/nfOgMQcJ7H4\n+BmFEwMzg6TQQgmkxUUv6ZX75UzUIt1BVvlUyB4ZygKa/m/n7uPaTIbmH2OR\nWV51\r\n=opEi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDx/TOmmznCgPZS15VSCtvtSdXAxbR3l1c2FgQpdFI/0QIgMAXjU4r4hTjFV0Ycw+A67+Du9Dpx/UHDjv+0vOtWdxc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.23_1545248300213_0.5434615794283633"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.3": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.3",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.3",
        "apollo-cache-inmemory": "^1.4.0-alpha.3",
        "apollo-client": "^2.5.0-alpha.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "44927d0674e8b06486aa76f325e9e5e6cd2c4887",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.3",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.8.1/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-4XQ/fTSFNTalwxtX8SWIPMOq5d5BzDz4ApewGV5YImJhy/ZB19tAYsAjdLk8YsHk+9vmJeDPneL7K0L6xEVNBQ==",
        "shasum": "c7d911e8431cf646b62f156755a707ca29f3e641",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.3.tgz",
        "fileCount": 17,
        "unpackedSize": 1373262,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcO+PACRA9TVsSAnZWagAAUnEP/2v7uPgWG77rJtMYNhq6\neke2DqF14se8gIITs4vIj1YBQ5UOKm858gru3z50FYtVvr0r71VS08xqiqrP\n+72XIKS4XIhNDEvhssb2vdqC5oH31sDCx/xYerWyGspcY9niCJpgaRZaNzIw\ncOLGuR3vRN4sfjZVLRNTZGPb6ifnrcbFRgld4+wg4tfIAVvPeRArRKkCQU6Z\nR8WYkvWfohUKr6n3IPy6e931VT7/cWwWOhuyLdShSjqSKBkDdffHlGW5Fd80\ng6ebCSST/Hgho9vILXDWn97HaAWLb0WHVRqoC9rDAnq/BVUP1z8WmT+n5MSJ\ncc/p1ukMRkOq52sMeWvRLzYH3v/CfjH+xpLOfC3Xjn+Bpru9f3/5s7wIadVq\nTX86cbmMxpv2L2SfdtGNCKyUJhV8sIH/+SZBk9wObnyBXKoNO4F8m4ZaGO2I\n2ELwCA5XEmI6bYKTtFNansTcmtLQLI4+DWHjduCpjGT4/dwUXjhUkLrWzPtd\ntr7NMGxGVLQvJSiTfzrbIf3CGQY9z7qtdffrkPZfdUhytPkPb9d5BO6+3ytV\nOg0tMXN637h9RZSXfSlmuVFov2ATvC06bPlyr4FOFz9cd+0Yh3Tbk0ooXxDm\no8H0HxVqlT5KIXD1EYSyIFtnTvjoWxdVpcHxJKVIb0HPBCbTpSrXyvWTX84j\nZAP4\r\n=73wF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCvd4iCls7mKco6YH3bAsAYyJLTEJnyxQZ8LXkLAKTJOQIhAKcSAvA/bmGEFFCbRGPQP52zisP2GCb6s4/GBjP3PHkc"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.3_1547428800358_0.5830697064908867"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.4": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.4",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.4",
        "apollo-cache-inmemory": "^1.4.0-alpha.4",
        "apollo-client": "^2.5.0-alpha.4",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "6bf7f68d92e44cebf3578a4abf6fcdb83a9fb86f",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.4",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.8.1/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Wz/WMcqb/rZsnyfG63PJkqYjr3lxRA8U4U2/pqZep8Ks0kFfXvMXT+KeZcmFErYPfkfRXSuxwbDnn7M3Ll8wkQ==",
        "shasum": "6933ad82572379977279d63e0e8847abfb84f101",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.4.tgz",
        "fileCount": 17,
        "unpackedSize": 1373270,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcO+hwCRA9TVsSAnZWagAA0UcQAJSCLRgOz1lO9vQeFDmh\ny17aolaKqHDl0vNXY4D44k2AoF4EVCbab6zloD1eWras36oZAzqRL+OtT03+\n/4JOpnIRtK3hjoqRzEAWLqDlnWhxAn71nVZ/Rud925eVm+j/yJwTLhQMf8Iu\nSB6yRRKp3QM/w4SIen9uk2nnVVuqYWbyenzwSgSMEIAhMDnlFska8o5czqFZ\nHw3Id66mFnAgcrWUEh8saYB8PEgZg+FZkM95qHpoLXSSeP6YCCyh5RXisKdg\nIhUaHrcauAG8UC/cL7EkeN2poF46iIYPKdzZk1uvxATYTRBN+qFy85FOSWZq\nhaIaE+kHP3mbZ3Ajdqme8vmU81d0jYWYoTKDdyXL4jBnTJY1BObudM6UBvV8\nyZyuTrX1DjjcgrhxQok7frtGE6PAhuIPF/GkMeFF/N4MwHpOYQAOTchzrkdB\ndcsSenz0JF+uoY/kAwieLHQqaHYl0o4lg32G2fMpuVdFUtXH4rKsk9mzq3AS\ns7kZlP+RWnjca91mVSDuzBgo15ePufUE6nGJXhnzUooTbT0xMo1GGJ2/Sx9Z\nrSgLQsnpKPOTXvMLOVwWPplJk97s5MpDTi8ZquFPnFtSWBqJcieXJ3p5YXH9\nYBs8Dlb3GTSjLKgR5c7vC0jN6RVt1ldXCEATja1oHMjz6v3Lg7+eiPRnoQ+e\nXR1H\r\n=m+fR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD2MUwZ202zqWInFzIqgwXcmYuwJ/NDpNzpRcmOCHTwbwIgYKPXqK6yCfqirouZmiRMSQD+KRaQVz7uITmy6h7BM3Y="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.4_1547429999923_0.980555033923866"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.5": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.5",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.5",
        "apollo-cache-inmemory": "^1.4.0-alpha.5",
        "apollo-client": "^2.5.0-alpha.5",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "a6678b338c97aed4772d21e94467b60070cc5982",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.5",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.8.1/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-FqMXgBxxH4JIQ8Rd/bW6Oz5/q4FfVU6YLHRZgfmPAHzaCts8rZ4wXJr+632vO7hw79dim6aowoxwCLl4we7LEA==",
        "shasum": "2c63357f5010d63dd6354568c2182e4d9ce843d5",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.5.tgz",
        "fileCount": 17,
        "unpackedSize": 1373270,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcO+l8CRA9TVsSAnZWagAA89MP/jaAz42gnwVThx+deoGC\nnX6J3VUvGcKtzGCH9PLMnx8gFadBqGxrNfuceMgZPO3NVyNGQzPJShtHPmS/\nDBSRXHTe8cblu6RNt0Y1bhQ0xQzlYlfvGqrESJ7/sV5Bt2UbcvVoXbe2DZC0\nJCWWx11vgB8uJyVN5Ixjou8Z062EB1h/W74wTKIsyftG5gsGyE+K2Ws4LAtY\nIlevPCANDhzLj35VgiKcCoLaIK7I4iiqm1gA2/3hhD3BId7Mwj4hMQcNPOn1\nLdb17LVG7537i2KqL71Bwrql+FMLyIB6xYMqeju+SOEqdrzhAU41eipkbZeH\nqfOwh4vf9L1x14phCZRt0F5av1E7RWyAOT3BUH5r9rj2YRGhuL9Cp0ryiwos\n4mhUfq75s4A9PzSEErHfZ0DcraoAJ1+wk86xY7vvSdNxm+2NrwOlTOEql6PT\ng3V2DK+Fzh6eTAW/OEMNcVzOo56rgLvqEJYAwZiX5KIdeYGt/9yOktZypNCq\nVwEGk+nJCjqvDRvdaMdDKhGOCWwApAcm3CGrRl1sAy4fnsCzM/BRKXWdjLQ8\nhBY4/PISg96Z1HSi2fuTgMfzC3qFywzoAW9ML7aXvgjJ2TRTKeF6RxuY67bQ\nscobVrn9hyeVDRUGAmsgQTz4ONK8ybv0+M4d3dEiDLVmXtLy9evH25YbQMeu\nZe1q\r\n=R2es\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGVR+deFVbDipG54dagK/EakIHwzQ4H5K0c6W+98nh+/AiEAp+COBVxUiQ2LM6aWXPwkuK0MmQFLiQrmoCmX8RgpRYg="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.5_1547430268135_0.3043808261082923"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.6": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.6",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.5",
        "apollo-cache-inmemory": "^1.4.0-alpha.5",
        "apollo-client": "^2.5.0-alpha.6",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "72839cd13cef94e10f93b986cda6322ea5704010",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.6",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.8.1/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-7wS5BRWEZVDRn1aGRiZlreAxb/qKuaKfphfloRi1VwwqczI0AX/r25tEa7aaohPVRY6YCg/Kc+OGNoyef/XfQg==",
        "shasum": "213c97de9fc4cc17195a1237de8bc7ff3aa9318a",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.6.tgz",
        "fileCount": 17,
        "unpackedSize": 1373270,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcO+sCCRA9TVsSAnZWagAA2p0QAIML9Oc6aN5sl9tt290X\nD2Abq54tRfFL2pQ83bkB8LMzJn8rxh+vi2dNdAw52yLnW6uarBaiqDFnURuk\n400JDRYeQOKbNtR6h6J2FSFprFpcHODBBg48NCgkjlqMyb0iRwmOzhew7DbG\nuQ+CnF5zycWQrUfYSkPg+lWu8zbdn39xhaYv66cELimpexAQ6vxKsXKubVlE\nHlmZhfwB9Ddl4SSh2rzeZfjrRs++5XB3oSCi5TQ9YoupQYUj88U+bLxsWJbS\nTkf8pUCPbhbY8/etV6ruWHYNp4xDpHjwdOyqpPD6u1LPmBPt8Xlqs8Hvm7EI\nBju1mIPs22JlHDtHtN1SuthozckPmtr5/ANIHkTjOjkgXi1gyBzirtiC0Cic\nEphouWIY1CPFVDXCssKZ0/Qrl1UygpCXkOiJW0YipHqhefmlTi2JWDHRGWJf\nRhyUe2i78VL31thgcd1RbL03xK5/e8OZSid+0TOZFlvgZQECW1zLVcU0De9f\nfZdwxxBHWZOOvjvYoWbXOm0sp4I463lXCqLjsBz+cKBw+EN27hAqXRvp1puX\nT7p5/wM7CbQ+csP9sbuFzZGc8VxSz45F1YvhP/jD2fBPnE18T2JsfCmKQwMr\nKstwYN06m+2W0sT5r62/AWuL0xFjzSUOf2aOKXfmrAicK47BW6h/TevaHBfP\nV3HL\r\n=ahMu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBi7V3ZRejB7Ef5DrumKyIz+JACYCaP4tOW5R7OLJgAiAiEA9WpM78+LmosP96sNMW1pLR7PoZJw9VA8c5DcfjwbLKE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.6_1547430658353_0.008460854373677495"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.7": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.7",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.7",
        "apollo-cache-inmemory": "^1.4.0-alpha.7",
        "apollo-client": "^2.5.0-alpha.7",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "2d3e19a31d3fb2054980211e5a6d357f7726bcbe",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.7",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.8.1/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-t1s2LsQtjDGWg1BfI2uM91BiRm7xf4fTlglGfWWdghzjVNDqd0LjX6pG4TEXDSmgXzmErqNziAjztr29zaeO9w==",
        "shasum": "4adcd49cdfa0eda8cc5916c7fc9cdf0e88b371a2",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.7.tgz",
        "fileCount": 17,
        "unpackedSize": 1373270,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcO+w0CRA9TVsSAnZWagAAY0UP/34berIi0VSDEuUU1JHO\nd/0M8cozAHI5uC6G61pkUHJBp/+jqDITWkEeSB/XPU+IiAfD9S9SUJi5O/RO\nIFZKt3JZ0JaULN74VqsJL3EPq88m1qjwtrJkjYEBmi9v/l8s+ehrC7G37ZLs\nJaQnZGMheUQCwDvU69XV6lVaEFOt+rriEKXsBqbl9tqTRM9f8zGbvju6F7jL\n50/XhmvFaZfiWvP5/kSqoXBANXbjCq/gTfBVrKwZPjZeWfMM6RwxNi/B5zdl\nkd8vjdFGoQiii35Ybag150/hulVUX2AifFNZnIp3vcCg4vysWZQjLMFUgFIB\n00bb0HqnoJmpY1xeStzMlOrE1t2fO0I+2CjzmUlhSI1dwFnSqrMgodbjxX2H\nuTRV9gcGSjcdqc8EI2pVPoVF+faLTaciXVWrK6onMgvhgHtroDPcJU4T2ycG\nUtJH1TN6IKpb5EuVbp4DO3hJpErWzEYA+BuvOcRCMz6Al4gf55Kkwe+GpREM\nPoYE6EKwsLLEZ0FK8bCtRxO+uhWQeCG+X0UuATmJqHX7Amk7Ycztapvv2IxT\nxlxScRE5gYILX38tzu2BsEcxaPQlFnkcBfx+Nw/omhNlB3gYXzw0zTvs8rHY\n7WIHlOLWaNhItkEKQrWWm937KSc1tOiLMqhO5rG639ixBuCmnw+UxqAwSpBz\ndm34\r\n=Em6H\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCNi4I/ip85S2yyqq69PjGshCy7QK/dgdo5W50ngZxRCQIgSjGlxqa5UyVuwmHF9JXR+fJO83gm/ADdzQw+I+CqW8c="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.7_1547430963578_0.9384104873803636"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.8": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.8",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.8",
        "apollo-cache-inmemory": "^1.4.0-alpha.8",
        "apollo-client": "^2.5.0-alpha.8",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "3280afccf6c057a9aa716cc834a2714a03b98da9",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.8",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.8.1/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-nmQjmyUMKx/KEu0Daw6hybPHA73g/vxtNFv4jnEscViUzVqEyR5vdDXjJef7p0Sj+jq6I+bDe2BUZwtH4OGzLA==",
        "shasum": "798ece334f77da88abd8a802a163ee14389650ce",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.8.tgz",
        "fileCount": 17,
        "unpackedSize": 1373320,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPKA8CRA9TVsSAnZWagAAsScP/0V98UBZAW1egQpPWwd1\nmkQBWNZ8BQ0gzs3Mb/VNFrISFJQ/7WNHnJ0v+e+gDE0qzNPVCFPhhvFgs7TB\nJUHtVicZ/kxh/GTApgsZXvIAwPuE14oAVUV1TWqMZxe6MWastQQdogoJbY2H\nMvOh0LWyKXk9btIXnvNxhreuYnq5CF+psKXqWZIJv7gjkbKIBlQLRh3+264t\nAakhr8lF17xkNU5T26/CNKb9jIodXz7cJVu6rk9NDfXPr6xs8XTaehZ4tosp\nlYHHjBiQb88+cS2TnnJ9nbUsy0Jz3rk8NQ4E1VMdVB+SOHCh6C9s0ZVQEGMm\n5TSMU2csbHtMODqPDkPO5PkBplWotyxB+7TKhGT/xcaSbgghmq3azmmdALDp\nfwKSX7fgNDaa2UlZdBSa1UYuW0PZIGJqaNc58bQcCX6Co4kQQQFjHy4rFVLl\n8mX7QbjPHtFjBybiCAkteULmNAf0rwyZ+ywbMHVltZnXOK6IJZwkkctAGj5U\nXaJZLhww2VH5J165r+uwxfJUjcAwa1QsUqS6AEZFK7bfc1gvoa6dFb/n/Z0s\nd0Fx12VHoVr5MOXweDGI0cS7HOT9yzHTgRyEVq/PBGes5BPKWF78B8yVRQGI\nZMAEiLYwrkhpckZZAdR2USXX2DETuM+DWvsmb9UqAup9Xp1a4aqKPtC7+d4W\n2mcj\r\n=qG+a\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFius7xWlzD8PIpsYmEvoZVZxnx0DpF8eF7yiwq/K/7eAiBBtJ7Q90iSPH9FmOLKLUmRoe1kUAl0h2w2sh5zezDReQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.8_1547477051602_0.7581528485165676"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.10": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.10",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.8",
        "apollo-cache-inmemory": "^1.4.0-alpha.10",
        "apollo-client": "^2.5.0-alpha.8",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "e424cc917907a900e1a89b86b879d2b5e1e089b6",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.10",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.8.1/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-xtVPjosa0UL25HZMn+VY7hosUfrv5M0OzRlUmKB5WmC7WFUJKcOjn9ySIr8oJUfjJyFodiSoDzzWYcy6pgBHqA==",
        "shasum": "c281869bd283b1c7c83e9fcb5039557fa76eb01e",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.10.tgz",
        "fileCount": 17,
        "unpackedSize": 1373272,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPLV2CRA9TVsSAnZWagAAJnIQAIDk/1c5O2vXLqi5nZbO\ntf61FkSug+Q7YBLufSXFarRIBTa0QoVkzt85QRjDLGMYGc2tW0F9R+/j8Kbv\nB3wU3lI/uC6yzBi/1pL4Q3M6RjnhUax9ROWY+mb6AOz3MGGY9LTJnQKmFn6T\nu9wICF2eTdTbaF78fqtJ3kiJ68ajrDRxQjf0XnbsvxykCX5aIpvr18PLMW/l\ntkOmrtq4lXIllPVt7f37ia3M8DdSRxyFtrE7VLoD54g+Yp5osNWOZsqI09rk\nvAR446L0yYRAjaHgt9q0E7lS1FrNeNrNJNVxDcKTiQk15kH3MiYmI0Gv2Okn\nfwDRXjThAM2GeQXFD5U0UZi12FbvKGOvQO0XNq/THGTMdxJ5wHpUKEoVDup1\n6vYKfBgTzKxiWcNPLjH3bkUGHEuAsZzGoZGZGQEjPNx2lJaoyXgzXa50yCdL\n17R+YqXLtlZbwMtxWxz6HTRVDs3cG8fL46ktnVTVHas2nnRu2rWJa5cGFvCf\neEPCTbXHoc2Sk7Q811JcpmPTgrn85zzO5TB73zyopxrKuMpAdx7ayqfzwAH3\nS2pQOxEWnQQ0GbFPjLHJwp26LEnKcdBGP8RcE/ZPbfLaCtGZ9MjNQIKhPDIF\nH+Ol+lWz5R8/Z8+8czLGjn6eix08smsoEhh7YXPRRpTs+YqGU4CO9GWVJnDO\nD5Fd\r\n=8F6L\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBGalKL3fVzIWG4UE2xRZGX8iEdVAxt6bT4KEgZXfNhiAiEAkEDpWnOB1DYmWzLqjFbbhNtMlA5HRnZgpAMCDGTKnd8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.10_1547482485785_0.7468094366517755"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.11": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.11",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.8",
        "apollo-cache-inmemory": "^1.4.0-alpha.11",
        "apollo-client": "^2.5.0-alpha.9",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "60a1b9990558a5c84bcf1de2bbe25ecd5f5cfe15",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.11",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.8.1/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-bKkDqirH2e/KYRTQ7XBvzijPgzxnJu/nyX36t/2RX1AwCBZI6NFzBCMqHIWFdAnK2rikgMQ14AGCOY/lGKwX6Q==",
        "shasum": "3374019173b97edb5875176c0db72193fa5ae315",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.11.tgz",
        "fileCount": 17,
        "unpackedSize": 1373272,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPLhFCRA9TVsSAnZWagAALWYQAJL2mg9ElYJVa/jLBuEu\nz4Q4VfZKuJ6/CsuR5b7iqrqpKBwWKOvCOwYBssx4PAJGNo457612geZIj5Zm\nfJilYpTWt4bApWRaBGzcAXTfieDxHViom6OuZXsBiwhK7opxCZ5OMTu9gCUl\nlwJ6WAjUG6q+pdTk0vu701dpQAiZdUvECvdGTNuILS2F02x64zJY/zBqQiuh\nsE9rZTim0MD/vooGkenQrOv/8EX9/wKq8/XCcKeWN5plPohcwezKnI9Ou7fI\n9oEc9wzGQLRwDl+p8rYQObjifuART1zkmy+Gi9Zy/0bEOYrsGeaXR+zg5Zu5\nhm0hbdNJbk2Sg9piuqAk5UXqM6RN3hkwLI5KLWVsq3pVS/urkrFZ3IOlcbEl\ny9QM1/oRtzV/1mp0pqz/71Cn0e02TjxeodfyNBtj0Ee4YPSQOsRQOXmuVqMU\nRMNCFdCCes22t3aseljLxy2xx5l5pafRoSihLSx/48XyNomZtoXqW1qNihWF\nXdpB5v7B/ZQyQ5SyvnbWKOcNf0lXuchkEhSHfD+8Ig0honOKmb+uOmpA2blv\nDIOJMtG3C+Yc0jcbtKGW+JCPB1qTFh/vz8G8boYTng+20TelyyswL4v41Z9c\n6IpO9pn7a+ufBTRqcNVRAaSKw8a5P72ogrowx0dATSCRWWshIe9vBqwyWlqM\nd5F8\r\n=c4TE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE6wzDYISBMAxBK3gmzbNtwppCdZcTOHBHDyoxwTiXL2AiEAiKP3YPp298wFhQPLxNVeyPlRe7n+Zsa8/mfxw93SuXw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.11_1547483204499_0.1843837159399888"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-alpha.12": {
      "name": "apollo-boost",
      "version": "0.3.0-alpha.12",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-alpha.9",
        "apollo-cache-inmemory": "^1.4.0-alpha.12",
        "apollo-client": "^2.5.0-alpha.10",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "51e7d9af321668f188d66bc27aa4122bea96d2be",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-alpha.12",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.8.1/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-TaD2oOzVNmPMljl8LEsn5Vu5dt4FR9dQxgukUkDsSClSOUnjcOMG6aArCjv/roBLhWLdhhmE8bmR0dFX6zrrCw==",
        "shasum": "a9f25e0f0b3ac14ddc17da3f41f2bf608e73ee0f",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-alpha.12.tgz",
        "fileCount": 17,
        "unpackedSize": 1373273,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPMY+CRA9TVsSAnZWagAABFQP/19mQ2bq5tyYvhp5b7ku\n+0o+3KXachUnm8552oHnZ1R3CiBXjJKUPN0KrxNm7aMJIMhUeLbVwL6QPlaF\nxidS3CVQFadqa9LpsPaty7s49D8nKAWB7vGkt2nj4t3uWyBnR7B+vuGTt6Zb\nQD97B5nZ03XdNCiLtPNTv6X0sT6yBU4P7tn/CLS3o7yoStB0xO0FuKA0gYJE\ngx4i+uzLoor6ut/rak9IRUMYBpXEIvlLmKFJAIVLb6vlPaiCRyfd0JStbYpM\n4Q1UYhFfBtQ6f0dLLp7G9UKCAxrl4suZaDkVrJqQhX89Ff5mtq3FenCMJUV6\nGDtKwqMI/AM/0vJlOTQOk3oNwuhZL4pjU7984cQLCMtb8o1cJ7Gl60d7U+g1\nCYkNzKLJorL9RRHR39Q9sOOo9PEOm2E9pP6pNQn+dyNGxH9wHOG/Mkx28Tht\nqT15mCPGnXSZ5xmsxWzqXobfFkAjwiow0jB0pQUkkxOhctvz//JTAXyTvOJx\nQ3UbWAYo8vZeC83c1fNwBRy/eNFzueEOvRJ8PNb+uTraFT0sOmQdW6KpMhUo\nKiyMmZFB7o05ZWF103+PYtHKWmL1NannQBe7nzPWqha3z8j8A1/O9dtL65ln\n1CWIjKanMxjq5GEK6aWNRXUanquMVqr4Tm8ENLEsMHDF0D7NVi5mFMM5O3Zd\n9kq6\r\n=QusP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFfPIgmCXbtO8+Rr9aDdQxnN3S5LbjjQ64lbPJW4Ea66AiEA18bW7JVNeOyu48CYSYiGcSiX8aoyqSJNVQAA78z/8X8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-alpha.12_1547486781831_0.8734799065320498"
      },
      "_hasShrinkwrap": false
    },
    "0.1.24": {
      "name": "apollo-boost",
      "version": "0.1.24",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.23",
        "apollo-cache-inmemory": "^1.4.0",
        "apollo-client": "^2.4.9",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "449788f7e2030e41776535fc50efd72b313c2cc7",
      "_id": "apollo-boost@0.1.24",
      "_nodeVersion": "8.15.0",
      "_npmVersion": "lerna/3.10.5/node@v8.15.0+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-Zpo5dSZQHeyU5YReHawILCwow2WXtd09RkvJhp4P9rWZH8XL5B6iA+KuMycHH1Ib6mAGcO57AaaFLYQVKIdmzw==",
        "shasum": "77860f919f645f1d00d7b24f97dfbc59fcf42e19",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.24.tgz",
        "fileCount": 17,
        "unpackedSize": 1322612,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcQOMYCRA9TVsSAnZWagAA/2sP/3IHOryjcu1PmOaGfvk+\n7BP2HtzXCP/bdH+62ktxhzYVNh78ThTqa5jdb5mMGeoTqMa9K9NHn7WRnEN0\nwq8ZobyByvqn8/Xxmu6+qqaS/KDNxhFVfBghwJDuJyy/ERfLON2aHxATWKhB\nVuE+5xSJNYpxjs5ghbqITKOcQhKhGYgS2X/aQI8rgnQp2C2N0gDWHmqHo9sj\noCgNMP8rtc56Cy21iHRPzcR+aenK2VeQdi4kDqDiZzAHgk2NAaauAcqFnxy/\nTbEWOZ7GIU9Q8T89euio8rnxaQcZjXBajZXjk8hgRUlU/ezVMDVPIxFwdZuH\nE0w2HJaerTGe+GuJPU+QzrVAOQG0RKKPX5RT9XDq9jrEqBrTtI0aLlDWzj7f\nE9PNX766ysIPjbIWyhR3t98Q3B1oKtNbBe3ngHh7yeaR44K01Fjph8PTrQ47\n5q6Q14cx2tkbL76abOJfhgecFx3cbzlTMzWPgibXehTT5bs0sCf7QqpT5q1N\nd/dQhJjcWDUyxtmXlxwUSgNu1cuzRP394EvMwX5pucaq6a1mYsfotlnzmlPO\nLJqnREao0A6jHvmRZlY8WNWwhMS1UjilhESsa0RtJcc45PsDVLowxtWOEEBI\nAKBxuzq10xEdE4aFssMeJM1Ffdjj/lI5K7TPjRCg0CmH8xFulMGg24mXkcK2\nq4PF\r\n=w9U5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIClAIge0xuSlUe8ZCCJbxN75rmlqcmdD7bomc8TlTvJWAiA7m0IeU+B2z3AZ+OtIPYe0Y06ABLom3ebFVW0+SyXoTA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.24_1547756312431_0.13707103228852047"
      },
      "_hasShrinkwrap": false
    },
    "0.1.25": {
      "name": "apollo-boost",
      "version": "0.1.25",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.24",
        "apollo-cache-inmemory": "^1.4.1",
        "apollo-client": "^2.4.10",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "decc8fae87249d496608ffa3f46a38b5e635517b",
      "_id": "apollo-boost@0.1.25",
      "_nodeVersion": "8.15.0",
      "_npmVersion": "lerna/3.10.5/node@v8.15.0+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-OqmOiasT0kMMTmrAMAclkd9DoIooWYdfSEvTz6FPBWQESqP3+m9S6NIN1udMmXZ0wOZNkckw1YUhiVexd1rygQ==",
        "shasum": "1172051cc6c0a2ebfe50efb73d3e259338c451b7",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.25.tgz",
        "fileCount": 17,
        "unpackedSize": 1310500,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcQgwvCRA9TVsSAnZWagAAl/MP/3nlMJtD1HityTArC2kH\nqMuy8//O9zIY6edF1vG+AgWlMgtSTrES2+ykJxG56kLzPwXJ7dht24xqCCro\nHdmmbcxwWc7DWBkeXgrOVQkuJfoJufSdgoY+bYUd60/Wn7epIl9HbKoUJIL4\n7ueZCAiAb/COuA/KysGREGITaeSgkTKsdYMgHPJXT7AFvBqW5uD0vJ4lG8gf\nv8Lpk/MkjKRu/EFs7Y2cQEatMEr19Kz1EUf+YyVu5jj+joz8UmWSn23Y3dIq\nG8nDTBvgcLyA3cIjKt6+F8L+qhfOv6mbenSOnfgfl6IP6Lh7QaaIphezC9UK\n2ip+V7cTPBmd+XM/pOt2MljmZOh9zVaPAglwZ9e1ZhS8OKjAh4ye8LuDJxjN\nkljzrsAdlJBP+hQ7pbisWP2/XyZvlSocIPv65DnuU4czxhSlEwPCtdCBKXYo\nfL+TWcDIVw3UXqz7f5f2jmQ0MdD2wQzJ6eaudMPHDoHxO7xseGak3H55NJ6N\n9IfOQGSVbIlpUhefi3pvWwjwoUbLSzLgRk2JFFv7Iby41RZS1g6Zwnn3LL+5\nTw/4yQc/7qHCC6VpGMe4au5TOl3ix4iF+ji/y2qef7gybxJriK9S85oP44MI\nWW+qmeAMWHowR5Ig5Og98g6m/tGzG+Ar1OoAD5tEuHwhL0lv2q7435gVJorH\nI9Jl\r\n=eFdo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEDBuzl6D/HDyu9+aLk2BGmbaLay/IdoY7DOnlWTNkh3AiEAyi9oaTp4iE+wR09HXKejoWny1LbDr+ANoeH5Z6J8TeI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.25_1547832367080_0.15840762001361175"
      },
      "_hasShrinkwrap": false
    },
    "0.1.26": {
      "name": "apollo-boost",
      "version": "0.1.26",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.25",
        "apollo-cache-inmemory": "^1.4.2",
        "apollo-client": "^2.4.11",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "42a474ce983964a3eb3fc4b1e5d90ebacffeb739",
      "_id": "apollo-boost@0.1.26",
      "_nodeVersion": "8.15.0",
      "_npmVersion": "lerna/3.10.5/node@v8.15.0+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-gj7cyurrf5O5wQoFB+l+c+BPQvOGToC1mHPnXitDUR0dow2/6w6Kr2lnHk/F9AxNjv1ZTaID+xCtqNpDWnTmvQ==",
        "shasum": "e74364483226ea04462a5505f5c3c24cd8fca624",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.26.tgz",
        "fileCount": 17,
        "unpackedSize": 1309908,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcQlCaCRA9TVsSAnZWagAAOx0P/i+ljyGrAy4QV9/Inz6v\nNVueaA1sAw4BTmchjt/PAwovm8M8hasxOS+AhVMIBAZ1o1R5Eypm6INu43oE\nYB7rWGYikIJ+S+gzx5XTMfj0JiWrIpe6h3RGMKH1RF7F7+mDzWHL3zbsfMRY\nzAo9Id7MrEtAcug6dHnL2aGtM7QvSTb+oO65ooeIUj+xQthmgt3lZoN+9INZ\n8PM2pJldBVqlSUr2VIbY5OISYOqRyfk5pjLB96mrgKvUxKCoVHSwdAmhhYLX\nMRZdotLJMn4FioNqIyWUNTyNoVA4TVQYY7f79bzhNX3ZJLWAcNY/2BhC+Urk\nAbB9516da99F6EsWrvgRzMc/4CX5EZ2VaxB9SYTYtqhcFC7OeBSDd8E5KiTK\n2GDrs206WpV1W2u8P/2Nb+3s1gSbCBTaPsCySGU4cX7SyZfISj7qnowBx4Oo\n7kgU1C1J38nKLgCuPrWiV07IgR7z2ruAKxCM0FH9hVm5xOmB47KFqIMF7Ynx\nBrzG6XER5qySuNTB8kZ4SoYR3PnMQBiYWj4YyPwCODfjCO5BBl/itmF4mw9E\nWMheWatW5RRcIyzqPIwZ4pIo29LG1knxEr0LFkfR/Q93zZmNDCN4zY8mseBB\nknrVGWtWkBqHHKiWOAPFuSkyEYKwfGm0cqS29LXlpGoUowr5Faw6AnRHM7v3\nt7y6\r\n=xzZb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCY5mrXdQ6KNQcaxdzj7mDVXA0d6UqJ+kG2Fdg8n09GAgIgGvy4BZX1zSkLUPfcUB+SvH64hgOPlYS5pNxIgjOIX94="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.26_1547849882257_0.7953752902003222"
      },
      "_hasShrinkwrap": false
    },
    "0.1.27": {
      "name": "apollo-boost",
      "version": "0.1.27",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.25",
        "apollo-cache-inmemory": "^1.4.2",
        "apollo-client": "^2.4.12",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "7ca8132261338dfdca38f28f10f21a24e2d164dd",
      "_id": "apollo-boost@0.1.27",
      "_nodeVersion": "8.15.0",
      "_npmVersion": "lerna/3.10.5/node@v8.15.0+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-z6h4SKVR9H17sm6+aGsjhw1fPK6dmuNQbAue5YwCOrMUCQLHkP3gXvCnBXsOCF3RyWkYVygu/gjrLJtvoq14XA==",
        "shasum": "77cc796359503a330d5b31780043430afed47899",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.27.tgz",
        "fileCount": 17,
        "unpackedSize": 1311030,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcQmgiCRA9TVsSAnZWagAA1S4QAJgsqx4Jzo6QQbcJa32G\nPVDH6IGixZ6OQXzciqOg53rNZ+feHZ+cjKOZdNB5pD476EcY4jvKTuW8u+sN\nbVZU2BQNNvVMNXlCCiBDmSCgrtkRjzXxBU9CFA6348LY9AEKNFYv+OyiDwy4\nywaHnREYy/9q6P0bg8NtB6aoDWGO+9g3faOPTyh1M44mxf68z6u9GCnzAgeZ\nmnKwbMkdAZtRSYbEiXgvcTaL7gvsD5ZUG9KoZ3FX8gEQk6UY3MDMyRMvod8c\nY6f/ur9ofk4Z/FzKIbCJw4BjvOoTUMXhmV+ML+IaFfqHRYbaDD9UVVIBa4Wf\n6EIP+9HIFqYZnZpTAmMrBuqavqgRuhMSKMO+rL4cpVz81O5vrdTbPiZGKLMF\nY2Ux3aRAZFyjQyXUQgdrgsn0OsvA4PDA9nU6Y2vVULWip5CqgO3woJ41sh7n\n2EA9YZSm33JYCEetE/OeIxhz1HvUQzbgSq7UsbD1GUm+cxnT1QQohGffgGou\nN+35sMTp96L8GMgOStw13tfSLXHFxheiq3cPfSBjYzgjLwzEU8U2GTh4YZdi\nbcFx+8Va7iKF3lFVjjKA0cXyCPNd9QHA9g0S0Jl1RRVmjy5mzpqOKT0gJklf\nktJHs3VwWGU6o9Iv1B/PdCBEuQVbfVOfv1E+5YXoOKmD/q5Jv/YiyPcaRELN\nv7l6\r\n=DzSa\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCPeAvOqqjRZadOgIl9P94YIhCDOzg2DLM7QGn4NJ4JlAIgfTEfxizossMYG2pVNgwX3SCc2FhPwzvNUYq//lTNcno="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.27_1547855905332_0.6722874336712519"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-beta.0": {
      "name": "apollo-boost",
      "version": "0.3.0-beta.0",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-beta.0",
        "apollo-cache-inmemory": "^1.5.0-beta.0",
        "apollo-client": "^2.5.0-beta.0",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "b49a7e851b5637eb9bf3784781fd2c8881a2d2d8",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-beta.0",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.10.7/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-hWNpMYtAdqch5BErZOkjW1j/jXQJ/ISnlHu6gTUmVRVmcyRKG7KZtjIswh95QyXW3jTKYqJYjo2zEGoOWf3S6w==",
        "shasum": "bfc8339db85a6e35d5e675afb136fb0778d2a37d",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-beta.0.tgz",
        "fileCount": 17,
        "unpackedSize": 697405,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcVIBbCRA9TVsSAnZWagAAIOUQAKUNiD1QH1vfm+PrN5tI\nJdv4EehZBRqjR9SFqZ3wvHhRHgHRdamEcrD7w11RydrG1fMPQbX3vk0C4ZMp\nNQM+AEU6T1QYstBz9Oz7LkVAou2Ihw6vyWE7Miw3IAODzImHWTTtDwv2SdFF\nuRJnrDx8eogVmMrLZE/gc52c1zNRtcvjw7mYh+/++dCA0KzhJG7IcRRgKoTN\nrLJ5woBxtJ99znQ9WVeKD2e3ueYhBvYqmf3zfbQ6T9TpVCFXbqjpTuzFnPvM\nbuPQSzt8H0+UaHbFhVcud45ui6xzwajXdfafhlWyNczIhsGcRBUxeXcRaA56\nKncisoGKCbv3Nzr5F84ehLeZPi9zRPcaYg3T8bvTmf85tNaPQXlmRj8As3uu\nwa+CklvQl1X4DKI9JdpbuTtmKsaqCFKK/dgZ/m35ZN2CdkbeKjXOvf0NAbX/\nHaco3HpmWj/FemRxbk6FvRYpOKEPUE+vt9TSOgCprlT+oxTcQa7zMVRVaT3b\nb5Z7y2RA/P6JPBhQRkrZAObOZ7pRF79Ty5XoRocxu+eYExMnmDz/PawCi5o/\n8zPHv4Hlk+dZ2BP5682/qOlMudWUkTtLCRTTLwvovkV7dv91uuMiPtB08A4o\nl3cIaqbLhrm7xBNRHKtsMGb8h87ZMOUgJc3AH8jj/1yIBhinjtg2a6bVWXsh\n0jGH\r\n=vutd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCKP49xy6i/tBVjDfoX+pJrDKUj9JtYgEWU4JojxNH41wIgBsyLvM50YDh3Idpnkqo2rLKbosl0gj0NXvOM79rdOgk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-beta.0_1549041754445_0.2719548983835014"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-beta.1": {
      "name": "apollo-boost",
      "version": "0.3.0-beta.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-beta.1",
        "apollo-cache-inmemory": "^1.5.0-beta.1",
        "apollo-client": "^2.5.0-beta.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.2.1",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "ada6057dc4a30ec07b7e8ef2f68e9372e16e1e12",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-beta.1",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.10.8/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-GyDyC//DtbbMFA2cc9hjEPhHh5oWIC9yJUSqYHnDootC2YQwjj+CMx6qkJEzVz2TRGKnYpranGXB+PqR8M5+Vw==",
        "shasum": "cd4f70094c27c1e315f1247d68d7d5825e6e237e",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-beta.1.tgz",
        "fileCount": 20,
        "unpackedSize": 80594,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXIXFCRA9TVsSAnZWagAAV+IP/RQtp9egeBiqVxOOgOhx\nZQxIEemvBka1FFg/+rmf3jF4xk8UiFaiJjBiImIQKhHsjMSbY/q8Lj7TG3Rb\nlKjn5+KoMGT6rzoaD4vtcwmi4amb9cYDQ0vbtDYZOc8nTB6TOSMNzdrGiGzc\nDFoohPno827B5vB0kmCU6ayJY14TYkvE38VEYgNQN+ZYfo5yDVVzRztj+4ay\nBazZdxi+6e9QnwArCC8XVEyJHQ+CcVYVXGUpJ9Nsg7VYDGAtfem8xqqP4T5q\nFm4ZK64RswnPKAbOVMlzoSOBxKkctVnhIv5etv4qdOnYpIo4XIoW3zRe4X/d\n743aEEbNqS3ILZFwVsP8we4XZssRu00lPq6rXv0hhI+vqNgOVGT7hYgwIqBJ\nRRnRmeGiUdl22oCmPb3sFSIb8M97MrKTBzww7fcwC5gQnP3YDBye8OwKe/uE\nwoZFFM7m9+8uGfz6T8d5k0/tL0ZnAT4L70DYSVEd5vjVbhpFXIQEwyocOiA4\nBB+r88ohkDo8OMMb08FCDhh76PPgM/lHsTuv5swXVg/PXre1QbhRl+vMwedw\nuMcQXblwdw4JxqRqu9HUixNv/sWSqIZzsYq4rOUGpjN0qQkEcxKwo0RhBeKG\ne9fkM+N6ZpK4c48Uzs5drkIVv9E1AJ/8p6/XXvuQfX/yvcUKuZ3oGPd3gr5x\nZ2uK\r\n=m1SX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFZEJ5TmBAn+gS/3OgfUITp+qr4r8PJxFV080rRk7VaHAiEAoeJeFMnOXwQwrVOJj3Vj1RMJDYuqcvHzOaMl2/b8qsw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-beta.1_1549567428636_0.9942964536903593"
      },
      "_hasShrinkwrap": false
    },
    "0.1.28": {
      "name": "apollo-boost",
      "version": "0.1.28",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/index.umd.js",
      "module": "./lib/index.js",
      "jsnext:main": "./lib/index.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -p .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* && rm -rf lib/*",
        "prepublishOnly": "npm run build",
        "minify": "../../node_modules/uglify-js/bin/uglifyjs -c -m -o ./lib/bundle.min.js -- ./lib/bundle.umd.js",
        "filesize": "npm run minify",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js && ../../node_modules/rollup/bin/rollup -c rollup-bundle.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.1.26",
        "apollo-cache-inmemory": "^1.4.3",
        "apollo-client": "^2.4.13",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "apollo-link-state": "^0.4.0",
        "graphql-tag": "^2.4.2",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "jest": {
        "transform": {
          ".(ts|tsx)": "ts-jest"
        },
        "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
          "ts",
          "tsx",
          "js",
          "json"
        ],
        "testURL": "http://localhost"
      },
      "gitHead": "5217dba186279b20f540f2c01dd773a101a34608",
      "_id": "apollo-boost@0.1.28",
      "_nodeVersion": "8.15.0",
      "_npmVersion": "lerna/3.11.1/node@v8.15.0+x64 (darwin)",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-WnOeFKyI+1FxWtIsIjqj5TC+xMxJyY1pw8e0Gyd99vKaGNNulx1+MBEy2qL3u7NiaGWj93vxu/y4r8tKNnNqyA==",
        "shasum": "a1f9a913f854408abd59a029a94d83c9dd58081f",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.1.28.tgz",
        "fileCount": 17,
        "unpackedSize": 1403474,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcZF0QCRA9TVsSAnZWagAA7qkP/jNZWr7BaS3AYP0xKLfh\n+J9TiQs7vNp1cW19Q0vxgJ+crT2wOtUrE+UZPfkyS+Wj22HDeBBcdbGqiGL+\neiSaBTtjQFCZ6biOR2JwKpP2AqJIHcwxZkaL5c1HubkFRmEoKsB9yz5AfoPX\neUu4v6c/iWzhYp1yI7WHMMaTH6fKECR4X4H9q/eEBnOEvXiFM/ZGTEm44K/8\n707qO3J+6IL3pSpcayxMa70OrRSfHXJjj6ivcSrgOmzg+Wj09BKeTz6huqGB\nGESOk60EyIEnSLnoVLFsNApgGM/GM7EPKdorLxO9+8BVtM3JpwTkAcP6+e6U\nq6/xQHenqiv/7Gkbe/fpDsqPm3PD9P0gHLp0ped8xt5oj9A+qy6liy9GVTDu\nH6t/FTHzOzKUsisCIsVW4lluQhL/l3YPCtMIpkTJHwkI8YO8fjeVRCihm+Dq\nU/bwfF9aA2tjs6tzxC2kkWCAGrFwVnblVjCAPFL5KWQIgT/FqmCu9DQAgzd7\nMN6pDDmuwH5e8Xwfp/P7vjRGGz3ynQQ3KQFjYROpsIpVD1AJOPO3Li+1jwCu\nJQaqaOs5ZoSBYST+7+OxECOn8TLcJEoYSe4gnXgxHwqKDNc2+W0DQ9z20eG1\njzFp+VABl6IwFGd+kwzJTbnlI1dKlX3f3rf+X++pLy8jZGxYkMnCYAUs0+Cb\nrgsX\r\n=SJgf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGcOxpMcFG8nHNHUqffCLCEARYZhu6mPmZP6E/2ozxcBAiEAuXFc9Yf2ajfeff9kIMGbpnSmSIWecHQgntRi4QC7uto="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.1.28_1550081295619_0.5235630855553359"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-rc.0": {
      "name": "apollo-boost",
      "version": "0.3.0-rc.0",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-rc.0",
        "apollo-cache-inmemory": "^1.5.0-rc.0",
        "apollo-client": "^2.5.0-rc.0",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.2.1",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "d6b456687202ec2f0ae3ffd7f528d0ca0657f984",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-rc.0",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.13.0/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-e/EpfZupzwE2pqYqnD0DTlxzn0OJHY3Vvuhy9gZHmGXkCItCPpcfaL/ub6CLTAbcxxJPfXQH7HXaGErkrzyfXQ==",
        "shasum": "f6c534692569f480d15d18cd1a4c245a17165019",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-rc.0.tgz",
        "fileCount": 20,
        "unpackedSize": 80586,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcbvuuCRA9TVsSAnZWagAAej0P/3fQnY0QO31UJuvn1T1B\ncLF5BDhs1wabDdlBM75wuwna2bBmSRmVMKoSMAkrQdPggEmOIHHiz/GRyGjX\n+Qt8gWZ7gErqlPwh25D1dQm+iIgnyLIaQCH1SY3x3zH+cBD9XsLwCDD6BqAC\npKzhuZDxGlsk4urO3E1UIPhu3oTVqZUvmTnovtHRkyV2ksQ2amH7pPTcqSUB\nwnSOxul6W+c+yt+Zh3X1h3+Odiuf5rgVBaubBFd02HqtdrDrPN9raGaRquck\ny8vbAbUE9sQBKOmQR+mVxAUorTv32kbus/iK8TguxuYvHdh6/ZutweJ4NZ53\njuVi6hHU9cGFgqMKqfXY/hOjB/u6agZn+EMYs8zOMpDri22p51D7zjYk8bAD\nAq8PKy2BvnA/0ms1NGal5sB6S4jaLYsnLvsd9xlpJjnNizTYvKKDQKN7/w2s\nHm9skJ9quNPhpewW4zIOcK10ArEkAu84Mkx2Hrn8zssALZiA48WgEK9s/iR8\nA+8zZcpJqKZqlpsdCVeHJu43q0QRsZW98AXw+LnsKbRWDX4hDs7svuYKRVoI\nsEu4MeGUj9mU2TlJskui6Kkxri1HifbxnUYR5Pr4sVrASxAF+5QdvKX5AY69\nmg3HeBi2+zsgFVtWMA94+P78NVzg26luUVHOBVs8hcAfXk85Mf02o/Rlf+zF\nQTD9\r\n=09lk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCDcON66f3+YCfKDcmm+30jkh/8Ymro7zaetuqvrQ3ZhAIgb1/91Pw07nsu8pumDB5Hgq8eAUcMTnS8LkoRAehhb9A="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-rc.0_1550777261716_0.1195179608954473"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-rc.1": {
      "name": "apollo-boost",
      "version": "0.3.0-rc.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-rc.1",
        "apollo-cache-inmemory": "^1.5.0-rc.1",
        "apollo-client": "^2.5.0-rc.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.2.1",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "559a94807cc9a2ae28ecc51ca412857b63f726b6",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-rc.1",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.13.0/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-u1pjneWtIeXgHcFYhe9J5JxmpCqapAhBD9Cx8zWQlYMmsCG8KzgDitvB9uu3G/GJTpxGl2B0ITWxKqYIXv1g/w==",
        "shasum": "08e805dac1881a08d17bc377792d719f0618966c",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-rc.1.tgz",
        "fileCount": 20,
        "unpackedSize": 80586,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcbwgaCRA9TVsSAnZWagAAbJIQAI0EIxdJZLwloKPyQCTv\nOMtsrtt+hDEECMZR+olw3EJ62kUr5JA6EeR2B3DXFnqHrWKFSgc+pZq0UB+O\nch7ts5sLI40s+D8ydOvH5/eSAaad+p85CUg1qiJmH8P0d7TLwU0GHwjYuddi\nB8L5kvdr+oN1Lad+adcQSFyP2lwI/EcUkULE5a+03a+0GtIuT+5iXvJZYies\nTYuTemTl32Es1G/DTOMNoSs1zQNIzKQjqDEjxORpo4CJ3JLs1dkQAhyfV3Tr\nQHz5uxK30X30Od18aPQDfN4Ymz1zNDfUqASHHDua9m5Urm1TVbPTpS443J4S\n4E0XwHHTbHsaWW0866soPFAclDnrKlsJMrCdqb/sr+Ocm7tDl/66p5oVCc/u\nZeCuC3IOiAA2o0pNEFONtE9VrAMV/360ZT1//oSSaq6Vxturwd+0qZ4LAtsh\nkcPXaR9APCtE2kFy0a/pzeolArhKtTZxSZGeV+PBRajrbjS5/zUPLaanI29L\naEEUYKrzJgsC6lR3MPYNEdHHZB1zOjivJRKJzbywmN8EeKY+AcaDIIjP73SO\nslQEdNHeCRK+Rrjm21A9//7+grwDwjCJiaimtwfpS4+bmZuG2w5dGeI4QuEX\n9B3bANtDdd01ldjX2Qzihn/NQD9bq9QIKTZzc4gJ9uJQpQo7q1hoSNQPgxg2\ni6un\r\n=fMqN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDQGvBxhNaOfVfW6o6DNjPdApWcOgvQHSH2TI9bvwIq3gIhAJ+aTLcMd26qp2Wr3egb7qTrTPeNC4A9KZrN5APNhGhx"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-rc.1_1550780441954_0.14786256813101084"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-rc.2": {
      "name": "apollo-boost",
      "version": "0.3.0-rc.2",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-rc.2",
        "apollo-cache-inmemory": "^1.5.0-rc.2",
        "apollo-client": "^2.5.0-rc.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.2.1",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "8f13d4ac9c50fa294e807bbd948851292da6a5b8",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-rc.2",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.13.0/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-AMScXqoVgyU6tnWlADwDHIF7LlGb5rSsgORvNYmXpbthvx2SapPQpqYHTDj3zs//MuQ7H3PTyUyaD3AAkis0nA==",
        "shasum": "e456de1a4d9f670f1729d191c4a6e9e06b718a8d",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-rc.2.tgz",
        "fileCount": 20,
        "unpackedSize": 80586,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcc+AECRA9TVsSAnZWagAAejgP/AwBtjZb2AL1E7B+ua9h\ng1K2O0SYCPHOwDlGb4r8X6eWuQs+RrXDZFZ4aaUchPYaLec2hIj6W29oggfx\nt1NRrW0epId2neBoLNUOg8zRwgnMBRvAoJ0IppiAgZuPXu1gm3+qQx8qdA83\nKndIAajx4c4lOvkr5udRGr/bHyjTZHGWAL1mJy4IfoiBPbLE2W+MVMWxZGt9\nccOv3HGIuYbdyIpEMbMO22gypZt32xl5XOAlrD7mCfNAtfya1+FlpSsBI4Ei\n8knQfpsnOk4uqTWSwNu89Q04L2ohYdfF2TyQ6KVA8OPtrCeXMjqnkZpjgNyj\nAUX2u/1aDYzGffHCCnPO4Iy6iVsVoXyj+LueYJzGqeM0ShP2zDlbCv+ws/k9\nu57oAua9K9YCqBMvFhXuM88iYVuimEJ/Z5n9sKje8/iOvg71pP/Dc/4IzXAO\njp3pAzFweTdi8JlANHXiss9EjUYQXcOLeIBYT8G3QkB+usINoxpiYLbD0jHg\n2/1JQGKZVnlWAW5Z4nLrL6iqTbGhFkk8z6SYOuEKj98AdJPDg9R5B73AktBE\niWBgcEfAGdNfuK6lokrt+HwhhNVr0uZUP0qdHIcuoZS+t7EcYQKDQPBE8bXx\nIKE+rcab8nzl+h4SiU+qbj+JX74DOb6qpiNUYw4i2Zq7cxYoY45CEbGwkEKK\nriiH\r\n=nXOX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICDtROAaSwZHq8a5kHppe/S1/AZ+y30GpZv2asC4GocdAiBUhifiEmlp1irZ/mDxfepAfAp+QLp4ziRPAfzYC77lwQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-rc.2_1551097860117_0.8586215542041435"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0-rc.3": {
      "name": "apollo-boost",
      "version": "0.3.0-rc.3",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0-rc.2",
        "apollo-cache-inmemory": "^1.5.0-rc.2",
        "apollo-client": "^2.5.0-rc.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.2.1",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "db529914f850ed5549dc43a4e1ec6e07fa14da5e",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.3.0-rc.3",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.13.0/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-PBY27GHmoQ1bc28ciqxCWDtGFIE06MciBIPQP93bLpVa2X/W5MLvLBrfHeQWRjP89wUGwo8bTLXq+VBEfzabDw==",
        "shasum": "13e5255db7be694a4f3f17c28db909c35747c66c",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0-rc.3.tgz",
        "fileCount": 20,
        "unpackedSize": 80586,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdWL7CRA9TVsSAnZWagAAr8wQAIZmldj6slvaa1Pa9shB\nrtzOQM9VdbytdKd1zwbzP2xIB1qTkMjiwbWo9a3qrjp/kuCZE4yAwV1TkvZ5\n2gyTLaRrWuzj7OjZJ6aCLZqimViSZAXiB2UqvB+Fzk+BGYanI5xHXkdd+ag5\nAt6itcsRmAg+iwK8/4hYj2u6UjgIaYbGXCheZlURKh7uaEKreJRkVCWY+kzB\nOy/dhB7bTH/+Ntfk4CrceKDWAdJLfX4hZNjkoQuYGL7wZP0e7z8rm8+nBuyp\nuKL5bFzyd7A9LYXVaPvLDuACM2Eu29SHO1ei3OVVDnhFMx2V8NtOq3ks8aJO\nF0bn6OlgJA8m2kAHvv6bZ8Ro/3APJndZBxJykDcpxwHKiaDXAhR76pyDJPXa\nWr5FdFVS5sjJ3LDUEnsOlo9Da0GwEhcZkY/L2yfWHQ8xeYxI7iFMQlAHKM5i\nr6J1uFTOtOOaXi8SsQ6fUPYQixykoz7kWzl43LYmdOhIcCN1NTYJuFc2FJGF\nRVKxw16VLKcqMhjHj75YPgVBtI8Y1PWraiKMC1l4Up+8puaSY53F/vFIwpV+\nZnhsJZhaHeoeMqwz/4I4SE2Rc/O+SUWrid+K3UQTgbK26927Oz1ejqy3HkZy\niKGiQhoTQ9xlgt/TSsuKIp6eSLZjawsj2jt86H84kR3Q7kbC69kO3mIgUvJk\nA5ly\r\n=MHVs\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBn3h+Ju0g5XSZ5R+53S71vVWXCCmsegmNy/degKrvKHAiEAgdk6t/MlZf9ZHktQgcorMQuW1NF+FCPtAroy0z3eF2w="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0-rc.3_1551196923120_0.17032670396043703"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0": {
      "name": "apollo-boost",
      "version": "0.3.0",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.0",
        "apollo-cache-inmemory": "^1.5.0",
        "apollo-client": "^2.5.0",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.2.1",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "bc740e09d1b40d2186933e4793d8d66ae8e627ef",
      "_id": "apollo-boost@0.3.0",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.13.0/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-a4HOgb9Y2X7QSmhr5JCmtHY/YWuX2NRyEYZI/KWJnB1TqMnFIdUOWE/Q2izt8nOJJpeNoYu86E23oyXX9liJvA==",
        "shasum": "cf063b0c8a363e420d4f0262cc54d3625fab5579",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.0.tgz",
        "fileCount": 20,
        "unpackedSize": 80566,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdZZcCRA9TVsSAnZWagAAb3cP/1nxaG1bDoJfxgVNyoLi\nZKruUpUtfUdxaV2HEB1Ovj/29d6M/lOr0Y74fInhaqROwCTcIWHRKEJ5ENa/\nwupff9QUvqNUvTNYiZFmPQvjaXsLF8qITkaaOx55soybnA+3F5WWWYbasccE\nqglwXNAYFodGEuUwR3DVrcxRhK9Sz/uWXavKoN1Of1cfXcGAFViQvAcRZ/4V\njZUQAOGRgzuBRi1HkLHTTvaBSPe394NrDEKtGo4kaXLsaF4Vw1TWk6f+XHmU\ntRROLCVyjeIoFbc3TGRmbM54HlZyh1atvO23x8PCZ89OD05oPesumsfgLjZI\nt1KFHTXH4AMIL0j8qBKX34pRzCXBtV3BjL2NRjzpXHEQhmczYUAcrX/bMCbS\nZHIbQQzNecM5W1b4pBLQ/dQK/u3790HQq/Imb4lrCvy9rwh+WbfBZu7wHu8F\ne+KwOLn5DNpDlecfLZaepRuKoIYCioqMn32GMhmdWivUsfZZ7AttMeNP6DdG\nvpgN+Ep79avcD49ugP4/oPA5iwCJpMXSddskU3i9xBXN4a+tKOM9zy9GN2zz\n1nlzTp9B6LZ4gDyiVUYySxIMcY6V7Auknw9A1Vpv5LI0hBOTTao6nGViAWir\nRTCrmgarkquJ82yhnwD60n0eVh3AWiLXxxZk41ek2bd6Xs9riaIW14lHH9xK\nfItQ\r\n=VQYF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDaUShHdQQBJtqiFMDcrtrESivk52S8teuIUiRUNLV5VgIgDzaM9MxQwobDprSr3/W+1cDFoJzhMgvwno3RMEEeM6Y="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.0_1551210075935_0.6989506942960046"
      },
      "_hasShrinkwrap": false
    },
    "0.3.1": {
      "name": "apollo-boost",
      "version": "0.3.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.2.1",
        "apollo-cache-inmemory": "^1.5.1",
        "apollo-client": "^2.5.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.2.1",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "fda77c22a43a472843954903b43bf875b2ed9d60",
      "_id": "apollo-boost@0.3.1",
      "_nodeVersion": "8.12.0",
      "_npmVersion": "lerna/3.13.0/node@v8.12.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-VdXcTMxLBeNvANW/FtiarEkrRr/cepYKG6wTAURdy8CS33WYpEHtIg9S8tAjxwVzIECpE4lWyDKyPLoESJ072Q==",
        "shasum": "b6a896e020a0eab7e415032fe565734a955c65f8",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.3.1.tgz",
        "fileCount": 20,
        "unpackedSize": 80566,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdph+CRA9TVsSAnZWagAAS8sP/inPJy9A6XIxW8I1BIE4\n0kugrHVZ30f6QcW0VkQHbQFH+V/WAVzG41iAQGTLTujGdR0TuTlWeUZAU1NG\n2P64WtgvX6rt9v2ur3OetAbwfsg5S/RRFwUhIcRC//KbarGfGUHZKMyI1bR1\n4CL8U2nNvJEN3psfVtDLotqHtw2W70rObbmOM6SeiZXpJjvDKd4If1zXkiaj\n5FX9WA8Lmv6wtbnOe2EsXCf5VXOKYBr6AZ6IWr/vqEXrXZ9bWCRGK4yYZvlS\neCaXz2lx5R2uooIYYQdt84XjNIUk2AcOQA7mNGDxWbQaTCAQMyZ5+N+OiiYz\nfBHEgBP4h8sH1bxazorPF6R8avEHHfAy9hjJGiwIhEnTZwJkqL/DB+VDuMB7\nwS3rg5XTqEEoEua+vL/eXo3yr/wdLvwvyKJFnhnXctZLC4ALS3cwZkPfwuXv\nul9AyrarG2EXk0TakEvN0vjt3hVoI8gFsxN6UlPNySPD9fG5+wS/65vMXNJw\nI8Sz8dZR4W5OWbPAp//n8/VF3U/kPV+65iu3jTWPezS4YxiYHTI+4mUZqNq/\nWeZ6aDCbkGyI0guUt0f7yVYbINF7vaDqXG8ankj1bU6AZrozn8DkGDjheZGo\nOEbovCIh56tD84IBr1kwxKAbcnEHBnFpb95l562jvthXK46N4WjQs+v0+B2t\nwXtn\r\n=vVFd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCLZpuMVvmxsid3zKsF/QrUumU2V6uQTzdn4CD5DIK9OwIgfNm75CjTZ58dO/dl5q1PdQ3dBEzqpdmkGRJvXUfD8BE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.3.1_1551276158080_0.5485961466190377"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-beta.0": {
      "name": "apollo-boost",
      "version": "0.4.0-beta.0",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-beta.0",
        "apollo-cache-inmemory": "^1.6.0-beta.0",
        "apollo-client": "^2.6.0-beta.0",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.3.2",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "bd691bc247621084b953ad0ca36f056b4e0ce845",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-beta.0",
      "_nodeVersion": "8.15.1",
      "_npmVersion": "lerna/3.13.1/node@v8.15.1+x64 (darwin)",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-zhiZ6AEceW2ARFFJNvRra6p23J5oSaYcLxEJr0D+ZLhuzwFMtSTKP4sWPci0CDyYZn2oSmIUGOKkKVUmnaqCUQ==",
        "shasum": "fd50114faefc0fef1681655a3f3104b4f021b8eb",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-beta.0.tgz",
        "fileCount": 20,
        "unpackedSize": 80669,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJci9PaCRA9TVsSAnZWagAAb7wQAIhix0xtXdoBxwbzLAVu\ntS2NwYxuRnJfMY5BB4Hsul5ACPl+GlbAyFoA3DqW8+YrzAjDjJjnl4DUh6+8\nLoFFCAOYLCCIho7hd/KjohafFnldDr3V6lhBt1rplhkvk/sd+XmQ1cyEcKqB\nhDlujHl8ceXvd/9y6iQYoeMYuNfvKqKJaJTFr7WNmMpH9bpV8lNpaEav8o94\nKEVUJV9HSSamd2akmoXMatJsmQvdGKkyCVwpJx/ZULROwvOlgUrn7Ruwe1U2\nZnDi0FNiSQkIdopWJXu6oi5bracjzogVkWdrfTVVhnQ7vjkGRt+CKHPzFTdR\nPuU2JGCX73YzCh/sDAC4KtekZIPBUV9wVlqq+GIU7g3lQY/ECiaZSqK1YiB6\nnfPgPOriBhfttMn9lQvSJYP3Dw+kn+Oe/dqUiex2pd9hgvNh306L7bfqDP1v\n09eyTlGSYBjWMku4H2mosphnjdnxrb/TsCIvAp6UcrH7uRDAfZD0dx27Mmlb\nyHPbOt44wZiDR6DbMWg5jrP4T4Al9/czCl3fV2HKrRqslc6J4y4Tv2umcNTk\nHuwpNkSOMdbsrLOIKlloTIG2p/hmlq3oaoOvnG4TXUlDrtcSAsJlMr0NgCZX\nawI++bxRbqBCsIFLELPOAv7G9zlYvAFO6hkvD/LMD3+d4AKyPYMkhuMHzMZ+\nqhO/\r\n=T65L\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEZACpRmzLdf0fV9WDLEe/1BdyTfw5B/RCx3uIoy/LjAAiEAqm098ji7dtjQy9M1zPFz8KA6+bvxPX3oOl1JEWj3ILo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-beta.0_1552667609777_0.2628706645131633"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-beta.1": {
      "name": "apollo-boost",
      "version": "0.4.0-beta.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-beta.1",
        "apollo-cache-inmemory": "^1.6.0-beta.1",
        "apollo-client": "^2.6.0-beta.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.3.2",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "68169f31a4d4d41af9a90ae1fed4414255e829a3",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-beta.1",
      "_nodeVersion": "8.15.1",
      "_npmVersion": "lerna/3.13.1/node@v8.15.1+x64 (darwin)",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-LkPwSFASmit8lan0sWw4Bg6ZX6IIMpANW0d1q1a/gjYTHTeQ0nudF1BA0cOMLsmjRb2lSo8xWjBULJYj2IOTvw==",
        "shasum": "f57edb8fe3dc65b804747628b7b3c4c4d6f60532",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-beta.1.tgz",
        "fileCount": 20,
        "unpackedSize": 80669,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJclSH2CRA9TVsSAnZWagAAzTwP/RTlJ8CBfQag3tU8Iyc2\nxzKWOBXdi8xQUvs2XlV5bnh0og1KbjLSZHot4EQQUUrhlPRIhFuvC5gIXZ6t\nMkeRYcrC26L3T8GWbHmWLWB+FIquz4OKReZP2nXYk4bDtr3Rw3dWlsgF6pK3\ngy8NfdSG5RSEbLNUxPBgoF7+tga7Bw86K0DI9iTpASbOZLqantMLoPw16y8n\nzKMp8YOHSr4Lp711qVzrOsChdA4HtLdS4ZcWJ5Jr1aT548C/vCLhrsKd7xas\nxJwtewX7ebsNWGfxblt8AkW3ZUoQXg0VUc7MdWmTur3ibKRh4exVNqSrw8cD\nmJJ8vfU96LqiROlrlA3h+iKOjArASH59qVVmcLZf3cRfLFoUDEtsPGGQeqyX\nJjAlMuWDgXkB9/HNZ8MVQ/bh34CCtsvAt64d3oi0TraLEPrrV1Ek5wKRk4yV\ns6lDrr7L3td0OemBfXGDrCqKg6YwlZBlPSNxquPisXpU4axfTAB/kywLbYjU\n/s85qmGqO+x4qruD0PQWiwV4C+0wdTogx90qXH2BGSwzSILBUtyS2tJ2qRIW\ng2+dCXhWYZBvaxOgE4uFvNZJYhAEH64hox/nwLHqo2j5sYAdTQfARBmYnA70\nmCxvEHWdzu8JSZXS4c31memBaxm5fqLqkmu+XTCNfAeCPyj8h7unK2JcvF9b\nzRpi\r\n=QQa1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD4umw9lQXtQP9xhaqercIlpyhr5O67+uNiXIfbPNc6gwIgWyK79KywVf5jSN++SeLaVyMuCfgzndLTrAD1efjwH7E="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-beta.1_1553277430070_0.9199865196329859"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-beta.2": {
      "name": "apollo-boost",
      "version": "0.4.0-beta.2",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-beta.1",
        "apollo-cache-inmemory": "^1.6.0-beta.1",
        "apollo-client": "^2.6.0-beta.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.3.2",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "a90bd3dc1bce29bea747e13ea0d8d07e371094f1",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-beta.2",
      "_nodeVersion": "8.15.1",
      "_npmVersion": "lerna/3.13.1/node@v8.15.1+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-JzjMQSIWgcxR/wxjocK85to94cQUVu7GK4CeMJ1zB90B6SwRuHoVjmUSSlQ9PxV/DxFgvna/2UNxQO4BeUvNkw==",
        "shasum": "4309e18977bb2f84ca367c6b46c8cbf1276cfd81",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-beta.2.tgz",
        "fileCount": 20,
        "unpackedSize": 81966,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcp4I7CRA9TVsSAnZWagAAdIMQAKDP/ErjEOhWkK+5SIGr\nDTXbdxBV+3a2asGoMIpyC3t0dYNozNE5kNWUYZuisZXLD7RCtLMOJCVWsDif\n1RV+aaPVoplrXBx8Za9SW8fbu+oP4FKA2rNoOgWUbAXDQEp9xtXGN531iPcY\nyY2LXsx0WSbCpPjsl7KTfrVgTsQLsoAsGOB/YLEzrCP8MgxlOgK6NLg39cES\nc7cnXG+uB1ropl3Lf4/tdFVD6011vM2XO9WGPgHKpnU/s56ye2IRrksglowo\nJrexANZBFETqon+fnHKjkLmfMms0dmQ7Za1ROgPSF4wnZT/DY1yqppwcx8mH\njGXrQ1DsksWV4EZocMDbuS7ipvkd5y4fAZ4LKzwLkhUjLNnhTY5iw6TAgEgn\njBBAoNyGsDG+sNhiXs50DKdARvAHFXTwFHKLxgdM18gTnWOKMyf2hSaXp5zg\n/KARv/slcNcmjraIAoweE+CzzG35RRl/0W+PavsP0J4nV5YBQq0qmvvePbCk\nfMYl8Ar7msJnyfefuzRJw2YNxIdWmVe+i97Yq0GX7wHe+eq+GKPOf/FjJrjf\ny3G7kXtLxbvkTafHQmbjmFDX1DtKLyOL9Hp/TSKWeF60igFBvRUzCl8eHjpx\nZASuHjkKKRKr8GWS3w2UVk0b/iWlr86/j2CuKJzV8H2k4H1bQkQeAUQ5WIBp\nlxdA\r\n=dTfQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAmaO8v4vVAVK0nWfyCKZAIbuquG9/OCAZNoL8yEFiGtAiByOG8ZZgBBFkoh20S1aKCrEmhJJMVZCQWBaA0j3JSsfQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-beta.2_1554481723098_0.08129020148415322"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-beta.3": {
      "name": "apollo-boost",
      "version": "0.4.0-beta.3",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-beta.1",
        "apollo-cache-inmemory": "^1.6.0-beta.1",
        "apollo-client": "^2.6.0-beta.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.3.2",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "f7653930aefa5dc15adf60f626b6931ec036525f",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-beta.3",
      "_nodeVersion": "8.15.1",
      "_npmVersion": "lerna/3.13.1/node@v8.15.1+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-lE20ifVT+BeUn/gbBDdyWxNE4PB58BsQ+IhRAln9ikc2WS22e6cPcu9M9Z//aiq/D+KN7i74yRQkK2MnHxJZgA==",
        "shasum": "3c75f0f03a41866f973540a604099dd6c2c1d96b",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-beta.3.tgz",
        "fileCount": 20,
        "unpackedSize": 82068,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcq2VvCRA9TVsSAnZWagAA+GEQAIz8UHSluB+GhEHi+vr5\nFd88fctpCA0Vh9jUKVAf5sMUq0okF5PqGoEE1X276BwxHe+tvcFTABtiUyXj\n/MSO6F6Z2goc6UySF5CKrZDsAvbjutL6dpGF5XWtNcrNsCk9tkZ1SRcBmMNj\nnNsqnovSm6RcfOhysqrsigugd+LqgUQQk+Rd4NmR5LSOpdlqiOWX/j8R6nWt\nWwQzF6uG4anuuEHlCT3tNxu3yZbH13u08JuKz7CedpVOMvfV95GsyxRZUBGT\nQCems8xn4FwKHefhhluQ+HBT8+5aK+MKRdHeImKrKV4tiEZDZKzWEFYtQUze\nzax2Camrutz7RFEkfbdO0Z1nqf6Nt1sUpCKdvtpmcrtbgTBr4LdjqScaSDUW\nMivuq5YYd04/ygS1GxW0XRvikTBiLi9WbYsTReIrEQQ/auMVcPBBhP3aOVet\nu+MLMCxeEd/7/E9+YtNiL5yc6lB+4XR8xWngBlGkszk3Pci12W3RzRVXArir\nIYndOpFbqEVba9MqxUdapLQE5AQgg9phE2VAMcoWzVdGZPpHw67z0aIRIv81\n0IK8Twfux4RftDoA5B3K9JNPaiermr+FBZpZs1wedGMfCv58Uh1xDFHvdHIq\nWJJp9NUddtLq+cYdtmmXUF5nS94FUvtbJIYsBNh+BAOq9obhY84oPXJUI0bt\nylBC\r\n=va+E\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEylNS0M+YtwVdyblOzy5tqT8KVl9qLDp1kKbXm9ZtBdAiBQDzr6T7yqrLQBV/JKBKqbTFYX4hUVHbzKKC3pRYZ97Q=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-beta.3_1554736493963_0.1316456134311239"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-beta.4": {
      "name": "apollo-boost",
      "version": "0.4.0-beta.4",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-beta.1",
        "apollo-cache-inmemory": "^1.6.0-beta.4",
        "apollo-client": "^2.6.0-beta.4",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.3.2",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "6c1f06d2e7fbb99790d5837dc4e0458d5e6b443a",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-beta.4",
      "_nodeVersion": "8.15.1",
      "_npmVersion": "lerna/3.13.1/node@v8.15.1+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-4u1MBj9qo4ioz/3vpHc5cpWXYJxD2adEhpgZE9fFogy7cR7rALAX/hzL+yC+CxuL4/ZaPhTeEo9w6JW5IeEGqg==",
        "shasum": "74b9dc399bf4cdddcfa6c862e085d09df349df1f",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-beta.4.tgz",
        "fileCount": 20,
        "unpackedSize": 82068,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcq31KCRA9TVsSAnZWagAA9a4P/i2jt20EPZ978SwTaA7q\nYJ1l9mC/Y7ExeljT89n9T0Ith5ugYwFfIAQyZLkBd+f7xP1qZ0AyBmtMV9Zi\nN7d+S99bn/yQ8VxhF3+I8cVmTYOSdAoLqzMEfxh56LBWZJvRWOrpJGo8g0Wl\nYPbDLVlyuinnBgDbvf4NVi3lhUQE85V1iSMwHj/g+hXEV4BigWYgmDgqT726\nuRGijU/Z584eubuqexjTvTtXVTuuLpDZrt92oWWPV7PzdVkjZVrN0HJ2cu4/\npHhzDy80FsvvwlZRrBakTzifJWj/v1mVx7ympd8CFAALC89ytMI+6ewnz+z7\n5vpHW4rXsvSsFUc/89piFpPnsdXh9izHzblXQ9wsbqXUJM9noJcvb84LEz8A\n8LxbWzSpWz6upSxJAlGDKrwmy/AeZYJnIv5g7rqLv0Ldnp+8YWIzj0+WpzH+\ngSfisBPKEWvo6l3eYS8u9yQHDQ21lFHx8o3SUafSVbzk/LSho1MqOtGFnreZ\n5aLJfX6WO6DEj1oMl/eRXkfJrB+6m+SSqmNz25Ao6je6AZEWM1QZl1Szafng\nSm8WDZ1fl7h+hR1L9qzvFJ8pSduiTMbhhGYVyDMKW4UDCsrqpLijLHhvW96G\nqWSSkNvcv9Wr2bQWzK/Ag740ZtttktJ13sXV9mUN3Eh4WKykOZFf8fru5fxu\naE5f\r\n=BHbL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEMCH0VBUc4H2+sraILpGIN/c5Rkt2uDWOSvXc6DcTFk02QCIBtS8oensZjlXBIgXSTB9ElT8i0h55wgzG/Hi6KxvFkc"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-beta.4_1554742601518_0.44268575403259103"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-beta.5": {
      "name": "apollo-boost",
      "version": "0.4.0-beta.5",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-beta.5",
        "apollo-cache-inmemory": "^1.6.0-beta.5",
        "apollo-client": "^2.6.0-beta.5",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "290dcc3ffd8be2dd8509d8d662287e43a791a933",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-beta.5",
      "_nodeVersion": "8.15.1",
      "_npmVersion": "lerna/3.13.2/node@v8.15.1+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-jWdWOoYk0Cdbi/pkxh+rNl8SPS2A4oF6VuNP2Uze5q8JNgWiTqQ25839RldJHpBK60w/pSTmOsXsqAmRJB2Mig==",
        "shasum": "6de27a8dd5cf89619b1dcba5ea9659beaf4572eb",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-beta.5.tgz",
        "fileCount": 20,
        "unpackedSize": 82068,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJctiwjCRA9TVsSAnZWagAAq2EP/1sU502fDCXbe+zzyFL1\n9moZdfIrHzbHay/aOsfbqtJCAuBieqnSB8ygj0+0EnZIXZewNtD8quM5PlLh\nbKG4R/bgXziQWQvPzZ0NV9SvhiaRnQRYS3JGVcVQCr1mHSYWEguO8+ENRbvS\nG5YbZasrNBVaDGswYAKYNLypCtH7+qCor1tw7L0JLidL0Mxoa8CTAUv7joGp\nv5B5sC40mB3fWxtfqzssxSJro67mDwmJ4vgjJXbg8+R5OdMh4vu+r8KmqYRI\nFUcZ/Z/YERVbm9M66FWIFklLs3RXi8ISvdGq/PVZ/DuhrZkJYagui6vOEU/w\nJdX/Y23gr+mCP+H++EpBVRLs/avrlnNMR+5wOyHzwDMAR2dMVphg8j7usRI2\nsr09cq9Srj4Aj3l6RrpIruOOq44mJJqMkfGzsoDUH2lwanZ9XLwi1u47UKXc\nvQ3mWtuhtXAB1K1puvqAdJWsGfMAhVL0TnT0Sq9KJb/iWQ/dPwYUsKT7wBP4\nMBjvC6rTv6mYSKzlOeCipWDMot9RuOTbSI7IWtbgUkZXTq9nsK0LXlAFRUmi\nOK1xr/9Vpf4wyUbZED2iDh4IrCwd0SV1AUiIsn2nN8w39rPDPEcS9XP5qO4M\nSK47sEbeyGHv9jG2NhfzCkdGFg0MqYbZOkgH1zYUcr//0oMmDzMT2NUeHpym\nScZ3\r\n=dNMO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDeP2tjznSAyFhFDlZ0S2ZmqiwoQjbDbQoTfPFL2ZjWlAiAbeRUdI21uQOBwgeCRYoCFQAiUnXVGCBjR0cW0UPoDLA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-beta.5_1555442722285_0.08717840237142327"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-beta.6": {
      "name": "apollo-boost",
      "version": "0.4.0-beta.6",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-beta.6",
        "apollo-cache-inmemory": "^1.6.0-beta.6",
        "apollo-client": "^2.6.0-beta.6",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "570291b44a3af0beea25ee2773fc1eb3352bf05d",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-beta.6",
      "_nodeVersion": "8.15.1",
      "_npmVersion": "lerna/3.13.3/node@v8.15.1+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-9WMvqu9Zi5WjiRZsMnXndjM/2A+0mPEQ2ZLkeDSxITGQTf2Ugfii3zJFnen59nS4g+8N4DzS71bAxAsRaQgE/A==",
        "shasum": "6d388457fafe9a5c59ce5a674ca85784b44b138d",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-beta.6.tgz",
        "fileCount": 20,
        "unpackedSize": 82068,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcvzd9CRA9TVsSAnZWagAASMEP/RXHO5zElDuVz6snyEVJ\neeIXa2QzqUOQZRGWFMEKOmRwh4N+YY+eJ+tlJzlbbqoloUe1ppoORokY9dvn\nxwmxEydcu+i7bU9TYRF0A1FRsBmrGdQVFYkGPhIaUMjKhEXRV0d3jhYBqhq2\njUEh1hLYvYNs0YupNUtxdNCUlK3mlodTrjTkbAgYB2RFEYhDpkmCNGWGvVhg\nM26tWNpHt6LQv6L2M1hQOdgx/Sqg+8gR97xRVxteJJkUllG7f5Ys8bfrf9y3\nGLcbNIOWgDThQYLSX0qYoQ6CELJqnYN9CKn/fgsSgp91o870BYcQKSdp7CIF\nIyghZYE4E70TtjsAy1dw72sujrn5xIu2gzDbLy0i48a//4tUOzvN9NkvMhIZ\nBDQRgBF13miPF8MQ7K1zXdXtZpiRCF19YhmqZMt5eEY412OH0m1+ObnzJB5b\nDbK2/kejmmqyGTlIX3BkNTflOrXtGduQDvw2/jefESr+abejOGILTpOtemN8\nNUcS8Tyln7nVLOXdGR/GVxTKoU+Dp4P/m6V0m6hBicPr3NOPm3vSFqHgx9BG\nkxpc8ywSSPEcsnIyt8LW/4u5MQPwfX7MlKLYxEJa0rarq1+lzl6lc0bi5JjI\napPVMxIMRwI1wsmma8KZurCYJ1ATXPAvUyrqN8XKGaA+SOMcmJ0E3AKlXx80\nzuPE\r\n=MWp/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3/0RdIa8nv0Bf8hSS3E4upeUkhYFATQLdeOawZPq++wIhAKjF4sgTx4b1N3MYpfF11WmuatkwI5YQ5YRm6XKaCs+Z"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-beta.6_1556035452953_0.5868829265952826"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-beta.7": {
      "name": "apollo-boost",
      "version": "0.4.0-beta.7",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-beta.6",
        "apollo-cache-inmemory": "^1.6.0-beta.6",
        "apollo-client": "^2.6.0-beta.7",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "d9fb39d9ac942bb0dddd191fb0fd807d9d47bf95",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-beta.7",
      "_nodeVersion": "8.16.0",
      "_npmVersion": "lerna/3.13.3/node@v8.16.0+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-WU7chfHy3ujD00Pri0zdZTJfdruUQD3R5M5MDyKJgZNkrbmfkmahAMYLnJQR6zXcujIM/EWxdU7daOhpTjomIw==",
        "shasum": "a81c504ed9287bc1cbc81160f4055438d3fc6577",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-beta.7.tgz",
        "fileCount": 20,
        "unpackedSize": 82068,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcwG9HCRA9TVsSAnZWagAAKroP/20VQ69ze3HxYoU7fYR8\ni9Bw4DxAm9PQJGd6mqaLxGt5hunaDYePtVRmuq4bLms+KXu60t4LiveUXCPe\nIC4wbAmcGcNErhYKLkBWV4ddSZD+uNna+sGNI2eFmqVRgVJIzldkElGHz1Wb\nexLiVGcQIt5696zjSbSRZNovmzjmxEcJ8lU+Z/G75CFG+EzLo7u7+U6Y7cO0\nIYbZWolvoj/FwnURr9yJ5pD4aPu0JrwpnTKoSMiZTsIR7q7vUzmYBpLUVcVq\nlVIp94SZKC+0iuoMZTauONAKYa27nS0Wd4bde6G2wRexRnsO6sr6qwOl7TW3\njPfuhY1J588POFKdfuNxqYAJ7feCx0BQNwYwxkcIaOWP0KBqePtrm9TOhxSH\nebnZo4XtDpHLahnIvapD3oSkPeR1s6WnHk284XZ9qt7yeT7IYAlumrGNjXYI\nG2rHDW4zqs5bNSV8xWReYtEnXlRfqbm8mslxB1V9N8ggq5lblbl9ksaF136d\nnlQXgeQD+GcVTbVaOusKLRkkkO9Qpo41QqbfkmLwuGTYA9qLgsihDSYmqZf6\nHW6a9Y/VV8fJX72AccBPL4m/fs3Y/t31uKLihozv6KTmVmOcvbKW7V2S+JeM\nPx0kN3dCzqEhyiBq7Q3sid5d/Kvg1wxaMADlOlC41HuCOIW5Bhn0pF4W1cl1\n4PO+\r\n=7D+a\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCE2WrhGZkFnTscYTo4MMGjkAGYFpYHOz2oorgM3FM9ZwIhAKtICtmod+0p0YTMAkeduqVnXbGLgV/jd7SOWTBSLp6d"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-beta.7_1556115271212_0.04263434114508935"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-beta.8": {
      "name": "apollo-boost",
      "version": "0.4.0-beta.8",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-beta.6",
        "apollo-cache-inmemory": "^1.6.0-beta.6",
        "apollo-client": "^2.6.0-beta.8",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "c2162e24a8590c09af6346d569ae0f0cf0ce528d",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-beta.8",
      "_nodeVersion": "8.16.0",
      "_npmVersion": "lerna/3.13.3/node@v8.16.0+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-r26UpRSAKAydwVveDu5xLEQdq4agoLv941JIWg2/wJ6EtvTJ/UA6M3k+gRRaJfaqN96qfOOxHwZFPiMCyUXpFQ==",
        "shasum": "b1644bf88c790ce31d36e9ac57235220c2c1c1b1",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-beta.8.tgz",
        "fileCount": 20,
        "unpackedSize": 82068,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcyIxVCRA9TVsSAnZWagAAZ28P/Aim+J2qQP31wiUBzxJY\nWAMOvJ/O/I3+g2LYUiZQaa2wW+c2ChJfildS85PeMgd2awUGtZRC6PBtxZ90\nKrf/2fuTYDsgsIcN8En4Vyltw9St2CUEoTyJOW4fO4vKjYohnTfUUaIm5ali\nTAN54NYJTTvwOkfo3zQrweZ2oPktt3LRDHBvsiu+CGwIlWMjkfRR/TOy4v6m\n/UnRPOY/FqxV8v46vjWvyt+SAGJJ0nqXKMAnqJxpTXEFb0r4MPgjjwd9VdTs\neSOIxAKbn0WxeZ847PuWeCu7OeitjoftrSxPcsWVrB17BvvcxhQzKsUWt5iO\ncCm5lRc5tgv223TVsm3UpBs1UF89TgWICHV9howR5nybB74aS+32T+P8GJz5\nU4d+H+B/3dgEwx71asxfy14gbOEBHjru7RoYakDbBo6+Z2iHMbQXakX8xSbh\nJ9JksPltKfuhG2xi7qTXn/b58fs7eRk9yB8L7wKZJtRXAhq0ppwY/tGX6ccj\nCc1Q8jhp+M4JIP+PbzQzzcOWrfj+Iw9uZruReOvtnN6KMu1HyjsI6jJVUbbU\n/lYhA93l8WWYj6N9MsMnFtc54yxH3o+iLGPnb60QBfRJ/isQ7kR+sEDinAGN\npLGr0+sqOdCuzc1aT1wYL3oZhboF5dWAHmBJiY16tu7BkQwuU6jjC+NmuNwb\nrf15\r\n=0xY9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCbPn/5MepTEQkjL/Rg14QwHqjMMxDNHpZuOSQCKIJhDwIgFrH5UAoZZKNCHpXaiJMKXTUy4MXprC+rRzW7LLdI0eg="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-beta.8_1556646996476_0.6809374814133455"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-rc.1": {
      "name": "apollo-boost",
      "version": "0.4.0-rc.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-rc.1",
        "apollo-cache-inmemory": "^1.6.0-rc.1",
        "apollo-client": "^2.6.0-rc.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "d33eb3ef994d8dd0bcdd9a158de91d582d99ec2e",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-rc.1",
      "_nodeVersion": "8.16.0",
      "_npmVersion": "lerna/3.13.4/node@v8.16.0+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-rspCZhjBWyxT6voPhnzQP4PqZiqleqOt4jJZMYWKosASe4KcczV1tNKD4at/4R6mBcYRmbnutIB5RhYWB3zFbQ==",
        "shasum": "598989ee0277f7a8e41d07271c4efd8872b24106",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-rc.1.tgz",
        "fileCount": 20,
        "unpackedSize": 82091,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc0L/NCRA9TVsSAnZWagAA4QMP/Aka1JliClM/EY/3M+1a\nKKgezB0M9KswNsfpz4tTHJ386Q2vhbHWWbnjgRwsrF1VlPSfvcJd4ECe3Q3h\n/Msv24Pa7O2yeUChcY4UTSInU1FiMZnHL/bYpygieFtNJJi8sM3EAXiAHvJO\nxTkCD7Q0K2N0fgc1aP+CIu7dxTDdrIVReguBksmu+uT8z0GNFzjRuohIRp6D\nthPvGlYNM7FhAhneUi+vS24XxuaPqVgG38mL10JwRxS0LA1nGOnA2+QD9AiN\njHp/b+TcG4LLmFX2fpz4SEnpku6TRTqOfft+9uXawNL4BNdBdOX9JewH0Wtj\nH3unJIlRHcNIN+jgegemmEfWLSuYW9uAzGgKWpc+GW+hcEIW6JXORYmAYmew\n06oyGywhzJoby3cU0YQRU+O+lxUDjzFGICc3dUjzCyJlQzb69d3ymiNSU/Nd\nu3yfsblIIaMwtap6A1h/0nUpbVdHPn2cnvRIz4tNDnLrAXCroWYAPB4J1TYm\nACxFhRjC+rhyBSxWcXNBpay8p2qOhSTw0L5OzrQjwx+7GDNvS4GY8hqwfyWt\nacPvXM9Y9oYaC0XkoSldIrdT1P6Ui33r4JNVk2ZlOcTH4AyuIVydQ9YvhQOm\nxZyPZxEAsa+WUGLI/S93PNT6SNrRzAN29zBuCz4Nu3UHRvuj2eF4gHyVlLfS\nZhEV\r\n=M7Ak\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDdp0AFNryHPkkKHwNSfC84HpmzHEaX0kyF+3pWp4I43gIhALtiy1EXdAyhKu1Y79qQA3xw8QWxjaUlZF/LbkCk7OHL"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-rc.1_1557184460360_0.06056650598921842"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-rc.2": {
      "name": "apollo-boost",
      "version": "0.4.0-rc.2",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-rc.2",
        "apollo-cache-inmemory": "^1.6.0-rc.2",
        "apollo-client": "^2.6.0-rc.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "d5106b03c790420f73df2b95e4d7ca94092a8f18",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-rc.2",
      "_nodeVersion": "8.15.1",
      "_npmVersion": "lerna/3.13.4/node@v8.15.1+x64 (darwin)",
      "_npmUser": {
        "name": "benjamn",
        "email": "ben@benjamn.com"
      },
      "dist": {
        "integrity": "sha512-w+A7neaCF+iYvvWV0THS8a6zfvNDyb8WKIraaFACcPp+Xg6pr6rSM//ihzNwrbit+iAoTVJJQF7lQt1THLIVNA==",
        "shasum": "b16988348409ca2b8edba9114a7b5f5e9136e840",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-rc.2.tgz",
        "fileCount": 20,
        "unpackedSize": 82091,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc1cHKCRA9TVsSAnZWagAAGLgP/idsDrTTVEf8E5eEfu/T\nlydVkhcRYhLqWVcgj4u54djSfWT/BXBQTA7vBfcZzzRW9sxkerSXojdxjd/B\n3nO71DpfBVTYc3w4k64QVHaOVag/Vb7WfMlK2iAHHkgsYYevWZJ8d9pio1tG\ncrTYe9J+KkG6Pastufj7MIhBYkYOXNi9iXrt0OnDn+/bD7h8uLSlePv4ZMR5\nMENFdKjONuRxtxtL2y+CBGRveplSpQUaPx3vTixWv5Z0L94NfxPeCobeGa95\nKlV+xShu2g4BjCAEuJOibbOFIuyPoYGrIxEIT0UVgqbZs87fUoxXuW4rcL4B\n+rw90ZCxtqkje8T/eBsmiMeThiK/4VHIdeBRQSp1xREFmEu4M69YvsMCAyTa\nmpdrBw4Oj1y4HmkSs/zTwVaSD+PMSxJdnOahhn7AHn+ReLkDtLJugYU2WMFn\n9ZHdkQ1IxMIIBg8ShR4MBcM8xaRhs4OKfqDTo4hwH8ZITOhS/3aBnOJnAW3C\nK09A84HcIvIarEaT4H3qPKrmX8dMlTj5H/kn27VyfvdGvK9ch3KXhPAHYUAK\nvv9JDqIQlhAp7zBRSsD1kDTXg1Zib7RpvFldULFwFVtYWGop2LlUYSbrQ49M\nUlGkicE7KhXs7Ib2m/IoTVp/FyE5SabuBugaTQrLXNTY7poc4JrZBUlAsKRu\nAVls\r\n=H5rg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCpzSBg57A6x36NgDu0J2byfFESGa3TVEIux27/SuNE8wIgWWTq7ZbEo3D9W9uyjpLfrdRwAQu7WP+Sc9BazhykHi8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-rc.2_1557512649839_0.13594784766703594"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0-rc.3": {
      "name": "apollo-boost",
      "version": "0.4.0-rc.3",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0-rc.2",
        "apollo-cache-inmemory": "^1.6.0-rc.2",
        "apollo-client": "^2.6.0-rc.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "b64b4e9a23a8ceba6d17dbac437f25fd553f987b",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.0-rc.3",
      "_nodeVersion": "8.16.0",
      "_npmVersion": "lerna/3.14.1/node@v8.16.0+x64 (darwin)",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-hv0ujAtHFhYFPyDJYIyiBqaVfIxfl4YmZzrTwZV+VrD8mLgnxk6M0QxfFTh0IFLrxIRvF0fSykkjB0D7DkAtIA==",
        "shasum": "657b9119eb166d11fa171118f97c2f682f1fdc0d",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0-rc.3.tgz",
        "fileCount": 20,
        "unpackedSize": 82107,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc5ER6CRA9TVsSAnZWagAAk1UP/AyiK+x5MfBlSSCzTKhk\n0lMuQ64ADvOOHEx386bkHRc1A4l15GRXcrZmqJhvncNdlSZiLQ70E9jzkkSg\nAZ8+COIPUkwMVERBOtC/4VQmvuNEy0fGa2ofjdjr/whaZnbhnCm1xexqO2H5\nl+QMEc2OFBqg1+aZ3Yb3Kp2RFP7Oh03wqJc6vpRVVWY0I2OUqk+G800g5BTv\nB+Dfu07Nvo1pbKMzJhl8cOZFVTWtcqlx2fu5c9qmzFkOZXkUA50E6NWexuhh\nZCBEJu1Td8elwSk3CWbqEirDksUEjsAb+gdJQg9ESEor2G3fqO/SIdepJo0N\nvMC3wAvQk6nYcxeiICs9337TFlBO2BvbDTIBEmZEC4bY35uPsYi5ynxEo6kA\n0SYae5jQwnurChteYPp/CKKSfcd6X0uiXJe6MZkPgXOjFsal7/G+pNSxOowP\nT3pt8S87PkcgsQTTntCFT8HVjyMgagZevsAS+uwua5aqIbTSWMdd5YzlukPG\ns+/ou79It2NS6gZgsCWew6Qv8RRUTiOIzWUkLedSZ8ngXxYrPVCqvHh0rbOQ\nHkX+IT5UoiOiNxj5d1WLYvAUCPvkQzycIUIuNr0UzsGyU3ik43kG6wOx95iW\nAkmxs2haidSjKBtxhDJ56ciAKNG9AysJmAqmzK2qAbazsd08QUkri50B4zJG\nsk5i\r\n=COFq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDUB7I2uJBHk/91Pg7WEQK7pYMlN0MfQlVJn23lSu2D1wIgN9ujzCpD2gW/y8uPxbZTNGxkeQT1L+vt8v+anhMTjww="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0-rc.3_1558463609009_0.13971905559965725"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0": {
      "name": "apollo-boost",
      "version": "0.4.0",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.0",
        "apollo-cache-inmemory": "^1.6.0",
        "apollo-client": "^2.6.0",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "6838c5b11efb7c12abe0a37ae45061bf4f28c134",
      "_id": "apollo-boost@0.4.0",
      "_nodeVersion": "8.16.0",
      "_npmVersion": "lerna/3.14.1/node@v8.16.0+x64 (darwin)",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-C2Ba2G0Ae3BpXZX1t8zbKltHSW87tvRDwXZB/CJkTd9Qfqym+7yu285Re7X0u3zyDwhA6jftCKP21f36gha7cA==",
        "shasum": "3bf74926b6aba5b74794e127a858dd6d77b0b79b",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.0.tgz",
        "fileCount": 20,
        "unpackedSize": 82087,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc5FBECRA9TVsSAnZWagAA5CsQAI/O61/6zduj2uw1Im4D\nRN1iA9d2MiIJKsL6lU+FTPD0Y6xgC8R6lZm5+3Hg61AV/A4Jmw/EUnokSaS3\n9eVmGkw53xvMXfO9gs10X32BWz9bTwFAj9FZkJ5c7HojVtPU1h9o1pZE4FRF\nQDBAqT23vVmjTajx66cvCFD0VJbvgD9olbYyGPkBRWSbF1sY+F0rzLaj/OW+\nu1ZnRqo+BjOCzGy6mp1JXXaQODA5LEo/GdRasBbcI7N+s73tH2giuaUbdV4C\nOoFXy/Vp5h5IRFf1lgJHGZVw0IKsFz/69G86zrHN+Su4HWBy2rJM85FjbJ1y\nAKpzCYmFR2IcrqyBXqMW6mhoraeCVpt/Q1ttrzWIxfK+nF9HbXcmwoeFFYV+\nJCPt9sISxfalf/V3t5/vNE8nLjbTdMC1+P3JOngFLzl/pfAJalSbRfQTv5NY\naFCt6Aeu2xlfAiNL+jrylXNe9kXmSFCRg9vg2toQdDiWCzEq5I4/Uj89Sw1O\nnq0RmZjHAZJD8Vt5LLQ3TcgprJxagUzMlSNGpLGb7xp12Bxy6jqeTPI+z/4J\nh+wqJS/MmuAnMa335FMAoCj2lEDtCkzB665UYhcEh6iCaLpn2lmA7rYvu5eQ\nkRUXIKRh+2exQvfishycnxelCxvWvQt4idhYaK702hVH6uG5Sss33TZ4ldMo\nGM2Q\r\n=bwYW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDJAQy9DUIjYiwTUzCUh1uYdOA/OxKTLgbEdX+yEt4WIAiB0vcWUkXpYRhy5KDwOOXfWcFuau+K7PP6Xhz715my22g=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.0_1558466628317_0.013265876613316685"
      },
      "_hasShrinkwrap": false
    },
    "0.4.1": {
      "name": "apollo-boost",
      "version": "0.4.1",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.1",
        "apollo-cache-inmemory": "^1.6.1",
        "apollo-client": "^2.6.1",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "4db0a7394649d8b21eaa8d5ba06dc2c3b9ee2b3a",
      "_id": "apollo-boost@0.4.1",
      "_nodeVersion": "8.16.0",
      "_npmVersion": "lerna/3.14.1/node@v8.16.0+x64 (darwin)",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-BlR9ulzqv/UYar/W+VaA5ss0P6UmjS6R5ik7XyObisDXPGl1OoISyMSI0qWB13D9/8IikeepihjmKPQuonX76w==",
        "shasum": "efdd6e0bc28906bd47644feae0eba90bcdb8e1e1",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.1.tgz",
        "fileCount": 20,
        "unpackedSize": 81946,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc9pITCRA9TVsSAnZWagAAb98P/11Fv7EIlJgFd6+uOM9k\ny5txysVIBD4rc4lyKZCxgY3zaFg7kLRN7ZVW2F/3hcTaLFN5rlZhK9txNuW8\na+/70Yuopy7ZbYCzl0PxC++4DUU01Y3X/pvDlx4tOEmPl3p5RBc7wk2udBhP\n9KEz5Hs55OIv4Oq5syEKMy9xbK2mzxUkGqBCB15GSa86w3rBYXlP+qyUDXoN\n8c1uuass+4P3gW++rSo+87zC7GdJm3ND2r6PGNERf73nl0KHh9Wb0NyMSKtD\n4YN+2802z/bsQHf4dO3vXj+ohmpj7tbKvzRBhAXlwSBmcYPOTOR/Din/YaSA\nr6xFMTGCMXDagWJ3rrX5dEg8sqsrhXVh4LHbp5/gFHktnTa/m0aSAKCg5sh9\nfy5jM4yk6HZ382Vp5IUGisMGEJzBhVQeemX2nj0hNtshN/nV8vaqa7kNIgmj\nEaUuLMVaQVAV+CKJ8g1Wo95B6qC1Qw41H84smsIGbLG2PFw54x/aTDzA9n5l\n7LO+O19UL5VaCbPoFjcBQ+n8oz54DPpFFRG0nGtV/5+pW/AlgY36h6q+lLBn\nrk8a4n/vrlQsxzb10OpGatgcUihrkxYTXKKdbkZb8kWA9p3CAm+rA3RXfAYw\nWOv4BzADZbdqTHLnoo4C94FmxpOXrAQSl15E3a5bssuRa1+WP2DDhGZ8cwqx\nrnnZ\r\n=aDKd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAXrmNP6aGCD5xHomEjTwcTiaf2iXnAIw/ZShn2CdJGjAiAtm/X0myA6PMLKxVfyEps5tG4DMrFfuu4p/+i//mSNEg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.1_1559663122935_0.6498509623382098"
      },
      "_hasShrinkwrap": false
    },
    "0.4.2": {
      "name": "apollo-boost",
      "version": "0.4.2",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.2",
        "apollo-cache-inmemory": "^1.6.2",
        "apollo-client": "^2.6.2",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "656fd9fbcf82df5cd6b9512e4c9b90b808e300ad",
      "_id": "apollo-boost@0.4.2",
      "_nodeVersion": "8.16.0",
      "_npmVersion": "lerna/3.14.1/node@v8.16.0+x64 (darwin)",
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "dist": {
        "integrity": "sha512-3ZQIhcQcNjGXQ+gS8WhwSCrfpg1gJar8PMYe7RozOsyBu1SfXJ1dSAVAXdogTXLpgu0d6M/f3dHFlf2QeSU34A==",
        "shasum": "7259ce6fe0f2b21e1936cf6ee64c2b43699818f9",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.2.tgz",
        "fileCount": 20,
        "unpackedSize": 81946,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc+Sb8CRA9TVsSAnZWagAAEV4P/jGNZhLA7H7SS4l+YwND\npBGHUllYY6iZy4RFVeBiSE8zb6br9wjDNsu0sqMqA3/2YebYiG/ZB/WigEWS\nEb1APE/ruYkmSodaYqgYifZ6wF3iXftCogAef7FvD0l5pdLRP7J8thVaHDTf\n4fpw2o9VnuT+vmA2H+vBZ564StzbGyqjluUE/MJh/TLdfNO7Gd5lnW0PMnzL\npgGanH1iJrfg+MVtmpTVdIB5oKIvOkfcK0e5/FY42zWyEeCA6pZHQ6l3ov+e\noF7xxwsTfayGQZNnwxNS1DCoJesyODUKOg+DS6WNDzkFe2lKb+QP5se7FDfP\nkOq29uMAHwLVcE6tT6MB5Co3Gk56xaMpOLnd/RKcJ5lk6BNAn7kIORfeXg0Z\nHlwgiDz/2SS4RzuuVUsQGzNirineXXbMl/QrLXriowfsGzMI7UoqTkj5i8z/\nRtwOYCuCV2Gf3SYVrYl+oCcj65BLKfqs8yrOLbdBQAfpsHOxaJJa4f0MWpOO\nti8k9s5J0DixZza8yEprPdPuoX9je1XqhMXfK6awJjzxn6cy5ke4c/Zj3g9d\nR5R6y6PMTg2Gk4VV4E+A6cmEyNp1o4JAakiFqsx4mFcFrukOjgokLtVcIpBA\np2cZP8fV4pGNeBRqh10lS5uZUVoFzJAs5G9G0x4ItWjGPF/VXTUNhJzkN0Bq\nvA52\r\n=vpgB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCm3gFWAQSsrr037NdGLH9j5gRt6fz8ZRDCUHiSydf46wIhAKNZmhcyeufTIDwQm0gu33Pr1IdngaSGPka/xg129XVp"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.2_1559832315741_0.9071554957272792"
      },
      "_hasShrinkwrap": false
    },
    "0.4.3": {
      "name": "apollo-boost",
      "version": "0.4.3",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.2",
        "apollo-cache-inmemory": "^1.6.2",
        "apollo-client": "^2.6.3",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "eb75e0e40224b78026234b0d133f6718cf83880f",
      "_id": "apollo-boost@0.4.3",
      "_nodeVersion": "10.15.3",
      "_npmVersion": "lerna/3.14.1/node@v10.15.3+x64 (darwin)",
      "dist": {
        "integrity": "sha512-XE7hx4aXRnyZ4OGM8I7DjYq9SYLYWrVBoYpEFsv0GBtfIl6tipyks2Yo2/TEWKw7mhGmi1eFB2F3pbhIZbzKuQ==",
        "shasum": "107bd1dd0d349d8e363174ded69612a4aa823c8a",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.3.tgz",
        "fileCount": 20,
        "unpackedSize": 81946,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCLmmCRA9TVsSAnZWagAAKkcP/086JGODuRPM5Hm9RkpJ\nltTjxDJY7Wb5r1y9WMJdUqLE3p1ewZqbem2EXwIjDvQVExt4U8sFZD54mPAC\ncxRnPiNaeiin3BXr5nRkHyXp67xQwZQfy9r3XSgXgDgNchR4s9eYJHtpcf2r\ncsZDDMV8eyWbVMCEHd3wY/pc7IxedU5iroZWvBs6OxObYYV/YeatBbp6ZVQz\n/vArk74ufV0gMzpfAzLAE7iY99IWKtwor/3XSbCBJru3jMxkHKMO4BEZUoc1\nP8HomHP+p4RHrz6Ku/+fgwU4ao339iOV/dvHsnS6sySjxGO0Udj6TzxrwvrV\nMwt5QOEsTVu1p0/QjdtXYr5k8izH8kCK6SHBPwPlsjnVM02r/Kb3wne+P42w\nho+xSd7mRsb4TF8DDv7jq1ucF2y0Ll6xDxXcGdJ8wnCw62dECiEo4HjZyXp3\nd7Itj7R72xyq9pjgHic0HjQeh/4ljoBngrcdWwoIVwrSa9RubhR2I/6qi0f0\nmkE6rHjiO+TjHtg/g7c1AfGnbrAv+jVM6DzgA2GcsV05j9ksv+HiZydkofXn\nGa59/yiAqqLCeb+ru5w23Bf2CyP3hbDICJa/JLrCIGsHmqMXyHPhQkzFjnK3\nJfyDeAYNUMSlMRxHOtJjzzSDRHnUOpTrMYSjCicjx2dCV2ZpRFWrd92J5n+h\nxuXL\r\n=/AQH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCMoy7y219UnQFqDl4mL7fu6pKFaATWD7KCW+Xr9Y7ELgIgXpCO/sSevMhM50iBkra4MpHJSfeAa2ieg9FQf7E1Kq4="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.3_1560852901899_0.36043616062887485"
      },
      "_hasShrinkwrap": false
    },
    "0.4.4": {
      "name": "apollo-boost",
      "version": "0.4.4",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.2",
        "apollo-cache-inmemory": "^1.6.3",
        "apollo-client": "^2.6.4",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.9.3"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "d28dea2370e292f18979f25fe15258a59e159b4d",
      "_id": "apollo-boost@0.4.4",
      "_nodeVersion": "10.15.3",
      "_npmVersion": "lerna/3.16.4/node@v10.15.3+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ASngBvazmp9xNxXfJ2InAzfDwz65o4lswlEPrWoN35scXmCz8Nz4k3CboUXbrcN/G0IExkRf/W7o9Rg0cjEBqg==",
        "shasum": "7c278dac6cb6fa3f2f710c56baddc6e3ae730651",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.4.tgz",
        "fileCount": 16,
        "unpackedSize": 75402,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTu+cCRA9TVsSAnZWagAA/LEP/AyXx+7aKDUa2RCNovJJ\n4wZziSr1PRPFvlieL8lUNzuD4l5gt8NbWQ8kxNu0jPw8Wkgbnt651o/hUYIY\nBMFfPFruyYY5UbEUpFZ746RmWuFvU/2zfWGC+wEftI0svcmAYY8bt88PdgkH\nsARoM9YYCj3lxEyiRMs0rGA8/bzi1Fs3ThivpuHTRffT/9HwRRr7m+gqzriE\nRq+ARNjVvGjQ++RCNXipDl0dKUQuN87QZQZoKgzG1SYMN8CUhDJ9Z1g14Iwy\nKbUuaTHgsRbzdHqECS6STUClNekNlxBSjWlOweS8PapPA32qWM55C+a2V3Oj\nKYFwB057JdzV2HO6UnOKrk5abHvYgD9JT0/2XueVfWenltXVZI7S9pELRkrP\n+5EAz3Z9tmVTkuK6TmesogjB5cm1oQk8Qrcji7tOP9jWqnLA/w+xzhhHJABL\nPKrsec3L0RHiNiEdOgXsn0K1QpSel6KQMK1uC/ozFAmVx/NWCa3UL0xUpOY5\nrGgx896pKT2bjRacUyZgaVxDFNIumw+bajFoCANCuAp83vfwe7JpecdUXxPy\nZlF5Ni/+dCe30b+oGqyUI0Pm9nebbOtyXV+PkUt1oGyJ7r2NlATi/VEWqVmf\nV501BJAr0eEXg8pIjT3FOkCMAE43N/ZzTdObAVHdbSSjb6V/+EMxNmTVoJ5K\npbzB\r\n=S3DD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHuTn3W9BixNDvyMOcAxBSgXxkiMInyKQ7wZ3+xbSSKMAiEAqRHrt/WtA79FC7n52Jm2sm7P2GUfTA6nsa3VgAlqBwg="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.4_1565454236258_0.7639216525514563"
      },
      "_hasShrinkwrap": false
    },
    "0.4.6": {
      "name": "apollo-boost",
      "version": "0.4.6",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.4",
        "apollo-cache-inmemory": "^1.6.5",
        "apollo-client": "^2.6.6",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.10.0"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "68fa57751ce201ba6b72efdbf8fdda1729c991cc",
      "_id": "apollo-boost@0.4.6",
      "_nodeVersion": "10.15.3",
      "_npmVersion": "lerna/3.19.0/node@v10.15.3+x64 (darwin)",
      "dist": {
        "integrity": "sha512-tU4+CEVqa7xOIMXl7k1Zq4++TStVxtuwcEbrII5OE+BI+dBPUvbOWbGuVq8/X0oNOClObwCP0rMTMjHyJ0X6cg==",
        "shasum": "fe5df14ae5b0805c0d27b69833b8c62bc158935e",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.6.tgz",
        "fileCount": 16,
        "unpackedSize": 76894,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd9MsiCRA9TVsSAnZWagAA9SoP/1uS0WmtLcfeO9WOS91W\n4fAShDHqQo0FpxFvWhqvOx/2aSh+xhY0BWe85V4C3eoGk/NyYgHH/Z20SfPW\nEFdjxbJc3IAySJYEFhG4GGQBNZeBr7bWwxvLwdgXNjkl8hZ7nFLyxLn8ncPz\no3KXXNmfEdwylusyrOYLcwo2Zexel+Yg7RKnLASLHpgTou+i28LnS4COteuJ\nUbS52NiPHy5gR0B3VzvC4UEOuOzC/jmet4dNyLsWu55rzYfhF/fL3O0bY0Nk\ncKUzIHZ0sKC6b9Rd1MQ299uqGg3qZ/rbCk1AIjJu/NawI7CmDJe4JbAgNEjw\nvaStHOw34RtH6IJ9x+xvqOCXr1sqArVNj3vxbZMgD1wiTj9bKcpkscIpxdxq\nM6P65derByfsIepzmYlR4iCVJSKy2NVVetNdOKb1xa3UaSFEIpVeRufi/hgG\nqJGvMw33w0Po4IQx+UiytLxpR+trrJpKTk8b/UQLSjt68ECcuLktba8GdfL+\n0KBvE+MdnjTDY4C86TtsOIOY4Q4+evsXbGKxQMy0nGf23eUtDC/7//QU2DGx\n8TH9dNFW9yBUhw4WdEZDqSmF/1wYIrsl6MrUmDjPWSW3aQ2lV/N8EJlSHpxG\n+yheanEY0NuP+TwHCb/GuMl+X0F11y9RWm/u9dQySW43iZFGipUM4rqa1SK3\nj3wT\r\n=Xb0e\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCjF4ZhiiVxNiPOPPnOxxMgPP4FWtL4RTa7J3ljtFpBTAIhAI/yHUoH4sHl2+jN5oGz3Gvvm+BVpi7liWfzyAezQy4q"
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.6_1576323873993_0.6410176216369108"
      },
      "_hasShrinkwrap": false
    },
    "0.4.7": {
      "name": "apollo-boost",
      "version": "0.4.7",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.4",
        "apollo-cache-inmemory": "^1.6.5",
        "apollo-client": "^2.6.7",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.10.0"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
      },
      "gitHead": "5608b2356d10861fdc851da88f823ee58030b88d",
      "_id": "apollo-boost@0.4.7",
      "_nodeVersion": "10.15.3",
      "_npmVersion": "lerna/3.19.0/node@v10.15.3+x64 (darwin)",
      "dist": {
        "integrity": "sha512-jfc3aqO0vpCV+W662EOG5gq4AH94yIsvSgAUuDvS3o/Z+8Joqn4zGC9CgLCDHusK30mFgtsEgwEe0pZoedohsQ==",
        "shasum": "b0680ab0893e3f8b1ab1058dcfa2b00cb6440d79",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.7.tgz",
        "fileCount": 16,
        "unpackedSize": 76894,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd9MyFCRA9TVsSAnZWagAAb+wP+wTFMGHbWfGTtiGvLg+a\nTkAfv1w0Oz7BIZe68wsOidmP6Lm6yCur/Q0oChLM5BOQukCkXoSZiAL7qJng\nFofxRmNa/5GUlYRJxGNMtEUJ7L3kPQ6htXjekLcoACCak1f3XcuYLLIw0c03\nKK0JisKthKBXv3339SHwBnrMWBdJC7GkWii+INBa5VSidz5ywcPl9S5oorh2\nxkhGgvxKxr4ewq49dsJpaVrWQ43LbvnsPx/AUo/1Uqy72zxKBe99jTJtJCeR\n0zwOvtUcMRXfvEXHYuHrTSBr7dB/QHySvXc+TLgSumZ+7JODXsh9/xjv5o8K\nb8Ux/Qzw/etQpvSGZcMJ2NEM3YlSrP1rDMwYos+I+Oa049lVkSO1HSzNNkfz\nrQTlZ/DFjJ/FXc6A3r0ujUsJ+ZF0b+K22oM29lmzuR3DBYXTpOc4qOK4/W89\nY5f2J1SUweJQyL4IdPDSQMu1qXeu1wTf2DgB3Z+eduABuijkPohaHmOdY7CX\nRos9mgDrB2oMTwz0vu2UbjZs4D6nIZ4sipO9nah4Fhmyi58c7cWiKKO0C/XF\nADKcVafvLlxl3tVEMcQRnTdFnGcmkhVRDjTrPriQiTefQfsuWouSm0r80nQs\nO4rd2SDN9oAp9jBV5iu10TyHwPrfHPeg4BjSkcUh//3tqMvBLhymG5CzJXGI\npA7l\r\n=TjDW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEkYR1b2rEDFJ9CfGOp6DXRluVU5NbMU+4V4cLGZ4luBAiBAe/oF6JXS8wpnP4OXsbrHCiUecsBzIozgJ9R7FNE48w=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.7_1576324229188_0.19856639889983274"
      },
      "_hasShrinkwrap": false
    },
    "0.4.8": {
      "name": "apollo-boost",
      "version": "0.4.8",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "npx rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.5",
        "apollo-cache-inmemory": "^1.6.6",
        "apollo-client": "^2.6.9",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.10.0"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0"
      },
      "gitHead": "d22394c419ff7d678afb5e7d4cd1df16ed803ead",
      "_id": "apollo-boost@0.4.8",
      "_nodeVersion": "10.15.3",
      "_npmVersion": "lerna/3.20.2/node@v10.15.3+x64 (darwin)",
      "dist": {
        "integrity": "sha512-4HTz3Z9H49sQruXM3sy2tDPkvpUmjCgqqKGIYTJtMTbvwt1TuEQXJcRDxEUiY+c7rsYAiGJNB2EAOXIqTXMSxQ==",
        "shasum": "29d416df3e6a46db99af9ed1915054fc8bea232d",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.8.tgz",
        "fileCount": 16,
        "unpackedSize": 76879,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJetowSCRA9TVsSAnZWagAAskcP/jTaaO0PwdSe3dQz9fkX\nPQ0pJ1jP0MzK5A6oQDK00mCkVoU8QivlW241yI1cgxKccOZo+AC9KfFsCMqY\nULa6xsaypcJqlDYDL4RlX0U9JwwmMkPQX2kQJ+bhvGNhep1qJOEIU+ODuE53\nYKkkEcepDLSrtb2wMmROAED9FUvVqGLvpX0EXrDLpd3mQzmlmSM+9fyVMVFS\n6VYFl2dVW1ftuVOPtgQ30lpJOk0Um9Yjj5bZMboS43kqRM53M6KJ4tBXalPG\nkCJokty/zerrkdaFgph2x86dlviAy+xGnoN+ri1sbRhKJUf3eVqYuGpXLW38\nFXuHThnfd/1O3HVwbBZd09rXZfullV1jidRQae3IafziZsBVzazFYnpsKcho\ni/SKEHDjNQ0pXBcILt7U74TCqiZmUHdHdK8eFNgxBcccZZGwKziU1h/KRIgJ\naWP3w6lSJdvVP06Azve2EH2M0xAp9Vjo1tR4qr0b7dYYGPg3QSp6MouCM2pn\n32+gp8UJM487q468kVT6AG3N9p2EKzg6dTGeLWWNJHp8lWyYLDNNEBvxArLn\nky7ESyydT7iPLHEtc+Mclopyi/lKkdnCoKs5FnDJXNEev8uUaax7RC0RGCYf\nJE/0wXox80hxMfyzPyRj97ZOl9210PrtKUAEeCO1hDKStFE4UkGcEnFBMh1b\nnMWR\r\n=iG4a\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHO8eqH7tf73s9K8tWdPTN8lDnO+6wTzT9Ru+MIibpNmAiBcdFwJWBEMGIuGo8NSnJF1BZMlV6nKfZdlazywRnYI/w=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.8_1589021713644_0.7940075534507587"
      },
      "_hasShrinkwrap": false
    },
    "0.4.9-test.0": {
      "name": "apollo-boost",
      "version": "0.4.9-test.0",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "npx rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.5",
        "apollo-cache-inmemory": "^1.6.6",
        "apollo-client": "^2.6.10-test.0",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.10.0"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0"
      },
      "gitHead": "e530d359852706ee064a7478f3c53adfe3c5940f",
      "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration-options) documentation.\n",
      "readmeFilename": "README.md",
      "_id": "apollo-boost@0.4.9-test.0",
      "_nodeVersion": "10.15.3",
      "_npmVersion": "lerna/3.20.2/node@v10.15.3+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ELRWEFNjyjwbrdCqALFDEbIl8hvMwWxH44VO0jtHeUQyqpyNwSFBO0khS7fZA/5ztyHpjeuAgfY2Z8sCzySJnQ==",
        "shasum": "d497da7975075744d1716d9fd6d11d8bdb689c24",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.9-test.0.tgz",
        "fileCount": 16,
        "unpackedSize": 76894,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevSzyCRA9TVsSAnZWagAAsHUP/jg6UGeQ6o+kPYtZwCcm\npIvg9/qwkqtwjvNtRe6npS+KjO9DCi166XFRXBVJuIls0N1pCVOuHqq2vAJi\nWSe79QsxHWwvGs1HnyUF7/V7+Te8wvl4VJL9EZ66tdUcMP/4DDBdezPgyaFu\nER69JB8S6S4P3/V6rZJxldbIMz/G+3DKKdzCfKmpxXNOObPBBFKFmMJ+1VJF\n2dZ34isKmuzDwDEA6BHJTgJOTPPshfB+TG8lDGFJVXt9lYqDV0ZWWLfzBhGa\nlAaCOpzLoejZwI+9J5Qnkys7b9FwR5fClbh9Am5HmXrMtW9XfTMjnJMxDwrz\nbcrFl08YODJ2HJGmY093PuZh42w+BMj1n522RZJ7wShoQeLxJmrsJq2iuQ29\nqddvqApLE/GmKnxmsZb1U8v2KPxq92Hu7JNGiiNBpKCthoJ2ljTCbo7n2wms\n68L10idF+IA299BbCHr03W4LahIeouFauCycVxrpDk1Bt+tanoiuPVsY/J8B\nxCzWg/G+0SBdbLw8e9nFCSoGj9y4Gg4SUWYw0kOTcJBMszCUnbABx6+Nh/8X\nn1bqmNtrcmpW6Y5yZAXNfxO/nhvOpw0HpUhnrDr1hXxHb/ZkwDDbV3fTiOtc\nthOCYDIGT2NWc74cVQzC3ul8kzdRyj984SCvRa5VRd9+JFflsKB45cySxtDW\n+WRz\r\n=bGux\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDGaMOphcg73rkmapPm3ZgpJLzK4xgz7G837sJwGX5lNAIgf2oTyzwrS1rRhLM1L9z9jFlNhGrXbTFJnUeTReueOeo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.9-test.0_1589456114523_0.09553997480056875"
      },
      "_hasShrinkwrap": false
    },
    "0.4.9": {
      "name": "apollo-boost",
      "version": "0.4.9",
      "description": "The easiest way to get started with Apollo Client",
      "author": {
        "name": "Peggy Rayzis",
        "email": "peggy@apollographql.com"
      },
      "contributors": [
        {
          "name": "James Baxley",
          "email": "james@apollographql.com"
        },
        {
          "name": "Sashko Stubailo",
          "email": "sashko@apollographql.com"
        },
        {
          "name": "James Burgess",
          "email": "jamesmillerburgess@gmail.com"
        }
      ],
      "license": "MIT",
      "main": "./lib/bundle.cjs.js",
      "module": "./lib/bundle.esm.js",
      "typings": "./lib/index.d.ts",
      "sideEffects": false,
      "repository": {
        "type": "git",
        "url": "git+https://github.com/apollographql/apollo-client.git"
      },
      "bugs": {
        "url": "https://github.com/apollographql/apollo-client/issues"
      },
      "homepage": "https://github.com/apollographql/apollo-client#readme",
      "scripts": {
        "prepare": "npm run lint && npm run build",
        "test": "tsc -p tsconfig.json --noEmit && jest",
        "coverage": "jest --coverage",
        "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
        "prebuild": "npm run clean",
        "build": "tsc -b .",
        "postbuild": "npm run bundle",
        "watch": "tsc -w -p .",
        "clean": "rm -rf coverage/* lib/*",
        "prepublishOnly": "npm run build",
        "bundle": "npx rollup -c rollup.config.js"
      },
      "dependencies": {
        "apollo-cache": "^1.3.5",
        "apollo-cache-inmemory": "^1.6.6",
        "apollo-client": "^2.6.10",
        "apollo-link": "^1.0.6",
        "apollo-link-error": "^1.0.3",
        "apollo-link-http": "^1.3.1",
        "graphql-tag": "^2.4.2",
        "ts-invariant": "^0.4.0",
        "tslib": "^1.10.0"
      },
      "peerDependencies": {
        "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0"
      },
      "gitHead": "64cda6af5ebd1b917d8838790e043cc70dab4ed2",
      "_id": "apollo-boost@0.4.9",
      "_nodeVersion": "10.15.3",
      "_npmVersion": "lerna/3.20.2/node@v10.15.3+x64 (darwin)",
      "dist": {
        "integrity": "sha512-05y5BKcDaa8w47f8d81UVwKqrAjn8uKLv6QM9fNdldoNzQ+rnOHgFlnrySUZRz9QIT3vPftQkEz2UEASp1Mi5g==",
        "shasum": "ab3ba539c2ca944e6fd156583a1b1954b17a6791",
        "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.9.tgz",
        "fileCount": 16,
        "unpackedSize": 76880,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevTEwCRA9TVsSAnZWagAAkbcQAIuTqM8ExSLD6eC7iCsk\ntEw268a27t2sYPBrs9HHADRjcmG2LFlpR8dOrdMWXDzn7v4qnq/b8b2bMWCG\n9yIABa4BHF8MAUUzIicW4uqz3cCPAgHtq5OVxOQZd+DIlAAKQ36CFLj+MymX\n1kdvxnL3QhPiKqg/PYW/N/3/6AxxhjXmkVYrO0u9OpknkA/1LgXS8WL6GtfQ\nyCwbb/GQyK9S4Ql2MHUgmR/e1bOgwPE+LtAcES6Zmd5k2zZA3QXoi17/ZPOT\nZFvGPiTyNKV5zBWX7TFqEhvnr8/SiRce/Z/qTAnwqeJqfO/uRba23J8p3fcI\nOSFXq/Kx97wabmKtLkIq9hBwwkLKm9PBwlMwbERioL48XAaxknmTERiaD2hD\n5JA5/r2WoOjO8vE5T/Tu9YoEELJjow6ifzJyPIyADqHvfciGZ/JCZXATxjUK\nnfs0ZHqxmveGK5XfmCGRnMCYq4hGe4WaoWjKLLzV5TGVSbR7YlMBbkdDV7To\ncVMhlf7Y+atHhgt6ThTFnygkk9imK+en9Xpeuqpvk7wQoAiYRSpZQ3N02+Zc\nfynO1/24+Vz710xa7SZ355aLRNcWpRFxQ0O/fEcesTB9VlNQW5jPQiJUr9uQ\nrpFqOK+HiElG9MqJyVIiau9bldEyqDeVJvfPkbYO6QJok0sGoLLxjjSIt/Us\nMJkL\r\n=4eN+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG3iNQ0tblCc+WSCGbIocK8uC3troVtpDGtPatehZ1UeAiEArBnh3Ajz1nYzKyU3awTg8ChjZ5Av/Qbxo678j23C2RY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "npm@apollographql.com",
          "name": "apollo-bot"
        },
        {
          "email": "ben@benjamn.com",
          "name": "benjamn"
        },
        {
          "email": "james@meteor.com",
          "name": "jbaxleyiii"
        },
        {
          "email": "peggyrayzis@gmail.com",
          "name": "peggyrayzis"
        }
      ],
      "_npmUser": {
        "name": "apollo-bot",
        "email": "npm@apollographql.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/apollo-boost_0.4.9_1589457199551_0.2507106272146502"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2018-02-14T20:16:41.770Z",
    "0.1.0": "2018-02-14T20:16:42.505Z",
    "modified": "2022-04-11T14:43:06.189Z",
    "0.1.1": "2018-02-14T23:56:32.350Z",
    "0.1.2": "2018-03-06T17:02:31.305Z",
    "0.1.3": "2018-03-13T17:27:35.147Z",
    "0.1.4": "2018-03-26T13:39:12.298Z",
    "0.1.5": "2018-05-02T18:37:56.130Z",
    "0.1.6": "2018-05-04T22:16:03.716Z",
    "0.1.7": "2018-05-30T02:05:43.397Z",
    "0.1.8": "2018-06-13T10:36:39.084Z",
    "0.1.9": "2018-06-14T02:08:29.044Z",
    "0.1.10": "2018-06-20T01:27:14.564Z",
    "0.2.0-alpha.1": "2018-07-19T17:29:54.055Z",
    "0.2.0-alpha.2": "2018-07-23T13:57:09.789Z",
    "0.1.11": "2018-07-24T19:40:06.822Z",
    "0.2.0-alpha.3": "2018-07-24T21:34:23.853Z",
    "0.2.0-alpha.4": "2018-07-25T00:44:32.499Z",
    "0.1.12": "2018-07-25T01:35:15.449Z",
    "0.2.0-alpha.5": "2018-07-25T04:50:13.216Z",
    "0.2.0-alpha.6": "2018-07-25T05:13:56.626Z",
    "0.2.0-alpha.7": "2018-07-25T05:27:10.596Z",
    "0.2.0-alpha.8": "2018-07-25T18:17:10.471Z",
    "0.2.0-alpha.9": "2018-07-25T18:50:31.360Z",
    "0.2.0-alpha.10": "2018-07-25T19:08:18.663Z",
    "0.2.0-alpha.11": "2018-07-26T23:07:59.440Z",
    "0.2.0-alpha.12": "2018-07-27T01:23:53.871Z",
    "0.2.0-alpha.13": "2018-07-31T08:06:18.327Z",
    "0.2.0-alpha.14": "2018-08-08T02:19:05.409Z",
    "0.1.13": "2018-08-09T12:10:36.949Z",
    "0.1.14": "2018-08-17T14:01:03.812Z",
    "0.2.0-verify.1": "2018-08-17T16:42:45.827Z",
    "0.2.0-verify.2": "2018-08-17T17:09:53.370Z",
    "0.2.0-verify.3": "2018-08-17T18:11:31.270Z",
    "0.2.0-verify.4": "2018-08-17T18:43:48.413Z",
    "0.1.15": "2018-08-26T16:30:49.289Z",
    "0.1.16": "2018-09-12T09:38:36.775Z",
    "0.1.17-local-state-alpha.0": "2018-10-04T17:24:41.964Z",
    "0.1.17-local-state-alpha.1": "2018-10-04T17:40:04.928Z",
    "0.1.17-local-state-alpha.2": "2018-10-05T02:48:09.748Z",
    "0.1.17-local-state-alpha.3": "2018-10-05T13:40:03.893Z",
    "0.1.17-local-state-alpha.4": "2018-10-05T13:52:43.987Z",
    "0.1.17-local-state-alpha.5": "2018-10-05T19:29:34.978Z",
    "0.1.17-local-state-alpha.6": "2018-10-07T15:44:56.526Z",
    "0.1.17-local-state-alpha.7": "2018-10-09T18:53:30.820Z",
    "0.1.17-local-state-alpha.8": "2018-10-09T20:33:31.939Z",
    "0.1.17-local-state-alpha.9": "2018-10-19T18:57:21.842Z",
    "0.1.17": "2018-10-22T22:54:49.924Z",
    "0.1.17-local-state-alpha.10": "2018-10-23T15:26:38.855Z",
    "0.1.17-local-state-alpha.11": "2018-10-25T18:31:11.551Z",
    "0.1.17-local-state-alpha.12": "2018-10-26T13:07:30.530Z",
    "0.1.18": "2018-10-26T17:39:44.841Z",
    "0.1.19": "2018-10-30T15:24:48.418Z",
    "0.1.20": "2018-11-03T20:51:08.640Z",
    "0.1.17-local-state-alpha.13": "2018-11-06T00:24:18.812Z",
    "0.1.17-local-state-alpha.14": "2018-11-06T18:51:13.268Z",
    "0.3.0-alpha.1": "2018-11-06T23:38:48.691Z",
    "0.1.21": "2018-11-16T22:26:35.219Z",
    "0.1.22": "2018-11-21T18:14:11.844Z",
    "0.3.0-alpha.2": "2018-12-11T01:29:43.731Z",
    "0.1.23": "2018-12-19T19:38:20.426Z",
    "0.3.0-alpha.3": "2019-01-14T01:20:00.499Z",
    "0.3.0-alpha.4": "2019-01-14T01:40:00.395Z",
    "0.3.0-alpha.5": "2019-01-14T01:44:28.276Z",
    "0.3.0-alpha.6": "2019-01-14T01:50:58.527Z",
    "0.3.0-alpha.7": "2019-01-14T01:56:03.742Z",
    "0.3.0-alpha.8": "2019-01-14T14:44:11.780Z",
    "0.3.0-alpha.10": "2019-01-14T16:14:45.940Z",
    "0.3.0-alpha.11": "2019-01-14T16:26:44.666Z",
    "0.3.0-alpha.12": "2019-01-14T17:26:22.003Z",
    "0.1.24": "2019-01-17T20:18:32.568Z",
    "0.1.25": "2019-01-18T17:26:07.245Z",
    "0.1.26": "2019-01-18T22:18:02.466Z",
    "0.1.27": "2019-01-18T23:58:25.506Z",
    "0.3.0-beta.0": "2019-02-01T17:22:34.589Z",
    "0.3.0-beta.1": "2019-02-07T19:23:48.749Z",
    "0.1.28": "2019-02-13T18:08:15.776Z",
    "0.3.0-rc.0": "2019-02-21T19:27:41.849Z",
    "0.3.0-rc.1": "2019-02-21T20:20:42.125Z",
    "0.3.0-rc.2": "2019-02-25T12:31:00.273Z",
    "0.3.0-rc.3": "2019-02-26T16:02:03.234Z",
    "0.3.0": "2019-02-26T19:41:16.084Z",
    "0.3.1": "2019-02-27T14:02:38.197Z",
    "0.4.0-beta.0": "2019-03-15T16:33:29.908Z",
    "0.4.0-beta.1": "2019-03-22T17:57:10.183Z",
    "0.4.0-beta.2": "2019-04-05T16:28:43.210Z",
    "0.4.0-beta.3": "2019-04-08T15:14:54.514Z",
    "0.4.0-beta.4": "2019-04-08T16:56:41.685Z",
    "0.4.0-beta.5": "2019-04-16T19:25:22.413Z",
    "0.4.0-beta.6": "2019-04-23T16:04:13.118Z",
    "0.4.0-beta.7": "2019-04-24T14:14:31.339Z",
    "0.4.0-beta.8": "2019-04-30T17:56:36.569Z",
    "0.4.0-rc.1": "2019-05-06T23:14:20.493Z",
    "0.4.0-rc.2": "2019-05-10T18:24:09.956Z",
    "0.4.0-rc.3": "2019-05-21T18:33:29.166Z",
    "0.4.0": "2019-05-21T19:23:48.454Z",
    "0.4.1": "2019-06-04T15:45:23.087Z",
    "0.4.2": "2019-06-06T14:45:15.833Z",
    "0.4.3": "2019-06-18T10:15:02.025Z",
    "0.4.4": "2019-08-10T16:23:56.381Z",
    "0.4.6": "2019-12-14T11:44:34.126Z",
    "0.4.7": "2019-12-14T11:50:29.391Z",
    "0.4.8": "2020-05-09T10:55:13.769Z",
    "0.4.9-test.0": "2020-05-14T11:35:14.629Z",
    "0.4.9": "2020-05-14T11:53:19.698Z"
  },
  "maintainers": [
    {
      "email": "npm@apollographql.com",
      "name": "apollo-bot"
    },
    {
      "email": "ben@benjamn.com",
      "name": "benjamn"
    },
    {
      "email": "james@meteor.com",
      "name": "jbaxleyiii"
    },
    {
      "email": "peggyrayzis@gmail.com",
      "name": "peggyrayzis"
    }
  ],
  "description": "The easiest way to get started with Apollo Client",
  "homepage": "https://github.com/apollographql/apollo-client#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apollographql/apollo-client.git"
  },
  "contributors": [
    {
      "name": "James Baxley",
      "email": "james@apollographql.com"
    },
    {
      "name": "Sashko Stubailo",
      "email": "sashko@apollographql.com"
    },
    {
      "name": "James Burgess",
      "email": "jamesmillerburgess@gmail.com"
    }
  ],
  "author": {
    "name": "Peggy Rayzis",
    "email": "peggy@apollographql.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-client/issues"
  },
  "license": "MIT",
  "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! 🎉 You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration-options) documentation.\n",
  "readmeFilename": "README.md",
  "users": {
    "sternelee": true,
    "arcticicestudio": true,
    "cfleschhut": true,
    "juanf03": true
  }
}