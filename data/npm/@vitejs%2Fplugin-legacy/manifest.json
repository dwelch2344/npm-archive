{
  "_id": "@vitejs/plugin-legacy",
  "_rev": "70-1b8d4bb1804439a53ae81dadd65cce8b",
  "name": "@vitejs/plugin-legacy",
  "dist-tags": {
    "latest": "5.3.1",
    "alpha": "3.0.0-alpha.0",
    "beta": "5.0.0-beta.3"
  },
  "versions": {
    "1.0.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.0.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/core": "^7.12.10",
        "@babel/preset-env": "^7.12.11",
        "core-js": "^3.8.2",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM.",
      "_id": "@vitejs/plugin-legacy@1.0.0",
      "dist": {
        "shasum": "f6efda39df2ecc4464193abbaabeea054affebd8",
        "integrity": "sha512-0Zrxm4Em/Aie5afX9m6+rJPQ7wzeVS6hQ6Y1s/frYodGkf9ReeYGP5cjudnf6EwO6sRYgHMFap1gSr1ZEofMYg==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.0.0.tgz",
        "fileCount": 5,
        "unpackedSize": 17575,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf93HoCRA9TVsSAnZWagAA0cgP/RieJpq2Fp4tM2b/xQob\na3snOEdyw5jh8nkDMzgzKyQuhprB9+TjFr0mrfxsVJUWmVQzn7AyEiIjBTX7\nsyvFXz13Fligv9BaEta0EwjJeyQ1mc01XQKrd4Ktddapn6DRUBz1szNOb8FW\nX0UhrETGZdUbEuIvM5Ro8V7AJgeJ0HFEcUsVTLeHzL2/b5g7zERbiGAxtOFt\nbXSrlU65BGVyiHKlhpNb8Yk9o9wfb3R03/fucTW7G+OZ5coThuTaORKUoGTf\nILUIkj4A42yc1RfKrl4YyrFhVAPx3LhZRCd9ASNZCjQ3ySi/mG3nHK0CIm2K\nlDZCD2CovlNLYhYhz8potkrIVHNhGrjEnPAdOAjTC3bMWQqE4ZS1vyICpFzR\nXHgpnIZqHV9BsGIXxf8xg/5kYFXW5PQGwHpAf4ME+YvQD1SDYjrSRYBF565H\njibJbeCmZxVZQrE4/8D48clpA+uEcAWJNfLKj2h0zneF0PupTap9Hyyj7lBs\nXw7XXVw3WndjrEUnXVxV5oRBPHHNSfbiWQ0/vLJTyApFG52lPrLUv5CZFNUC\nfS6fYNkjDPrGJF912q5pI+Hq2Xgh6IhZvFpzyKlWtqowdFj/9Gn9HJGoIhd6\nqQmsTTLSlFUkPUWLyaVQzRsPuMEIN16iQ+x0IdaRSOKtRFikKU129HHCdwg0\nwIvR\r\n=16Mg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCBUF9veWl4aX19ay3W5FExOlncq7EKz9I6XBBxQsPV3AIgec29QPVM6YeBGWQbIDWBX5r/xGTR8vw8orPcJTn1Cgc="
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.0.0_1610052071742_0.3163068675401899"
      },
      "_hasShrinkwrap": false
    },
    "1.0.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.0.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.12.12",
        "core-js": "^3.8.2",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.12"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.0.1",
      "dist": {
        "shasum": "6bcbf25d23ef22896c84d6d3d99c9cba77c233b2",
        "integrity": "sha512-W6Xqy/GsdEPl8aWjKvm8qN6hcanxh4vOU3vUdqLiS2767RMmilmWjgpU46RSfw+oOpgwa8bhTeKB6ngPnWhphA==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.0.1.tgz",
        "fileCount": 5,
        "unpackedSize": 18791,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf95D2CRA9TVsSAnZWagAA8AIP/2gdGaw8I5mIHlebgITG\nk6CilO4QD/lGrjYwlC2mzLiWT+JVSCg1xs2CHDjQ7KywgW0bcIPI5gNuW43a\n7EFXUIsOl/C+lttQ5q4oMVxZylTazdPq6AcLuYgDeEdcU8ModVV8AKNFfWWz\n2funxfCle2LgfMTguUiY5bzcRN3IOyHmeZXb12D5Dhc7NqRg2vSKCb6ctSl2\nbDNI6rKfpS76RsGA+pOdRuUFkFwtyb9kgIl8bz8oCwvXdLWc/NZSl7/aRxAJ\nsAZDkYI8rGLcG9v1XxANmGyiy+MkpASmsgkfS9l0Xt6YRDEsap/+2jiPDZpB\n6itj7InLV1yCJ2RnpCdSBT8+UPL7n+IbMGGCK4J/sjVlOnXfmu2D9ofbcUZG\ndQi2zBCssgqhfA3MuAZKawN5V+fF/AdcDBWrkyIOb1FhokXly+sPYgSdiVlj\nsdEFr/6cflf/eHzIaTqeQlvL/inwCIZz0Sz5yJToAvG1xXswhXxVyVTuskBD\nJeMj+MzEMGGOQRxH+XxgXSt7NeCGoHWMBmt61Cm8aFI55UHtAbEB4KKedVKf\nM7bFprLze/0kuWv1Da96OMG1WOF4v+QsZgDZ8Sy+Vx85TU8Lkf4uPLVloyng\n46KPFqWbuGsaBE+wSXnfN1qG8YAWeR8ii1i4EAy+w8W1eZV5/ri+TGxTAtFd\n9NAQ\r\n=aP50\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAT32qTfkJlaL4baQO7FpL7ArzrjOyiaQNoSC7FibExMAiEArGv7/RSkq4+F7p2kRhQTLTNZujtiW5J7xLTojvPy1mc="
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.0.1_1610060022428_0.044243019019351015"
      },
      "_hasShrinkwrap": false
    },
    "1.1.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.1.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.12.12",
        "core-js": "^3.8.2",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.12"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.1.0",
      "dist": {
        "shasum": "a1855a78ce5c8c19ef1cd3246309606977497f0e",
        "integrity": "sha512-vYSKs5QZAJiDljrfEKSh9Rr6db2xvSMyM1dPnB1XVGa2mud45/s6Z19jCuEPTOtbyiN9JNsVfzUBVoI6SPoRCA==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.1.0.tgz",
        "fileCount": 5,
        "unpackedSize": 20365,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf958fCRA9TVsSAnZWagAAtbQP/jvt3jAZCR2jGfNVenaQ\nzIgquFsEfLkUzzxOpHIpTm7+0leRuIJZkynkxI6l6kQma10nmMrgSYNQqEho\nkT2v+RfLKKB/M39knFQ73lJXALU+tNXciiBzAbgrebVbdg43GRWp1k4K4szX\nwG1PL72elebtZ07xhUw7tG2OUrgwJW9hMmRuNOE2DGGrB+SMm0Px9vA/73D9\nQVwCbtvfpBZdZ0pChqzxRhUWx0a3qXvudaKEQV07ih0DW1iQOiOxy0KivIdX\ncr4xAQ0gdD0g6SfPEJ3K25Ebl5K/1WMtB3BXhmkYP8r0jq8/ZYWIY3zrnoPQ\nalHgaL8ef67Kv87Vr+IslQX4fkVNuHdWaHVdedqjke8UW1ehZ/k1I3CnNDyu\n9lrrDJmx3PJzwv9kED+EdfbmX3tJh5lB38aRkGsCeh9OgUPM/DjnFjpr4xr3\n5QHmFZwnzXGhoBFY+0ywdZchYnUdg+Oety9331uhypovCg5XjUvgDx2fitm0\nsKEfoWMj8hnUhO8mIi4ocsFaiHsHs9QpHjV/UoYmaVJHGNHXk/1n+1in7Lt+\niO1W0qb1q6hXQdhM6toSAlv2vLSOlGxp/+vsD/lkwber9XozRIOqD05ZfBW4\nt+N9UjmoFJi+FXQwCUt+XLT4FWCy4qMEFC3JXilPIiax+Q+AMUAAlT49Rii1\nT1P5\r\n=gcz2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCiw1K/8kqKj2IiqkXtom4/5HkXjRCcGYxbAHIpeXslyAIhANPXFk4wGcqPELykmeX/8mGb2S6OQ2QgDKIgxL3urvnJ"
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.1.0_1610063646681_0.49018012217139706"
      },
      "_hasShrinkwrap": false
    },
    "1.1.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.1.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.12.12",
        "core-js": "^3.8.2",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.12"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.1.1",
      "dist": {
        "shasum": "bb53847308d9c7b175d522a35e112f0351601742",
        "integrity": "sha512-C9WQXawRJhsm8ZiV9HGHMrP4fSMJLvjcjHyP/ruRkXHIqO4Sth7XfGinPLM8Ypeam+Tl+eXlDsAXQS2hF+L7iA==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.1.1.tgz",
        "fileCount": 6,
        "unpackedSize": 21289,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf+hkkCRA9TVsSAnZWagAAJU4QAJILiMEKaopuy77JN61X\nsqfbwpmdbDOYb9OeuAlR2SdtAiRbhUNs2aLhLjAaLTTBbaRYWiBIp5q7e4ib\nmRtXr7Ube6nOOMbXG4ue3fobfb5/mjofErDTqR94IjVsF8Qlp5hh49OvkV95\nPIycL/eYXbdH5OACE9yUVRxN7yr+vjHy/TORRW4e/hx5GHlv6ApL5cR6nHMM\nO/u1ch+2Cdg5JM2juRIqFywOMleMpd/mdROCcSH9OGwkEFnKkXESPO+dvql6\nq72uXgPJEE0t9Ue1H5C+yr3pfiriJ09ZRvsYSmVjT30bglNOY0MxPhMGstMw\nFgdYAGe4nKu9fyosFB1jb17iWxlpz0g8KojIfI4dNZEZCm9VWrFcsyzaa2yC\nCm4GE8jq6Wwx4F1WG+A5Y1/KOcVXLTHOlFkZZ+N7l8KIRIxhMah1mna72YwZ\nSTIgAhAl0direbJHD2VTziRNJaGMInFsRWJACu58fo7g4qIMhzqNnHAqRmXY\neEV3uulJD3a3hrgD/8Y1xDwYvzI//SIKHw792OvhnkvB/hzDv+mrOxe4B/tn\nqCOn991IrnzLYzVVpeTlqPGVzSBHwd6IOWcfGB8O1v+0KSiFyCwXfbZYnB5w\nbLpNaEOTH+dKWObZ97Tfy3U6rGpq7ktvMftSRxGDHtQtfZ7AoAMvzleEJJsb\nKWvi\r\n=8EEX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF8y2VBwlYJRiJIYfyOWBIvGnghCUAnTXAM3sV32jbkiAiBIpv0B0O71NHp4/MzENd4VWwEf4O6I+zHKvqwUJbIrQA=="
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.1.1_1610225955750_0.3962887329464284"
      },
      "_hasShrinkwrap": false
    },
    "1.2.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.2.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.12.12",
        "core-js": "^3.8.2",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.12"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.2.0",
      "dist": {
        "shasum": "e6a2f7802f1a81c712f72656300fcdf7541eeab0",
        "integrity": "sha512-eoJi1M7Or16bkRjXFtdG39c8ElvbgxUxlXFo8GO2VmgOGO42r6Ku5MJD4ZkweIM7XGunyFvmEwTYgpUVC4PiPg==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.2.0.tgz",
        "fileCount": 6,
        "unpackedSize": 22448,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/NPICRA9TVsSAnZWagAArqIP/2bgqqI/L8ec1886yf0z\nPbRTrxzlbIIL4KcnD+iPJD/H5eRoJOWqJ5p3xkSmVTqGBLvGUv+FPgZBu9It\nodV7QHTjzkIK34seKlDWnyiNNYyJx333fWknadfQSIPaNuCajsc/ZwSSAl/I\ner+6tYJvBIqgZdUrFk2AAuQUvhJ7N5iKsnIcRN+x1w6YCZ1frGdTlEX2Q6Zu\nVoF1XJEuhNVH8kVzOZuMIa+2YQZDIFSdETdQU+MbDzxEXriN6kjORTxVbtZY\n+20qBXtdOwSeWkap21o5UJ3IX6oslTMt56LdVKFPPxEDdvj9ND7SnRlWAHJF\nJqTQZINOL3ylWBeFJJW0ym1a5mNiUb8NVzABFCQxVNAh6L6e8W2XT8Bg61v2\nt3jQmppUHXzK/GmIPf6L+HBzWmkQR6VtddQjFMr2xwUkkG+V+MloKhCP7Ba4\n+0fhTclk7rk+46OrSUNWN+Tvrirj4rUdJAykyJJqZ112dD7C/DyRuHN/M62r\n2u3MyVemOH09rYfluchnhmCOoqnpMQaViKqYYYocuz8x2j34vbgOSYrrjMyY\n9JO7Ni7LQBJj315hzBslIzngBsEFleriGOnT+s6PKRqklSuZYVaKZ8KJimEC\nS2WgThRn4wMBiIlauSpPtBiGmrUhUT8FrHphgqRZErasqNl4lmAyTSJJPwiz\nEVfs\r\n=DkKP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCGlX4eiHdEn5FsRRHeYvO3Fh/hJNzJzIrtwtUSK6Kg0wIgOnGmVgygRrLUVWLMPZVW2soFL5ZKzsLttjFPc9txcHg="
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.2.0_1610404807957_0.5755729412630908"
      },
      "_hasShrinkwrap": false
    },
    "1.2.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.2.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.12.12",
        "core-js": "^3.8.2",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.12"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.2.1",
      "dist": {
        "shasum": "783a72c56ce987f00caf334acc33195a0bbf6f24",
        "integrity": "sha512-bVOYH7WxffDSvfFfCGk/UYCzKw59n18fHGOV3VXRSQmeaBmbxuq0CRdAS3EtPvp74DjgA4GiZ+BsrQ0LyF0/yA==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.2.1.tgz",
        "fileCount": 6,
        "unpackedSize": 22898,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgAF8rCRA9TVsSAnZWagAAwuYP/jVlME/4t1+ocU6tM6il\nI0ZuO2gGQURebk/0JlGXLueHE9ukhqWZyFTmV9F3gdofA6xammE2ei2dpYe7\nxIgd56de00+TDdP1ivZB/c1JVYfdvJfnbbpdECIgL0+RWp9WmTHkprQ+NHmW\np+djoLMR8YiYR08DRQ1dk6ds5vrJxHzSSM76Xp7i7bxO95gxBbiv4Tm65qcO\nKy9IE2EGtUmc7f/m2zqFDofOGKP4IsoeXF0JWCU53d9DMcypHBxVVyyCysKi\n+0wfOsn/jJY6XAc4ahnyWE7MC6Ys0vvR62ujM74xCIN8v7JIXFug3CqOCvdn\nI6hUU8BCylqFVTjzWhmnBGyS6sqdn8mIGLE2LKXzbtzevtos/pQt5cwBVA5s\n3su3K7NJ6B/ELLoHHSJnXrfH4eQKYmrxfi8yoVhHB9+r9z+Tk0TeWoAeVObY\nF9582SDBHNUAJ/h9t8o0DWcMXjFebjug9NO7ZEPd2OGNdp8AqBrYSzjqyYYc\nzIvQg755rqKZebSygh7HHaejJy3n+iwpuKN+0NjxjyhDzZ1IF06ZoLlB72gh\nERZnJdzRCoBcgP/kTCrz9b2lkPK8kPE5OT30IhP+x7Q9dxrysruMbmjBVvjl\niM0GzotZNtD9CaV0LfWpbQ6C9hBcREehyyodAxWWij7lRlezw82IakfUCO3U\nikl4\r\n=ZXHs\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDoaIeGSUR0GFLMX/DeTIrE7t3hvoE+Y3NUduHMOMmU5wIgHte3pf4Eu8rgHQXgHEV5tIs9w6ugocfVEsAopaqBhQY="
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.2.1_1610637098710_0.32562611146676557"
      },
      "_hasShrinkwrap": false
    },
    "1.2.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.2.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.12.12",
        "core-js": "^3.8.2",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.12"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.2.2",
      "dist": {
        "shasum": "65039ca35be1542b5ad612b54641da5a89d7687f",
        "integrity": "sha512-ec3hvD4OrQusH42ERrTtjOmeBoGmVWtwg7mVMvvlWkR7wUwZSnr8J6HYYynmGUaBcC95+3xm6bRks7sh2DKq+w==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.2.2.tgz",
        "fileCount": 6,
        "unpackedSize": 23827,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgDi3iCRA9TVsSAnZWagAA5+UP/jLTFgnebvxHGOWYwdHi\n7GKEdVKj2nUbhcAtwkJ9+BX3UNoogrwLsH9CusTc+d7aHuzoGJHl9QgyL5TS\nX+xhMbw+X+fFIiwgsOV+UN32bvEgiYlHQOOL12h1tX7g1HDdlwEap1ax9xRc\niAeuQJrXkb4c0TcOtzZ62UF4o8qwfv1+koS/k2gR4eA6snpXYnpNtghaH6tR\nu3dhIqFiplUdXUMGLAWXCTR3VirtE84BWlKVv+QOxvMA15SoZoJ478Df4qVV\n3XlNB69I87kk1qU3dEucdc+SNihw6jURbJywBJXwnnnoVI00Zknq0uKv7gZp\nu9elMvQq6iJ3fI8S7M2VyNo8mpaPsRQZrxGy3mLLPlvRem8dkHHBvOxXv1Q8\neU+r7OsHQVOUe9jEbwFrEerD5FNoFaZG3C8Rn7wkYjQe89ENaKG46Ved8b0D\n8I2FYd/SYaS77vSeLbs5PNbdKiH5EURD6IQpcy8XzrpM1qiKmLh073ZaMA3J\nblGqxAkS1W8KJFTQlJlUwyHr9MrRNe+/wxo7JGtafQYMALJIgElz2L+eCHDx\n7t7cA2f9qC6ezszIzELPdfbFFjQP5AwVQHGOwGazu3UM7XTqGDNIDeuZU9dT\niFntyKUSPLDKQ8DfRZdp4YzmVLzLxdMoI2Vsg91F+vtXqgyqJCmitquhja0p\nXS2y\r\n=02IX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDNgQfH/OKufQcTL6Al6MnwrrRjB5rI17qP/c8IT2Zg7AiBd7Du0yl2sH7B7tUgGVJNVtTXLgzAwR0BA/jhKM7Lejg=="
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.2.2_1611541985607_0.2660036716132377"
      },
      "_hasShrinkwrap": false
    },
    "1.2.3": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.2.3",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.12.12",
        "core-js": "^3.8.2",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.12"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.2.3",
      "dist": {
        "shasum": "1007033b0a328e5c0d8d21683383dc40d8fed6a3",
        "integrity": "sha512-DOceNUiGkN/Iv3dFJGDwJMdIFv4N+5vDt96MdBFOFMlktt1fumOuNJvyCBE8TKc0qC0K5YSxUXpfKeKZhkkyLQ==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.2.3.tgz",
        "fileCount": 6,
        "unpackedSize": 24352,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGDRoCRA9TVsSAnZWagAAKsgP+wY7eelUI6BLLagWzySe\naQH6Ymy0bXEo2kVg23WEAuAi2aRsKurPlPJoya6mYQkH64aP+p0de4XyMQj/\nhupa/Gzb7fIukqk+hDZetBtGDitMuP+tjVWVpD/oy+a6Y9plUxnzs8FeVRhk\n2Ke7ZUgnopZXbdi+P3ZRz1kj8LXkhbyBD044zOOjy00khYAd0BYhxjDZwsZN\noTi2LI5qpl7nrj2C4eFG8eZ4/tT4FiFg2BrmyLtU1JOVFhmhREofxNnLCyGq\nzZfyFr6XH6b52Lm7oQflT/0tRv3GwFg7VmSxwdct04CBwtg/Ms0DadaHpqcf\n1rCFo4Rj+IWP09bAs1eVSoGHIT42pIRuzQRq39oAfIUq8RpZ5X+BHlwW3zfW\neFeowP5QfEuWeQNxq6/dubdmylPwO9HDBB6INbUu9dN0402MaeFZ0NLRitpD\n3b1UTYpXzwoFVLm9AjDiS2fXfMCk1u7Znlz8lmyUhSCSoFGI8dEYMBoZVlFL\nyYD2KhQnwCuuPz6LktgpKTSxWqChhgyVc+/Y4zIJD3+/FGJjRVaKkkVGFETs\nv4AHgWQd49xYae4F8prUZeG8OsfE1ijvrBg0OrOJoJxUy7JmgDTKmHoUhEKX\n+4CU1sBTc0q1xghOrq8EegfaGjNsLuyQTopWz7y4BvctZPyHxBP1QEh+EdoN\n3GNE\r\n=VAKg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBzexuGsCTA1Af2Y7mbgwZr7fmkxei5rtqjymszNjZYXAiAlbD8bvQZtuDTyx/PAdIFQP9YXwyh8EmPrlIA0FvmrqQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.2.3_1612199016243_0.6293762459818091"
      },
      "_hasShrinkwrap": false
    },
    "1.3.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.3.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.12.12",
        "core-js": "^3.8.2",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.12"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.3.0",
      "dist": {
        "shasum": "1b4f5d46e0cc3eb7d415f7aa9a9b655c2f593325",
        "integrity": "sha512-lNNNuFIZ3bTnAPlu/dvqi383+mpqVuoo0XpM4WtgxMQHNxK1rTk2liwlxxQk0/ivUJuvYo67YKq0GD1JkrQk5Q==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.3.0.tgz",
        "fileCount": 6,
        "unpackedSize": 26583,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJbWxCRA9TVsSAnZWagAAU38P/21QoowGhtgPXlQIuqwd\nTeid9Suwc6/D0h3V8DqnQ4pB21O1g+DefvpsLAyQatDtW31GMEe9anQe/Rdr\npHXZntRTXeElvi9urU96PeCFEATntkwcnlCDRxATMeX2c9mS3fFb1Xk11G2H\nMwz4dD1uxcCzREuNuD7OHTGAcTeeRLKs4LUDEd1kmNNnWnr4IvHWBfVvyHvj\nq8V5jFGQMcXA+usytemC3XSh+n3yeYfpIw+ettViEKJmwaiJeye/yQRzqieo\n4M2DigzjdD/sgUZQIVmI1tbvmhnh/kzAWrzYiqtqJGCtVu0XEtUH21EVblQA\nC1qK/HfjOM8W2teZkx63fya1GNhFpbIs/XzjoJtxzS85XCtamDPf+RiY2F/Q\nLHh39s8s0GQ/huApnOK+SrYYULKlbjp981pD9poA5mU/3n58P1vOgTVu5XMV\n5idH6VqCdtg8BauOmo2fUqkvUQUmuzUztxOX2EAW4yRR+OdbGx57Xa5Q9JrC\n4huOuSTlENwicaYLW7cxfzbSCnRDNcGRZpfLxoXeff+5Lehx8rW7ORlEYP96\nPywv+KCchyZicPK17PEKpMMieUcW1VBJkVOplNBphCt6IkvCYzY99MSRqES5\nPg5Xgro9o9S8fdmn2NJOCjH8JvDQMLBIVTzYMAW811tZgV6rXQwYbSGUa9kc\nRToo\r\n=94jj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFgAPCPJ/qyMBzKaGHYzlJDzOjcMtU/UiInH1gv+IyvrAiB84Q7n25g2xqOH7tPPyx0a/0Vgg7w+cK6u8TMwnV+sOA=="
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.3.0_1613084080898_0.10520628704098978"
      },
      "_hasShrinkwrap": false
    },
    "1.3.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.3.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.12.12",
        "core-js": "^3.8.2",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.70"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.3.1",
      "dist": {
        "shasum": "e475213721aa7c5022314c4a6489f961a65e8d4e",
        "integrity": "sha512-oidELN6ckX+APLjo2vjtyKv3X0Xj3SRzYd6Bm6taInhdH/JA/zlNF9uIUNvc5fIf/vIp0haoIY+mQNInAlKRrw==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.3.1.tgz",
        "fileCount": 6,
        "unpackedSize": 27141,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgKtsYCRA9TVsSAnZWagAAKRoP/3YrhTM7hsq57V5IoPny\n6kcgin4sTLpiFNehOy8LqcjXb92qPxWicHVfIj4BNi9m65orOC55KG3cIFLI\nTvi1ASw/VHrnJQSVQ4HDR2fvDB2T2/y2cFnqrgWHutm1TdqLCd4m9NLxma9N\nRAKqKyY5elT0UnVKN0fZ4346N8RW2wDggqLgqW31WVKHT0uxO4AvXmvItA9m\nT3u7w1UeprX90QCneYQkdRYye6X684rFaDx0nlxcszfhP2pUDalv0WZIYbpA\nMVRFQfvVzJBtmqPv5uiQLLSmHqOWIaPT70sgATHq3ieBEbR35GycqpH9oQaU\n0FNY9MScxVAlB0p4q6HNdc0dLsHCg1aby6VcWApLCD2UcNImDzlV1HadivgG\nAUTN2thr7tTm/YdRD4GPDvLOY8fqZr+haHduHJBK1s5DZVQmxSRfhlayS2td\n7Y9RfWG3m4lTsMrEItGth8nmsImiGgploM4hO0W8ZMhfjPmUUgT+1r2JARSc\nWy0nXAUIcYTKDAgDxj7vACfxJgddEh/b6S6tOJGiNlRjoGABvkTjkneR5JWj\nceQQ6yI8QyX5Z1enfH9WLH37mwmbfnBPlytc1YP3z97zV4zGFvvN48xx3X3/\nrSnjnSgrDaa/XJ9CS1OBeupS78iLr27qUz70wwg+lc+p6qWiQrUMDJksz83I\nL4ak\r\n=sAXv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDexUT0F6fo7ly6M7b7I9I0Lmy5jzCKwTcxhpG29NfsXwIhAI7+wGep+MP7C/OcBCohOEYO8obvSfjJHSRUZuNlnqQD"
          }
        ]
      },
      "_npmUser": {
        "name": "yyx990803",
        "email": "yyx990803@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.3.1_1613421335705_0.7876653186269957"
      },
      "_hasShrinkwrap": false
    },
    "1.3.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.3.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.13.12",
        "core-js": "^3.8.2",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.70"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.3.2",
      "dist": {
        "shasum": "e93db3020daf08a3585b08de648e5c486ff20e4d",
        "integrity": "sha512-nAUHCK5/UaaL9blYiyPE2tNWIHp/QZuQSuiJrRTEH47F9s4/rCWj4IGWpZSNcEbnsTubp7hxnkh9XkSgPT3Dkg==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.3.2.tgz",
        "fileCount": 6,
        "unpackedSize": 27437,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgXt+PCRA9TVsSAnZWagAAN9EP/2OOS77JZIIEPpiir4y8\nFbU+A1y8AlkGdVG4n6zYOdA246Kf4h8mDSIF3UuEvnQRPfv0O3NH/rzpOLPW\nwYcxJ86RNo2e83zjZyL16Rtnol5BETIYiskclsrqqFzMp8BidokBazR6f1mD\nA2ChekbHQGEWYRoMBjonuYhhcZRV07yIeLYC0rbd6La+thlPKF6n2SGel2OG\nrBc+vL+4ms16n8D6sspl7xl9/VgQPFV9MgN5iZ6JJuHaT1ni63gOvNA/zLqm\nPPaGfUFZr5TOFBy7CmUlCZyMQam6+f6/JXD9+6xyeK3Hq4ucM24hp34TJ7Zl\nVMCkzeoAxY7fGkBS2te7Q4lwlHnBB9+I6PRGdLXC2H0MRT5ryWzq8H12MpI9\ngd29yyPP8CDo9gCPHkjFMy7q+28dj5urdTTO/pxOoUprUY64YJ1NwmTw4Au5\ngl2Kbb/O0OaqpqFDuj9NwfcTbgPAuhr4bAslgDlNYq6wqAAE0xzjANkH+EcN\nwcUHKo7SHKRKYqfgZKOHfxmPjI+CuBWGz+YPOfSpVH7eQzPtFQTG+P6LKFlO\nsdlgEh+GURQVs5jO29YRlqkvOzc0Vm9fFllMbPZLFKIkdMFudCwXF+9LjpyE\n/qf6kZ0PtsiDzYaIhRTyWdqPHTS+nW6oQGd9dvoOy4gMrm7EfLIMnrvSyZY7\nC+1P\r\n=1SYg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCe+lD3gZGWlifcoCkSWWt0vFmj3VX6c64Yhw+4p6loJwIhAL9ZE3HDP9j4b8/Nv5wJSpX4Et6a4Jq+zV6amomLS1Vz"
          }
        ]
      },
      "_npmUser": {
        "name": "antfu",
        "email": "anthonyfu117@hotmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.3.2_1616830350950_0.9374900403946202"
      },
      "_hasShrinkwrap": false
    },
    "1.3.3": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.3.3",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.13.12",
        "core-js": "^3.8.2",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0-beta.70"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0-beta.12`**.",
      "_id": "@vitejs/plugin-legacy@1.3.3",
      "dist": {
        "shasum": "d17d4479aa888b164433ce72df0af565ff1e74f0",
        "integrity": "sha512-zDNUxkmIVzLFoTAGdFn19WfvXXIyO1CyT3y1eJkRJkM7JIa4g/KcacT2XNmYhT5ZXEQpYaSzdidZ/IChPhAmjw==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.3.3.tgz",
        "fileCount": 6,
        "unpackedSize": 28024,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgkBysCRA9TVsSAnZWagAAtV4P/AzcNJQv0TvEUxUhO+Q5\nnqw1K+xvhuBSavIk7qHG3eG8ZUd7iT8J5EPmOY517SLasl2I90A0TNCURSJF\n+Sh87bIY87omNUgwVf+3N/4utofWVkphMvH26IFbKf1buLjunmhWgfslRElh\np4C6WiB53+/AVkXX3N7wyql8yltQ0iB2jpfGR/GwqnSPOxO+dV9y2IooMqVJ\n+rEjkP5Lt3MNo6OmQdt62GCynYYTkq1iuSAJJ4G2UtNHBUY/SnvsN0DbSrhU\nEaOM63RnO7SL5YR8yfd4pub7fiUeDDsFoUUuBI4Qr+5O9VMCHStWhUr+xlNZ\nbtIcXt4rLjwfGKEMCKDJNMJBJhMSGYiIj4uHVgJPQhJMS7JYXA/sfG5E2A9l\nQyIlHd5lY3OqIKplS891VrOpKihT9p5/cgczvmcvVTRfGdNnoypXvLNexQPF\nvU3sBJ8Yie9uTGkAYMATo8Aw9w/7YfODUJCEB1d2NCbPVjQ8U7XulIib2ZvY\nYuVd3zjhZTyYa8ov+QreYzcosiUIZ6vCjkKg6zinkdO9uabqPWv4KQnZ4t/D\nqHWP/3Ucyo3eWXHev8OqOCAMC2Jtfv1yEGekPqZxz9bVuTtQQgLVy23Fntqc\n0GG0Qc3IR+55pDGZ24qzn5uG5rsTbLO5J1MUOUuP0gIDdIkVpsRXcPCKYWn8\n+HL7\r\n=p9Tz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGff7LCRqBb7aaz5F9U23ejAKIRoAZVVCDFWpZiudYwWAiA0SNsqHVOUbiV8NrPOgkiZh1xHLUo93+2TukPa6EvQ2Q=="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.3.3_1620057260393_0.3505684469269521"
      },
      "_hasShrinkwrap": false
    },
    "1.3.4": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.3.4",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.13.12",
        "core-js": "^3.8.2",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.3.4",
      "dist": {
        "shasum": "0618bc2e92af97deb07dfb2d32b7aa2528123d66",
        "integrity": "sha512-T6+eo9Je05i45atk/e2ONiaULf5IFYgQ7UOQN9mu9lITVk9Oxe7v5h56vN8ZsN1g52/UBXRlG99nQw4CgKJFDQ==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.3.4.tgz",
        "fileCount": 6,
        "unpackedSize": 28531,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgmi9ECRA9TVsSAnZWagAAwAEP/jEX7OD+HmZBVxNS51M2\nvtC3UyZZJ6McHYKQPDdhBWyjKA7nhppolpRdayDeTWyTPq1NBAApR6Gs8r2L\n3TdpOGo1Mya52EBZu7qIUGhqLZ/6a4dlSEOVcTKFMT8xBZI10rkCCjChdeii\n9GGIaQGqpxLhnlizn/is6+cFxPyzoTmSETG6c5RXXeK/QQCrF8cGRRnPxvoj\n//NkSJGiA2ipt4Kn7mT5+fdB3F/74r+QYTH5sSnDuA/QnXLS3MWZYbd4z6a1\nnwSRbIHtJ1IdCevujk5ZRE9bDNEdKWLLBa3/zuO9RPU4nOsYzHIiTODHFg/V\nifCGiBgLSaxeeljmm+ZDsefsd7w3fG8gY/kELzKKknrpjM7At/WR4tgrDGoC\ngwVTw8aNwnC2BVYImyse7jVud7zGtiYoEJRCiHPbS4gkN+oEiA5EHAlY6ndU\nbdVEEo6sQ6DptQaTaIv7vJsTLeVlL5Y8VR7GLrVA+tKh0VX6XhlfqFqYMOsK\ngw9kQvnTFUabEQp13X+vPHWUVI4KehQiqRFQVoToVtbAEakmP3AHRNuhSyiH\nt58jdGca4zpub1KJ6SNipyhnDBSHmHEQAOBS158zwyl/4gT1tQ9dol/zePw8\nll8UMyVqvnlA3StAfuWvkaP/HbFQxaxNL2ZwRU2jRCvIX+IFxqv+Xen47DFa\npQDv\r\n=T3dI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGJUpACiDdODyOFTBw5yHVbYr7k3iyjnyBa9n8dH4hQqAiEAwMQZBjx46L65RIzwKIreW52yfIvMzwC2GdduKlzkkqE="
          }
        ]
      },
      "_npmUser": {
        "name": "antfu",
        "email": "anthonyfu117@hotmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.3.4_1620717380297_0.521973175632944"
      },
      "_hasShrinkwrap": false
    },
    "1.4.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.4.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.13.12",
        "core-js": "^3.8.2",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.4.0",
      "dist": {
        "shasum": "1cf30419d75e841d3fe31384b84179d69b5b8a3c",
        "integrity": "sha512-QcAdw/NkMBjESgyhzOoErQ7O6vAlb81Ij+gsWQqPdf0uwWCWxXgn1eHDGq03bBxl6ZBzfo7hYKYH5hgG6boZrw==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.4.0.tgz",
        "fileCount": 6,
        "unpackedSize": 29622,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgonrkCRA9TVsSAnZWagAA86YQAJy7rtRnSTQLA29N24aO\nBX8dnY+/8I21zf/01iuV/K0bkDgk2KP1iSTSdmvh39I2EJw+lpkg+pd35DlZ\nsRNIlWJQlhspPcGJ5mxWA2zKNk+usAgmxc/CKPsPWhKABdwwfcqbbQRS47we\n6fxadbkPnw7jJDJ+zM2mPzBtW3jBF/a1cvfOjJP/nNSyqC4LI1+u+i0QO5JE\ncEqTfUmkNS8aO6TKEBzkJELxFDu8IVkCWtZRzE0SwhvzAxnfO0AO70gYLtmA\nuWgCvfB2Ts1nTTSfgBNhSNkYesYNaA9Z75LzQNPXTSiLVQ6G5SgCJYv4EPJk\nDPUGZY7tTkBB1HtemqcfV/3lvdCCU4ibB1Yb0uiuysto/A89nrIrl1pp7qz3\n8TQZDsKJbfYbBOY/f1rl0BwpFp/cHbxXMaMHlv/ZANlEDrVyYU0MACyMTD54\nuvroerQndBortIG6oCOud0KTr95yI2IV02DM2BeDhildIlNjN58TxP3FwYcj\nVBSuVjnGPh8/ttgTKvSw8uu8She7EjT6h1nDDsD5xfZI+/8ZFmnAVT48E+96\naCiJYR5gk/U2vwUARrRdVg0Z3bDNEZc2zpjEcZM+lT+5zEtQnFZYGMtI7Am6\no8hn2mdxis1pSu3scKt0D1S2thYSR4OWta2rZXmeWY0QxcnrAvHMW067qau7\n3WwG\r\n=ycNd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHmAqO7yfIxnYZQ+/EDE1Nlt24avs/qpGhCdx/Q7hwWdAiEA0gNIBfJ6s4M2ujWZGJr2eOgkPixmpclv8e2uK6ArrUg="
          }
        ]
      },
      "_npmUser": {
        "name": "antfu",
        "email": "anthonyfu117@hotmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.4.0_1621261028171_0.895926543052014"
      },
      "_hasShrinkwrap": false
    },
    "1.4.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.4.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.13.12",
        "core-js": "^3.8.2",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.8.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.4.1",
      "dist": {
        "shasum": "e9f7030081df0534ebc6d6c0f9f7c90adb9e60a9",
        "integrity": "sha512-xfcBaNYpPCFzDjvhvoUYOGh87SNvvJNmrHtRdAe6lmnmSOgMYW+QNOvWwdHFEUpWaWUGtgeyYfcVN024IgBafA==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.4.1.tgz",
        "fileCount": 6,
        "unpackedSize": 30850,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgtX1CCRA9TVsSAnZWagAAX8wQAITxAwZptoAcT1FNtrDf\n8/d8DkC1SqSBmJwZxGDY0UXHKmfFXLMzBB6BD2Kh6ghev1DM/DuBa9QRymC0\n43NVv79490GwY1jhBrKpw/kcXyoy4EL2803kNA4oFaC4Xr/+lNMWZcCgY8/3\n5RYcNV2oPxt9VQxD/p8IzPLf3OpVG4cmiHsn88VDAmkGX/vvksl82ZazoCvk\nV6NLPaXIuEIwRmBjawYkaQpTZkZ5T6o0kyHJZ3zpzFTuvu91+K5hmp766liz\n7wrZRyjasgDgAhvtakzoNjhPPjLOjP3FGdjC4JZSOQqV6sFP8LXDP0hdetnk\ncXcunmMs9dBml4ILmm6YdtuMhCAUJrrRISyH2bEUvSNovCt9xcBryIVo6BOW\nCY67tsaaY/3QkddYxHdLc8iBYFXeyE41t5usRA+TNBS7N/AuXNOzlV3c2RxP\nHUnDF/5IvD/a3h8hLZM4DkQME+yeDt6y6iYDHKheo5gx2GQpRM95f7GLATfo\nAA1lTpYivEOefZQZjUAN1r8L6UuqKr+aFeYJkcHlUlBV5HpyY8XTspRfu5/c\nl08QAihQdX4Pby28+ajymuVXy0a1h8cN977yLwOYIq4msH54gIHjdU78J3O0\nraNa59p1IS+oJW7Ny6aO2FAyat7efr5VsoL3w6hKwR84EsgvlBxlxGxYbvbm\nEKaK\r\n=+PcE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCAXQHTdZ8gqbv7fY8v1WBLyLz/Q9yhXsqqum1b0gcg0gIgT0PD7xwhfUxqlZpehmp1vk7Q4AoIuNN0uUIKpJEqfCM="
          }
        ]
      },
      "_npmUser": {
        "name": "antfu",
        "email": "anthonyfu117@hotmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.4.1_1622506817906_0.7520340954701845"
      },
      "_hasShrinkwrap": false
    },
    "1.4.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.4.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.14.6",
        "core-js": "^3.14.0",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.10.1"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.4.2",
      "dist": {
        "shasum": "219e7b86a9febe62b85a66b68127a89954ed93e5",
        "integrity": "sha512-D2ADBSpImP0QT8w9Eo+8KKOLg3I8OQhFwuBXGM8WQCRrEs55E3bCf9PTkL8S+tgliyLbJM+gjemxpRuoTTwphA==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.4.2.tgz",
        "fileCount": 6,
        "unpackedSize": 31764,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg0cYuCRA9TVsSAnZWagAANRwP/2X6GU94TrIh32BpzBpP\nct7yvqhsYVW6/uSx0JdokPsJqkikzGFx82m01gGScm7SOOeV9INT1qaMyR/B\nC3wUdr+FtW8a7M/8+1AOZQVJN7gUH5JEiFtCQxRwFkAqBtpNwqrxedKbiYKf\nauK0AnajReVsxIkNU+osf4wQ3s9Pgl5CspLGDor2PaZKFljHRqvFYy+9VpVa\nhwzXvdzWqTlz1P3w4myUGVeiC2/Lt1rJT9WDteet1Juu3OmBVupexTc+XpKl\ncEmCd2MeZMiT8oxjCFnW5yBgbsvvJbsWHq7GydtDkgkQqAfDfZ2v7d0MEo3K\n+77E38nMLafdB8Q0Mdi+n8znIV6X8mSwJ02gXhNexbKu+AdSxRtf4hmXNnl6\nx6207dxa3Z9ZPcJuy8h3/faAwlzKiVhnDM/r1va9NPEZ5BUcUpr7JRGChh7y\nDx9hnMP54TZr1W45gU2VWYjw1AExqiCWBBkcc5j0dp851L+88h0cY9af5OVq\nBiRImdDWd8PZ0R5vyyzTt8TlNQ4Sks6XXfdKXY5f9mH6MLzu3We5DYyuvsfj\nij9e1MJB6JkSerSViikMhIz9qsslfT2XeJgyDdsDtOfkO0LycW88kN7eZgdg\n2ZI+UtGEJCFfogvXAJ3+Ym42qkIvOpnCtjORh5IkKji9cQv78rjyubmDJgSZ\nmx28\r\n=vmtE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDrg7li/U3lBFcMC4kFY9EehHLONR/BOQEl4S7k0ufvhAiAsh8eTnbpgxspD9bkA/vZEb9DNUxqIgFwpYmCN3SOn7g=="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.4.2_1624360494206_0.49601193762274254"
      },
      "_hasShrinkwrap": false
    },
    "1.4.3": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.4.3",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.14.7",
        "core-js": "^3.15.1",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.10.1"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.4.3",
      "dist": {
        "shasum": "d022275d08e6f1f777891fb405816a9dd41a9f1f",
        "integrity": "sha512-lxZUJaMWYMQuqvZM1wPzDP6KABQgA/drVL5fnaygEPcz9adc2OHhfFNN/SvvHQ1V0rP8gybIc7uA+iI1gAdkVQ==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.4.3.tgz",
        "fileCount": 6,
        "unpackedSize": 32594,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg2PDDCRA9TVsSAnZWagAAzH0P/j6fcpVp+g3o4DEkbo5Y\nouxn/49Er9wohUa74ZKAp9Me6fik0qOnV3gPa8VI8El5tSBcflUgVbr5CrHq\n7Z+wS1XUJrQXtUKOw+ZxMXHsEOBuVU8wVw37WaxAUWI1hfwMMcGP1+pPs0aq\n2WEWMnd+9yxkKNGdDqZi9cdqEAI1qwAQSiFU9aBUcDDCg4DHaJZ6y297d5ta\nOJqxAUIK8BD1yoiTDxpEbTcOq4h0Oj6y/k85UUuT43rAzi6XZZ6aTp/ld4Y/\nWLKmNJxAU14gTugP9/R2hVvtxKYFfZQ03KDzcR2Vzlmwb21tLk0yPTg6KXZt\nudLjA01taq6OWYt6VLC/C5RJnP6BatNiZSBnHI5eAM6GkPj4R464AcmWkCvW\n5LQ1WsIqWmB2bw0S80rdVk/DEe9QKiEYxELJisp3y4naaQrHimUO5YvnPeS6\nAGQOD3CxN+shB84abvDeMyqs93JpkF8/f1+sU/8awPOprH5haEtPJ2g0M8st\nbyE7hHn+6X3TyihMXQOFeE9Rij+cDY9gmSB+cbAqdkws41PlVPLsI6kRss3v\n5RtI4Hl/VSiAam4nxHSOS8LS+HDKxLxcoAa/x9FrdAnfM3/T98LmAzxHqICU\ncNTSn2OSUDr7zu/TjiBTI9JGiOWeZ1pTEUqUzyGgLmw7rREQ3mspxEYZvnmn\nmhrf\r\n=0dt4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBWv2ZWiqle2cFFhpdjN+t9boIYaohkkh7I9wafSoZ8EAiA0i1vCqCamDiGyjmm8J5KU0m0ucnmhDhDNRcDWa38ekw=="
          }
        ]
      },
      "_npmUser": {
        "name": "antfu",
        "email": "anthonyfu117@hotmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.4.3_1624830146619_0.4852507789446032"
      },
      "_hasShrinkwrap": false
    },
    "1.4.4": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.4.4",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.14.7",
        "core-js": "^3.15.2",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.7",
        "systemjs": "^6.10.2"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.4.4",
      "dist": {
        "shasum": "a13bcfdf053f219fd8db6199e0d19c87b3d12994",
        "integrity": "sha512-pVYeQUDPG5InWwrTu7acy187WWjGonJnL/GMqMLmeKCFiwkZ6UcsoUjojiKmCUI0nAJTrrKH5lhjTqkccY9Iow==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.4.4.tgz",
        "fileCount": 6,
        "unpackedSize": 33360,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg7DP1CRA9TVsSAnZWagAArzEP/im6Qppmcp2+CC7V/nkb\ng7YlW8Nx7/nUCaHN/BbjPHYd52iYp2t+rbLNcUoYgiUbfpyJE0N12YvUvN/8\nwPwcF+QDaUSrY1qRA80+QyZG1WNew+MHd1su4ko8QUf2tcCZ/mcSbFCrVHFj\nQyZi/PlBQ+jJhFyuMtEYFnFEDGNTZSqxTvaTtUpnAPLFRArG/+5Ez57orWSO\nh2nz3FywFa5qXmZYFmH0v7jnoBBbDXPg+TlpQVcnP3M4M8VGK6aQxijkHfg7\n4/PkwFpBnPaulAHBCyzVNbDMDbwhtWoCw0OxR10T4kVcJwK1lq82FsMFDu0l\nNNEVpPyFtFNMU8La57/90mMUruZqk3VHvQm5RJ91D+NP7ryU8O0lUrMiCD7A\nzRRqdJtp+okmCwbJ4bQo6bXiqLQMpiAFMmVlyf0zAR3NJs43yVwQpK/OI0MU\nh/BAF3rqRwNImLbGHjTpEV+vAdBJZBSPYJQZccWdFUFtanYWrNhgSg1lB6y9\nos9qcODZS7dS+TUO9iZ95xusrS8vqMdgtlzUx5Uw9HtKiVi3jpssTsx4GG5+\nQnpPfwmDQujc34QF4rkqY1pg+oVehOfSxy3SZV+aj6EEyN+LSN0wkGDnLAYq\nK22e9RToWOWHYSvgL9atpO5TKhCE10ECfEOgfEMTfw0sDsr8T2daKDBGlOfe\nwCRy\r\n=iSP5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDtpj9sBWvSYwthYzTaWnSahrMuFUXGQgfktFmafXEOhgIhANqvS5iG6MPMY0+Zg4S6WU7mbAVkZhcinHxwnBUZU0fz"
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.4.4_1626092533547_0.013508675721101149"
      },
      "_hasShrinkwrap": false
    },
    "1.5.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.5.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.14.8",
        "core-js": "^3.15.2",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.10.2"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.5.0",
      "dist": {
        "shasum": "92893847fe1b20ebd83ff2371dfd8bc9658e6faa",
        "integrity": "sha512-q3F6/AEn6LNvK0ERkn0t8gzXTwPdexW4FtsIeIsCxopj02EQLtKi3XfWukU9+kjU599QouyRihvr+C2qO+0Xeg==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.5.0.tgz",
        "fileCount": 6,
        "unpackedSize": 35375,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg/9vICRA9TVsSAnZWagAAeWAP/RqWokueaitJMMzjNYl0\nh+ypRkN+vbPMfTlf4MHhgdhvFHDGdtfQn0H2uD6hF/DPvU6lekNh+ky81kzd\ndwu2jQT2cnTVRa+34FZiNu/gMtg0Vau+BECZ5rlUEUTMW3aSUS9iTx1DTHDI\nVInC2xVTemJMVI4B+LxxVdnoBF3jbleU3LqkstCqygjMEOj7/qyBxvMpVzoB\nPUBmTCyET73qKEeFwaxoX8Gj0ZWSmxM6WeuRG6s579UWi0x8j9EZmogPR/IT\nVnIqBBDlLNz+zFpCW7+wzS0CHZ9CgJgfXWIghBCmiC7eg30wa1SjHK9RArCq\njKGQF/zJEWv2PehgvoZOQfD0NgCACQjl864H2gH2Vqx+ibHzoeVGowbyEoUh\nYHNSu12ZLTTee6TD6vVM07OsKaLyvrfcKiJxWL7wMj0IUMc67u2eK4LhkuOa\nXZhetCpWIG4vCuc691o4ryeXbbgLcmSezssQYo7pkpzWrJRJo5jnrocoPXHu\ncZo0dtDd3aIlje4KFK3XMjrdChpLhP1axbMpcaF0oURBxkpHoYdyd7uQpVXG\nZkaErTZw+JF3Q5z1RHBJ/T0cRVhujjFflJpymGutEaTqo0H1QMdea+FdYlvf\nNL99nT27L78gJZo1JsaAF6POmLgC3CSlOqJvhtvt1lej6bU2aihSIsXhrDKM\ngBdA\r\n=ThR1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDBYC0TonbSfZbSi5UP6+Y44Zgrcb2rgRhrRuEcs4H7LwIhAJBOlxUqigLU7hkc5ViXoXnKrj74ikhOaMaZimyR9kT5"
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.5.0_1627380680369_0.046109389312367854"
      },
      "_hasShrinkwrap": false
    },
    "1.5.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.5.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.14.9",
        "core-js": "^3.16.0",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.10.2"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.5.1",
      "dist": {
        "shasum": "fef2a11c05d83f5ab13d2d04e52d75bac13c6e6c",
        "integrity": "sha512-g+0iy0X3NJRUSKZK+OCeSxNWnCuuE/6lsmr2WLWPOEt1vp6LdfHuNCYRooCm6s0ccTZ/SiumVk8vt9DWSYs+8A==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.5.1.tgz",
        "fileCount": 6,
        "unpackedSize": 36221,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCSf3CRA9TVsSAnZWagAAdfQP/R4C/R6FPyBQrJs7iof3\nTJzUazGC9zjl8pW9veMX2WUFZiVAMahE2DUsiCuSXT4MbxpfqQZWNohUqeWk\ntoGlVRGnfz/W41QS17LWodBlz6TiWgbeZy8zRfX8RRU4TM27vIVl0FLXny7v\nFciX67wwZCRWAYgYt3HYDTS2HqS+qTvV1GYwM1cVtHleUM1kIRzY7inueq3S\nIA32c+eyMYWjctH3bZkvVqFmX08GpN10Y0LCkBi+apnXh9zxmEkHXy740LJO\nMCkISICp72FxerPjDksxdhCN1ItEkwJxKfdAv/vL6evOiDW2Sqc/jtFXoUrd\nqouUec8a8YDVtjSq9+tMec41nV4KuKnu4qVD/0/GAcleL80zF6picTvlce17\nT26/5yX+ZzUDZfhZHRXsEWsWUu8vOCJcYBKm2vm4oK7LUyHl3wH9wWzaGw2K\nsxrryFFWJfFIezNRRge7Asi2lxcBGXLPKIFl8d2u/dCDeitt9yHG82Ug7W6e\niFmoHHcxQbvh+YaerH4hwu6F3w+XXoDCV88jztxDWdiGLPMqxhIOuLYK77SQ\nILMsDwSJpNVBXdRSxzo4094/0X/phqLSlPY0fS+peiyeeFCLTB1B6GjMUMJh\nFAmB0FxVjqo2yjKYfYaVn8kyfPkftJcnal8SrLQ1ULzbcuYlHbaU/2tTpcAs\niCD3\r\n=0GdM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC+NxqCzlhZW6mmlhwOKWFBQO+O2zdp7C4TDHhYWvc+EAIgCgF8izHr6kf+oiZ/xiwA6BXCX7F4q8YcX1mIeCkgXTo="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.5.1_1627990007516_0.4388503577568228"
      },
      "_hasShrinkwrap": false
    },
    "1.5.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.5.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.14.9",
        "core-js": "^3.16.0",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.10.2"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.5.2",
      "dist": {
        "shasum": "4c0b9f1b7ac4b06e19a18a85681914f8d994e150",
        "integrity": "sha512-b1CaWY/wi7gQZnZaxH+ujPTPb91bEPgnnk7l0WIwxoQtW5UC5MQywRcAbFX+Ise62exXctOMBtsnXKJw2KajXw==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.5.2.tgz",
        "fileCount": 6,
        "unpackedSize": 36701,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhL30RCRA9TVsSAnZWagAAuB8QAItTbGERv+q1YIaA2ZY1\nRz3ZMUj3EicecUY3COE/B+lnb0GLO0ibq6LJwcekzGi7wsMqYERcSUaNq5eR\nQ5I3LRE6sRZblqddv+w7p7RhcJrigNNSVqQr/Pkr4/Aj7esg3RPMhQSUNrGC\ncUr33KJh/3IzUeI8ifJUMhTh2q/hcqSWqIYSQU/RVgIVRB2s9Djcz5IoYCaw\nN7Yrqk6SGJ7o2DD4fsqQpk1rVpdsbPnc6qi4xrJGAbY+X3R2+C3JwV+1ORXC\noQ7I4NRwQR9HjUcAv9K8HMEmG3CZHvxjb4tybgfI2f2Wti1L1qXlX00GIkgm\nUGPHPJtjlur+dSAFQ9PP+mRbwi7+93fhEAQPXgrB6A9xTXUnf48HjN2mlE0L\nZ0gFkgyTQB0N0DNz0aqzIh7qQWZmG/c4F8TfMkTodvmEgMBZBzI+0WvAY6n0\nt8wk5T2+LNxjVzFybxarICCrn4Npd5aGD7/dR6WR1NIBOV35AUI2wSc6hgd8\nI9hwLdJcY5lcEzqdcqh5P5SuSNybE5caSQLYa3zhL4lT+4G+04L4wlpZkIva\nltJlML0TjRGlHKcIBsXGGmaVcjsL64fJIlzok41oDdwOYLmNZTseixFJ96PI\nIUTH4lktsjAZfqhqnwPvXrhIC+S20YTNRWICJ5wV9dE0zZiw8fFKbNKZ3zPw\nG6gH\r\n=6PIY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC7gd1AhGrCZX/sNWuShcYSTKSo5YhklFh/ejrBKGN28wIgCD4xlUoBq/5t5oUCccKhMNyYS2AliGhLBC5pwKxmEUA="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.5.2_1630502161522_0.7970352009273844"
      },
      "_hasShrinkwrap": false
    },
    "1.5.3": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.5.3",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.14.9",
        "core-js": "^3.16.0",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.10.2"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.5.3",
      "dist": {
        "shasum": "3a2eabef302a6aa4feb2ce3cff6ddf95d573e9e1",
        "integrity": "sha512-/b2x6dU+BbdW7C7KWxh9kMrVzv1JlUi1ucPQpSzWUUUVJjihbG+GRlpqcvfQ0p/TnAKl2d/VecbTLByVJJHORg==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.5.3.tgz",
        "fileCount": 6,
        "unpackedSize": 37555,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhN1NICRA9TVsSAnZWagAAhaMP/3e1K6iOCrmWXygnQiur\nBqXtOgKUTKjsA6ZGTcZin0muECy7zOLPBIiB7KsaSj20vEGz2KJ6BirUqivB\n/bXK8iZu+KmqZrLUXXWXdR/m3dtdHhIdvA+eNdViTL9T2pJ034Ub+Xsmg8iK\n2BtuSp0+IrzVhFFK+PKNpimp2VNOBG2fAb2rSlB88P32QlJu3wsvYMcf7f/2\n2eizY8ARuVX6+dJUdM9zcg58Uv1ier8pg4Baqit9FwJ2Qd35ySyoM7gGMHgJ\nhUY1QAxCJzaJldOGM2zQGGB6p4cehP83nYvGJQw/MI0RRhUw+OUk28Ua5pS5\nrd19CLs1+xTKYyZ3RWoXsy91ezrMKI/KCK7S3z7mOCIxRdxpkDAOkdb1yKhI\nb7/CATbKfSVRyCbg686DovqtapGt2yJwPD9fu/kI4iVUPQwKRQ5ipsDaql/y\ncoTUd+aWCx6RkPEVg7Mk5AqgicMA3mXbXmCtGpSP6Tfs2DqX9CytFuSYLSBt\nBCWcgMUKu4ZBjNhenY8VgQuBedSjwJ6eZS7GQwaG03a56z5svz0J7U25Yfwe\nQAZQKSJO1ePE0+D5kFP2NkwoYMMqCV+pbD1B7TlrtPDVEs+mXdvNlcwBNvyJ\n+gvvSiOIYXLThObviR6unjTh3jTsFw3pNF3huH5tT5d+8TdHDKYNjTS78gwl\nmxoq\r\n=uaeb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB3EafyOJ7/0JB24vAXsznrHneHjFLd/YID+G4VUgXhmAiEAg2fMI4WxtDdVmtsE0PvnkPFbuDRoqZ99kd+A0CFDBEg="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.5.3_1631015752803_0.509758997257374"
      },
      "_hasShrinkwrap": false
    },
    "1.6.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.6.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.15.7",
        "core-js": "^3.18.1",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.10.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.6.0",
      "dist": {
        "shasum": "08132c24873ee4a3f889a6bd165877262e9f1768",
        "integrity": "sha512-MrOT7DWJyln10Eobh38TL9Pg0yDjRec5ZlK0Opi+jZA/qniXgofvGJskOyvfbSKKmUkjLO2dUDLz2rIm2oIYtw==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.6.0.tgz",
        "fileCount": 6,
        "unpackedSize": 39180,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAC20Sjw17GRdglFXEiQ540Vt4CC84FwiBE0X1GJ+VQLAiEAoCpaV405XKbrv27EqCGGYOLd8Ykl5/L0H1jqbFDH348="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.6.0_1632922262054_0.6361357347865697"
      },
      "_hasShrinkwrap": false
    },
    "1.6.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.6.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.15.7",
        "core-js": "^3.18.1",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.10.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.6.1",
      "dist": {
        "shasum": "45f0e006de2d25758151b098b8dcb912c62a95dc",
        "integrity": "sha512-isBi2ti+AlCZUpfA1P6L8gseltBy/qi6Rsi92aDzeL2elpwXgN4Hv/xLS2UUSSj9F0mFmxXCYPWlBPaJnlYamQ==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.6.1.tgz",
        "fileCount": 6,
        "unpackedSize": 39608,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEQO4BdZWK8hunen0h1SiYC/UsrfDBHFYbEABBNiXO+FAiAfS2bb/DgGe42rKNDpnqIdcTVJYwfABinA6XQkd3OxSg=="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.6.1_1633433225472_0.9827493032612209"
      },
      "_hasShrinkwrap": false
    },
    "1.6.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.6.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.15.7",
        "core-js": "^3.18.1",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.10.3"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.6.2",
      "dist": {
        "shasum": "638bfe74715bdba33a68b3de555f615e1b246cdb",
        "integrity": "sha512-p5Bv/827WUpVN2m95ZYXzmjE3AblFE4CHasVoZ7dIwOPlyNcpg70SehEi5AWqyC0E7C1rHD8Nju9rWoV9uBLiw==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.6.2.tgz",
        "fileCount": 6,
        "unpackedSize": 40642,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCNCHc3lV4hudORRs3MkUsazF9yVKf7aRQWSOwAXHWqswIhANn3EhDm9Aad2DB73bzuanTbKl645e3F9N5G3hAF/jcR"
          }
        ]
      },
      "_npmUser": {
        "name": "antfu",
        "email": "anthonyfu117@hotmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.6.2_1633962461013_0.7107933956445911"
      },
      "_hasShrinkwrap": false
    },
    "1.6.3": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.6.3",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.js --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.16.4",
        "core-js": "^3.19.1",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.11.0"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.6.3",
      "dist": {
        "shasum": "314be9df113e5c2747ab10d29e5e9ebe0048c99f",
        "integrity": "sha512-YivdG6gT91/wjFL6woTwVRgK9KHrju8GwXwgv5FdfAVo0GK0FK4V+YEobmDKRcOMKXQ1U5awY5HqbPIsoJalKQ==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.6.3.tgz",
        "fileCount": 6,
        "unpackedSize": 40965,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhm50wCRA9TVsSAnZWagAA2WAQAIFhedgYlMoU4008SqWc\nMbgimT/mu7cNMnMlcEhirWkRgth7Cgsojhq4WNjQFgy8iU3eDE8RDJThs0q/\nhArgwGP2gMeAze+Jl5zg/IuHGye/2awV0M5VGP0udtZkWsPqVXCJ3kFAJ52m\n1e+AhFJsRP2P3Hbo0DJRn76LxI8OfKsUZrzBn+LD4v1ckePfPi4UHqJAjNaO\nxlGwSvAg72eZn+BJNl/2bAasiVmi9b9cCF4Q1Sv6g5cUq5SSI8uK2ib3GB1j\nsd4//GsZuNSfsmbIB73l1lfq9U+OKfutAXxzmnUia7pUIo4ZC7MvEOxB20T2\npkjq65gZ+PKbl2h5XZv2PZHKMxiY7MezNnlwxSHZPawo3WImPUpL+3Qv5yvl\njn4hhFbrUCDpzjJ13202Vg+TIZQoyQ6plTAPDsvLgn+iSoBxE/4Y5/PQwmuw\njgFI/7bi9ZUNhbwtGDlBBHmurwLewXCmNkrkNtf5dJcABqGmwkwiFb0Ppu3R\nyd3Bv+oUya0++BE3lfb3gCDxu777QD8xpMoNjHIFS0vw0ZF/O0YkdM2s009J\ntkDqZfvXxkX5kyc63e0xD7iU1uUpsYrd+MXjJ/LZvSpCL7+yvhLiQgRbqnVn\nIhckCDaUQCxZAhLfEkG99iEFEsQRZi9mjTugy//pYB5Hs25//B8XUl1LO7MG\nQSt+\r\n=8yRW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDETHo8nTZqoqwp/u6gqOjNgCK3g8BiQwWlWCXoiT8kigIgGFcslyCu+gc3EAZpCYjddMjcXjFBnbhkIRSj6I3flxM="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.6.3_1637588272004_0.33061775473166377"
      },
      "_hasShrinkwrap": false
    },
    "1.6.4": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.6.4",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "node ../../scripts/release.cjs --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.16.4",
        "core-js": "^3.19.1",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.11.0"
      },
      "peerDependencies": {
        "vite": "^2.0.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.6.4",
      "dist": {
        "shasum": "36cf0cc10bd1f32902719d62c8f23c9d433eb3a8",
        "integrity": "sha512-geH2F3hTRN++E4n9NZ0JFumxIWUKqW4FA9PAgM7Q6RvUOUUYW4tlURhEmCBYfZSN24H/yX3mEolX+wFVErsAYQ==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.6.4.tgz",
        "fileCount": 6,
        "unpackedSize": 41075,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhryRVCRA9TVsSAnZWagAAPtIP/A0VZqayzp88MY1jaKQO\n8De7YhOYeMT7wpL+PjO3S31K+JV8M0Zn5O1DqqDeRscEAAn4ydJqwiF0mgJR\nwJsLsBNnT2f+4m7v8OdY7NA1IzCPjWGqAWLgXlWtbIRuVxsuJShsXJeeZaGI\n7Ag3BsC4qdYnbq0FtesUERESImUICD3+uX9sjRJGXJwJ7QBF9KOhFkVh5MfG\nhHQ2qn50qTWTzPMsfdxUefEI53qEVHtE8GtNpXqjK5ipCJ766UynBST9Z4wv\nVizK49QAxXSHkSFw/4h+VxL5q0EqxLeEzV+QkQRq8zxO59k/xfq/lLuG7EbG\n5PS2yZw+cy2Qri+ohqXvkT0kpNjOSSSjbp/p9wuud0Nj8RaHSVQ1F/zB5M/y\ng+dzmyPKgPI4XLy7SCUbwwesVDTm69PjAL5GUDULg0r2jbaSOlv1vsByRZlv\nJlO4EX5bBy00dPkZxQSGwGpnWkt09TvFXFkUhvtyA75hYsXBXct/bDSWsMce\nnpYmkZTKtBUcR2bmzSOv5sVjNaH11qBqqJ0w5sxXVpU7JEVB59n7JYfqKEb/\n+tSnCvgnNMicnPBHEjP5c3xtqmF7wtLiHLDEyMVvSVzc9Zf3hDfqeSr4RSjV\nqbrza4dqgN3N0ttUOJq12Z6PTANv+8ldUIye1bl69FjEg/tjvfCdErQ2+ymZ\neZmb\r\n=fble\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIANI4v2fxF13+GgxmbUuQrjXXN86CFLOnmIiun//EMfLAiBYeOBbo6AZD3KXNlS+MWFgwUVM3skcsDEjIAYATXu/iQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.6.4_1638868053732_0.5327127516486658"
      },
      "_hasShrinkwrap": false
    },
    "1.7.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.7.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "ts-node ../../scripts/release.ts --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.16.12",
        "core-js": "^3.20.3",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "vite": "^2.7.8"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.7.0",
      "dist": {
        "shasum": "c24d318d4cacc4252162531c71103517ec05a1e6",
        "integrity": "sha512-/aXOuxCqXHQLpCTb/qSdZR6lsFoVNuuw9FhSf1T1Rffya4bnXy7/+bpMmAobqcRUDhqg0hRWc1KiWd3B+pUHQg==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.7.0.tgz",
        "fileCount": 6,
        "unpackedSize": 42360,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiA1mKCRA9TVsSAnZWagAAm14P/jwUU6X2uTp7AGl/Cbvg\n/MOSMimNfKj6BFHinnVSKvmYdB7Za/SSJCZJOFiKyjtUDVJzHyl6Rm6kU0ZM\nKwpR5xqShlNyh815Qi22hggdagS8CChsVMFGCIBJUH07Jiwi7vibKqExAPt/\n8gZgr20tdSXMrTkShQP1fGR7wLBjNs0vFqDyOjGUA85WEQRd+6X7FFcs2+hT\nZD9PbL8UbdY9FNDtO6aN81TsOtlsPH3k6Ci5c/iMZekqIS2j3bbKj6YJW7xC\nuLtrelfp466E2UltO8SggbqXTv3C+r0hLg5k41l00kzta+367Mx07yEE2Oui\nIsJzsky/BRfNtbFqG8CS+aKkZzATdfHtbJpvAt8js3yJ7zUZHDbS7nK+StlB\noIj13KulS3oXwTFVoRDpeltPN6HroeOSqEzDfPyOQDL0h8WhHGodUEx52Ucc\nJFpMGP1YlI6uwguxwZ5kUCwU8f+Jzx3/f+8PjLx4ANqAjz/8wDb9zvcEj0l6\n+HWpvN9y7YKjGQQAN8h2MvsIhST3PnNr2QpkG7kOnjudWy7WPf6B2oqxgHsr\nMulZSppYMMiO1IjPCqT8Fk9EBWeykm5ZZoM6tTIS0RKeP/rKKMPr8z49gY2f\nNHCXdH0nrj0Il7BbG0YWTgx9r7lQdjkUtXiAHV7RGFYgd24dXgb/inBEurrK\nStSb\r\n=qPtC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQChK6mcfa+cwwropeECKkE6lGyvAl+2JA+34UbDUaaMAAIhAOsIEH2byb2Y8ze9mLFPt428Vg93S+QdLYvWfwYInlay"
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.7.0_1644386698570_0.21624567635411096"
      },
      "_hasShrinkwrap": false
    },
    "1.7.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.7.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "scripts": {
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s --commit-path . --lerna-package plugin-legacy",
        "release": "ts-node ../../scripts/release.ts --skipBuild"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.17.2",
        "core-js": "^3.21.0",
        "magic-string": "^0.25.7",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "vite": "^2.8.0"
      },
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.7.1",
      "dist": {
        "shasum": "6236d2f5ea5f11f6406070bb69e700e781f86125",
        "integrity": "sha512-RqgILXsGpfV7NHodVCdBVau8ss5+ynMXp6JGF/F7nhSy0bnwSQPlMS3KFqh7twfifXK8VuMriqfU4CxOiqmNnA==",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.7.1.tgz",
        "fileCount": 6,
        "unpackedSize": 42917,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiBsxHCRA9TVsSAnZWagAA0fAP/3MMiJ+0QkzqC873GvEv\nzGB5NoKaGcL/NuZbFQAe55y+SnL+3Oui+ntaso+S6kUkVRo7038rMfXKLD16\norAjaioGjuE1ND7rQ4PoNAF4yQtEqqWX6r/WD0VL8g5qu7HOsey+wiQtzB6V\nStQD9T45iVzYyEk1Z0gNZiTHzwquGD2KsUGTY7hOJgc/bTklAYRuTVfgdDEe\n2/nPy95rvScRRGsFA0Hh+jwzdaJNQum3pgmD/5EDd7ADmVCxWm7vl4MYgLYb\n7njtE+feNxDANPxEVlHor8sadXm026i2Nj3dTQuwUBlnpeMKXDCnGG2LS8Hb\nSeUkQVOtHAAMkRor3blpPrAoK3pdkTYUNcY9yJQ8yNX3W8bSnJKmYAoZlRk5\nofWo5zY5ccYLsIr1dVOh9QUus2hfenhp0Vk2ZEMHvxH3eSo/VqimXsn6W7DD\nnp2DnGwIe/k995jtWoo4rPomc1OVUPDk6Q2YxgdwTp3BqPr5uOzCSMioVcUa\n1dF5JpTQui+zOEzE8g591oiv0HWhWOFM8h53qDltOVYnDFkn+2F4lwUVAYo5\nxwDjrEy5ZFTBlqx392Mz+dCl2Q563zrqFzj20wHdHh9eG+hjPD+DHGodJ3GZ\neqA0u0v2JlQAc0oAEd9dyF4MRADwv3KPveNgODW4zqVTR0mwY9s11X2ZHpW5\nMuW0\r\n=qXbH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCwD3IsUHN9ikrk8i3mz0fJzHhmxHBDYs8hmo/XY23wtgIgDdX8zcCwQsmn/uZLpGuk7gIMaDZ9MQIJiJJXgggZPxU="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.7.1_1644612679416_0.8628083316678385"
      },
      "_hasShrinkwrap": false
    },
    "1.8.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.8.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.17.8",
        "core-js": "^3.21.1",
        "magic-string": "^0.26.1",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "vite": "^2.8.0"
      },
      "gitHead": "f6491c144df0ba8e340dae1f75c9e7d5c7b4f7ed",
      "description": "**Note: this plugin requires `vite@^2.0.0`**.",
      "_id": "@vitejs/plugin-legacy@1.8.0",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-S3+uL1zp8GLUbmJAQk2wQbZLTyISKRFSMBwCFI3XQVRD3OZshqkiPyOKdRiSPlP9HoGz+q90kk+1qPm1tJRqCg==",
        "shasum": "6521e6de924641094aad5d804eaef3ac7db71284",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.8.0.tgz",
        "fileCount": 4,
        "unpackedSize": 30215,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDq1+H0wpv+VFWNQxbbWW6dL0mW2E0MKFkrG1uK7I2qwgIgMu50AAg3RnTXSs4ghGs+LopB97Kq/kxKyIrg/1EsaEY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRFCHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpQsA//ZdKegoZR+VrM2BrwBkt0nwMFJWLyrb6NEwlBS6QcEBPKDAL1\r\n7tgoPKi9Oo8Y6mBbmmshIE74Y/Hs1uODVL4TXSHYR4lB77N0+XfkUdAZA4+u\r\nRapYsRsQ2AiZEuDnzG0F/fgAt4CePgTIC9NyK963eqWnxBz9IfJm1f/gnc6N\r\nsmWztA8/5esEE3vFEfmOc5d9RY4+L0pErX9BVPGH7P3o/VLaYNnLdAfZ/+s4\r\nNiql3jbxkVutiU+L4OqwMLVbDh+XobSQ6bflQok/FFLRzrx3Cb9cua3ykSk0\r\nDB5vjRlL/6vRSjPv8LzJVMHd5gG1ZLMIMKwBhVQoI5ihf3oy2LVrJpkI2stA\r\nFjRAiiDHXUXGeY/TLjAJoiVqA5lkBQIg7v1f5RRwaOUEvV/6D244/MgMkdWe\r\n1tuoSHq76zzysoYIki2dz4EmvtgRoc94q8eUvkDRlQFJAvUtJsZoh+vd4Mcd\r\nhc9VnEh9VUQES36YKsL9X2o1DOKLN7BiSUVAHwWn5QyX0CeCyrBkLxPW+6sC\r\nRvnzeCAj52hMYvO0O4c8ISNpjfOHbgQvSqFqRknwYTKjaR1cdNcQWUH0USUy\r\nyTX+bL3GF8GHog5uTpsJvDheTCVG7FF5u3Mdugf4ZyEJuuBdDAs++mogRR9m\r\nAl9iwvNMZPYw0RrKrOCcpw2cB+7H/uf6Sdw=\r\n=qIzf\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.8.0_1648644231590_0.2412384502657392"
      },
      "_hasShrinkwrap": false
    },
    "1.8.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.8.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.17.9",
        "core-js": "^3.21.1",
        "magic-string": "^0.26.1",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "vite": "^2.8.0"
      },
      "gitHead": "e7ea19ad2204a12fadc37f5ecd6ab0eea2d23373",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@1.8.1",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "8.5.0",
      "dist": {
        "integrity": "sha512-kmBWKq7EeNvzS4AqPBqUKdoWG/NYQXh7StUFMWR3D21aN5Mfmar7CTO2a7K+bBxJH/vAL9gnnueA0wb7cycCmQ==",
        "shasum": "9431a983f950b4343d5b80a1916f25cc03d6b9c4",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.8.1.tgz",
        "fileCount": 4,
        "unpackedSize": 30197,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDxhlFH7ssYio5Xyjwv+o7Go6evuV4f/LCmnweraFIfoAiAjBTuBqyU+9CN7S0s58thZylfzcTMF7nmJvLtCsFr6qg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVtYzACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr6IA//UIJO1IfXSmLKJ8FWJRa9aj2onSMiRQE7u6OMw6A/ynv4hNTw\r\nrLcAVJ5xUZjwZAz2ywXJQgu2tz58WUyItMWkjruOJP4+jkWfPLb8vXnz1km7\r\n32d6y5VyeYAVCsUMrf+QyNe2wKVI+HuLIaxydDe1DfpnzdAmO3C2zDpu2L/U\r\n+sE5w8gPuwo2vgctmMxVsyFu+qxVcqwpidM8e4Ln+3mUcpRmgRF00pujgrzx\r\negCvPhesblzs5x/z7mkzuFy7+RJwUekgxaU0zEautgre4BgnCTVwUN+pjqsQ\r\nrRLYpvkiakxCWhvGLO4tVnehR5EhnScZ56tqzF4/hUtlS/f4OaHutW6ILJoC\r\nWT4rWHvlQ63p+nBzab6qPlVg/D2nT4QRiQKWFfRTT5k182WMomswxtGnChIP\r\nsm2yEuZz9M5BENfoThKWFj12WTF5XRLAp9CcqJOsvCaVFa6z1ckN7gLr279C\r\nQyWsn/C2Gen+7CV+n1NdnbdJ0MIT/RUU+qDAlf6qK7X6mzGFjdrALtJH38rh\r\n81ObIXkhdIxM8BZA17o0dlF5cUInOwn1/TRBDQnbc6DZhdqxkAN8hZFpOVlG\r\n5tQacU4ruRNo39DJ627kiOEFwGi4yyJPDKH72lhh6RrPbztmRdMvt037yuSL\r\neTVJzFUXpeifc7CM0/8RKEEew+eh4ly4okk=\r\n=3Etn\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.8.1_1649858099415_0.14086609039107034"
      },
      "_hasShrinkwrap": false
    },
    "1.8.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "1.8.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "index.js",
      "types": "index.d.ts",
      "engines": {
        "node": ">=12.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.17.11",
        "core-js": "^3.22.3",
        "magic-string": "^0.26.1",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "vite": "^2.8.0"
      },
      "gitHead": "f8930432134b8ac556d088b92b812e79c7258940",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@1.8.2",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "8.5.0",
      "dist": {
        "integrity": "sha512-NCOKU+pU+cxLMR9P9RTolEuOK+h+zYBXlknj+zGcKSj/NXBZYgA1GAH1FnO4zijoWRiTaiOm2ha9LQrELE7XHg==",
        "shasum": "2f315bcb6685b12719813fb9412851445cca636f",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-1.8.2.tgz",
        "fileCount": 4,
        "unpackedSize": 29808,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDOpsExdZiiGBWBrYk7gzEtJnoBeoy52Ty3RXl1vMoGqQIhAJXuRN3a6Lp5nyRXidj5NTZLN9xKsso8jaF5ULSHOSww"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJib+NGACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoXpw//SCxv2DIvWprwHvMah/q1s08Mp4z0W9nGIu5Z3/7fUR52PgAj\r\nlHxyQMScL3NLZA87FTbdGDS9//bgVWT7i7htU9ADnaTiJm9QZDQlyBLEu3ZJ\r\nksqchAC9DiykcQO5C78//p/fvvRNpad6RfF2Ns2LQHlsYqZHCI8dbPS5Bd3z\r\nRax7hcopyXW9AUYq3mYYy8HPUVgNibTokAve7O+Xl8HQ2W94Vx/e/jReMAQ0\r\nh6um5JCv2N/ERqRUOgNz8MeTdOG0CE9VUdxNxYZaRF0P1wMJcVlAJRG5OpJk\r\nTVcCE+3LCwBT+e/XB+UUxM5Q/Kdpg+en642QhmwZaOYAooi2UYTczaa+n4+L\r\njl1k4iJk6Yt/vRJV4/EeUrjRStyY1Gd/ctIr/yYXtd3+4p8jsMddVjdD1JSD\r\nxQMAjvtqhL4YuRZtlNLwoLqkRzFIx9K6I9iTOQXya9NuLESguk2A78jBn0S1\r\nBb+B9cV02706GVZsYmvNDI4a0CBmUPG7BlhjHaIBuzkjo6yC28wXOfUOLZwv\r\natTWrF8ZzJVQw0a5z6EjbSiEtt4PK6oH1Xzsb2xiQ4VkugM4jijL4DPa1QPa\r\n/DpsyXeSQjLwN4m3QRwX9AnlWxN5MMIser4qXUB+wAS1U7pZOFavMczFPy1K\r\nhwu3FVuFCXXBKvg0aFK+PMpfDmI042X9W6k=\r\n=J5aF\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_1.8.2_1651499845870_0.7770260058531866"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-alpha.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.0.0-alpha.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "ts-node ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": ">=14.6.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.17.11",
        "core-js": "^3.22.4",
        "magic-string": "^0.26.1",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "vite": "^3.0.0-alpha"
      },
      "devDependencies": {
        "vite": "workspace:*",
        "@babel/core": "^7.17.10"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without native ESM support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11']\n    })\n  ]\n}\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** `'defaults'`\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). The default value, `'defaults'`, is what is recommended by Browserslist. See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `ignoreBrowserslistConfig`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  `@babel/preset-env` automatically detects [`browserslist` config sources](https://github.com/browserslist/browserslist#browserslist-):\n\n  - `browserslist` field in `package.json`\n  - `.browserslistrc` file in cwd.\n\n  Set to `false` to ignore these sources.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting browsers with [native ESM support](https://caniuse.com/es6-module)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false\n      })\n    ]\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n## Dynamic Import\n\nThe legacy plugin offers a way to use native `import()` in the modern build while falling back to the legacy build in browsers with native ESM but without dynamic import support (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without dynamic import\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@3.8.2/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@3.8.2/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally']\n    })\n  ]\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-4m6wOIrq/wFDmi9Xh3mFM2mwI4ik9n3TMgHk6xDtLxk=`\n- `sha256-uS7/g9fhQwNZS1f/MqYqqKv8y9hCu36IfX9XZB5L7YY=`\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nconst { cspHashes } = require('@vitejs/plugin-legacy')\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "gitHead": "283b7bdad036180b44bfc7d16742a669e43e5ae5",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@2.0.0-alpha.0",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "8.5.5",
      "dist": {
        "integrity": "sha512-i0eklR/GT7PWU6Hw3/FUyAkhl8/6tbt5kB7Gq5CFPo+4Os+59d0uTVuyhVBJY4p4fnwMWP4/keSPzMb+ExsCCg==",
        "shasum": "845e787d45f472951c04eef114d880f81c3df296",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.0.0-alpha.0.tgz",
        "fileCount": 5,
        "unpackedSize": 41750,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIA2oJ1teGZmVCxM6mGztZlAwZHX61s/yG6dCfxJeFzHzAiEAhMFVslsPBqBAj5RI6bc9z4Gy10wlJx0ZXc2y0MZWCSc="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJifljmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoM1A/9Gy+um7dvmLJPew8ffHi83wOl4QmHRGN3v7PaXGwAL2JYoMYw\r\nSCzTYFhzcmx9aPocMhg0fgNO9PUHnej7KMgPLh/Zf+FUU9VIDIoXHBl2lvEx\r\nj6KLx/0OOu5yNgc4AqQoqHPefVVJlh7V28/EsseM/Ye+xy0DjYUDtbGrkQHf\r\n26EehfYAueGVT325CK1DpcWqlMYivgFx3CaUdRI/ybyPASomLvCEQfxPC0Gz\r\nqK7GjLv3l234Xnew7g0MmCLxqhMcrrWDvAu/5tkGzE7cLvmhkm4oRQGfZdwS\r\nC/47BbFx9E3T3/rYFCb4m4OVrTB0CCxCt2oK0ICYFvyoDpqTSKZun83dQudn\r\n91/tWefPinbgCzjWs7CHm7zxhJsrVgQ3Qdp98fbYCDGZyOy7BxrU13h75wLg\r\ncbqO9uOABQ8yLnEWHF79ofRUq2/XJlLiOZo3iPmOk9+DYTExkXOjCDYyTHxs\r\n1N2jZKQ5OA6J55yq6ljTcqd2BoY5t+9SeQQj7U62CP+2zIg/dv3FBEcQJZnl\r\nbTMzPSJbYIjCndIIiBahv7lWOG7jjre8SgPBJJCMO/5pIohpYuzWsiJUNsLE\r\nu7SIlBfiwWiu9kzqJ8pqt4hthbDy+P2IJhresz3YJ4s+maxFPXRfIfsLOIPQ\r\nhPScEG8ldRR/cBfXrxFyLt3LhTOxAF48f2Q=\r\n=36L0\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.0.0-alpha.0_1652447462313_0.26742258086472126"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-alpha.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.0.0-alpha.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "ts-node ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": ">=14.6.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.17.11",
        "core-js": "^3.22.4",
        "magic-string": "^0.26.1",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "vite": "^3.0.0-alpha"
      },
      "devDependencies": {
        "vite": "workspace:*",
        "@babel/core": "^7.17.10"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without native ESM support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11']\n    })\n  ]\n}\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** `'defaults'`\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). The default value, `'defaults'`, is what is recommended by Browserslist. See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `ignoreBrowserslistConfig`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  `@babel/preset-env` automatically detects [`browserslist` config sources](https://github.com/browserslist/browserslist#browserslist-):\n\n  - `browserslist` field in `package.json`\n  - `.browserslistrc` file in cwd.\n\n  Set to `false` to ignore these sources.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting browsers with [native ESM support](https://caniuse.com/es6-module)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false\n      })\n    ]\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n## Dynamic Import\n\nThe legacy plugin offers a way to use native `import()` in the modern build while falling back to the legacy build in browsers with native ESM but without dynamic import support (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without dynamic import\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally']\n    })\n  ]\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-4m6wOIrq/wFDmi9Xh3mFM2mwI4ik9n3TMgHk6xDtLxk=`\n- `sha256-uS7/g9fhQwNZS1f/MqYqqKv8y9hCu36IfX9XZB5L7YY=`\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nconst { cspHashes } = require('@vitejs/plugin-legacy')\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "gitHead": "67d273ce52b3dcfeaeba1301a5fe83e031ded3ca",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@2.0.0-alpha.1",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "8.5.5",
      "dist": {
        "integrity": "sha512-m7aAhMaaW9TDYSuehE3bef1sseMb4i7Eax4DQO4ASYEUoxTP8kH6SKkzQ0rEfvoDbOEKBo94on76j6BInalBVw==",
        "shasum": "563b1d4b43c91e166ce5453c85d9cb902c782c5d",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.0.0-alpha.1.tgz",
        "fileCount": 5,
        "unpackedSize": 42533,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCsPozSBadTrbmBnl3DS5dMM2qeDpnooo+5PKMGQSGU3gIhAMc51m1TYIoCaTmoqmPvYsTn3minDbvVfnaVTpgSOz2T"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJihZ4+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpvHBAAiC4xDvNr4eNe/P/62lNjAlt+umPyLnZHmrQIr6XMLsVO+QZz\r\nDxohhhgnOoUS7OLuD2L/cMW/lCwvdcSC8DxDXW1jJX68otUMQW3R5A71Broq\r\nkvk0Rx49YVbaqBO88oC8SZ3eCNqcF6MtNQvOcUnwPSAk56EThMkQyFol+aai\r\nTWuBgUwyuBsiX5SUw9k+iLqS6ZVBhglmCbZoz/LFcGToYDNtmjGqhOjBVcHC\r\ndPFdAzCqJhnJUHBjvCpc4WS3M6tfAol2XHDE10DtDZZP4HN8hBjdMXHFWwaA\r\nEJNGAtPoxARarQB6oZtxzPT38shhEPvb8q2cnY0xqMVeH5dRxzvhpTCWxQAe\r\n5TaLv/CWVSa5E5XohhZsfEgyU2GBikunoRHP+eTCQ0ZF0F4HvrckhQmmY4dU\r\nmWBXOzad9+5ZBvn3B2iTHUFk4c8aqQyWbe5UOjBxeX9l5aL+JkrhUMArVnxY\r\n9LwIXJNwNA+Zy5bWm3f/7dVk4sLi3kcjQRjXj58I6wyNtxlqJH0bZm0G4N48\r\nYuFXyXd4wU3hOEpdbHlWsGP0HATleJZGY2y3UNjrpFSyHJyVTljm+7tX/ShB\r\nBn2b6KJiKvXoNytjZwblYcmQiV4gPwHcYS3BJtcck91NmSLi/694ZqJF9w40\r\nGDtBsxZPM3dQ8f8Utu+jn033ouBFwqr5KE4=\r\n=k3RU\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.0.0-alpha.1_1652923965990_0.24860788679153112"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-alpha.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.0.0-alpha.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "esno ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": ">=14.6.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.18.5",
        "core-js": "^3.22.8",
        "magic-string": "^0.26.2",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0-alpha"
      },
      "devDependencies": {
        "@babel/core": "^7.18.5",
        "vite": "workspace:*"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without native ESM support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11']\n    })\n  ]\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** `'defaults'`\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). The default value, `'defaults'`, is what is recommended by Browserslist. See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `ignoreBrowserslistConfig`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  `@babel/preset-env` automatically detects [`browserslist` config sources](https://github.com/browserslist/browserslist#browserslist-):\n\n  - `browserslist` field in `package.json`\n  - `.browserslistrc` file in cwd.\n\n  Set to `false` to ignore these sources.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting browsers with [native ESM support](https://caniuse.com/es6-module)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false\n      })\n    ]\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n## Dynamic Import\n\nThe legacy plugin offers a way to use native `import()` in the modern build while falling back to the legacy build in browsers with native ESM but without dynamic import support (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without dynamic import\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally']\n    })\n  ]\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-BoFUHKsYhJ9tbsHugtNQCmnkBbZ11pcW6kZguu+T+EU=`\n- `sha256-A18HC3jLpyEc9B8oyxq/NBFCyFBJFSsRLt0gmT9kft8=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nconst { cspHashes } = require('@vitejs/plugin-legacy')\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "gitHead": "272c77e6ba4e4e2f461ee56c0ae85c63eed1dc9d",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@2.0.0-alpha.2",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-9/gtXTgftLka/TUDxwkRU3GuVXn3DVbbAGHeKRqI5BtEbo5HoZMrDuRg/wFx71Wm25yU9bp10SkzMfkiPdwIog==",
        "shasum": "d75f9738bdc609cdc9655316d9a14d424c36f326",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.0.0-alpha.2.tgz",
        "fileCount": 5,
        "unpackedSize": 42788,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDQLN44AcxGj4RAigCLZo9YaVgZgtsdZMETBAWpGCWMpAIgNXtovHkGcZFjb+waHs6wRy2KzitAjymcXgh5uc98NNo="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJirsrJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo/ZA/9ER0p5A7DjAfHBAUWrQVdR3/sZog2+jfnAabNuCEvmk0TByA6\r\nEttHlbr2CEsZ5KWpWjaDvsAew3Eg8fJ+dQP6/0gGLaAfF8ol1D3fBT9wLonW\r\nBHCV1j0iJyzBj/0iwY7M1d6b6o8cdLNNdBVje6fku+rtQw8Ebt4PXSLrMzA+\r\nDLZ3+dcMrrqgytlQ/TZNJzOdBw+u/rR9KJulN75T1TRoZVbo1LAS2dz37PO6\r\ndLnH3vPUciq3M+M4lMuzFgIOMQ1npKvL51psUKw9KMJ+wWGkM3KHoA1fXgLA\r\nTMguFECSpOJ6ShtvW5nrE856b57rkUdNZ3Nm4t87um5Ju+dWgv2fIF6SztkG\r\n7smIagEQdA1ekbkOmz5N7FFRLQ/dj9pY2mRA8jroGSN3FcSxVxw30rQ1HNBc\r\nCdvIZZUbf+6FVDZZxl0lcYgT1+jimkvJ4y6N2VBDcRCM0r5ejTRCfkJwY5ET\r\n/YN7IH9l7Ira+jh32DJoUO/OCra4Iq4JjJa9/YsvKb1e1JgiW5OG+tlWSfBN\r\nZB5gRMKMbvC/7vZaphXeNRaJJWc4Z+tlB0qNWzfKOpZyLI2dXPvsCSdj0/J0\r\nCcKilwdjn1eGkGp6b1ydRuA0JhmHiOhOI9yicI4KdKvI+p2vY1VF45jzPEIz\r\naZ+Ff+ZpqVwvZo5eJE9LYPjFKMogrtJxhzA=\r\n=uIKu\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.0.0-alpha.2_1655622345295_0.1822299895842685"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-beta.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.0.0-beta.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "esno ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": ">=14.18.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.18.5",
        "core-js": "^3.23.1",
        "magic-string": "^0.26.2",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0-alpha"
      },
      "devDependencies": {
        "@babel/core": "^7.18.5",
        "vite": "workspace:*"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without native ESM support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11']\n    })\n  ]\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** `'defaults'`\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). The default value, `'defaults'`, is what is recommended by Browserslist. See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `ignoreBrowserslistConfig`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  `@babel/preset-env` automatically detects [`browserslist` config sources](https://github.com/browserslist/browserslist#browserslist-):\n\n  - `browserslist` field in `package.json`\n  - `.browserslistrc` file in cwd.\n\n  Set to `false` to ignore these sources.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting browsers with [native ESM support](https://caniuse.com/es6-module)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false\n      })\n    ]\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n## Dynamic Import\n\nThe legacy plugin offers a way to use native `import()` in the modern build while falling back to the legacy build in browsers with native ESM but without dynamic import support (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without dynamic import\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally']\n    })\n  ]\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-BoFUHKsYhJ9tbsHugtNQCmnkBbZ11pcW6kZguu+T+EU=`\n- `sha256-A18HC3jLpyEc9B8oyxq/NBFCyFBJFSsRLt0gmT9kft8=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nconst { cspHashes } = require('@vitejs/plugin-legacy')\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "gitHead": "83821c36b697c70b94af9f50449ec98877f4f396",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@2.0.0-beta.0",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-6wxg8rReG4/0l1RPanBAUQP+iun7SCbx/nXLHCO4vnQrHnQDBYmTb/hh0znYUhq5IpMz+bWH3rdDnOtisUJDpQ==",
        "shasum": "9deadcb196a374999ce42be8df4c05a0d8470875",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.0.0-beta.0.tgz",
        "fileCount": 5,
        "unpackedSize": 44108,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDapEnuXVH8+btqjn1rTDZubcyyTCGfQXcbWAYJ4uD4SQIhANUr9tpuWQk/K70cy9aSxFi8qXBaTMoQpjdhUUlB2vkV"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJisc22ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrBkQ//aRT/dRVy38IWVMbPZrQh2e6T+XgEMgPXPgsKl+OqL6/nk0Fh\r\nOqwadzWyvLxtNnujQDrQ4fKqh3HCAjq6D+qntQdfJhEcI/0I8raKRpm4scBh\r\n9RnKMUPMa7wW0L/5+cPbHboURKF87Hb9yGyEYYfTuXF96ShOyXhLDswEp5Zv\r\nM7JpGEBtKaOHLmbz2Pt2b5G4U7TVpahxTwzOpSSl+QS0/astbtmTDBx/wBKm\r\nX0tNp0gG9d0FUTcHaOoALf/8xbsg2JDmCm3gDItn5iNuuIGZVJpRE4NebPzJ\r\nVlYTGxCFTrDhSO3QkkcniqOYaIllG0X5BgAV4ixEOU8U2F+9B34MscwhZXrx\r\ne/SAExs8Hn+fHOkPDbv2VeBXwC9HURmRvCydhrhTUJDhRQMAcb1gh1RUK3KW\r\nhQh8V7EkZrwHgk+LzcKTWhEBrqJYDXOM2yfxmtO8QKpZAUiOHIMQFhz6ecxS\r\nlpX98AMD9hi8yBIcTLu970mt+mCd9ufJA9OQolkusxS+pSCQrdm55I8DRw09\r\nepKNFf4Zj59bT7ZL6OYxk5yUNxutEjBQ92wWELPcv562eBaHDloKwYXNmChH\r\ngQ7lWe+d3SYyHhilhwuF80BtlXYOxcDwZTR9NbKgAZOtaOGWHJFmsR9WjZeO\r\npW9Ut95oa+200pDvCb/xPX6HWwncV+Hkjec=\r\n=bOVO\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.0.0-beta.0_1655819702190_0.8273658974200517"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0-beta.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.0.0-beta.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": ">=14.18.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.18.7",
        "core-js": "^3.23.1",
        "magic-string": "^0.26.2",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0-alpha"
      },
      "devDependencies": {
        "@babel/core": "^7.18.6",
        "vite": "workspace:*"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without native ESM support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11']\n    })\n  ]\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** `'defaults'`\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). The default value, `'defaults'`, is what is recommended by Browserslist. See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `ignoreBrowserslistConfig`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  `@babel/preset-env` automatically detects [`browserslist` config sources](https://github.com/browserslist/browserslist#browserslist-):\n\n  - `browserslist` field in `package.json`\n  - `.browserslistrc` file in cwd.\n\n  Set to `false` to ignore these sources.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting browsers with [native ESM support](https://caniuse.com/es6-module)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false\n      })\n    ]\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n## Dynamic Import\n\nThe legacy plugin offers a way to use native `import()` in the modern build while falling back to the legacy build in browsers with native ESM but without dynamic import support (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without dynamic import\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally']\n    })\n  ]\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-BoFUHKsYhJ9tbsHugtNQCmnkBbZ11pcW6kZguu+T+EU=`\n- `sha256-A18HC3jLpyEc9B8oyxq/NBFCyFBJFSsRLt0gmT9kft8=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nconst { cspHashes } = require('@vitejs/plugin-legacy')\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "gitHead": "7ea4d95221df8a9ebe75f5b7e54697c3147fd764",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@2.0.0-beta.1",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-yoOncBMmSb+01y0hU5qTgRFGtOdjUCmMRJ2VnrAUIJNYmaJ51NaM9xJX2xQlT6k9Hdksk1yXtaAwYTv4nD+MCg==",
        "shasum": "a0716428eda142953d65ee08d6a722e74b12d933",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.0.0-beta.1.tgz",
        "fileCount": 5,
        "unpackedSize": 45683,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAt9gqT9URODq2wzf5+SvK9ANVzPN9/vMdH0gWyWq5gcAiEA77d8MVoIzh2O4iglZHVGsFGXo1fciTOTUWpC9/LQdNo="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJixT6nACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoNTg//ey0hpvqSPW6Df3GjImsuyB/iC0tanTEuQnmz9h+gVDvpiXmd\r\npdeFj3lyeJ8qxZAzvRVnH4v6YJQE+k8QbfNhOhcslb10q7heB07cAYkROXVt\r\nZ2gFguc/rIVAF32YhXOwY7wORhmVRg6KMe4uhfMNzVIgFB3/XSHxZCyrc9x6\r\nF/qLh1eMnBt4viu3J0o9VrNte7Ic49WeqvTJQzgn3WuxxSUeKpvudZwW+VVV\r\n7dU88C9bN/AosU6mf4gNpvQMHxd/JNg2HNOE8KpTXONf+RvpyXRzLDYRbn+U\r\nqJi+yIJlzs3/yEHpTbaJNm1WVvcTHwJJkvYCcW9RLColkqKAWiZaq7lY+FSO\r\nSjXQ1H74J+inO68sFlrxmm4xJbUmVtde9J4ncXQEM0qkI2nbJZ+RnuVlhs9F\r\n7Zh7UJNICSvuGs96WaItb2meO0ru0shH5y/sEay3IyHklwlkk3xrKtJlwClP\r\n1Am4J2STfWbwm2x1qzg+PR+h5XSejvF+1CHc+CBBGJXlA6omdh+9mpT6uRNT\r\nv8Qs4QExpMWl/pvjG86lphf7e9v7Wh/3TKYstZJEiTipRUO+FNVS4NBPzPt/\r\ncBvNIf2628dVa2rJ32++4XrVYw/dBUx3Bck6u+F+2yMnx3FVqoX8W+D2c837\r\n4YW3nZ895JVgsXPHdoft8C8yLwU4QddvCsk=\r\n=j138\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.0.0-beta.1_1657093799397_0.7653555472117297"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.0.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": ">=14.18.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.18.8",
        "core-js": "^3.23.4",
        "magic-string": "^0.26.2",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.18.6",
        "vite": "workspace:*"
      },
      "gitHead": "592d8795e344f60eca171592bd085f0c46ea58e1",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@2.0.0",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-cuc45C4BQo2VlOsHZML4fc3MPfSjOEFeezHxr+WWlOOmi+muy1rz2snnFiePtyjVc1CYGTsnxk13cXpzQvMZaw==",
        "shasum": "63e9a919c5b3bd8e43e18cbf497f4c270efdf1b9",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.0.0.tgz",
        "fileCount": 5,
        "unpackedSize": 45665,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCFfT4CJ8JMiQGWp0lXW5gsakGhbNIv/jTHD98oSNL8UAIhAKNAwrR+O+sfb7J9fM/57TJj7TWwpHV9FROUmT/iciXu"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJizrvKACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmonMw//RKQw9miUA155rBbI9q6PQ7mPZSr/QsqsRDUYRP4pV8f2DCRu\r\nV4TeXrWGPodt33wg39NpBN83J8Afh7oSM2UNNFwGIQk97GVX8zVkGVVPAVhC\r\nfvIJVx6L/1VgvAZkxTzdyLldB/6014Pym/R9VpAWJPdsZ5mySOCqPzP/MuiF\r\ntXv4/YMoCm0JHxIiH5MOh41k8R29SfZY9/n+2Yp0/kcVKG66dPfTGWzaqy9H\r\nm/z1a7+u8FUxVI6qEW4qJvdlUA/MjUxybng7SgAgkNmmj8OX99SsoJONO3vj\r\n0PdZbWdDyIOuN4S77Cu8Bcr+6PEEip+ZmWf6XaQSdRtunH5q41A0aGZe7+ey\r\nkyRI2oPJ+pvapsuFv9pKXL4gdu06l1sB03HVet18pedOItGFZW0qzMJVg3UX\r\nsB0MOzn1TRxDNvVwG3ophE11qeY3NN9VeCMlQbCDzo/vBeL9Ua9/TdnZBw38\r\nSvXOq9G4uRfv/MamBch2Odrrd5iav5/zbrMSvx/MS1NjiS29wZqyfHQwJn9j\r\nRlhRBm/b/CEAj10Ghpr21TEEo0DDIq7edj9sX7yQ4J1LBvsRJSYSxPZh9w03\r\n5wnd0Z6RWFeJTkvwQnh6YLuf4v2mUmdOnaZt+FJ4eexa1CgxOzDavQD4X/iK\r\ngiZV0+uqLnenDPulbHSsZdcK74BXsbAB9ik=\r\n=sNTb\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "haoqunjiang+npm@gmail.com"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.0.0_1657715657775_0.7090416530055081"
      },
      "_hasShrinkwrap": false
    },
    "2.0.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.0.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.18.12",
        "core-js": "^3.24.1",
        "magic-string": "^0.26.2",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.1"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.18.10",
        "vite": "workspace:*"
      },
      "gitHead": "848bb218c5d5e1a79307d146659095fe361810a2",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@2.0.1",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-kKC56rfsXwebApzyuZqdQlGmqTyH1ugy0l0rY58gx5OXzq4/t5/DCqGUoz53Db51OqfjRqsHfqmvq9or6w9k/Q==",
        "shasum": "2f0f2821e65bea4a21045ec083b65b2b26928db7",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.0.1.tgz",
        "fileCount": 6,
        "unpackedSize": 48583,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICeM5r5F595lMY8CQZmUVsr/IrQ2Y3TDC8NO0iTanQHbAiAS2wCt0eJVwia1hTeaeHVzXc5O1xDfH6g2hc9eZGapIw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi9WRdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpWwQ//Zqv8J5Xh5jJ3LhpAr+maueL3zo+QA5yxEm6ny/d/vccegq4f\r\ntA4p8PAyJNsEcCq2AR+RPNyrfTMIw902cJgFKvQ7IWMeBRn1RlWTkEoiZy9T\r\ncRC0KBV4omfzOQFg9HDy0vGRpmiO95Y+MP9AnJz+2Y5CGWbNozfVJsnhOiQB\r\nuQJqMv1kvY7o1fkLWrH97ISskqwIKlsEQ8LRAtscfb2kJEGqFfDd1IZfIJ5/\r\n4/59xlz/QWASfMQPY5LI50/Cpr1H+qrqBUX+PTMP/fTfunJzqKUAXbzuWexX\r\nmt0eTBSJhMfBkx3z+lGUiAPK7EO25cin+wI/2gFGZQzQCeIs87dZwRQvcrN0\r\ng9KfA42vXCs6kDrE9hqeIVEaDdQKwUOK9eBAAtMfq1H9FsC8M0pdsp9Rsdej\r\nvJJIKi7Q/bqfewVhnpv/1fW6AFd0V7oxqMV6aPi290fiko7Gjs7JysqOqxhA\r\n1IaKmlCwExx/WmqGmiDMhjjyYPh8kAaDNS1+buP6yKeqe/ExDzSQJ4XhErCD\r\nUboe+pIBNQYXH42EkO5xrUGRhDqpxBZGHHogI7wUOFdrTubAx2L35wJ28GkZ\r\nw9/gLfnpeFQvFbp/ZLWfKBRtOh7q3efh7EVt4tnhSC667nSURGX1QUpUHiot\r\nBAlZhx2nYE2vKn5aVd3grgaYDX+swThhaZI=\r\n=HwmM\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "haoqunjiang+npm@gmail.com"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.0.1_1660249181317_0.6241501754206784"
      },
      "_hasShrinkwrap": false
    },
    "2.1.0-beta.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.1.0-beta.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.18.13",
        "core-js": "^3.25.0",
        "magic-string": "^0.26.2",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.4"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.18.13",
        "vite": "workspace:*"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without native ESM support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11']\n    })\n  ]\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** `'defaults'`\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). The default value, `'defaults'`, is what is recommended by Browserslist. See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `ignoreBrowserslistConfig`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  `@babel/preset-env` automatically detects [`browserslist` config sources](https://github.com/browserslist/browserslist#browserslist-):\n\n  - `browserslist` field in `package.json`\n  - `.browserslistrc` file in cwd.\n\n  Set to `false` to ignore these sources.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting browsers with [native ESM support](https://caniuse.com/es6-module)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false\n      })\n    ]\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n## Dynamic Import\n\nThe legacy plugin offers a way to use native `import()` in the modern build while falling back to the legacy build in browsers with native ESM but without dynamic import support (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without dynamic import\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally']\n    })\n  ]\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-BoFUHKsYhJ9tbsHugtNQCmnkBbZ11pcW6kZguu+T+EU=`\n- `sha256-A18HC3jLpyEc9B8oyxq/NBFCyFBJFSsRLt0gmT9kft8=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nimport { cspHashes } from '@vitejs/plugin-legacy'\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "gitHead": "c4714c8ea5fb263bc9bdd23bf8c4fafea576e427",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@2.1.0-beta.0",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-KICgwhMolKiacjb4qycAyc1MVol9HXRvvJ/7ME3LUBfx7VlCbaXorxOOTN7fxSTrCQbKL+11jlN7AiZXJYR8Pw==",
        "shasum": "2e95dbdd058b4d9e79f3c2f40559450e22232804",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.1.0-beta.0.tgz",
        "fileCount": 6,
        "unpackedSize": 47514,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICQ35da0rhVNDujoJLtXxTX2FASOJDDE8/73okYGE2E/AiEA7VUOIBzgtG+6X6JUbMIjkCCFa1A8dJF8vl5ItKBFcz4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjDMkNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpSyxAAizq4ptxdQYY/adixEj2G7aceKtVFMW1D+RnNPQKfhWKxooSk\r\nzOcKwWGDIeW14BH9bL6UBhqVazHarx4KxPslvD+pdFGX4mewnlummmR4/79j\r\nzJDcX+ppTMS8EJNLZyzkgGWgTsw4JgEson64zbJE/1p6xcJICTH0rNRNdp79\r\ns9BzWIjarJuCyprj4l29UkwL9XhnYnljdVEs15KcPHfgGt9rhYnkaMtiERVo\r\nAZiRwpn5BADQTlCLCANmHTsJRpcG1ZORfSxJ37iz9neUiqVxUpgdLRxkRkNY\r\nIqoSSJ140/u+73iMOhzrEzfd+K/5wUwox2KICAoziLdIRuelenxUMPJc76cd\r\nsnN3G4h1N2DU8fQ0/TH4aZ/ozoJh7XoSQuACn6bAe4TQMlj6j1CGCvhvjnMi\r\nU7IINhJ9htNBC9we5B2KJTHMrpyQgn5fPIKiLMzBuQFu2EUicKsZPS4t8lxO\r\nJQ0Z8HhRW8LgqR4fgJQ2Vk5iL7BDIwLMjZ9gbev7SCoijHGIpWXX0ieNS4/6\r\nhf9+AZr5Z8sgr2tlgGdbSnRwS0PLkkT73dlbVfCgJk0yA722a2MRQxdD5FKb\r\n89EKLYohfpr00fGNbHrAJYeyb6tACKejGl0aL+4TOLI/qJK5rV4djkRmcz7w\r\n2eVvbgu+3s+5gvZ1oqMB+Lkm0Fv8pUj6RZA=\r\n=87G0\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "haoqunjiang+npm@gmail.com"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.1.0-beta.0_1661782285301_0.5213689793473346"
      },
      "_hasShrinkwrap": false
    },
    "2.1.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.1.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.18.13",
        "core-js": "^3.25.0",
        "magic-string": "^0.26.2",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.4"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.18.13",
        "vite": "workspace:*"
      },
      "gitHead": "4c88989a10b293a1faac9995019450b6c647ef4b",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module). This plugin provides support for legacy browsers that do not support native ESM when building for production.",
      "_id": "@vitejs/plugin-legacy@2.1.0",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.15.0",
      "dist": {
        "integrity": "sha512-en3h0L7okBonSYKJx81bU8AVFPjSCiUSz8xUDAW8J0CxskfxSt/VJKbZO6G9yCVgZLywGoO8PNAfOQWVLUWZ2A==",
        "shasum": "0170c582f4cccc1a6b0391c258e6cee209542fd9",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.1.0.tgz",
        "fileCount": 6,
        "unpackedSize": 47507,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICMwaOUckxeWR/c4MvUhlOUzcz6ywMQYg0h46c5VhxvPAiEAqCweav690juy5n0bC4qO94sbDdj9gL4bq08GEqRoE/M="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjFceUACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoN9Q//X4x+cRFSj8hr3iYZoPNVhOsm6eRl2qj92FWUZCqck7CO3Gla\r\ns/FZTxi1GAWKUSJglmOZdjcOLKab1dtR7l5g6nPiH5K/D4SGLVujELSgBzgU\r\nsVzzPM5nOp8Uz8kWojrfuy7xXKIbV98kNZdnpewj9utojsSLGS2QBtv9HAYR\r\neBJOhYrPZMqxeTJRaUClP2o/UVj6/BeiiidDrafRThFI+ZnfQvpUwWgrDd/b\r\nFmBS0R9HdUSGKy4B89C5X2TE5EJSbn/csp5E1TxoPB8Ms7kMC9YhtaYaMKum\r\nZTGNQShq9HBKQVYpAN7wtKX3Lr9YvdEycZptd14TSKArqeuPCM5FkkWuEs9t\r\nN+khH1l7dofsCC5r3oT07nUnEuHoY1poTPx1mPihmG5p5knnQwq52GufMci5\r\nDJS6MfQCdOnb+eDOBSUXTo77H6LjSy3PGnvCeErd6Zj17S+mZYmUM2lMksyQ\r\nT+41uwYJUSLlzEMXgd/jHfqyvb5V4g5v6eCfVK5kiqmVE2GXgTzjlC8p2rfj\r\n8HG/72mDhBTwZLSO3jbWHpS3xQGmnb7feCy0qCQEIIkQeQgbo8+mUUmCEUiv\r\nyVrfxHWPAokzbgo7d927+FvFD0BmrC/oW/H/Hp6CzqYk8JqKrnxMpkd1OHyX\r\nriZh1fNFTmfN/n5y25D5raVCnJQHWRdENTc=\r\n=zaY4\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "haoqunjiang+npm@gmail.com"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.1.0_1662371732044_0.8967558945166305"
      },
      "_hasShrinkwrap": false
    },
    "2.2.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.2.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.19.0",
        "core-js": "^3.25.1",
        "magic-string": "^0.26.3",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.12.6"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.19.0",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "4c8aa80f325700866765cf3ced8445d08d6f58ca",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@2.2.0",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.15.0",
      "dist": {
        "integrity": "sha512-xkSXZl2LNk0KKyo5CJknNW84mSlmHIClFzsBuFXkX3yBt+Lr8UO/n4QOg2X7+jvurgBRies9FRn3ZvMem+TmIg==",
        "shasum": "eb76f43f51c1894cd7ae55ee2cc014b8acc00db0",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.2.0.tgz",
        "fileCount": 6,
        "unpackedSize": 54296,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDCD7YkkIUS20sBDn8gVzXls2PwnJZNmFbxTiWv1LmJQAiEAycLFEQvXgjy2+oQz23Nm9gZuYnTcZQLtB4iiS/g1y4o="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKCYhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqtQw//TTzU+ar9W2N/O/SxMidUNiJqeWSIAeifcP4X8uPIhCcSQLCY\r\niNpUbbk/fXwI4N25ij+6EYrv75/i86w7MLHLEDitV0GxOyW44Vv4RV3jz1Th\r\nvrMSsuL+8Eg0146mvQXh0qZpaIBmrgPwBFyLlJVv/NetsRywQCGUgAL2AWLH\r\nLKADiPWsi3jc8Dwn2jZxv31ecbViF7m7RgkiyqNftE9ej698Qr7+ZQwVOPW8\r\ny/3RHkb8BHzwNTtrlX4r1NeLHFB1mwC4Ty6SXbr6LmbvGnQbG6t0ZBFsBi5W\r\noP5T54qZ8Dzm5NOLWOrILqwopg81Ekb/nbp3A0fAJMMiYb1MiDl7WZkVdgKH\r\n9SAJgDxn8Cx+dqAscvjXci2odFla/9XO42LktmKNPhAzZSillkU2J1ORnIfm\r\n5MuTtp/DhS3EJcIo8v9tj0g5td+Wp1FYXGGfYQeHRt+rFmyDAM8aH3IPZsMC\r\nwWmjjej38cGEMNJKFUYP/sIgu3sRTlU9FjXYgCbI9imNm9sEc84Vtl0MiI6m\r\na0wT6XftsONAjwcPMeoWiecGhYd6okrAOBb+eQwxTvqK2iIKUxzFMwrd3yez\r\n14JEbIQ4dmuJHCDnNna1AwkxVsbJ7gzaj2KtC4M1M+ohwPUGGwN87tYSFV21\r\nEOGg8WTxxNL+kK2mSSHoXLuDVWMtmOz5u54=\r\n=8IgY\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "haoqunjiang+npm@gmail.com"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.2.0_1663575584714_0.6182311887934231"
      },
      "_hasShrinkwrap": false
    },
    "2.3.0-beta.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.3.0-beta.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.19.3",
        "core-js": "^3.25.4",
        "magic-string": "^0.26.5",
        "regenerator-runtime": "^0.13.9",
        "systemjs": "^6.13.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.19.3",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin provides support for legacy browsers that do not support those features when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without native ESM support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11']\n    })\n  ]\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** `'defaults'`\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). The default value, `'defaults'`, is what is recommended by Browserslist. See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `ignoreBrowserslistConfig`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  `@babel/preset-env` automatically detects [`browserslist` config sources](https://github.com/browserslist/browserslist#browserslist-):\n\n  - `browserslist` field in `package.json`\n  - `.browserslistrc` file in cwd.\n\n  Set to `false` to ignore these sources.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting browsers with [native ESM support](https://caniuse.com/es6-module)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false\n      })\n    ]\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n## Dynamic Import\n\nThe legacy plugin offers a way to use native `import()` in the modern build while falling back to the legacy build in browsers with native ESM but without dynamic import support (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without dynamic import\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally']\n    })\n  ]\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-BoFUHKsYhJ9tbsHugtNQCmnkBbZ11pcW6kZguu+T+EU=`\n- `sha256-A18HC3jLpyEc9B8oyxq/NBFCyFBJFSsRLt0gmT9kft8=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nimport { cspHashes } from '@vitejs/plugin-legacy'\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "gitHead": "14b7af616800b7aa3bb606ecdb3a4a557eac4205",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@2.3.0-beta.0",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.15.0",
      "dist": {
        "integrity": "sha512-nJQZMj8wv8qrwmoZ8t0a9svAcFlR0vPvMgoUt/JeFZ5uZYgZii+aoOwrXUaw6Lv6rnWkVUt85mEq5rqsbaTCsg==",
        "shasum": "609b54887a307d93c93be45c149f0eaa775ba6a1",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.3.0-beta.0.tgz",
        "fileCount": 6,
        "unpackedSize": 54405,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEdYFwSavbMVY5tYB1bxNdpFx3PDeBKvPXXkpfdkX1Y4AiB+YMh4NNs/HY+8BX4knpTj81lXCNpj811XioF8XlugLw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPVf4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrEyA//ZepRKexsWdLNKnL60VHoBnw0qPnVSci1kGLn+/BuBV25YiP9\r\nLx1f7jFp6EDdIYvYnZIogpeYXpA1jCSJ2itHbwq1q7Vqo+q8SrxDX6ys59I5\r\nGms70IOhhl10OxYMpBIjWM8OwCNxLEQ4dlX9S6ADMRRK4+FH4LnYZIlyPClZ\r\nSudvnRM6o48BNHAA2Vvn2SQ5vWK6oh3BPEdBKqJuFq3uY+k7UyJmaY5Mi9Sb\r\n0fhiVOY8pprKZWsJplvd007g+jM7yJ2ogx/ekzoPykah4VmNHo1h6uSyXfNk\r\nL7/bhHlxu5ISKsrmh6vO3fZjz6kVRup5MJq0xIidvjhgyPmOTosbvQVwMs3q\r\nqr3mN+yBwKdK/vtG4RDueV9tj/xuzHHrfS69NwCXeAv1K/hyF5RixzPZVK9i\r\nJL0dsCXtXQgBDsPYqMKdZjvlYbLTnQu+IjjHWWRNu1eEEpt/pRvVEa1zfgqv\r\nyoPF3bv4yRRWPveW9BigkZ94a9kfZd6OPCoJY6+7IRu0mYRDcyMLEMzkwYiu\r\n5rwUUZZn4eyPhNhjSXXggcimqZWNaTTLSANFAET3r4hsCT2Ma9pFv6qXaQUx\r\n6CvX3Vm3uismkmRH9FkHEzkO2N0UwEyIVfeAC1TNOvQMnvAhvK8Tw+f3ADsu\r\n2uhK/jY5A2Lw99wa09EOgC9taPoz5qvJPaE=\r\n=8VIt\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "haoqunjiang+npm@gmail.com"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.3.0-beta.0_1664964600378_0.014253316972674623"
      },
      "_hasShrinkwrap": false
    },
    "2.3.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.3.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.19.6",
        "core-js": "^3.26.0",
        "magic-string": "^0.26.7",
        "regenerator-runtime": "^0.13.10",
        "systemjs": "^6.13.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.19.6",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "78d438d681fe73a914e7b5b00690c73f25cf3a34",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@2.3.0",
      "_nodeVersion": "16.17.1",
      "_npmVersion": "8.15.0",
      "dist": {
        "integrity": "sha512-Bh62i0gzQvvT8AeAAb78nOnqSYXypkRmQmOTImdPZ39meHR9e2une3AIFmVo4s1SDmcmJ6qj18Sa/lRc/14KaA==",
        "shasum": "43565bcaf0dba53c70b26a1f67797b7c09f9d04e",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.3.0.tgz",
        "fileCount": 6,
        "unpackedSize": 54002,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDKqAFceDAUH6DeQolyaQgKZ3MA2JVKGi3pVz/YC00ucAIgRzfUILISzDr0HKZouhXcJQELFHKHA9YBF4B+rQWWIDg="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjWTPsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoLPQ//asDKg3znVPN9FKs9eJINJn12gkKLtFwGMae6z0muYj6fxnCq\r\nwyXrvhzWUEfE1a9i57kRe2lnYJt5oGoTgZXX72oVdKvnd4UiqW1FAXE82uBo\r\nZzwAp+RUEoNtYqIdCgOcMJYh7NBJxaYNujIjJuqsLubHPgr8YDU4cb63LMGU\r\nGZbDq7AYRLLPMTM8x0zaGSjKDOSqZugfTv0JreJTJ26mIj8BfL9gmat+ZQMo\r\nZqRr5vFLVPDet9LwyYhAU3hj2V86HlUMCOQKmT/Q+5IWM4dDPhznsYMGn4pM\r\nuvL7DakjUVwD68nk1EuBzLW157x8rJnucpW3lHyyUyGv8Pi0O8HVLXOTKw6D\r\nRfTFEcbF+GdaGJQd61HmPrqhsPgmMZaPhYUsirOgGQ9zxKQT8KwnlqnquylN\r\nLXewChyLg9Htpdnj7qYqOLZRshFBCBowoiRDvffqx8pz6f6g5UaN2uL/OVdI\r\nVw58EY7zeT/NwHykaJOxFIklol7FdYR2nU6lVhOZWN+0O+rQqO9Wfq5Ricwf\r\nQwajJqf+zu8kD9nY2gRi4vdTloTpfwFqvygfNAwvLCEkWrPpX3E2FJAqPNee\r\ne1UrBEE9vJweqF+s7wUlUq5F6dWr07yxh9jj/wrNmKqUQojL8uA9o4OP+/tr\r\nwNnmLl+5kIxpMddnikhLtHJrPHgrfno3cKE=\r\n=/THB\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "haoqunjiang+npm@gmail.com"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.3.0_1666790380277_0.08351567456990261"
      },
      "_hasShrinkwrap": false
    },
    "2.3.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "2.3.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.20.0",
        "core-js": "^3.26.0",
        "magic-string": "^0.26.7",
        "regenerator-runtime": "^0.13.10",
        "systemjs": "^6.13.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.19.6",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "836285e00d8019c7b84c9bfedc1ff93c69b43aca",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@2.3.1",
      "_nodeVersion": "16.18.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-J5KaGBlSt2tEYPVjM/C8dA6DkRzkFkbPe+Xb4IX5G+XOV5OGbVAfkMjKywdrkO3gGynO8S98i71Lmsff4cWkCQ==",
        "shasum": "44d8e608e66ef03ff82ae176588c7a621d56c524",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-2.3.1.tgz",
        "fileCount": 6,
        "unpackedSize": 54002,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDID56bgd4bq9mdyw/32FiWaU6xBNZln6S7uQR0yKmRxQIgYrHdEkURVXSYD9MU83o7Cdc0ESy73t5uRtkbru3nz28="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjaMF7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpXlg//fvKex2UpHlfQgUgGJ/xvv/L+r6A/1hZ8xRkvLhC1kEmAJ/Jf\r\nYVLUlQQHxLHk3kI8r39E89Lgaq6uHSR8VMhDjEeiTo6FZviDrAOq2XqO/mUP\r\n4RaSjTwpkYX70WpMKyQZ6yzuFsg+x/+Bxecdef8axlyQqQmw2uzg/Hw6ZOPZ\r\nk7zJPYvk3UD6SPC/jwS6x/PLL2dWbxs9E48YZYIimyYZJm+QcBhZ3IGzCmTC\r\nqXTq0teKru+78xbjdS42Bwkq4K4nv9lK/QH6JY5ecYl5v4O6byd/KxpL2sdz\r\nfPahJNMofGePR6Dq9KyjxYcRcahhc1STaoXqhCG+JLVUUAhznChjUy3OpP32\r\n7Frp20KNYzquaNLi/NgAJZlJIgsig+XLkBuGHIzJ4x1vCHPOkgeeUFbcI/FG\r\nJUvPuHpku8LxLJ7fRja2MjK49YbcjReAlPfv07ZN0QVTEGuu7P8xXtw1OynW\r\n2Ov1GySaBwzhfMRfKW0gva50XWB85oTLlefSvDY1E49QgtY2fjVszURp5c6X\r\nqWqJeCN9JbDhZ3nzBmY132I/NfUAI7h6DE79cH8RNNcNxUQKGIJqABPWGImG\r\nR0WY44OFIg3/H5d4nFbAgBfWywNJENxsgmqs+w8REWqX5WNY6UeJWxFkNGhY\r\n9Dz+zVNluHja2MslzF/JoMdEnJSg8KDC23o=\r\n=CeCu\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "haoqunjiang+npm@gmail.com"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_2.3.1_1667809659017_0.7378240077704667"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0-alpha.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "3.0.0-alpha.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.20.6",
        "core-js": "^3.26.1",
        "magic-string": "^0.26.7",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.13.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.20.5",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin provides support for legacy browsers that do not support those features when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without native ESM support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11']\n    })\n  ]\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** `'defaults'`\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). The default value, `'defaults'`, is what is recommended by Browserslist. See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `ignoreBrowserslistConfig`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  `@babel/preset-env` automatically detects [`browserslist` config sources](https://github.com/browserslist/browserslist#browserslist-):\n\n  - `browserslist` field in `package.json`\n  - `.browserslistrc` file in cwd.\n\n  Set to `false` to ignore these sources.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting browsers with [native ESM support](https://caniuse.com/es6-module)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false\n      })\n    ]\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n## Dynamic Import\n\nThe legacy plugin offers a way to use native `import()` in the modern build while falling back to the legacy build in browsers with native ESM but without dynamic import support (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without dynamic import\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally']\n    })\n  ]\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-BoFUHKsYhJ9tbsHugtNQCmnkBbZ11pcW6kZguu+T+EU=`\n- `sha256-A18HC3jLpyEc9B8oyxq/NBFCyFBJFSsRLt0gmT9kft8=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nimport { cspHashes } from '@vitejs/plugin-legacy'\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "gitHead": "c26679ab8fc9a22b2c3fdecee0594398d536f941",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@3.0.0-alpha.0",
      "_nodeVersion": "16.18.1",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-/NfqwDOJXFKA6l6UaKARVulzBG9i/8KTSmUttGFHe6LzxVdqkcibt3kyrioj7VA/ilPliMccql+6485grjnlcw==",
        "shasum": "e7da90269260307fd1eedac0a9814344071c968a",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-3.0.0-alpha.0.tgz",
        "fileCount": 6,
        "unpackedSize": 53988,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGyf36luKTu9QzWNqgK7Jtx3Hk9qh4RPPfbcTwbX6q6PAiAGxx3scEvI4JMBwz/7beIrvi9pXFJGNhlmUYs4I7+22Q=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjh4y+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpo9xAAl6xOSkOdTQT0mWcSPhb+Hnzla+1OVoTwwwlB84ySXwlPdfMK\r\nXbgFevGL8bouk8JHmam912ZxhPEbU2KdEkkN5QbAu75vIWNO3ov05rM6seIq\r\nS0E942Ya6j4gfpxLuteCIMKTyOAkz5Jav/e3P8ACWDzaFjBmMfGddqoMPe2o\r\n5o1nWunoLLyPj2D6Jrf7qbXYk20BAPBUHAWXlQAscfk5C2dDGqKGVAHXi2vd\r\n0B2j3E+mLcJhqZkX2iduA1gJkoib59+zakIIlxy2+PHv6/C9NT/WBJUJMJ9u\r\nhKuq7CGie/44A6Kx3DZ3TV3BxS6be432Pg3vWM4V26kYO8EnBe/f96rhm4Zy\r\nHa6ogLo3Yr3VDmfyf0YWhOlW87VFrrGUMn0kEy+EWKM8wURkn+2AOoA3BUBS\r\nnL8bsUmXHrAidFgqYqcg+51heQ2Km+kaOmJQcT31ctMUWPgiYMaJex5mgcpj\r\nzVqqVYivLrxsIc1xtA7085UPkZaggjZTu6sMxqbEC0InkNmRzIkLg+N371KZ\r\npSVv+MNNAZ5hyZMgbyQ5zdUtF0m1hGrltWvqgjSGTpTmEygbcNlgwnxxw4mS\r\nZkZeBtEoms+7T4PrN3bX0zgIhqGpr0HFRb4bSm3RPCzLfsMTQvz+VFnTpvLL\r\n5WcQtzoGej/RfTgTBpG3wTd9MQeZCqJUIJU=\r\n=CYNC\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_3.0.0-alpha.0_1669827774226_0.6744569595403795"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "3.0.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.20.6",
        "core-js": "^3.26.1",
        "magic-string": "^0.27.0",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.13.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^3.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.20.5",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "f114acea76e5ae238a54b2dedb288cb0e819f86e",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@3.0.0",
      "_nodeVersion": "16.18.1",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-2lTDqpoHv6E+nPNopH56Jsna8HkQFNJwAlRSl+kLFl1YVn28rsonsMU020QITdLSWl7DrIXjO4xOezBbwMn1hw==",
        "shasum": "6779531993912a5b178b2685a59cb0e1ba475b28",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-3.0.0.tgz",
        "fileCount": 6,
        "unpackedSize": 54025,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICV0RdOav3iuQ6xN03GLLHE2csq+vDducbrgHLE37AhbAiEAlvVphJLcY8/opOSycUxc/lzPNYej4F/IgTs4IxbLb1I="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkvplACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqwaA//bmzImV4oDbvoutxyARtn3HbLHEnbRnLjQI0xg9iw03l0IAta\r\nDJGr8WEcAo2/HvSs1dr6ryM8lFv16oQdWpEvCDGSXAEOre2j6IPdbIpmMZYn\r\nFq7d06fpeEyyXApdUMLqqKqsESrsQKJFX0YXf8jzjzfhKjy2db0SEh4NilyB\r\nyTUwt/sJr/ox3V52bRhV+X0dp9RzzOdUvloudkI46eD9TMnehpjRy+XEcjOk\r\nD7m++WIM31L0veYxjEAQSD12Ygj7sRrk5nMoSYMI+GcjqXMYhnbpruBu/7Lr\r\nrr/Xd15QA5FZ+zl+PvUcvOvt9I+qJieBs3tET0wg5JnI8p0lkqWq9JgIDbh/\r\nYpiB90XJb9h1n6jk9jcEfnQJH7srvSOMqM2s3xtGriF2MDpCPSVi7F2vhrU3\r\nqASOq+MznVS6ZGKSX9o7c+3NA1cjbuJvro3a4fG12H41Ob47SyABIO2yKJk6\r\nfqVzFfQsdCWgl1ZIIbtKqaZEulmFrk2xDHvn56Yb53d6fvTvosAbTMfvofjN\r\nGLPX+46KozjHakyjxMiZh/XLzbgRwnSVIJFOxoA29TkpoBl1Bhyor9HtYqNA\r\nFh6TI7s4H/0dpHp6mKxng5gPY49KtTE+7S9HHv+q1Eqs6kyeseIZpjURryV7\r\n6/vnauKDNBba1FDLAL2VfH+Cw7Xss/em8yw=\r\n=+i4Z\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_3.0.0_1670576741110_0.2868866837776225"
      },
      "_hasShrinkwrap": false
    },
    "3.0.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "3.0.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.20.6",
        "core-js": "^3.26.1",
        "magic-string": "^0.27.0",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.13.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.20.5",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "6c4175f6c58c4faed3f81ccf337531690745069f",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@3.0.1",
      "_nodeVersion": "16.18.1",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-XCtEjxoR3rmy000ujYRBp5kggWqzHz9+F20/yIMUWOzbvu0+KW1e14Fvb8h7SpNn+bfjGW1RiAs1Vrgb7Js+iQ==",
        "shasum": "bccc0eaf15a64e1854313acebec879854e413deb",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-3.0.1.tgz",
        "fileCount": 6,
        "unpackedSize": 54025,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEccH/zPW08zJ3b6RqAA4VrQuumaiC0KCGAzMjyxoIbhAiAYx97YGMbvJeBHH2pEQWvKb3mZ28dq9sSRUps0cp4iwg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjkzL9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqqKA//ZbGfQAnVoZ1xZbZrWGjzC2NZLIMONzPyx8kA2jhAvIY5JSFf\r\nJzNeHpYSZEi0amueKFoiN0YwV9ura5wd7sbuwtqT0UOmMlN5HgeLAK1/cadW\r\nwu/0ovAqVdouON1XkHKJcLzazNpi4ic7J6vf6o9GHUjXFKqtI8bM0pQVUPnX\r\ntWvErgGa5rMUTm9V3GPAA7Eq0q/isUh3cCps0DCu6HhZgk9JUBqSUIUA3AZB\r\nPssKaZDKIGyuQwAfJA5fC2GcmL0wfHqCkrGR/tSh1RucTjIFZH7a2f3w6/j5\r\n8g1RbrYTgSvO+s28p/6VK+Q+zFUaMNajXh4sDM0yws1pOQpyboHE5PQNQHS0\r\nQsga1lZPv4yAoZZxxx4sfikY8bGiQ/g6T3GVqLpx15cYJ5afuX2J9HU0urT0\r\nrQvjbKjUkgU5I/sFmd3XwGrxLMlSuwCrZHnWoHKo0rzmjHdI2oMLLNN2uqBN\r\nL46jKdycFPWqN2Dv3I+djRDUkUsruopRlPX1n+++vUCaywqVNRjYtyBFvTIa\r\n86wPAJbolgvSYfkYFFwUGhpN5J75rANfg3WG74oeRHOeT2ecIuJiCCmN1Rbt\r\nvVHdSyFVTOlpny7iofRQMI6f1a5iGD3gFNpjP4hieVmLTX9xo/Q6Eg/0gEtw\r\n96q0ZbS7G0XFPjFkJ81Xo69OfltnRGixIuo=\r\n=99Sg\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_3.0.1_1670591229658_0.36322314549045065"
      },
      "_hasShrinkwrap": false
    },
    "3.0.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "3.0.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/standalone": "^7.20.13",
        "core-js": "^3.27.2",
        "magic-string": "^0.27.0",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.13.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.20.12",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "0098220f6c013a84f12ab4c932e952baf7a23841",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@3.0.2",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-9BT2mXunC7kQGKHP70BIbNZ/85P/KUMGKBS9CiV+XKNDZGNBjUnyrh3ofgtqgObmxKaEP2xJsEIRNIFJ+hjI8w==",
        "shasum": "57aa98ec59e7feb7cf7de6379433a67ca0c12c23",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-3.0.2.tgz",
        "fileCount": 6,
        "unpackedSize": 53849,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCz2v+oIYB9oxhRzk0QujHpMnWI7/djB3dLeXMJAacz6wIhAPca5J3e8QKasjGtFZ9KvuxkYB2v6p0MAb60gfHQ9VRE"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0lsRACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoX6g/9EgIRD6L4lsm8EFJkfhkuGl9abF1A4SETkCIy0jOV5Siy1BMu\r\n8jwsyTSJu+5/57XlaSfA+S10urC7KKkxd7pFr9HA4Uk8+GV2/pFLHiOhjlBF\r\nE9BL3yfdfXROhmRvAEqk1keheIJb/Gi3vl17wWhNHxrcoIrMvwlCiDGNI9kg\r\n7UEBkqzvIVO7gYb0UHcVlZSpL5+AwZFrue/ShjqhNlXh2E/7fsYE+EyVp2fA\r\nO/Tb6UYaXiMFqKDt98Osh3BZf548PPkNj4p/Z51vnP3l3aMdjjmyXewvn7TU\r\nW4UndZNwI7V8yNKoKHY/bZBKNNPmFGyXlHE6VAiMxGhARmhCKkooUDt2uvvP\r\nrnZIBs0tnaxxEZMa7ZePC69vqdfKboujClPU7iNXhNGEBdOB8FtCRtNhJTQQ\r\n3IZvyJ8mZYIxQI9HMLqeAKrpjedTuBFXwoiNWvHypyCiNQ6Uheio9dl+1TSn\r\n8yQ4hw5ii7srjBBSfYV/pbza3LJLYFDPkqZqClbqJyh+tNqlV80x7ujnlpHt\r\nopPGwADvOwkSOWy6FSEUfgbGojpKLiM1CQDVdu88CR4RFgG2BGuSUZtzllle\r\nn5Zr/cidn+yopYAVFC7CQtcTub/Mfa2U6bT4+6BQTUawb3HFtxOuak59k61b\r\nXNDRwE8p5dR6D8lS/YXPhvUsKH426DKk+H8=\r\n=FaGR\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_3.0.2_1674730256947_0.9256421687996041"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "4.0.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/core": "^7.20.12",
        "@babel/preset-env": "^7.20.2",
        "browserslist": "^4.21.4",
        "core-js": "^3.27.2",
        "magic-string": "^0.27.0",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.13.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.8.2",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "c5cf865d178b5d4c621294c65e5c1818142d41cf",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@4.0.0",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-m+PPFgHePSK8he2yZFjw6SwyqxNNDCLpXNzsfmMEDF3IK0WkVOW0/+iNBLQnCd+royaujPFYkuOqXpdOkPMTdQ==",
        "shasum": "2c29d2fc311b64bc594ec6b53fc914aaaa757b9b",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-4.0.0.tgz",
        "fileCount": 6,
        "unpackedSize": 56872,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDqwSE7dkZmLQigT+rPPdyfirb/DZnVHECaV6C8jbMHYQIhAKDCXUmrSTPujYJUjDygaJ0tEMJ/S5c+w1h24a9+PuRe"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj25FgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpSDA/+KWSvp3eBRIi0OG9f0pkhBGJxmVEVJcTPOcWR5UHODgr5j9jY\r\nLctliy+XKeQNWjq7I38+6iTqTxTNy5Fo+NSVYG8Sjf0edG6sijCrDRwwalrT\r\nTj+HZfBZYjTBe+RfJSFEMpJ/hyZ5UzHB0+dIVaywvNbkTlM7OJfRLnJeqrXe\r\n3YShI4TwR18YGoaY5tCaTmsI1I6sPKqW9A0w8u+Ga4RkVmNtWMnkPMYTn4Cw\r\nUCUkCBxlCMEm0lLX/PjliwsY49nI+MhYaTixDuJ0BJaXHUPhOUhU+vBABSYB\r\nkXIcJGtN39P+PsuISUt8mOOVedRpPCaOuARbi76RvnV3jRWI/E4RamJTtlOY\r\n6VeZSfgw/o3pKC79uBvNqHTyt0O3OqJz5XxqTiUDIKwuyp51Z7aKhO46ttrc\r\nCpUdgiX3aYtwtl0ckaH6MfJxFKd9wrufo5twEe8314RYOkSQjLTectJe1FzW\r\nCfeSm6X8g3UpoM+QasOuS6/rXSIHHaw+VRoLA6BZtsARnRpGaE2d3inK/NiP\r\nf7WGGnJxHvBaxtIfJ/lgcBrIMzi9YtUU1MaOSiVKwuStJndU3JcnwtU3yrHZ\r\nZMMvc+XUgvyrkdK7x15aNnJFXZOWhYESeR9tnTTCCv8KvgBGpGHemTAQ28bT\r\nPQp9AHjI6417PVrSpHSepoGD09TatTpSJr0=\r\n=aulr\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_4.0.0_1675333984634_0.5980994416536016"
      },
      "_hasShrinkwrap": false
    },
    "4.0.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "4.0.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/core": "^7.20.12",
        "@babel/preset-env": "^7.20.2",
        "browserslist": "^4.21.4",
        "core-js": "^3.27.2",
        "magic-string": "^0.27.0",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.13.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.8.2",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "1df2cfcbebd95a139da7dc30aad487c81b153b45",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@4.0.1",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-/ZV63NagI1c9TB5E4ijGmycY//fNm/2L02nsnXXxACwYaF9W+/OyVlgIW24jYUIS+g0yQRtn+N5hzBc8RLNhGA==",
        "shasum": "122e334ac0b8dba2cbd44cc15209e67c9a014463",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-4.0.1.tgz",
        "fileCount": 6,
        "unpackedSize": 57003,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDQHm2lediBXg1VYU/+CR5GSvEzQOFl2AJWIMqQeVe72wIhANi1eCnAmLzq8h5NM62z4BLd6fZqnWleSkhUn6W54K6f"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj27aGACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqx1w//Q9kZBnJyrREs8lAg8FcduoyVTUlQv76f4GGgY2x+JfPpUoe+\r\nNaLyP7L41w2MQB9swzMbT/1jhXO+DBf4rOFFc+jI36iXJNRPMx/+/Y/3eIOu\r\n+A4/dRVr8sUlzYvmYFd1Tkebwe8XqutbS6B5HUAroemWG/5vRVwlNvF8Z/2j\r\neObGrErS0nHItImXkro3gjo5PWR/DGW+5Rmo+hOWGhEuo+lCXKj3/DFXO7IY\r\nr5M/aSmULJFa4/pLJiSZVoFrzSy7XUPVAfDzFMkvAvKnX3+yEypTKA8x3m5Q\r\nC7hUgbLYnPuxyizzom5e0+NwZ7RPEhC83gSMO3PcuEQlNlVOaLzkyzoj2ibJ\r\nGXbKfxiXNoNBZ7XraslR7C6km0q/DX3GebsETilpCMnjwpc+nxkwleFWHFXG\r\n9fixcdABtwjNFB4AcrQ1kcwHzPYHvbdUbVpsV+BqPSWhPJrfNd18oyVNlszC\r\nTO9xLgJZRR9XNne6bhOf9ozTGPjpZUV/Au9CNf/ft4IDff4feBIaXTHYcx59\r\n9+l867FbFLOvOR/kwoC7NyozvlICGBmfalu5dnkD8PE54D58NP3mNLcf1Ahf\r\nu06GtuzoZjIm+dWdJNU2uQ3OvFXb9ZU7Vh+xAbEi4qkvpoA3eDM6odHJun6g\r\nUu+wHmadIviwC2K8iZcqLJAWOXzua6hSNK4=\r\n=F0Pp\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_4.0.1_1675343493951_0.031963756615183136"
      },
      "_hasShrinkwrap": false
    },
    "4.0.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "4.0.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/core": "^7.21.0",
        "@babel/preset-env": "^7.20.2",
        "browserslist": "^4.21.5",
        "core-js": "^3.29.0",
        "magic-string": "^0.30.0",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.14.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.8.2",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "e08f5ab7f2e29597a78cd86c45341debff22fff2",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@4.0.2",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-ivnt9sCkgwJTYTWLjuvY6H/HTuiQC1EgzAPkiAvi0yNAssiqOJjyjhG3hAK5LFUUorE0w9kGxn8K0f/74DlbxQ==",
        "shasum": "1f97714c8962d29e57bf9343cb742a0b135ee3eb",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-4.0.2.tgz",
        "fileCount": 6,
        "unpackedSize": 57036,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFTCGE2/75LYK684kXB5c3nH0ecXPsBT45Qly3GaS+2IAiEA8A6FpnehyJN722mKPrJjmO9eDzH8Ayci2YgoW3wIqLw="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkEtFNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqkeBAAoZuIsYJ2uYRcQA8dY6m3P5Xvdd3+EWSi0muH2cCsJuDnLITl\r\nzGj3TdGC11WGKWJJyO5Cv9DSmtJZXcpRP6TzEBH6lHLE704t/7g2akkorqQn\r\n/VPUFbvC97WmaTry0VUHPJkiYf1s9Eic2tZ3ZZsjWwPQh1wgaA81J7maXMMu\r\ns7anj43n1/piAw97gNkcN6P6giAKEtBfDB/yPb19rnRp8BkB4jHKKwWEukq2\r\nN764v8w26Sw7Wfaj6KeCPhpjX5a69MrHUesYvU4RqAF/m7k5xTzDz+1UTqOi\r\nC3oFfAOOGnRXNEnVL6Y6AwR7P+LBpcv8V7+uj43H3SVqLj80BJfbin28ibB2\r\nPJLPZ2e8ikSnuhw6MVhg0dqhWjFEtHBR/ZVupt469Pp4zvssnO1GbQ132uyl\r\nnp3dnbfUKgYW7eoQpiaNDyoApW5SBtzJNYQM8fMXHtUXqQeuz3IoNfhwroqB\r\ndqgs1G5cQCuSSXolazmFxypLw8GL7G+VwX4cz2NAn17aFDN3OmEXzEOzgp9G\r\nV89VgS5ddTbdDM+UdYo1x4oZCCr65tLF8CeONg3czTaQNo1aoLezZ8p++Maz\r\nq6+Sfv3ibAuNxoxQ8LL48TsXnLaQx+kJjFooNN+/4Z/1LHaPHe/08Reey36l\r\nNOsWelB1E/HypYWkAgzXpphaQ6rUg1dtlTs=\r\n=b2lg\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_4.0.2_1678954829643_0.9099636936439857"
      },
      "_hasShrinkwrap": false
    },
    "4.0.3": {
      "name": "@vitejs/plugin-legacy",
      "version": "4.0.3",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/core": "^7.21.3",
        "@babel/preset-env": "^7.20.2",
        "browserslist": "^4.21.5",
        "core-js": "^3.29.1",
        "magic-string": "^0.30.0",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.14.0"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.8.2",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "0a5c90ca89c086639257953963f21f26cfa90cc5",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@4.0.3",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-RqDQOSEmFSNL42vITkNp8HE8Ak1yjGgaav4B6BGcZ8/URK0wikzwSyhNRirHDkp+snflEEk7iPZXTXUYA9exbg==",
        "shasum": "dbcd356cf4d7e36530cc4090b29872e622e89c96",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-4.0.3.tgz",
        "fileCount": 6,
        "unpackedSize": 57098,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDtu0IG4F2A6C9O333K5wUDJxkz7xWRQ7p015jr/TOUZAiAXjBO71wf1pMi9WifEKCBy7vixiSZla5gPlpNFiqbfxg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkR9koACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoi3Q/8CwQNo0FpUogPGeVpO8LjP7eQ5V9KGyeZc9LY8pj8QNV7Oqfl\r\nD/RO9sTcAMjFYTfxnSJwe5XoOlElUb8qEP9/HCGGybWG7h/lZP8rV16CCXvZ\r\ng+LhGsbewWS3Vq4fBRwg0F0aBphT2eTVRMKWUAay7+O2ypKb/isQAG7xU/Rk\r\nvUrmWSmnE2I982r2VtjpUsibLLvLMD48tEEVRy2mwOYzWs1FlLO3kASPfLI3\r\nz84Xnxp0mjwFMn4HznLY9dc+LsiIqZuQ98YhrmEoLLxHTbQ2vo2hvtrVOZCK\r\nPDjQWqbGU1AQJFUT/ZMxtHWgVv0OXnXH5Gkxu67jCx4HJ2sBoBv/tHhRNigU\r\ngKsHKRANDtLc8XO2GrRMV7zxzbcomU4q6Xu5cqouSgWz6u0GLTNrFMFKfzww\r\n7Vga5uWgGsuE4qnzNWcuCusprPQ/LkIodB9otwFtm/3iJrff6PCGdbkpo7eS\r\nFTocRKcXaKNIw24x0Sb/dIRAp0nKl95QGdzojLPPRSAx42VPJ/EfjRmHYhoj\r\nNiHWPF7c0hTe0niLrKPfMgivGaoTU3+nuF7N1O+97Op/VAwKWTS0jdS6aOXe\r\nsGk8VkzrlQPHgbqi4uQjHaJv/aCKys6QPp9npsRptGY4MGcAezwTWwF0iFku\r\nTj6weKWhw6Ynfx1JtOW7zg40Tv1Ozq2ZtmM=\r\n=HBGv\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_4.0.3_1682430248075_0.3874521644693598"
      },
      "_hasShrinkwrap": false
    },
    "4.0.4": {
      "name": "@vitejs/plugin-legacy",
      "version": "4.0.4",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "dependencies": {
        "@babel/core": "^7.21.4",
        "@babel/preset-env": "^7.21.4",
        "browserslist": "^4.21.5",
        "core-js": "^3.30.1",
        "magic-string": "^0.30.0",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.14.1"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.8.2",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "8f85262b268dfe706cfd1e7f9db20e50a551a098",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@4.0.4",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-UwVfkMfUEszbQ2vs3RDfiDxxvYnIjmtIrGxTnxRev5Sh8ZoDpieV2dwvTUB7zXKJpfRsOgimM6MxQ65VDHJeQw==",
        "shasum": "3b661ead636f55715c19dff833b71050f9d12974",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-4.0.4.tgz",
        "fileCount": 6,
        "unpackedSize": 57956,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@vitejs%2fplugin-legacy@4.0.4",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v0.2"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDDABV5OhTZ3wJhyXjWDWIR90dPSmeXrrDdsXXmCd94ZAIhAOpNoSrSnFrduartBPFTddaly8GeWLlX7KmTEkxp4aG8"
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_4.0.4_1684943088057_0.8725386656277243"
      },
      "_hasShrinkwrap": false
    },
    "4.0.5": {
      "name": "@vitejs/plugin-legacy",
      "version": "4.0.5",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.22.5",
        "@babel/preset-env": "^7.22.5",
        "browserslist": "^4.21.9",
        "core-js": "^3.31.0",
        "magic-string": "^0.30.0",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.14.1"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.9.0",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "937b2c13c316f36df9cd08337f6d8fc5fb960cbb",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@4.0.5",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-0N1CSAHjFTaxcKC9IcKDWMapmAfGn2mNdbROMf6UW0kypYLzDK8vAAbJIFW0jWvkv2aZfTgNs4KmQxoQDupUuQ==",
        "shasum": "3937d8141c09dafc6fb0bb14e4b96ac4d493cff9",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-4.0.5.tgz",
        "fileCount": 6,
        "unpackedSize": 58013,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDPfDP3LxhBvqsGC6OfOOSRgcFcZg4hM5hZdcSGsev4xwIgL6/1qODJy8dlWTREzErkPRBv3L/Jkwk3yQZeFrvGgYY="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_4.0.5_1687353129721_0.0965977683973438"
      },
      "_hasShrinkwrap": false
    },
    "4.1.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "4.1.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.22.6",
        "@babel/preset-env": "^7.22.6",
        "browserslist": "^4.21.9",
        "core-js": "^3.31.0",
        "magic-string": "^0.30.1",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.14.1"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.9.0",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "6d5be5c6c9547745d3cedef1ff1295be78c09193",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@4.1.0",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-bLPHaKAKtPq40Cx2Hauz/VE39kStx7gUC21RM+0/OvBgiOlqrK3b1mIMUc4Cak1xLOrK99j174/7xczfu4OLHA==",
        "shasum": "1235528aec88d89d64063a812e283a95b7b6d792",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-4.1.0.tgz",
        "fileCount": 6,
        "unpackedSize": 59459,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC0Htpv88MkO+VMN86KsbJ+ZQWWLPEKEINIK18sNg6UAgIhAOOsop9o3e5J3NRQvtK5+KunhZRr6nybsdbnMW5Zhsi3"
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_4.1.0_1688631200578_0.8851018503403671"
      },
      "_hasShrinkwrap": false
    },
    "4.1.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "4.1.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts",
        "prepublishOnly": "npm run build"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.22.9",
        "@babel/preset-env": "^7.22.9",
        "browserslist": "^4.21.9",
        "core-js": "^3.31.1",
        "magic-string": "^0.30.1",
        "regenerator-runtime": "^0.13.11",
        "systemjs": "^6.14.1"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.10.0",
        "picocolors": "^1.0.0",
        "vite": "workspace:*"
      },
      "gitHead": "dd616a1da1ecc0542b209e42fd54836eac661d62",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@4.1.1",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-um3gbVouD2Q/g19C0qpDfHwveXDCAHzs8OC3e9g6aXpKoD1H14himgs7wkMnhAynBJy7QqUoZNAXDuqN8zLR2g==",
        "shasum": "27aad7ab082d2d554cf48a8e4f1c0ae9f3eca522",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-4.1.1.tgz",
        "fileCount": 6,
        "unpackedSize": 59460,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIG54lV7cOdw+17yrTj5l3fUQ1QHCIQNK1gjcLohAOuOYAiBTwT17odWncr5mplL4Vye7l4tAROMpxyxnGxj6/ll93w=="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_4.1.1_1689863438186_0.3049122704703138"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "5.0.0-beta.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "types": "./dist/index.d.ts",
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.22.20",
        "@babel/preset-env": "^7.22.20",
        "browserslist": "^4.21.10",
        "core-js": "^3.32.2",
        "magic-string": "^0.30.3",
        "regenerator-runtime": "^0.14.0",
        "systemjs": "^6.14.2"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.10.0",
        "picocolors": "^1.0.0",
        "vite": "5.0.0-beta.2"
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin provides support for legacy browsers that do not support those features when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without widely-available features support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11'],\n    }),\n  ],\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** [`'last 2 versions and not dead, > 0.3%, Firefox ESR'`](https://browsersl.ist/#q=last+2+versions+and+not+dead%2C+%3E+0.3%25%2C+Firefox+ESR)\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `ignoreBrowserslistConfig`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  `@babel/preset-env` automatically detects [`browserslist` config sources](https://github.com/browserslist/browserslist#browserslist-):\n\n  - `browserslist` field in `package.json`\n  - `.browserslistrc` file in cwd.\n\n  Set to `true` to ignore these sources.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting [browsers that support widely-available features](#browsers-that-supports-esm-but-does-not-support-widely-available-features)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false,\n      }),\n    ],\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n### `renderModernChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to only output the legacy bundles that support all target browsers.\n\n## Browsers that supports ESM but does not support widely-available features\n\nThe legacy plugin offers a way to use widely-available features natively in the modern build, while falling back to the legacy build in browsers with native ESM but without those features supported (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without those features support\n\nThe following syntax are considered as widely-available:\n\n- dynamic import\n- `import.meta`\n- async generator\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally'],\n    }),\n  ],\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-4y/gEB2/KIwZFTfNqwXJq4olzvmQ0S214m9jwKgNXoc=`\n- `sha256-+5XkZFazzJo8n0iOP4ti/cLCMUudTf//Mzkb7xNPXIc=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nimport { cspHashes } from '@vitejs/plugin-legacy'\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@5.0.0-beta.0",
      "_integrity": "sha512-D2dhpqlSpg3ltng5VenkpIuQBPMTbDqs7y9LWzGsphFiv1PiAFVnONco4B6RzXzN3/b7d5q1mD8ElPwG0mAblA==",
      "_resolved": "/tmp/71338a9964492d9cd25b2b26c5ae1e5b/vitejs-plugin-legacy-5.0.0-beta.0.tgz",
      "_from": "file:vitejs-plugin-legacy-5.0.0-beta.0.tgz",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-D2dhpqlSpg3ltng5VenkpIuQBPMTbDqs7y9LWzGsphFiv1PiAFVnONco4B6RzXzN3/b7d5q1mD8ElPwG0mAblA==",
        "shasum": "fe1ebab63f5e1f3624b8cf89257dcf260803053b",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-5.0.0-beta.0.tgz",
        "fileCount": 7,
        "unpackedSize": 83983,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@vitejs%2fplugin-legacy@5.0.0-beta.0",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v0.2"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCNEanlA54Jmsv5y4lfN8hqXf8dbRDVJ5OggbV3RzkoRQIgfcX7ZLJGeSHGHnJ6/qNl6mOdTGB+qFn1vfguiA5Vr5o="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_5.0.0-beta.0_1695110599224_0.11546561425974455"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "5.0.0-beta.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.22.20",
        "@babel/preset-env": "^7.22.20",
        "browserslist": "^4.21.11",
        "core-js": "^3.32.2",
        "magic-string": "^0.30.3",
        "regenerator-runtime": "^0.14.0",
        "systemjs": "^6.14.2"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.10.0",
        "picocolors": "^1.0.0",
        "vite": "5.0.0-beta.3"
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin provides support for legacy browsers that do not support those features when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without widely-available features support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11'],\n    }),\n  ],\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** [`'last 2 versions and not dead, > 0.3%, Firefox ESR'`](https://browsersl.ist/#q=last+2+versions+and+not+dead%2C+%3E+0.3%25%2C+Firefox+ESR)\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n  If it's not set, plugin-legacy will load [the browserslist config sources](https://github.com/browserslist/browserslist#queries) and then fallback to the default value.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting [browsers that support widely-available features](#browsers-that-supports-esm-but-does-not-support-widely-available-features)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false,\n      }),\n    ],\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n### `renderModernChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to only output the legacy bundles that support all target browsers.\n\n## Browsers that supports ESM but does not support widely-available features\n\nThe legacy plugin offers a way to use widely-available features natively in the modern build, while falling back to the legacy build in browsers with native ESM but without those features supported (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without those features support\n\nThe following syntax are considered as widely-available:\n\n- dynamic import\n- `import.meta`\n- async generator\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally'],\n    }),\n  ],\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-4y/gEB2/KIwZFTfNqwXJq4olzvmQ0S214m9jwKgNXoc=`\n- `sha256-+5XkZFazzJo8n0iOP4ti/cLCMUudTf//Mzkb7xNPXIc=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nimport { cspHashes } from '@vitejs/plugin-legacy'\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@5.0.0-beta.1",
      "_integrity": "sha512-pPFDC/BI34iMeVVc1JH8hvH7j8+RYXAADESxmT/EavRTg1RS/pjJLdxUcQ8yls3aC1qxmm1XRyfsFIORiCLa2A==",
      "_resolved": "/tmp/e04aeb58a90a6a8f4a11dd2d5e13a245/vitejs-plugin-legacy-5.0.0-beta.1.tgz",
      "_from": "file:vitejs-plugin-legacy-5.0.0-beta.1.tgz",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-pPFDC/BI34iMeVVc1JH8hvH7j8+RYXAADESxmT/EavRTg1RS/pjJLdxUcQ8yls3aC1qxmm1XRyfsFIORiCLa2A==",
        "shasum": "0eea93a0efba9f8b65c4b559ae42df033944e3d3",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-5.0.0-beta.1.tgz",
        "fileCount": 9,
        "unpackedSize": 85792,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@vitejs%2fplugin-legacy@5.0.0-beta.1",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v0.2"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCGWHCY1RDdn6bVlcGJHiV9kPZ4+ru8b02iDodZmiUZHAIgDtKKN1x/qn+ZuhfQpOVzeGqFc5G0AY9nfCYB/PwHfsQ="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_5.0.0-beta.1_1695651879792_0.5391126660689465"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.2": {
      "name": "@vitejs/plugin-legacy",
      "version": "5.0.0-beta.2",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.23.0",
        "@babel/preset-env": "^7.22.20",
        "browserslist": "^4.22.1",
        "core-js": "^3.33.0",
        "magic-string": "^0.30.4",
        "regenerator-runtime": "^0.14.0",
        "systemjs": "^6.14.2"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.10.0",
        "picocolors": "^1.0.0",
        "vite": "5.0.0-beta.5"
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin provides support for legacy browsers that do not support those features when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without widely-available features support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11'],\n    }),\n  ],\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** [`'last 2 versions and not dead, > 0.3%, Firefox ESR'`](https://browsersl.ist/#q=last+2+versions+and+not+dead%2C+%3E+0.3%25%2C+Firefox+ESR)\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n  If it's not set, plugin-legacy will load [the browserslist config sources](https://github.com/browserslist/browserslist#queries) and then fallback to the default value.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting [browsers that support widely-available features](#browsers-that-supports-esm-but-does-not-support-widely-available-features)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false,\n      }),\n    ],\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n### `renderModernChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to only output the legacy bundles that support all target browsers.\n\n## Browsers that supports ESM but does not support widely-available features\n\nThe legacy plugin offers a way to use widely-available features natively in the modern build, while falling back to the legacy build in browsers with native ESM but without those features supported (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without those features support\n\nThe following syntax are considered as widely-available:\n\n- dynamic import\n- `import.meta`\n- async generator\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally'],\n    }),\n  ],\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-4y/gEB2/KIwZFTfNqwXJq4olzvmQ0S214m9jwKgNXoc=`\n- `sha256-+5XkZFazzJo8n0iOP4ti/cLCMUudTf//Mzkb7xNPXIc=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nimport { cspHashes } from '@vitejs/plugin-legacy'\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@5.0.0-beta.2",
      "_integrity": "sha512-rWZDqq0o9De35ze6wpsj7fKThqkJRHh9+6DVIdiZi6MiKnvu1wk94sznbflJ0fuFOGm6nep2ajSSRUxNCSotfQ==",
      "_resolved": "/private/var/folders/fm/9t92n8sd3kq850phpw310w0m0000gn/T/c6a90b448217f67daeb0c0d4727ccad2/vitejs-plugin-legacy-5.0.0-beta.2.tgz",
      "_from": "file:vitejs-plugin-legacy-5.0.0-beta.2.tgz",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-rWZDqq0o9De35ze6wpsj7fKThqkJRHh9+6DVIdiZi6MiKnvu1wk94sznbflJ0fuFOGm6nep2ajSSRUxNCSotfQ==",
        "shasum": "13cfcda1a3c078dee06791793d11a803275d47b7",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-5.0.0-beta.2.tgz",
        "fileCount": 9,
        "unpackedSize": 86393,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAYT13yzxRsIfZbLqlV0n/XkHZ63tkNaubTGuhcmpsGyAiB9VZ5aSA3ovar6i320LZiG9uf/JwmCOiaypG5HoA7ITg=="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_5.0.0-beta.2_1696867125353_0.7733317146236554"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-beta.3": {
      "name": "@vitejs/plugin-legacy",
      "version": "5.0.0-beta.3",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.23.3",
        "@babel/preset-env": "^7.23.3",
        "browserslist": "^4.22.1",
        "core-js": "^3.33.2",
        "magic-string": "^0.30.5",
        "regenerator-runtime": "^0.14.0",
        "systemjs": "^6.14.2"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^4.0.0"
      },
      "devDependencies": {
        "acorn": "^8.11.2",
        "picocolors": "^1.0.0",
        "vite": "5.0.0-beta.19"
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts"
      },
      "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin provides support for legacy browsers that do not support those features when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without widely-available features support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11'],\n    }),\n  ],\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** [`'last 2 versions and not dead, > 0.3%, Firefox ESR'`](https://browsersl.ist/#q=last+2+versions+and+not+dead%2C+%3E+0.3%25%2C+Firefox+ESR)\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets).\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n  If it's not set, plugin-legacy will load [the browserslist config sources](https://github.com/browserslist/browserslist#queries) and then fallback to the default value.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting [browsers that support widely-available features](#browsers-that-supports-esm-but-does-not-support-widely-available-features)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io/v3/) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false,\n      }),\n    ],\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n### `renderModernChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to only output the legacy bundles that support all target browsers.\n\n## Browsers that supports ESM but does not support widely-available features\n\nThe legacy plugin offers a way to use widely-available features natively in the modern build, while falling back to the legacy build in browsers with native ESM but without those features supported (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without those features support\n\nThe following syntax are considered as widely-available:\n\n- dynamic import\n- `import.meta`\n- async generator\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally'],\n    }),\n  ],\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script):\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-8uUkKieevHiD3yYtzjkRvyDZWt+uZkBLuGEQWNiV3+c=`\n- `sha256-+5XkZFazzJo8n0iOP4ti/cLCMUudTf//Mzkb7xNPXIc=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nThese values (without the `sha256-` prefix) can also be retrieved via\n\n```js\nimport { cspHashes } from '@vitejs/plugin-legacy'\n```\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
      "readmeFilename": "README.md",
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@5.0.0-beta.3",
      "_integrity": "sha512-kHwvm5/5C0Zgl40zaTBGlGvLeNRtAJyAZD2DXrIqVr2NDlkMbkd8NdPRcmUbKcg7C+Kzsp1rKfSnL+wV+IL9Ig==",
      "_resolved": "/private/var/folders/fm/9t92n8sd3kq850phpw310w0m0000gn/T/3dfdb058d03b40ec5c285dfee983e625/vitejs-plugin-legacy-5.0.0-beta.3.tgz",
      "_from": "file:vitejs-plugin-legacy-5.0.0-beta.3.tgz",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-kHwvm5/5C0Zgl40zaTBGlGvLeNRtAJyAZD2DXrIqVr2NDlkMbkd8NdPRcmUbKcg7C+Kzsp1rKfSnL+wV+IL9Ig==",
        "shasum": "e5b076dea0d0ef2e55e24ed08095194852d0ed71",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-5.0.0-beta.3.tgz",
        "fileCount": 9,
        "unpackedSize": 86450,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD8cl0jMm++iHK4BEb1TM/8li8mGC3s0Pc7/3U6Pz4dEwIgMI+RsWzffvob9jy97YsaErR0USflvs0FWHlErAR3Id4="
          }
        ]
      },
      "_npmUser": {
        "name": "patak",
        "email": "matias.capeletto@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_5.0.0-beta.3_1699978472094_0.395934780440959"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "5.0.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.23.3",
        "@babel/preset-env": "^7.23.3",
        "browserslist": "^4.22.1",
        "core-js": "^3.33.2",
        "magic-string": "^0.30.5",
        "regenerator-runtime": "^0.14.0",
        "systemjs": "^6.14.2"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^5.0.0"
      },
      "devDependencies": {
        "acorn": "^8.11.2",
        "picocolors": "^1.0.0",
        "vite": "5.0.0"
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts"
      },
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@5.0.0",
      "_integrity": "sha512-uC2ZyIJnrBWDEJ70gt8yD79tKHFf0rnbHW70qERrPOeWfLMV/5jjiRO5tSltLFok+8oAmRGA3v0EMl14jLuwMw==",
      "_resolved": "/tmp/e5862b105c6932dea40ab3cb3b1e2f31/vitejs-plugin-legacy-5.0.0.tgz",
      "_from": "file:vitejs-plugin-legacy-5.0.0.tgz",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-uC2ZyIJnrBWDEJ70gt8yD79tKHFf0rnbHW70qERrPOeWfLMV/5jjiRO5tSltLFok+8oAmRGA3v0EMl14jLuwMw==",
        "shasum": "4b2cebb9dafb9bc8119175ce9e47fd3569fd4f73",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-5.0.0.tgz",
        "fileCount": 8,
        "unpackedSize": 61705,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCiTCBAP/1tUTc66aT25qQNHVwqL/IlhAy2xi3vd54pZAIgXDdyu6zhqJ9LK5+h9ZyXSvKvjQFoBoID6Fd/qH2pVlI="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_5.0.0_1700131415050_0.7362259692112356"
      },
      "_hasShrinkwrap": false
    },
    "5.1.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "5.1.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.23.3",
        "@babel/preset-env": "^7.23.3",
        "browserslist": "^4.22.1",
        "core-js": "^3.33.2",
        "magic-string": "^0.30.5",
        "regenerator-runtime": "^0.14.0",
        "systemjs": "^6.14.2"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^5.0.0"
      },
      "devDependencies": {
        "acorn": "^8.11.2",
        "picocolors": "^1.0.0",
        "vite": "5.0.1"
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts"
      },
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@5.1.0",
      "_integrity": "sha512-K8Hs7IUJ8fqi+9aOXYuQoJamdr7oXEowWlR8eys1bNZGrY8VmJ9nzBo+uK2/1P7SjH0KMNHl5u7ZHqbbUMH4EQ==",
      "_resolved": "/tmp/1a2dff4f9674dbe15bf7c51fda90a650/vitejs-plugin-legacy-5.1.0.tgz",
      "_from": "file:vitejs-plugin-legacy-5.1.0.tgz",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-K8Hs7IUJ8fqi+9aOXYuQoJamdr7oXEowWlR8eys1bNZGrY8VmJ9nzBo+uK2/1P7SjH0KMNHl5u7ZHqbbUMH4EQ==",
        "shasum": "7eff3ead14b773c1bbc14d6ea60f2642bba20026",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-5.1.0.tgz",
        "fileCount": 8,
        "unpackedSize": 61965,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGRnjaAmkfxigCR89pfRl73ilpMdxpMLSgLr1fhmKNjZAiEArgnMZVuxAXobAvy7BzKJh6vW1qy5rQDJ83xQ6DNr0Zs="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_5.1.0_1700570864871_0.10648707227664822"
      },
      "_hasShrinkwrap": false
    },
    "5.2.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "5.2.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.23.3",
        "@babel/preset-env": "^7.23.3",
        "browserslist": "^4.22.1",
        "core-js": "^3.33.2",
        "magic-string": "^0.30.5",
        "regenerator-runtime": "^0.14.0",
        "systemjs": "^6.14.2"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^5.0.0"
      },
      "devDependencies": {
        "acorn": "^8.11.2",
        "picocolors": "^1.0.0",
        "vite": "5.0.2"
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts"
      },
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@5.2.0",
      "_integrity": "sha512-FGpxQCgyI8SHA/TkFH5vfBManyc6GYkCoYtmom924c7sKObnBE7q543RQuKK46duI4j31Nv1wg4GRNtCfsGpGQ==",
      "_resolved": "/tmp/dcb407c1599b8b578ba441c0aea683e8/vitejs-plugin-legacy-5.2.0.tgz",
      "_from": "file:vitejs-plugin-legacy-5.2.0.tgz",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-FGpxQCgyI8SHA/TkFH5vfBManyc6GYkCoYtmom924c7sKObnBE7q543RQuKK46duI4j31Nv1wg4GRNtCfsGpGQ==",
        "shasum": "2f5b26d241d5e38d18b4ceb051cc780e7ab8ded1",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-5.2.0.tgz",
        "fileCount": 8,
        "unpackedSize": 61967,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEGzdH0ItaAiML3ipEe+Bpu2OVMPaQSVj2p727ziJXo8AiAIkNAMg8GfOFpqiBsGapj7uC1uqlrxBRiuawM+LknpBw=="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_5.2.0_1700642745515_0.11105620779840586"
      },
      "_hasShrinkwrap": false
    },
    "5.3.0": {
      "name": "@vitejs/plugin-legacy",
      "version": "5.3.0",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.23.7",
        "@babel/preset-env": "^7.23.8",
        "browserslist": "^4.22.2",
        "core-js": "^3.35.0",
        "esbuild-plugin-browserslist": "^0.10.0",
        "magic-string": "^0.30.5",
        "regenerator-runtime": "^0.14.1",
        "systemjs": "^6.14.3"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^5.0.0"
      },
      "devDependencies": {
        "acorn": "^8.11.3",
        "picocolors": "^1.0.0",
        "vite": "5.1.0-beta.3"
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts"
      },
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@5.3.0",
      "_integrity": "sha512-BhW+WcJmEgW5G/1UQRiVQ7wz9/ZPnxqzExT9n0zAk4RlqQQ/26udIeXzdU8+03AGnaF61wmZlCspexgEnxFWMA==",
      "_resolved": "/tmp/82a31c66548579475c50d3f3def937fd/vitejs-plugin-legacy-5.3.0.tgz",
      "_from": "file:vitejs-plugin-legacy-5.3.0.tgz",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "10.2.3",
      "dist": {
        "integrity": "sha512-BhW+WcJmEgW5G/1UQRiVQ7wz9/ZPnxqzExT9n0zAk4RlqQQ/26udIeXzdU8+03AGnaF61wmZlCspexgEnxFWMA==",
        "shasum": "e49b6a29b2c27ace8f3a424351821f9a8fff3af7",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-5.3.0.tgz",
        "fileCount": 8,
        "unpackedSize": 65036,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHIjFLyQVZLgZUGOVnclOwYGRXIa/q1greRnJWSAef83AiEAyNA+wgFk/y+IttoEL6kDjy5V8cMx4fnCGnBQkKUzxiY="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "matias.capeletto@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_5.3.0_1706192662231_0.3374323675115196"
      },
      "_hasShrinkwrap": false
    },
    "5.3.1": {
      "name": "@vitejs/plugin-legacy",
      "version": "5.3.1",
      "license": "MIT",
      "author": {
        "name": "Evan You"
      },
      "keywords": [
        "frontend",
        "vite",
        "vite-plugin",
        "@vitejs/plugin-legacy"
      ],
      "main": "./dist/index.cjs",
      "module": "./dist/index.mjs",
      "types": "./dist/index.d.ts",
      "exports": {
        ".": {
          "import": "./dist/index.mjs",
          "require": "./dist/index.cjs"
        }
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/vitejs/vite.git",
        "directory": "packages/plugin-legacy"
      },
      "bugs": {
        "url": "https://github.com/vitejs/vite/issues"
      },
      "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
      "funding": "https://github.com/vitejs/vite?sponsor=1",
      "dependencies": {
        "@babel/core": "^7.23.9",
        "@babel/preset-env": "^7.23.9",
        "browserslist": "^4.23.0",
        "core-js": "^3.36.0",
        "esbuild-plugin-browserslist": "^0.11.1",
        "magic-string": "^0.30.7",
        "regenerator-runtime": "^0.14.1",
        "systemjs": "^6.14.3"
      },
      "peerDependencies": {
        "terser": "^5.4.0",
        "vite": "^5.0.0"
      },
      "devDependencies": {
        "acorn": "^8.11.3",
        "picocolors": "^1.0.0",
        "vite": "5.1.4"
      },
      "scripts": {
        "dev": "unbuild --stub",
        "build": "unbuild && pnpm run patch-cjs",
        "patch-cjs": "tsx ../../scripts/patchCJS.ts"
      },
      "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
      "_id": "@vitejs/plugin-legacy@5.3.1",
      "_integrity": "sha512-ymCuZo8Bu7gSO85I3E/3SNnaQ64gFdVpTqxqhl8YeasJChDxN8D3IKYByC+AsxwoeO2AE59wy4PPILM/A03TIQ==",
      "_resolved": "/tmp/4e16542ddc9f0f76e62d8638b0569737/vitejs-plugin-legacy-5.3.1.tgz",
      "_from": "file:vitejs-plugin-legacy-5.3.1.tgz",
      "_nodeVersion": "18.19.1",
      "_npmVersion": "10.2.4",
      "dist": {
        "integrity": "sha512-ymCuZo8Bu7gSO85I3E/3SNnaQ64gFdVpTqxqhl8YeasJChDxN8D3IKYByC+AsxwoeO2AE59wy4PPILM/A03TIQ==",
        "shasum": "5cfd994e63d0e1667b69337e1a1f806d4e159eeb",
        "tarball": "https://registry.npmjs.org/@vitejs/plugin-legacy/-/plugin-legacy-5.3.1.tgz",
        "fileCount": 8,
        "unpackedSize": 65029,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDulL4dVreqGJ1RT+SnwXHuYYhJxNCeia+1tT5JVIP0awIgX7IyzjmZmCXe58cNYiqAi1PbnG58fatCZmkA/aLgLIQ="
          }
        ]
      },
      "_npmUser": {
        "name": "vitebot",
        "email": "vitejs.twitter@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "soda",
          "email": "npm@haoqun.me"
        },
        {
          "name": "vitebot",
          "email": "vitejs.twitter@gmail.com"
        },
        {
          "name": "yyx990803",
          "email": "yyx990803@gmail.com"
        },
        {
          "name": "patak",
          "email": "hey.patak@gmail.com"
        },
        {
          "name": "antfu",
          "email": "anthonyfu117@hotmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/plugin-legacy_5.3.1_1708514044746_0.5052748751333354"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2021-01-07T20:41:11.523Z",
    "1.0.0": "2021-01-07T20:41:11.959Z",
    "modified": "2024-02-21T11:14:05.397Z",
    "1.0.1": "2021-01-07T22:53:42.577Z",
    "1.1.0": "2021-01-07T23:54:06.805Z",
    "1.1.1": "2021-01-09T20:59:15.857Z",
    "1.2.0": "2021-01-11T22:40:08.126Z",
    "1.2.1": "2021-01-14T15:11:38.828Z",
    "1.2.2": "2021-01-25T02:33:05.775Z",
    "1.2.3": "2021-02-01T17:03:36.386Z",
    "1.3.0": "2021-02-11T22:54:41.030Z",
    "1.3.1": "2021-02-15T20:35:35.819Z",
    "1.3.2": "2021-03-27T07:32:31.112Z",
    "1.3.3": "2021-05-03T15:54:20.532Z",
    "1.3.4": "2021-05-11T07:16:20.412Z",
    "1.4.0": "2021-05-17T14:17:08.429Z",
    "1.4.1": "2021-06-01T00:20:18.088Z",
    "1.4.2": "2021-06-22T11:14:54.360Z",
    "1.4.3": "2021-06-27T21:42:26.755Z",
    "1.4.4": "2021-07-12T12:22:13.663Z",
    "1.5.0": "2021-07-27T10:11:20.517Z",
    "1.5.1": "2021-08-03T11:26:47.641Z",
    "1.5.2": "2021-09-01T13:16:01.706Z",
    "1.5.3": "2021-09-07T11:55:52.941Z",
    "1.6.0": "2021-09-29T13:31:02.196Z",
    "1.6.1": "2021-10-05T11:27:05.614Z",
    "1.6.2": "2021-10-11T14:27:41.161Z",
    "1.6.3": "2021-11-22T13:37:52.140Z",
    "1.6.4": "2021-12-07T09:07:33.954Z",
    "1.7.0": "2022-02-09T06:04:58.772Z",
    "1.7.1": "2022-02-11T20:51:19.557Z",
    "1.8.0": "2022-03-30T12:43:51.764Z",
    "1.8.1": "2022-04-13T13:54:59.614Z",
    "1.8.2": "2022-05-02T13:57:25.988Z",
    "2.0.0-alpha.0": "2022-05-13T13:11:02.542Z",
    "2.0.0-alpha.1": "2022-05-19T01:32:46.149Z",
    "2.0.0-alpha.2": "2022-06-19T07:05:45.470Z",
    "2.0.0-beta.0": "2022-06-21T13:55:02.357Z",
    "2.0.0-beta.1": "2022-07-06T07:49:59.592Z",
    "2.0.0": "2022-07-13T12:34:18.024Z",
    "2.0.1": "2022-08-11T20:19:41.483Z",
    "2.1.0-beta.0": "2022-08-29T14:11:25.574Z",
    "2.1.0": "2022-09-05T09:55:32.235Z",
    "2.2.0": "2022-09-19T08:19:44.989Z",
    "2.3.0-beta.0": "2022-10-05T10:10:00.540Z",
    "2.3.0": "2022-10-26T13:19:40.409Z",
    "2.3.1": "2022-11-07T08:27:39.246Z",
    "3.0.0-alpha.0": "2022-11-30T17:02:54.463Z",
    "3.0.0": "2022-12-09T09:05:41.266Z",
    "3.0.1": "2022-12-09T13:07:09.823Z",
    "3.0.2": "2023-01-26T10:50:57.093Z",
    "4.0.0": "2023-02-02T10:33:04.818Z",
    "4.0.1": "2023-02-02T13:11:34.104Z",
    "4.0.2": "2023-03-16T08:20:29.905Z",
    "4.0.3": "2023-04-25T13:44:08.275Z",
    "4.0.4": "2023-05-24T15:44:48.250Z",
    "4.0.5": "2023-06-21T13:12:09.906Z",
    "4.1.0": "2023-07-06T08:13:20.713Z",
    "4.1.1": "2023-07-20T14:30:38.392Z",
    "5.0.0-beta.0": "2023-09-19T08:03:19.568Z",
    "5.0.0-beta.1": "2023-09-25T14:24:40.036Z",
    "5.0.0-beta.2": "2023-10-09T15:58:45.731Z",
    "5.0.0-beta.3": "2023-11-14T16:14:32.328Z",
    "5.0.0": "2023-11-16T10:43:35.198Z",
    "5.1.0": "2023-11-21T12:47:45.064Z",
    "5.2.0": "2023-11-22T08:45:45.710Z",
    "5.3.0": "2024-01-25T14:24:22.356Z",
    "5.3.1": "2024-02-21T11:14:04.936Z"
  },
  "maintainers": [
    {
      "name": "soda",
      "email": "npm@haoqun.me"
    },
    {
      "name": "vitebot",
      "email": "vitejs.twitter@gmail.com"
    },
    {
      "name": "yyx990803",
      "email": "yyx990803@gmail.com"
    },
    {
      "name": "patak",
      "email": "hey.patak@gmail.com"
    },
    {
      "name": "antfu",
      "email": "anthonyfu117@hotmail.com"
    }
  ],
  "description": "Vite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin",
  "homepage": "https://github.com/vitejs/vite/tree/main/packages/plugin-legacy#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vitejs/vite.git",
    "directory": "packages/plugin-legacy"
  },
  "author": {
    "name": "Evan You"
  },
  "bugs": {
    "url": "https://github.com/vitejs/vite/issues"
  },
  "license": "MIT",
  "readme": "# @vitejs/plugin-legacy [![npm](https://img.shields.io/npm/v/@vitejs/plugin-legacy.svg)](https://npmjs.com/package/@vitejs/plugin-legacy)\n\nVite's default browser support baseline is [Native ESM](https://caniuse.com/es6-module), [native ESM dynamic import](https://caniuse.com/es6-module-dynamic-import), and [`import.meta`](https://caniuse.com/mdn-javascript_operators_import_meta). This plugin provides support for legacy browsers that do not support those features when building for production.\n\nBy default, this plugin will:\n\n- Generate a corresponding legacy chunk for every chunk in the final bundle, transformed with [@babel/preset-env](https://babeljs.io/docs/en/babel-preset-env) and emitted as [SystemJS modules](https://github.com/systemjs/systemjs) (code splitting is still supported!).\n\n- Generate a polyfill chunk including SystemJS runtime, and any necessary polyfills determined by specified browser targets and **actual usage** in the bundle.\n\n- Inject `<script nomodule>` tags into generated HTML to conditionally load the polyfills and legacy bundle only in browsers without widely-available features support.\n\n- Inject the `import.meta.env.LEGACY` env variable, which will only be `true` in the legacy production build, and `false` in all other cases.\n\n## Usage\n\n```js\n// vite.config.js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      targets: ['defaults', 'not IE 11'],\n    }),\n  ],\n}\n```\n\nTerser must be installed because plugin-legacy uses Terser for minification.\n\n```sh\nnpm add -D terser\n```\n\n## Options\n\n### `targets`\n\n- **Type:** `string | string[] | { [key: string]: string }`\n- **Default:** [`'last 2 versions and not dead, > 0.3%, Firefox ESR'`](https://browsersl.ist/#q=last+2+versions+and+not+dead%2C+%3E+0.3%25%2C+Firefox+ESR)\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets) when rendering **legacy chunks**.\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n  If it's not set, plugin-legacy will load [the browserslist config sources](https://github.com/browserslist/browserslist#queries) and then fallback to the default value.\n\n### `modernTargets`\n\n- **Type:** `string | string[]`\n- **Default:** [`'edge>=80, firefox>=72, chrome>=80, safari>=13.1, chromeAndroid>=80, iOS>=13.1'`](https://browsersl.ist/#q=edge%3E%3D80%2C+firefox%3E%3D72%2C+chrome%3E%3D80%2C+safari%3E%3D13.1%2C+chromeAndroid%3E%3D80%2C+iOS%3E%3D13.1)\n\n  If explicitly set, it's passed on to [`@babel/preset-env`](https://babeljs.io/docs/en/babel-preset-env#targets) when rendering **modern chunks**.\n\n  The query is also [Browserslist compatible](https://github.com/browserslist/browserslist). See [Browserslist Best Practices](https://github.com/browserslist/browserslist#best-practices) for more details.\n\n  If it's not set, plugin-legacy will fallback to the default value.\n\n### `polyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `true`\n\n  By default, a polyfills chunk is generated based on the target browser ranges and actual usage in the final bundle (detected via `@babel/preset-env`'s `useBuiltIns: 'usage'`).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Set to `false` to avoid generating polyfills and handle it yourself (will still generate legacy chunks with syntax transformations).\n\n### `additionalLegacyPolyfills`\n\n- **Type:** `string[]`\n\n  Add custom imports to the legacy polyfills chunk. Since the usage-based polyfill detection only covers ES language features, it may be necessary to manually specify additional DOM API polyfills using this option.\n\n  Note: if additional polyfills are needed for both the modern and legacy chunks, they can simply be imported in the application source code.\n\n### `modernPolyfills`\n\n- **Type:** `boolean | string[]`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will generate a separate polyfills chunk for the modern build (targeting [browsers that support widely-available features](#browsers-that-supports-esm-but-does-not-support-widely-available-features)).\n\n  Set to a list of strings to explicitly control which polyfills to include. See [Polyfill Specifiers](#polyfill-specifiers) for details.\n\n  Note it is **not recommended** to use the `true` value (which uses auto-detection) because `core-js@3` is very aggressive in polyfill inclusions due to all the bleeding edge features it supports. Even when targeting native ESM support, it injects 15kb of polyfills!\n\n  If you don't have hard reliance on bleeding edge runtime features, it is not that hard to avoid having to use polyfills in the modern build altogether. Alternatively, consider using an on-demand service like [Polyfill.io](https://polyfill.io) to only inject necessary polyfills based on actual browser user-agents (most modern browsers will need nothing!).\n\n### `renderLegacyChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to disable legacy chunks. This is only useful if you are using `modernPolyfills`, which essentially allows you to use this plugin for injecting polyfills to the modern build only:\n\n  ```js\n  import legacy from '@vitejs/plugin-legacy'\n\n  export default {\n    plugins: [\n      legacy({\n        modernPolyfills: [\n          /* ... */\n        ],\n        renderLegacyChunks: false,\n      }),\n    ],\n  }\n  ```\n\n### `externalSystemJS`\n\n- **Type:** `boolean`\n- **Default:** `false`\n\n  Defaults to `false`. Enabling this option will exclude `systemjs/dist/s.min.js` inside polyfills-legacy chunk.\n\n### `renderModernChunks`\n\n- **Type:** `boolean`\n- **Default:** `true`\n\n  Set to `false` to only output the legacy bundles that support all target browsers.\n\n## Browsers that supports ESM but does not support widely-available features\n\nThe legacy plugin offers a way to use widely-available features natively in the modern build, while falling back to the legacy build in browsers with native ESM but without those features supported (e.g. Legacy Edge). This feature works by injecting a runtime check and loading the legacy bundle with SystemJs runtime if needed. There are the following drawbacks:\n\n- Modern bundle is downloaded in all ESM browsers\n- Modern bundle throws `SyntaxError` in browsers without those features support\n\nThe following syntax are considered as widely-available:\n\n- dynamic import\n- `import.meta`\n- async generator\n\n## Polyfill Specifiers\n\nPolyfill specifier strings for `polyfills` and `modernPolyfills` can be either of the following:\n\n- Any [`core-js` 3 sub import paths](https://unpkg.com/browse/core-js@latest/) - e.g. `es/map` will import `core-js/es/map`\n\n- Any [individual `core-js` 3 modules](https://unpkg.com/browse/core-js@latest/modules/) - e.g. `es.array.iterator` will import `core-js/modules/es.array.iterator.js`\n\n**Example**\n\n```js\nimport legacy from '@vitejs/plugin-legacy'\n\nexport default {\n  plugins: [\n    legacy({\n      polyfills: ['es.promise.finally', 'es/map', 'es/set'],\n      modernPolyfills: ['es.promise.finally'],\n    }),\n  ],\n}\n```\n\n## Content Security Policy\n\nThe legacy plugin requires inline scripts for [Safari 10.1 `nomodule` fix](https://gist.github.com/samthor/64b114e4a4f539915a95b91ffd340acc), SystemJS initialization, and dynamic import fallback. If you have a strict CSP policy requirement, you will need to [add the corresponding hashes to your `script-src` list](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_inline_script).\n\nThe hash values (without the `sha256-` prefix) can be retrieved via:\n\n```js\nimport { cspHashes } from '@vitejs/plugin-legacy'\n```\n\nThe current values are:\n\n- `sha256-MS6/3FCg4WjP9gwgaBGwLpRCY6fZBgwmhVCdrPrNf3E=`\n- `sha256-tQjf8gvb2ROOMapIxFvFAYBeUJ0v1HCbOcSmDNXGtDo=`\n- `sha256-VA8O2hAdooB288EpSTrGLl7z3QikbWU9wwoebO/QaYk=`\n- `sha256-+5XkZFazzJo8n0iOP4ti/cLCMUudTf//Mzkb7xNPXIc=`\n\n<!--\nRun `node --input-type=module -e \"import {cspHashes} from '@vitejs/plugin-legacy'; console.log(cspHashes.map(h => 'sha256-'+h))\"` to retrieve the value.\n-->\n\nNote that these values could change between minor versions. Thus, we recommend generating the CSP header from the exported `cspHashes` variable. If you copy the values manually, then you should pin the minor version using `~`.\n\nWhen using the `regenerator-runtime` polyfill, it will attempt to use the `globalThis` object to register itself. If `globalThis` is not available (it is [fairly new](https://caniuse.com/?search=globalThis) and not widely supported, including IE 11), it attempts to perform dynamic `Function(...)` call which violates the CSP. To avoid dynamic `eval` in the absence of `globalThis` consider adding `core-js/proposals/global-this` to `additionalLegacyPolyfills` to define it.\n\n## References\n\n- [Vue CLI modern mode](https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode)\n- [Using Native JavaScript Modules in Production Today](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/)\n- [rollup-native-modules-boilerplate](https://github.com/philipwalton/rollup-native-modules-boilerplate)\n",
  "readmeFilename": "README.md",
  "keywords": [
    "frontend",
    "vite",
    "vite-plugin",
    "@vitejs/plugin-legacy"
  ]
}