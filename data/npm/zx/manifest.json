{
  "_id": "zx",
  "_rev": "112-e708cfa2b51bf87604c44679c8cf7137",
  "name": "zx",
  "time": {
    "modified": "2024-02-25T14:58:06.495Z",
    "created": "2013-12-16T04:10:41.871Z",
    "0.1.0": "2013-12-16T04:10:45.343Z",
    "0.0.0": "2015-08-30T22:25:40.800Z",
    "0.1.1": "2015-08-30T22:49:28.061Z",
    "0.1.2": "2016-01-03T08:32:16.215Z",
    "0.2.0": "2016-01-15T22:30:10.371Z",
    "0.2.1": "2016-01-15T22:34:43.760Z",
    "1.0.0": "2018-01-23T06:15:11.120Z",
    "1.0.1": "2021-05-05T19:29:42.364Z",
    "1.0.2": "2021-05-05T21:32:15.202Z",
    "1.1.0": "2021-05-07T16:58:04.688Z",
    "1.1.1": "2021-05-07T22:51:00.959Z",
    "1.2.0": "2021-05-08T14:57:06.374Z",
    "1.2.1": "2021-05-09T13:10:11.162Z",
    "1.2.2": "2021-05-09T13:21:04.334Z",
    "1.3.0": "2021-05-11T10:37:05.876Z",
    "1.4.0": "2021-05-11T10:56:25.860Z",
    "1.5.0": "2021-05-12T21:13:34.139Z",
    "1.6.0": "2021-05-13T17:09:20.088Z",
    "1.7.0": "2021-05-16T16:55:49.203Z",
    "1.7.3": "2021-05-19T07:17:20.650Z",
    "1.7.4": "2021-05-19T07:20:42.038Z",
    "1.7.5": "2021-05-19T07:22:29.605Z",
    "1.7.6": "2021-05-19T07:25:01.463Z",
    "1.8.0": "2021-05-19T19:59:38.688Z",
    "1.9.0": "2021-05-22T15:14:22.528Z",
    "1.10.0": "2021-05-22T21:11:14.085Z",
    "1.10.1": "2021-05-23T13:09:45.453Z",
    "1.11.0": "2021-05-23T16:58:22.837Z",
    "1.12.0": "2021-05-24T19:28:12.307Z",
    "1.13.0": "2021-05-26T19:14:38.022Z",
    "1.14.0": "2021-05-26T21:55:31.426Z",
    "1.14.1": "2021-05-27T21:37:56.439Z",
    "1.14.2": "2021-06-20T07:34:37.259Z",
    "1.15.1": "2021-07-03T21:12:47.234Z",
    "1.15.2": "2021-07-03T21:28:19.931Z",
    "2.0.0": "2021-07-05T13:02:43.023Z",
    "2.1.0": "2021-08-10T10:58:28.114Z",
    "3.0.0": "2021-08-16T06:41:44.934Z",
    "3.1.0": "2021-08-20T07:35:48.427Z",
    "4.0.0": "2021-08-27T22:03:10.913Z",
    "4.1.0": "2021-08-31T21:36:14.184Z",
    "4.1.1": "2021-08-31T21:45:12.529Z",
    "4.2.0": "2021-09-07T21:47:05.151Z",
    "4.3.0": "2022-01-16T20:58:17.558Z",
    "5.0.0": "2022-02-09T16:56:41.022Z",
    "5.1.0": "2022-02-16T19:31:49.386Z",
    "5.2.0": "2022-02-27T14:41:11.373Z",
    "5.3.0": "2022-03-14T20:25:25.986Z",
    "6.0.0": "2022-03-15T21:29:16.491Z",
    "6.0.1": "2022-03-15T22:52:34.855Z",
    "6.0.3": "2022-03-17T17:54:51.143Z",
    "6.0.4": "2022-03-18T16:01:29.415Z",
    "6.0.5": "2022-03-18T16:23:04.805Z",
    "6.0.6": "2022-03-18T16:30:31.128Z",
    "6.0.7": "2022-03-21T19:52:16.812Z",
    "6.1.0": "2022-04-15T12:00:37.426Z",
    "6.2.0": "2022-06-01T21:24:03.870Z",
    "6.2.1": "2022-06-03T05:41:26.468Z",
    "6.2.2": "2022-06-04T08:22:56.325Z",
    "6.2.3": "2022-06-05T09:26:13.209Z",
    "6.2.4": "2022-06-08T12:58:20.170Z",
    "6.2.5": "2022-06-13T14:59:00.535Z",
    "7.0.0": "2022-06-14T16:36:58.775Z",
    "7.0.1": "2022-06-20T23:29:21.765Z",
    "7.0.2": "2022-06-22T19:34:12.067Z",
    "7.0.3": "2022-06-27T22:12:32.306Z",
    "7.0.4": "2022-06-29T20:58:43.821Z",
    "7.0.5": "2022-06-30T18:42:29.209Z",
    "7.0.6": "2022-07-01T20:02:39.049Z",
    "7.0.7": "2022-07-02T21:17:22.951Z",
    "7.0.8": "2022-08-01T20:36:54.881Z",
    "7.0.8-dev.905ec9f": "2022-08-28T12:12:22.938Z",
    "7.0.8-dev.5f15516": "2022-09-14T21:23:27.609Z",
    "7.1.0-dev.2dbf8e8": "2022-09-15T06:40:30.723Z",
    "7.1.0-dev.65d76da": "2022-09-15T20:54:08.210Z",
    "7.1.0-dev.96d40f9": "2022-09-17T13:00:53.467Z",
    "7.1.0-dev.b684619": "2022-09-18T19:54:58.463Z",
    "7.1.0-dev.6f7b331": "2022-09-25T09:55:34.769Z",
    "7.1.0-dev.c768e53": "2022-09-25T10:07:55.801Z",
    "7.1.0-dev.b6a2f01": "2022-09-25T10:46:02.405Z",
    "7.1.0-dev.38c4497": "2022-09-25T10:48:12.617Z",
    "7.1.0-dev.862401": "2022-09-25T10:55:07.824Z",
    "7.1.0-dev.3bc2ce3": "2022-09-25T10:57:10.836Z",
    "7.1.0-dev.cfa0fba": "2022-10-04T20:38:39.641Z",
    "7.1.0": "2022-10-05T20:35:04.463Z",
    "7.1.0-dev.962864d": "2022-10-07T05:54:52.076Z",
    "7.1.0-dev.7828d56": "2022-10-07T20:20:14.175Z",
    "7.1.1": "2022-10-07T20:27:17.177Z",
    "7.2.0": "2023-02-27T13:44:30.410Z",
    "7.2.0-dev.df28f5f": "2023-02-27T20:15:01.400Z",
    "7.2.0-dev.5bbb635": "2023-02-27T20:17:45.600Z",
    "7.2.0-dev.85c9409": "2023-02-28T19:46:23.450Z",
    "7.2.0-dev.a3753b1": "2023-02-28T19:50:57.006Z",
    "7.2.0-dev.4868d7c": "2023-02-28T19:56:36.028Z",
    "7.2.1": "2023-03-17T08:46:32.749Z",
    "7.2.2": "2023-05-01T15:32:30.762Z",
    "7.2.3": "2023-07-06T10:22:54.994Z",
    "7.2.3-dev.7e728f6": "2024-02-25T14:58:05.875Z"
  },
  "maintainers": [
    {
      "name": "medv",
      "email": "anton@medv.io"
    },
    {
      "name": "google-wombot",
      "email": "node-team-npm+wombot@google.com"
    }
  ],
  "dist-tags": {
    "latest": "7.2.3",
    "beta": "0.2.1",
    "dev": "7.2.3-dev.7e728f6"
  },
  "description": "A tool for writing better scripts",
  "readme": "",
  "versions": {
    "0.0.0": {
      "name": "zx",
      "version": "0.0.0",
      "description": "A CLI tool for running command shortcuts.",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/zkochan/zx.git"
      },
      "keywords": [
        "exec",
        "commands",
        "shortcuts"
      ],
      "author": {
        "name": "Zoltan Kochan",
        "email": "zoltan.kochan@gmail.com",
        "url": "http://kochan.io"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/zkochan/zx/issues"
      },
      "homepage": "https://github.com/zkochan/zx#readme",
      "publishConfig": {
        "registry": "http://registry.npmjs.org"
      },
      "gitHead": "2a2774a43bbb44894c838968e153f36c34b1a87d",
      "_id": "zx@0.0.0",
      "_shasum": "8dfa552ea5f18ad7947b8da7df32e89a78f2d671",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "0.12.4",
      "_npmUser": {
        "name": "zkochan",
        "email": "zoltan.kochan+github@gmail.com"
      },
      "dist": {
        "shasum": "8dfa552ea5f18ad7947b8da7df32e89a78f2d671",
        "tarball": "https://registry.npmjs.org/zx/-/zx-0.0.0.tgz",
        "integrity": "sha512-LchlxltfJUk6lOynJRBafneMGGhkLHWuXpHFBZH/5Vy3DydVEzqo2P6JgFy1kkyGj1b38n1heCAXdXi2yvGObA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBHYyghOeK6jYyqv6F/42JgCiih5hdAjkw5U/lpN9BEdAiEA/+SVA16Ey/QEgq+eiUHUD5jSjUIDVr+iE6QbNB+waEk="
          }
        ]
      },
      "maintainers": [
        {
          "name": "zkochan",
          "email": "zoltan.kochan+github@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.1.1": {
      "name": "zx",
      "version": "0.1.1",
      "description": "A CLI tool for running command shortcuts.",
      "main": "index.js",
      "bin": {
        "zx": "index.js"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/zkochan/zx.git"
      },
      "keywords": [
        "exec",
        "commands",
        "shortcuts"
      ],
      "author": {
        "name": "Zoltan Kochan",
        "email": "zoltan.kochan@gmail.com",
        "url": "http://kochan.io"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/zkochan/zx/issues"
      },
      "homepage": "https://github.com/zkochan/zx#readme",
      "publishConfig": {
        "registry": "http://registry.npmjs.org"
      },
      "dependencies": {
        "commander": "^2.8.1",
        "exec-cmds": "^0.2.0",
        "update-notifier": "^0.5.0",
        "yaml-or-json": "^0.1.0"
      },
      "gitHead": "e2b5000f376ba9c6e0205d6c7a0c4e0a76c90fe3",
      "_id": "zx@0.1.1",
      "scripts": {},
      "_shasum": "e9b97c31422bd08f5b29328a954d72c1c4479b17",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "0.12.4",
      "_npmUser": {
        "name": "zkochan",
        "email": "zoltan.kochan+github@gmail.com"
      },
      "dist": {
        "shasum": "e9b97c31422bd08f5b29328a954d72c1c4479b17",
        "tarball": "https://registry.npmjs.org/zx/-/zx-0.1.1.tgz",
        "integrity": "sha512-mZ2tVJtjeC/l7AM56FzFEDw7GPJM2KuAt2jRR+uMTCI6n7qe2/QzNQn2iPFazsVsMLYrsTmCOvclTSUXxv5YLQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDtqjqzUIQf0f7vS296f/o7f2XFq5gYF5eK85yQNoyTSgIgXz03rR25yaRK47gK1BW9SZM8xCigdADtXhIbGxu7TW0="
          }
        ]
      },
      "maintainers": [
        {
          "name": "zkochan",
          "email": "zoltan.kochan+github@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.1.2": {
      "name": "zx",
      "version": "0.1.2",
      "description": "A CLI tool for running command shortcuts.",
      "main": "index.js",
      "bin": {
        "zx": "index.js"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/zkochan/zx.git"
      },
      "keywords": [
        "exec",
        "commands",
        "shortcuts"
      ],
      "author": {
        "name": "Zoltan Kochan",
        "email": "zoltan.kochan@gmail.com",
        "url": "http://kochan.io"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/zkochan/zx/issues"
      },
      "homepage": "https://github.com/zkochan/zx#readme",
      "publishConfig": {
        "registry": "http://registry.npmjs.org"
      },
      "dependencies": {
        "commander": "^2.8.1",
        "exec-cmds": "^0.2.0",
        "update-notifier": "^0.5.0",
        "yaml-or-json": "^0.1.0"
      },
      "gitHead": "6a6962c53203658dc1052aa2067bcfb72f558b38",
      "_id": "zx@0.1.2",
      "scripts": {},
      "_shasum": "c9384d0148a0be23525f219a9ca5574623e21d03",
      "_from": ".",
      "_npmVersion": "3.5.1",
      "_nodeVersion": "5.3.0",
      "_npmUser": {
        "name": "zkochan",
        "email": "zoltan.kochan@gmail.com"
      },
      "dist": {
        "shasum": "c9384d0148a0be23525f219a9ca5574623e21d03",
        "tarball": "https://registry.npmjs.org/zx/-/zx-0.1.2.tgz",
        "integrity": "sha512-KjLNXmhdqsmoc9RXE+nGsnkozlnXmIbJ+XJdf0JzKiRvuhRVWUaELqWLpc2ol1tOYLlOt+j4e36gq7ykZOYHAQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE8NtIfD/91b0abnV0+tmMblKuNtqbY5yjse1Jc45rGJAiA7rKOPazNrA+r6Xp6Q7/BD/X+5WFBWzd9rQGAamA+ADw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "zkochan",
          "email": "zoltan.kochan+github@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.2.0": {
      "name": "zx",
      "version": "0.2.0",
      "description": "A CLI tool for running command shortcuts.",
      "main": "index.js",
      "files": [
        "index.js"
      ],
      "bin": {
        "zx": "index.js"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/zkochan/zx.git"
      },
      "keywords": [
        "exec",
        "commands",
        "shortcuts"
      ],
      "author": {
        "name": "Zoltan Kochan",
        "email": "zoltan.kochan@gmail.com",
        "url": "http://kochan.io"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/zkochan/zx/issues"
      },
      "homepage": "https://github.com/zkochan/zx#readme",
      "publishConfig": {
        "registry": "http://registry.npmjs.org"
      },
      "dependencies": {
        "chalk": "^1.1.1",
        "cross-spawn": "^2.1.4",
        "npm-path": "^1.0.2",
        "parse-spawn-args": "^1.0.2",
        "shell-quote": "^1.4.3",
        "update-notifier": "^0.5.0",
        "yaml-or-json": "^0.2.0",
        "yargs": "^3.31.0"
      },
      "devDependencies": {
        "plato": "^1.5.0"
      },
      "gitHead": "347d86343c359f432a1f450c4068638bbc6ec194",
      "_id": "zx@0.2.0",
      "scripts": {},
      "_shasum": "2a45cb489bc65e9993def0dd7dfabb94891fd56f",
      "_from": ".",
      "_npmVersion": "2.14.15",
      "_nodeVersion": "5.4.0",
      "_npmUser": {
        "name": "zkochan",
        "email": "zoltan.kochan@gmail.com"
      },
      "dist": {
        "shasum": "2a45cb489bc65e9993def0dd7dfabb94891fd56f",
        "tarball": "https://registry.npmjs.org/zx/-/zx-0.2.0.tgz",
        "integrity": "sha512-HV1X9t9fOWcYv6oRO9SUh1oTi9qiK4syhrc3p3e7di62F2+wfM5UogfjivrFRbScD50abtWoN72gG5T3R1WGAw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD7AfZxHRWnhzksYHGWzZgDEMhl5JfDZs5bocBHXoh5MgIhAJ03ilp7qaeTLdv62FbQsHscyyfb9IMs55ttA2HCj3Fn"
          }
        ]
      },
      "maintainers": [
        {
          "name": "zkochan",
          "email": "zoltan.kochan+github@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.2.1": {
      "name": "zx",
      "version": "0.2.1",
      "description": "A CLI tool for running command shortcuts.",
      "main": "index.js",
      "files": [
        "index.js",
        "lib"
      ],
      "bin": {
        "zx": "index.js"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/zkochan/zx.git"
      },
      "keywords": [
        "exec",
        "commands",
        "shortcuts"
      ],
      "author": {
        "name": "Zoltan Kochan",
        "email": "zoltan.kochan@gmail.com",
        "url": "http://kochan.io"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/zkochan/zx/issues"
      },
      "homepage": "https://github.com/zkochan/zx#readme",
      "publishConfig": {
        "registry": "http://registry.npmjs.org"
      },
      "dependencies": {
        "chalk": "^1.1.1",
        "cross-spawn": "^2.1.4",
        "npm-path": "^1.0.2",
        "parse-spawn-args": "^1.0.2",
        "shell-quote": "^1.4.3",
        "update-notifier": "^0.5.0",
        "yaml-or-json": "^0.2.0",
        "yargs": "^3.31.0"
      },
      "devDependencies": {
        "plato": "^1.5.0"
      },
      "gitHead": "30d8802724c5494a4753b70bfd8f3a0c97963f08",
      "_id": "zx@0.2.1",
      "scripts": {},
      "_shasum": "7a9080437bb59d22a6fe7a98bb9220fab75eac9e",
      "_from": ".",
      "_npmVersion": "2.14.15",
      "_nodeVersion": "5.4.0",
      "_npmUser": {
        "name": "zkochan",
        "email": "zoltan.kochan@gmail.com"
      },
      "dist": {
        "shasum": "7a9080437bb59d22a6fe7a98bb9220fab75eac9e",
        "tarball": "https://registry.npmjs.org/zx/-/zx-0.2.1.tgz",
        "integrity": "sha512-s5rXNdy4pPxaXoKxz68V9bgyYty7V0eU4x0eAXejqqQz0j1KGNB1Tmf9tUllpTuKM3b3Vo/sUY6eNxikmmXimQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFcwhk3wW051W4CwUF8Qr+FGclqdlefPmdmaRFnZTyuIAiEArOtrqOvavqIAsR7TeWIsvxSoJXhGqp01929hdg1Fslo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "zkochan",
          "email": "zoltan.kochan+github@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.0.0": {
      "name": "zx",
      "version": "1.0.0",
      "description": "Deployment and automation tool",
      "main": "src/index.js",
      "scripts": {
        "test": "ava"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/antonmedv/zx.git"
      },
      "keywords": [
        "deployment"
      ],
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/antonmedv/zx/issues"
      },
      "homepage": "https://github.com/antonmedv/zx#readme",
      "gitHead": "9c8829af4f16f77fb8a815f75fd837f5b3ec1a36",
      "_id": "zx@1.0.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.3.0",
      "_npmUser": {
        "name": "medv",
        "email": "anton@medv.io"
      },
      "dist": {
        "integrity": "sha512-lHKbFhCz8qC4fdmqiuS6TIq3kmF4toN0yQ4CyasO+fRnX/FGrLmNh35Px7bA/iqIdw3O1BJq8EkM6IphPWrdSA==",
        "shasum": "5ad2124d5296c68aa2c83b028fd33adc0aab6eb6",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.0.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHjy4YjLfJfCdXFEjBfX9/hyIzgIN+0Kh1X5VETwig4TAiEAwh/W7rTdJHN3OCe4gPbtE//f6kZx6GtqirW4WOSCZsg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx-1.0.0.tgz_1516688110929_0.9859855649992824"
      },
      "directories": {}
    },
    "1.0.1": {
      "name": "zx",
      "version": "1.0.1",
      "description": "Replaces bash with js",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "scripts": {
        "test": "zx test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "uuid": "^8.3.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "9b801b48b74ec00e38d84f8d5d281f93d611dca8",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.0.1",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-Uob+QYTOoVbDgBRcka0uSwI7Y47Ym4dvTGMhplZGSL/hmo7i+klOvXJJoTFYRlSJwuF53oOQ1re9bIRktjOPmA==",
        "shasum": "fd2587478cf9d7152c6e872f9198ecf5cd6a2070",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.0.1.tgz",
        "fileCount": 7,
        "unpackedSize": 23631,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgkvImCRA9TVsSAnZWagAAHKIP/2bi3NkASsOedpegnkEF\niLbpuiCEKzp0y4l071KfjmGHaA7zKZUdfeQ/ufQdmbcZEko+9uUR102I6cXA\npcTepJjYDZEi07XIAycA3SwU8/fsuDvfZzpWvYJIU8cA9Wz/FQRVFdh0cM1U\nJaqlpz/+RPKricuiEATdmzPV6WwIuUMqV0k8pHXMUWiWnK5OGzr7c8VCa4UK\nZLVvoCSxkOn9CfitAgN3NIee1xb6zP3cCh0w28LbDxrxfbfCTMj00bDr04nj\nidAw042snb2q4xTrlymry997kgInmz2v2jPgD+rltwrRe8PbGvWX5xmi6mTh\n49iKQMIYC2weitDs/ywZGee55wCi0NLfSwmS9l2c9aflKuaUY563UGD6TJwP\nUcbAyLcva4DiGzZT1Xqe3ZE09Ea1Ip7X+eRQn4TtKwIrAxA62VFtRoiOHTpb\nqx5X73lnD2ICkJkbWKX50fbFiYA59OEoBnG/byeDfOMzV7sVH/PoW+iYdNOm\nqM72I38mY//TdU2PbWncXykBAsHaZ6Pqx4pe3wuhh0+g+pgdbArYVgP7ApFQ\nojuuDa5a06e4VxGjNn+5yGdDBTWCyZUOzw5StWFI3aqIXVDmVRRtzsgafb/n\ncxRMS8Fcnh9h9cPLhxgxEqd3mIIG/e999LHBjYLqOWsP2Frm6donAHpNu921\nNPr2\r\n=XqLO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDHxNIia6YBN7wiUr36fXntM1W3kqP0Qkv6wDJ+zIBGqgIgGX9gPTNAc7WBo98ckvVBuIYMN9kpSTlybF3d38vEdxg="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.0.1_1620242982225_0.8773104977577804"
      },
      "_hasShrinkwrap": false
    },
    "1.0.2": {
      "name": "zx",
      "version": "1.0.2",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "scripts": {
        "test": "zx test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "uuid": "^8.3.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "69de40d8c9dc0f94517b2a2d789226a1022e95e9",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.0.2",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-Pk92wucVbnOyowMyUqPO8r8Ml7siwzchInbPVs0wEAQwNPMO/ILCr8TThHUavmkRK33lv3n6awSMeestDn8CKQ==",
        "shasum": "01bbebda0d6d0c4bf66537eba8c8b585f92f10c5",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.0.2.tgz",
        "fileCount": 7,
        "unpackedSize": 23797,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgkw7fCRA9TVsSAnZWagAAhcYP/1g4TsIcWaNIHX8r/mFz\n98ArDxnnJ9w52zbPVrwDpUsq9F1IA1LdnlIcHOkJDOfRqu+F34+xNByi3Y0D\nGgsLV8C7mYoIR+O0CHC9WJKNLOnfJvk1KUGz90XGYN3btr0P5VOE8g1IaQTK\npIpYit+6so1c7300r9HWqzwSbRLQsijOjJvfayZ0xCwj10vHC6auRz9z1XZ2\nXBlv+NRnisdp4QqpnYMpLMRCBwIOchnOCdKpjVRtKhqC2rJKg//rJ+ezI9k7\nnHgwwia4Zq0e1zSu0lxuqKEhffERy13AXEtjvkHs4hC7TePSS9PNv9OlwXzW\nxLO5fBodO1U+wvOGztGlZC+ygTanY/JmgRoqcKZeqSb30VzxYyvENAtMUpjn\nh5/aTqFxO5gEkQhHohT/Y7vTtf+fSimm/wWtiHw7FmHjqNKV0cN6hz/Gyoa3\nkb7h6HC996FijU0i4QkOPLzFAfspKyTD6GznqnGioD3OuJq42Iw8Y5No5aYd\nWc9gywFWREBOoakobRnsbWiyaqfxyLwLbqvMvuaz098yTHr2H61MzaPPBq5l\n7s/8scG40MzaVRxeZRs7OfRYgz9uX2Jp5Z0y2TXuHtFjvrBABgNYMUhmEMg0\n28W8xJEpvqJilAtAOd2kp5HSjRh1zE79SYRYd79T/TeMfEv+4n6FL+bQqWlP\n+ATv\r\n=YE9x\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBrxJWuIMLf60gs1N8oZx3auAoIB4hVwnUFzmZIeR2hnAiEAot+bavNmG4jopGjCKLC4l9UZWqFdKrPpM15DrThIDys="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.0.2_1620250335042_0.2249986154309389"
      },
      "_hasShrinkwrap": false
    },
    "1.1.0": {
      "name": "zx",
      "version": "1.1.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "c679289cdb55765eddbb92db801b3c3ae4b70121",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.1.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-dF2JC9YYqDO/djge9WDxzkDIb+4px+W+M24NDU+yu+s6SElFMnqcZYjAFpr1dKfgee09JBg/m/RhSyRuecxUDg==",
        "shasum": "71ab2fec9d091f12d63fbbc0fef0a914623d30e3",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.1.0.tgz",
        "fileCount": 7,
        "unpackedSize": 24482,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJglXGdCRA9TVsSAnZWagAAXGYP/1qvrVljaT2hdUfrK7OH\na5QFVE7QKVD1AEPjEK3wRlFYOxHuUzEUqO+5PIiVhM0dpSPWLzWJ94PFjvtY\ndh0ygGym1K3DkLB278Fiu6IPTH6sx3eyhLy+bTFT5L26CE8QckZhxPniTW/C\nPWCSUxVH9LNeVejScnK4bsMs1pL1+E4u5wqusbIsY+6sPGt6JNFvDZYlAR8H\n/kv8n9gymXDSQ2vHUm3fwTqSRSUerYsF7wB6WoWmn4bw06hbJzyBNa9S6wck\nqEW2czJL09lc7vUyVUJHpIpCX9qj+grYXLoxiB2lC8VQpRljavlXJR3+vWrR\ng1hY65AojsQCAJFoxmjUH7XDr09C7BhAh1skCluiRLFUZYGszso15Q+lqFLX\nbD9uJjsHMvCnH5ioKASn4X+3W8vdtxDEBVLgEmweUXiDlVE7K5c3iPBcT1m7\nDzip5LwEsloCx0StbVO99eh1W4bjklrnadS50Cg67gxgga3h+VwMiwXqF9Zx\n1Kw4mDY5zt2vkDtC+9fd87EHOzWMy0USOZlRG8s+rkhFs0I2JeMw1wHTSdz6\nOBEQw+UV5SLEpjIrneyNpIHWjc7hc0Z6lL33tlGN8Bu8l/NPEWgOIV5S/TUa\nvQH4ZwuMOK40x+prDvCNjBnlKHI7bi+e94kza5yPLJlVWKcqShcmTycDCWV+\nPvgl\r\n=r6Ma\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDFTvOFqKhV9SP7oaXU1c89ky3eIxgCcgvfFUf185KKfgIhAI+MXkDiX2xo8MU2yLyeuWZWKyu3YSMpf0aSH+6ZqYa8"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.1.0_1620406684468_0.15582782562611164"
      },
      "_hasShrinkwrap": false
    },
    "1.1.1": {
      "name": "zx",
      "version": "1.1.1",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "f021edc09a7ff83e613a439bd83365aaf5e0904b",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.1.1",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-flC5glSbGdIJlHFsSEMGKcRvaJwJUQgb1ux8ofc5g+g5EqUW3LPFo8EJrR4eurCfmsKMv7a5e17Uh/edrC8aNg==",
        "shasum": "f5ca18ddcd1af217200feb19cebe24bf7b2ba8d3",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.1.1.tgz",
        "fileCount": 7,
        "unpackedSize": 24490,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJglcRVCRA9TVsSAnZWagAAylYQAI6vdVktDCxZbdNAzXwu\nSNJ5H4VlwYYGPHi3lcXZvyh806hyBby9rS/Eks/Vm8dnK2ZEDtBLx3k55q+G\nP9Iw0yn7Ha7nJVj62nbBBAMIbEAFz8Roakvuc0jAMhinZ0mUFu7EnHZw72G6\n4a00LdQIsQ0cSqlddvdQNGOnF7qpRb3QxD4j/ZtP+COsMwux4zp7mqYHHuev\nFwSq+FBUZ8eq3vy7YGmRbO2sYTLMfX57P/MxvsVcwGXfBsY0ebGL7X6lB3kZ\nGzVAUsmVgXSNkTRq/E8pNEI9aoKOBWK7Nw6NwTwsZK1kmSBq+o7UYHvNul9Z\nTWGjV3e07txbJGI8KGyxO/YjrVBk3dXkQfSOcDnH46QsKXN3xHdOfofw0XFW\n+jRc2ZdtEzAFbprwAAoItzuxX0BOGsw9I2aoMcCmNr2y5ombtX4Vmz/I+of7\nfeIYIvJF53jB53dsjQj3fXep8uwyVcP7xRgOxz/+V7QXL4u3RLAAhnlHiga1\nS7n+Anom+0pg0lWd/HNlYzHoC1lQpYbN1NqLN4T/oQY2C+QxiJV5fUxtOhxg\n547KI0dnCk3+H9GIk6QwVJMio1FUQWA/hTrirYbmjiWaaP92i7PnTX7Yl1tl\neeQdREzN/WAl5HtZbhTWsH/blu5CyQ0bf/74WkO9gl8ThxtbIFlaoCYZat/v\n8G3h\r\n=3n70\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCN7rUKtLzz+/E7iPn/sPkatvnAirMcPLaBkUMQMAqBEwIgcPbRcg/oxGxtjBeA26YzGe6TemWPMRZQ8ase11IY1M0="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.1.1_1620427860781_0.786152357724293"
      },
      "_hasShrinkwrap": false
    },
    "1.2.0": {
      "name": "zx",
      "version": "1.2.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "24fe0a6f3e4d423b38ac016f5ac575f432e6c667",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.2.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-CGUsE/fl6bnMz2dVm5C4IwE/Sa3CIOCW1+kCyHCeifb3Q0+vgckbJpixKFzCH0j3wKvqm80/BFa9FP2k+Ym8tQ==",
        "shasum": "16fa92c99e6394e6b25d22cce85cfbe46e769331",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.2.0.tgz",
        "fileCount": 7,
        "unpackedSize": 24953,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJglqbCCRA9TVsSAnZWagAAm/EP/1V2Hy+nhluQKQo1TDQZ\n1RrEl7o0JX3qT2jS1AEUCClxmAWYeb6NiSpXR3YHSzWfl0y9LL8ZKS6wtIwi\n/Q7/yBREvnt+Iaf+kY+Gka/9ryx6BB00YtjHCsWl3VdPQ2ODOpJ4nsNfsWNl\n425dkFCGZI4xX13caYCKONT2aqz823zvAWuhtDvEs6+8iXl/FtCNiSY/LJEu\npFGBW5A8muVTDvSyGz0dk8WphmLwDzudwhpkDhVfsiMkm1dAdPAvffreSUXD\n5bc80xM5xGVXvO27avv+ilfxtyZpZwrc603GMJOOTKCNWxBy+tc+VYT7GuCT\nnDOn5ub1qGceIOILxW6JWMq/6dI6yQ9KOuRsBm7K3TVux1iFOYbIrGK9al3w\nY5cnGBz+SAoLiJyKWm1oJZ8f105uGcPBqZPOBYKY6WXtxFpg+KbuX77mu6Hn\nstX9EKEiSqSRlknzZmuvP57yPQBRxcX4nEhcrjjGF+NnZQvXOStjzhpwpYLK\nsGv/YyYMpG1zveW+OAXI14f4XVkRwQo9Kg2OOmVBQnr8EAf64iFFaZ+1ftJU\n7Lt3OHa+jSu8v8DS0CITnK+ajs2nz4FgG/SbW2ry2sTKqGRaqPUXo7E0Dj6y\nI6N6wbhy4MfXng04hmaYmBeeWvqlo7d65wX+JZLWWHYhvTa/RyybHC5C3erZ\nW9Vp\r\n=B90E\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD7w0HNxanL7Yjc/PRWmICaeWn+MgS6c7bSB2D4b8XEygIgfgxCXsgLPvn/T7Q4kr53GMN8axWFPYDhH1+6kNUQ+RA="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.2.0_1620485826215_0.13051283482112463"
      },
      "_hasShrinkwrap": false
    },
    "1.2.1": {
      "name": "zx",
      "version": "1.2.1",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "bb23e6c9786e747b8e28677b33cb6c85f3956661",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.2.1",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-7w/t+BJD0sph6QZ/7w/Dc64zSpr5a9UbY+fXpiEwTVEUZZdY25QdHa5g/hdVEucOV+H4B1geC1cUbrkEwJWrwQ==",
        "shasum": "1941578c116c24bff4d6250f1f63974145716a15",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.2.1.tgz",
        "fileCount": 8,
        "unpackedSize": 26064,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgl98zCRA9TVsSAnZWagAAUTUQAJQsRJvGX8ufGAkOwj0S\nfcte7C/FX7LRUGqXfuCjpbC21MdeN5t4ItnlujLwYZ+fPpF46xJ5v6qmdaVh\n15ZFZoEGWepxqwSzgl9m1VBaO2xb3tZKr8zm2taoSboez8Pm8hm3+5deCrIj\nM6J0yjLN2oBMkXDhBTnKQ3XId3N1A8PfRIcSIxtiL/J0NHpRuBxlm9CHIsRQ\ni/V+CSMlMrX2Rf/qiMUzK/SJI09n9bDDScBzjYUJ0Xx0+cy3CJMeVLJ5VWdb\nUlkElIIVVmqtl4eoF22IDAE7+q9B3e9FyEx9Bt9y8BAIBlgm9pjXFvB56hJc\ntGeE6drinJD/Cz/E4YTc+SNp4S8uJgdYdSDcptLzvrJDg0QcWNVdjM5IHZCV\nEVwWGDDnU2mL3XKWaXxC0qtnmAMGFUa8/p+VVSAHTLatV8muTzv0wZg5iTSG\n+4CG07IKN11VgMklcRaiVO1Mb6cz/EWEV/d0kwboOEc1NyMTru8OX+hxEHU3\ncRrUJjHMUJ6AGcB2TOstRTEd2wJrU2W/7r8XHFpVDq1k3A1iJdZRzDXi2Bfn\nJmPnztuGa53L8TIJg6oGghiZ9Gy9zWunfGnisKrTCk779G3LTYZ5ltW5zP2S\nZaXgTkasC2pxWvgXmbAWwkvyPkMjCFWgNxJzDo9C2ZNP2CV+TiESDFjqBTNr\nZCZD\r\n=G1Ku\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIANobbdMrW7AYhaSSOBVZkAhZ0gwIwRxi7ZaNr/P9Zv0AiEAgOFmJ456fq8OuDCcgtHWThWNCjdKhD6YH/P0amAI9og="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.2.1_1620565811010_0.24811662908812426"
      },
      "_hasShrinkwrap": false
    },
    "1.2.2": {
      "name": "zx",
      "version": "1.2.2",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "30743eba3b3e1407b8780808e201dec7dfdc6834",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.2.2",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-7771+SGgbrhzObV7S2hA1gTa1EkTUHWpkoIKJu6pqqjF+qn2VPkVAPNnWj3TcASdX4QBgTE5Z/e8fu7F2Qvy/Q==",
        "shasum": "a52bf2812e945661b36ace924a3bbcfe7dbe65f8",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.2.2.tgz",
        "fileCount": 8,
        "unpackedSize": 26207,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgl+HACRA9TVsSAnZWagAArb0P/j8aYzLHu/r7bmVelPxh\nwewstFXF1X+dKhZJG6fnFaoemv5IiWHIa0zwYD9xyYLDvnom0QvkxmussqWT\nfIJ/pGf2pWvXsnkkPO6P6osxnXWd6bxCER/M2+8ObZHE09nGvUXuo8UU7jpr\nCuOsdnrmtg/p0otjzdQkpkU9JBCzNKacbNbIS7dNvYyoLY5X05ngZblH/gXF\ns8r6iIRd4osWym8b8wYzF/kirKLK2zRdRQrOIunsTh3pwe0Y3yfEnEd78Cme\nlNzbzVNph+F6xTbR5u1ak3xE2U3lsMDFV+9G5+FdFGAWi3vdOiIDGrLH9ZrB\n/rP5Yp8lKs+W9tDzf6lU3f/R0Q6ifzPD/eSN7tVTFXo4i5W/I9Ny3lA+qB8r\ngjap3191PN42lfjqIZXG4l1jxdsaoZBH2oijNVvRn7z/8Xssvm4HkqfEG87V\nVVi5ZUgAEx+o7OMP7NnWTtH0uwKReNKs8ajZLgFmjp1aBeZ1QIlr6r3pIBeR\nEUYmGFkAlr5HxdJQ9o/A9Jj2mbsVKMXjCujYu83wr++qWT7IoZvvSMlWsxXu\nmKVpU8oMoEmW+KC1bdzh/atP3pF/vNsxz331s65DEjCk3V4BmD8DrsAlgHBy\n+azE74KT9uALGy8gCFu/UQ8oY6RJ5bcp5s4zr+foHMFFG2T2V07dX9ny9HPy\nbH+c\r\n=GkT3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICICppbDvJHIKH/BK9ox/ZpwWdk1EPAR5+7NV7D/kpoCAiEAjD5lDkRKVI6SxQpaTaV7cj8hmgg8JJZ2WO0MEPXXaXQ="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.2.2_1620566464196_0.46810499057198673"
      },
      "_hasShrinkwrap": false
    },
    "1.3.0": {
      "name": "zx",
      "version": "1.3.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "641804a735249cd06c6da203460200c5a6e9133c",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.3.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-RzGZK8cUN2CA4VkAN8x6E7mtftpYnPuow/1yeoeYD8x0fccr2EQg4p6WBPzQ91ZG6nN65INllro1JqERnSCCGw==",
        "shasum": "e3bca4d0bc41b634b80c895ecdffb6a97098fe4e",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.3.0.tgz",
        "fileCount": 8,
        "unpackedSize": 26327,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgml5TCRA9TVsSAnZWagAAlSYP/3HD+8U2lvvh96GsKxDv\nGdbMxRXORnirODEQBqBdYLs+EciW4Vx4q9OXWarklsry3rJVyQvg1/fwLrBr\nKDGdUYSVaAliMNJM+vq/H+h8K2ZNxg/FRBUqdm0F0jmWH3MH7zuyPpqRktkZ\ndYnv09AOWDOkeaJrtoJsO8/Zmkdz3GTCxVTHnST9yq3+NcHTr7bVeK3lKVjJ\nnw7P2wXpfjh/9N5RzBgfQ8WvzsL1NJ1CRpqd8qZcG+lG5XPv0LKHcNoTEEqz\ncpm9XxlGPjBvXwbGoH6FTu6jSE6b+nXDdB3vOiuQWtz6kLJedzQXOYw8FXRq\n3loVwCa6buElvZeaTfUmg6beHI3o7AyPM7OAzjomysmFKw0WbRZGnnE/JYSY\nNKOJ/9aA3SD33VNazdv2TcuGNW5etZFUJ0DkCGMwO5kEqnbmjAcUZOV2ciAb\nd3GtKX4A1tV7hqpHZyjeRY3nFGgYkja4ymPgdsgAvlKPvB0dzJiAoT5W1AE/\nUA2RI50UnoF7WvGFZk/qMv+bj2xo6yBSN083odZFxfLJ97maYfpYEW8OzXoG\n44S1pxibipzVML21Fa/r1dOlOSiGNqhzsIDyT2OnqPQZ91F/1wpOQZxuMXuu\nXH32I8m0B8YZzYDR/E6Q1N+dK1C1q3CHloH3HQ9tPFDN9UC7HRo+FsDhK8PE\nR5d+\r\n=RuAB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCpeoZDThJyQTMh2Zm6GUQCUWu1i1RE3tcnSR5P/pLgPAIhAJTpYrgB75DHucVLT+bDGj1V481syoEOYU18IupBk8JS"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.3.0_1620729425731_0.09477678711328452"
      },
      "_hasShrinkwrap": false
    },
    "1.4.0": {
      "name": "zx",
      "version": "1.4.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "1508858ae964e49e0e5667860f7075b2a6aa15bf",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.4.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-D5nVer2mrzUobR+hiNuD+alwwQubfYCjqiZugbCzewoV9V0uVYVb20LemXMKdmcvoTuvoG2VkppmET/eGY7gJw==",
        "shasum": "e5bd68f95a91be8c89290e9ec4770474df789dd2",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.4.0.tgz",
        "fileCount": 8,
        "unpackedSize": 26241,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgmmLaCRA9TVsSAnZWagAAc2gP/15/zdAlh+B3TWtzjBwZ\n6fIxhHZwO+pDeCMfjvmaZVnrmdoWLXmEzW8L1YOyG+FY5AUrHjChBgrUcdY7\nd1PGcRMzF43ItoNEtcyMT8ZStixrWby4JyNtj/5H2JhMX6A4/sBp6IZnpmC3\n/TJnazSSWQ54FBH+LSPOgBh+js5C5OKJ+fft9kkdXZarYz7n/wbYATlGuZmA\nhHP8mTr3ECuK8I0Wmi6iOQsGDkyFqIc4eXcWWDbF+LDGLIpq6I1VCgQwqRFM\naE/9GAGfPqlhQw/ui0iiwG2mdwt9W499k9g9QfohrdQ+HN5UO4BfCxAzqG0/\npSIOkmazOuY3z5bqmJGRwvdEd8Os70Gq6TCXmPPOsMHJAWhDAwK+/ToYK7pb\nU51AfrraoxQrtZmm8yepBV2VtvvSzUDxi0JCapIweP49u/m7NfaAHhR8+ErZ\nJuQtdhOE2Mdsvx6H+9ukZnw4VuxtEVYSSJviB+pjZbnWmadlRvxqx07iWhNo\nLhcP2JWb5d/hAdliSQLNW9wqKt13fIMAD/7F29Xyoa2/Y00To+64OLYkS2Q8\nsIOaijRus2vKIH9ii2ogL8h7gyGRoHt+vSE65PmRDPQxgDs0IKlGeU4PAwzU\nFlSyq9mcz7XpdSdTDck6Mq4c05WKmyW9eaU459d4WsPZhbFyqJXJvss67P/z\n0eTZ\r\n=wBuZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD61tchCgLUV+RzhuZWbDzniN2UwMTep8UFor7m7r7mDgIhALkgvLdSqdDcnPbynYqIQZ8fUXKR6DOvJy4/QszpBIrV"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.4.0_1620730585315_0.15199305730205492"
      },
      "_hasShrinkwrap": false
    },
    "1.5.0": {
      "name": "zx",
      "version": "1.5.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "de6e0e23048ea406312d7916f7d0917a42c7d8ba",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.5.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-Nya5XwXtOUob9qrY102d70gpaKp5ZjJpeLL9GQF0hPC904AzNZLni/8Vh+f4w9tDq1HnAlT5uA3qjyS/Vi3E1g==",
        "shasum": "3093caa21deb042770bc6e12cdc723e2530eb927",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.5.0.tgz",
        "fileCount": 8,
        "unpackedSize": 26780,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgnET+CRA9TVsSAnZWagAAZTEP/1QNy1X9H80uy0A19AdF\n0gX92twFfjqCw5CeJzgH4EItH8t/GoIVqUcMXwLTZo7Haic++qdUDGhyWFAa\nkMpHxfstUfYpBNQz2aOoUbut6gPQiBBe9x79CjSdgxP0SnWxI6cqkChJiPJ3\nmWNIRdEYLDiNGvApWyO4wRfGGmoV/hg48lbFnzTQY+PCOFiVutUtjx7FM+hr\nmJy+B8ExhXSJkmE8h16Mziw84xFDvaKWq7JfQfn7m8J7gjJRyhBOz9GGHkK5\nprBQLmcOEAb3W2iIoexspbRyu5dbe0hIY3ZbDXh8fBuXfM71be3b8q7yTuae\nE77fRM8zpgegRvqiY8TS/RhPFsq4CIeu/sx7QSzWwEiopw1aXl13kXTFYTqv\n0zUV8S3MtLclSRKfQVHNa5rW60PB0mE/Sd+JINna7MAjh+KXL+5h7GGX+vaP\nPrQWhlR0wegWYwHkuRPIzsNvJmje3CvaxqtJ6Vh+syOJBEA6Fw7+g/1OL2HM\n/nY01ZcaIzn77LOoAO0L5xqgs/yJmCZZfq2j3EojZaLwb99Hc1bj6Ae2NPgA\nCe8RXImeX2JrqCk/HrjUkiXZgCVWROWLtb2IdQprrVf9iRos/sBAJXaoSoxi\no60cpp/JnydL4ahFQNeXcUF9l184BFkV/dYgdsI53GruIQ0m0K7qsxFHaAVY\nwyD5\r\n=erSE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDZnxZrYV5srEkt6mZpTh1Ng70y9hSBkNsqztHnx8mvIAiEAibbzOGYlFPwYPucwTb8EbNPl6u8BG/ifSjM0xJjVgfw="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.5.0_1620854013983_0.16515016103321511"
      },
      "_hasShrinkwrap": false
    },
    "1.6.0": {
      "name": "zx",
      "version": "1.6.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "b20f5f249833919a7111256aa3a9b25ab4895823",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.6.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-wRtHCW024oXXX5ny6OZI2gFjPBBYU1UisscOERdGIJHBpPBwk5FDapjRZxJ6Fda74xC5iwPJugsn1gccYuIb8g==",
        "shasum": "acda7b2e28e6b079b2ab72db8698bb1f11fc1147",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.6.0.tgz",
        "fileCount": 7,
        "unpackedSize": 27124,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgnV1ACRA9TVsSAnZWagAAPtkP/1VjZI9bWNGbfg3oTQv8\n7jeL3X0Tc5TZj8I26ECZFhfWEf3q34UWRxVjEinY14gRgVG1DOVO2EVF2StG\nDV5qx5+EZEWO9OMhD3lPq3ydjoPOlMPUkTAhTLTXr0GcQhogJ5G91Sbsnagd\nHBLTmyZAgUhKEReCL65aGaldb8ehybCD5dEDi0cVcRYsJygjMxkRfweQdQyS\nlCy4+ISwpPklXpQ6puJcQp/XyOXUyZejlc0eLglKtM3F9hei0cjvEIBwvc6t\no1O3L3bXNlOXUrdAjP//10PxGCa1dvFCq8W9OO0gllGqRWj7xzsmjKKGplDC\nLTML669hPQEK75DdLOe9nxP1ISTVkZxGEtKyFD4/F1h2nltgAnyiihEraxon\nBmU8Je39BoH3eCJzIS25khb4EL0BZVE2JVwqPNSaFRYIDmhkrT6l7rRyX6J2\n4lrg4kvesbioT3GeGFTuJcp35D19x0R6Y/s7dLB7HU2DzJyYyVYmjzp6PAwB\n7JaNdDeE26dhJIZ8Ypmsr3sGy4XhqujyFb28SCv57ZnwGtYXZpbAQ6rLvW5r\nZsPmWTFBWHUSvG9w46u3kEYcEZsGJl4zCBm6qf7Kc0FIUlLeY/TMQkjELZiA\n2tmSdU5nVq9S9Jl26OqcaqoHxc7H/bfDCuI9nsgIUEOIAEi5ikjtMUBiNswQ\n0kMA\r\n=72Pn\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCh8fCW5VZTAX6veWFcMZ0UJWAkdKdbbrPUEbXKjDViswIhAIrpr2UsAn1Tcv2ejN7533PhSyTRrgXA8WmDpAXPoPLi"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.6.0_1620925759914_0.15552957746890184"
      },
      "_hasShrinkwrap": false
    },
    "1.7.0": {
      "name": "zx",
      "version": "1.7.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "uuid": "^8.3.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "5429b40b7be5049ca01340f5c1936f89961a8045",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.7.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-5RQrsX3mi2hWv7B/HPIxELPz49tAXkHGPcIA987uQ0nXVPcpFS16I61f93pmx2icyuM3eW/raB7/eaE01ENOkQ==",
        "shasum": "9ef417df7db83e97ac242b55fc6ed024973820e8",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.7.0.tgz",
        "fileCount": 7,
        "unpackedSize": 27789,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgoU6VCRA9TVsSAnZWagAAz1MQAIVia8J4gPQBxKngjVYj\n3qFQzLNLxVan9sp22awAmRXUi1+dHfIJJvPP93HwS+8h/83lA/of9RviS2OU\niEXFsC+zM1m5NR00VQZNNUkKBL8CijahTIC1DDjjBskQgpRc4MTxXb48BQ4E\nAgQTSTzGbXwHrhzib8Hn707V41oAe3cvh6MvVXiWr6rcXhwmmf3vmUnvj2gN\nwi5OWmFRpntSefvL6niyRpyhmKv7YsZd0s7LT2broyTIeF5yMutXj/Qo987d\nfeabC8xfLVMPPuXBRm+Sri5Xutv/PRu/IOF4RYZWprsQH7Yq8pt0eUe1OCP1\nayPlrWDrgdtBc9j9Mt3v4OJbSaVhEtQSLZ/chxUC5LXHcI+0PhIv0BhPb56B\nk1EcFPzN6Y52ElZEfUNGzFTsDdC1QptsSxNv85nDCv6bvhFGvTUo7J8tGBzN\nSqGhBQ7YKCet9LX8VRhOUkWWb7JmQvJaGNl+dwxduZj72Fb+rEIatFOdPEGx\nMw1NdDzCNaY0lLQXTMnhGN/Xx9TXKmqy1NNwMgNrjmeFGdCZpaEVYzqVpQkq\nGlOBgi2Oqv2k9rqzM37PiSY/GdtPToGnSoSw+BOWGIrJljTZBaYWRYhxTHk/\nqEIQrncNFNcJdWYgqTS/OnSr399j8hiK4dCuCJXiXU+3xWhe9/+SbbGpzwpu\nX7ES\r\n=OvJZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCdcrgjZs9h1QIvBr6b0SaiEHGUMKr/9WTKZUkCzbqqVgIgL4EYft+1ocyQEGe0DQaDlXLVBH6RO3lerBQrqR1fNU4="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.7.0_1621184149045_0.8009075461067272"
      },
      "_hasShrinkwrap": false
    },
    "1.7.3": {
      "name": "zx",
      "version": "1.7.3",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "9f9f5c2be8018a003c2d57d7844034e24ee1d24e",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.7.3",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-g3Hj4q6gu2854R2YaNTVoMmwOQArlLlys8VhLJvJcY08tLK4bxJb8+PZv4oPmtYsehr2DBmWNi3r0En8muBLKA==",
        "shasum": "a085958a06fa73ccb6a1f0231ba72330826595f9",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.7.3.tgz",
        "fileCount": 7,
        "unpackedSize": 27945,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgpLuBCRA9TVsSAnZWagAAHfQP+gIfm1td0UctqfjmwALT\nufmtEteSGZ9AvF4wFDCrSdVLXZonBGLayaSxOi7LFhVQWaKzxZj21fezcJE2\n5QpdjlZ1DUCsGxoGojpR0HzmQO9eXcGG9R5ovzJ9rQajSoP69q5smOzd0h0y\n5fUugzw0vdzVNrZXoxUCYDbCvPe9/9H+QvVa8nAmSxBWURJzviAWuT/1Wfp5\nB6+xRA2b48BwVtIjX/G3fWpskcXY32qunzB4DjJKVDYlFqes4Up4rg8g27Fl\nctQSiYe063PXj1vqE3w/rAcbHaxvmWrgYrEbXqLx65wIF0kc2rJkk3YqcCNL\n4tFfvkwP/Aud+Y7Kl04P1/c5C7/fKIprYuWFDaEQGjjYe1d1iQuAZLRLPcVR\nNuzfPwhjath7csvRqjGM+iGAKP3j/YTwJIEInKjpOUkw0+daHyZQdDsRmrLV\nWWdXDJHBHhbCfJiD+U2kRrivXxhahvBbJq5K7R8sbfWinW1VSTQXgiO2ywXm\nVz2v/4Zizi+bAfsaUPQT48RGVMgBZhw/Dk8CO/lftBtIcRf/P+eXeXXpUbOR\n5XTSrBk8I4PvOXUps0NCHPFLBMSlbsX4B16iNUwa3r3mik9G5nJfEiENWTZf\ncC5RdQcYvhhvXvQ0kzoa0PrSRShAZhhwwHyafIEZwPLKWUwgMK2ajqsVt/v/\n8BPp\r\n=8rRq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCd19Vu2WIqLquTfR8UtaucO9tN3dqKaL9ngrUlSr1kaAIgUXKi2SGCrsuugizvwvgYwyuLG46zD6J+bCzWKvSD5Jk="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.7.3_1621408640505_0.585699598017442"
      },
      "_hasShrinkwrap": false
    },
    "1.7.4": {
      "name": "zx",
      "version": "1.7.4",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "61170e6d133995669523119ca6f363f76151682e",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.7.4",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-scbmXG6B81+g6sUQgN5C4qbcNyq2ez6YwbQknJutF1eteMw+VSEqs+LIZ1qhSIKb1Gf5KlkxgXYjoGO2sSfOJw==",
        "shasum": "d1c5964387783d27dae2e949768340361eee9822",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.7.4.tgz",
        "fileCount": 7,
        "unpackedSize": 27945,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgpLxKCRA9TVsSAnZWagAAYWEP/2ddF+xOq81LjZoL81P4\nUBJf0MfFpEZ085B6eCXECbEi2afCH2q3TGwkqbAMazq3YAQLwoEGoNf3pqU8\n/TqMYLuc+AS4KhPFVfTLPDzVMNTga9a21k+IgLanIE4yiLOdPFBTi5Wh1DZI\nom5tO6EeVdPMi3FaorAo0fz4VzVBi26s9/y9y1vPofLTeBgztEEzylw1KrG0\nZmoXUpM67tyEplnj+/UQSPb/MyIcfF1VmBz/xLmdS+XqjrmcieqJ/FxNdpO2\nW0uKtBiFJ31sLqsYo24UgfOpmQtkFSg/qSSxthZQ9YYTzk/luKc4tcUWawaE\nEjS10vmfotgvlnZcWpYso0mCuI2V54kSKETpJdqf1sMQY7T5FbY1VkGppzEq\nd/o2OCgEuf9GQ632PpwAFhr1U8zcJ+wAqTq8sPK3xZKOiCaJAHIIlnZ9amYp\nHBb820rWi9ppJwKb0GIqE612bo/dXzTHnTCYPEqwZlEuo8jL0fa/jpwSGyll\ne2S/6sTJUXLeSTaGbWZ2cll+Ul9ZcSC/EJhl2qYiR731FGuE7We7YSgm83XV\n6mSKpsfs39oeBjuazoRhht9pqklpv+2Y89ieZyFJ40roove4BSCAnrWWoSxt\nUj1dR2vRBqyqrj3ByQRuZ5YSijdW1FN9cXjvgCHQPKjKN0logPuF/GZ+YjUb\n0gnX\r\n=hSvx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDf+SC4WOMMv5AAWNtF/HTFpcjMtNykI+4hJ5FvOTRNLAIhAPAnQZpVvi8GBgtFaPgFK7z4P0Ct7PUduRW32s8I8wrk"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.7.4_1621408841871_0.6773088637675637"
      },
      "_hasShrinkwrap": false
    },
    "1.7.5": {
      "name": "zx",
      "version": "1.7.5",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "da85fe1c6455414545230b0dbb05d37fb7aa1f8d",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.7.5",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-NVBx+0KApLj54PoiuJva5C3as0wli3poBoOaqLb07NqBV/5xMjtVkziF9P8npbvwSguUpiP5RIqDTGgxGHuWuA==",
        "shasum": "225a0f86b2507ee9dd2193a0531f1b4ae09f08d3",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.7.5.tgz",
        "fileCount": 7,
        "unpackedSize": 27945,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgpLy1CRA9TVsSAnZWagAAolgP/22O2P4baNfav/dPi/Nt\nOTVUPQuMs/+Zoyq4llaaAWrbCRpdjPxY6ZNU8mvhhNvTzY4LENDKB0L/cuGg\nkkCtQMmgvGqyOdnzWiYhJuozcgbO4IRvpHbgWUxD+Ml9l/gArLlSAhU96ZOF\norWCcqibhkNOnog+nl6kOZbsMTWsw3kxg4VVIhJsOluAAFFWxkNRmRsjHAdA\neHsgxvLeiPkiBkHtMTtunj7lCzvisX1LqVBf2R7WVwFl7nlrfstse4GM9Wdq\nEsjoT9OWKeQqfwxlk8Gv+nSLawqEGuQWT9XRTrv+StXzqSBhXPhPl91exYOk\noMQqtg0wF8xIowMFZpeTboqeVQGkDlgyY7VzNolcLZRYRWlr6eDvw3uZ6Kjj\nEWA8egng2jDE4n+MHHdFYkedAB6qDApEKuS5T/Am2J7GlYKyPzD2iRSIE9li\n1JhnR9jhPcUpyk8h/Ency/DyKkP1hB8RYsuSg7ThMdYhpxPoywPyeUfPc4M0\nJDvJtkqqlFn7xWNnzPTcZ+t95I4PcUEIvgIqJgROFbjSFSlf+yjGqWSkHlmI\nCGtooZvdoOTmBjr5oB+L1/ebhd1VczDjajOUDxrQylIA6rHNyE8/19Ju+pcZ\nIoRCxVBrEnMJlkRTuewilKWYHV/jyLy6Y0bYHkOl4gtuPYVgc35L5rmgiKLq\n3hoE\r\n=IkG5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCepMpJcCF+7aGcpucAV6DMr6nbeNrq2qTD41MIzAUWAwIhAJvx4SisrSouNFMd38ZS27LNRnYxV+tW6eVgZvDE69Fp"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.7.5_1621408949475_0.6679071533912404"
      },
      "_hasShrinkwrap": false
    },
    "1.7.6": {
      "name": "zx",
      "version": "1.7.6",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "22ae215d949dac20d59b99f3291f872a62ef9463",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.7.6",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-F2Ur7Ibj29KDZKwo37L4mLOQ/qfSgFaoT5dKfIvVioy5E9prnBwkDOuFZNWxiJ8xwTv8SfnYCWXYOGGdM5SewA==",
        "shasum": "576824a5cbc0f4f24fa6bacba05580e0ffe8b7ca",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.7.6.tgz",
        "fileCount": 7,
        "unpackedSize": 27945,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgpL1NCRA9TVsSAnZWagAATfUP/3YApFUBhJw87AF3oluO\nKJzsSkfrZwZ7tCE2WzrMdXj9rRAkSiu5MvOaYFV9L5fTVVnvorm+awAtewbt\nFLUiW3zH10fvCfPE8kGt+YlGy+uTpSeDau+TIuW9rQPtFonlLS3mJm57i7te\nh3oPFP/tog3qL8mmNMPa6KE46wXEBUYci32Jje/Qb4HvW6gknzyjFKuTcC1J\npEQQ3laIlwd9J7mzMkC9vBmoa8GgchmEOekjll3c+u036Iz/BQJWDe0t0L9R\n5vVzbBASOxEuDYAWLQSknz2W3PTT8+tvOZSdlEH6vEm44MiRTH/vzGR9R2hs\nuQTQPcVu4Fs2CuerNSzKEdp3Vw3QXqvymJS880waguL+cdkHgcqaTAFnu+CP\nurxyhSg+eDcks9aQcfXd0ILzz7EIMXNdBN/ravZge88EuBTVVky6ux4ZhgOd\nwYMJ+QPa9FheGIaIf4/o0+w+vIOlUlZ3+O7c2SmBPSFWN5EtNoUZ0hgAMxOS\n1e0YjIuWzm/OW2ceK/F3qQy3gmjXCsAfyBxCn6AegDM7BGEzmqmr4vfV+7fK\ng2lymL+LRkgXxawIOz+8CwF34e+MvNINUDA8cGhIKh7rN80CpISclYjRI1Ox\n74VBd835+CfxtmiAQhb64C6oE6ciQ6Rb14D89uZ18GBBijb73VBpQTrAHypn\n6ulX\r\n=6NDH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF4eToemp7qpZqzbpG5is6v1IGVTLK2loTeiVjcKQ6dEAiAgp2Cus2xaAwQI9+xITIDSFx6lzMg0ZO+cU63MRppiDA=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.7.6_1621409101198_0.5664047707509976"
      },
      "_hasShrinkwrap": false
    },
    "1.8.0": {
      "name": "zx",
      "version": "1.8.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "7bc83c20ef058583e3e73f7a460fc2232f04d6cf",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.8.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.12",
      "dist": {
        "integrity": "sha512-NcNA+c+xOoKzNjkcotI5DTmtT/tdzaxP8EAY9JXpCW28lcFPtdEFDbCzqWb23T0X7G3SiR0pONVqYXCn6eA2qA==",
        "shasum": "dc5893cc5e433afe708292bf44da29ba55215bd7",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.8.0.tgz",
        "fileCount": 7,
        "unpackedSize": 30137,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgpW4rCRA9TVsSAnZWagAAUO8P/i2RdKFP+GavED124f/K\nfkPbiqc4X/J9Zo7Eir3qnyaqL4b9EtaroBkqqujhCFwByT1K0qbKLWlpDCVO\nQx7eMG4RgkMO+sQFctnmHR0tychHtg6jwjzMA9LbdNiceb2bs2ECNTVR+Gji\nc+gtDStl51s2+g/rLtFXaYl4/Axyymq5pQ6GKI2WTlmMUNCA6o8MHObyp8eZ\nJHoyDxuT1gZnDyDT/CnEMt5jsrXlvuJzE27yar2vmAQSf78AEcWitZu4LFmJ\nPaGNDluTsZptwQl8kAgp8jiYUK8I4Glo8uHpChDo6u5hxKHfVhEnCJFbzMWm\n7Nx13vsGAtSoeNnlDm7uLIYQQqvBc/10ts2Hqd44fNucjdZlY8O28fpE3lA7\niWGsAfUnpqPXPXhmlwm1KVZJ/dMhAMRQdaLVoK+OXvIxckr6YNLCmjBduLV/\nTb2l6kTTteF7j55SwzOWrP2soqfbeMI9wx+tHssVsK5DsLPh5P1Ft74yAiK+\nCSZg4RYz1Jc5gWVPIJI0MJCkDWNyRmx15QI7rpJu6HZWOTaCzxFzz4ntOEQF\nU17DyaGUZh4FndeyQAKP5R/Zs5+gr7szgsjyn+HUdJ7cKPPWuhjspGWxXLGw\npgu02KhwMErl/DQob37WX/ExXCd2FE4P0Pj+0c6FHpqjqINEKU2KF4s2PQ4E\nnSai\r\n=IhFv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCMsguJcSVSOG1YTL9W/F5OBYqDMVdYJFO32JouAwcsTgIhAOczQDvWiQmU+SiQQ5lAGnjJiSTMr2mcQVQoet1nrnDK"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.8.0_1621454378524_0.3343158765606553"
      },
      "_hasShrinkwrap": false
    },
    "1.9.0": {
      "name": "zx",
      "version": "1.9.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^15.3",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "5e10a115bdb424c93e6f8e92d8e37b11c92399da",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.9.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-O8Zi2+F1KKdtVSJndFmHCXSbdBkgn1L+2Iy0xF9zZ1J0ii0Wk+Qth1fITjVGtuRgEKoPmn420tx+ztLBfXOg9A==",
        "shasum": "9cad331868b2cd73f98e8941264da99ce4169bb4",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.9.0.tgz",
        "fileCount": 7,
        "unpackedSize": 32313,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgqR/OCRA9TVsSAnZWagAAXBYP/A3h4pGmhE1nov09XCr+\nqN4uQodTWvJtmamvcIOkZQU17vo/1PlN5SmvOx7lx0sgjM5hStwXTeelGF2p\nZYKonWh9q6uEOXFS8QHZss7sw6Y7c3ux0pFQKaJZvdgU3iWJMjFV0XV4hPxB\nKzNEOTwh9PMqzi/IS0qRLA8jsmcFO9B9ioGLbYHQyv3tTFw1iQSY29UTiSTN\nm3mRMYMaxHRKhcfegEtgi0BEkfqIso5JKy6H0J4n0vHw8xJWP+Ghg9dmiCkR\nEI+i25o5ZmhA+UdmoBYozGsznNNK39rsq45wTAYCGep+TrQEBpIeagxKobhY\nheQjToFx88cp8KJVY+zAkpcnKSJaDr7CCdCvNpwxJWKifXbEZytiGqA8xYFn\nsrAnarLK5QWsXHT44X/sdD5lpPbANo3pi9m/a6/og0XJt66jn0yLl65IvSJp\nhFHHFNBTp3duNnmN7jVyRtemAGS4GS1j3wTo/uvEwUFxetNbqWhEhzqb6FDv\nPdeDGt4zedqssLvxdirw3D75Hgf2nTpJmooI9/YjAIh91TivOMBGQHkkcU1k\nR2WNC/+yiFR6izxnsZ8R0caKu58QwXIUlqkIDZGwylwEpUJQ/jHK7qYBGFWR\nY3qJpKsYzAB+qBFHixllp9yUgiHiaoJ+srM20ZlJIaxvzt816b1ScBoZkBhu\nS9ze\r\n=v0EN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD5JrJ/eENX5/tEZF3V0gUiaoftAT5B/ggTAeTgzMJ4KAIgYYvqLOQuvXGoVmmbaTIBCMx35uzMApX4/wjJho5hs94="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.9.0_1621696462376_0.12222895553766722"
      },
      "_hasShrinkwrap": false
    },
    "1.10.0": {
      "name": "zx",
      "version": "1.10.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^15.3",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "78c04fac4b2395307d7d568da439e234428fb931",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.10.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-uVvxALcHLuEU7nV6E9J/Pptjr/Q9zimPaIHipKz+KNTRWq4dPXUiYXHGbd1yiVJW1Re8Q4xneVB5lDKj9D6t3w==",
        "shasum": "62f6ff09845825794189bfba4196d084e215ce29",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.10.0.tgz",
        "fileCount": 7,
        "unpackedSize": 32479,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgqXNyCRA9TVsSAnZWagAAl1sP/RAKAsAhBkp9420jARrj\n9G15ygTOJtOxrSIigUFPILEnMchmXxQ4j6YsXp97J0QewE+sXSyjUeBWJY/A\n7g0aOZRoxeMR+sgZkdDDVmeJGMlvoQ05LYpX6hJAg7RcavUA6R2/OewXcWik\nnWpNh0BvlhLXftp8OFEujG3QJ4IuqeI+Xo7ElKnNCCTjBOwqPpWeoUhT7WC7\nXAw/lUakzP0Qe8AKafD6a6Jwyx4Tc7bY+kzRkiRY2Ej+14awKbMGhQ27IrWH\nxGamDLS+ZOlXIXkkcmjX7kJeccsoBInOVPTQ0CcBGFaN25m74BWDf3aZE/Q0\nPTatdDAcybEHstdq25G0jVBv5TVmLBAGDd3M8l6//uRg5Czwbz6M4OeBOPgH\nPBGFqL3+ljgtBJIq2U+o8AKnxmdccINbAsKSyPmqTAGeOZ4Ru0SXrjbFBQ9L\naxlTJ5akDy4OrjgBlg6r+8foqQk7agzwjoLQ2HGIEGQr2gWj3FvXczxYYFCJ\nNPcRvvsM7qJHbvoipZ0gjJSXY1FbRGiRlEMliAL4nlDwpzWVGJMkSIf5zmRn\nF/Y8pPuGw3nWguF4IxWUgyroDNUv+fMH3E4LfVfysFR7WO54/lt5gI/Zt9EY\nuLL3JIPrze6iHE/6iDTFeD7wQVQ06k+NHhY6hw967BmydDgbiPLoTq13zTOg\nrH2+\r\n=SRX4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCatzol/r+3smKp/H6py8wfz8oJujtmH0TINXcF4+2RCAIgXuBwJlWVKluTJp0aXHsmzhLMFMxFaZqsiiU1VRTq+js="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.10.0_1621717873914_0.07514221301912438"
      },
      "_hasShrinkwrap": false
    },
    "1.10.1": {
      "name": "zx",
      "version": "1.10.1",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^15.3",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "513b968954675f31fd5b3f42cfe2e75aead92d21",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.10.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-Jo0vILslEtstLJcftlpfhG2CgT2oCy8oW7XxN7/5bX2I20obCO7zSr27Jp7KUXqZrljZAMdIf3XDS7inSZuF/A==",
        "shasum": "9c549702a9dbe463d40f0e3a880778e972b6e049",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.10.1.tgz",
        "fileCount": 7,
        "unpackedSize": 33273,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgqlQaCRA9TVsSAnZWagAAGOsQAKBnBff3mWe685hp4M+f\nF1aWTc6FueLGNQTS2IFu85UA1qPxCJeOqmSSTosukULBQz5rPTOz4JYIuK6s\n8iaXoE7tUxgLcHHbMv0jFePF5iyKh66y/FtpAa700CMqu9Qqov7C/nQyykbQ\nhXENpOld4OTRbFfGg6eSOHnuzAClczdhGwoQxwH1rCdG45kqLyrSteWPTela\n1cvYZ8bmKBFQq02ACRx+d845+b1pyc0jWt8fFBeAMvUN7+4L9ijNenEixNCL\noJA4hQHi3RND1DImdhZ+KbQwCxfzTqb+O+Qc6vGPFIdtwRsFWUDI+rEyPc41\nO4DFAzRuUdWKaWD3tS2pKSQjUpoiwODw9LQifK6nXUL4iAIJYKRsYqCHbRGN\ny+aInI6Imqrksi6my6XmpQ7yBOQvxfX0OUge9D6BrQY9TuOQKn9J6XdySTuS\nbubBLx8qcb6ynTEMiJll1ASYINqgQ2MUGvvU10Se5s4unS3fKgIA2mu7u2o2\nV5NBScD6JD/JTYGfXmbpsHMUV6+0OXQrdKcee1t9NVuA7UGYkvORvJYGiKzI\nowlRUKf/ZQiLQ91mip3YMUCbiMHFrppslAhfV9hdSNvG7hQUOgunnhaGQWqx\ndWbaJQRSEhakCKInvQecKG4rA5f79K/iIBnQx/qMenp5EbMsjouNLcn/XcTB\nttoL\r\n=TEbv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBrQUrN2Lc4EUTY0EUYfZt0LXY7ATuIwwNUW1q8Q5w/7AiB2prn3rD7BU6LBWmLBFY/A5o0H4rHs8Sq+ICdcbnx+/Q=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.10.1_1621775385329_0.29429141463269626"
      },
      "_hasShrinkwrap": false
    },
    "1.11.0": {
      "name": "zx",
      "version": "1.11.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^15.3",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "1ab8c399aa0ac0627c8740601c5025b7593da759",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.11.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-3Qu+UxIOIN2y/tF3XuyKmkIK0jyiClnq4Up3eFtsmNt0vZ3E8OhfEdRrEIJ5hNuzBrMvqSKcwP62WaCSawD6BA==",
        "shasum": "d29269f3c4ef264042b5bb2902e9f3e7686a3815",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.11.0.tgz",
        "fileCount": 7,
        "unpackedSize": 33794,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgqomvCRA9TVsSAnZWagAA0FgQAIWHo5/hnxeFXuXS+Pd7\nKr9VIznfgpJk/MieOd3a85BSO5uOL0lonOukUQ6EucP2c/xBweaXlkhPYOOd\nTKdeJiBPNHHj73K7i2jV21J8VcTBV210S4nHBMEr0c6kEb8cD7qlTtsrKcro\n4mBlYWW94NGnlGnGsws5ykryFsWOJZx0/2c/DpvGfN1mZuRJ/NU7t1QeSbEM\nmEIf8Kgd8FeRJa86L2VPSSnV+jTIaHFRddRvXBMV2mQ+wYDz0o8wYSnzC/J1\nbFRoNuTzDiMidjhuaAtgSSSm0jMQsi8GwXe4wgiPXhRKgkFG9KXcLVaAkPSe\nxj8FEXMQyBAvV54gICqJqdDkQpoF3h0SWI8TPs3kpkeBN7dQD5ipyC7D+e7z\n/blpRgYpqV+fxnSq+SGjgalKx0/KIdCdghiYMJeq4/r8zx3+ym3l2o317/+q\n0Bp/SON03aXnRYuyu7z1S0/hGIjOoHXJ42Pi+e6+UWNJpbJpCIxODGDC5KQR\nhVvwLhygJmuY+HrFVl15kmnb6YZe6GCxox370qKpNhMZv4fzYLnnStZgEpmT\n7IgaTHKGZCGQyRIIeU+HvB/H5pxNfwrXvKDLlLlpOlvhG6KN2cDvmn6Tq5E4\nNvqSnx2E2TPAXi7ssBI5t9fAIsx0S5t+JR92ND4b3C/62qMb6by15gn1pP5t\nwTlV\r\n=zehj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICJUDiSbdVT9cbTu4THwtanWoSZOjOhFC/8tqS0vgJ2yAiEA0HmaEDpDhUxxSEZxy1A9P3u53rLrdBtJvnnnyfrqdks="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.11.0_1621789102639_0.9082244522271317"
      },
      "_hasShrinkwrap": false
    },
    "1.12.0": {
      "name": "zx",
      "version": "1.12.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^15.3",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "dd5cac4dc517dd65c22e24ce71749e5f6df0408a",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.12.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-JvZxN3QTnZIUF5p9YVpqc/wm6Ghc5yVQd/p53KC0nnSK3RUfeuGMRrOnxJ5c4R4iYwY5F65i4e3BU59JD6svBw==",
        "shasum": "1312166d01fd0445e45eea57438883896a6a8d07",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.12.0.tgz",
        "fileCount": 7,
        "unpackedSize": 34870,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgq/5MCRA9TVsSAnZWagAAgSwP+waTU0i5UbFsxD9hckTt\nM+aOvRQw0XYrWD4lL6Z34uOsx3WoAuNf8PxI8rRugsEqabqnpN6YjbSMuFBL\ngOhID3yOUR/dCDB5xnCKErgKEZtawm8nXMtorifeRLPWlwsgtVfookGhQg9J\nAqJ+BHaCfpkoFiCdcJBb6+loQOjzO3ztNxutRVdvSMHu0nc17IyHN9hY+3UI\nbM+7ISxy8oQACPoEIHrP/6Z0BVKA4gjQPZ/UcR3XsRJggRTshkhlKCEmnvku\nsxr2UA7k1vrjp/CxOVzRxvdY2G5QUmdkWVzoTSHAUek8de0fX+sn2a90piuV\ntxyAixKs/CPKCJauAmlFWscxBtPAv4PZaH8ub36eIuqCeEcHCxW/1SIzqOGN\nHErglHFI6/7cJWYt8HIknff4L5altBU59zM91XsaF09dTfyHuwSt2KyVEP1D\n0xNGVrd7gEYpbCCwcaOw9g7+Zrw7xpzwLLLAbiRaat7zcx/UR4C7KQuCJN87\nJd9zeGzizOhpOaOMm8KSzmAKshx8k52Z0lhxba3ykiFrjLioJtb6hMTQHTvS\nLofO7oulUCdaPfyY/EfKbXc1WCn2cXxd1VA6ju0HylREZk9GkIVeOJEHJhBo\n6pjLmBA67fdRkzXLIQSF+0BseRo0FkYFLGburUtBrIoR6jIhTLNlQFEI0Ez+\nQkkG\r\n=VZB+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCSRPE/gfw2mnoxFxX8dHb0CjUy1GSXJhMudhrb9UIvtgIhAIPdlTQFgoZxoyc0ope5LO3LrnDRz30+xNuAk4JKFa03"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.12.0_1621884491845_0.2543249172926225"
      },
      "_hasShrinkwrap": false
    },
    "1.13.0": {
      "name": "zx",
      "version": "1.13.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^15.3",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "5d5aead64078d2ad24bd0bce3202f08a8ed28034",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.13.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-eyOA0lrpliSe7IJ3WbQz9HxUVPkZYnuZOZ39226pJGjdaeR+yHZ+olr99mkUx9jR3DDgCxhH9bBtCeZ1jO+tlQ==",
        "shasum": "fc27551febf4e8ea8a8226711ad65109798c7965",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.13.0.tgz",
        "fileCount": 7,
        "unpackedSize": 35485,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgrp4eCRA9TVsSAnZWagAAf2kP/0sUE7ze9WgX4A8OCZaI\nU+c0fl9LWVsNYAT1S+Lt3i7anw0yFN2Uiq60m6ZB85iZkpDa1vnnH7gXEBPf\nwiVHkW59gdFtzwFIYkZAvwni39oVvazPeHkqnlrByrnZz9R29Y2lCiZBM0aQ\nD9oN/y7eHAE2ugNm4s7wg9S8fF58O2ZN0pRwe+p8jCsOQfUntgqDqCCv34Qx\ncpie0yYfr+77+916dMUOCMuYUynGnqUlOqCiDfGnurTxMLyZuXnewv0aNmW3\nt3ryQ8saYYjEM8chYqO58i28iBZarYXvNVVH76aUV4jSlRVc9d+JRHvtx7cB\nRbEswV5o7M9M0nlC8mh4fTsCTe444d+b2dnE71+uZ/vUzVWomwA/fLRXkRaB\nYS6ZTiJpDrGriLL8xtulh+dE1Y+9wJFv0CyxxyF/Zhizxmx5fjwOsEU/kRRr\nqacpl8YJVHIwsV7VhUyBzS1CnaoKnKq/wZiL3+HOJVxpP1V64mzGWwHKZaz+\n+AsQAkY6ri0eKYiAHAk0Z1DSDnHkg516amCZEuL/3HAhWklbuwWeh/5w8qyo\nlQYvip4pIKwpUoqDiWXOi4CP4DRd4A0bQHEEvkS9s8QDPbhBnvEoupWQGK5y\n3SkxjtBqYMmhJUZUfglWBjxTTtABCQsK2+7C7M3ABiQHdp47GaXOSPb+e+jb\nXZ2e\r\n=QhfH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCQUEfc7tTfCyUdgOObtJOU7ml0ntidfC5/hP/mzcI32wIhAJA3U87mL1ICBpDKKgSNedYU/kZ7MF1RcUdun65fFdWo"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.13.0_1622056477909_0.5479091296607981"
      },
      "_hasShrinkwrap": false
    },
    "1.14.0": {
      "name": "zx",
      "version": "1.14.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^15.3",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "891bab8e5e78b6f1741f87aa637b8d3a113ecd0d",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.14.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-Bms7kojOPS4SY1jAMH+ektK4015KQOEeMSccE+TBUGRVbkG8JusqRM4GP37X0F9CDVJUbvCul0MlMMwfENnjbQ==",
        "shasum": "3635e74a2ff998eea97c8820a5f9cba04bc5b41b",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.14.0.tgz",
        "fileCount": 7,
        "unpackedSize": 35891,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgrsPUCRA9TVsSAnZWagAA/xoP/1wOg5aEMQKROIkLd9ck\nzNNR4c78Xpe7yE1pwLdeOM8lvAzzNVco4Jo2Vy1WVrO33oOSZ4HGFJj10aUQ\nOwsF4wFDbfMNZyYFngi32Qo6jnFK/nFv8AIcp4yCK9KhYAeuA467cRyKohs7\nxN407x3eZnerKullUJVXey/R7LtaIeRoW00HMs7EeEHki0S6aN1Ow5dWZyPK\npnVQ/6KcN9j5bt2CnSpGPoToWN5ni6RMB1jNcg1JxcfXmOVFA53hi3CGIwgV\nsWZGiMrf1ZkGl8kEfEh5/G3EbpUskGhNzWETK+qATCGeC//VBO6VyokpTyPe\nmIzozpF75TwjAzV06keJlJ1QzvGsrjguOgGo/zTPaPgUoKoEIBbjNY+rPdQM\nAm2vd14tJJDVJacujzC7fVOPCz5cffOxPpSYeJC1BzSgTxHeAfnfdTJxW2KN\nrz2ix9fUDdClXDqDcEJLawta6cbSBBwIJgbp/B42sZz1VPrANBblm/ZyYMx3\nWufNPxg2MzVBA46Eig/c58Q1LuG1h0euDIfRAC2MxUV8pWyNCOIxb3QaZbbe\niY4zCJkZjjedCU2E6ccWPKp+5G1s10/fowJkt+v5FAB4TRGvJ4JEbDvowuA4\n49g4oSaiKIBXRoz0TlNcORCdN2pLdnLgj9MJCDye1SXHVemoXLvhVcHXtqin\nahw8\r\n=F6Gz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHqds+FMrEQmx/HXTDSZsNk6otS09jXc/WiV5yHjKE8tAiB+ZmDFR5gvwkbdReOsS5HIn1CQwLPxPQBMwADDestUtw=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.14.0_1622066131247_0.0964866791419896"
      },
      "_hasShrinkwrap": false
    },
    "1.14.1": {
      "name": "zx",
      "version": "1.14.1",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^15.3",
        "@types/node-fetch": "^2.5.10",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "ea6a800d52ffb128f546252fbba8977369343397",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.14.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-M8U7SM8nVnko4vaeb4jp2+gwIyaJpnLNqkOurViML2WOsIn9M+bVHmuJxlVPHKHB6WkoZ3P/0FESLKwvJF4dtw==",
        "shasum": "e1a93090aaa27134371660964090fafedc2ef1e6",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.14.1.tgz",
        "fileCount": 7,
        "unpackedSize": 36052,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgsBE1CRA9TVsSAnZWagAAj1EP/3xp0VBdEl8OMdyV0J1O\noXS+41oafUisWUN3FX0J3PYYlkHWFTZh8c00FS68m2PMiXepzWJHkiHXVntB\nU6b+tXYX/gVyR6OPIDibXdHE056uGoJABh8dnDffBs/C+1T9bCoifmjA+5ub\nigzj0be423L25KaMWYR6lyvau05qBdHn0ZX+g1bCqcsGD9cX329VfDIfOFSp\n+GYCdcicsyX0IvBk30bdX/sEgxwaFLotxDZH/Byg61KhVT1h9+OuyEwim/7w\nXz2tal4Te0nJFgghi9ANzzcc3Veb8koLWjZVxuMPYYbHmPEoc7LILq6NHjyp\nlHTO4cbR8I2GfpKzaaKict4Sgq9TjTgK/H5XSJcREhUllQNL3SEsZByd/+of\nGZuVbio0Xr1m+L6OjBQLz5ER4Flf1K711tzmj761nyWbv5vm8sd+oqgyBjBm\n8PED6S8NbDhTJleuaxbnrsUsUxihqLE6yAW2NCXh49A3eZLZcwJDc7LNp/nI\nj77PRQpDMBhONaqAlmm/wuMRb0jGMOXGm3VFUtHG7K7cClX8lTm5d3zs87xo\njMFWj+bzzWCfeAVr46usNuvJut+s97A43jaC9Ge5ssDcNnngu8xc+9HtTdqF\nuokGtgNC0yQm9lMBldI1gCcCMmfj7gTI9k2SVhhOI4IpCkijaIjhgWfTQJKe\nu3P6\r\n=kb9I\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCmwWYPoli7aHOm8fiW1JOyN5BL7GV+JLAt9PrTHT/zrAIgXK/safx/e2D2FiOjQNXdvu9Ce0z/ovyZYeZ3t9BkSfY="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.14.1_1622151476046_0.19986705282702588"
      },
      "_hasShrinkwrap": false
    },
    "1.14.2": {
      "name": "zx",
      "version": "1.14.2",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^15.3",
        "@types/node-fetch": "^2.5.10",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "shq": "^1.0.2",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "1dbe8bd48ffe4be4d11f46799f291619512522fc",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.14.2",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-omgqRVve+5dqbFrogFSjJXLUCUr4xHF2Gan+Njn/z4fumhIj3tMTFEA9iV+HgiobZ5Mgl5N96z4S4fwhaas4Pw==",
        "shasum": "b719b6a7280a2440af1a93f9b9db1c53552ba5f5",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.14.2.tgz",
        "fileCount": 7,
        "unpackedSize": 36344,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgzu+NCRA9TVsSAnZWagAAyCsQAISl8dTRTcROvrbxTYYt\nn6fLkGvgqihxQHq/agQLtIm6vJzFNuboF3dAaxdBaNoQjsUYzWXfp7m71V0o\ndOgKLxlzW+rYc8dxbTcTPoYMHfFBOHzhmp2PreKe61Tk4Cnuttnb9CiIXRnw\nes8GjOC8gnT0PXHbH4QrjGHQ0h2pl5eCAdAdPA9a1/HspT48Egz9z6h0ZALf\n4ue6TIO6QGNxPgsGdZNb+1ToKzjruzlyrEaSqgY2ytVmuhsaksFDzrvk4EnW\nOdb743qfFhWd/0UQoUF5s1Bo+G7XRKhHvNP1HTnG4pgif80t+reYSuHW1OJX\n1zM7wI+Fu/Qf9tIg/LoVQHt6ZFhakeBkf/oXcKSf7s7lyNOemNasqEvePtVo\nzQxLs7wvj7xY3jWXhx+a0K9s0UJygxMi3QDeeNp5tPY7EWaQAK/2G6GaiaO6\nySs0jzZmcn5pxFMLscw/If8jZoQltExd9g+pXIl/FnAaGp+yrrwh33ArmOGU\nfagXeubhC7GZFeORa08YwE3PimpBU8rSsKOPiWhrng+OKxmkkT+aHkBix4+D\nW7gOKgIYdW/Nx/AIrc/0/5I59L3jPXcNmCxFOTdumddGfVxwu1R4ZpsSDEY7\nbFre1wiV+n7UU5XYROxTjeSrktXliXrdquPfDeTxGM1yoz5dw9h0PNYuuj7W\n7pwa\r\n=8/tV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC9SUb8Sq9/7ZMGZW24DBEYfwueouEoLcAYV+D3n60NowIhAIzUptCgRaFuDfjm327CjyhTYiUb3UY6Rh+PmV7tA/HG"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.14.2_1624174477102_0.24411350147881272"
      },
      "_hasShrinkwrap": false
    },
    "1.15.1": {
      "name": "zx",
      "version": "1.15.1",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 15.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^16.0",
        "@types/node-fetch": "^2.5.10",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "06722d7d314d3cb44133b06e0ce7b5dad9eac72a",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.15.1",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-RtWbchzsRwKSJZ1caPh5R59gneZF7Kiq0WEi67++j59ZnIqeTIP05K0HWnOhfFkFjf4V/92qEYoAJonsMCfzzQ==",
        "shasum": "72ead8708be5d36aa918ce94f2385fd164f62e39",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.15.1.tgz",
        "fileCount": 7,
        "unpackedSize": 36638,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg4NLPCRA9TVsSAnZWagAAHcoP+wdIzB9t2m35lbwwGXiR\nY48F2Ku8p7TGr/Cr/VczJfniDYWJ6URKA5UHts/Z+Kqb3hjz2u2FdZUE5UZG\nTQZz59GC3ICrKJety9HYHeuIVZ5IoOl+XfGYM0zt+6eSShCxivRsmqBkU7yc\neNTGDmnF3M2egBDAtWiTTaseL3iix9bCrGsXFQHZhMehB+9XLojWdrtHGRmE\nuwaA39ltV5/5hwzFvpl+bwUmPOm3Rp9SuZhCvqMCpmVwU0Abxl1ufdO4TNoF\nhj0y0jpSAYnP5KgKCNy4eG0xbwUqj3SQgp8RqiZQcwhcPc1ddzxbTBjLcck2\ntHcVl/0QJ8O5OmDHRv+aaivxFxUFLNvgCPOJXf6fKEIxp4wVHo/HhqmbvDfg\n9/mPBDLz98CAl+JgR52WuUDecIbIOOJFuYJoPfCu1KjuGjnWREywADZDmeqI\nun4b70MVgG6cYQiZhToRa6oJeR6kbyTnDogMOV03+1D22lBkSW5gQy0bxq8F\n8JQZ+aipmik6yHZPg5kdZGTRb+dU0tQ8mK4/DUpyTC5Tq8vg+TA2iluttRd9\nFPkmVeFGQFxCRrgFmPoAxUbJBf2wkMUUfqseXIr6LoOhq6SoDWCmXR5SZ5fb\nHcO2bNZUK20g5M1psQPAaaNugLzIfNP+Aw6hXvZyVTtb1QY13y/25nCeaylj\n4uks\r\n=asf+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCe4VtzANV68U3keHHB/+EvHxqDD2PPZKnMsvSREz3nfAIhAO1U0nu46ZuxDsCadVVJgej2OHGdzlHAu2gDvMOyn8Um"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.15.1_1625346767042_0.923373686363332"
      },
      "_hasShrinkwrap": false
    },
    "1.15.2": {
      "name": "zx",
      "version": "1.15.2",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 15.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/node": "^16.0",
        "@types/node-fetch": "^2.5.10",
        "chalk": "^4.1.1",
        "node-fetch": "^2.6.1",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "9f0d0bce9936bda1b543871dd53bed197d87b871",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@1.15.2",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-UvltPAK8alQ7YXxOZDWCR3m4LppUmOpB3ZpJvc4NL0YEZDikLhC9jd1pnB4Fze/4OcmF3Xff6kK+6DKeqH1efA==",
        "shasum": "8821c30962e97347b62c5b7cbd5c9706ea776211",
        "tarball": "https://registry.npmjs.org/zx/-/zx-1.15.2.tgz",
        "fileCount": 7,
        "unpackedSize": 36639,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg4NZ0CRA9TVsSAnZWagAAcMgP/RDlg0g4FvQxovBEvBhD\n4LXx/GZyRbMzlk2y3nZd8Clzle4YoUGFs4e8zhc/vNgNysUHFYhS4m9dKQlW\nx4oFpvDn/MgSHrBSnqw9pptcvplzg0W/Sm0JUtpm2lL31cGJyHp80Kny7Q57\nd6EHtl1+BaoEAE1VGQYChTCfHAaX5w0DnP69j1YKk5IKyLSSTflW/PCFrTBh\nwD8AbMqyPuPJ/Wkcug8fs3Q0neex4BQBnnlpJOqwI16ixuYnQ5AlnC2WfT9e\nuo9Vmz/xEaBTB3Dkq74zXA1SBH7N9TMohNhFRDgLYhHmM3fWzmIp0+QS8X68\nZA4kYJEFEJNaB2SKB1Uf1YJmA16EcLX4+VawfJizNgcyOXGoZwNczJZHzFCo\nk0B0/VaPUXbzhhNAos2vxuAzo1sj0jmeFkemB/67KtjTJk2bPL1sVRySC/X0\nWPtH+3fKb2fu/PhGkdGcGSRvnguedZmhdbOz/xNd0xemN+J2r6VwTS+uEJPu\nIcq3rCryKjzve8oPqjmwBBQIooLdzkb6cLVOd0a2ULLJpgu846qIqORD4Gst\nVsi87lLZRfDvPSli79jeNu8aos/qEmtPMPBt7UAuWBZxKFgiaSpXdEHX/CWx\n7Wn3RZGm9OoO8fDFNbxjZPOz3dyV4dEpgxB7pwZBs9uAmY6Rz3Koa4QFycUV\nmqg+\r\n=qS1H\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCLTVBBMpey5F5GIgm27O6leA60S2Ii7tLRhsW3x/lxAwIhAIXsuOTVU9GOtJyGwMCpnTLjVyudm/aT559dhC3KCeC9"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_1.15.2_1625347699798_0.8079757557066694"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0": {
      "name": "zx",
      "version": "2.0.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/minimist": "^1.2.1",
        "@types/node": "^16.0",
        "@types/node-fetch": "^2.5.10",
        "chalk": "^4.1.1",
        "fs-extra": "^10.0.0",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.1",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "cf31d2e03960a9e6a0a89bac181253a8803113d2",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@2.0.0",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-OF8YvqseMMmtDaASqO+8+0/tJZvykLK0hX9YBAaRO9l7Hc+YjNKjpgJTjrmncgEURoyDr9Ln4r/qBtEuDNZstg==",
        "shasum": "08b11222a26fd160e234552fd54bb486ec6e81b9",
        "tarball": "https://registry.npmjs.org/zx/-/zx-2.0.0.tgz",
        "fileCount": 7,
        "unpackedSize": 36975,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg4wLzCRA9TVsSAnZWagAAwpUP/i+C13GfyBN/GP4WKqzU\nm6PbdnTAuH1lcHwHIvC8GR1GAWuWUsWqD+EkGVtWaLacvH3AgcNFuuslANxO\nn0AWkL2hkABjwMQRXK8efO3XhrEfZw96WERYd3/fo2Zfb3lzt5PpNWdlXUkl\n3fJ6QSYVaC/+2oIGO/H7+IPXcagcSHEp1LfdcIZfF9h4ujMw+mU18Y3pRt0q\nStV2SnSHGcpJez7VYrH+QKesnnWisiu8KF4maLwgxVhWGouMrB8y1z4ayjV5\niAW+5NFx+6avOKz4WYDD24UhG6iANY/lwvRgPVoiZPhhBwvx/VGTh6C7P6mA\nx7ByiteUkp4qq1QNG1E/id6wGkFiJP0b5y6Yj2aq180IzbaPvuvj/nVHDr+H\nsUDbDMxcE1JcqvezapmAoWa2gkT9mpiYdcPJpZo0t7MAfdauD46nN/Eiy1Wk\ntq/rUlsl2FkuT8lYouof9ptaKxsY2oIKZPVlgpSr9u+MKquL6BX8Ehw4uVxp\nrldQzGR+h4hWCl5TzKVJ3PPdPrjySWACbR2S5hkAp6zfOXWWmFpU8YzIVjOY\n+5FvpUv2FnkNomF2FAPcsrphUAvIrFGn5WCin6sR8WMyEhzRWwaNg11ywBdP\nKq3hiT8W5WgCxhl3Xk9rhsasvba9jbBAKA1U8Rg+i6vKPZF0RqQMEubAOTyC\n3cc0\r\n=Hkdo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICEc3SpNmjyNLQ3txDZNAYOpsfS8Tm5GTRelUcxtS8vPAiAN6pJ4rc+hOUVmOfAKB7bLoxoQqxtNA2Nv2CVd6TsRiQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_2.0.0_1625490162880_0.9142822737046217"
      },
      "_hasShrinkwrap": false
    },
    "2.1.0": {
      "name": "zx",
      "version": "2.1.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/minimist": "^1.2.1",
        "@types/node": "^16.0",
        "@types/node-fetch": "^2.5.10",
        "chalk": "^4.1.1",
        "fs-extra": "^10.0.0",
        "globby": "^12.0.0",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.1",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "ef80b844c74525219536071bab0fd5a6d19bb345",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@2.1.0",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "6.14.14",
      "dist": {
        "integrity": "sha512-7mCJ92ev894l94w5aXkdQoZ9iE6qXERLMPp/uMhTumGKtyhvN8tWprqFFHiXGS/31HxEy1NtNd9NHmYjGHd85A==",
        "shasum": "fbfc01551270c390978a9d4822ab170ada86c4ff",
        "tarball": "https://registry.npmjs.org/zx/-/zx-2.1.0.tgz",
        "fileCount": 7,
        "unpackedSize": 38998,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhElvUCRA9TVsSAnZWagAAWLIP/AyGz5mH80IPdd4sr9SL\nDJF6JeSPRvLcMISBLl0zhqStqNRl1QL4cfuR56Yyw1wcl6y1MV1qAqvllhqp\nBVDdOxGVg5oFLN8MdkJJHiLzH28yxaVk9S0kMqQ/y2mr/+euOXa/lkflHx4p\nI/dbqkFlISYwBfw/+5vumOItTmKXJTyENmZd3ohpVQQxYbF4tYWp1PtBaNcE\nxhqxABOx6CehQoXZCv8J1/bivCI18EbpaVlSqfJQ7DXn2+s/I+i5v7BC9+n1\n0DART9RebgYK/4oA4Ffqm/fQOO3TGgGjOE2uHWAicdgSNC8syqkije2JtTN+\n/XL0uh9prqz6WUovzyk6u0hr1j3jjSk9jZfkDOB8jJt+YAzzmr1Ze6W5P3yQ\ntbXWAJVEmun4U3OQQ2GcqnvEp+b6D82xLYv7hecjK+QnMVwmIRcLIDir72aF\n9Tn2sAux8Bl6kclqqdjlZRE4Jb51E9FQxd/iqi+rqh5KWsPeJUsVozLfs+Ns\nzF/V4FCNUJrpxSjGBj1kajjsXPHNDiewCsKeDLaN1vyftVg63Kf4U07s8hoM\naw7Fw0iQnhQzfQFpwVccL4V9XyFrsnG/T80+dBrYqioLY33mfRyKSej7iyxF\nShSGWm1GTZLfSLKpPaoIi1k0UW05II51heQiGyy7r9woXDPuvc6aMpfYk6nw\nsOCp\r\n=lH9S\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGwkynZyClgaDuFcwEphnmoJ7Dh3EOIQzTUm/vaDopnpAiApuzzhST26cXr3wVftJ6jm9kv7t8ayFLy5LffHgrevxA=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_2.1.0_1628593107586_0.2894507512026443"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0": {
      "name": "zx",
      "version": "3.0.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/minimist": "^1.2.1",
        "@types/node": "^16.0",
        "@types/node-fetch": "^2.5.10",
        "chalk": "^4.1.1",
        "fs-extra": "^10.0.0",
        "globby": "^12.0.0",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.1",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "81637384f5241e79d4f8bd50461ec59cc6b1ec20",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@3.0.0",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "6.14.14",
      "dist": {
        "integrity": "sha512-GPaKTImhbKfc3TmJ43g8vRT6PMhiifcUZ0ndhHqhqtJMbteTQYNzTZT+vBtdZsDMkoqxE54Vjm3bDsplE2qWFg==",
        "shasum": "0076f2ed00385d74990b793501f89c487607e446",
        "tarball": "https://registry.npmjs.org/zx/-/zx-3.0.0.tgz",
        "fileCount": 7,
        "unpackedSize": 42415,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhGgioCRA9TVsSAnZWagAAxXgP/1IN3p6HJ4RWeY0WoA76\nfR2yKseicL6++kWFhJ+rlsuxMUeKIp26mxJt2Yy4O4MA5Si5LB/0aE3ZalxZ\ngqGdO4Ugt385y+8AoOrqbrAeiBGi79IJklll7FGYaFeCuH8TJoWAotjKEmn1\nyInVyzuqVcW+cWHEBibG+/pL1+RqzkJeTm0/dv2dw1Oh9FrJyUbm0ef+4+7R\nwPvXO21NCM5sDSb+d6E7tnYQYMRM07q2F89YqKltfQYYlxT6SHCFBxVMhYol\nyC0iuAKjoLZ4KuVqpwSMBA8WDeIZaJvLcXHyTFW0eJLHxbkD8BZPvdKTazVj\nnwd4Z15V/1XYgUyJYCxusN6dLFaSIVFpkeiCSwXfnun9lzRQAjOlCnLm/5Fj\nO46jFFKzxV00khAIX9asW/9YmMopteGTJeArTYaZGsdgbM2kkp6JlD3h0eLi\n+Frl7Yqf7ymZk7k9dAq+qjWYyyfSj0DWxYn7Tm11WfMktvE+fJTcNVZphCz7\nGlp6GOUpcAOFM/u+8jG1nhhWXW9yMKV6TeKAM6qC3JJick0wtttLU26/r+XK\nuAlIWmSaGmqxge+hUnuxJuILB2AwmRh8fAkqQnirZqcsPonxXup99U7lvkCL\nNL6Jl+xstUOWQuFwbDYwnPDs6rWRhjAvewrEDO2V6KxKztFkoFbUugjUoRdA\nEhBs\r\n=+hYx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCz0q6px++bAmZJA2XHKnSNRSFl9jMoEv+pTSFAsaFwaAIhAOFWL4mBUSBJVoeVJmlJcSig62pbBQDB1alCAgAfzzB+"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_3.0.0_1629096104774_0.9043428175521839"
      },
      "_hasShrinkwrap": false
    },
    "3.1.0": {
      "name": "zx",
      "version": "3.1.0",
      "description": "A tool for writing better scripts",
      "main": "index.mjs",
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/minimist": "^1.2.2",
        "@types/node": "^16.6",
        "@types/node-fetch": "^2.5.12",
        "chalk": "^4.1.2",
        "fs-extra": "^10.0.0",
        "globby": "^12.0.1",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.1",
        "which": "^2.0.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "79be5c2555d0d8dc51c7a7ef9933c68c6a8bb90f",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@3.1.0",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "6.14.14",
      "dist": {
        "integrity": "sha512-Dwm75vWiWPsZhZXRUmneeZQlMbRXJBDLMy+QGDyKDID2+Dkp6LCzlXTrW7VOmU66K1/w8dEcJ5r3zFCDW0kx1Q==",
        "shasum": "8d555e03b033827288f9fffb4242d67a28684257",
        "tarball": "https://registry.npmjs.org/zx/-/zx-3.1.0.tgz",
        "fileCount": 7,
        "unpackedSize": 43023,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhH1tUCRA9TVsSAnZWagAAQeEQAJB2YnP/iMBskLdI2sdy\n9ozBBbZovcdYi460tBYUnsKbU8Tz9ksSrwxuYVLRJV75nawxcg4nSe6rKLrO\nXuUDRgemsXRx1isVpsuCbRy5KCnp4Zh0F8aXrAC+6P6Mfd+d2qMUab6QAD2n\nG2RrKSxQID3mRJJSJ42w+Wm0n05o1YjyMpVj+Gx722Jbsl1bt8TMbcLpozf6\n83w+ytXL3L50rrCvcEDx23BWqCRuJc+sv+DBNbbTu4U0K7LB398WBAwi3ENq\nIUqix/hWgwUz1jZC+0guaJVXgKc0dFNOBNro/TVgrlPoUsTGdXwqqV7SgFLe\nVXoVWyKCRfWBsbARwxPW8wXkD90Lwrlu0tXGXwwPxfR43/LoKKi1x0SZ3Im4\nqGjAKrzxN7qqKPtv984Y924d3qgIJA5kqjE1wySLB+j1hm1zicEgaijLHhKO\nxfgy2OMfQLs5aMPVKyRB807ix3kwsVMdYTM8OeATFNG3kvcQ4d/oQeNh5fJi\n+2zppSlXc8VXKDTAepGDXrknvcTsJxzsmya/Uh09xV0EcDbsIvn9SQOl0CtH\neKtLYL5pXEX9WOnKpE72yE8PUdfYITt90vLxxcosvsU0VSBHkBKg1YZ+b7dm\nlZ/Iry+7dfWBePFwvBzfU1RlWgkvyhc392XqT+T0Mu9Y/8tcg2bDo4o+0uKF\ncXw0\r\n=soxf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDr3M38jnPGmDbn41wazeVU5p0JrgzK1K1LXiwvd+SI5QIhAKRkT4WQKFdme6+/zrAr09lDGGRuNRepFkQKactcgEnw"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_3.1.0_1629444948279_0.10433406816447288"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0": {
      "name": "zx",
      "version": "4.0.0",
      "description": "A tool for writing better scripts",
      "main": "dist/index.cjs",
      "exports": {
        "import": "./index.mjs",
        "require": "./dist/index.cjs"
      },
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs",
        "build": "node zx.mjs .github/scripts/build.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/minimist": "^1.2.2",
        "@types/node": "^16.6",
        "@types/node-fetch": "^2.5.12",
        "chalk": "^4.1.2",
        "fs-extra": "^10.0.0",
        "globby": "^12.0.1",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.1",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^20.0.0",
        "@rollup/plugin-node-resolve": "^13.0.4",
        "rollup": "^2.56.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "f0b6c21a43d3ddeeb434763b6c1f3d487761e439",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@4.0.0",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "6.14.14",
      "dist": {
        "integrity": "sha512-BOKVWyRunZakzH6cn8BvZUlDEQG4VAECmtEZeu+3t6ETDkg606ceG54UUjxQsCFmSL+Bh5HXil75J0IltDmAlQ==",
        "shasum": "539254f5ec4561923b944e80b81521eec88391f8",
        "tarball": "https://registry.npmjs.org/zx/-/zx-4.0.0.tgz",
        "fileCount": 9,
        "unpackedSize": 461346,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKWEeCRA9TVsSAnZWagAARvYP/0suHvgh4XsGO139KoPF\nbvjCarejcWdDpnSyFnyE0efS0U6EpgLtwsXrGrcFh/lWZbjmQgMV6jbg/YSq\n61Lm7nIIW67nv0T18VtFb5NqQUwQ+kNCAItEGeKfBKmmB4S8JvwcbIU/Rorq\nztfHRoM64IJnSQilhkYCKAK7RtNpTBko5UOo4AD3PZYtU3xV+aAthhe6zEiI\n3TkxS4DLTZuXiOvPHcbBTFam8hejPlc7I1nAZR/6b+4KA7SaZs3vb8zVyy80\nds5D9LZJgrOSz2nGB6n6VkNGcAHsQ2Tfc7aobQzrlwre4IFqbIw1UEc8dxof\n9LcUrLwhAFakiD5kuHgJCeogUy1zuekE4lSl9GPlMX7XVmzY4hPXH4m/9z3H\n2AyQRi/43u31CJkBlwctCJ/k6FAyJgeIw6UqwMivnmdISwCA97uRZWTb39a8\nW4jAMY0z5a2gxIcOlzhq6lvEubW/1f9vKrgnK4KhjEvrdNDSBkLLuC7erKnx\nX/BDC2ilDdElJDtQ2XRFeeSLuFsDZoa9dwtgaeuFFIX0BUU6d3gOyAElXLXi\n/zuczl56LBqUrEjhAR9+IAT3/+7uXdujt62jV0gZkrhDkpAgtcipAtkVR3tS\nhUeXIlV5+UQOx5BoSAfkIERnggJKrDzEbjYH3r4ey8PZ8mBSJQ0yxGJ9EGFZ\n1m2N\r\n=6zby\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFKfsiXMddSdcSvgIkklFPME9XpAd3r2LRtoD3Q361f7AiEAgeWT5IfS7rGIN+FTLKE53C0DkOhvFg98TCnNCl7xWdU="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_4.0.0_1630101790764_0.5020557393955289"
      },
      "_hasShrinkwrap": false
    },
    "4.1.0": {
      "name": "zx",
      "version": "4.1.0",
      "description": "A tool for writing better scripts",
      "main": "dist/index.cjs",
      "exports": {
        "import": "./index.mjs",
        "require": "./dist/index.cjs"
      },
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs",
        "build": "node zx.mjs .github/scripts/build.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/minimist": "^1.2.2",
        "@types/node": "^16.6",
        "@types/node-fetch": "^2.5.12",
        "chalk": "^4.1.2",
        "fs-extra": "^10.0.0",
        "globby": "^12.0.1",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.1",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^20.0.0",
        "@rollup/plugin-node-resolve": "^13.0.4",
        "rollup": "^2.56.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "db233d52b14307a771f881c3186b589ec4ee0dde",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@4.1.0",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "6.14.14",
      "dist": {
        "integrity": "sha512-BZd52C3yXOjpAdn7ksZYipZZFTYCfG64RgQEwwPJEFHp3PZ3U1qNPhcxt3JBTWUUywqDtuvMXEpPWNjfWF0tVg==",
        "shasum": "9e1bb0690416f095fe1a9f3fc9375ad725862dc9",
        "tarball": "https://registry.npmjs.org/zx/-/zx-4.1.0.tgz",
        "fileCount": 11,
        "unpackedSize": 461847,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhLqDOCRA9TVsSAnZWagAAKKkP/0a5SJsoZQmatVDgWi1f\nEQDIhDtnJnJrgUZUi26cmpun7As1dBCkCXZClzqjQmKm2y5v0ObH9HJVm0Nq\nZBWVFOcvdK5KFBKORcCQNokuFLSXbTk5Z8pSLa3FXfcAY0MoZ2mmFQLl7kpa\n7TVCtnp7XEykIky2ElE5js/Wo5yiRB9tATLrcEy1knUFgnu5SuSHsczyPvdz\nBsa1fgU9Fnb9dUVVXKRX+p7uTheGs8ndKBUSbEOcgbPAr+/d4dBDNjV5TXts\nMU1sKon4fovmiBCuEMmjgAP5FIAGV3qNR3uSy4/bDhLMih7CNCr0WDdfK2IC\n9KFOzNM8dZR18G7yuzFOO5/+kh5Fs9CmpxA8JUwCik5BUT1rx6ngxl4C4HZF\n0y0MfsTPtykhek3CEq5q8UT67LUQoXqZDszU+jTsU70jtxeguC4nbW9TE6S4\ndMutayiL4vOJAU38r91yqj9gRsPlOTW5GRfMijc/Ere4236Gwcp9pYzoObaD\nsXmjceBLWR8gD52qhcM+qR0yQO3E5ls5wtnIkr5Y/ULNhzbdc47POfCA5itC\n0yakJB2dagAt3ftjS5u6JmEIThHFJJNEzGDoidsiVKPVPFRczDI+2KfYiI1C\nc1QjuCLJdwiK7aW7IjNTKtcEh6ETeK9Up0u2ttNmK8/qaP6xGEyTDJ8zWWiM\nItT2\r\n=meO2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBzgm80oXDr5ko1zhliv7LeiprU5jzNuhF9XBgLigA7WAiBKanbKyyuFXs22ZkrFTvNl6HNV8w/RRfXUb21xCbsIDg=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_4.1.0_1630445774093_0.00823124906455619"
      },
      "_hasShrinkwrap": false
    },
    "4.1.1": {
      "name": "zx",
      "version": "4.1.1",
      "description": "A tool for writing better scripts",
      "main": "dist/index.cjs",
      "exports": {
        "import": "./index.mjs",
        "require": "./dist/index.cjs"
      },
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.8.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs",
        "build": "node zx.mjs .github/scripts/build.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/minimist": "^1.2.2",
        "@types/node": "^16.6",
        "@types/node-fetch": "^2.5.12",
        "chalk": "^4.1.2",
        "fs-extra": "^10.0.0",
        "globby": "^12.0.1",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.1",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^20.0.0",
        "@rollup/plugin-node-resolve": "^13.0.4",
        "rollup": "^2.56.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "3f7e8fe37b3e400c018fc1d8a88968ba4db1d325",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@4.1.1",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "6.14.14",
      "dist": {
        "integrity": "sha512-KMC3s+Dk2IpAxvpgb0dKzLNE3NuFRz9LIVrJamLTpLtN1S3waiEsaRMYrc3SOJN/tT3V6elkwXg2xozHTeO83g==",
        "shasum": "8a17ad936507b898a6b0b107f68db133ce13635b",
        "tarball": "https://registry.npmjs.org/zx/-/zx-4.1.1.tgz",
        "fileCount": 11,
        "unpackedSize": 461889,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhLqLoCRA9TVsSAnZWagAABpYP/Rs9QjpNfva897vHKDML\ndTY8dJpu+fkXG+NL5mgpwd/OmYxQxgD5Tq7IcLDnLr093dC2MDXeNFbq9Xz/\nxaWb9WNkSj5/BPaRc88vl4USoVVf6QqYNp1tA+dMf9RX4XgSH8kx+oM1c/V3\nwgygo5s47EfMRaWyy2gZmH8TOcJTYTGXkNKJKexPppb1DWKPTqWrfBl+WzI7\nSHlQy6JwDsA+UDR9TS4ul5mnrb66gM93Tep7yAP2LBfVxsOzGTRY89VPR2fD\n+2IOyMqeI1bbkmbeTKOc2IsfV+pEv8a/DaJSj6fXgnqcJpRue71OF3WyW7D3\nCK+FUaJbJZTfNZtEQWnHHmPsRlOJOxRFp+XJb1eHPrETQVRtEdwDEdtNyksg\noxSvnk+WdpXfCEb6UUpu79G0WjM26SgQVtm4qQ5LFKQGdmTtW6z6kgbbjo4N\nx5p0NTZvZ7vliJR1i9evbHXjkYkBPZOwUITUA01SemggWed4vbBPo5Hi2P6F\ntKc1WA1MPlo6Vcwe+K87Vi4GN0ai9Y4rFuLqX7nP1wjBBhYfTM+tpy+2KgS/\n/R0oJMas8L8bazwLhV4I96zOqAu1sYr2R8jRBCcNu/wvMBl3QOXXpqtxqmTD\nrdMKZy+RYrPcX32lK/yZtvpu8yzA4Fic0uFvuAqd3jo4cb/q7fUj8lH+4Ly5\nZmY0\r\n=OBKk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFgGU+ifvz0prJL/vdfbCe266wKljDrvT7DNsXse/gVgAiATOp8UmrPtvJi0ojvJsmr8e/3VTV4NBEZ8rzVFZbhFqQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_4.1.1_1630446312335_0.4719956601331492"
      },
      "_hasShrinkwrap": false
    },
    "4.2.0": {
      "name": "zx",
      "version": "4.2.0",
      "description": "A tool for writing better scripts",
      "main": "./dist/index.cjs",
      "exports": {
        ".": {
          "import": "./index.mjs",
          "require": "./dist/index.cjs"
        },
        "./globals": {
          "import": "./globals.mjs",
          "require": "./dist/globals.cjs"
        }
      },
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.13.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs",
        "build": "node zx.mjs .github/scripts/build.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/minimist": "^1.2.2",
        "@types/node": "^16.6",
        "@types/node-fetch": "^2.5.12",
        "chalk": "^4.1.2",
        "fs-extra": "^10.0.0",
        "globby": "^12.0.1",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.1",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^20.0.0",
        "@rollup/plugin-node-resolve": "^13.0.4",
        "rollup": "^2.56.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "80101c87f1ed7869b795b9e7d441abdacab38f33",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@4.2.0",
      "_nodeVersion": "14.17.6",
      "_npmVersion": "6.14.15",
      "dist": {
        "integrity": "sha512-/4f7FaJecA9I655KXKXIHO3CFNYjAz2uSmTz6v2eNlKdrQKyz4VyF3RjqFuP6nQG+Hd3+NjOvrVNBkv8Ne9d4Q==",
        "shasum": "5f7c15f4446ad33ae23717e5aba4c0199aa90851",
        "tarball": "https://registry.npmjs.org/zx/-/zx-4.2.0.tgz",
        "fileCount": 12,
        "unpackedSize": 462242,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhN93ZCRA9TVsSAnZWagAAH00P/3YK4cQ/bt8nXuXWLyxO\n1T1cM200rLAYQWJ5k1jbv49BwYRbZ7XdlkB8MRyOU3jivOvD0pcW7/5RpM4M\nV5KyyP6Vce5TVPOL0Ng+LI0yAaOp4ZnpusF0QHAiu0F5O9ikJEXZkqe3fz4W\nrgjlqD0F2u9TLK4ERQUBjQJSd8mefxyfSWRnq4ekhM5wwV80cNhN3pDksPjV\n9/1lwZlCqqtLC+kfT12JQSkLEyvpEK3/q/uaDCR8rM5BOs4EwDmqQbHvH35x\n5PPjlOoBNR4reHPO315dhFiYPd09pYepBTsS+r29mVsT/PPKkW68V5rj1FeT\nOqUbvWb55fxJ2GfZg5bNT7+QaUoBq2HbzRuZH+jYZ14owIm2o5BGacAWXZxH\nBTkdLrbDlDdXLbF4ciQYpws+h4pmwog+uTdUwCX8ZPfEnO9nknRH8i+EnxXR\n96+nI8eGpMt4NktV7p0PnGmSd+jW/yxuTMwqAnb14e/PwWJovRJrNEUmy6a0\nw7UxAe0mL6sfhg03R/EtrBMaOEEGtNfSnGnpdbcf7yPqr0KJPWDLQASwu27B\nJSHE6cLlzousvlvwbYbdYOKGW8zZSX2MWRk7TGlZO90UunFltvt7AV7RsL96\n4VFQh8tfYemSi6dstpwc097WEZ3V77NjMEwZniNtkiz6Qd0HimoSFU/Q2WUX\nyfqU\r\n=MzE+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICh4/awSs5vhSdcJvCLw7Fmulmrqm1HVsAEyjacAS81oAiEA4PaeitAwN9aTFqhvev9C4QRODwaR4fhHaVR7aBjuNwY="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_4.2.0_1631051224879_0.664486304695755"
      },
      "_hasShrinkwrap": false
    },
    "4.3.0": {
      "name": "zx",
      "version": "4.3.0",
      "description": "A tool for writing better scripts",
      "main": "./dist/index.cjs",
      "exports": {
        ".": {
          "import": "./index.mjs",
          "require": "./dist/index.cjs"
        },
        "./globals": {
          "import": "./globals.mjs",
          "require": "./dist/globals.cjs"
        }
      },
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 14.13.1"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs",
        "build": "node zx.mjs .github/scripts/build.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/minimist": "^1.2.2",
        "@types/node": "^16.6",
        "@types/node-fetch": "^2.5.12",
        "chalk": "^4.1.2",
        "fs-extra": "^10.0.0",
        "globby": "^12.0.1",
        "minimist": "^1.2.5",
        "node-fetch": "^2.6.1",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2"
      },
      "devDependencies": {
        "@rollup/plugin-commonjs": "^20.0.0",
        "@rollup/plugin-node-resolve": "^13.0.4",
        "rollup": "^2.56.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "65476119705164e242998d3cefe327ee18c4a65c",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@4.3.0",
      "_nodeVersion": "14.18.3",
      "_npmVersion": "6.14.15",
      "dist": {
        "integrity": "sha512-KuEjpu5QFIMx0wWfzknDRhY98s7a3tWNRmYt19XNmB7AfOmz5zISA4+3Q8vlJc2qguxMn89uSxhPDCldPa3YLA==",
        "shasum": "6275115c7cc914461a7d77e52abb60c15cb62d9e",
        "tarball": "https://registry.npmjs.org/zx/-/zx-4.3.0.tgz",
        "fileCount": 12,
        "unpackedSize": 459095,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh5IbpCRA9TVsSAnZWagAARs4QAKIFeJYA23idIeVftAoU\nXVKyH36RVl5Po/jw7GAlYb+B0eNHHeD0xAYwUEcMJThuLHQnec/dGFdP+vNy\n2CaM4pj1ewjcqTOlq5Jbq1LtViB5xmRT4oG4+YHhUvxYS/yC72SZqARyWTix\nUIFolIoYy5K/aahB+Hb/UhSfu7ocU4PRagoSDjX+7PK2IBpduMLoaxCFXIAD\nywKhU9wJy3QR12WKrWl1lV66YbAmNxuPxNonU8Vj82VbqOSbU0GIpVONBkBh\nrZ9kxJ1jz8k6NUg2vbJIbfynJM4F08wPggGLjpLnvUeCxmobV3qG5BgIUIX9\nbbgRYXHKfgEDBDKxmgPiysuO00mEtZtzXcgkHMCGDufNIuWlM0NU5iIw3p5v\n1E/zDh8iu2b+luw1gV9jZnMuHCWmadyYcXaammPl6XyaCg5xW6JbX2e7CUB6\nxIobzxZrhwmRSZP5R3XtTYIEC83GaPfuwWfaVMqw6qWFQHyft4jEvu/XBvvQ\nkFLx1tZHyykL3hhiZt6NSG+XztJOxDkCfKxZXiuJfQyO1rE+X/sulh+YuTUT\nWFUgK2EQsLJDgJx515jQpHW5eMmUB6EB0vqZi+VPz9Qv5eBU5N105NCXpf6y\nbptzNVGtn8hzN+YX+hfgtUHJCwDsk8Cuy3W3ZU1GdXirKBrZiwnpU18J4G8d\n2p5m\r\n=rYAy\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDios2ZvyV7QMmUM7sOTOg01SkpOhicX9HZVU1/L/BxhgIhALl+kVfYcyXHgmVdx2FeaE2W5cKT/77BojeqhJitN0Tz"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_4.3.0_1642366697387_0.753057820409305"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0": {
      "name": "zx",
      "version": "5.0.0",
      "description": "A tool for writing better scripts.",
      "main": "./index.mjs",
      "exports": {
        ".": "./index.mjs",
        "./globals": "./globals.mjs"
      },
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/node-fetch": "^3.0.2",
        "chalk": "^5.0.0",
        "fs-extra": "^10.0.0",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.0",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "7977cb5adb9545082b8edb8bfe647dedfcb98b42",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@5.0.0",
      "_nodeVersion": "14.18.3",
      "_npmVersion": "6.14.15",
      "dist": {
        "integrity": "sha512-Kjf4tb11c4x+6d0WqU0+7YmAe0fJK7rABX/sBJNsQbPK8PUZttyIhXEiId4ZlWdyrPf/8Lfgi6R4tuiiUab9OQ==",
        "shasum": "60b2c8aaea9b7b828a370eac982f981d4d7e917c",
        "tarball": "https://registry.npmjs.org/zx/-/zx-5.0.0.tgz",
        "fileCount": 9,
        "unpackedSize": 44365,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiA/JJCRA9TVsSAnZWagAAuGoQAJe9p7mKDQWpvGeKD8AV\nntkuN/s9nbNLluwS5a3uon2mZ4fmr+48LxfazQwfHRT5tm6v1Cbu8bKCxQpa\nDoo4HTMwaVYtx4BElqsQnowQrvehP+mepIr+51SJwBSIfrfcIgYav+M92kru\nZ4IANTMCxf+IZLvGIw2YTz8IEcf8g9L5NnYDl1+sJDdzRxeCZ3Z4ENGcd7WS\nVR4EggyAa8SD0dZ6H8Wxo1O2ixrn/+toVWziQ4t6xFwUONjdM+XEjU+6FP2o\n/gsowfZM9ppI6s89amgWMYnFIPdIA9NEsc/sRtrCuM8L/taPjZXmHPl57/ne\nmbcqMk0H4FRrJrUjR+q7MsPBYmP+sqrK5ttn90vNIG1vhdt7kAuXjbryfCKF\nvvLs0qqyqtYVMkAsJaacBUn8hxRUlyfabq9kNURUCHxrF6zsS23nWly6g3sd\nNz2B7EBHX4wbFgNdFP5+JBSNJVGXFB5vu5dkwtlM1+0GE0rtVIvAeqQCXQcT\nnqupEc56LsA8mgedOxAdv2lWzrSmgNnZDY09ZEK/Mo61xsHupyvNqdpmIdJp\nMBq7rDlBH0URlSv8kpH1JX3DFH9M0+l1+kv6C8xaXVAp+GWpPOEvDzeNj+0a\nqrUcYeky/FYXX5QuCPwCkCsbiZ4bYxh95e7LHmoYm3YwJkuqtO9y+pH0CO1u\ntkbL\r\n=mq3B\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFJQmGGZw2ATWCtw4aokDm+Vc/qndaep0l7WCrWKYay/AiEA3X0LxIeYktjxhRBtJgPHeQ/k04oM2gtjFO2d+zkeG1k="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_5.0.0_1644425800872_0.5766472239014167"
      },
      "_hasShrinkwrap": false
    },
    "5.1.0": {
      "name": "zx",
      "version": "5.1.0",
      "description": "A tool for writing better scripts.",
      "main": "./index.mjs",
      "exports": {
        ".": "./index.mjs",
        "./globals": "./globals.mjs",
        "./experimental": "./experimental.mjs"
      },
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "chalk": "^5.0.0",
        "fs-extra": "^10.0.0",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.0",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "59e9121daa5b5803a3d23a03216e9e525f728c97",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@5.1.0",
      "_nodeVersion": "14.19.0",
      "_npmVersion": "6.14.16",
      "dist": {
        "integrity": "sha512-J62b/7sFwqt4zbmPbeKJGwZlvW2X3ynyfWHZPr+xLAGF80h4aY4SgXaadMjljpvIbWGOwRmK38vwEdi5XgUpcQ==",
        "shasum": "20628d82d771172c62486479f804579529a9d508",
        "tarball": "https://registry.npmjs.org/zx/-/zx-5.1.0.tgz",
        "fileCount": 11,
        "unpackedSize": 47891,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiDVElCRA9TVsSAnZWagAAZ+wP/29rFKrahtaIVj0tNbgS\ns/NZWf7CGuMO/t/KbUurrEcPRvhys2BcxFokLGHv6ZHbMDvlrVqWKHGFgjHI\nHeWXxewV4aWKfCn05uHOxHVjDxG2nfnJOCQRpeAbKBVoZhdm1sJIBTH6Zgi9\n6U9Zp33Jjp5MkMzE6W181hg1K5pBZ2mkoPe1jz4EIbcJ24UzkYzvkBRtnFAP\nK8dsFx8jI1859/AZOBEbf9aw7ERMEKqZ1AymyeLF6TdNDn7lg8zPA0HyUEB6\nXe/vlEV8Etz89ktgA64CUe05r/oOQDrCSO385q+WHOHpF5O7gSCaxy6Uv96c\nEh7jf0LelzOrPq1rBh/PPYtGm8klk2bnicTNm9a3SKN8iWDIJZew8DsOTmak\nhTLmDraTuUplvlj6zaa6SbBZcbaYBTqqW3AFM489JIaIRADaJm8c/E8KnIFB\nrd+O/AJW+zSMjTV4ZJpxsJGk0Wn/odekbFaxHr+2zF7S98rtM3yKMDATT74S\nM9FGBrYYl174id7OsO8cMrQHBSfzmwF6N8Ki9n8b/8ByXkH/f1CodH41C4yh\n0FK9DVsGG+8p1B336iaAL+fx0NhIBsdPY2uAn/IbdcKzvbivlgSzX3SlBpnj\nrkMYqMFRjI+sbO6lJlDq1/RbilxAdq61d/vAtzYeqUsARszorThkBAN8MVmD\nN0+k\r\n=hd6G\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCaGcOEDa/JrtL/UsLTs9KJeaLkM1xnJGGdcSpjMnvkRAIhALJFyixhMTYmRecdNNpX24A+KNVo19HjYYIc+k6GZ0Vp"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_5.1.0_1645039909206_0.8783189146094568"
      },
      "_hasShrinkwrap": false
    },
    "5.2.0": {
      "name": "zx",
      "version": "5.2.0",
      "description": "A tool for writing better scripts.",
      "main": "./index.mjs",
      "exports": {
        ".": "./index.mjs",
        "./globals": "./globals.mjs",
        "./experimental": "./experimental.mjs"
      },
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "chalk": "^5.0.0",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.0",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "2adfc7eec7fc1582e44b5a697c3834165ff7df43",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@5.2.0",
      "_nodeVersion": "14.19.0",
      "_npmVersion": "6.14.16",
      "dist": {
        "integrity": "sha512-EzaYf8TGosgEGli8CpcDHnvZck/FRv3vEjIzYnhZLib8H+jKc3p4CG2epTayDqCOYQ2v0xsv2DoQ1Hn2OZ0o/g==",
        "shasum": "52ce2a54ff48e9bde7a8f5e52e4ced29bcbda70b",
        "tarball": "https://registry.npmjs.org/zx/-/zx-5.2.0.tgz",
        "fileCount": 11,
        "unpackedSize": 50620,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiG42HACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqGDxAAmvK3maZATTF9v8ns8h5LAc47llogqsN8IIY+ommkRAMgWsL6\r\n5tjPHoK81DVchQtx1fGfoqpxIKb3xh8f/Is9CL4ZqQtOsy+Na0cVK1oi+AMs\r\nyDWETA41G0QL+nJaPtL5IhrTS+5QdyugMQfeYouM8rgqtbOoNiwpYGrtH8z6\r\n7ksLmDyQvv1bbGtfGtuXB7Px2tKhnUtZ9f/mQNhzTA0HYch4qSVuXCh4Yu2c\r\nk1sl8ZRUnnAX48bQtckxaUUg/qEaQTJNHU67IASZCb5SFEI2giGnmWjyhFps\r\nxNVRr/BBLvR3dYQ7OnWe9hU9SprBFmKhoHxv42TslZlo3prEbz7jFI7HpFt/\r\n404eHCjNELoaN9xOpGBsqKNIdS62Vu/eg13I3b0u6fqCPJNAHL80WTmSDD26\r\nsVEMvU6l801Touq5EUgIACQJ4+jxsOha+06n7J6RFhZz2Mx+loylVzIL9Av1\r\nTLiCJ7aQY+s/6FaYTHW5Cq7xA73VybyUoyQJfFYCWhDCH2+kjqfusYfEElhk\r\nt2VgNSvBjAY+9GdbRFWGLC1US2vwCJT9teUyvNhwKhPtVqm3qNyt97q1lX08\r\nrCY2cw88jmZ0HbXgwcmQyanEiML9nSb0HT2Oyy6ofpUvTrTbWZK5SG72Ti2u\r\nncqtpEmSEvmM2PMF98N3Z+WmyExWb0NYOk4=\r\n=VHRp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBgAsYebKmZBQORfEV2t4/3AEswdx1fwEo2SuEyI6YqMAiEAjlDB0VzkvrCJZg2Ykc+wS62kDIWPqmP1tGz5s2nOnFg="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_5.2.0_1645972871203_0.19171132930758983"
      },
      "_hasShrinkwrap": false
    },
    "5.3.0": {
      "name": "zx",
      "version": "5.3.0",
      "description": "A tool for writing better scripts.",
      "main": "./index.mjs",
      "exports": {
        ".": "./index.mjs",
        "./globals": "./globals.mjs",
        "./experimental": "./experimental.mjs",
        "./package.json": "./package.json"
      },
      "types": "index.d.ts",
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "chalk": "^5.0.1",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.3",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "023ac68e83ea38d8f72c5c90d01ba81e257fff9c",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@5.3.0",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-woT7luj41wcHk9D/pGEJrENl5/tQLzVl5WPp+nQ+2h8vWQCTxDVGUm5TYEi5lqlY/F+13xCr/hl1Na6+JD+Edg==",
        "shasum": "dfd6e41deda9af7269f7225389d59a843c06968b",
        "tarball": "https://registry.npmjs.org/zx/-/zx-5.3.0.tgz",
        "fileCount": 11,
        "unpackedSize": 51384,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiL6S1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo8BhAAoWKlvO0QaDA9hc1XnCsrdrMAIg888NqJs/wOfsCs2hluEIhI\r\njIImCYal6ZxsiEqmwWGQbs4Ku9CS6IDrxXm031dPP8xPA32LzzF/VgqN1l9D\r\nJldV9wdVMhw+tXEB3qbK0udQdqRFD/qzeA0a5915c+ccXoM28kvZJIxc9YSL\r\n808vNzS4cWT0z9urPcTbPlIV59kizppdkC67XQtxFcjbUtWZpHFfDsSQbyJc\r\nPTuPUoZ2f2BBhdYGxCSSjcgG2Kd9ZWE0u1SKj4f6OgxHEokX6YK+mmx/iPDC\r\nVK7cvFTHINWUlMsHP3myocY6okBlcse1Idk62dy5HTWu5/eLh4NE/0XVsnqy\r\nDzileeCZ3brYjvWsUnmk4DOUTCFSN9nuOne++JySZyXMQzLlZ6Phc30h1qHi\r\nSj3fANOlTir6nnpIxx3B1MdWU8eePBz38DflyoGRo8JOJRYrDXXGBUZRjPcy\r\nIAVF/hm4AN4Hm5OloR1MZhOa1iGTwQA4ehmE3Ty+4KzSJgaHxoOuzodGb3Xa\r\nnG4nd+9reFV55thn1IXuA2Q3mAA4kdYmtMuC6LoGdFR9y04z3wqbdEbBxqFu\r\neeDxYQyNHw8Ms3Xaxat6URDE34BuHFabV/9xMkD80hc5mLo1cJprAtgGx0sK\r\nUIfEgzbD6F1iofU4LjE89AHeMRxyndtXa4g=\r\n=DvRd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD2hhs07qlz9+XWlcRa4ipbgnDPDeqJU4HMdZdxjByPTgIgbKg4enzzQjjSsGoMDmEwrUpbs4rkw5zlJjai8eYh3Hs="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_5.3.0_1647289525797_0.05128811344405482"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0": {
      "name": "zx",
      "version": "6.0.0",
      "description": "A tool for writing better scripts.",
      "main": "src/index.mjs",
      "types": "src/index.d.ts",
      "exports": {
        ".": {
          "import": "./src/index.mjs",
          "types": "./src/index.d.ts"
        },
        "./globals": {
          "import": "./src/globals.mjs",
          "types": "./src/globals.d.ts"
        },
        "./experimental": {
          "import": "./src/experimental.mjs",
          "types": "./src/experimental.d.ts"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "chalk": "^5.0.1",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.3",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "c205dc28cfd84b24bbbd8f3976319bdf3a3dbe40",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.0.0",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-RIP3URcMHBzy6dASXwAw0P4KHvLzuHMIeJmq9m9WuvF7UC1u2W4eZxauBLVpsVCqde/+VV8IteE5Ivx0fUxicA==",
        "shasum": "d33c7bb7bb7c1a695d0f19f55c4546a592b157c4",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.0.0.tgz",
        "fileCount": 6,
        "unpackedSize": 45447,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiMQUsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrzaQ//c+E8G0PQyGhk+b8SPhMur3SfQi1W8qVYOZRI/k0V5GOrlsGq\r\nXSusGBvBKx20njQRKbVbj2wCZetdTU8BcSsx49EgAuyGBV79acATO4M3z4cI\r\nvN6hScyfHIhZU1WU+CQUD5vl9PoJytHvYKwQlWLv5QxVXa3DNeBBzcBOZeNN\r\nm+wEEusDQSwAePzi4HKCLdovm9+ewrcl4mE2gIBfprf3cr+FAFfuhoVy4vpC\r\n99xy9OxEFgHxiA+LFSRkCZoBe+LVPav4fil49Ol0hAfxowXOA65R6OrsV94w\r\n7Hz0Rxg4Jrhsxe9si/fBw/4re3buRqybE7h7gu8C8OaPl9j/Z4L/yKPWWL7g\r\nh/iGtI8FvIXCdgeOm15dPwkJ8MHTP81rCnN1pvNTKmawsZYkZamq39QvRz+r\r\n19N45Ht2Y2/kumKgLM5qPcrOJ6pRRZX271YjBBZ+yIi1qREDJSfSAtNKeYzv\r\nLO1ooqRAvsjd4ZRw/DoiU8obhardxyGM1myLV3106wmTaWnndpt41S4d2dwc\r\nBpYnZs3SM4z1BSMh2FhxEV+KXfS0Hfz0s+GsmtkBSXBQOneBtrj5dzpk0Owt\r\nF0YCH8lbPUgyvXz35FzOhZKr0KoX8crAA8/u7qBBsFkof2x7RdWq/Pse57pq\r\n6mQfbiN4ZyJSdUKG3uFNVwEfv3tTt1R95z8=\r\n=Cm5t\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHAFTeJKysgBT+qxJCiscNaTkdRoyHzrpxUm2wNgf/24AiABkdGNaoTTmE/iJXmkDgAwepbxjoM/i/MI5PyWGYkBxA=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.0.0_1647379756369_0.7250914539094455"
      },
      "_hasShrinkwrap": false
    },
    "6.0.1": {
      "name": "zx",
      "version": "6.0.1",
      "description": "A tool for writing better scripts.",
      "main": "src/index.mjs",
      "types": "src/index.d.ts",
      "exports": {
        ".": {
          "import": "./src/index.mjs",
          "types": "./src/index.d.ts"
        },
        "./globals": {
          "import": "./src/globals.mjs",
          "types": "./src/globals.d.ts"
        },
        "./experimental": {
          "import": "./src/experimental.mjs",
          "types": "./src/experimental.d.ts"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "chalk": "^5.0.1",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.3",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "ccf73d45a3b2f3a59d72f2a4179fcb78d9a090ea",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.0.1",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-EOCZ7dB6a31ZnN48uTp80RamhAp8o71M1WmKXZ3sHKUojMlsH5VvLigubp4N76treuJM5Ar7pqMjHRTnu68qWw==",
        "shasum": "2f88f3c96818a74270c06981a892d0579a65a79c",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.0.1.tgz",
        "fileCount": 11,
        "unpackedSize": 51598,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiMRiyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqzkQ/+IJbTJOM3YtJmjD7Cbod2OkcphbJFed9Ql79tfZQQ4Ap1lEdd\r\n/1nDQvl438wrK70NYyqzyXH/1tt0Mrdhj8JuBQ1PEmRgJ48mke6hjjqYU/Fi\r\nrx6/yzwFmZjR5vvgaqu/F7ToaCSod4ZxOlr+V8pr0AeM+Hnrth2n+3irIwWE\r\ngoS86Uw0xfl5NSdA5n13GkljprN6KifqXwFaSni4Sxeh8/ZS3ds8wwdf4fYQ\r\nFZ1siBcWfwQPvFXSRoGx4M5nfjYHGAfHF+s+8uzmlYv2fXs5HD8pPTMV2tbR\r\nwVpkichsvo56YeAmlcX4jp9uxKZ9wpCyHuaIuCGcx8pKLM8RHTuu37rst5UZ\r\nZk5L4jOoLt1Cq7uBNwWZKtop0Hjd4kM211msq9XxRBTA3r93ONJRPNW29mpI\r\njD3aEA9fElE25cPcAlVZqGvPlTFzsZ6N1YFgNOEo1xwFUuXirlEGNG8rbSkg\r\nRvSbZ7RgOjLJgr931cP0HKS98MBZYrHy0KaI9ldMri04QZcunjWZOnhnJfY+\r\nNA2oeJsG0ZOmUV++YYd+aswQDjBJvo/PSGrtGxFVCY3D+teDdgqmUEivdxto\r\nhfFuwdsAUO7JXrVKJ41hflDwFzRSS06MdlcfLv8okwhhjpyqZ2/KDuKd4d3V\r\n2w83uEKcZJFDBsbJydqMZGgon+2SlH3gZkE=\r\n=9t2H\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCS7whZt4Bli9lDiHyY09SZ+VHiBu9RAs4YeShjzoRKxAIhAJUT175GredvGby87ldMcgKODHYPmNgfNef1jHne32g+"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.0.1_1647384754684_0.17758354537738508"
      },
      "_hasShrinkwrap": false
    },
    "6.0.3": {
      "name": "zx",
      "version": "6.0.3",
      "description": "A tool for writing better scripts.",
      "main": "src/index.mjs",
      "types": "src/index.d.ts",
      "exports": {
        ".": {
          "import": "./src/index.mjs",
          "types": "./src/index.d.ts"
        },
        "./globals": {
          "import": "./src/globals.mjs",
          "types": "./src/globals.d.ts"
        },
        "./experimental": {
          "import": "./src/experimental.mjs",
          "types": "./src/experimental.d.ts"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "chalk": "^5.0.1",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.3",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "20ea6218c8e71b441985d0d6d5e9d21bb40ab33c",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.0.3",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-CVVHbId7cudCnKJlofnDHUDsoD195wMNcOPRbsa74fY17XXdhP+WdEu4QDfNptx3FoDK+/trBOaPqp+JTwE4Cw==",
        "shasum": "817ca921368e748233a171c55a55c990bacbbf39",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.0.3.tgz",
        "fileCount": 11,
        "unpackedSize": 51978,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiM3XrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoZ6g//XBLj0fMouh7vYhu4RH9xZmEiCQEMAXLtd/CvktVxQSHeaSj9\r\nKL2ooLH+BxXD6Stmos77uF+25vdoBJxfnKZwwGh/7Sn7VUz/Oz4a1QJMLKhN\r\nUi3Vrv8bm4VPCTK3SPbr+JV5YceQkkfQwnTZQLKeZKVCoPG6YH+O2uTLEeuI\r\nyz2hOVF6yIogJLInThOS+8JzRNT7x+nxKoFRK9t5BIIO2MFyQ4S7HKx+rn2V\r\nNAjwT5mypoXsjCDQ4+0+30Bi/GJ8fYkzr7LyC7AnX6g4w0mO+83d/pCw4MuO\r\n6+q/t/ZpfeSSDX0mWDhtJxnMAXcjB1HxYszIEfEuA1eeV2sBcdT9IljyL3SE\r\nikrZ8VUYKJ2IHMING2R9ecms4XfvRPIukzgemJM1kIeHvpoh+oVvHPiChkvg\r\nlH8FDRA80wNHurp3upWso6GHf8kHThfdcy2beEdB1DGRe+faGcre53wym5cO\r\nUvhn3DK7u7g1NIn+xWRpuQ1KivrhVYHWpla2XY9MZRlx+eDfZGXiIdFbao/8\r\nGebJvJxeoVSbkXE7jyUqkDD2uKWBuxULfXEjCi3jJ2PMe6ECKqW8lsq9XcDY\r\n9E6O2BnTMYAFOygTr/jznGgZrbzpjlvzZACFZ5cA8fSQRsD1AJqMhAncBjmh\r\n/aWNXCqScKtdxuvumGCuGzl5L7pmu4PKSHc=\r\n=GZVP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCwt3hX7uGuOJKn/sjWPEwTGxQo/SSryN0XGrLSE/GEsQIhAOi2UXybcBFhFTVXhEEaWlpkTCgZDjtolxNYchGOLF2W"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.0.3_1647539690969_0.9060964058137138"
      },
      "_hasShrinkwrap": false
    },
    "6.0.4": {
      "name": "zx",
      "version": "6.0.4",
      "description": "A tool for writing better scripts.",
      "main": "src/index.mjs",
      "types": "src/index.d.ts",
      "exports": {
        ".": {
          "import": "./src/index.mjs",
          "types": "./src/index.d.ts"
        },
        "./globals": {
          "import": "./src/globals.mjs",
          "types": "./src/globals.d.ts"
        },
        "./experimental": {
          "import": "./src/experimental.mjs",
          "types": "./src/experimental.d.ts"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.3",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "09509bcf4859d8762efeb2d642f3931fca786bbf",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.0.4",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-a0SDzhYcOaAyGmEZQM0P7x4iawA4Kqs6SCiFYY7jkrVmJbf+sJc4prB+kr9F/V2z8MdvCsEyuXcfhsXco3kRpQ==",
        "shasum": "685c9f2974e3aad2131d630cd995e1a9733f6f93",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.0.4.tgz",
        "fileCount": 11,
        "unpackedSize": 53745,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiNKzZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqCvA//QQH0B60nrVAyRL0rLjbSDfgGs2Jky/WIx1frBThs3Lp1RDon\r\n7aEjbt5pvUSp/za/kIGFQwPHTeAqI1tQsV4ec4B0c7KcgrBEr9yvWdWyXI9s\r\nGYGb45rzB+NhG0dT89RJlaPYNxhdYw+zQl9/TDq+RX85ZYNYG9DtxDOh5r1N\r\nEazqk/MxRuuEMs/6aIjAkxeCB7xtE7+F5HZfzUCO0ABLxWK+BWWDOR+7InWs\r\nzKfBAsSOHCNQM01AOyTaKoCNLdO3q9zHW37J6fJj8M5fU177JeZ+jPhPTsZD\r\nUWKCid9YiFUTTZyyQpup1K+WYaaN9sgs0GSRGVpTT4QCktS2Nr8QXGUrzsjd\r\nFgtEM3SeFpj5uVk3SPicm24JJVG0ntdmX0oU3N1ZUcZeSFJJUD0JnidQMplP\r\n46l79XALSyz8eSXKj6tJQ0qLEob4wTl4AwCtseuCIvI1Z+3DkQT6yhrcWhtR\r\nXQNOWs8ieIgP9VQzi+slF4WrIk/VQYXXIfrfxX05pW8et2eLUCFETam2okYO\r\npxAOPh7Uc5xOcz6i9lkyHcaREGXFHIuo3jLwHKfYPnp5xD421VdoMCn3/pmn\r\nQ5jQKuDmihk8ofUxXIlMpsKy/3zNnbM+s6H8D5RhRm7kNhvO9Dxy32w1L3tE\r\nSmNtWqrynwQwbpS1Br9qoERqsE49mcmxdrY=\r\n=8P6H\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDDQIM5tVoeI7/c29uM5ccZZrTZPsEtP2jqPzOXeaDWUQIhAP1WsIVb5SxIIFmtlQsuIWVT6azQBYP4aOLTP/E8Ctd8"
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.0.4_1647619289045_0.6922823953611263"
      },
      "_hasShrinkwrap": false
    },
    "6.0.5": {
      "name": "zx",
      "version": "6.0.5",
      "description": "A tool for writing better scripts.",
      "main": "src/index.mjs",
      "types": "src/index.d.ts",
      "exports": {
        ".": {
          "import": "./src/index.mjs",
          "types": "./src/index.d.ts"
        },
        "./globals": {
          "import": "./src/globals.mjs",
          "types": "./src/globals.d.ts"
        },
        "./experimental": {
          "import": "./src/experimental.mjs",
          "types": "./src/experimental.d.ts"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.3",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "f0c4e651303707976aabaca8835e5b00ac29cc3d",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.0.5",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-ULZJhZam1FfVTfm2xepCcNSkkL0lqzkddeugwqJSc/RR5RIhJvIB1CsXerdARb2699wK/UB+KsF8rDIp1Vzaxw==",
        "shasum": "9da8591e7c14821409bfba8855164da75a1da2d8",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.0.5.tgz",
        "fileCount": 11,
        "unpackedSize": 53745,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiNLHoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqMbg/9H6xxFRn2pCZMoqumbaJ0+7cXOW2cgq2wfUeQ24KCpxZk9640\r\nMXtZxLyRo5y3U/EmcDqDeTJd1bAVxGkdWoNGSV6W+EyEfkM0ohgkesRxjzRu\r\nB4GRu7DrNnqddFZKet7mi/gpj+Au0zkedi4w68ujuNlnV53dKzeAh492kThE\r\ngzIUfPbY6sNKFFCoFoEfQU4snHhCyFzOdIV9VIGDzwNIeaGdlFpxUnfUopcZ\r\nrN3SBhNanNM62/x/fAO9RuqHtZBA+d7IY3yPF5Xqz3h0hK5bELrfDUyg9BRu\r\no42IQ6QlCAjHDH1jXN7OgTUaoiPhyvWnYgEvZfS/P4i5Hah2vYzBIfog5RcH\r\nqyLTT5/fMMJk0FeSueLZURHCvkQuvt/I1/UoWJsg0v5hSy2nHrjfJoWPfKpX\r\nUum922u7tF2ZYcXoPc5XIFOoQxrpDhkUZIEkIN1rCG9AcTz2Y1ehHY/Yn8Zi\r\ntSEI2jJ8uKoNoV0Ed13GO0imfCbSI7eXom58Znr+MoEIL78n/WCdtharSB/Y\r\nQ2lAUTexDQ4GACIgh60RVZ6Z+CQL1BaLFpHf7dtaarIQNQ+BVSgl7aXeEHHi\r\nvf3JSVXAn5lXZfm0foFlhfKKf77BzfHOpOCsfmccg8Xzt4E7YidpkIr3DZqI\r\nkKOER7HnSU64Qf3E7ivniylDju66FPEylAs=\r\n=Be/d\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGCcyTnuWdHSwgLimr6+0lnjsp7ARBrcCt7GKeXrlAIbAiEAm4E8/eRWZrV6u1pIehWFjj52LwrdCijBXCTPlvFjlMU="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.0.5_1647620584656_0.1064960372501953"
      },
      "_hasShrinkwrap": false
    },
    "6.0.6": {
      "name": "zx",
      "version": "6.0.6",
      "description": "A tool for writing better scripts.",
      "main": "src/index.mjs",
      "types": "src/index.d.ts",
      "exports": {
        ".": {
          "import": "./src/index.mjs",
          "types": "./src/index.d.ts"
        },
        "./globals": {
          "import": "./src/globals.mjs",
          "types": "./src/globals.d.ts"
        },
        "./experimental": {
          "import": "./src/experimental.mjs",
          "types": "./src/experimental.d.ts"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test": "node zx.mjs test.mjs"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.3",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "d7ed8c7a20ffdce3348fb7622c568531cc1c5353",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.0.6",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-PDkf1B2cloeBmDNdYJIPLLNlBZVelXZtlXKZg0oMkoX4iLoufFfm//1rW+Uip+LBO4i3jIcmQx9wZZhOSqC+ng==",
        "shasum": "da9845c0bde6af1a1fdcdc83d70a897b86dd56fa",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.0.6.tgz",
        "fileCount": 11,
        "unpackedSize": 53745,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiNLOnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrHzA/+K9EFhioyn6l5Zh6uki2tGo48dGvcv3OB5/LZv4fa+mhI9Dhk\r\nPXuihjMOHpWJUJzRxRmiSSquaooGnO04LvfziXQOKjZMVGMGPAiDkcdpQRiO\r\nM5QnfGeSFsS0yCmvtE9PJvWVKvzoBmkasfWPyXQskZhcMYoq6/KBr0bNlkj5\r\n0b7L9qRBBB7d01ti4/HrQab5V7HtlirvqhUF16sO8Dflbuv4np0CPpIz0gDJ\r\ndjnrIgaUC0ffRbya14nbR9EXoBPh56eG/V0PLwPR178uvtLpN3pTY+/z0Hhc\r\nBnjIUXmGhqYQ1Y2LNvOWCt5Ha9zvgiO2coh1UPKDQKECTrIBy8l++hM7Gnno\r\ncDLV47ZoO78/dbqwsXNDXHrW8lrZicBNZOYcLNzuKDoueHX9kNDPKNlNSY2b\r\nsFYWbkh+/AXQCjK3TVl7ZdiJq3qKiUfBylTTwVS+TlQAqs0cXTnCUQawTmY/\r\nkWMQOZB+UVmfU1upWM56Rlu4nNrOqIzrTZZDsNjWdg5+junCYOrAKFKnTRx/\r\nAfA2gLaDLRj0WKmBaKFKvODMDL8KLSGQpcXhyfb38Wg3OtNLDQq+XzkicEtF\r\n/EEsvo3OinVcIgzI50NMJg6ou23KkvzZQOo9uQA+RqAbDDcf9Sq0rdyCV8TY\r\nu/lrKQFDnGL9NYlW432Shl48Qnfiw3R32jU=\r\n=Fy1v\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGzeaUSncZePocQoEDhAsjOAxwiC+p0y7l0qUJHcR7k6AiAbGmc6jM6zmNEMwUwIqX2lGv5JyDvtaqWufOuXTW8Jlw=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.0.6_1647621030972_0.8502655694683812"
      },
      "_hasShrinkwrap": false
    },
    "6.0.7": {
      "name": "zx",
      "version": "6.0.7",
      "description": "A tool for writing better scripts.",
      "main": "src/index.mjs",
      "types": "src/index.d.ts",
      "exports": {
        ".": {
          "import": "./src/index.mjs",
          "types": "./src/index.d.ts"
        },
        "./globals": {
          "import": "./src/globals.mjs",
          "types": "./src/globals.d.ts"
        },
        "./experimental": {
          "import": "./src/experimental.mjs",
          "types": "./src/experimental.d.ts"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test:cov": "c8 --reporter=html npm run test",
        "test": "node zx.mjs test/full.test.mjs",
        "test:zx": "npm run test zx",
        "test:index": "npm run test index"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.5",
        "node-fetch": "^3.2.3",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^1.10.2"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "9589f194e65799be2e3c296c94134bb6a25e02d0",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.0.7",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-aJTTKN4m9m8wM02yQ4jMOXMp53Ni+r+VDAs0D+bo9l9x9nCMhOocNWeTjoaancHkb7LpNb4oLILp58HzTy0GpQ==",
        "shasum": "0a9e57366f4e782320829801aef374b599e46498",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.0.7.tgz",
        "fileCount": 10,
        "unpackedSize": 46030,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiONdwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrTgA/8Dm51LnnuL98dWS0bVk6BNBdfifYdOAlI3SO7m88xiQO1Rz+4\r\nm92Rwcd2NrZrPlp4XBieYugUhP7Qqbv7O77tXl7apjYWhLKzG64kWWOXFS6c\r\n9mlOTzP2sXCJDR9cHKE0JdqORc5bao+znTJLrJ4jjR+h8BiE0532AVSuzq00\r\nzsUzNgq+4tOmISJEVB3HtEZHOOzTAlM8CgzaWPrWAWAFbEE6PvHa/42bzXM/\r\nurGPU19v87SuKxUoM4XfnSwU8xXOn7IHFcikqDKg2LP4ux0KfZXejQzwF89N\r\nnPA3wwhO0ILprNEnEsg6ZOVAwKfYknZG0JLFZlfYd3bs+QT7d2w5f23WTj9K\r\nzxpRVkExpO+ygc8HOYx3NzFpmO5wzra/1AySsqJ+dvbPJvVM1BxZvECuv6DD\r\nHIiBm/Iq9ebzWOe+CUP5MHoJVrUrk++fLCnTC98TJPvzLEYb73upKqHtX6qD\r\nLdQNvSUmaAIlPF8eLgfEdRM82moqNnb0ATX8XOoipKas+cs9H3RgZ1BZLlH6\r\nJBPtslB+68nlvrmjepNkNwBp0RIItWkF4GSVAdYFWJei1KTDvElhge0NULWj\r\nlIqYqYe5gcGq+e03o8ZWh1VrJLp/3jtmIVhZ9AFi1cNZ/pxpqc7vKDTWfEbF\r\nctoF22qeYMkaJh8ESyPjzjIyl7oDwBMbrns=\r\n=Nndm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF6JmYQtP+mHYD4QmYn/tMD7SdojoI8rEjfRuBAVyPajAiEAiK1tC8OKfjpZQgL4lgI9u1Ttle+xLH23aELJPR6N3qw="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.0.7_1647892336508_0.7148364647273573"
      },
      "_hasShrinkwrap": false
    },
    "6.1.0": {
      "name": "zx",
      "version": "6.1.0",
      "description": "A tool for writing better scripts.",
      "main": "src/index.mjs",
      "types": "src/index.d.ts",
      "exports": {
        ".": {
          "import": "./src/index.mjs",
          "types": "./src/index.d.ts"
        },
        "./globals": {
          "import": "./src/globals.mjs",
          "types": "./src/globals.d.ts"
        },
        "./experimental": {
          "import": "./src/experimental.mjs",
          "types": "./src/experimental.d.ts"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "zx.mjs"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "test:cov": "c8 --reporter=html npm run test",
        "test": "node zx.mjs test/full.test.mjs",
        "test:zx": "npm run test zx",
        "test:index": "npm run test index"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.0.1",
        "globby": "^13.1.1",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.3",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.0.0"
      },
      "devDependencies": {
        "c8": "^7.11.0"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "eceff7944a54ea94a9b8b18556a41a20af1836a0",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.1.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "8.5.0",
      "dist": {
        "integrity": "sha512-LcvyN946APdktLPm1ta4wfNiJaDuq1iHOTDwApP69ug5hNYWzMYaVMC5Ek6Ny4nnSLpJ6wdY42feR/2LY5/nVA==",
        "shasum": "903a0c7ce65dadcef6c6ee85d0ecf0c26196a8a4",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.1.0.tgz",
        "fileCount": 10,
        "unpackedSize": 46105,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHr6sTcsKd6x35Twuq9PWEJ/Hf9K8Yk6rzHH19JA+rGaAiB0FRQNpBkP5LGaV+vyRKev6Hd240v+n6x2aZdB0ZT8hw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiWV5lACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqLTw/9HRd41YJ4ZmZbyyx/kGencNIaKZvw1DoHzkK1wOajOpfXj+F0\r\nG0xF0GzW2lTGO437t4hzXvZ5N0Mmi+965oYJL8X24s2ybFE7PiL5Q2pFsqIg\r\npNHDUe/CRnDKUNTGGHJoJNt5ARJwVauNKp1qrvNXyHf+gOxgskycWcUFLUfp\r\nDsV888K69HY5DoO+nFnlmSSm1ksRCe4KSFFz20Qb5mSk8hkek5TX+KM6jdD8\r\nj0xyDgA2ApzS5ihiy/qsh+sZX/1sQkBjhw+AtzGibhaQXNJiWYgdn9S5rL0Y\r\nCaJnRiPkU0wdX9rmhdlmZmxFjy0s+hQWhgHAghFNyECeUZzw6waoIfE1CVip\r\nZlOhSMZGyLhQr0KMAOCm+vLqf0RTgMmxUbKePrWT3q7SYb1jBAmCrQrOolEG\r\nltrOa/D/XhJGLEvZgV9GCmrnJLgFMX/EvyKBgyckZgLwqYwAFQh+du9cEK5J\r\ngPNHWOyvDrD2D5IOyfX+4Sg18ViXm2JpOgMBRwEKfUX4zDaCf0DLHHNABwUs\r\nntCrhLVchRoQLMXbqW4xuIy+owqNHklwYUvFZORSnFor4Rz5AOUeBfujyOBQ\r\nb8TRJp6OGGi49r6Fzm/ae1l/iG3nCRZ0e+DceHecmnIabjHnnHWtegf28z3v\r\nW8qDQIbtotXQH3P67niYHMPYHGCUPfAJLaQ=\r\n=YDdW\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.1.0_1650024037225_0.9636500868928646"
      },
      "_hasShrinkwrap": false
    },
    "6.2.0": {
      "name": "zx",
      "version": "6.2.0",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "build": "tsc",
        "test": "tsc && uvu test -i fixtures",
        "coverage": "c8 --reporter=html npm test"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.1",
        "ignore": "^5.2.0",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.4",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "c8": "^7.11.3",
        "prettier": "^2.6.2",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "50e5f7072cd220b715d322792d5e8283ed5dbc98",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.2.0",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "8.5.5",
      "dist": {
        "integrity": "sha512-g7M/j+Jgw0XVpuX0VyW5vHctU/G7Q2/xb0yysyaTS37Iv39s9Fxn1QvLePVt/QnQSkfNPqeYzsqST1+sRG5Jaw==",
        "shasum": "9688d6ba361e436094487f315713eba1a647b2eb",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.2.0.tgz",
        "fileCount": 27,
        "unpackedSize": 63878,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBMHDnLKlq5lwJdH7H4RFNKCyl7afvU14ZNSJ5RO+O/wAiAXX6llj/XV8IjZEUbMgRMhn2E0tSJMiql7oVOnl6wcWg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJil9jzACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq1TA//XgIb04NLj/d6GDknr75FugNDKsxsyZEhcAP+atvLcO6aLnRU\r\n2wjw7KfXyKGjIC49rRH6WUMQx7oiA6g8queCBPl7/+d0uOcG1cLguLOw3Pj9\r\n28clzJD2Fl6FXHka8tF09t2HsRjzNP6wmW6K93Tt38OQZCU+P+NP9FS8gnLq\r\nhWR5IrDT+9YASRFvNK8ETZdI2EOQz2az69y8Gqpn1GAjGyL8W9saXkc0jTf7\r\nwFUBx+JILYwlobig6H1GteHlHHNRra933RNibmfI4+wNQVbmU+aKeN7jJGgN\r\ntZ/nPJ+4WZu8Q8KPM2Iyfrb2pPTghzDv6NTO7lGraAuDNdwPBs5SHHKwmB9v\r\nMSbAlj/esVHaLA5JEN61tjrWXGnANkzTTbO8W9d0zJ+49Nsyx6rvu9j93NAZ\r\nao+NuOYWh/ZYUA0EpwI46m99QFRDsRkcza5nMiHcTL2NKKjAihorjzRPoyS+\r\nHSWBVt8rsSgG8V36VK5kQWGCMXTUP29TM+Q/QfDHkxXrNDAyfYffKRqdHWUV\r\nQuaP3RPlF/tzkHzOOQKVd6Pyn/IExD82jMU4j+d6sx+LN5chXJOntUZLUlGc\r\nFbJrY/OHPs++s3ANbTU+FDx8iQQMgU4LLSYvEk8fq4UIB/la0jDDu2ycYm+U\r\nULJdJBmgr1bYFSbX/YR+d+uiSiGQhzNKLdQ=\r\n=eP9e\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.2.0_1654118643726_0.9751975931344379"
      },
      "_hasShrinkwrap": false
    },
    "6.2.1": {
      "name": "zx",
      "version": "6.2.1",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "build": "tsc",
        "test": "tsc && uvu test -i fixtures",
        "coverage": "c8 --reporter=html npm test"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.1",
        "ignore": "^5.2.0",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.4",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "c8": "^7.11.3",
        "prettier": "^2.6.2",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "38e95cfa309a928997669e719ddc5ddaa6dc02eb",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.2.1",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "8.5.5",
      "dist": {
        "integrity": "sha512-GMm0/fCGbeHGCudS19o8IPoW7AKH55lKoDa1snsh3iAcUVsg1pCs7V9d070SCLr2QqMG8nmIxgpIlyCTFZPWAg==",
        "shasum": "1a4d86993e91b77e2b015b578d475fbe4fc47091",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.2.1.tgz",
        "fileCount": 27,
        "unpackedSize": 63786,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICHeGEwg58rTmshpdk7l3PZWhFcRfQOd8zDn9HdYpNz0AiEA3rodCXMk5xEjvTiMwoVeINO5/T/SLiC8YTQmO1YR4t0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJimZ8GACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqT1hAAimCphzjKZPwnfWtraijI0uBH27adBUaUYL3aZXuM6R/X0og4\r\nWliIrTCysqbDWpDPNEuFE9wmo+N2KUkp7pTTLk6CvlbnHM6GB8/xM/esU1LO\r\ntwxtEBJNf1RoqvwouhQgqXqusPk8XsRtqjrJV/jzD9qNkxXbd5Ucof0iZVEl\r\nPPYoXfAOic38u7uYU0G/fe52l8kL74SkTRHIPzts9PxuRx6gZtOMYUkhtWV1\r\n6IqYmXQ4Ed72EKtA66yFjqb5PyN6Jqm3dZUsitaw2eymQs3epQRXyOyRA0sm\r\nkbhNa8af+aKgcign/Z1gvFfNwGD52z8Ix/fBYwkxTbvF0N3WOgQnIg2/B8ok\r\nFbT7rQqinppMkcagfKutPJfMHMFEtHXyKA7YKF7FlC5n/A8i/8oCZFbSNJTU\r\nmPQGuoiM6abU0wXGd5q+1iG5hwQiSRYas4Z6bcR3AY9m9F9NRSY76yisAr4R\r\nYZlQQ/9lNHItOo6gx3ETUgGeyc4bxuPC/yxlXoF0UCcxYvD+IU8aend3q8ai\r\nuvyXdJgksgVjR3V0kzXdRgR+yrmP1XiqHMriK3urxh0uEQ3IhGNNNM9FnkNv\r\nnQNp4AmynKGflSwwmjOOMN6VVDw22fiJ9e8DWNMm+qfTZXjUsFRKDYH8oGtx\r\nAl7o8d5zzhkH4tubRs/kINb8WjlJKsJp6Ek=\r\n=6jwr\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.2.1_1654234886294_0.10716419330341265"
      },
      "_hasShrinkwrap": false
    },
    "6.2.2": {
      "name": "zx",
      "version": "6.2.2",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "build": "tsc",
        "test": "tsc && uvu test -i fixtures",
        "coverage": "c8 --reporter=html npm test"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.1",
        "ignore": "^5.2.0",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.5",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "c8": "^7.11.3",
        "prettier": "^2.6.2",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "3a66988f44fafd6b0038227200d16cae3d6d7bdf",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.2.2",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "8.5.5",
      "dist": {
        "integrity": "sha512-u1hcv130nrRPX0Zr6TIr8W+8tT0i2yjWP8Pp9m/byZR6z0QcyxO7ik/o0qSI01c5LuFKQdfBIlPvtu8F8FrJLQ==",
        "shasum": "bc276d63a45013efa012588666fec0d987587454",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.2.2.tgz",
        "fileCount": 27,
        "unpackedSize": 63825,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBBXEJ3HvW2PYsoqiKZLKl/wvVFpw8vkD8PyTqhKDFTgAiEAs1EFr7xBczbZt39FqmnZHglIauN5cFFxoFFvYaYhBFc="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJimxZgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoj6w/7BEFoJwakOhumTjLikm8hKRD6Ari8AejKszChDRqWJYaE878T\r\nnNxMERK0b+rRIOViF4AyJcRjB0LKMUWxSdESLD8mV5F6HE1ZspJjlsa0fkE/\r\nxwdG/g7czn075Z8rXGxPAcL73F+0EQM/l3N4pYriEJJ+LXtEbqJ5jRi+sMQi\r\n3djZHbM66mAfLbdnT8cRYimmBa7fLKJO2jYhnHbYG36TX1Xn1udhy5U44q28\r\ngjZAjxXZUpwnwdm54R4uNY0PY86yugXygMuJzs7UfvbhHCrMyMaexzJkJ/Pd\r\nGkG79tCm5lSYEWrnNUDLqfTnns0VP3sdYuLCJ77GuEQcqicGBur3UwEfCwqw\r\nNE5YQqXXN9MhZWaauGNqF45uHT2egiwdA+wSFQaTdMRonkqHEXchrOXFjZgT\r\nzN89klShMs584cBXj+MeMcA2MErmrMPhd1GlN9fo81eiM1Wi3ZRO8qnVnkjv\r\nkOpeby+8fZzAS48i5Ss3jmvDUJns0sXSbqBAuvSjYVKwy8QGmTkL+ejbWh/U\r\ngHoEtk8bFaTD2W8Y84d5y6HPn2wvw2fDEGjILPxym3OYXoXTH+5h0NxTSb98\r\nhu6vnJhUC4ky0SLEe5p2S3w4xkTB7x5QLVkWjgbW28mfKrxoZ2M9tNUQF5nJ\r\nI8ZRwfq2Gz3BfiB6BmvVml4P9xFlUYttblc=\r\n=3Dal\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.2.2_1654330976115_0.3911281637106805"
      },
      "_hasShrinkwrap": false
    },
    "6.2.3": {
      "name": "zx",
      "version": "6.2.3",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "build": "tsc",
        "test": "tsc && uvu test -i fixtures",
        "coverage": "c8 --reporter=html npm test"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.1",
        "ignore": "^5.2.0",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.5",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "c8": "^7.11.3",
        "prettier": "^2.6.2",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "3b6f856474ad0a74f1ec52645581bc6ccf595db2",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.2.3",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "8.5.5",
      "dist": {
        "integrity": "sha512-KROw4oYCPBXDQn5N1XAaf9UmM5g6UBTjSOGv1JDvU+T0bxcKDlRR4KzLykyjnfRqy4VPX4wRYBO3A7TenDczsA==",
        "shasum": "3f8fdc392f4fa05eb94c5d6ea0a93a2520396154",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.2.3.tgz",
        "fileCount": 27,
        "unpackedSize": 63972,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDYdz1gxbdvCnRt/TTLuKdujtoAeEF+U5cSvdUy/EAnYQIgWejg304dVLQ991lemKVDe3QIFLw4hLRTkNsghsuBNVY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinHa1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo0NA/+KdcfoOFRAw0kn/eRC4L/5Gj5FQM85hPAkSd8sb+QlCJMFEMA\r\nZbEzx0fv3HkwPyLrXcE/qqwrrlAT9k08Gvm0Sy4pS045IDNPW9dvQ+UlE6BF\r\nRC13Ru9JtI09wJqX58C+caqD4JUO/WUwWpbRk9RNumNO0wOuUC8z4ryanhZg\r\nIlI92Yqchs31D3pzGiX8MdB15m7KRCPrRv7EDIIJ2/B44iT6rVNxyVyFNtNU\r\neIT3ToyaNEe2TzcgRvtl5xSrZ8xWdaoCPnaK3XJBBqB2Mc2avoUxPtaiqcd1\r\nTQAhMQY6XulAf9hyuGH0DJ2Y+ydrdT7Rkn/mvwXIXtxGpLdZAwfIK3UYgw+j\r\nUXDG2BNVgUFyBzIFRoy42Z51zYTPE+8j8jXxQg/zlEpfEBCD8kRpCWfq+rgE\r\nn4wOE1sHACsVanQ1mGo7Vp43/ywITiwwdsYbIaLRrD8ylDyrZKPkjYx8XoCo\r\nE14rOslUHulf2GAyW+qPWMDMAwPeUQiXbwojyPJQw56qWQR+jYoZOArO+grS\r\nDOZNdrBoB2PxidN5Y28p0E+iJOR322FIp3RJaJmGDGEvVhit3xRNWGj7Gtca\r\nA8sLzf1hx13CER+Dg+lybz2RAfhYLQQSxPXt6+HanxLq0PCXZzigC0BGaU7o\r\nbOsnzgZeumFeQdKI3bNqAclgK5oSug5i6MA=\r\n=zQkW\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.2.3_1654421173068_0.18656616688670136"
      },
      "_hasShrinkwrap": false
    },
    "6.2.4": {
      "name": "zx",
      "version": "6.2.4",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "build": "tsc",
        "test": "tsc && uvu test -i fixtures",
        "coverage": "c8 --reporter=html npm test"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.1",
        "ignore": "^5.2.0",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.5",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "c8": "^7.11.3",
        "prettier": "^2.6.2",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "c488737dbbb19a1a0a172224f5b5dbe1fd8f7273",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.2.4",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-wBDObcY5tKDOIOuGrg3XwrhCa6V6eeZLQDVbbpgN9pdhiyOJA/So9R9i5vKN7cGGWkcKKHy29i8kJtx02j+kSg==",
        "shasum": "5e2fab4c87eff67e300c7139db8a0cd3708346ab",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.2.4.tgz",
        "fileCount": 27,
        "unpackedSize": 63989,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHq5LkQMq8kUzUNexXj4jXWeYUmQGsg6xJQ8MGzWM7NSAiEArxGSG7ai7DEv8Q1I5RD2SqLEz1i9m3nUMAEYEqAMees="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJioJzsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoC4A/7B/Pz6oZJIu+5FUC/peILAf8/j43S3OWEhkfEEP3OBMbetNE3\r\n6RxEC2AVRi8dRz9YeTn9sqFR0iY5ABSyVpc0eawkURTyp+DKY3xPnOjqiB2X\r\nkirZ7hXwuGR9CyDuk7xCVboEm95gWncR1A9xCNRIN4LrF9JQTx0zdgDeOwXD\r\nkk4+6XgyFBqTB++T7RQnVfDDr93OFZ1Kc2iC1uASCT2GpGoTttoCYa4XfC5X\r\npZm9d0s8qpl+C0AgOdTCBlVOfvjhr6Jb9l/cZFXUizGZii3HrkUsv8NFfamn\r\nIo5sCL5NHv0aW35oPMz+FfPbE1QMs5c4pl8ID0hg+6CtYAt/SkStYII9Oyjf\r\n88MsTMg8I5ZMCGal2TbMzHD8/ZQdIQIOdVt7DePpUJ4MHVim/xetEyLtdiME\r\nfBQfT5bNH2vip2hEVCFgPJG0IwhwwksnI8PiOEBw8N3lrEjMHtVbc04fJLgQ\r\nZMiWRHGeq/f+04S9MYmBbZLdm1kc9MDUHIszz0Bisr4IfBuV/V/aIQd3s89F\r\nfEWePaEJUiFg7RZU6f+A+kO5qFb8gitABFMjmOl1+ebg7Q1U0JaEebenva8F\r\niKcDQGv5gSgqV8dbr8jnjyGsV+ztAuIv3gz6QuLIP17rXeqI/2g2zPysCjLn\r\nLVYFh+q51QR2MGNhMCpMaYRbN08ociYP6Ls=\r\n=Jimt\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.2.4_1654693099962_0.2992679622017109"
      },
      "_hasShrinkwrap": false
    },
    "6.2.5": {
      "name": "zx",
      "version": "6.2.5",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "build": "tsc",
        "test": "tsc && uvu test -i fixtures",
        "coverage": "c8 --reporter=html npm test"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.1",
        "ignore": "^5.2.0",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.5",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "c8": "^7.11.3",
        "prettier": "^2.6.2",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "0964e8642c7aa22fb50e4f1ccec393ed7113defa",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@6.2.5",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-aTEZSL8sp1IhMUhxlXRTPH6MwzcuTBA3G4LLuH68NIj8kENfcaVGV7cn8LQXXHwG1M9LDI6ST6Qcw0EOrhRAVA==",
        "shasum": "9a5cd2ad68275601224731aa19797004f7f9be89",
        "tarball": "https://registry.npmjs.org/zx/-/zx-6.2.5.tgz",
        "fileCount": 27,
        "unpackedSize": 64060,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAoWeqCSXgxnASPppEjxLhorxHqWI8pLLuRs97eEXLskAiBVL+MyeExfjg0vQbpWT/egrwvmYR/tzhnrSbQNN8aA8g=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJip1C0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp1kA/+MpWmuIkwsYbt8AIrXkJVvkfDQXUpOlgY1t4w1+B83jXPcuQI\r\nN8IOFLBkADTKXViXmBHqwfJxIIxrCgTTfNhDuMKwO5F9WDnvKeV926/ogSyt\r\nr7DHhAKKRoihILAhL/WPn5Sq4Esyz2UWzhM8XYIQB/JEuc9dC3vehn2lGhsK\r\nOxZPgkC2ee+9eoBEieb8PeVYXbrSIl1OGwLEa3qP05U4l3XnxDuVfxd9hwno\r\nSyoHE6d1n+S7rhR4/RuSPAAz5giHHzPSRfgdSXfFXSiU05wtfexb25laz2Wp\r\nh5K6LIBlxp+o9HwGy0JYo6IuHZ5xLOZStKjoLJuQxKfb04qofr2EY9tXIW+3\r\nmILa+7vTaSCtp5czXzKlKf0A+cpYZo4zzy0U7vqQ/0pSR6ScSa5qXREJmlfs\r\nhaMkuuHydC7BPfsP3WlHiu+0v5DXzJdD3/DDKHojGSQw3Ib5wTI+MLarX26f\r\nQIkWzoNlGLjavQc6CR+jnefwb765OxSVJ+hqaVqTUMIMPWMBb5tOpI109e3D\r\n9jZTTnyg+8Glq6QyqLg7zs0YhuhmJHgnmbW9FBY5dKQEOqeuz6avBvEGD0y9\r\nq3N2T+lkSxh2InkPKRDd14tROEQ4z6JKY02K1j3JODU2YRN2rlA0oLr7nznN\r\nGqYHycIBSLLT3qLQK1jQOssD5Nfr7ekGBBk=\r\n=g+My\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_6.2.5_1655132340342_0.9137969768206438"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0": {
      "name": "zx",
      "version": "7.0.0",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc",
        "test": "tsc && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.6",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.0.2",
        "c8": "^7.11.3",
        "prettier": "^2.7.0",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "295be2a85b1ee1455df468ab177560e308c8c1ae",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.0",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-QPUkzM2o/yfr8CnJgR3Uzi4ESW3IhM4iOIrDx2wJ0vZAU4Gz0Bd/wvOWdqAheJgUTc1ecTkOMpdBKCSBvVDnTg==",
        "shasum": "342d6fdba1a2771b5f6b902b41ccf16fc6e7dfb1",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.0.tgz",
        "fileCount": 21,
        "unpackedSize": 65210,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD4D9LS+/FGc7o/T/uuTMwib0JpPU/FXIzd9GNhGepJlQIgCD1LCy9U0HmNLBG8QoYXsr3L4/ieysgu0s0WcCJztmY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqLkqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrFvA/+JzkZp+DrH4UXMWhr8gg2PlqJGI9YtUBbUj6gfWznRQ5+Tww+\r\nAvNkXvJtKOBm37dIBt091SR1rNvHjMJMNSdSLH85mGpMVXERZykCc/1Lvhvb\r\nzbjCIk+5tXKn54HoiEGZuIl/dkXgIpUNUQG6ls5UGyQPg8MEQLOrxU5ZHzBj\r\nLzHpFxA/OCrS01VCamYXsAAtzmStwRnmZ3wQZhSJdWRsoCHT3v1m/aSeu8J8\r\n6eYI4OqCcdbl4ugqr2T2039bCWJv8oVQEOi4KYW2bBfrGZrFn5XsCg4FNJZ/\r\nzql0zGZtpRdyq4PXQpxsqGSOKeNO8/fGz5l3DOk8Oai9AYf83wi3Ek67kNpz\r\nLxoZ/lTF6dIWK6DaxTD0fcxVaGtF4gSiGOSrqu3yPDUm1WH4Ol3hi8t/41pt\r\nu1jtNzwtD6e7lBMGUiKqQOc7Urc49X7Uf4P/2pCQqCF9hNGF7hMJW8BBuNWL\r\nsCUi7WROCLkLnVQHF3g/zdA0+weXvY+Ho3ZZxEJ6ZdBHtIv3F7Rr3Inga3M6\r\n4foCil9yPTx5JZ6aPy1o0y3S4LCMmElQLv4AOIJswmK/ocEQ4MRLPdWJrq/7\r\n4mdJsvjcjxeXz+jPlKlvz9iYUgHS7VzvoIbvlmLSp54O28aVwrJ5qq2HG0Zn\r\nQJwtvsRVTpLJe+xnX2prvJuxG3qwRNlNUEY=\r\n=IWG8\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.0_1655224618548_0.9540937992611489"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1": {
      "name": "zx",
      "version": "7.0.1",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc",
        "test": "tsc && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.6",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.0.2",
        "c8": "^7.11.3",
        "prettier": "^2.7.0",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "cc9be7f09486d2dde8c8796ef6c03865b0224a7b",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.1",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-5jCux4+8EL7blqjQZDCV9KiV+TEY9Vn9dkddOYEqdrE79X0jsVDRMt0u2O6UsBkC8Da8flcr6Vx9EmcVX4S5vg==",
        "shasum": "4a67a5daddc2564e0f6b78a5fb8d061ad49b0b8d",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.1.tgz",
        "fileCount": 21,
        "unpackedSize": 65434,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC2do+pdDK1fow97pofIwcmazA8xsiSdgO7G5BDonNG4AIgRcpaKwH0yulvKlQH913fjIrXlgP2yjz/KD4iUlpxMNI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJisQLRACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp2hg/+Jz+yfVt2WeY9nk+2lhkndLk8pz+vzAnHvWYVZWMIRRXZu20y\r\npAa9Nrs3Zb6NkE1uWZiaGv8aI5OwFSWzIb4wq/UPnuoVI0ERWfiPjy/5HfXe\r\n1C2RrqLNFSwf5wWNLNWUKFDAY0yPJQYAB0YmY3NZLNPQ+lhqjMNMvyEZzpnA\r\nTRQ3DvoFcRzH9KpWLYoqPmD5ygAmh/gf8L2PqEDXWFJPQWoO75gNztG2YM6g\r\nd78XGjQS12J/+tBk4Cf+zNd7fmLmZf+ngohUz2GkdaHMFSX4b0r4QQA9cVsE\r\nqrss7WyOQ+u7NDmajsnT58CTG2Baaxy1rb7rmFEHHgwXEyD2+NCbcv7zEyJW\r\nvh+bxG9VNSLJmVsy1wBzjsmZcg8TIPFJwgmnJvfenjKRYt/jaSUgIJk7xsxc\r\n3Mlapp7SlEbzMR8x0K7IORalBoZOG0YuhWiE2kg5fTQAaDkA3Pi/Oo/0tQZ7\r\nFUPWkymDch4vwaYaVTuyTGwnGnh5fa2uGw7xfxGxlN2189OBoruWxpd7tjqv\r\n3wXWGpDlA0A4BYMp6tonVWO9olxF60eWkWe9pNS5oIi7IvnTQ5PMzN8wQU1H\r\nnM+jqLns9o4PEQcyNm0WLXe5qVj5elkq2yCArxy5ArOQNs8BTq0CakQj9XA1\r\n7R3wLkn7CXdcQMoa1SqyVHc6J6gYz/3FBMQ=\r\n=tzNx\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.1_1655767761611_0.11171849116113042"
      },
      "_hasShrinkwrap": false
    },
    "7.0.2": {
      "name": "zx",
      "version": "7.0.2",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc",
        "test": "tsc && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.6",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.0.2",
        "c8": "^7.11.3",
        "prettier": "^2.7.0",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "42b7ab0e392681cd3860b51c0c7d0cc8f81319d1",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.2",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-/xuU8tCvgZEe9u16pg0s92Lgbxzkp5PyXjwYrta84HVWBMJsk1Sn2DRfSYvMq73LJ/oRsdMwMiVVNlQan9dzug==",
        "shasum": "bb97b43c40a09c383c065e930c14efb43819f7b6",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.2.tgz",
        "fileCount": 21,
        "unpackedSize": 65319,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDOpRuQ3hykob+6PGk4yhbWiEXscmQixGw8tqkdeH0aKAiB7rjHlYBbgkYvs12/lUwcuJHBkNPKN0Bgil9q0UesA/g=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJis260ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo3Tg//Y2ocL6WKj/84C88oSlIR1g7ymDZOU1E6RuPkE5og31Xsswr7\r\nwcdakPhPi5ALz+j87He7krtzI7XC3GrAbPkbcOvQC+CwWCi0Z2bioYwJF67n\r\nx4y2LRfW7SbwcAYRz43yaRyF6TPLTt8jF1e4XseyKyMp37FiCFeTi2Yly6BA\r\niBP5NEb3oVHJrHNg8QR0+GbDRo80fNqLFydZwDz2cDd77v9zJuxv0xlVtvKa\r\nXfdmOwTdfeZaoemin80qr3efbQhjCwFRlKlV2tKJT56RTAhxins+X8eabITk\r\n7rtROkm9nK9p5JIrYUnOgAp7kXmFNPUZ/SMiiKwc+cRbvxeD4s7+SOeYJoLU\r\nBxMRz2upYtZ/hL/ia3rKvspo5cHNv00cBIUaAOmX45q9q9kbwG6DL1uvUgNx\r\n0kVsb92TFjd6u2oVlCbuxURduCTuwJ+6r++6lSeQlYbEPpsFc/OJdQcemKqB\r\nJIrdcQnbcmDP4kLigDe+TOUo7JvF10hEV3o/N6ReSHiSaHimiGTFVnVKDN7L\r\n1YCj4p54xuIHEFDL64l22QfMxMTJRR5DGVqhOk8Jk++Gr1Yq/BLFbYt8tAk2\r\nU5csjqAwL2PWt4IwZUN8fYS6EneF5SLmlK3RUko1K/ZtMW8L6aJ6PQR8oRyD\r\nBTpWipk7ypj/8GqZESUYJL4XjnmhkUuamPI=\r\n=Z7/I\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.2_1655926451877_0.30465262208573174"
      },
      "_hasShrinkwrap": false
    },
    "7.0.3": {
      "name": "zx",
      "version": "7.0.3",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc",
        "test": "tsc && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "tsd": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.6",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.0.2",
        "c8": "^7.11.3",
        "prettier": "^2.7.0",
        "tsd": "^0.21.0",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "a0c9ed76119e7c99005233b261a78d29cfc99d36",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.3",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-LxJ88S49vF0twzJt76EzEehhOMDvYKPYNLeiDmzD+Z+Xcd7dnvCvIKvS/s+Rhiu8X+PuRus42eiSZa6GtToOlA==",
        "shasum": "f860ad8c75fd3c07bedbbb89bcde787c68709ae9",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.3.tgz",
        "fileCount": 21,
        "unpackedSize": 65322,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3idqA8vK9ZqRFfqvv+jSegplBRjC5Ife8lVZ7dPf1IgIhAMA8NwpiAS0bQA4c2KzBhPwajMePoHTVLk7nsslkoDLp"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiuitQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrpEw/+OC9jRdCqj2ZbFGLtSfThVpGjvuwU83LwceRC+QrvZ8xTfJIm\r\nuzqKHN+SY1iwWxpiicg7KmxnuOAvLKmSzjXztizWXRCHs/UJ+OcHAboSkFy4\r\nnqiBYJsE4WTmZfZB2ihW9MWXStLVCLcaj9AMe/uXt+SwVAo9KrPkpWtip6vn\r\n/TOTV7WWSBde6/B1E64jm6PqToDEXDPF1o0CCmCa59ob9mLfiq+MbXXtORk2\r\nfeNEa/qcZNokRhL6hnp2xguL2y0Sm1lehusTKl5x3/DojXrHjtTlj0BxwMrx\r\nrqCGDxvK4ZOvUPU4rlHWGZUC5CbBxgdZr9sSyg6Ovtvc+VX8jLSgZ6l8Loya\r\nf6k1LU52KWwLH/9YGZEVi4Od6DYPAsRtPj83Nu6rId1r7BTQGC8xe0PEncPZ\r\nEVZ+7Jh3NC+NSXugvZU4r5gmBY3NnMe0WOGAH70bqjBnQP989XmAd1+zfccH\r\na7YRLjAfNRTeSIbJuFx/TIr7lyC2L4ktJEb4X52m8mIJeS+vhSPBso9L8off\r\nZfSAV/2p+wX2324+2f8u3SOYWY5oS3MxeLqRUcMwwnVsxI1gBXQVn860mEoy\r\ntaFdEc4nMHwVJTE8ZSIbrVZVgCXlgDpdd822pYiS2zM0ySXN8amZtRoO61qX\r\ntIZqOSHLpBzC6AfQAb7cHBH4GYP/HTqbwMs=\r\n=ky/v\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.3_1656367952098_0.0998537490002176"
      },
      "_hasShrinkwrap": false
    },
    "7.0.4": {
      "name": "zx",
      "version": "7.0.4",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "exports": {
        ".": {
          "types": "./build/index.d.ts",
          "import": "./build/index.js"
        },
        "./globals": {
          "types": "./build/globals.d.ts",
          "import": "./build/globals.js"
        },
        "./experimental": {
          "types": "./build/experimental.d.ts",
          "import": "./build/experimental.js"
        },
        "./cli": {
          "types": "./build/cli.d.ts",
          "import": "./build/cli.js"
        },
        "./core": {
          "types": "./build/core.d.ts",
          "import": "./build/core.js"
        },
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.6",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.0.2",
        "c8": "^7.11.3",
        "prettier": "^2.7.0",
        "tsd": "^0.21.0",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "e6bed573d20666fe3d90e12035cfbd2c381389b3",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.4",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-Z0uybYYLtL8ODx9ZOU88EKi6OLZ9ZTDRXX5igtcAsePUIseOWdACSaMxPjzgp0hqWkx0sZz/Lxs8bBSAHOsnNA==",
        "shasum": "dea054523ef2a5d25fc2194739a1b02dbb45d24e",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.4.tgz",
        "fileCount": 21,
        "unpackedSize": 65439,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDR5yXv04yB3Y72t/1Gq97fTJ+gdFvargt6ELa6XtVYrAIgdKnuk4/KK7GVLf/wE873yJW5ZtO0v9GC99AQDc0QwS4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivL0DACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpPUQ//TfE69wNawDaHACEQ5VX2ZdfZ2zU+adMea35+K8q1liFfA9XS\r\nICp1H52/oIzwCbbJwZIrjOHkmQYWPuBpg6eRHQVOU+/0YLXHtoycnK5zuNyx\r\nuqaQuNYMw4Cj6j4FA26oXcYCllUQFKOLHpcywUAA75GRjaPIH6kNU2AKH+ti\r\n43LWJf+PvHhX0JgQr07YjgaLQIexWJqRjjwTZH/90RGBjUWYhIZ2+GZ+a1Tz\r\nqQ6A17RTl2LEniDXIwtGo2pJrpp/NVfba4qGIW7x7bnIHSZlhK9uWoBtaTAt\r\nbuGXi1djoqL1esqfZsw67vR1cSJzb7vlYmZZtoOM4xvRcehXeiAAlKkGseQ7\r\nODGYGHKHBrsRTkSPB/IJbyPbQPV9LRFbvX81++7AoB/kKxDc/2qURnwWA9GL\r\nDfVtYsdeJdVlGAmB7bPT4ZITMbAGajHpqpBh917lbB9pgLF15yuh6LAiBjvm\r\n9/axTciq8XWMxoezevF3BV4r0PF+XaZ9jHHsaJWAYsMq3Bk3CA/5RuWyLsPi\r\nUERoRtk0tzSy6bKJzjuksf2NjeJIf/8vuacMn+2fVfdqOq1FlMoBMtuEq43Q\r\nKVI85ZyVHrQNhgq1/uclKSGm1atlM5HM1bwuNg1dvZ/b+x5sUb4shiB3WPYr\r\nMiULJqUj/2Bjqy0PFLDX/2cBWYo2t0LMJ2A=\r\n=JNV/\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.4_1656536323603_0.9229742187912617"
      },
      "_hasShrinkwrap": false
    },
    "7.0.5": {
      "name": "zx",
      "version": "7.0.5",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.6",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.0.2",
        "c8": "^7.11.3",
        "prettier": "^2.7.0",
        "tsd": "^0.21.0",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "8e81938a0da46eceaf60ad792a0be018e64827b9",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.5",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-0gra6urz4XwOc5bDxQo5LqGENoiD0UIMU9oSaInaYe4u9fi8kLr/s2FbXrnCD2SLEAHTfdANjgYlSlhh+80tWw==",
        "shasum": "805ed899a0ba286ccbd6368e50e6e892ec1bf934",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.5.tgz",
        "fileCount": 21,
        "unpackedSize": 65453,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC9Ag37xXRBRRY1wsHnHKLED9Erwn74PLxYVFv8/wJONwIgSH7sDgK9ljtGcrvK7Jo+PsmgIES0Uveq3NlmX0UwzS0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJive6VACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoj/w//StVwJMtn73yCeluS2mDPq06HUNJYs7OdTzb3suzGNT/0q0S8\r\nkKHyO7EPth2K52mMEw4JZhAkMKvxrWi61wKh3/zT3QdkRg5UZcRdvG6DpIqG\r\n+jK/TsH0Dtm6AMlISNeTvaFWQ90sop5E6J8Qqd8ZQYKRCmebDrvVgGlTr8Im\r\nODFU3/rq7oXtqEDFO84FKiYfLj348LqAa6Z+FBHtT9qTEfhVHZwasQae7dND\r\nEp2MIe250cpGEZ4kiAjZcaYCZt5nXv9Tfre4HHcf4DgBR/AboBdw5EUlfbFq\r\nSegHlsM33NIubCyjB02ND991uM93N3WdrihIfA8X8H6CYpBmBsaiKa6+u/4O\r\ntbnzUk6KxDzj4DUiUumw/u3r+6Vgmacohnfktt3PJsyH2QyfwXGl9amOlwYB\r\na+riRqKP2S9qI08QIZOKaFhdXHYMkhnxqS1Yah72710YiLFxi9i5Mnv3ba+d\r\nnlxBUBgv0bx8QrajbGQMZjJ5xSVZyTXjoFhq4IAutEWU1yNMBI9Vb+1sj/Cu\r\nJNf6JdpBzsEjEXle09RcKGcY2d/gHhPmoZaGS5W/F7UWCacI49x1KjEGLJvC\r\nCKL9KSP4r1391yB7FApQNlQ6crOSPD7e4qnsTPtvPqOGB6x/TIjt6CAvTnmo\r\nH1iNA9NLJ5wM4Gw9/P4HfdrmOFOXfdVtiqk=\r\n=g7Hl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.5_1656614548959_0.8578285161294774"
      },
      "_hasShrinkwrap": false
    },
    "7.0.6": {
      "name": "zx",
      "version": "7.0.6",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.6",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.0.2",
        "c8": "^7.11.3",
        "madge": "^5.0.1",
        "prettier": "^2.7.0",
        "tsd": "^0.21.0",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "68c7a0efc6df2b40a1ad3296b6cdf40bff75b9a8",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.6",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-zTEUyKHamrr7KAWAunDE9Zo45/XHr7BOK9Y2aDWjOPowjouJlPaNZk4zLi/DFIQcW1vEhAiWvhmhLxlPsq3ohQ==",
        "shasum": "f31d9772bd616db0f8c9a29f81aa71cb27115a74",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.6.tgz",
        "fileCount": 19,
        "unpackedSize": 69604,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCbPUEF3GPpszF2fV3F/FJMu+H277Z2vAB5oPQv/jHvVQIgNHabutnhLMWbMIi+DULeeV6CNVTNNt+JDJqkTU3o7ao="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiv1LfACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoTgA/8Dl4ePQuSJxLPGzb4yag6wp0RjMc6oson8AoCeX7PHwPM520P\r\nrouudjIPgkgISTSTgosVkQn77JMAm17JfgOrJ/gYymv9Z6kNneNP2+1pVUsd\r\nbc2CtezV/5gaAu20TxXfWtZfMrxn/9X+7VaCwZG+4gUw2tqfrBUuzkAaJgmh\r\ne41AIqsgkBeCdtPoQL7Gz3bv6Yz3bTyz6WXsbamqBc4NJY2G8jpO3MLgmm6q\r\nUSnX+a299s1z+y3Imvwm4FkvoihwmxJeOx8y0d2u9F+YEngp6UFiXFWst4Ix\r\nmHhBUA+yDqQ0RCYKfHExQMoS1GjUFTvja7OB/lfOSY+oxsNjKuQ842HwAxTH\r\nzlBU8MAWVK5Gw/De0YM8URVRKkUY6aLaT2qaFyALQX6p11c8O7BJKL/ua8mo\r\n9GKnQDd0EAFU6H949ICNSPGED4+9sQYnDB651AIlZmwk7V6mFfc2pbnRO68X\r\nkU/ixrl5wZxb6KVbDMYMpFoMxlrZVvkEmrWVhKZuNh+tO2xUhm+mtukBCA68\r\n6dtBiN6DWbpUS4qcm2Pi2g1hVAaqQwYwgPgS/suixDEpk5asJaXME9fBD5Wc\r\nGavoltGzV+IiFJ4Bjcq5LBt+zA3Aa0Q54dF9EyzHaFAwoeKlWrULzndU4D/K\r\nOnn7a45FEkFS+vKizCmgUSw1TKPGQ1I/RQ0=\r\n=9cc2\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.6_1656705758912_0.4408551434490602"
      },
      "_hasShrinkwrap": false
    },
    "7.0.7": {
      "name": "zx",
      "version": "7.0.7",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^17.0",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "^3.2.6",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.0.2",
        "c8": "^7.11.3",
        "madge": "^5.0.1",
        "prettier": "^2.7.0",
        "tsd": "^0.21.0",
        "typescript": "^4.8.0-dev.20220529",
        "uvu": "^0.5.3"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "c73ccb468cfd2340fb296e17a543eb2399b449ec",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.7",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-cWF5cWqqrTVxgEPmQ8w/LvUXOK3rJTdgC+Tt1nz113+YncNIO0X6UXgCY72UfE8Az/lwOubbEJARXpQ+7RiM9g==",
        "shasum": "e812b3bfecd49304fd6a415deeae16335edf7d5e",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.7.tgz",
        "fileCount": 19,
        "unpackedSize": 69730,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCjlDwdpWimInEXZaAH4SQWEpNrrfsuFIkaVPRU69FSFQIhAMzJ1PNWhLElCnt8skwGBTd4iItqd3dXKw+PPcduoqlW"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiwLXiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqmjw/9H9N9qTiezz4uhiKoFGtqpVETEAX3CzBc/i3+E1Y1z43Wmxdo\r\nQapM7yNtkYIrZ91k8k/qUB3uL1ANkk8l2G5uZoUzOsPSunsqLvZGDnRwl5jx\r\nNB/BZIRFLJm2j3Bk/X5G8oteR192alL0a5ZJ49WbSyuM7LdYmMVOB8UYkyxb\r\nZMM3TxZzvVyNdLRXCfWmAmMNXr8XOFN2i8/GcHq+SB4EhreO8CYFKtwD2q+m\r\nZn7ovX2ZILpo3WbfLJxc3R+0Q8A5fbK9yQJ1IAgu2U6KmwWmn5ZuKNqonhez\r\nVMXCYzwwYiUwtG89yF6qDG/7QPJBNycCBM4DnylYaoH2smeYBPnCtY4bQS1M\r\ndmed1j097euW72j7RD9bbDi4tOA0oR69H0IzP9rxbOgtqxjLjz8qPu5PQX2r\r\nUPUK4fQ5YZvCVnLk9KWNA/HQF4J6Gx1Q/jmFCEuuMiH3nZxXciaahHqRnrae\r\nEzWT/Jii7k0zvpdaelh8dd65b1S+z8iZIIetHygcBQ4/jDTwPvi4A5oEtn2q\r\n3/Jew6CvS8YoQVTdvscPP6gfWkfgG+6S1jfA67bDJlKfXdOaDHS2qfPF4Vgw\r\najEJaIYUtF13UT3Uov5wKFWOJMJMv7IEWmbrnQ/4hEp8BX+AvAsz4WQcLzcy\r\nCqtUJKx0rEJgeqidzLyWuY2PtOv5UHrxqOE=\r\n=qIpd\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.7_1656796642798_0.4027339817317759"
      },
      "_hasShrinkwrap": false
    },
    "7.0.8": {
      "name": "zx",
      "version": "7.0.8",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.6.3",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.8",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.1.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.22.0",
        "typescript": "^4.8.0-dev.20220729",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "53fd6dbf521ad0a41c1e7b1ae20f06bfa48a3697",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.8",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-sNjfDHzskqrSkWNj0TVhaowVK5AbpvuyuO1RBU4+LrFcgYI5u9CtyWWgUBRtRZl3bgGEF31zByszoBmwS47d1w==",
        "shasum": "4a4f2ef060713b5d54f947062a14a67c89818768",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.8.tgz",
        "fileCount": 19,
        "unpackedSize": 69840,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBryCif2zKT8gUyfL0Dr8AZoBpZWUmDKCeUH4LzrIEdxAiBLR2Dam5REEGNQr4Z+uTjIQjx3ZS/vNer3CKCQUtEPaA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6DlmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqbOQ/9FwijABydfQYOev/nyYbHQMES6JG8rImBC/CMi2jjYznycRPh\r\nm26wjW+y0v7G6Mc/4Dw+rP/Gpux0/yPPHKy+vP3qD+C+GcTghjrdGXVF7wiM\r\niClA7Cp7CG6rFwcfuQhg25N/SbMYijnwvFBhnTAL6l5/BCqnjVqd9mtKmg7W\r\nTQ1wUeQAKdHdmh4vm49b4zFA0+W3oMdIyUV1o061LMloAEZ1nk6FzkOJgIOZ\r\nbj1ktjYrsq1wiZpcJh4c8gYMCVTzmKTrXH1SYOZTpKtOLXeHCr1NCrqyt+fE\r\nm5q21YiGmF2vdKFD6TtB54nO03ivEy0dBp5oUsKWNBAWYd5eX/4MlsqvPtOu\r\nzIWwaqDvjwtjKsTfgLNJcS2EbkdHjTe9OWsgpoXKXZoTx8hiLH7cGUiyhX+6\r\ncCdnka4mQUAyL4tCWGx8W13izGAKXXTA+oKEVhXOK5yQ8paN4AUMjzqPAoMO\r\nIR40ASXejbGhW0YH5X5TYfoWJ63CDYw2Etf6MA7I3NHdkjxWuG/8+30ouVOq\r\nL5WD7qRpZTWSypIeEjaqF/Jv6zIGA4OXgbhpKHRkdXZo3zvHzW34bDXkZXEs\r\nmcnUAQBw6PRKIck1kPBmK9akD9sTgRTUvNFjzrYk2bN00uTQQfeoLF1NjjZ4\r\nHuV2BUBxQ/n73V2Opl3Gm6dsc1xiSz2TtJU=\r\n=+cDu\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.8_1659386214726_0.6515903861779344"
      },
      "_hasShrinkwrap": false
    },
    "7.0.8-dev.905ec9f": {
      "name": "zx",
      "version": "7.0.8-dev.905ec9f",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.6.3",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.8",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.1.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.22.0",
        "typescript": "^4.8.0-dev.20220729",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/log.ts).\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## CLI\n\n| Flag                  | Description                                                                                                                                                                                                             | Default |\n|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|\n| `--quiet`             | don't echo commands                                                                                                                                                                                                     | `false` |\n| `--shell=<path>`      | custom shell binary                                                                                                                                                                                                     |         |\n| `--prefix=<command>`  | prefix all commands                                                                                                                                                                                                     |         |\n| `--interactive, -i`   | start repl                                                                                                                                                                                                              |         |\n| `--eval=<js>, -e`     | evaluate script                                                                                                                                                                                                         |         |\n| `--experimental`      | enable new api proposals                                                                                                                                                                                                |         |\n| `--install`           | parse and load script dependencies from the registry. You can pass additional [params via env vars](https://docs.npmjs.com/cli/v8/using-npm/config) like `npm_config_registry=<url>` or `npm_config_userconfig=<path>`. | `false` |\n| `--version, -v`       | print current zx version                                                                                                                                                                                                |         |\n| `--help, -h`          | print help                                                                                                                                                                                                              |         |\n\n```bash\nzx script.js\nzx --help\nzx --experimental <<'EOF'\nawait $`pwd`\nEOF\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives to `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "905ec9f3e3137e4cedc85486b849f8229128a3d9",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.8-dev.905ec9f",
      "_nodeVersion": "18.8.0",
      "_npmVersion": "8.18.0",
      "dist": {
        "integrity": "sha512-WK9V0Ypj/giIeUdPDBOyNQrCwq5BjydbVV5YvI8X3aS518zaQpJPSyTTz9zdBT7aOS0ynesnAxDWERHrLFGP5w==",
        "shasum": "aca1a969c13cf31ab2aa2294e2bd5c1492e75fc3",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.8-dev.905ec9f.tgz",
        "fileCount": 21,
        "unpackedSize": 76085,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICzN+z16jl6GInMWAKzQuz3I3NAXYW+LUZrMA3y2cFTOAiEA8oftWzqBgdp0HWNxrkvvI/64ElZ3yt9QpTrdWThdMdc="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjC1umACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrk8A/+L/WLlKph0OPa0rdBEM4683mtYxnrEEc90aMbEUUPJn5fwuNw\r\nOePJ9qlbrScUT1+U+t9iH+AvZaTQEZTGnTNbSYFzcu/9RMb1I6ruH19cZh/d\r\nxKbhgSR6hfXo6Q7HuqiKxdX5qZd8AmcR+PZDJnsBjjhoJ2Pb6Q4dZ0RXW6fO\r\nhlNdILNYF3k7xOt0jr2NjuUudo0e2YYldWi4pgGEVLMWFa9OGP9k2aL0qPGN\r\n+uYXyAxzFhunX0HRCxYBY+dULYyybLZybbfzgSTcvhp41by/+cHb+BKLoU9P\r\nIcM+VVfUDApJ6+hW9dmjud/vvk6CwmFqFLa9nudqWaUnqGjxjeCxooPwUOB1\r\nhS812FSpezLYf6ET04RTqcAOrTdHv5c7mO8dx5EKJFfJScuWpsmaaOPvV6W5\r\npkNmRFftfkmMhbdcMBJeXkKVZ+e8qmMjru0AeFiIYau3x+brGRvwSfcogBqO\r\nzNlKvZ5XPeFdXxiFpZVYJhSHbn3nFQX588SkYqOMc/RkZOsCq7btAI50PLDC\r\n4Rr7kWBJnRz5n5B/DJhFpGuiz8l+xJMCdjOB1+gQ4zBjmm16vLNIxpwYMgO1\r\n7RLfhOsVntQiyR1ewx0Qe6+DYbS9OPHxeCOLtqwPXR+OA2iJV4f+21Jttv3H\r\nv60fTRd9zSaWiD49zwREhRg8k6nHt+JiH3o=\r\n=tqQF\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.8-dev.905ec9f_1661688742703_0.8247714425887298"
      },
      "_hasShrinkwrap": false
    },
    "7.0.8-dev.5f15516": {
      "name": "zx",
      "version": "7.0.8-dev.5f15516",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.18",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.0",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/log.ts).\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## CLI\n\n| Flag                  | Description                                                                                                                                                                                                             | Default |\n|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|\n| `--quiet`             | don't echo commands                                                                                                                                                                                                     | `false` |\n| `--shell=<path>`      | custom shell binary                                                                                                                                                                                                     |         |\n| `--prefix=<command>`  | prefix all commands                                                                                                                                                                                                     |         |\n| `--interactive, -i`   | start repl                                                                                                                                                                                                              |         |\n| `--eval=<js>, -e`     | evaluate script                                                                                                                                                                                                         |         |\n| `--experimental`      | enable new api proposals                                                                                                                                                                                                |         |\n| `--install`           | parse and load script dependencies from the registry. You can pass additional [params via env vars](https://docs.npmjs.com/cli/v8/using-npm/config) like `npm_config_registry=<url>` or `npm_config_userconfig=<path>`. | `false` |\n| `--version, -v`       | print current zx version                                                                                                                                                                                                |         |\n| `--help, -h`          | print help                                                                                                                                                                                                              |         |\n\n```bash\nzx script.js\nzx --help\nzx --experimental <<'EOF'\nawait $`pwd`\nEOF\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives to `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "5f155162a740b382af9f32e8170a0126ff3be8f4",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.0.8-dev.5f15516",
      "_nodeVersion": "18.9.0",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-hhHeSaNwkX/otP8SNvhLz2QMdtvs36ia97Ekb4dKi37aNIm3hgol9zPMNM5H9FZCeHx0YIf4rnX7irorXN+sgw==",
        "shasum": "e5f7c5fe560711fbc25b555540c826eaa674be55",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.0.8-dev.5f15516.tgz",
        "fileCount": 21,
        "unpackedSize": 76074,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD0VjLpPkUfmgtB3dGaaE6oV9ObAikKdZ4dCdgyuH6ZUQIgE0g3qqh2+a7bt6Nv19/vFE01TSsecopnCjbiQVV0aMA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjIkZPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqvpA//ZceRVhxziHGbfB8UTm7z8lDApZ4FVcAGG/+JenFJbajyDhTe\r\nxKQj6DOF2ocb3tdiQhwTo180NrGpnvrAFsBKsRaiIxbXMHliIS+iH5PVKBVk\r\nmJgZkTtQimVfUyCPDvQcuOAD9ht7HzFKld3AcHbfH3fImvlpqZBT8Os99Lh0\r\nYhoA8SFM3DZg0JW/cA4B4lgX99NaoXqAyOvL85+wutHbYtt2QLNLZ85LDAEq\r\nmQT+na5OBl47LnkASnknnz2wBSFl9DK6nkmWmqoS7xGEgE9JTZ+SEuQgC4CB\r\nqCbbKfyiwYpMCJMnDX+bUa78jPX6MXD7LlvnJn+S3zRteh0d7xrYwqZZkKua\r\nUYsIieDvWr4mNCbJw3wpJmnPRAuBPyWgqfgIQb/KsQL7y6xeqplozvAhTZgb\r\nQW+f4yrSj6bEOJCmcTgtlTHaXVgj53iL4DtRl8MvY16OcuY7fY80PCA+kj36\r\nAxII7kIRd4uatgjyOVgwVvIhXdFKCq8uJDYSsMf1wIM2lUOIRISDEz+tlMi5\r\nRVEwQGpI/0WSd5db+NjNOa9Z9mYsu597XvOCUXiL6hKv7+pmUVPpUjM6dH3Q\r\nFhtNutZ8z0mpvs8Ao4lQzzqKHjmay7YY+Dh+nVTeqnFvKgZ2RR3d8rpyNu/I\r\nl7jl87wvYl80dnqkS4t2Fp7QxHWD5m9gxVo=\r\n=bjRl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.0.8-dev.5f15516_1663190607377_0.3300893494479573"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.2dbf8e8": {
      "name": "zx",
      "version": "7.1.0-dev.2dbf8e8",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.18",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.0",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/log.ts).\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## CLI\n\n| Flag                  | Description                                                                                                                                                                                                             | Default |\n|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|\n| `--quiet`             | don't echo commands                                                                                                                                                                                                     | `false` |\n| `--shell=<path>`      | custom shell binary                                                                                                                                                                                                     |         |\n| `--prefix=<command>`  | prefix all commands                                                                                                                                                                                                     |         |\n| `--interactive, -i`   | start repl                                                                                                                                                                                                              |         |\n| `--eval=<js>, -e`     | evaluate script                                                                                                                                                                                                         |         |\n| `--experimental`      | enable new api proposals                                                                                                                                                                                                |         |\n| `--install`           | parse and load script dependencies from the registry. You can pass additional [params via env vars](https://docs.npmjs.com/cli/v8/using-npm/config) like `npm_config_registry=<url>` or `npm_config_userconfig=<path>`. | `false` |\n| `--version, -v`       | print current zx version                                                                                                                                                                                                |         |\n| `--help, -h`          | print help                                                                                                                                                                                                              |         |\n\n```bash\nzx script.js\nzx --help\nzx --experimental <<'EOF'\nawait $`pwd`\nEOF\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives to `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "2dbf8e8e7612e702557d401dbb8bef8e30d4c5c5",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.2dbf8e8",
      "_nodeVersion": "18.9.0",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-RXZvqh/lUq9IQHyWq7yGRjKobcLxNQWIeNafMM7wjRIWtT5eUxnWFhze8rD5A/lqc4986y1ZiV21wO95g4s10g==",
        "shasum": "8fc99cdc58335db3d0fb9aed6fd8e58562dfe0d2",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.2dbf8e8.tgz",
        "fileCount": 21,
        "unpackedSize": 76074,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDmUjmAWwwZbefxAuB0+gC2EICZDrPZpku2lqbUTuzTAQIhAJRyY4ayC6TfLmYRUJUuGZlKk+yPS+GV82OEDXGE4AR9"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjIsjeACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp6nQ//Vk07NRaxrkmczeT+nUOT1tR9JSVQudi/dQqG6kSQXIcFNxf4\r\n/dqbtwGsNnyST+C1H2sChOC7Xu3vgu+nQUhEWxa1kPHkctzgdkUey/jacaeB\r\nqjoKjFsijswu45IWQ/w2GpsmyhPiGSEB6oHc/PiBcRwTfNPren43g69CHB/b\r\n6GGtHCu6Xr8g2rqNsPv5X0u9akvVZR0c6Rk7QzruqR8j1m7YIvFN5lnB6V/u\r\nD8mneeGbNKpVlxQ8XE6OuRip7dcuqx4YnZsV50JmP/+VfLssUz5ygrX2XjWE\r\nS+DNEKEz4WD+R5S9s73N+D/TFkAhB1n7/aNUKnDIyXtZTdK3By1s7BpW6HuP\r\nqSlHyxd5P8oBIylulGOX5yiY4Wk/Xp/KOPUGr+gsyoZN0qhYOSuL9xu3qjP4\r\nzwe2CdZV50//NBDquwYJC6LsfdJa379x2RdDlSCQNQfY/Pin6e8JWfzx+KW4\r\njCDn3KzswcJIgcbGxH11hhikn5Civ9JY1sWCUF6HMmrV/TQF5LpHl21DdprG\r\nP/KPf1x/PvDc/XbebEdnyPO+BmWpr43WZpauwH503NQ/Xs+O26C144cpYY8y\r\nFxy/DMlSZ4eXU9jx01I2g7CHvnHhgJZiwGm/EuWAxGcsowKpNB0tM9lXwQdn\r\nn4jToZkr1sBj5q6T0lsScIzVhoX4woeFIRI=\r\n=igO9\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.2dbf8e8_1663224030543_0.9215975282149895"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.65d76da": {
      "name": "zx",
      "version": "7.1.0-dev.65d76da",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.18",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.0",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/log.ts).\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## CLI\n\n| Flag                  | Description                                                                                                                                                                                                             | Default |\n|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|\n| `--quiet`             | don't echo commands                                                                                                                                                                                                     | `false` |\n| `--shell=<path>`      | custom shell binary                                                                                                                                                                                                     |         |\n| `--prefix=<command>`  | prefix all commands                                                                                                                                                                                                     |         |\n| `--interactive, -i`   | start repl                                                                                                                                                                                                              |         |\n| `--eval=<js>, -e`     | evaluate script                                                                                                                                                                                                         |         |\n| `--experimental`      | enable new api proposals                                                                                                                                                                                                |         |\n| `--install`           | parse and load script dependencies from the registry. You can pass additional [params via env vars](https://docs.npmjs.com/cli/v8/using-npm/config) like `npm_config_registry=<url>` or `npm_config_userconfig=<path>`. | `false` |\n| `--version, -v`       | print current zx version                                                                                                                                                                                                |         |\n| `--help, -h`          | print help                                                                                                                                                                                                              |         |\n\n```bash\nzx script.js\nzx --help\nzx --experimental <<'EOF'\nawait $`pwd`\nEOF\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives to `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "65d76daa404701f9d6537612c11600d7f7dff9ef",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.65d76da",
      "_nodeVersion": "18.9.0",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-/fMcsVlzxxat6ZbT/+ZM2U3r+38ghD22gUIBuU2ygycFecSu9mrnXWO811hFCoWgVNfwHCNbtnSimW4XoVmAjQ==",
        "shasum": "279c1d4ce15e29fe36fe0b91be00d41195188f72",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.65d76da.tgz",
        "fileCount": 21,
        "unpackedSize": 76074,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDkCC5b1o1LHDaYKDT0QY5RgrXRfnR4jAOtUW4bR8QJBAIgNL7gP7m0ikwBxnAzNaq20pHXXC8SCWnNX2WbFPNl+gA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjI5DwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqGAw/+Nl1lJozM19f0dUDQI1LDyJx7TtDuCGyULPIhiOsIAiAKGYPZ\r\n8gkg44WoPVsS+OaKjvz3COudIc85VQxqTFBWZjazv43owJl9yLfkb3/WpDUs\r\n7QTDp5SRXAbuxGf+HjlWG0yEgxtjt8F/4cxwFgH0HMWA31GxrP+DS8mRCEdg\r\ndL2CUgRliD2Fb84iBmlO7oX2AXrLYlkHLUBvMR6RgvTCVCvIJwglh6SP8cvq\r\nAewIGlJ5DXEkiyzzdF8Za1pMMEJFTWLo/1kEaSsOf/UYQM1yMUpkazEP4At+\r\nkqbsuAcHptGXkZ6i36DQnKeNVslaPXVJmSJkJ3U0JAoAAjbFvIJQYtly6w7Z\r\nU9EFDqkOy3d+mYizQaZhfpqJfd9n4ydiJJQe+x3opnDcpqaVwJhh+TAnycau\r\nzq5E1kndD8RqyyPeEJR7VCPiTx2yOmHoik8um/evJXL/56JWdyHMr33FIzkC\r\n6bRNoccD04CsSUzz9bcDObJxuwbqUdOuhyQo2cb1HUwlo1fKwq2Y2aA0Mui+\r\nHtzGgwDjGoVvxnv4mafs7vqYLXR0rHG9JnfwcARvMdHz85l3q4J+AV1JRPbe\r\n8jAd8XeX8fYL9m2Czj9olrwhtGi1Hy5wwdnZgH9kCQJSXm6izIhyZIg98XrS\r\n0+Iq9tK/yPaLW3+KhmweBWvj3IFtE6+UYsQ=\r\n=lrVV\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.65d76da_1663275248025_0.6683532414341691"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.96d40f9": {
      "name": "zx",
      "version": "7.1.0-dev.96d40f9",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.18",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/log.ts).\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## CLI\n\n| Flag                  | Description                                                                                                                                                                                                             | Default |\n|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|\n| `--quiet`             | don't echo commands                                                                                                                                                                                                     | `false` |\n| `--shell=<path>`      | custom shell binary                                                                                                                                                                                                     |         |\n| `--prefix=<command>`  | prefix all commands                                                                                                                                                                                                     |         |\n| `--interactive, -i`   | start repl                                                                                                                                                                                                              |         |\n| `--eval=<js>, -e`     | evaluate script                                                                                                                                                                                                         |         |\n| `--experimental`      | enable new api proposals                                                                                                                                                                                                |         |\n| `--install`           | parse and load script dependencies from the registry. You can pass additional [params via env vars](https://docs.npmjs.com/cli/v8/using-npm/config) like `npm_config_registry=<url>` or `npm_config_userconfig=<path>`. | `false` |\n| `--version, -v`       | print current zx version                                                                                                                                                                                                |         |\n| `--help, -h`          | print help                                                                                                                                                                                                              |         |\n\n```bash\nzx script.js\nzx --help\nzx --experimental <<'EOF'\nawait $`pwd`\nEOF\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives to `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "96d40f9801c25801735c7dd12784b6c0cf979f25",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.96d40f9",
      "_nodeVersion": "18.9.0",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-LcYqnky5y9PJfRBxsuwzqmk86sUDAaUzN7jmfqC6/Lv82rxfOXnzun7ORPkI/h9cgWt5KF0xrZa2qKtH/iA9LA==",
        "shasum": "89c57b83efe81aaa9a5ae8804cf3230e01afa342",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.96d40f9.tgz",
        "fileCount": 21,
        "unpackedSize": 76054,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD137Z1P7Udf/0TUF+Ifi127WH+IqK8RRj9lGisactZowIgHduqI5qfbN4YoT8crv+ChAmf2gTklx679kAVZmRH8x8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJcUFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqoZBAAkNMy1s1996yLbTkMcmhyHqrQTw9yifT6kPMg01wNYiCV9eh/\r\nRIkT8EXj3V+v/z1Fx9+kdt9ae5LbVRWLT2T/LzeJQVxwDzyudBLU7plPjZJM\r\nDjKPW1YgsMJo5LO9ZClPkDix0iXYQR5u/iMjpE9PjMssNnogBAnCUHeuQ0Es\r\nGBG4Et7HLlkrNPAdE3pPswqobHYA7csRKhCBxcOpXvtgpAVTRN5ubXSzfXU+\r\njweY/CaeD57C+O0nLRmsOM9ARFCRN8W7jBw8WBFhGslPMqmvSJvQPItY7iaW\r\n37hAO4bi4wZo+K7fNcOz5bWHcNUBD1L4E12Yh9ve7UAnUBs+w0n+ACutAjx1\r\nxYjISY23jllbIqathcK2MfWefifGkyMpKuFY4eVSQwvR7rc/cp0GY8KgGHt3\r\nngRaSACHQjAom9voebQDYBAA4dKEDtYBFXdl2DlGGq9BwanLTjA++3eExTkV\r\nDdbLti7E2dv/nFF1dcAsBnqEzPAOVOoo07yVQsr4J4iMan1FQQBmQ9xZIZSr\r\n9ZmRNgDv5jLNcfUc5JSsLhLgNrCWpmJq3nUxy1iv/g5Bhi1RvrZGjIW81Bsl\r\nZUDJsGu9FpSjRWKsGrfEU1Z1Wlm7ZsH3EFATaomrm66IcTiZsMnyrWJdT4BF\r\nNkTGYHousor/q3KUDp791uzQiGiUwZdzn+c=\r\n=siLo\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.96d40f9_1663419653316_0.8703250990453175"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.b684619": {
      "name": "zx",
      "version": "7.1.0-dev.b684619",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.18",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/log.ts).\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## CLI\n\n| Flag                  | Description                                                                                                                                                                                                             | Default |\n|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|\n| `--quiet`             | don't echo commands                                                                                                                                                                                                     | `false` |\n| `--shell=<path>`      | custom shell binary                                                                                                                                                                                                     |         |\n| `--prefix=<command>`  | prefix all commands                                                                                                                                                                                                     |         |\n| `--interactive, -i`   | start repl                                                                                                                                                                                                              |         |\n| `--eval=<js>, -e`     | evaluate script                                                                                                                                                                                                         |         |\n| `--experimental`      | enable new api proposals                                                                                                                                                                                                |         |\n| `--install`           | parse and load script dependencies from the registry. You can pass additional [params via env vars](https://docs.npmjs.com/cli/v8/using-npm/config) like `npm_config_registry=<url>` or `npm_config_userconfig=<path>`. | `false` |\n| `--version, -v`       | print current zx version                                                                                                                                                                                                |         |\n| `--help, -h`          | print help                                                                                                                                                                                                              |         |\n\n```bash\nzx script.js\nzx --help\nzx --experimental <<'EOF'\nawait $`pwd`\nEOF\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives to `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "b6846191b5331cebaf716151552219e4971ee77d",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.b684619",
      "_nodeVersion": "18.9.0",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-TDfRuIQmlWyNTtea4+OW38Ao7WuqOuQ1dDxUa+TWHjU2ME39TRXB962/jhpfqorIcflUPJxrEARgiefnHTfvVg==",
        "shasum": "fe57625f8e299bd96e8e7183f5a9bb805836c2cb",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.b684619.tgz",
        "fileCount": 21,
        "unpackedSize": 76504,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDGqrKw6Z7MBR3KMNCkjNJa4vH4nU8WcVFwwnFWZ1bzxAIhAL+NBw8IKVz3GLkSzS/yDNKFCuNmy7PnwJSe5pS81hYm"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJ3eSACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrZOg//aA7rJuRWSctgN3tQ80Nni8mNnw3h0TeCmhqkFSAsqYfw3lLX\r\nbTRN55NG9zPrujLZv/I7efoN2m1HOCcx9rYfRLv3oNawbI3FsTgcocLpF/+D\r\nfYMwCZVNzUp62lstXKyAX36ETMp5DE4ZLHDlyQ9rpdyb3W2w9j33sxTP9gB2\r\ncAkIP+ZPm5b8SriD0SB3hWrCq7hEq7wZLkdKDDFtX2DBDfqB7+wWXPhl315S\r\n/tWb7sBrayMMyWoDYutTHwPBfORrhWo0xhvlXkkJSDwIc3vDBTqC4Q8DrJ71\r\nMltho6iwcjdxPDgx9KNeNAtOiQYRtSZSYWaoESlSKmLV8PqQK2tVm0OHaWHk\r\njhIuEIA+AhSX1xQLykWYpbll1U2g4/OFnPasqNzam1WdohoQlq173/V1C9Oa\r\nbf4m0KM5ifesaeewqKfIbv5czj59kjwZYXQRhDeropG+iFoY5TfCR+jq2cHz\r\nJlFZinBiaYtqcCI02VI5umkFDzUgzBZaKQN05n6A0yCDmo0y4BBEGF6Mn+/1\r\nGPx0rKXA1vqaojBRJxk+zEtz108rczh5dvaHY7CRo3+KLtARcA6XDwhejMZj\r\ng8sfLszHakWxAmHACDugwWsO24nLDqD21+DpZxA2sV567xOX20grRNJ/By40\r\ndLUrQjZpZBKWBGtX0oPgtXRKTAY4aLMVsBc=\r\n=5g6+\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.b684619_1663530898244_0.7387196454090323"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.6f7b331": {
      "name": "zx",
      "version": "7.1.0-dev.6f7b331",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.18",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/log.ts).\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## CLI\n\n| Flag                  | Description                                                                                                                                                                                                             | Default |\n|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------|\n| `--quiet`             | don't echo commands                                                                                                                                                                                                     | `false` |\n| `--shell=<path>`      | custom shell binary                                                                                                                                                                                                     |         |\n| `--prefix=<command>`  | prefix all commands                                                                                                                                                                                                     |         |\n| `--interactive, -i`   | start repl                                                                                                                                                                                                              |         |\n| `--eval=<js>, -e`     | evaluate script                                                                                                                                                                                                         |         |\n| `--experimental`      | enable new api proposals                                                                                                                                                                                                |         |\n| `--install`           | parse and load script dependencies from the registry. You can pass additional [params via env vars](https://docs.npmjs.com/cli/v8/using-npm/config) like `npm_config_registry=<url>` or `npm_config_userconfig=<path>`. | `false` |\n| `--version, -v`       | print current zx version                                                                                                                                                                                                |         |\n| `--help, -h`          | print help                                                                                                                                                                                                              |         |\n\n```bash\nzx script.js\nzx --help\nzx --experimental <<'EOF'\nawait $`pwd`\nEOF\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives to `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "6f7b33181965e7ef05ec7b983b39bb9af7e00194",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.6f7b331",
      "_nodeVersion": "18.9.1",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-YSg6u+BhaErUX9HXEbE7DLx5o4lHjbY9L+NvtlEFWvLJA0n7AY62o3+R1ROcAOGetoDxiqow3K2JpuooJkzY6w==",
        "shasum": "4566f345d5bb0831d2bc2d2b1e7ac34d11b97c4b",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.6f7b331.tgz",
        "fileCount": 21,
        "unpackedSize": 77003,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCGDvuny+4l4Ctg5mzx15/XigKWHfbmFRVDAsMR6lFxKwIgXQdmf/ySbudUFqKcsnhs/PhtOmW/YH8s1jXprLztwOI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMCWWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmodFQ//au5nYR9empyeeRnOvlHUWzeLwoEF/aVlbY6SwvX1P1YZIl/8\r\nxTikbPMiP/sAj8fuEMfmLMfS6D2E23IYJEhpZoqJ0+2XFY+3k3jwzdFUqH/U\r\nD8bCdsmCmI0Kil9QyBJvIiWIM6nulWy0g3Tu1iCHtkGEWov3eEWUs9/1+RDT\r\nCjwH0NIx9CxIJHqJRF5aFRsA0d6ajuwKSkVD5OeYW55wrZozUbL92FDDCTI0\r\nonCPchbZ+hNAlVBgOGVWhT/3MQnvs4hZy4oqY8nrJqyXfEVPSdWMGFIvi/c8\r\nTIgTtdqoXJrIHwAIhA94iF2Fy1zkD1pzhkEHHsZiDtWyHv3vxvx14CO9cTxc\r\nRXvVClPEMBJ7P9ZTwnO0SjL1UdDRS9mQdYeJt00RmHHPWxC5f7z+f5mjsid2\r\npOgDaTGvEmlea09eiO89I4+yEOG0+H1sZ5IwVpqfBHfa6ojWz6iWVHEIipDS\r\n38PU5AP4XhVgY9Ea5HgjXgGYGcdUNwTagIJ0B/M/pGFgHIQMnc8A2Ik9kaKn\r\ns0t26gcuTHIGODRy7h//9jPzOtC5yJVKNJrQ4xGRY1a8aO1cxYvaTGMHdvdy\r\nf2Vu0wTzDq9/K8Zoj3RdEZwC4Luca6Olso0rOtFYMZ5grFnyEffJY3bBP9jb\r\nDMNsFhRZewBzhC599baAjejZwc+eqSHrSR0=\r\n=0AsL\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.6f7b331_1664099734583_0.845339650961636"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.c768e53": {
      "name": "zx",
      "version": "7.1.0-dev.c768e53",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.18",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/log.ts).\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies \nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after \nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives \nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "c768e533723462b5dbc7f4f6d157fbac3f8e5da2",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.c768e53",
      "_nodeVersion": "18.9.1",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-qY5LpLin4P3VDV6lWAAhKOT0tU/1xDOyGn7NQUbBQBpgs7DLHNnUaed1jO+65DbCvi6/rAYjjAe/GLDaR5d+Zw==",
        "shasum": "f3c12123be9c8df4fe16e096abf8f3e086de9803",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.c768e53.tgz",
        "fileCount": 21,
        "unpackedSize": 74495,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFkeJZ+XwccKaHPFx3TRG+KykAVP4jNCw4MRib0Rx3n9AiEA7bbhVtqt41dEuzNkF4EwDijtdmzafJA3pTf3snzrWtU="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMCh7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo+OA//WC65imJ7M8gvAaKlTW5mZqGcZWU0gHzfBngd0NDTsQ8EZ5VC\r\nT1+PysZwtv3X4sPXoB9BJbDr06lGdQE6twF9FR25NngNH8BmERxqqqChHQVf\r\nfe51tRaczzDTOJfuldun/CopFoM5hJ27q2Y0UWuT+PvyFgU0aTzirMCaMPAt\r\nAZEp7WUAs5UapKtf4EwjRVCRKqw6Q9mbwibbT4oVYmuR/HT6AJp9j5N7XNuT\r\n/PGvcTAEmkqu3IOqHyVjaImAIW9IPf+jd0/hs7I/UI8UnVTZFLUWEsocWHIp\r\nNe08M9QvvpDOWv2/rCkdso5Tot4Zpp/bRwyf/KPXA0CqAPxjejW3It6Z2IaU\r\n0g2lfz/FuxR06I+//+Ee190Q0vllEcsUxbJB04qhZplkh3KE0RLzUdAtW1b4\r\nS3QzDe2DC1ylyHcDoEvpvK5sIptoKSXsliam5Vl+1KsxAXXYXJRG/w214K0C\r\n9iaUGwwf0h9zc7K+9vC7E/CYi5YkXdF421hINB91jwvLddO9R445yXmnIosB\r\nyFAqBDgnLJ/LShXm5j6i1/ny+AKpILyZsqonK4xZ2OWO7jyJG3PoUz/HqjvO\r\nTSohCm/JsGM8bgD2ro7XAI9t0t8Djfm0FzSphEuNILDKjycRS2Lu3iGUi2xY\r\nAJ2ofNVUMZZ63O81R8FJJ/VRsVDZJkitj1Q=\r\n=g4Vl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.c768e53_1664100475591_0.4247231738877384"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.b6a2f01": {
      "name": "zx",
      "version": "7.1.0-dev.b6a2f01",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.18",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/log.ts).\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies \nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after \nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives \nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "b6a2f0109406682429eacd195b67afd67788f05a",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.b6a2f01",
      "_nodeVersion": "18.9.1",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-i1a6um2JwQIzrzkVQDs2k85vPRrfoymHovLk+c88yp++D+UXeymxMVI46SuHc73zLN++/uy8wJjw/eA2rHejEQ==",
        "shasum": "c19ed3869c5fc5cd57760677ff7ceb9c1fcfac22",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.b6a2f01.tgz",
        "fileCount": 21,
        "unpackedSize": 74440,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDH92nnT39jbLfP0OGJe0BSdg/zsa7SWORm7A551cDHGAiEA+Uc7s3Qe23LxZmn6WuDSxTFl9wGzZFR4h1RVQrupdT8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMDFqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrHlw/+PyuzJgusY7Rc80ewBfHQSYldRuP7XYxSWeC57iV+igWjzjNz\r\nfedsQZColx/tH3feQxuyBdWBkIYrT+yQPW9nrE8ToNDvA2uhX4644Q80ls2W\r\nRxvOz89Q9GLAtSW8jkXxCRZsuQrzpkBOhPDmnojWc1wBjw8vwg4/29CZ3Fz7\r\nxVATmutgFZ6h0LjCwK95Y2YOgx2TT/bdkaT0USvu11AhshsumB4nvvURZhHs\r\np0j/gi3J7gAU+K/Pc7b48WCKV3HnjJVEU8sNLsd60HR5Lqvh5BsJ5ZAJbhzJ\r\nLWi+wIYwGwKVeSZCrsqCdEdtoohhs8LlPsSNwERHOPcvCHxcLqgZHEcN9rVr\r\nUprM3a4iTzloAnp0+hL1ImLnEO8ObCsyTHnSMAZ16fvg7F2BpZIf3IOdqU9Z\r\nV3qTzdSsiOVcxfoqSGVI2EH8YtWAhUE4z4qz0NznsRn4EIr1PoGWktJU+f1U\r\nJqM/BoMhIzT80wK68p0c36NrHOZPXr3T1VoovZb49wlwajPON5I3fYKWVfxY\r\nbV4cDeFoSRnK77LUYXYCPpC4yBD/uMP5CWERuIkP3BKenf4isOmCpfUDMjqt\r\nGDCGB4GXTaLKbfegnoY5wyGJlZD40IEtvhX4gFVltfxaosKs7sHJ1GNxDCkT\r\n9GCTwSQ9wVUbQ7Pm0C1iJCZzDOWDBvMzK/Q=\r\n=6ukt\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.b6a2f01_1664102762249_0.030323009508033794"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.38c4497": {
      "name": "zx",
      "version": "7.1.0-dev.38c4497",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.18",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies \nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after \nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives \nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n### Canary / Beta / RC builds\nImpatient early adopters can try the experimental zx versions. But keep in mind: these builds are ⚠️️ __unstable__ in every sense.\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "38c449704d485f61a023ac8d6f257fbcb427e7d2",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.38c4497",
      "_nodeVersion": "18.9.1",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-SMs7vagZq2SOVEifP6nyiOntZm0CyLkhXca4w3wKVSrWJGQtt0UtA0j6/3JyvtogxbhuxjliF0I+8LwEib8u3Q==",
        "shasum": "4bbaac584d0f3cbe6b828c76074bf6fe7253b63c",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.38c4497.tgz",
        "fileCount": 21,
        "unpackedSize": 75012,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDR52a8ytlbI0faetk6O6vHQPXaAtdOXYsR8SpHPRbVPQIhAPj82cyQ2JtHm09F2axeDHVCMHcRRloAEfHXJVIu+Msy"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMDHsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr46w//aXjdUA1C7+aZu41xo2Wul5Wx18epikzpxOJcM7Wx/T78XgZz\r\nWMvvp6Y977U2TjnRCbZ5lA7dml6pkQuZxu7Q4y0dpW3uQIuOEurTl3CH/hGM\r\nFCgvyzO2nIqm0l+57Bcqh1iZvGz3/aAdAe3TzZUXksszyBYGFtdVAr6x0z+X\r\nZL37Cx0LgDmLL63TdSb14Oebzq1fq7+Usp9baOab3eDFv2kKhlrP/NVyopha\r\nQ1KFskYnsKE62QFFZg4YujxEO4eRXOcXdBk5omBrw5PtC0Oru8U3VIV6rWQ0\r\nZH7fvkT/2zUPZOPyHL3KpauZggvtgTW8+oaXQ0XnCVDyQ/g5LmbIQo3CcO6l\r\nljBNkuxtdA0xFy6PuQkY9BeAQXH/yfETGOxq1XhX9bsSJcVis3REfdQvGntR\r\nG8id3wNtpxUXLMG+SG+JR0jZ4ovuf4rixpwvlgyUjz92/lY45uc7OdvVuR4A\r\n3uHjuSZ1ZSeaS+ym6TElEl6a2gv2E/gvjhGqLmPeN76+jIQA9GWAYet4+U0s\r\neA+DrTTXWahZL1GgizvGjsHH59r8EuMmrLV1UoA4GFRB4yPHB7gRFyFcFOkn\r\n4Q4H0j6MMc2d08/IxDdxLN3+5LiKjiIsLq21Cs5K+CJbyqPo88xX6U1nk97q\r\nax5i7V7A9RoOCyJCQmXh+r/P26Z+ZvbYnqQ=\r\n=CW28\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.38c4497_1664102892432_0.9480874594316144"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.862401": {
      "name": "zx",
      "version": "7.1.0-dev.862401",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.20",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies \nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after \nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives \nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n### Canary / Beta / RC builds\nImpatient early adopters can try the experimental zx versions. But keep in mind: these builds are ⚠️️ __unstable__ in every sense.\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "08624015df1f1e7162c4fd229dab7fbe89bd9241",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.862401",
      "_nodeVersion": "18.9.1",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-gEYGbwD2s2/haCLxIPPhlkgdAOCKMI9SExM5uO2IUhsf7o8JlHhrfos+sm3lv/Rw+lyt9e7+HmlmvF/OV3r9Jw==",
        "shasum": "8295bc1d74dc9aace9be2f0eb48c76c7c2be1c0f",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.862401.tgz",
        "fileCount": 21,
        "unpackedSize": 75011,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH0RscT/acbbY6Q0TBqSD3dDW96RoNXv2obxAMlj5fGwAiApmveX779SJl1pSpipz7KkU8lVNE+xmPfG2OrYI1zx9w=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMDOLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoeMw//XyKuatsFEkejMOmpjWRgHxrOe6LL//6Zcm/A6aBB7dX6Uj1u\r\nW0mw1bwnF1cUSy3+qKdEj0I8OXhbyqd6MSE2LIOSMhyqCxtzRnzlZSkwFOD2\r\nokNL81zoG6KYzETW2GLXCglPmDo4I6T31Q1klBFMb39L5Obmi2J+EvI4IUdt\r\nsivgo2GdSQpPmn+9A3Y8M14FUQ41qB7ow7C4cUeZtVhjCnqsC8szuEvv6rB/\r\nK4VR3eBN4z1idcvSFHNUm9aiNLisM0M3ugK8JrIhnJAoMOitfB+zmMQuaTLf\r\n60Za8xcsXFPecdKOz2BpNcxhTRd+YpgaTsTCmjkIH7FVqi6oiiOUTFWVdgby\r\nPbyVmx6CcdnAy58xK4xKAqjjH6/H7XrmBagdzPAl+Pn2PZxwIOUug66zD3Yt\r\nv/GIRQzpit+f0rZKNl4LjE6ZHEpRyVfMZ1bJBbDzG8blJdaGwwe2D2z5BHpX\r\nE+2Atq9JKCwra0fzIDQmSnSJ4yAjHTYqQUSzPIrVnD/8U/FhS97sxCncVAkO\r\n7oRpTPsB3oXd2oL/gJAdcwWfo0h9mJiKgpJdZ9G9/Miwm6e6EiKPllyDX3nA\r\n4BniP/nyuLnlS6vx3kqxRtrxCB/kFNM8TGAQJzyv7CVRX6nDejLbl5h3oZut\r\npfEKiVgfU/RBAKOlHDwLeSAmrUaHN53+C2M=\r\n=ftza\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.862401_1664103307627_0.7046894351771387"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.3bc2ce3": {
      "name": "zx",
      "version": "7.1.0-dev.3bc2ce3",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.20",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies \nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after \nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives \nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n### Canary / Beta / RC builds\nImpatient early adopters can try the experimental zx versions. But keep in mind: these builds are ⚠️️ __unstable__ in every sense.\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "3bc2ce383f9c60dd316932d2bcb8d37b4f7f6996",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.3bc2ce3",
      "_nodeVersion": "18.9.1",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-DeK6q56xWqJJXyD6lBzsJykSq78eviUGJw7PkQXCQXa1y6eORb5eI/36ue6zW58er88hPSygqAoAJn7iWHP4mQ==",
        "shasum": "4d56c82f8bebdfc025a43c123a7b7a9457191b35",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.3bc2ce3.tgz",
        "fileCount": 21,
        "unpackedSize": 75012,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDawnSzgMXjYGqZDvus6mgfK2CHYHwcvVJqrCAXzKLfgwIgZHj/eW/+qTbyFLuZXfin2p9VPz6ybqs4slvTNDlJMa0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMDQGACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqWoBAAlKxvH0b2htuqwBvpzvx+V6kqsyeFG/umsoge+hbyJi/QvkXJ\r\nBCg/gGN9hoKIHoJZ/1jV/GJiB6fdcpMvdxbAJ7wuJf4Ozz4wGD4fg0PGZHb4\r\nTJb4HTbk+mT0qcmgruZKl76R5j60rG8NE8XMBHsMj6se2YiJwUUD7Xu0x3HO\r\nAabGs80Erh38SdRGYpPJS4zgzOR6cNn56GBq8I+FX5E6yjMC+cmxcfn3v1hg\r\nxPl+lRBDxNM2O7trcc9ZvQARI7PUEzQZWoomTY8pALmX1RfztPz8rze2GuS8\r\nVZUD8FogxXMNxv95KJQ6cdgdS4b2S1/sHfXIkrJMSrErV4pQkjoUyz5/I2td\r\nMNBCUkJhDvKVt46s1nHGcwW3Ty4TqxCWD7+XqK17x5ju4XQSrrMar+uoLTjC\r\nrh2Kc0nxElkGDNFfzUIYDi2LpnogG1WU7JDNwjVxFaRR8u14cB1CpiTta/KG\r\n+zD8OEURLnBxfkgdnOzKeIrkcU0Yxqkg6yeleVx4ONWRgfED+pCkuzQi45LK\r\n90oT8nHSeaCT8bkDaA5t2rTQvlpo0Ry6JGAyomSAyiQ9FDVLnvlZP/pNFPt5\r\nOWcn+fG4co9bKH8aXCLgeD6PGi4X0slSi70gE+sbs+OI6YiNgVK9yAZ5aYl3\r\na9iXTDzcb0K9ToRLFpzTYcVXlQPDKRkfTmY=\r\n=uOzH\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.3bc2ce3_1664103430661_0.8682117839928243"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.cfa0fba": {
      "name": "zx",
      "version": "7.1.0-dev.cfa0fba",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.20",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies \nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after \nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives \nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n### Canary / Beta / RC builds\nImpatient early adopters can try the experimental zx versions. But keep in mind: these builds are ⚠️️ __unstable__ in every sense.\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "cfa0fba14a887a6e1f7a1425aa002cf8b94d9c94",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.cfa0fba",
      "_nodeVersion": "18.10.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-5n5q0Mlm3eQ7C6eSz1/svhn+vbEUBFABygFxess8gf+UlYCtwZXXDOI6z1cdTC9EwXCeFQsn4JR+CxGKG8lj7Q==",
        "shasum": "29b5dcb3168412359f7e528a109c7f699e637807",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.cfa0fba.tgz",
        "fileCount": 21,
        "unpackedSize": 75215,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDPbqBdZ54D317aov+XqJVa7XGIKybt8iLObea/norUXQIhAMyk6wsbcsiB2F8qSFFGDtpt+1exylk75EP/zdStH6YR"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPJnPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmocow/+OmG6KBiDqqTJzFEgchaQIX+lyRs4GOpUShUPfqXPCdVzgzZ0\r\nP9U6Zl/ePmaKUVDDjcSSqdE7DyZl3GQDIfBY1OMpHOZXQ3ka8MepLlIP8JZV\r\nq4tABNgcEaqQ5cdYJRoPnfLITaX1bRUJWf6ZfBYVqt7gY5hd3U+bpt5IKCsV\r\nm6Do6CVUrsKDXV9SQyhWqRLOluEgbjWOD4yv082KRORkOrZPAY7yHWkdDmD5\r\nZJ5VEAXpOjZ8BUtbTaDbKwGbp0hgDocLeMC70nZIrWvPI1kNAypGrY1EnQs1\r\n3othNGVvSN1CtMFi6BC0kypd7fAxQY456weP16ZXCvFwBSJn54jXC0pRreL7\r\nafwk7jz+tBiyE38IKxYWepQC7S6xdvAPxTe4lrSWmkE71368UajNwHNBBg1Z\r\n0snp3gqkn4RorAERo2ye3/CMU00wir/KGTdGRsaDSchgWKONS8cAD00ah8dj\r\nNjfMyg6D1Q2uvkkMwczNrr7lfqASgqoQ2A0exUc7OnTVcR/UXeKduwDxtGqB\r\nCRxM08ij/pqqOK0A/gYZt234i8646n+DJGZQGK9VHYlwREdGm96MEJh4plMC\r\nDUIYVJL/tVzpKdjEgPr1rVj6C9cFz2N+uxt326SDXOhGh0CrJ6D8RM1Wc+h8\r\nI+XnLyqmyaFWk/ny1+c7kkgfgZeb33ywotE=\r\n=+tsU\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.cfa0fba_1664915919437_0.894128610638296"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0": {
      "name": "zx",
      "version": "7.1.0",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.20",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "691e6cb01cae7c046bad2fdf5535c2a9ba6e87f3",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0",
      "_nodeVersion": "16.17.1",
      "_npmVersion": "8.15.0",
      "dist": {
        "integrity": "sha512-f3+EvObSf5AQOr8KTRcZkDyG73YtCSY2eqTAjT029qvXcCkYGRbZuvrMfI/b3k972yY8Z3vG+qCVPLfvtEf6Qw==",
        "shasum": "4192f4924e7864d73991437f7e26ee882c5acc9d",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0.tgz",
        "fileCount": 21,
        "unpackedSize": 75518,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCP9Bpj2JRFsEx9zEhUHMeypYwo48OzxyVR8nz9CgovOAIge8a4jQVnzW4lFfDnfrebty+NUoXD6LbFLp0IiZsHIwk="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPep4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr1KRAAmsLyx5xuyLZc6tDxedtHpb+kPLOppDVda2vQO/C8XZUi7GaD\r\nLC6OdDT44SnBZ3K8AHL+YLium95LQ2DkYgDbt4E5Dlj5bSd1dgScy/AMqLK5\r\nlEVrcMKJmTbbtyBdFBSBLPMtGecPKpQadu5pEZxZt73GTJ4feXTwg91Ex789\r\nJcDUNIxnMmUkPBDP4A0i7hRmilLif52ZK0TT0BYHJ88+MukRnvZcDwzKeT2e\r\nzNjniZwmEMaZVRx9D/08ARGYgvz1fT9fyCFZ4SXtQPCR3coE2qiPBEzmQXyZ\r\nRHAUkmrUYkHfGgAqnCFztDCWlT1LkUB39ExZ8LGoMHYYbZIsIYDIooSf3PKr\r\nAxelGzyW+tTTsSyB54VHPyST9WaGk3kWJHPQSaGiW9j2ms6LQUGSm2HV8OG3\r\nnTmfO2TtWpRiZFtejgyYfXb914BjPqSZAO+jJfh/535ktcnUKzVOqnZTyynm\r\nCwzxhi1WlE4S3NrGEmChKB9wrNeTmFGt4FXa7Gv0vsXDKnk+vI8qGISC1eiP\r\nnrlJDZ+B7YyxtoZeEUoGnxiHKlVSeDxkWTjA1jiOqLrSl9GNg41cmL9SVIDZ\r\nQFH/zeUH3d1zCpG+o5/tN9oXRonueesBjW+w02xdBwRGMQGjZX4MwQL59Q06\r\nEBGc+LVSaPREwukgEeTGxvBN9thG9lsRYyE=\r\n=5QxM\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0_1665002104278_0.47810424453878175"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.962864d": {
      "name": "zx",
      "version": "7.1.0-dev.962864d",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.20",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies \nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after \nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives \nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n### Canary / Beta / RC builds\nImpatient early adopters can try the experimental zx versions. But keep in mind: these builds are ⚠️️ __unstable__ in every sense.\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "962864dc8fde98c6e7291a758c2f12ab4005b2f9",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.962864d",
      "_nodeVersion": "18.10.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-lonqs8yfDAKFDTVsJqycTcEsGQIBoiLHsL3Maf0gcVuxdVWuwMK5WXw+9XHsh+TOyQ3hqpDSt4j2RvLFoYpnvQ==",
        "shasum": "4091f80007adfca9a7bd708a139dd4f7ea8233a1",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.962864d.tgz",
        "fileCount": 21,
        "unpackedSize": 75480,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDFwcdY5zxBseTLhllDPmxeHUsP5wTl07BE3G71gzHGRAIgVRr1qjt4hQSPfLpA5BP77shWJ0B1Whf2OnAZIJbKDgc="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjP78sACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpTLw//XeuvoiRbVfaejDDuiVqJg9yCoDpfO58JtWWHy6WfkTWScSBn\r\nzPCzhBXRDk28n1Er9G0vYRnp1KYycDZXDIag6JmVApn3iz330mJW2ju4Inib\r\nUipsNhYd6NhpwuQuuzt+zCAOX+ckgYINy/IgM/dApW2uvj1hvvEaLW/5sJFr\r\ndTuQVpDU0/j8mH47ExWb5tqNyjHbYkHd+l6M32g/OQkZUVycAhQ3JcQXqvIK\r\n1rgfVN+5mjVMyAZTCpW9Oz7sFzB9ZJF/AwFxyALk3FrbKwckfeMQcri2jw1E\r\nXIqUSvESl15t9HpsGJqR3vZTpPBU4BSk0+MPPRfQGAWKZb6CpSOC78PRPgmg\r\nc1ULFnEajibPUrvwwOeS+ahTHG4OhxwLrVuOvMF9RdthauBz2ZSgyc3n/cot\r\nr5il7e3Q7eiZJJLYy3/+9xkDs+srePI+ASzjzczDh7SSyRteXMlqzhjckVuc\r\n5fa9HHodXu2ytyf38d1RPXVi4r9/pYGcx1i+VguQDm69hWvoVTPmto2oFL6Z\r\nTHuPpmMWNktmg9ANp3Fzjmdxe1xmXzemh4cGmlorX6GyqIb/Yurcw/4ydNE0\r\nSdQ0ytNM38ev+R7awkwSykF8zO8BuDYrRCiQovNpfIPfrwmztsi1q0ScsVzM\r\niJ5PAnW4HrBTs5lM7/VCxZSnp5qsdeo0Lwk=\r\n=ykH7\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.962864d_1665122091866_0.7037481770357532"
      },
      "_hasShrinkwrap": false
    },
    "7.1.0-dev.7828d56": {
      "name": "zx",
      "version": "7.1.0-dev.7828d56",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.20",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n  pipe(dest): ProcessPromise\n  kill(): Promise<void>\n  nothrow(): this\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new line `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch) package.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif( argv.someFlag ){ echo('yes') }\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in scripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## Experimental\n\nThe zx provides a few experimental functions. Please leave feedback about\nthose features in [the discussion](https://github.com/google/zx/discussions/299).\nTo enable new features via CLI pass `--experimental` flag.\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nimport { retry, expBackoff } from 'zx/experimental'\n\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nimport { spinner } from 'zx/experimental'\n\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will be escaped\nindividually and concatenated via space.\n\nExample:\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport {$} from 'zx'\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is an [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport {$} from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json** and [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx <<'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies \nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after \nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives \nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Build\n      env:\n        FORCE_COLOR: 3\n      run: |\n        npx zx <<'EOF'\n        await $`...`\n        EOF\n```\n\n### Canary / Beta / RC builds\nImpatient early adopters can try the experimental zx versions. But keep in mind: these builds are ⚠️️ __unstable__ in every sense.\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "7828d5685c44b1140e7aef48d3a9036007d9af2a",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.0-dev.7828d56",
      "_nodeVersion": "18.10.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-arOtF8z3rEK+q38y/Ep5yLjCRX+OMc5bh+rPfpL8bChB1OFrn3TXubfiijDZrkzoeAqVn4Ut88UxSjT/cxEdsw==",
        "shasum": "792380b7421bba140f0b85dce0db81027d5fa5b9",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.0-dev.7828d56.tgz",
        "fileCount": 21,
        "unpackedSize": 75638,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEtuC2tp8TTipWS5ucjgjLkCuM1gjfd3d00/NudefQ5VAiB1gV3mnZydilKPIOfA4/e+Hj/PkE1bXnS/99MiPoyWEA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjQIn+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp91Q//b+mrZxt9APaHPxDNoP+emmCU2FQ2I2alGUWwLXYy4h4Eq1/9\r\naeW97xSvMltwtxd1yaHessLj0vdeK88p0WhKHHRfybMs5B7M5UFLw+63vAVd\r\nTTOymmo40B7c44IBOLxEq/SeXmEXSaGojnehhNj3EMREAamo5qAS+nrFPyOO\r\nzhq9lM9U8yvqG1o1SKvWyqC3ZDrys/bhDflsDvR9F82qgPv9/xvjTY+SeilP\r\nAoRA1GCYfckAlgK/50BgSPvHeNNasXGnMV7unPb4oy5AiDHRa+4GLSBQftHl\r\npXrOThzRuzQCU6BJ5KdpP6pumakzwDDbIjAa34NmmJ96AqzBYVBPkE/eJubH\r\nPq56abcRYud5fXMfXpbLYuYursbOfbImYKd7nYn8sLBKjGRG4ym7jqe6Uk+h\r\nWzRscyKvEZA3V2eXf1tyUI7z4NR4LYPt93XQiW6n00mV1cmu1+SaBoyNRL4c\r\nuu7vaqlJei/hnA/rTtpsOgQZZCLMXr87TCz8yJdZa38YfIh6yFigvftprTKo\r\n3scn3rn6+M5rONs9jiJvL1mwQurhbWcoqrY9l32ifDgdgi1q4oW9ux5W29Ma\r\nTikhcKvJbi42sQeZYMuR+rMppraF2iLyqVebJA6EVDe0U6kj+U6Avr2KB9N3\r\n1KLgunBb7wgIvvBCvnaTxHZKeIVHbVSamfc=\r\n=2pYJ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.0-dev.7828d56_1665174013987_0.8499546973764316"
      },
      "_hasShrinkwrap": false
    },
    "7.1.1": {
      "name": "zx",
      "version": "7.1.1",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^9.0.13",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.7.20",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.1",
        "chalk": "^5.0.1",
        "fs-extra": "^10.1.0",
        "globby": "^13.1.2",
        "minimist": "^1.2.6",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "which": "^2.0.2",
        "yaml": "^2.1.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.2.2",
        "c8": "^7.12.0",
        "madge": "^5.0.1",
        "prettier": "^2.7.1",
        "tsd": "^0.24.1",
        "typescript": "^4.8.3",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "79222d7ee227534509e6158e5dd58cb3d1f1e1fa",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.1.1",
      "_nodeVersion": "16.17.1",
      "_npmVersion": "8.15.0",
      "dist": {
        "integrity": "sha512-5YlTO2AJ+Ku2YuZKSSSqnUKuagcM/f/j4LmHs15O84Ch80Z9gzR09ZK3gR7GV+rc8IFpz2H/XNFtFVmj31yrZA==",
        "shasum": "8dc709fb8acd90ae5f39476145e5a2f3883dca1e",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.1.1.tgz",
        "fileCount": 21,
        "unpackedSize": 75626,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICR9i0GpB4ybadX5jDBLqBloQhsVMlQxAUtV1sisP+LTAiEAuq/2IvGAKinUtDrHdPLf8XyP8P6opz7L0Lk/1CbIwV4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjQIulACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmptbA/9Eug7KUrcZzeKjE5vkC3AF4/JKhqx6qvtG/kdcluipmGE7+cj\r\nqNbxJWpQlkW5d0VaAU+vwae5J2ezWpkI6Fo0VQIhR0/MQl3ksYYGnbkcucH1\r\npgtYNZvh86NK/m9ldjQyUIYqxRiVYgto8OYuxw9qegFLra95ON2u2LFaMuiS\r\n9X/74CdR0m+aNO1a7x8gxxOcLEzqQUXVy3KeAOw7g9T5JojQA/zrrACZA3BL\r\nt+1TwIWuM8f33mK5lkcEjfl0hQYI0aEQGgIvz8cnRul0bYysN2rzf8ChPnOn\r\nPjC0/VwJu0tp5bFXiqrANaBXCz+5yK8zXb1Ux+7T4ocWNkRJ8t+EnULTM6aR\r\nj0hg8+rcimjnL4ovab8EJQI4U3nhv4nLI3RNpO0/mnUAmR7dJT3/YWdWWvEL\r\nuwquGEFN1+5HzRAoIItImbgZie5zYItFvoOBDt8Yo6RSebY+vP1xxmqbbTID\r\n38Y+UKI4+yw98IbgWt6CFeajj/xFmX1Cmp4oeU4EkKG8WYTOo6F9wGJshRA6\r\nPDeYp5wyTZJXSNhh/YdVl5zXK7OAqp3zPehQIXdxLZ+MXO8u8R2nsqfjvT9h\r\nPLRgzMm0TEYq6wxH9CpT0kAr8f5W0tb5QmdZmGoGWtUaT5M2luf9asRuci2l\r\nGw9SHq6hVk3W1HmPQ/Y6SSHoqW244KwguDY=\r\n=Gs2W\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.1.1_1665174436946_0.012201399790652934"
      },
      "_hasShrinkwrap": false
    },
    "7.2.0": {
      "name": "zx",
      "version": "7.2.0",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.14.2",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.2",
        "chalk": "^5.2.0",
        "fs-extra": "^11.1.0",
        "globby": "^13.1.3",
        "minimist": "^1.2.8",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "webpod": "^0.0.2",
        "which": "^3.0.0",
        "yaml": "^2.2.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.1",
        "c8": "^7.13.0",
        "madge": "^6.0.0",
        "prettier": "^2.8.4",
        "tsd": "^0.25.0",
        "typescript": "^4.9.5",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "5bbb6353b1c9e4dce48df7d07c62edf8dfb206b2",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.2.0",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-SMuOZ21zFnBxicw+WMtTv3z3eERh6KBtZExAJaL8EAV+Ev/3M1NIAOkrZ8kRfCzD9acv9heUH/WZctTR4vQxBQ==",
        "shasum": "2973be4ea81ab8b08d310a6e370c98f9c908691c",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.0.tgz",
        "fileCount": 21,
        "unpackedSize": 75799,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICSvS2zcNMu62N1zuWbb3Z365ALFnzk/prBJVQnc+bnuAiAFcMbz0hJZn3xl+rDWZikzdCYWA8FctaLqb7VS3vLdpw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj/LO+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpptRAAoFlu26HzRpytxZAGBLQOv9uFzwimmRDUiM/oZvYb2wEPYrG4\r\nQ/MQADGKw7IiW7kdn5CM67OT3I56Gh7AaV5Odt6zyqBhY9cSghffgwqi6TIz\r\nqX1n6h0T37Y5i5yObyTiqx783Zxq7dPF1LHRKtEdyJ6EmyA3V5h7lHikVmGd\r\nMAXMjgZVvC0+j9FHVNRkeYihPRZdq+21iHVxph+w1gNiVDyyx/bii7WzuTxc\r\n5AxaER9W4fITkutOzb2EGjwWE/4nh6tDF/w5zWIdUhOu23B5b3GMuaxfiWr7\r\n/YV2N4xCB27sUDg6sswHNUlpSJb9Bqtgkrm3lXffDRFHSjMpBi6VoKCRU5kh\r\nxnwGyaYdd2YhvgsCL61rXBojPC2zFy7XlsNEujCMx70TPdFkJK5DIPfa+ULU\r\nukRnovFbw2NTtvLEmmwJi1WUIs0+vtl0rGFHMiYkfFnJFsdPy/tcVAGQ3UYe\r\n2Exh48gGRdageSgFLWUjgRz7OwqQ4qmpRr/V23+DrdA/IXog9OegxgVLKs4U\r\n7YQCwWT1FVEn4y1Qw/F3wEmbmuPpS7FjuISRnZ1TsABITKMVT3/HOrJPygw3\r\nr/yGYVkXyT9ljRpPboiwn6X+j9nOVt0cGl4T+b8pI78b9PXYD52CKQwFhzC7\r\nTCXN+GZIJy5fQLDYedsW0DrbeLYgYbpinkU=\r\n=Ob0m\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.0_1677505470187_0.5211717317919784"
      },
      "_hasShrinkwrap": false
    },
    "7.2.0-dev.df28f5f": {
      "name": "zx",
      "version": "7.2.0-dev.df28f5f",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.14.2",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.2",
        "chalk": "^5.2.0",
        "fs-extra": "^11.1.0",
        "globby": "^13.1.3",
        "minimist": "^1.2.8",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "webpod": "^0.0.2",
        "which": "^3.0.0",
        "yaml": "^2.2.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.1",
        "c8": "^7.13.0",
        "madge": "^6.0.0",
        "prettier": "^2.8.4",
        "tsd": "^0.25.0",
        "typescript": "^4.9.5",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) · [retry()](#retry) · [spinner()](#spinner) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\nFor running commands on remote hosts,\nsee [webpod](https://github.com/webpod/webpod).\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n\n  pipe(dest): ProcessPromise\n\n  kill(): Promise<void>\n\n  nothrow(): this\n\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new\nline `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch)\npackage.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif (argv.someFlag) {\n  echo('yes')\n}\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in\nscripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will\nbe escaped\nindividually and concatenated via space.\n\nExample:\n\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport { $ } from 'zx'\n\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is\nan [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport { $ } from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json**\nand [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx << 'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\n\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies\nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after\nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Executing commands on remote hosts\n\nThe `zx` uses [webpod](https://github.com/webpod/webpod) to execute commands on\nremote hosts.\n\n```js\nimport { ssh } from 'zx'\n\nawait ssh('user@host')`echo Hello, world!`\n```\n\n\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives\nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Build\n        env:\n          FORCE_COLOR: 3\n        run: |\n          npx zx <<'EOF'\n          await $`...`\n          EOF\n```\n\n### Canary / Beta / RC builds\n\nImpatient early adopters can try the experimental zx versions.\nBut keep in mind: these builds are ⚠️️__beta__ in every sense.\n\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "df28f5fe3a8ceb694730b81d16aec009fb39a21c",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.2.0-dev.df28f5f",
      "_nodeVersion": "18.14.1",
      "_npmVersion": "9.3.1",
      "dist": {
        "integrity": "sha512-xKo0btfm/U89/lglqO+lloopYcJddhCSwMpYle6lwAxH1l6cFXUkrOz0IxuDN6SFmjH5A1j8y9XzLtB3vD3iMg==",
        "shasum": "ae7f1b0b58f5ee4ed800675fc7654962a398119c",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.0-dev.df28f5f.tgz",
        "fileCount": 21,
        "unpackedSize": 75811,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDYJXNzBfDyHkR8uRtxSnrE1SidRGZ4xwKeN/wkZWXo1AiAr9eS0xL96vhrjgdyJh6kvANohhUvYIBfa9bXFjy0/Aw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj/Q9FACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqSERAAljOyNexmfD69tcfiMpgnU4apakSKmDwzvXs4GYzaGWq+Yxw1\r\nIcfozPf69/tnlRyyiySTdLTX8ASdfC8IR3Y+uxXU0nle4GmmaZf7I0VtSdBp\r\nqwCmCVqYZWDzXTwFK7aqikqPTowdSHTg8jNBbZ/jcfXyFJpHXMwk5+dcTQ3P\r\neZCcBl1Jq8gKsmHywSCkE1I/an7TMX/ryUP8K3Rh6YR5LyxDbfu0jQuBvpvO\r\ntGjipjFQpMc5YNKmxxTs/yDVVCKBAGK3gcDb3NMtpA1OsHnMAqcXqISf4eZs\r\nLIMkB4cp9NrkJiZdFgSRgQFnGtnUMXqTZUy80T3KNJMek39LxFxK2hLWxVrN\r\ndjuANAKZiR2vtXHvNA7R+U8A7ShO9CYWenVN496PKMYl1HCeZoukXaY7CNMp\r\nsfsKGa7+3GjsUyPNGgJ+VmvbGY8JHe8T/kteWlYbUoLcrdjANENN+YuIkVpA\r\nNU2YfhxEWfsqW4k7AMjsvRxN4b7Sbmdt55hDGvabhZuk0eWyrRUVzX3abbIm\r\ngcKYAFDwrXKvq5otPXgoblmdqnYFDaj7XoQqtDcmbdxNAOOlPAKbIFjuupYW\r\nB74FYCLyGoh2+qxCy3/OIQZ9L2xZtvlUXETqz+Cl3952iOAEFUrRWj2KIL2D\r\ncKQKl29iApMdHyA4xy1XZ+gblkAFlum/w/M=\r\n=5lQz\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.0-dev.df28f5f_1677528901100_0.8482451216566229"
      },
      "_hasShrinkwrap": false
    },
    "7.2.0-dev.5bbb635": {
      "name": "zx",
      "version": "7.2.0-dev.5bbb635",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.14.2",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.2",
        "chalk": "^5.2.0",
        "fs-extra": "^11.1.0",
        "globby": "^13.1.3",
        "minimist": "^1.2.8",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "webpod": "^0.0.2",
        "which": "^3.0.0",
        "yaml": "^2.2.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.1",
        "c8": "^7.13.0",
        "madge": "^6.0.0",
        "prettier": "^2.8.4",
        "tsd": "^0.25.0",
        "typescript": "^4.9.5",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) · [retry()](#retry) · [spinner()](#spinner) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\nFor running commands on remote hosts,\nsee [webpod](https://github.com/webpod/webpod).\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n\n  pipe(dest): ProcessPromise\n\n  kill(): Promise<void>\n\n  nothrow(): this\n\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new\nline `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch)\npackage.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif (argv.someFlag) {\n  echo('yes')\n}\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in\nscripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will\nbe escaped\nindividually and concatenated via space.\n\nExample:\n\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport { $ } from 'zx'\n\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is\nan [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport { $ } from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json**\nand [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx << 'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\n\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies\nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after\nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Executing commands on remote hosts\n\nThe `zx` uses [webpod](https://github.com/webpod/webpod) to execute commands on\nremote hosts.\n\n```js\nimport { ssh } from 'zx'\n\nawait ssh('user@host')`echo Hello, world!`\n```\n\n\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives\nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Build\n        env:\n          FORCE_COLOR: 3\n        run: |\n          npx zx <<'EOF'\n          await $`...`\n          EOF\n```\n\n### Canary / Beta / RC builds\n\nImpatient early adopters can try the experimental zx versions.\nBut keep in mind: these builds are ⚠️️__beta__ in every sense.\n\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "5bbb6353b1c9e4dce48df7d07c62edf8dfb206b2",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.2.0-dev.5bbb635",
      "_nodeVersion": "18.14.1",
      "_npmVersion": "9.3.1",
      "dist": {
        "integrity": "sha512-U82qqpWFPfqWlF1L4zzhHTaKZ8xChopirYswQ7+2vp6UKNYtreR4xoEDueK5OlH+/xu90P9Qz2IK+LKKG8dWlA==",
        "shasum": "a1f8d4811160036d81ef6225bd187c01f8a6c7a4",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.0-dev.5bbb635.tgz",
        "fileCount": 21,
        "unpackedSize": 75811,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCIa/teA0u8ID/9GEUPD6eKKPqOjecQtegy2B/b+pwMzAIhAKV3T0R6iFlsITEKdi9lm73bSagoFnv2iT2DaSFqihUC"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj/Q/pACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo97w//d4F4CSiwnx5SD1BQpmm7zlc7+QrXq2bFoynrwz5hfVL/WrZx\r\nzOw4y6G/ufBit9u/gFsaq7K2y5bKAs1RgXYykF3xRNt/qLVe2PD7mOsK2o+w\r\nC1Ni93ct3hz4yTrEU5sdJWoBwzu5Igy7A+lK1yZVD7ML5X8UOIg6lrM0+hAq\r\noHrftRuAy1Se2iRxu6EORrSJiaOnVCKHL0hCcySfe+tZd0ipClHlRDwfXTnm\r\naDZEkWruP7xSQ95viDKTmD8sv+l1pou8wxuAfuEbcPjvqCLZxbtsfEZpF/Vr\r\nDBk6V8a/txIhcF5gnQQ0e96vTBqA+rskUpgMFx5Xq0d+qs0a/Tki0zAn/0cO\r\nUz4crvBWpif1o5rQgaGdCP7UF2ia9FpkorBke8Lw99U5/OVA/2GEC6WVjRlq\r\nfe0K2L3FCMpVEGUOUHMm3/dGJRV7CPOq92N5HMEawctnnYK+MxtmnlhICS7n\r\nt1qjxOlGIo2fggFiCVbG7gzXC6j/lo2HnjsVyJfcEtcZay/etp30D9B9XbG/\r\nZ7JBug9xF37sO7NP9emnZ/chxQ29MJe/Pahf6ljmVnQuiAg/oSxSFQ4tz4Fz\r\nHvjeLJp/jQmk1A7qXw1gySu18tVD9gb4Rjak2PKmosyGbVQEHEwdMEo+ax/R\r\nIFBYUkja7mVTgoCs5XXbQk+3+R1xf5IAQX8=\r\n=NgiR\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.0-dev.5bbb635_1677529065440_0.9383517152912138"
      },
      "_hasShrinkwrap": false
    },
    "7.2.0-dev.85c9409": {
      "name": "zx",
      "version": "7.2.0-dev.85c9409",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.14.2",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.2",
        "chalk": "^5.2.0",
        "fs-extra": "^11.1.0",
        "globby": "^13.1.3",
        "minimist": "^1.2.8",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "webpod": "^0.0.2",
        "which": "^3.0.0",
        "yaml": "^2.2.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.1",
        "c8": "^7.13.0",
        "madge": "^6.0.0",
        "prettier": "^2.8.4",
        "tsd": "^0.25.0",
        "typescript": "^4.9.5",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) · [retry()](#retry) · [spinner()](#spinner) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\nFor running commands on remote hosts,\nsee [webpod](https://github.com/webpod/webpod).\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n\n  pipe(dest): ProcessPromise\n\n  kill(): Promise<void>\n\n  nothrow(): this\n\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new\nline `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch)\npackage.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif (argv.someFlag) {\n  echo('yes')\n}\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in\nscripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will\nbe escaped\nindividually and concatenated via space.\n\nExample:\n\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport { $ } from 'zx'\n\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is\nan [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport { $ } from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json**\nand [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx << 'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\n\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies\nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after\nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Executing commands on remote hosts\n\nThe `zx` uses [webpod](https://github.com/webpod/webpod) to execute commands on\nremote hosts.\n\n```js\nimport { ssh } from 'zx'\n\nawait ssh('user@host')`echo Hello, world!`\n```\n\n\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives\nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Build\n        env:\n          FORCE_COLOR: 3\n        run: |\n          npx zx <<'EOF'\n          await $`...`\n          EOF\n```\n\n### Canary / Beta / RC builds\n\nImpatient early adopters can try the experimental zx versions.\nBut keep in mind: these builds are ⚠️️__beta__ in every sense.\n\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "85c94090ab47da9bcc27467e44188bc5d05d8630",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.2.0-dev.85c9409",
      "_nodeVersion": "18.14.2",
      "_npmVersion": "9.5.0",
      "dist": {
        "integrity": "sha512-FAuE0hxWRIaCLiRADMfEybb+XVMf5jGNGUZW25aYclEi99dD04dNAo3GTd102rX1e5Ec60eXmezOoByCgZdZRA==",
        "shasum": "5a318e941d67f1e54c23de670e729f4cc7511b35",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.0-dev.85c9409.tgz",
        "fileCount": 21,
        "unpackedSize": 75800,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEZ+jXDhTWh6CfCqtBuy8+uHvTP3mFaOBo4tMH7OGf8kAiBvdosYeFwxEEQ3/hWci5hXGeTjhZlwfoE22krKkWVURA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj/loPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpfgQ/9Eghzb62k673kJOoCV4NkxbHVVGL2BEa/D7RMFArcyERj1APw\r\neH8ORiypCOVIv7Fi0N3OlhzJj1A4jV+AaLNWpj1oVDGOi29ggYjcljuRopVs\r\nPAgNaSDwdyGYf+VGr67djOp8oKBPmuEXe8lV4CqnmB7HdlFG3yuJtCz2LUHe\r\nWrjVVwOqSzuw/A643sk8v3gfi0Khwh0T3Y+bBULyBPe24j5OIGk6R7A7mhFl\r\nJ+dC5ZPiksN/70VQyFJOTJQNeYjv7VW2Nft1J6piesPdcyZmYc9xdwUguHy5\r\n4s2haVprmaCd+XAr0cpLfQHqkM2Af85t/aAJjiUAZ9qxJQILS+GsAgmMTt/b\r\n0Rk/GQBsHNQN+BPYVkxokYfi5EY8ReSFUUxxjIEeCuooJVIlMzSieiOoiU1K\r\nbCcFXD2P0UphYhUacTLGvBLvAejQ4Vgkp7ExcKGWCGn3o48qLgowkzU0VHN1\r\nKKsKMUMV7k5eC+SaY+i2vQmymGgKVMO001FE40eHYOqyZ53jGV0C5q1izRR+\r\nJ3/zPcqOQ6NnA8kl90AOvp48C7ezIUp7litk7jP8N2CYq2rbPcBT8zJPY0wE\r\nL0rU7GFTWu2Lk91J81RoES/I4uiEKPvv6OsNGaBYR7zPaRiQ+RiD+tTQYBBV\r\n4kUfGhA2+YS909Z7bV0sHBg69zen0sQdzwI=\r\n=R3rq\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.0-dev.85c9409_1677613583287_0.8380571847794067"
      },
      "_hasShrinkwrap": false
    },
    "7.2.0-dev.a3753b1": {
      "name": "zx",
      "version": "7.2.0-dev.a3753b1",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.14.2",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.2",
        "chalk": "^5.2.0",
        "fs-extra": "^11.1.0",
        "globby": "^13.1.3",
        "minimist": "^1.2.8",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "webpod": "^0.0.2",
        "which": "^3.0.0",
        "yaml": "^2.2.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.1",
        "c8": "^7.13.0",
        "madge": "^6.0.0",
        "prettier": "^2.8.4",
        "tsd": "^0.25.0",
        "typescript": "^4.9.5",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) · [retry()](#retry) · [spinner()](#spinner) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\nFor running commands on remote hosts,\nsee [webpod](https://github.com/webpod/webpod).\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n\n  pipe(dest): ProcessPromise\n\n  kill(): Promise<void>\n\n  nothrow(): this\n\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new\nline `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch)\npackage.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif (argv.someFlag) {\n  echo('yes')\n}\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in\nscripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will\nbe escaped\nindividually and concatenated via space.\n\nExample:\n\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport { $ } from 'zx'\n\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is\nan [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport { $ } from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json**\nand [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx << 'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\n\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies\nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after\nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Executing commands on remote hosts\n\nThe `zx` uses [webpod](https://github.com/webpod/webpod) to execute commands on\nremote hosts.\n\n```js\nimport { ssh } from 'zx'\n\nawait ssh('user@host')`echo Hello, world!`\n```\n\n\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives\nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Build\n        env:\n          FORCE_COLOR: 3\n        run: |\n          npx zx <<'EOF'\n          await $`...`\n          EOF\n```\n\n### Canary / Beta / RC builds\n\nImpatient early adopters can try the experimental zx versions.\nBut keep in mind: these builds are ⚠️️__beta__ in every sense.\n\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "a3753b145069507065a97e3853da28f82c585965",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.2.0-dev.a3753b1",
      "_nodeVersion": "18.14.1",
      "_npmVersion": "9.3.1",
      "dist": {
        "integrity": "sha512-QjTdKtfpEdt2h2Y8pD6/rP2+QX3XeIs1Ku9jx1Qn/Ub5pXUMjNanW/d6CKRC4fVJfhY5eC5C8O9gr4ph2BeMmQ==",
        "shasum": "d24e4a26fdc552317f58fa32e4c4803452f56a67",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.0-dev.a3753b1.tgz",
        "fileCount": 21,
        "unpackedSize": 75814,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDgATOlv/sxsbp85sktYpdH1Y4zZgpDk0jCCJPcE2B/pwIhAIBm0ckLjsZ4bzYOA2ePKbOp8JL+1CRuNYPSHKdunATa"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj/lshACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqE8xAAiezIcUYvaUJhCVCekXY4tkzWXx4CCXmB/fba6LOTcUcPEzro\r\ntGceZ62phMTUXpYD3/Z4C2X77EZwFxcHnrtqNdYEqmbWNPcqI4mKmBfOeSYK\r\ncZLiHMQxEJA7DMtEBXvnsz6/2w4XIHKjrbt4hAEkXt0z1KQgq53xRozJ2+MZ\r\nXHIdGoXRYwWVgtcgEPorEkjInydGSrLfMdX6hoUfe75douBoWWTGHVp7wrhK\r\nYwYTEALLnjuFa3qUE7GfROitgjTd+GvMFzfaLX7eoebAGiXZBjEEW8tL//9X\r\ncLqA74XP7XZ1nNaSIth6W1Q94KTdAAJZzCpko3AV1yTNwpYPzNfp9lECaMnM\r\nmtDaqA3gCm9kGi80tLZJxGVLxa0jv/8nR7D+aFCA0OSOwfxAbtCuivaaEyer\r\n21L91W8Nm0XT/DxIytUupxv5bC9OIFr/bFzIIKhfPYV7cI8T/rcptAhLVVHE\r\nNxzSKQiJ9cYZZSlilrCnd2+9aXgqI2LgztrZG9kV/7l2gvcR/sHcaTVN4rxi\r\nmbpk9sK2hQBq1d1b77SZ8ZeI4eeNHm0fnYQt256YxwcLFuXob2e/Lidwajic\r\nF5vgz7t/vBEns3Kw9w4jUtKKu2+PujuDHH3eq1qnab3E76a3zyp+qEMLOPej\r\nZPcM4ptF1V9z40dhmH7fcxtL+ekpZHKljnI=\r\n=RxMK\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.0-dev.a3753b1_1677613856854_0.22085921523613994"
      },
      "_hasShrinkwrap": false
    },
    "7.2.0-dev.4868d7c": {
      "name": "zx",
      "version": "7.2.0-dev.4868d7c",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.14.2",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.2",
        "chalk": "^5.2.0",
        "fs-extra": "^11.1.0",
        "globby": "^13.1.3",
        "minimist": "^1.2.8",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "webpod": "^0.0.2",
        "which": "^3.0.0",
        "yaml": "^2.2.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.1",
        "c8": "^7.13.0",
        "madge": "^6.0.0",
        "prettier": "^2.8.4",
        "tsd": "^0.25.0",
        "typescript": "^4.9.5",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "readme": "# 🐚 zx\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm i -g zx\n```\n\n**Requirement**: Node version >= 16.0.0\n\n## Goods\n\n[$](#command-) · [cd()](#cd) · [fetch()](#fetch) · [question()](#question) · [sleep()](#sleep) · [echo()](#echo) · [stdin()](#stdin) · [within()](#within) · [retry()](#retry) · [spinner()](#spinner) ·\n[chalk](#chalk-package) · [fs](#fs-package) · [os](#os-package) · [path](#path-package) · [glob](#globby-package) · [yaml](#yaml-package) · [minimist](#minimist-package) · [which](#which-package) ·\n[__filename](#__filename--__dirname) · [__dirname](#__filename--__dirname) · [require()](#require)\n\nFor running commands on remote hosts,\nsee [webpod](https://github.com/webpod/webpod).\n\n## Documentation\n\nWrite your scripts in a file with an `.mjs` extension in order to\nuse `await` at the top level. If you prefer the `.js` extension,\nwrap your scripts in something like `void async function () {...}()`.\n\nAdd the following shebang to the beginning of your `zx` scripts:\n\n```bash\n#!/usr/bin/env zx\n```\n\nNow you will be able to run your script like so:\n\n```bash\nchmod +x ./script.mjs\n./script.mjs\n```\n\nOr via the `zx` executable:\n\n```bash\nzx ./script.mjs\n```\n\nAll functions (`$`, `cd`, `fetch`, etc) are available straight away\nwithout any imports.\n\nOr import globals explicitly (for better autocomplete in VS Code).\n\n```js\nimport 'zx/globals'\n```\n\n### ``$`command` ``\n\nExecutes a given command using the `spawn` func\nand returns [`ProcessPromise`](#processpromise).\n\nEverything passed through `${...}` will be automatically escaped and quoted.\n\n```js\nlet name = 'foo & bar'\nawait $`mkdir ${name}`\n```\n\n**There is no need to add extra quotes.** Read more about it in\n[quotes](docs/quotes.md).\n\nYou can pass an array of arguments if needed:\n\n```js\nlet flags = [\n  '--oneline',\n  '--decorate',\n  '--color',\n]\nawait $`git log ${flags}`\n```\n\nIf the executed program returns a non-zero exit code,\n[`ProcessOutput`](#processoutput) will be thrown.\n\n```js\ntry {\n  await $`exit 1`\n} catch (p) {\n  console.log(`Exit code: ${p.exitCode}`)\n  console.log(`Error: ${p.stderr}`)\n}\n```\n\n### `ProcessPromise`\n\n```ts\nclass ProcessPromise extends Promise<ProcessOutput> {\n  stdin: Writable\n  stdout: Readable\n  stderr: Readable\n  exitCode: Promise<number>\n\n  pipe(dest): ProcessPromise\n\n  kill(): Promise<void>\n\n  nothrow(): this\n\n  quiet(): this\n}\n```\n\nRead more about the [ProcessPromise](docs/process-promise.md).\n\n### `ProcessOutput`\n\n```ts\nclass ProcessOutput {\n  readonly stdout: string\n  readonly stderr: string\n  readonly signal: string\n  readonly exitCode: number\n\n  toString(): string // Combined stdout & stderr.\n}\n```\n\nThe output of the process is captured as-is. Usually, programs print a new\nline `\\n` at the end.\nIf `ProcessOutput` is used as an argument to some other `$` process,\n**zx** will use stdout and trim the new line.\n\n```js\nlet date = await $`date`\nawait $`echo Current date is ${date}.`\n```\n\n## Functions\n\n### `cd()`\n\nChanges the current working directory.\n\n```js\ncd('/tmp')\nawait $`pwd` // => /tmp\n```\n\n### `fetch()`\n\nA wrapper around the [node-fetch](https://www.npmjs.com/package/node-fetch)\npackage.\n\n```js\nlet resp = await fetch('https://medv.io')\n```\n\n### `question()`\n\nA wrapper around the [readline](https://nodejs.org/api/readline.html) package.\n\n```js\nlet bear = await question('What kind of bear is best? ')\n```\n\n### `sleep()`\n\nA wrapper around the `setTimeout` function.\n\n```js\nawait sleep(1000)\n```\n\n### `echo()`\n\nA `console.log()` alternative which can take [ProcessOutput](#processoutput).\n\n```js\nlet branch = await $`git branch --show-current`\n\necho`Current branch is ${branch}.`\n// or\necho('Current branch is', branch)\n```\n\n### `stdin()`\n\nReturns the stdin as a string.\n\n```js\nlet content = JSON.parse(await stdin())\n```\n\n### `within()`\n\nCreates a new async context.\n\n```js\nawait $`pwd` // => /home/path\n\nwithin(async () => {\n  cd('/tmp')\n\n  setTimeout(async () => {\n    await $`pwd` // => /tmp\n  }, 1000)\n})\n\nawait $`pwd` // => /home/path\n```\n\n```js\nlet version = await within(async () => {\n  $.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\n  await $`nvm use 16`\n  return $`node -v`\n})\n```\n\n### `retry()`\n\nRetries a callback for a few times. Will return after the first\nsuccessful attempt, or will throw after specifies attempts count.\n\n```js\nlet p = await retry(10, () => $`curl https://medv.io`)\n\n// With a specified delay between attempts.\nlet p = await retry(20, '1s', () => $`curl https://medv.io`)\n\n// With an exponential backoff.\nlet p = await retry(30, expBackoff(), () => $`curl https://medv.io`)\n```\n\n### `spinner()`\n\nStarts a simple CLI spinner.\n\n```js\nawait spinner(() => $`long-running command`)\n\n// With a message.\nawait spinner('working...', () => $`sleep 99`)\n```\n\n## Packages\n\nThe following packages are available without importing inside scripts.\n\n### `chalk` package\n\nThe [chalk](https://www.npmjs.com/package/chalk) package.\n\n```js\nconsole.log(chalk.blue('Hello world!'))\n```\n\n### `fs` package\n\nThe [fs-extra](https://www.npmjs.com/package/fs-extra) package.\n\n```js\nlet {version} = await fs.readJson('./package.json')\n```\n\n### `os` package\n\nThe [os](https://nodejs.org/api/os.html) package.\n\n```js\nawait $`cd ${os.homedir()} && mkdir example`\n```\n\n### `path` package\n\nThe [path](https://nodejs.org/api/path.html) package.\n\n```js\nawait $`mkdir ${path.join(basedir, 'output')}`\n```\n\n### `globby` package\n\nThe [globby](https://github.com/sindresorhus/globby) package.\n\n```js\nlet packages = await glob(['package.json', 'packages/*/package.json'])\n```\n\n### `yaml` package\n\nThe [yaml](https://www.npmjs.com/package/yaml) package.\n\n```js\nconsole.log(YAML.parse('foo: bar').foo)\n```\n\n### `minimist` package\n\nThe [minimist](https://www.npmjs.com/package/minimist) package available\nas global const `argv`.\n\n```js\nif (argv.someFlag) {\n  echo('yes')\n}\n```\n\n### `which` package\n\nThe [which](https://github.com/npm/node-which) package.\n\n```js\nlet node = await which('node')\n```\n\n## Configuration\n\n### `$.shell`\n\nSpecifies what shell is used. Default is `which bash`.\n\n```js\n$.shell = '/usr/bin/bash'\n```\n\nOr use a CLI argument: `--shell=/bin/bash`\n\n### `$.spawn`\n\nSpecifies a `spawn` api. Defaults to `require('child_process').spawn`.\n\n### `$.prefix`\n\nSpecifies the command that will be prefixed to all commands run.\n\nDefault is `set -euo pipefail;`.\n\nOr use a CLI argument: `--prefix='set -e;'`\n\n### `$.quote`\n\nSpecifies a function for escaping special characters during\ncommand substitution.\n\n### `$.verbose`\n\nSpecifies verbosity. Default is `true`.\n\nIn verbose mode, `zx` prints all executed commands alongside with their\noutputs.\n\nOr use the CLI argument `--quiet` to set `$.verbose = false`.\n\n### `$.env`\n\nSpecifies an environment variables map.\n\nDefaults to `process.env`.\n\n### `$.cwd`\n\nSpecifies a current working directory of all processes created with the `$`.\n\nThe [cd()](#cd) func changes only `process.cwd()` and if no `$.cwd` specified,\nall `$` processes use `process.cwd()` by default (same as `spawn` behavior).\n\n### `$.log`\n\nSpecifies a [logging function](src/core.ts).\n\n```ts\nimport { LogEntry, log } from 'zx/core'\n\n$.log = (entry: LogEntry) => {\n  switch (entry.kind) {\n    case 'cmd':\n      // for example, apply custom data masker for cmd printing\n      process.stderr.write(masker(entry.cmd))\n      break\n    default:\n      log(entry)\n  }\n}\n```\n\n## Polyfills\n\n### `__filename` & `__dirname`\n\nIn [ESM](https://nodejs.org/api/esm.html) modules, Node.js does not provide\n`__filename` and `__dirname` globals. As such globals are really handy in\nscripts,\n`zx` provides these for use in `.mjs` files (when using the `zx` executable).\n\n### `require()`\n\nIn [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodules, the `require()` function is not defined.\nThe `zx` provides `require()` function, so it can be used with imports in `.mjs`\nfiles (when using `zx` executable).\n\n```js\nlet {version} = require('./package.json')\n```\n\n## FAQ\n\n### Passing env variables\n\n```js\nprocess.env.FOO = 'bar'\nawait $`echo $FOO`\n```\n\n### Passing array of values\n\nWhen passing an array of values as an argument to `$`, items of the array will\nbe escaped\nindividually and concatenated via space.\n\nExample:\n\n```js\nlet files = [...]\nawait $`tar cz ${files}`\n```\n\n### Importing into other scripts\n\nIt is possible to make use of `$` and other functions via explicit imports:\n\n```js\n#!/usr/bin/env node\nimport { $ } from 'zx'\n\nawait $`date`\n```\n\n### Scripts without extensions\n\nIf script does not have a file extension (like `.git/hooks/pre-commit`), zx\nassumes that it is\nan [ESM](https://nodejs.org/api/modules.html#modules_module_createrequire_filename)\nmodule.\n\n### Markdown scripts\n\nThe `zx` can execute [scripts written as markdown](docs/markdown.md):\n\n```bash\nzx docs/markdown.md\n```\n\n### TypeScript scripts\n\n```ts\nimport { $ } from 'zx'\n// Or\nimport 'zx/globals'\n\nvoid async function () {\n  await $`ls -la`\n}()\n```\n\nSet [`\"type\": \"module\"`](https://nodejs.org/api/packages.html#packages_type)\nin **package.json**\nand [`\"module\": \"ESNext\"`](https://www.typescriptlang.org/tsconfig/#module)\nin **tsconfig.json**.\n\n### Executing remote scripts\n\nIf the argument to the `zx` executable starts with `https://`, the file will be\ndownloaded and executed.\n\n```bash\nzx https://medv.io/game-of-life.js\n```\n\n### Executing scripts from stdin\n\nThe `zx` supports executing scripts from stdin.\n\n```js\nzx << 'EOF'\nawait $`pwd`\nEOF\n```\n\n### Executing scripts via --eval\n\nEvaluate the following argument as a script.\n\n```bash\ncat package.json | zx --eval 'let v = JSON.parse(await stdin()).version; echo(v)'\n```\n\n### Installing dependencies via --install\n\n```js\n// script.mjs:\nimport sh from 'tinysh'\n\nsh.say('Hello, world!')\n```\n\nAdd `--install` flag to the `zx` command to install missing dependencies\nautomatically.\n\n```bash\nzx --install script.mjs\n```\n\nYou can also specify needed version by adding comment with `@` after\nthe import.\n\n```js\nimport sh from 'tinysh' // @^1\n```\n\n### Executing commands on remote hosts\n\nThe `zx` uses [webpod](https://github.com/webpod/webpod) to execute commands on\nremote hosts.\n\n```js\nimport { ssh } from 'zx'\n\nawait ssh('user@host')`echo Hello, world!`\n```\n\n\n\n### Attaching a profile\n\nBy default `child_process` does not include aliases and bash functions.\nBut you are still able to do it by hand. Just attach necessary directives\nto the `$.prefix`.\n\n```js\n$.prefix += 'export NVM_DIR=$HOME/.nvm; source $NVM_DIR/nvm.sh; '\nawait $`nvm -v`\n```\n\n### Using GitHub Actions\n\nThe default GitHub Action runner comes with `npx` installed.\n\n```yaml\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Build\n        env:\n          FORCE_COLOR: 3\n        run: |\n          npx zx <<'EOF'\n          await $`...`\n          EOF\n```\n\n### Canary / Beta / RC builds\n\nImpatient early adopters can try the experimental zx versions.\nBut keep in mind: these builds are ⚠️️__beta__ in every sense.\n\n```bash\nnpm i zx@dev\nnpx zx@dev --install --quiet <<< 'import _ from \"lodash\" /* 4.17.15 */; console.log(_.VERSION)'\n```\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "4868d7c3e71b8548b6aca603ba5f238c7e5bb159",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.2.0-dev.4868d7c",
      "_nodeVersion": "18.14.1",
      "_npmVersion": "9.3.1",
      "dist": {
        "integrity": "sha512-qyAB2zk9kO2hah4HHemsyhOzNo/VuB/KvoyuBESsRsfN4FSXEtN4TZjw0OO3cUCf/0oiuFHn0uLP5CVEdQHV3g==",
        "shasum": "6d997603cd873925abc3fe67c6df28f4597bebe1",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.0-dev.4868d7c.tgz",
        "fileCount": 21,
        "unpackedSize": 75908,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFw3cyuzwuSwMRbH4uFVwXa+0MAP5eswcJgK4VXSp7hGAiBeCLLmS3TcN6DObe6NCCtO9f/WP4k5vANO7Ir7OylgpQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj/lx0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmraKw/+KMR7kJp8PxIkzpTQMhL9wOBFzCc13mG3zlo9okTnCFuEIjX/\r\nImySFCcwa+gwr5AHPZB/qDCjPAlVIvPzsT4RjdjIkG9PYYjqDUrHgSEkNyx9\r\nHpjDdrVVH1nubgUWT0eZWSrSvt3/KiZCVzXV6yxLWAWYBGHf+Q0cC4+bFmLz\r\n+dI6Q3sGv1LdI+0V/Q71DLSgr/BnT5ijmIOW+/hNmJUA4nHOT0GCyOLprg5J\r\nWCk24WupoOIScajaPKb6DajfiptIhBXoSsLK6n4uliEtE1bTjB6bvvhu3BuI\r\n767uORMVKzZz+PbBpDbYzcoE1/EeEBMdkBj3ijc44nd6j4idYUVGuNR2U/xC\r\nrzNGs7+aQkVIItmBo/ecOkhuTlkrt5rGgBC+SUD8dMNRxgviO2AnthReYQRW\r\nuy/Uf8PB5UxMRgGJe5cq/lIVaAdqs/TyyaVWrEvBgDUti0v1WRbqwxmxwzQe\r\nXJXo/M7YHeeFpfS+2QwZf/McotJCUF/yBlu9HTsTd3jprgzlwpT1BZy0pg/G\r\nBTG3rNTS1UbTrLeTEITP8+HMz0EPH8tO16Fhku9BeTU/OhARGGanzht5RUT7\r\nOGcByce4h+aotg4njAopfpvREAXXkqA/RkwQngfGkWHTtygma5UdXXij69mZ\r\nSQBqThVF8U1Nk1cN17UgY8U2h4XED9qbyB0=\r\n=AjYr\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.0-dev.4868d7c_1677614195868_0.8333678410741017"
      },
      "_hasShrinkwrap": false
    },
    "7.2.1": {
      "name": "zx",
      "version": "7.2.1",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && PATH=$(env -i bash -c 'echo $PATH') node_modules/.bin/uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*"
      },
      "dependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.14.2",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^2.0.2",
        "chalk": "^5.2.0",
        "fs-extra": "^11.1.0",
        "globby": "^13.1.3",
        "minimist": "^1.2.8",
        "node-fetch": "3.2.10",
        "ps-tree": "^1.2.0",
        "webpod": "^0",
        "which": "^3.0.0",
        "yaml": "^2.2.1"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.1",
        "c8": "^7.13.0",
        "madge": "^6.0.0",
        "prettier": "^2.8.4",
        "tsd": "^0.25.0",
        "typescript": "^4.9.5",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "74409aff50147a165fa005fc73cb75d87c2a8c0e",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.2.1",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-TgKwppaMLMNAXHhlhbBh7rMoOSx3/9qqnkv8frmhVlSomEuWkDijh/BCmYntkoS7ZQyemApAUyEi24jIrrS+hA==",
        "shasum": "67b52c576f4df0ebf3b5d3659e43021156e38247",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.1.tgz",
        "fileCount": 21,
        "unpackedSize": 75929,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA+03GLrFGUeSrZOuxkMX4VdOUwwopforr9MBkDkGhc8AiB5oisPo17Q0k+Wkx9VKGJf+YEIkqA7e0yW7Z3c2Ph9bQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkFCjoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoa4g//f1ICJtILL4W7/hk9mYbhefZP8DG+LI6knLkRcXSAAPMt7o2B\r\nH2oJE+vLpVrxdqk5X5vFefwmbohIcLFNgOmcdamjF5ZkJYL1IOUUfIQYzOPI\r\n6qwTYWM/KGCC6/SRVLkFn4OzVfKKIq8Mg9ViDygUGXa4aikVtB+Sk1ZMxMEm\r\nb5Z9ZUNHnBzaqAW4KJPT8kSS2wVhQHftcWXxWQIfg8gATsHsTaNcQ8YR2zuE\r\n2xrkzDO11fxDKG8rDFAKt2b8AQahPrgbjTN2iAoNwWD1wCbuaKWBuLKKRAl9\r\nxFtZK11qNBW4e8woj65VkAqnQ6BHHC19oidqjkctL5ADnBGT/+q1jBpxM3D/\r\nGPN71pE6nbdAHir+bcZ5+46GVXJ8fIoVHOPEEiiXa6GpqiUqmBOmw10sHrIs\r\ndJ2L7Syw3f5MLKnHXKSy2gMz7TCtES3dqflB5LqSQmELv2/rQ86SEtbSEwEc\r\nctNhh9E2/zvZEt6LzMtngIZDUSYtzfGPEzxM6NKTsZDFZF33uwPq4ZoAqrnR\r\n479peEiNQzF/q56YkmsTljasjfbNoAmFG8R5BYk/aWeASutSDJieIrlQLIWT\r\nQqaVKsf33Q7U9rfPHH+Wy9AFX+CTul58lby8+NtkxkeDRHOyPmPnXxUQHeHH\r\nbpwua2aoMT5HTJPd3O4hRkHPL1UBGVG6o6U=\r\n=KYdc\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.1_1679042792570_0.34492403198132404"
      },
      "_hasShrinkwrap": false
    },
    "7.2.2": {
      "name": "zx",
      "version": "7.2.2",
      "description": "A tool for writing better scripts.",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*",
        "version": "cat package.json | fx .version"
      },
      "dependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.16.3",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^3.0.0",
        "chalk": "^5.2.0",
        "fs-extra": "^11.1.1",
        "fx": "*",
        "globby": "^13.1.4",
        "minimist": "^1.2.8",
        "node-fetch": "3.3.1",
        "ps-tree": "^1.2.0",
        "webpod": "^0",
        "which": "^3.0.0",
        "yaml": "^2.2.2"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.2",
        "c8": "^7.13.0",
        "madge": "^6.0.0",
        "prettier": "^2.8.8",
        "tsd": "^0.28.1",
        "typescript": "^5.0.4",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "d1cd1aa02e3fab7ca4f048d9571b77b6ce25d559",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.2.2",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-50Gjicd6ijTt7Zcz5fNX+rHrmE0uVqC+X6lYKhf2Cu8wIxDpNIzXwTmzchNdW+JY3LFsRcU43B1lHE4HBMmKgQ==",
        "shasum": "fe1e9ba84a3806f6ea9ece39e0aea1cd7e5a4855",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.2.tgz",
        "fileCount": 21,
        "unpackedSize": 75939,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHiYy1haFUCAH1EMvmb0OdzEVwGZleIr98RtfzKbQ8y9AiBummvRQuxcuJU2hedaAxpntSXUQiLwc1qahIisTrHrxg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkT9uOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqnfw//clVD5Iyb93ZzM9qNSsASFaAfUxILUpu6mmIaaOX81PA5t/cj\r\n+APmpg0zvuuivPvRrXSbJDg1YApfi3Gkbjn50DgZh5I5kTJgRgd5RRh9Qg88\r\nZTpKtbJWPvqViR13LF5zTe3AiAurbRQxStk/hvZMKcquJxarmMLBAc/KAurF\r\nolT4WLra/UcqO9lZR3bpWNaxOYVqrUCRpvZMlhHTXY8bfPJCgkqEgmtNcKgY\r\n4xlsXoghwRm/Y8FqZbGUKn0IzDRrJGLpEWcGxF47cxtSJCMh0D/5ctUgA8L3\r\n4kFGe8ct1Cq3Rtj8vA3GOuNYQAw28G/C0Cfs0PBbi5vYtZotoHnkIb90qWJi\r\nZSwtvJnRxM6T614bcEpr+6zyALqiHB2V3uWtPFr8NJoHvEDbh81y1+J43q/i\r\npz/nVXPpg9bG5ZzwRSIO/sIcSlnm+6QrPC1nAk0Sy0V84EGx7ix2lliSZF6U\r\nd3QjaaTfAGXhLka353qxuJlAtsOQLJcaP5KPw1J0HICewyUjgQq6j6xFgD14\r\ntq49UtogCVHvJg0KON/n7OagxBg5BrC63V7LgTD34mM8gFEh4W62ke7fBc3F\r\n9XxrigVotP1ANAiwjeZm0VIPQjYKosLvs3ZlM0iy0ODC2R28h2AmMiJCtT7/\r\niiod9E1j18KQ1koqp3BzcroYYi+oieJDcP8=\r\n=tt3R\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.2_1682955150624_0.05567499969166789"
      },
      "_hasShrinkwrap": false
    },
    "7.2.3": {
      "name": "zx",
      "version": "7.2.3",
      "description": "A tool for writing better scripts",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "tsc --project tsconfig.prod.json",
        "build:check": "tsc",
        "test": "npm run build && uvu test -i fixtures",
        "test:types": "tsd",
        "coverage": "c8 --check-coverage npm test -- -i package",
        "mutation": "stryker run",
        "circular": "madge --circular src/*",
        "version": "cat package.json | fx .version"
      },
      "dependencies": {
        "@types/fs-extra": "^11.0.1",
        "@types/minimist": "^1.2.2",
        "@types/node": "^18.16.3",
        "@types/ps-tree": "^1.1.2",
        "@types/which": "^3.0.0",
        "chalk": "^5.2.0",
        "fs-extra": "^11.1.1",
        "fx": "*",
        "globby": "^13.1.4",
        "minimist": "^1.2.8",
        "node-fetch": "3.3.1",
        "ps-tree": "^1.2.0",
        "webpod": "^0",
        "which": "^3.0.0",
        "yaml": "^2.2.2"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.2",
        "c8": "^7.13.0",
        "madge": "^6.0.0",
        "prettier": "^2.8.8",
        "tsd": "^0.28.1",
        "typescript": "^5.0.4",
        "uvu": "^0.5.6"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "gitHead": "483cc88041feed8df4224860fdca1f76753eebf8",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_id": "zx@7.2.3",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-QODu38nLlYXg/B/Gw7ZKiZrvPkEsjPN3LQ5JFXM7h0JvwhEdPNNl+4Ao1y4+o3CLNiDUNcwzQYZ4/Ko7kKzCMA==",
        "shasum": "d9fef6bd084f7e21994080de09fb20e441074c39",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.3.tgz",
        "fileCount": 21,
        "unpackedSize": 76445,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICNgeL/ZsagYkhoqCzSknVUnI4G+aipznjlHXTgCaP0zAiAEfiRbKJ5GvLrw6kHQcVgrXt/pLsd/ANyF23M1oj2rIg=="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.3_1688638974755_0.7863270613491962"
      },
      "_hasShrinkwrap": false
    },
    "7.2.3-dev.7e728f6": {
      "name": "zx",
      "version": "7.2.3-dev.7e728f6",
      "description": "A tool for writing better scripts",
      "type": "module",
      "main": "./build/index.js",
      "types": "./build/index.d.ts",
      "typesVersions": {
        "*": {
          ".": [
            "./build/index.d.ts"
          ],
          "globals": [
            "./build/globals.d.ts"
          ],
          "experimental": [
            "./build/experimental.d.ts"
          ],
          "cli": [
            "./build/cli.d.ts"
          ],
          "core": [
            "./build/core.d.ts"
          ]
        }
      },
      "exports": {
        ".": "./build/index.js",
        "./globals": "./build/globals.js",
        "./experimental": "./build/experimental.js",
        "./cli": "./build/cli.js",
        "./core": "./build/core.js",
        "./package.json": "./package.json"
      },
      "bin": {
        "zx": "build/cli.js"
      },
      "engines": {
        "node": ">= 16.0.0"
      },
      "scripts": {
        "fmt": "prettier --write .",
        "fmt:check": "prettier --check .",
        "build": "npm run build:js && npm run build:dts",
        "build:check": "tsc",
        "build:js": "node scripts/build-js.mjs --format=esm --entry=src/*.ts && npm run build:vendor",
        "build:vendor": "node scripts/build-js.mjs --format=esm --entry=src/vendor.ts --bundle=all --banner",
        "build:dts": "tsc --project tsconfig.prod.json && node scripts/build-dts.mjs",
        "test": "npm run build && node ./test/all.test.js",
        "test:types": "tsd",
        "coverage": "c8 -x build/vendor.js -x 'test/**' -x scripts --check-coverage npm test",
        "mutation": "stryker run",
        "circular": "madge --circular src/*",
        "version": "cat package.json | fx .version"
      },
      "optionalDependencies": {
        "@types/fs-extra": "^11.0.4",
        "@types/node": ">=20.11.19"
      },
      "devDependencies": {
        "@stryker-mutator/core": "^6.4.2",
        "@types/fs-extra": "^11.0.4",
        "@types/minimist": "^1.2.5",
        "@types/node": ">=20.11.19",
        "@types/ps-tree": "^1.1.6",
        "@types/which": "^3.0.3",
        "c8": "^7.13.0",
        "chalk": "^5.3.0",
        "dts-bundle-generator": "^9.3.1",
        "esbuild": "^0.20.1",
        "esbuild-node-externals": "^1.13.0",
        "esbuild-plugin-entry-chunks": "^0.1.8",
        "fs-extra": "^11.2.0",
        "fx": "*",
        "globby": "^14.0.1",
        "madge": "^6.1.0",
        "minimist": "^1.2.8",
        "node-fetch-native": "^1.6.2",
        "prettier": "^2.8.8",
        "ps-tree": "^1.2.0",
        "tsd": "^0.28.1",
        "typescript": "^5.0.4",
        "webpod": "^0",
        "which": "^3.0.0",
        "yaml": "^2.3.4"
      },
      "publishConfig": {
        "registry": "https://wombat-dressing-room.appspot.com"
      },
      "prettier": {
        "semi": false,
        "singleQuote": true,
        "endOfLine": "lf"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/google/zx.git"
      },
      "author": {
        "name": "Anton Medvedev",
        "email": "anton@medv.io"
      },
      "license": "Apache-2.0",
      "_id": "zx@7.2.3-dev.7e728f6",
      "readme": "<h1><img src=\"https://google.github.io/zx/img/logo.svg\" alt=\"Zx logo\" height=\"32\" valign=\"middle\"> zx</h1>\n\n```js\n#!/usr/bin/env zx\n\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = 'foo bar'\nawait $`mkdir /tmp/${name}`\n```\n\nBash is great, but when it comes to writing more complex scripts,\nmany people prefer a more convenient programming language.\nJavaScript is a perfect choice, but the Node.js standard library\nrequires additional hassle before using. The `zx` package provides\nuseful wrappers around `child_process`, escapes arguments and\ngives sensible defaults.\n\n## Install\n\n```bash\nnpm install zx\n```\n\n## Documentation\n\nRead documentation on [google.github.io/zx](https://google.github.io/zx/).\n\n## License\n\n[Apache-2.0](LICENSE)\n\nDisclaimer: _This is not an officially supported Google product._\n",
      "readmeFilename": "README.md",
      "gitHead": "7e728f6b768e0bef09ad9325805c3f4fbae41f0f",
      "bugs": {
        "url": "https://github.com/google/zx/issues"
      },
      "homepage": "https://github.com/google/zx#readme",
      "_nodeVersion": "18.19.1",
      "_npmVersion": "10.2.4",
      "dist": {
        "integrity": "sha512-VWyonGwEGhnrjX+KkqoMbdf3WPMzIKksLO7peSb0LB1klzrHCCxpzHgI3CJTfDrDPoLSpcYqw+zogTQsVkvkKw==",
        "shasum": "7008d35ea74c62f19be84ab2b5ce916fa7e17139",
        "tarball": "https://registry.npmjs.org/zx/-/zx-7.2.3-dev.7e728f6.tgz",
        "fileCount": 23,
        "unpackedSize": 846931,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDKjMZU3KMF47PwDC0Z08LXW7L5Cp2OwyAaAxOWvtohJQIgP+E2Xw3DQZLGMA/mYghqVGYYuIU+ePpo2DDTblPmXX0="
          }
        ]
      },
      "_npmUser": {
        "name": "google-wombot",
        "email": "node-team-npm+wombot@google.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medv",
          "email": "anton@medv.io"
        },
        {
          "name": "google-wombot",
          "email": "node-team-npm+wombot@google.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/zx_7.2.3-dev.7e728f6_1708873085622_0.8738911042889077"
      },
      "_hasShrinkwrap": false
    }
  },
  "homepage": "https://github.com/google/zx#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/google/zx.git"
  },
  "author": {
    "name": "Anton Medvedev",
    "email": "anton@medv.io"
  },
  "bugs": {
    "url": "https://github.com/google/zx/issues"
  },
  "license": "Apache-2.0",
  "readmeFilename": "",
  "users": {
    "tg-z": true,
    "yanghcc": true,
    "hualei": true,
    "abzhy": true,
    "yjlyjl": true
  }
}