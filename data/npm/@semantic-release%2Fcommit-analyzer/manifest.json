{
  "_id": "@semantic-release/commit-analyzer",
  "_rev": "87-6ba1c2b7644f95f324d096c27630b7d2",
  "name": "@semantic-release/commit-analyzer",
  "description": "semantic-release plugin to analyze commits with conventional-changelog",
  "dist-tags": {
    "latest": "11.1.0",
    "next": "6.3.3",
    "beta": "11.0.0-beta.4"
  },
  "versions": {
    "1.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "version": "1.0.0",
      "description": "derive next semantic version from commits",
      "author": {
        "name": "Stephan Bönnemann",
        "email": "stephan@boennemann.me",
        "url": "http://boennemann.me"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "nyc": {
          "exclude": [
            ".test",
            "node_modules"
          ]
        }
      },
      "dependencies": {
        "conventional-changelog": "0.0.17"
      },
      "devDependencies": {
        "babel": "^5.5.8",
        "coveralls": "^2.11.2",
        "mkdirp": "^0.5.1",
        "nyc": "^2.3.0",
        "rimraf": "^2.4.0",
        "standard": "^4.2.1",
        "tap": "^1.2.0"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "author",
        "automation",
        "changelog",
        "module",
        "package",
        "publish",
        "release",
        "semver",
        "version"
      ],
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "build": "rimraf dist && mkdirp dist && babel src --out-dir dist",
        "build:tests": "rimraf .test && mkdirp .test && babel test --out-dir .test",
        "coverage": "nyc report",
        "coverage:upload": "npm run coverage -- --reporter=lcovonly && coveralls < coverage/lcov.info",
        "pretest:suite": "npm run build && npm run build:tests",
        "test": "npm run test:style && npm run test:suite",
        "test:style": "standard",
        "test:suite": "nyc tap --no-cov .test/{scenarios,specs}/*.js"
      },
      "gitHead": "0f247377dcab0ce8fdd462be4fe3e618802e72d6",
      "_id": "@semantic-release/commit-analyzer@1.0.0",
      "_shasum": "765f94b24f60ffd4d19589d56f4e1d5fb094bc02",
      "_from": ".",
      "_npmVersion": "2.11.1",
      "_nodeVersion": "2.3.0",
      "_npmUser": {
        "name": "semantic-release",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "shasum": "765f94b24f60ffd4d19589d56f4e1d5fb094bc02",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-1.0.0.tgz",
        "integrity": "sha512-iAYFzQoleGUuVC0D5exOP+6KFTBN1Bhaas23zLXTJTSbRH97dOW/Dq6U2zYAUOqiLP6yy7lmaOWKIb9WvMmWhQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB3OSjNQktEDl+8fPJi2ojhek/yo6k++575dcPsHdBZxAiEA1W0rHa3YzFopI2uut/XlFKRlx0PFlm98XDKeUkyF1kk="
          }
        ]
      },
      "maintainers": [
        {
          "name": "semantic-release",
          "email": "semantic-release@boennemann.me"
        }
      ],
      "directories": {}
    },
    "2.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "version": "2.0.0",
      "description": "derive next semantic version from commits",
      "author": {
        "name": "Stephan Bönnemann",
        "email": "stephan@boennemann.me",
        "url": "http://boennemann.me"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "nyc": {
          "exclude": [
            ".test",
            "node_modules"
          ]
        }
      },
      "dependencies": {
        "conventional-changelog": "0.0.17"
      },
      "devDependencies": {
        "babel": "^5.5.8",
        "coveralls": "^2.11.2",
        "mkdirp": "^0.5.1",
        "nyc": "^3.0.0",
        "rimraf": "^2.4.0",
        "standard": "^4.2.1",
        "tap": "^1.2.0"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "semantic-release",
        "author",
        "automation",
        "changelog",
        "module",
        "package",
        "publish",
        "release",
        "semver",
        "version"
      ],
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "build": "rimraf dist && mkdirp dist && babel src --out-dir dist",
        "build:tests": "rimraf .test && mkdirp .test && babel test --out-dir .test",
        "coverage": "nyc report",
        "coverage:upload": "npm run coverage -- --reporter=lcovonly && coveralls < coverage/lcov.info",
        "pretest:suite": "npm run build && npm run build:tests",
        "test": "npm run test:style && npm run test:suite",
        "test:style": "standard",
        "test:suite": "nyc tap --no-cov .test/{scenarios,specs}/*.js"
      },
      "gitHead": "1821a51841329a468f85f7077f6ceed62ec57cf5",
      "_id": "@semantic-release/commit-analyzer@2.0.0",
      "_shasum": "924d1e2c30167c6a472bed9f66ee8f8e077489b2",
      "_from": ".",
      "_npmVersion": "1.5.0-alpha-4",
      "_npmUser": {
        "name": "semantic-release",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "shasum": "924d1e2c30167c6a472bed9f66ee8f8e077489b2",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-2.0.0.tgz",
        "integrity": "sha512-0tac17qpWdV8effuwOuvzI7UZ+Ygshr6DP8L5vGHoU5LgBtB+Vy1HjWlwAi2Ux77Cg8gP9QqMeC410F3VWUZNQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIC4qJDKsHJqDCgdk++5z14Qb1J4B1EOhb5TWZ2XBEC8FAiEAz5l2xGW1SvgLeYV0qMyBOSPWGOAmAUbFkxoVWENveKE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "semantic-release",
          "email": "semantic-release@boennemann.me"
        },
        {
          "name": "boennemann",
          "email": "stephan@boennemann.me"
        },
        {
          "name": "christophwitzko",
          "email": "npm@christophwitzko.com"
        }
      ],
      "directories": {}
    },
    "3.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "3.0.0",
      "author": {
        "name": "Pierre Vanduynslager"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@semantic-release/error": "^1.0.0",
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "import-cwd": "^2.1.0",
        "lodash": "^4.17.4",
        "pify": "^3.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^3.1.3",
        "@commitlint/config-angular": "^3.1.1",
        "ava": "^0.22.0",
        "codecov": "^2.3.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint": "^4.5.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-config-standard": "^10.2.1",
        "eslint-plugin-import": "^2.7.0",
        "eslint-plugin-node": "^5.1.1",
        "eslint-plugin-prettier": "^2.2.0",
        "eslint-plugin-promise": "^3.5.0",
        "eslint-plugin-standard": "^3.0.1",
        "husky": "^0.14.3",
        "nyc": "^11.1.0",
        "prettier": "^1.5.3",
        "rimraf": "^2.6.1",
        "semantic-release": "^8.0.0",
        "tempy": "^0.2.0"
      },
      "engines": {
        "node": ">=8"
      },
      "eslintConfig": {
        "extends": [
          "standard",
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": [
            2,
            {
              "printWidth": 120,
              "singleQuote": true,
              "bracketSpacing": false,
              "trailingComma": "es5"
            }
          ]
        }
      },
      "files": [
        "lib"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "lib/index.js",
      "nyc": {
        "lines": 100,
        "statements": 100,
        "functions": 100,
        "branches": 100,
        "include": [
          "lib/**/*.js"
        ],
        "reporter": [
          "lcov",
          "text"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">= 4"
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./lib/index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "clean": "rimraf coverage && rimraf .nyc_output",
        "cm": "git-cz",
        "codecov": "codecov",
        "commitmsg": "commitlint -e",
        "coverage": "nyc check-coverage",
        "lint": "eslint lib test",
        "precommit": "npm run lint",
        "prepush": "ava -v",
        "pretest": "npm run clean && npm run lint",
        "semantic-release": "semantic-release pre && npm publish && semantic-release post",
        "test": "nyc ava -v"
      },
      "gitHead": "91c125f2754bd433a309ee6eec12619ba520d10f",
      "_id": "@semantic-release/commit-analyzer@3.0.0",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "gr2m",
        "email": "gregor@martynus.net"
      },
      "dist": {
        "integrity": "sha512-dfqr77KRdZcf0tKLFD1dQHJ+ubZRR9QWGaZE0RmK2ttBQWievT1R/OxVMh5mjdt1fJeO0WGZXajWcLPOnV9qfQ==",
        "shasum": "c95afad2dcf7feb163170122ad9fdd8f4f8f69b9",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-3.0.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHCqFDzr7an+UjmVFRc03YeNHF9upDKkwqHroQGiD0qBAiApOs8cc3IzRkQsjRg5UWD0nSafVRPz4p6Pjle6cGC/zA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-3.0.0.tgz_1505684470595_0.2305421344935894"
      },
      "directories": {}
    },
    "3.0.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "3.0.1",
      "author": {
        "name": "Pierre Vanduynslager"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@semantic-release/error": "^1.0.0",
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "import-cwd": "^2.1.0",
        "lodash": "^4.17.4",
        "pify": "^3.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^3.1.3",
        "@commitlint/config-angular": "^3.1.1",
        "ava": "^0.22.0",
        "codecov": "^2.3.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint": "^4.5.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-config-standard": "^10.2.1",
        "eslint-plugin-import": "^2.7.0",
        "eslint-plugin-node": "^5.1.1",
        "eslint-plugin-prettier": "^2.2.0",
        "eslint-plugin-promise": "^3.5.0",
        "eslint-plugin-standard": "^3.0.1",
        "husky": "^0.14.3",
        "nyc": "^11.1.0",
        "prettier": "^1.5.3",
        "rimraf": "^2.6.1",
        "semantic-release": "^8.0.0",
        "tempy": "^0.2.0"
      },
      "engines": {
        "node": ">=8"
      },
      "eslintConfig": {
        "extends": [
          "standard",
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": [
            2,
            {
              "printWidth": 120,
              "singleQuote": true,
              "bracketSpacing": false,
              "trailingComma": "es5"
            }
          ]
        }
      },
      "files": [
        "lib"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "lib/index.js",
      "nyc": {
        "lines": 100,
        "statements": 100,
        "functions": 100,
        "branches": 100,
        "include": [
          "lib/**/*.js"
        ],
        "reporter": [
          "lcov",
          "text"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">= 4"
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./lib/index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "clean": "rimraf coverage && rimraf .nyc_output",
        "cm": "git-cz",
        "codecov": "codecov",
        "commitmsg": "commitlint -e",
        "coverage": "nyc check-coverage",
        "lint": "eslint lib test",
        "precommit": "npm run lint",
        "prepush": "ava -v",
        "pretest": "npm run clean && npm run lint",
        "semantic-release": "semantic-release pre && npm publish && semantic-release post",
        "test": "nyc ava -v"
      },
      "gitHead": "853a9fa038bf77de20e2c5e19b6e6def9fa39e54",
      "_id": "@semantic-release/commit-analyzer@3.0.1",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "gr2m",
        "email": "gregor@martynus.net"
      },
      "dist": {
        "integrity": "sha512-5wgR73H1/9fxSlm76/4PBCrBcHlU/ing7MXTRcA381vfLBVf7+YwxdNsBZr4Ag65CNSm4wt9iS8iNdzib72umg==",
        "shasum": "ef308494dc5716abc0bbdeed88fe47ed096b1d3a",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-3.0.1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDf7TSB0p6b6PcDak27533fkhA+ccS7UJNneuF87bkG8QIgL6R+rjyp1xwPWDGjbBbXLM6daS+Ec0NIpPMTAEKkcTI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-3.0.1.tgz_1505703708869_0.412448656745255"
      },
      "directories": {}
    },
    "3.0.2": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "3.0.2",
      "author": {
        "name": "Pierre Vanduynslager"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@semantic-release/error": "^1.0.0",
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "import-cwd": "^2.1.0",
        "lodash": "^4.17.4",
        "pify": "^3.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^3.1.3",
        "@commitlint/config-angular": "^3.1.1",
        "ava": "^0.22.0",
        "codecov": "^2.3.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint": "^4.5.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-config-standard": "^10.2.1",
        "eslint-plugin-import": "^2.7.0",
        "eslint-plugin-node": "^5.1.1",
        "eslint-plugin-prettier": "^2.3.0",
        "eslint-plugin-promise": "^3.5.0",
        "eslint-plugin-standard": "^3.0.1",
        "husky": "^0.14.3",
        "nyc": "^11.1.0",
        "prettier": "^1.5.3",
        "rimraf": "^2.6.1",
        "semantic-release": "^8.0.0",
        "tempy": "^0.2.0"
      },
      "engines": {
        "node": ">=8"
      },
      "eslintConfig": {
        "extends": [
          "standard",
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "files": [
        "lib"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "lib/index.js",
      "nyc": {
        "lines": 100,
        "statements": 100,
        "functions": 100,
        "branches": 100,
        "include": [
          "lib/**/*.js"
        ],
        "reporter": [
          "lcov",
          "text"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./lib/index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "clean": "rimraf coverage && rimraf .nyc_output",
        "cm": "git-cz",
        "codecov": "codecov",
        "commitmsg": "commitlint -e",
        "coverage": "nyc check-coverage",
        "lint": "eslint lib test",
        "precommit": "npm run lint",
        "prepush": "ava -v",
        "pretest": "npm run clean && npm run lint",
        "semantic-release": "semantic-release pre && npm publish && semantic-release post",
        "test": "nyc ava -v"
      },
      "gitHead": "0630747bccce80024360ce8016930f015c46bfce",
      "_id": "@semantic-release/commit-analyzer@3.0.2",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "gr2m",
        "email": "gregor@martynus.net"
      },
      "dist": {
        "integrity": "sha512-uIchjAwRVSNc0LqkZTVwR5EitZd0PieQk3Kbxezc2KmEwXeOElhJw1nkf69lc+ePhiuX//5UK3aQK/U9eUv2XA==",
        "shasum": "e4afdc9028a3a01d013ad21ca6be5e4e46dde87d",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-3.0.2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAbDDuVtEZT2gMSZ+4YUc+AY8d8LptszljgK9L6DXMmpAiEAvjodqX7dVNVw+y0/pi4nlYpgUuy0jk6igsFCaHcuYqA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-3.0.2.tgz_1505856091020_0.8299001413397491"
      },
      "directories": {}
    },
    "3.0.3": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "3.0.3",
      "author": {
        "name": "Pierre Vanduynslager"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@semantic-release/error": "^1.0.0",
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "import-cwd": "^2.1.0",
        "lodash": "^4.17.4",
        "pify": "^3.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^3.1.3",
        "@commitlint/config-angular": "^3.1.1",
        "ava": "^0.22.0",
        "codecov": "^2.3.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint": "^4.5.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-config-standard": "^10.2.1",
        "eslint-plugin-import": "^2.7.0",
        "eslint-plugin-node": "^5.1.1",
        "eslint-plugin-prettier": "^2.3.0",
        "eslint-plugin-promise": "^3.5.0",
        "eslint-plugin-standard": "^3.0.1",
        "husky": "^0.14.3",
        "nyc": "^11.1.0",
        "prettier": "^1.5.3",
        "rimraf": "^2.6.1",
        "semantic-release": "^8.0.0",
        "tempy": "^0.2.0"
      },
      "engines": {
        "node": ">=4"
      },
      "eslintConfig": {
        "extends": [
          "standard",
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "files": [
        "lib"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "lib/index.js",
      "nyc": {
        "lines": 100,
        "statements": 100,
        "functions": 100,
        "branches": 100,
        "include": [
          "lib/**/*.js"
        ],
        "reporter": [
          "lcov",
          "text"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./lib/index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "clean": "rimraf coverage && rimraf .nyc_output",
        "cm": "git-cz",
        "codecov": "codecov",
        "commitmsg": "commitlint -e",
        "coverage": "nyc check-coverage",
        "lint": "eslint lib test",
        "precommit": "npm run lint",
        "prepush": "ava -v",
        "pretest": "npm run clean && npm run lint",
        "semantic-release": "semantic-release pre && npm publish && semantic-release post",
        "test": "nyc ava -v"
      },
      "gitHead": "b375433e6fc1c4404950f4752ad8714a18124433",
      "_id": "@semantic-release/commit-analyzer@3.0.3",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "gr2m",
        "email": "gregor@martynus.net"
      },
      "dist": {
        "integrity": "sha512-S++RmwaV9dg7TnGJyTq2IOrhSTmtSXOG4jBHCHgpQaNg5m4NLptS4CAdz7/XdVN15r1016qj8PHvsBFHE0TQ0g==",
        "shasum": "5b531bcca37be41bad383b812a1eb0bd7aca27c4",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-3.0.3.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDIaqBArxBwew5doksXZPlJbECh7eihZvbET3lSTqe2tAiA0KDq123bmpERWbxpX89dfIjWmeEo/SqU/Qqpm49RO+g=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-3.0.3.tgz_1505971176632_0.06261887145228684"
      },
      "directories": {}
    },
    "3.0.4": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "3.0.4",
      "author": {
        "name": "Pierre Vanduynslager"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@semantic-release/error": "^2.0.0",
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "import-cwd": "^2.1.0",
        "lodash": "^4.17.4",
        "pify": "^3.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^3.1.3",
        "@commitlint/config-angular": "^3.1.1",
        "ava": "^0.22.0",
        "codecov": "^2.3.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint": "^4.5.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-config-standard": "^10.2.1",
        "eslint-plugin-import": "^2.7.0",
        "eslint-plugin-node": "^5.1.1",
        "eslint-plugin-prettier": "^2.3.0",
        "eslint-plugin-promise": "^3.5.0",
        "eslint-plugin-standard": "^3.0.1",
        "husky": "^0.14.3",
        "nyc": "^11.1.0",
        "prettier": "^1.5.3",
        "rimraf": "^2.6.1",
        "semantic-release": "^8.0.0",
        "tempy": "^0.2.0"
      },
      "engines": {
        "node": ">=4"
      },
      "eslintConfig": {
        "extends": [
          "standard",
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "files": [
        "lib"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "lib/index.js",
      "nyc": {
        "lines": 100,
        "statements": 100,
        "functions": 100,
        "branches": 100,
        "include": [
          "lib/**/*.js"
        ],
        "reporter": [
          "lcov",
          "text"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./lib/index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "clean": "rimraf coverage && rimraf .nyc_output",
        "cm": "git-cz",
        "codecov": "codecov",
        "commitmsg": "commitlint -e",
        "coverage": "nyc check-coverage",
        "lint": "eslint lib test",
        "precommit": "npm run lint",
        "prepush": "ava -v",
        "pretest": "npm run clean && npm run lint",
        "semantic-release": "semantic-release pre && npm publish && semantic-release post",
        "test": "nyc ava -v"
      },
      "gitHead": "752b68bb487eeea80e4938b833225d239cf7656a",
      "_id": "@semantic-release/commit-analyzer@3.0.4",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-/GxVszNHwVnQq7bW7HWbDgKFzCRZThA1fIrnvhnBCni2t1jHyw1lC/9xz4ghqswYqTL/rCxiR8R76uBYA6NOyg==",
        "shasum": "040bd2b99909f5671063be0c68fd782fd4543997",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-3.0.4.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB4pyH2ZZ2hy/yPtyxHFBOkLLRLLEcg47PoTG3a9gUaGAiBJD6Fu8Uc3pidB0nKsMiQ4THOWGE1YCVJs2VLe6YhdCw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-3.0.4.tgz_1506359492325_0.7125217991415411"
      },
      "directories": {}
    },
    "3.0.5": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "3.0.5",
      "author": {
        "name": "Pierre Vanduynslager"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@semantic-release/error": "^2.0.0",
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4",
        "pify": "^3.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^3.1.3",
        "@commitlint/config-angular": "^3.1.1",
        "ava": "^0.22.0",
        "codecov": "^2.3.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint": "^4.5.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-config-standard": "^10.2.1",
        "eslint-plugin-import": "^2.7.0",
        "eslint-plugin-node": "^5.1.1",
        "eslint-plugin-prettier": "^2.3.0",
        "eslint-plugin-promise": "^3.5.0",
        "eslint-plugin-standard": "^3.0.1",
        "husky": "^0.14.3",
        "nyc": "^11.1.0",
        "prettier": "^1.7.2",
        "rimraf": "^2.6.1",
        "semantic-release": "^8.0.0",
        "tempy": "^0.2.0"
      },
      "engines": {
        "node": ">=4"
      },
      "eslintConfig": {
        "extends": [
          "standard",
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "files": [
        "lib"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "lib/index.js",
      "nyc": {
        "include": [
          "lib/**/*.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./lib/index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "clean": "rimraf coverage && rimraf .nyc_output",
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "commitmsg": "commitlint -e",
        "lint": "eslint lib test",
        "precommit": "npm run lint",
        "prepush": "ava -v",
        "pretest": "npm run clean && npm run lint",
        "semantic-release": "semantic-release pre && npm publish && semantic-release post",
        "test": "nyc ava -v"
      },
      "gitHead": "dfb6c224f9edf07353ec1e8d40b2ca06df5d8f58",
      "_id": "@semantic-release/commit-analyzer@3.0.5",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.6.0",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-Q4wDOD+mcb9zOqi7BdnJNrz6R2hWKk5UdjCyhebgXFYWa/xL8E6LnATiFJ/wPQOdKKdnAmSRlCK5rtTyG5V5Fw==",
        "shasum": "3eb2a261b6d90894a217ca73d48fc46f33d83cee",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-3.0.5.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDu2JEVuje6XsSMgltz8FjJVk4utmCxQZLcdyWsUzoIiwIhAOOpIyxmkE5XfX6hRONadg2iTonre/vAwGPhYSgoC8a8"
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-3.0.5.tgz_1506894094411_0.26309029175899923"
      },
      "directories": {}
    },
    "3.0.6": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "3.0.6",
      "author": {
        "name": "Pierre Vanduynslager"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@semantic-release/error": "^2.0.0",
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4",
        "pify": "^3.0.0"
      },
      "devDependencies": {
        "@commitlint/cli": "^3.1.3",
        "@commitlint/config-angular": "^3.1.1",
        "ava": "^0.22.0",
        "codecov": "^2.3.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint": "^4.5.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-config-standard": "^10.2.1",
        "eslint-plugin-import": "^2.7.0",
        "eslint-plugin-node": "^5.1.1",
        "eslint-plugin-prettier": "^2.3.0",
        "eslint-plugin-promise": "^3.5.0",
        "eslint-plugin-standard": "^3.0.1",
        "husky": "^0.14.3",
        "nyc": "^11.1.0",
        "prettier": "^1.7.2",
        "rimraf": "^2.6.1",
        "semantic-release": "^8.0.0",
        "tempy": "^0.2.0"
      },
      "engines": {
        "node": ">=4"
      },
      "eslintConfig": {
        "extends": [
          "standard",
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "files": [
        "lib"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "lib/index.js",
      "nyc": {
        "include": [
          "lib/**/*.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./lib/index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "clean": "rimraf coverage && rimraf .nyc_output",
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "commitmsg": "commitlint -e",
        "lint": "eslint lib test",
        "precommit": "npm run lint",
        "prepush": "ava -v",
        "pretest": "npm run clean && npm run lint",
        "semantic-release": "semantic-release pre && npm publish && semantic-release post",
        "test": "nyc ava -v"
      },
      "gitHead": "34d964bc21d94347d063f5c9a781e7e4f5d3730e",
      "_id": "@semantic-release/commit-analyzer@3.0.6",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.6.0",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-AgQZVuALOLlE5fz7bWEHOIn+Pw8RlW4r34sjW5t3l8IZhL0eIPuQ92sw6Xe0+XKZmeQfIs0QZ0ZWeuK6nkGTgA==",
        "shasum": "3020ca7030658f3f52fef14c78f7fcccb8a1b33a",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-3.0.6.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHOGAr2l3ZdjEWEvgWego06EPPTTAO1KR1ETmNTOeFOmAiB2WLK2sfWoIA1QlVJT2c7kyXlPr4+j80lUpUnXoitR5g=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-3.0.6.tgz_1506895316240_0.9646026859991252"
      },
      "directories": {}
    },
    "3.0.7": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "3.0.7",
      "author": {
        "name": "Pierre Vanduynslager"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@semantic-release/error": "^2.0.0",
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4",
        "pify": "^3.0.0"
      },
      "devDependencies": {
        "ava": "^0.22.0",
        "codecov": "^2.3.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint": "^4.5.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-config-standard": "^10.2.1",
        "eslint-plugin-import": "^2.7.0",
        "eslint-plugin-node": "^5.1.1",
        "eslint-plugin-prettier": "^2.3.0",
        "eslint-plugin-promise": "^3.5.0",
        "eslint-plugin-standard": "^3.0.1",
        "nyc": "^11.1.0",
        "prettier": "^1.7.2",
        "rimraf": "^2.6.1",
        "semantic-release": "^8.0.0",
        "tempy": "^0.2.0"
      },
      "engines": {
        "node": ">=4"
      },
      "eslintConfig": {
        "extends": [
          "standard",
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "files": [
        "lib"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "lib/index.js",
      "nyc": {
        "include": [
          "lib/**/*.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./lib/index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "clean": "rimraf coverage && rimraf .nyc_output",
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "eslint lib test",
        "pretest": "npm run clean && npm run lint",
        "semantic-release": "semantic-release pre && npm publish && semantic-release post",
        "test": "nyc ava -v"
      },
      "gitHead": "d600a6bb1c62aed582564b1256eff7b876f8ef73",
      "_id": "@semantic-release/commit-analyzer@3.0.7",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.6.0",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-bxCvvDsZeQp6Fvev8CdAV4pu9rEt8NOuLIFS0E8RLjKRnqQVL/fGAwpQWnRQ5hc08UZroguBNEENWpKBubWmKQ==",
        "shasum": "dc955444a6d3d2ae9b8e21f90c2c80c4e9142b2f",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-3.0.7.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDAfsw4exg/gG0JeM5cW3FdgXUuRx09EWFjoQVafza0egIhANqjYxOV9v0WN8IEtdsi3lTtdMR+8fP21ooxYA4/KOvT"
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-3.0.7.tgz_1507644573845_0.8020946190226823"
      },
      "directories": {}
    },
    "4.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "4.0.0",
      "author": {
        "name": "Pierre Vanduynslager"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "dependencies": {
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.23.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint": "^4.5.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-config-standard": "^10.2.1",
        "eslint-plugin-import": "^2.7.0",
        "eslint-plugin-node": "^5.1.1",
        "eslint-plugin-prettier": "^2.3.0",
        "eslint-plugin-promise": "^3.5.0",
        "eslint-plugin-standard": "^3.0.1",
        "nyc": "^11.1.0",
        "prettier": "^1.7.2",
        "rimraf": "^2.6.1",
        "semantic-release": "^9.0.2",
        "sinon": "^4.0.2"
      },
      "engines": {
        "node": ">=4"
      },
      "eslintConfig": {
        "extends": [
          "standard",
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "files": [
        "lib"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "lib/index.js",
      "nyc": {
        "include": [
          "lib/**/*.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./lib/index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "clean": "rimraf coverage && rimraf .nyc_output",
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "eslint lib test",
        "pretest": "npm run clean && npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "gitHead": "855b657c2336da3c4d4e9e4e1218237596e7ed12",
      "_id": "@semantic-release/commit-analyzer@4.0.0",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "8.8.1",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-dbKryDrlOVfWycRbMOPRwMQHbabrzME2lFIIWAw8/gcDUYlNBhlqYuwbw+Wp1/ABAJnQTPo5dfMBEX9Q6pPCwQ==",
        "shasum": "0053db39ba45d5794689f8a39487d453dfdbdf9d",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-4.0.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC7hAokGjK6NPfLpcmanurxUJza3kxQjYqdyuaXUx0dVwIgHNp2CoN4S8h7u24rynOc7rsLni6avgaJ1z/kOKLUKQ0="
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-4.0.0.tgz_1509325916463_0.24001221382059157"
      },
      "directories": {}
    },
    "4.0.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "4.0.1",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.23.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-plugin-prettier": "^2.3.0",
        "nyc": "^11.1.0",
        "prettier": "~1.8.2",
        "rimraf": "^2.6.1",
        "semantic-release": "^9.0.2",
        "sinon": "^4.0.2",
        "xo": "^0.18.2"
      },
      "engines": {
        "node": ">=4"
      },
      "files": [
        "lib",
        "index.js"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "release": {
        "analyzeCommits": {
          "path": "./index.js"
        }
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "extends": [
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "gitHead": "680ed44544ef04f2119fb3659a9701cfa1e0907c",
      "_id": "@semantic-release/commit-analyzer@4.0.1",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-mbyk+KPnI2UesHC1Az21CTZjzoGkzFm3w9qGKxifkmaAPMObKmbD6tPLwcFu8Bz5h08xG5yjtp1K0Pb3AKk+Dw==",
        "shasum": "6082371f606807d97a828b758c3b94f6b56d9cea",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-4.0.1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICbiilgxaCMZiYP1s+x07TOkA5hnTvMtNIwTTKjAoXqsAiBScEuz69BsC+36y/xYiLaOM5IOpQmCxoENI9BC5QHvQg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-4.0.1.tgz_1511341422263_0.09872350003570318"
      },
      "directories": {}
    },
    "5.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "5.0.0",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.23.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.1.1",
        "conventional-changelog-ember": "^0.2.6",
        "conventional-changelog-eslint": "^0.2.0",
        "conventional-changelog-express": "^0.2.0",
        "conventional-changelog-jshint": "^0.2.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-plugin-prettier": "^2.3.0",
        "nyc": "^11.1.0",
        "prettier": "~1.8.2",
        "rimraf": "^2.6.1",
        "semantic-release": "^10.0.0",
        "sinon": "^4.0.2",
        "xo": "^0.18.2"
      },
      "engines": {
        "node": ">=4"
      },
      "files": [
        "lib",
        "index.js"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "extends": [
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "gitHead": "539d6d558ac6cc3e3b7f25a5a52754269c1bcab6",
      "_id": "@semantic-release/commit-analyzer@5.0.0",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-DWqE0EwLfqawNzH/cPd987KyplsvwmlKTr6Oz/hPe2NuIwexD8Zt7EvBvHt35udcRsK0EK6+QZTIz06Fr/gIsg==",
        "shasum": "767a2055b5cd0a67421b1d504f3ca7db97055c42",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-5.0.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD4Cxt/s2lT6E/6NOMmGFKy+0FtQvY0wOhYYLI3vF4YwQIhALWnn0JTC+Y3lgz//XaqXjYVJZT9D7u05cfbd96/Kp3V"
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-5.0.0.tgz_1511577753031_0.6288494570180774"
      },
      "directories": {}
    },
    "5.0.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "5.0.1",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.24.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.2.0",
        "conventional-changelog-ember": "^0.3.0",
        "conventional-changelog-eslint": "^0.3.0",
        "conventional-changelog-express": "^0.3.0",
        "conventional-changelog-jshint": "^0.3.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-plugin-prettier": "^2.3.0",
        "nyc": "^11.1.0",
        "prettier": "~1.10.0",
        "rimraf": "^2.6.1",
        "semantic-release": "^12.2.2",
        "sinon": "^4.0.2",
        "xo": "^0.18.2"
      },
      "engines": {
        "node": ">=4"
      },
      "files": [
        "lib",
        "index.js"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "extends": [
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "gitHead": "53faf3b5a1a75f25fd893dd59bad94fcb41498e7",
      "_id": "@semantic-release/commit-analyzer@5.0.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-XrOzS6ymgPmyqRbdtpy6PxgdHdvSb0OWFoajNqNODncKv1jWiAhTu4Mfmx6HzJNBFDM3l57oNu+OY7E5VlPo0w==",
        "shasum": "1af758537b2a366e18d71fd398764170cbfdb567",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-5.0.1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCaylw7WB8P8BBtD7XEhTYjZD6rfVADFl1Ylybufr2MKQIhAKjpVzJ7NPXfmQJCFWVbksSeVyLHXoz6qghQia0aIRXX"
          }
        ]
      },
      "maintainers": [
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer-5.0.1.tgz_1516508584019_0.3009420926682651"
      },
      "directories": {}
    },
    "5.0.2": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "5.0.2",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^1.4.0",
        "conventional-commits-parser": "^2.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.25.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.2.0",
        "conventional-changelog-ember": "^0.3.0",
        "conventional-changelog-eslint": "^1.0.0",
        "conventional-changelog-express": "^0.3.0",
        "conventional-changelog-jshint": "^0.3.0",
        "cz-conventional-changelog": "^2.0.0",
        "eslint-config-prettier": "^2.3.0",
        "eslint-plugin-prettier": "^2.3.0",
        "nyc": "^11.1.0",
        "prettier": "~1.10.0",
        "rimraf": "^2.6.1",
        "semantic-release": "^12.2.2",
        "sinon": "^4.0.2",
        "xo": "^0.18.2"
      },
      "engines": {
        "node": ">=8.3"
      },
      "files": [
        "lib",
        "index.js"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "singleQuote": true,
        "bracketSpacing": false,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "extends": [
          "prettier"
        ],
        "plugins": [
          "prettier"
        ],
        "rules": {
          "prettier/prettier": 2
        }
      },
      "gitHead": "01a465ed93da212ef50ec4e0fc91f149b0e3b6cc",
      "_id": "@semantic-release/commit-analyzer@5.0.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-LqxmHwsy6DIvKg5tz4L8pvw9B0SECPlut0vE2b0bhHoO0v+w7kiEKeRf6gcaxCY6lDo02AWXViN0V3BfAEGFJw==",
        "shasum": "4db92f1aaed02397393ac78309892627c88eb64a",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-5.0.2.tgz",
        "fileCount": 10,
        "unpackedSize": 23811,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFGlpuolQ3zFbGJZMIyiK5AaOam/Nin+P7vyrYODc8F7AiAPwGssaZVoWLqZiYoBrDNr/NKqj+eFJPjpxCZJ4bPSYQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_5.0.2_1518216933919_0.5218440593716984"
      },
      "_hasShrinkwrap": false
    },
    "5.0.3": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "5.0.3",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^3.0.0",
        "conventional-commits-parser": "^2.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.25.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^0.2.0",
        "conventional-changelog-ember": "^0.3.0",
        "conventional-changelog-eslint": "^1.0.0",
        "conventional-changelog-express": "^0.3.0",
        "conventional-changelog-jshint": "^0.3.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^11.1.0",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^5.0.0",
        "xo": "^0.20.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "files": [
        "lib",
        "index.js"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "70fbe21b2c39bf08fdd2c3d85f37159b818794ba",
      "_id": "@semantic-release/commit-analyzer@5.0.3",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.10.0",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-4GLFDmp8Up+f4GQGPIzLVd8X9a3yqbZjl761sEdfCH4e5FkEO3I9XRlTEfKSueeCt5OA1lZBb9IHGpZ6Ot0+BQ==",
        "shasum": "f2b674d30207b49b77d905ad5850d7aefd8838dd",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-5.0.3.tgz",
        "fileCount": 10,
        "unpackedSize": 23530,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDpYwT3Sv1WRshb4cV2cIRulTjOdlCpddmQJc/kSGRb0AiBQZon6V+KW4qffTV9osAGNM4jCmgiDrhrvonsnW3TA8A=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_5.0.3_1521730338496_0.45668431271441934"
      },
      "_hasShrinkwrap": false
    },
    "5.0.4": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "5.0.4",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^4.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.25.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^1.0.0",
        "conventional-changelog-ember": "^1.0.0",
        "conventional-changelog-eslint": "^2.0.0",
        "conventional-changelog-express": "^1.0.0",
        "conventional-changelog-jshint": "^1.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^11.1.0",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^5.0.0",
        "xo": "^0.21.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "files": [
        "lib",
        "index.js"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "8edcdf4e7dadb4517b72e7e4482ad8043eff8a6b",
      "readme": "# **commit-analyzer**\n\nCustomizable commit-analyzer plugin for [semantic-release](https://github.com/semantic-release/semantic-release) based on [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/commit-analyzer.svg)](https://travis-ci.org/semantic-release/commit-analyzer)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/commit-analyzer.svg)](https://codecov.io/gh/semantic-release/commit-analyzer)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/commit-analyzer.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n## Options\n\nBy default `commit-analyzer` uses the `angular` format described in [Angular convention](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) and the [default rules](lib/default-release-rules.js) for release.\n\nAdditional options can be set within the plugin definition in `package.json` to use a different commit format and to customize it:\n\n```json\n{\n  \"release\": {\n    \"analyzeCommits\": {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\", \"BREAKING\"]\n      }\n    }\n  }\n}\n```\n\n| Option         | Description                                                                                                                                                                                                                                                                                        | Default                             |\n|----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: `angular`, `atom`, `codemirror`, `ember`, `eslint`, `express`, `jquery`, `jscs`, `jshint`).                                                                                    | `angular`                           |\n| `config`       | NPM package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset.                                                                                                                                                                    | -                                   |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [Release rules](#release-rules).                                                                                                                                                                                                | See [Release rules](#release-rules) |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends ones loaded by `preset` or `config`. See [Parser options](#parser-options). | -                                   |\n\n**NOTE:** `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both. Individual properties of `parserOpts` will overwrite ones loaded with `preset` or `config`.\n\n### Release Rules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the default rules will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing.\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched.\n\n#### Rules definition\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"release\": {\n    \"analyzeCommits\": {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"/core-.*/\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"}\n      ]\n    }\n  }\n}\n```\n#### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the regexp `/core-.*/`) will be associated with a `patch` release.\n\n#### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n\n#### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n#### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determine by the plugin will be `minor`.\n\n#### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/index.js#L9-L13) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint/index.js#L9-L12) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"release\": {\n    \"analyzeCommits\": {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"/README/\", \"release\": \"patch\"},\n        {\"type\": \"New\", \"release\": \"patch\"}\n      ]\n    }\n  }\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'New' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n#### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"release\": {\n    \"analyzeCommits\": {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }\n  }\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: /core-.*/, release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n\n### Parser Options\n\nAllow to overwrite specific [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module.\n\nThe following example uses [Angular convention](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) but will consider a commit to be a breaking change if [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) detects a valid `BREAKING CHANGE`, `BREAKING CHANGES` or `BREAKING` section in the commit body. By default the [preset](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/index.js#L14) checks only for `BREAKING CHANGE` and `BREAKING CHANGES`.\n\n```json\n{\n  \"release\": {\n    \"analyzeCommits\": {\n      \"preset\": \"angular\",\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\", \"BREAKING\"],\n      }\n    }\n  }\n}\n```\n\n## Usage\n\nThe plugin is used by default by [semantic-release](https://github.com/semantic-release/semantic-release) so installing it is not necessary and all configuration are optionals.\n",
      "readmeFilename": "README.md",
      "_id": "@semantic-release/commit-analyzer@5.0.4",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-Vvg6ny9MnSYzG4qPjRXZQP6mh3IzaWLDkH03uCsiDw2xvHpKjTP2O4p2RLW8OQbE2kpDABdN9OL23M62YaZ9ew==",
        "shasum": "356fa02a73b85d10c07193af17b7bc391b60f032",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-5.0.4.tgz",
        "fileCount": 10,
        "unpackedSize": 23672,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbDXIQCRA9TVsSAnZWagAAY7AP/jGKm5MxM4ALtMLuU9Bp\nDomS65JoznGjeHXMQVgCtS97t908xmVO+5RIZ4y/OKiDSHoyDB1BtpjwA3qf\nuWVMKORDCwowNmkM/BxkPDHnbAq2ILDETiP3HlAgmBjpVsJOS5UDn5JaWjoU\nMc9VXduJzteaMqeDVtj2z5aESxDFCmB3dCAkZcH3JHv0+3hXEqC5dnhZ+gys\n5W/vB7tn0vMQZMVITZ4LBMfb0dbtf/7l8vuccSoU/WT1YrQkVTihab/rMlJi\n5UljTA42w6hstObSUjnwkvIOH1TgvTBYObEAh255ZvYKPogkjHSQzZl9rfZr\n7bEU1wK7dPSMQMbZHsRGKTs3yuCyZsKlK9xYPzvzGDKxmA9dZsxC97apZhKC\n/EjOQY2EyRUffoN2ik8TO0uC09OuTQKO+DdSw4EG2UWsyiHdU+Jck8RUW+cc\nUPAQNG9zyexnRwAQb2Vv0E9YbZJ8D8N0ETY1Su2doBUioy1nNPAeTEcPlsyZ\nMiee2rpFIjszgHUQLR0vZwKRbu6koOLfno92Sk3dqc6bDZSwDtmE+/Jh57yH\nUfpyh3xlJe5cUIaYtoj43Thi1bflzNMRgcxjd5LI1LjboGwc7ESB6jBsluZt\nLdHTcZwWNYnqBAU2f0K1TvPVtyThWjyrBFVI6HHR3hP8CDmxfZuiUmLOAPCF\noEw9\r\n=eAUO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFXSsj6om8MLrK9WnKSvliChMFtsNYeHKOiQcvNtSycEAiAdokDQImIH4uWmkyjV4J2RA4yrzUPlPKJkDJvMM6POZw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_5.0.4_1527607823582_0.5597421278058963"
      },
      "_hasShrinkwrap": false
    },
    "5.0.5": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "5.0.5",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.25.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^1.0.0",
        "conventional-changelog-ember": "^1.0.0",
        "conventional-changelog-eslint": "^2.0.0",
        "conventional-changelog-express": "^1.0.0",
        "conventional-changelog-jshint": "^1.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^12.0.1",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^5.0.0",
        "xo": "^0.21.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "files": [
        "lib",
        "index.js"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "bc5610f59dd01f4bb0fab88c99e464394aae430d",
      "_id": "@semantic-release/commit-analyzer@5.0.5",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.2",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-JmjqP1LTzSUPepnEsiYztpq4jPMxTp/GyHSo2wo8MbjRXrTJeNnWPyv6b+8fYNer0V1TuNLXqsZICbR3HTMMBA==",
        "shasum": "e855acaab9a850b97ac4260fec8c6df36c0edc45",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-5.0.5.tgz",
        "fileCount": 10,
        "unpackedSize": 23672,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbF/kaCRA9TVsSAnZWagAA76YP/jyW994aFhITN+uqJ8vk\n9g/PMMEhZk/9D4FOHZC5INU2oZ3N9hHRx3OwnOewxatYEpb4BJETr52Cg0bx\nyr2ygPD21VMml7++OBTEoVrGnefn9ZDk0f60r+2WWq41WeBf5WJ57uXlk1sL\n5Khl0G0vMpEl51vqm/pi8TGmefAtnPaXp85FzkeUxiERzCcauXOf/4eKlC6s\ndJAPJIOJ+yj198tB0/aMiyDhMca2PjcwjrlISP8mCY8uowLlAI6nNyYVq994\n7639hJFv49OvXlTzCNxMzXRAOO6SzusqDWWRxc0nq/y1eJiqnz2CFM4pHd53\n/fuFh/p9COhmXE18BbDqOw1oSFZpG3ZFjGKIeuJg/FoXHYTPk1QAWj5JfF3L\nLd4EkphST+T2Q904YfHmjQviTb0H1PTAZdPi7Z6T88jwxEZ9eLZmV9btGEyr\nwykiKNytxElUEgNdCNUJJhawcHx/5OCAo8mNp2ePM+mvbGJlelU+3/yx+o5u\n9pPdSAHWyKCx/70sRBsNMeUWBtN/IvJt74sH9M3yAWGokFEBv5CtnO6qzCav\nSoeqxEaVh9VIbxfhIBGVAgx75wH7tabYxRqgWl/8140iCnp/AkwHMj/ztfMK\nnqFywKZwO4X/fauTgnzf9pfapzgUkIOO4VDeaUcgt0pKPGhBVm0B44RMDHO5\naq9A\r\n=3Vev\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICpaUxvMosrZacCHKqZ0ff+DA1EaPd5Gy5VHh6XK8o90AiEAh8l+hMIHiJV7CeWbq1DNWUJOVuQlhjS+IpTmPa2av5s="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_5.0.5_1528297753711_0.3967627159626823"
      },
      "_hasShrinkwrap": false
    },
    "5.1.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "5.1.0",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.25.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^12.0.1",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^6.0.0",
        "xo": "^0.21.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "files": [
        "lib",
        "index.js"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "e8c560459d7ef8752180154ed0263ce262aa22a7",
      "_id": "@semantic-release/commit-analyzer@5.1.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.3",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-YS4b2DkazI0/k/DyfjaOPCgv9epvVIle2eZv0hfU/wpVwJFTlIFHcLvylJ7m73aM8e4+F1XJwsy3XZ1RxKqi7Q==",
        "shasum": "9faffaa59a7b4a08adab7747da67afd57a997314",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-5.1.0.tgz",
        "fileCount": 10,
        "unpackedSize": 24132,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbRNQrCRA9TVsSAnZWagAAGhgP/RNAU9AvFtupBMNWdQhh\nmVO4xUaUEQ2dC2sMTvfeeJCqgfwYv8sW6xPyHHdnKVfdkJMF1eBmvDL7zOkk\n6g3XZauEUqgf4GGanRvJPSFJXnQk4cI1InxVHYP4zjhoi/nZfAQnPUvMd5Nl\n+57h5ocbyxw3+32lxL+uEuuxPNTpmU+Xsob8/MnkBaaO3h0+g5Jam2e7DRY3\nEswUY97Pado/yZYiArQso9TVdoCuBBYRfxNW+t6NYTwVlJr7D5GchwrLBpfg\n5KqP/LGzNAk6xZBeHSZ0rLLFMaMqx4tiWj9JaoBVtJ1EzdA+b3itBbwpHqKr\nzeTRgVuhE8EMK5NoojSG2yACfyWYc2VI7EoUpopCLA6oKtE61H9o/TplRb07\n3U+/8wXOeMFXY40R0s3hhB2NukSU5KLnrmv6i/gy/yrNrPrKlPopKgoYqJpw\nZf0812Ra61LbnT+V+rF/Zkimu39YlxfwVD5ZxOgypKre1AIMqkT+xFvqqnZj\nBeOBpKapJQtQn3zWzsKQDyeg7lwqR3oTZktwfHu5l5cgn+KTB/wPR/tP4y+D\n7d7EqJlrufQ1wxPVjh9N/9p5E+QBIPK4TNQbHX1p77bRwkpFLioYyJrQatS2\nD6sd2dnTaY0JpxxPVoINB8UlZ4ZsgxFc7rYcB1YdK9UzN5A44qOcMXQ+CtsR\n2bnH\r\n=j8WX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCO8q/4i8w90j6Tuq+NaQ60ACeEeyYqyeZoNk/O8SXi2QIhAKYG/vN/bwxxvjyfv7OJw5bL0ExghU/V/d4JqFeTmuj4"
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_5.1.0_1531237419835_0.8598134836575855"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "6.0.0",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^3.1.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.25.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^12.0.1",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^6.0.0",
        "xo": "^0.21.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "files": [
        "lib",
        "index.js"
      ],
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "1d74e467c602b1dfe4b4721cfcd69a3a84b132c5",
      "_id": "@semantic-release/commit-analyzer@6.0.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.3",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-LEBEg5Ek3PCVv8srHRA8uuwu0t9nAXuBQ9ixjBiMYCqCCUsCezUi5wRdmXnJkXs5/yQkd4Dzx8OJ1zIAL2Pqeg==",
        "shasum": "e26ef70938059f03525573560f65212164953121",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-6.0.0.tgz",
        "fileCount": 10,
        "unpackedSize": 24718,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbTW4ICRA9TVsSAnZWagAAJ9MQAINeBh3cs/UlgKiG3tI4\nNmplUyC73YccsnUrMoRZxuhz7EY3HRD4AXqOi6A+IOBOSdj+APicvN07+OoB\ngoXOSfQfyJf45CR7COtgtHfjqLj7P0cOF38ZoGpx2Q9PWn7F9BDqUmHDXelL\nOhcwaKq5lD9uf79g8exVse/x6SxkcSXz+nHKrva/XlVk4uDS+8oFBZnagu3m\nJsRO0bANzH99+ezYJ+YvhmC8ssqnveERNkAGNyozrAqnGelV3qwzmpDDs+Fy\n4y3FNfDDDUpwZ4cHiMnNdI+w6ZhaCIdEKJGG3T71bFnyESt/QiyrDWxxidhH\nfWy3jsnmEASXQcjcU6K+GTX9/23qU8tgReyn7QGrtRZrH07vW79hFEtIyT/J\nvZv2klwsEJjOaqXSykxGjygl3Cu8ACqCoIzFLO7b4glYKH15bWrnaQuzuRUg\nQCRMiL+rsDHFscGKB/gIluDx6oB/Jbys7lWDQss+QSMLBQo5AGyXnsn8fm+Y\nu+Aaovh/q6hq1ON04l/cjEEODyK7Dn7DvQWWmUwnxzolLozzEVcn0KAsmSSc\nrE3lEasTMDYDf+XAaWdcQWO+2BF9ulQGHyYLEY+8CLBtOv9LT/YJkrcGb9cp\nDk89wPuqNjIAJoZemB64FTOO4kANrT0efKNi++nHD0J6yUfYtQSFyPetBY63\nqbg/\r\n=+e8b\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDcZAHsLz7Ugd3MkeyQLptYlQsA1QE02ZTbVWk73pKYgAiEAtiuGPFMMpWxo+kDyMiO0Gii87mEi4HMv8+IWo/nXNl8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_6.0.0_1531801096367_0.533824441310174"
      },
      "_hasShrinkwrap": false
    },
    "6.0.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "Customizable commit-analyzer plugin for semantic-release",
      "version": "6.0.1",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.25.0",
        "codecov": "^3.0.0",
        "commitizen": "^2.9.6",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^12.0.1",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^6.0.0",
        "xo": "^0.23.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "97e7002f0038c8d38e77837750e39afd8d9bff61",
      "_id": "@semantic-release/commit-analyzer@6.0.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-ENCRn1tm1D08CCBnIPsID8GjboWT6E97s0Lk3XrpAh+IMx615uAU1X2FoXyOGGc6zmqp9Ff4s8KECd/GjMcodQ==",
        "shasum": "5acd015130d60e279b6ed2de56b8e0d06169cd3f",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-6.0.1.tgz",
        "fileCount": 10,
        "unpackedSize": 24718,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbl9zhCRA9TVsSAnZWagAA8mgP/AzXw29LNG11jEnDD+du\nFD8Jle/4F/R5hJ9I/0E+2nVKsrLE6UrA/JdB2sR2qW5aJ9DePysIMRyUaXVW\nHIx+5v6wOnX4yq82mOUsNGZaPAMW6Kz0yfpYEnCHh1uaNT/X6i8R9oipG5HJ\nuTGdM673LhmAxIdwn2FGNbgZbyWIgg/YtygEtclF9+8sMRB6qySofUVFTWa4\nYxjpYfTvPT92GhVlAZTMwNTQO6wMRN+9xl8J5Jm9k/fuT81AJPKbm6Ede0Zp\nqfXbR/o0fVoFW9peuYv3T7+AsZfNCaCDbHZ6ZTa5Ilwmn/2NzvC0wNOGfW9+\nludjbYHkR3h7ntCM4fqjrt+PPAKOMPFBM/b5ppHcZroUzGWHaeE1zDeOCbNj\nONq7/YtnqdO+ZwZpCgPKTFYKkwXJX+Xrgl+nHJDg0Zhdb4gUnb0EGPG3pBhl\nhYfYnI/Pfu0v4W6jUmP396NMM0IxAXwS7P4jZIS+ZkgxeZc+u4G306AQtEXq\nKjiJCj45zlMZcJLL5zv2R4137OZi9SRwdDHjAvB7FVX4UBTZnygZrbfZa5M8\n6XuqagW05ys9pxqkzgsgc5fdvLtekrKM+LJZflFKJU+rMW+w7YwNOxRqf2NU\nU/R1dCUkEwDFbA46apHKuU2RsJcFISp8cv26rNdyaS8DGZd6eE42Ww64qmcV\nSQZ0\r\n=JRNF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDPLDBN7+n5f7ZnVsqW+8XLw1YYMPLIZNDoMr6c4+LRrAIhAIgrHqUwVSUMxy/8nIaBFvLukKzOQYPhafxReZ0IdQBR"
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_6.0.1_1536679137030_0.6810958136690815"
      },
      "_hasShrinkwrap": false
    },
    "6.1.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "6.1.0",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^0.25.0",
        "codecov": "^3.0.0",
        "commitizen": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^12.0.1",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^6.0.0",
        "xo": "^0.23.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "43ea155d8747abcfbf4b3e4ea770127b9d441561",
      "_id": "@semantic-release/commit-analyzer@6.1.0",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "8.12.0",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-2lb+t6muGenI86mYGpZYOgITx9L3oZYF697tJoqXeQEk0uw0fm+OkkOuDTBA3Oax9ftoNIrCKv9bwgYvxrbM6w==",
        "shasum": "32bbe3c23da86e23edf072fbb276fa2f383fcb17",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-6.1.0.tgz",
        "fileCount": 10,
        "unpackedSize": 30584,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbu48VCRA9TVsSAnZWagAAb0QP/05UmKRr7h1w7yslKSxK\noU+zCYIxoQbQ91R0SVJ2QZgkDwN3Wbcs8mQoyVFzzSH4eKsyJZGyxtyha90O\n1r2cYK0Lu634ASEwuPveUlJXNLSo35ZrfLNufdW4dEuEw/H7rzImWjlkxeun\nq5w+JbeD916M8C3jGHKkGSOSN6Gm+bBLBbn/+DQlw3nZxXy6+cBCqXAssX9C\nPljfB79ebrOA79tj921lxagCNe3B5AxloTJvzrd1SKDMiIG6R6qRSTNYsZtl\nAc7HBwC5UqBYP0abtzAW6MrXTexD8I+ODtTgdCSmWyuSxc5wkG4wJm40KUiT\nxQNG1jFX6atrgZAYyaxh2GGCQ7Q1Z3c+c0fkS1ysbVFcrkUh0WLOGlT1e7oz\nktUWXIyVld+isLEHjtPKDPAfpT7x/6g+2lQ9gPPRSTIWoSTaPArnChfJ5MX0\n5TL5GaS147MOoCq0mhWrulBR71w9gz77XbPlyBOAeQavl4jgpHzNTDcXLbfw\n8IfLEwrfTzOyrVjN+BLHC1SG4Rw6mdR+gAUTCTIO5O0FR+3JbKO5LjwLRDc6\nv6mGp8TPCtFhk7cJMgVfiaDw/58Bm9tGhHBrrJwRM59qBlgdh6ZdBy7yjwMP\nkN0IHzQVdGGn8qVgDp7HnUMFrbiqnvLYl/RbSpILp2SgTZM19ko4n5Wnsv4R\nI09+\r\n=7Bkf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCDv2HuuXGrErMSPYZsQ58hAJo2802yvrmUVjssqA203gIgeIZ5P1pkilR9QgF29NBC2Pjx5O5NgOk7PGbBrj8AMmM="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_6.1.0_1539018516358_0.9133572766710902"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0-beta.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "7.0.0-beta.1",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4",
        "micromatch": "^3.1.10"
      },
      "devDependencies": {
        "ava": "^0.25.0",
        "codecov": "^3.0.0",
        "commitizen": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^12.0.1",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^6.0.0",
        "xo": "^0.23.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "beta"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/commit-analyzer.svg)](https://travis-ci.org/semantic-release/commit-analyzer)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/commit-analyzer.svg)](https://codecov.io/gh/semantic-release/commit-analyzer)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/commit-analyzer.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\", \"BREAKING\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE`, `BREAKING CHANGES` or `BREAKING` in their body will be considered breaking changes (by default the [angular preset](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/index.js#L14) checks only for `BREAKING CHANGE` and `BREAKING CHANGES`)\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | NPM package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/index.js#L9-L13) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint/index.js#L9-L12) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"type\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'New' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "3cebda31fe8cece2b3e9def3839469797e5c2ded",
      "_id": "@semantic-release/commit-analyzer@7.0.0-beta.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.2.0",
      "_npmUser": {
        "name": "pvdlg",
        "email": "pierre.denis.vanduynslager@gmail.com"
      },
      "dist": {
        "integrity": "sha512-ig55creapTgz0gOFe6lsU765BiTH2HVjyaZatKPd4aeRwCH5zQrPvlot8ZweEhBhjgXsYN3HlUqeTbNlomcUbQ==",
        "shasum": "b5df2dfa46a5382139abb6a9bfeb05b282fb45d1",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-7.0.0-beta.1.tgz",
        "fileCount": 10,
        "unpackedSize": 30481,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcAC9bCRA9TVsSAnZWagAAR1kQAJ/xbim1uPKtkXcvoWlG\n4ir9FNl9WMRjbs3P4U4JQ2N5UdP24lO5IIaf5r6Sc+vLoEe13R6/DO3+KLo/\nW6JH98SafoGr6tUIKgY18lguH3t+UlNPMgKB/8RhX7C6D7NK2LAGJ2wbqiVO\nvn7UZAOYCHTWSxjIWCmPlvjCCp+dvBzCglEY5wy3vAYBh0MRQVx0niqpitx0\nRSJwVBcrgT7UCpWOqq6+Rgm/mnM7UlzujBbWGEGqhvj+Saxr8f0TV9pZjt1t\npI0wxgvCv/OaCHKh184VH6ldeZgAwfmEsJwUe1aFcdHRxdquMZa6Bdvaq0v2\nXFugwldyUfQqnxAyQ9QgQWXCVP16vERIE5LwtTYMUGBn75XTF73Mtcw2bJUM\n5q+dspt+uFL5EHYo62S0mJ13Vr/0xtxdC91xTgYwIlKNo7QmscR3HDnLe15X\nNjvF9ofmqE67txOt/HgABZwMMP6gSlmZGI/hUxGb+lFdOCiP8TjWA8vpiN43\n7rd+TmJDa893tCtrsXmi4Y1BLtiTuwcNF36DcX6yCroeCgaU5rcNPaoY0J+p\n/koOjjmoQHfJUo8mPQsjJGeBBiSd6dKfSOa5SPPl8WMlUh3i8uwIkZo2LaRE\nbvfRPq5iFjsAnpFw/grnl7vpZOdJMaziiM/MPgYl53EJfYIbENTazIG3hNVp\nZYYf\r\n=DmDg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCREOCRwxHfzuXwoPRnsdOdlwxaQ9Q7ix8YIke+Sk5nYQIhAI2CKwAYh4uh8/onpZRMWx99gibJ6L0YKghGLxUxIHcF"
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_7.0.0-beta.1_1543515992373_0.18370665969748035"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0-beta.2": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "7.0.0-beta.2",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^2.1.0",
        "lodash": "^4.17.4",
        "micromatch": "^3.1.10"
      },
      "devDependencies": {
        "ava": "^1.0.1",
        "codecov": "^3.0.0",
        "commitizen": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^13.1.0",
        "rimraf": "^2.6.1",
        "semantic-release": "^16.0.0-beta",
        "sinon": "^7.1.1",
        "xo": "^0.24.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "beta"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "31dadc7ba4293f63d38ac16c584d6de29c4eb54d",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/commit-analyzer.svg)](https://travis-ci.org/semantic-release/commit-analyzer)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/commit-analyzer.svg)](https://codecov.io/gh/semantic-release/commit-analyzer)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/commit-analyzer.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes (by default the [angular preset](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/index.js#L14) checks only for `BREAKING CHANGE`)\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                | See [`releaseRules`](#releaserules)                                                                                               |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'New' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "_id": "@semantic-release/commit-analyzer@7.0.0-beta.2",
      "_nodeVersion": "11.12.0",
      "_npmVersion": "6.7.0",
      "dist": {
        "integrity": "sha512-8xEXff5Ok5NVhYvsNhvTPZTAKv+JMxXobWZNnBJ1wpAB6QWu9przAy9h9KgBGPbbKdQTTJIPosyPq4psqJPffQ==",
        "shasum": "f18b3ff6809b61306d0a4e095766f5a6bbead6e6",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-7.0.0-beta.2.tgz",
        "fileCount": 10,
        "unpackedSize": 30604,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJck6QVCRA9TVsSAnZWagAAv1MQAJ2KLICziPQlem333/cD\nT6TgNqzl5kP3T3o8Mh2XS5oiX3A2WrKmQjRytuJnADlxTU9Z6pe1lFt7hymY\nnI3whsKeS+JouIKrjFhmqLnt//YWTQlCdFwS3LyitDVuY5zs/OpLzItMB7gE\ng/qNwmtljkUEBqcyTXQoG1DfgYSUn9MX+j0dQHI76EO4NBXV7oBtXjXeWxy7\nSjRdvFCa01fERDM6GsUIoOiEzfQWr2gSxT0kI9CIWxM0nka1he/nQuk0mm9h\nFununMS4P5oQbasvvzggnX07yqKUqsvj2WpJGt23/kdOP0GJFNQVo7Ectv9Z\nmkve+aToKEgOobaVWx+gGl7DwZLcl9IUsRI8IYjWXJxOhemqneOFW/MrPDVW\n4SEJurRJqDYQFupp54ykYiL3z2DvBgNnA4JGI+jLmF+hllsRbF+2z3Q+hT/z\nRLpztURRNqcn5QfMuEeugRd3ufi5eg7JfyeP2AoGX9PHDX3+nwRSFxPbon+w\nCS8DoZJHhHnol6U/EpoZLfLpqM0EMPOuaguP2QXarhzGeORLcIuw9DHfx3PI\naukUS5QMumbJ97yVeNEO9XVXm2S6hPv6pGNdcXx30yUX6jttnVxXIMyoFI4X\nM/9yVWNLBudl+Vo4z7Muzsbmu1+n/9P6bXlwA4Rs5iPqRZVVCcA9h0q8vmXA\npzpO\r\n=nh/K\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA124DkbK5GrmhJXihaHFycAyaOkBulbVushZxLSpzwdAiBWlb0t0vx+h1LSSacapOXlNAyRfwC4T2RioDI5WTj76Q=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "pvdlg",
        "email": "pierre.denis.vanduynslager@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_7.0.0-beta.2_1553179668921_0.9118334301877558"
      },
      "_hasShrinkwrap": false
    },
    "6.1.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "6.1.1",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^1.0.1",
        "codecov": "^3.0.0",
        "commitizen": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^13.1.0",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^7.1.1",
        "xo": "^0.24.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "088819ccba81ba96fcb72b4975486401f3f25274",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/commit-analyzer.svg)](https://travis-ci.org/semantic-release/commit-analyzer)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/commit-analyzer.svg)](https://codecov.io/gh/semantic-release/commit-analyzer)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/commit-analyzer.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing.\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"/core-.*/\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the regexp `/core-.*/`) will be associated with a `patch` release.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"/README/\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'New' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: /core-.*/, release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "_id": "@semantic-release/commit-analyzer@6.1.1",
      "_nodeVersion": "10.15.3",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-Kh6+xvF6fJ0hVjRChbuYBwruba6QWf7C0AgTOJeq/5hF9EHJjEfDZ+jw54bfVzYGpBaABQ97CD8H7D7mHMm9EQ==",
        "shasum": "768a00c5671000b2e85ab8cdbfd4069e17067cd2",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-6.1.1.tgz",
        "fileCount": 10,
        "unpackedSize": 30449,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc0yToCRA9TVsSAnZWagAAU2cP/2fi98Wnw1X0z2cQRsOL\nP/UAFNiMewJKEuNbLAaEfLZSzKn3BVmKxCSYE+uLbUl1jc2Q81HHre2COQUR\nFFYB656KT6XPvq4t/caLcgZPX8C8FF/3WviqWP3XlCfZafcmVZowSlP46b5e\n1KDM0dUQ3OA2bmHybsgKjmGJ/TqCl+Q7mwh7BKhCiHCK7gEzkTDJVXq46/KP\nd2H0LlU92p73ESG0vffsdItOwRl9vVsEQ3BEpoXt5hPnECG/duVZaWYG6gab\nrsaBL/fCY/1iJKibGz1w+b3ug8nlzpflPc2zrvFHaXisLZeLK9eOQ5rAlFYF\npYrLeW8dj/u1IO49pGFpPiqPnT6TMYUvX1YzIKkPVB9DOYyjhTJM1XtdjKpT\n+UKy824F5DTltFDOvHrZkpjCJLzY9YxH4vbQ+D8nKo7TKixtABE7WBhePLHu\nPTIYRocixntFLj+zJo1vID6wXWKuFsPG+nUREPLtyy0TVgH2ICSixJdWlyWq\nHg9VtQIA5iF4+lLW1mrm1p/nGP41+bH3g5+s16duW5tQZTMblcql1kErwFlP\nMh+2eg25So3ESuXW5Pf/iZhoWeV1+mkYEMboVSuQ6TB4V5WeHAFDoVN5JDeQ\nLaMkWKgvE4dVJpU+BYT2UkwiATkKVnPVSrktccmdh8aQTbje5OghPMzWSbTB\ndLoZ\r\n=YSsK\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICCr31CZDAy3bgWa/P3DA0emVKVMx+4rVcEysunZ2yILAiEAijEYBS02LM1Cq3sYYRqjHw0yCsf3snCXrTcbwUUFyIo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_6.1.1_1557341415394_0.8684456472250204"
      },
      "_hasShrinkwrap": false
    },
    "6.2.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "6.2.0",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "commitizen": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^14.0.0",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^7.1.1",
        "xo": "^0.24.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "a71866f37d2165c467be63360143d9d56b419dfc",
      "_id": "@semantic-release/commit-analyzer@6.2.0",
      "_nodeVersion": "10.16.0",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-oUtPydYcbtJsEY6WCPi4wynTgRecK5zCkKaGmHi+9Xl7d6jGf7LomnJCg++6dNF1tyavrbGMSdXTCPH6Dx9LbA==",
        "shasum": "5cd25ce67ba9ba5b46e47457505e63629e186695",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-6.2.0.tgz",
        "fileCount": 10,
        "unpackedSize": 30742,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc+pI8CRA9TVsSAnZWagAAdT8P/i1f8o4JXtcc3mWsVLY+\n9ntSXnA+CwLx5+L+LLcNl904kudBsqxt/XmUFPIzMWUvILbom/WYYC9ZnuMH\n3kBgcRbI9ukQWhRYELFu6XejpvHiPVF+yB7qMLJ0JfaEbG5QzxhnKae+VNnW\nLHChRxNoqG334dKG2hcjXS4CtTWZwZ+1qZnXG8qfnEctL2hAUT9l4uvA5Rwe\n70aS2+Z6o0lCMuZ3sGAKpCMp45I5R39p+tGzy5qAOkQH+eshlS9CLmBJnsCV\n6om5oPy6HFqslVv4y2RHeXI7l7raxeo2Es7Dgq75P+RCR21/XQdKnOzcz09O\nyzebpaO6OPvK1EJSDmm5EoLOVUfQsJFNNAPMLpDqtsvCMwV5TZ4vAGo0mxT5\nDNJQBC48t8RmLEuqgNHSzCAeOQjBNjDdeHSRn3wpw9kgKKBq8zNtpB11Y5Wm\n8m+1fe2yecOFYmSO9uxJ5hx9Qgk9tyzeD1wVRCiN7yrxzgCyf/yLn9gqZN8I\nzTOS8VvHV9TJglTX9WeA0uQcTtw5Ox4TIa4zPWsbrq4Ot8rcbBDn+FMfL/Wz\nxayeEe0KO/aUc9MIhD5Tktbe1Jvy8pid0sGVPUfoZ45j6pbAFUXHY2zZDcbN\nifumf9w2WNZRXhW6KWdLch9Eo+DuqjNb7ohC8O7cK3MHaKMOzI361aJO2L0E\nCHoE\r\n=O5OP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHPgt+HIW6diF1yi2kX8s71q2Gafi9uXhHYf5nB5C8vPAiBW0ESenRQAtybWSxJP7kgfmV6e0oVQ6dEJLG9waiZA4A=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_6.2.0_1559925308223_0.6479476126386425"
      },
      "_hasShrinkwrap": false
    },
    "6.3.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "6.3.0",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "config": {
        "commitizen": {
          "path": "cz-conventional-changelog"
        }
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "commitizen": "^4.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "cz-conventional-changelog": "^2.0.0",
        "nyc": "^14.0.0",
        "rimraf": "^2.6.1",
        "semantic-release": "^15.0.0",
        "sinon": "^7.1.1",
        "xo": "^0.24.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "cm": "git-cz",
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "edad14c9933a4a712478658e25fcd61abade577a",
      "_id": "@semantic-release/commit-analyzer@6.3.0",
      "_nodeVersion": "10.16.2",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-sh51MVlV8VyrvGIemcvzueDADX/8qGbAgce1F0CtQv8hNKYyhdaJeHzfiM1rNXwCynDmcQj+Yq9rrWt71tBd/Q==",
        "shasum": "e0fb2f6af7be2321ad9401d8ae25be0cc1005d83",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-6.3.0.tgz",
        "fileCount": 10,
        "unpackedSize": 32417,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTbZmCRA9TVsSAnZWagAAClEQAJvy5IkgodeZjOoY5+GE\nj/9DjnJQVGXlvYRsLkCkAcwGjxGwtdQRJAvYpVOq3TmHpIqTrrleYnXMobpV\nS4chURktNbsdnbL5HnO9spltqIav8ZR5w0ZWI2G8VZ6218JGMCsxORyeeGAG\nK3AODpZTNH+ULV+FISVMhAD6dNaEamFF8cUUdgJwE/euKVgso4DU65D/TMfd\ncvMKhihOXl84yZRi2kN8amWe30e0jN6DiwL+6fqXuu+t4Kcx3mSfTG6pljY5\n48+V07Y34PgGSvDGHRiRzWmtgcncUDxkXJ6LovFQYoi+VzmH0BMXn/Z/Hzew\nIJbnfT/KZAWR7LQ6j9X5hlVZFmcfvWHtvvKdaMDyGXoIX/iRL2nytX5Qq1lx\nuzY8BC2FNh4VNgajr2fIzSz3T7qfPGqo9HpLrm0/slekMWp0rRVgc80ud4tR\n/qLia9+OQ1Xrtw5SObndKGipTbCvf3iatPQYA8eeDMqrZco426HSlf+s0Dtt\nWWXvm5FVDMfzfVfLXEft1F319pnfvoDgjZWgebUOvdR/VcDambZhF1AjAcHQ\nQDgfA1+uHtn0lJzkZpxHZn4vdeS/ohcZxKoTPlyNE4rvyUqLeaortmYCaM44\nM3/9sgfqniZCaxT5l7owttw094OppVOl54CY9mT0LaM6RCd+VH7d3LtSa+2/\nVGNX\r\n=INyj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQClc2+a3eib1gWYRayu7uxdDHHZdNR7FhTMmNpSpoAuAwIhAKcRdOwgpRfdM1HXO3RzOuTWD0NwQ3C6dWlSCqZbCyT3"
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_6.3.0_1565374053810_0.9764061470296881"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0-beta.3": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "7.0.0-beta.3",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^3.1.10"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^14.0.0",
        "semantic-release": "^16.0.0-beta",
        "sinon": "^7.1.1",
        "xo": "^0.24.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "53e1b0549038c41dc77b0290c6bac01298c00463",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/commit-analyzer.svg)](https://travis-ci.org/semantic-release/commit-analyzer)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/commit-analyzer.svg)](https://codecov.io/gh/semantic-release/commit-analyzer)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/commit-analyzer.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | -                                                                                                                                 |\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"scope\": \"no-release\", \"release\": false}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "_id": "@semantic-release/commit-analyzer@7.0.0-beta.3",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "10.16.3",
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "dist": {
        "integrity": "sha512-mG8NykOWIZM7+fmhB6GQY8K2rDhJPWwgNzcEU/pr4YULSvX3MBQiGKrEP8uuVjbycVYYJAlfUrg0nMp/kaZf1w==",
        "shasum": "4268b5854e793ea6159c55cfe69f5b86805238ee",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-7.0.0-beta.3.tgz",
        "fileCount": 10,
        "unpackedSize": 32511,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdXYedCRA9TVsSAnZWagAAa3MP/j6mI/LBPts2of56hVxh\noXETeCe61LbarcLq+gfPT9tGROtue3FdxfBgV+7ZV+F4zIuV/29oDtJqnb8c\n357xFOfIJk/ieUDn0p3hNFhOc8vsLXqq7Y32AwRgbTAPQm/86Xj81Jtoa+hq\nqJsqOOjQUG0MHfQjwwjTzNgS3czjdOjcC3Ksm1lI9HeJ3ZGUjGRoDRqzk0nr\nI9i0CpqCU4KBz3uUcCYKOa1koFe+Ya92CWAJ5KqSKDri93+AbwbNVM+5jqeJ\nW5mm7sTlz1pHa7n6Au0IQo10A4OZ7xKMwhLsxzBs78sCMGLR7jjbAaZ3xxGU\nnNUua5ZJqnLFBqAmldMyfrxemJKm4ktaO0oqn72LEIdQisU7DZMq/AEdtN2+\nVY7bXUSgc27ZNtQIN0CKGofirVtCDBZcFHbWr+NjhR2qCkJwawlm3jaRvKXH\nW2+mOdb/JTVVmej/+JL0wD/C0dW+IOUaCECrCDPNZrXbnIEpKtnn0Nnk4K1+\nuqMDw12vg2fV+1OwlxhOhRfdqh6IltksZ4Mc+Oje/a1rtl/xbWtIzrshVfDf\nTfBuM5liGQ9mAgsLyl0+MzuaD+cEK0ZJVOWRz8pnfTE903/jIsUrI5RUf0SF\nGowfyiQZnTk7rZNFzSj+meYIT27wMUV4Xe7tjJowsLL3NXLXyP+sGCFLX8gw\n88yy\r\n=hlUb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDfNIc9RYk9NkVKStA+jaqjzaJEDEaByA1Qm5VIYQo/vAIhAKf9RBdMKSJuj/JiGLaaLuCnag94dmVCS7b6InpQ50Pg"
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_7.0.0-beta.3_1566410653311_0.8061137772912086"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0-beta.4": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "7.0.0-beta.4",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^3.1.10"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^14.0.0",
        "semantic-release": "^16.0.0-beta",
        "sinon": "^7.1.1",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=8.3"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "b32c74b7b4a49dc60df71fbcd910fa06ce0c51bc",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/commit-analyzer.svg)](https://travis-ci.org/semantic-release/commit-analyzer)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/commit-analyzer.svg)](https://codecov.io/gh/semantic-release/commit-analyzer)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/commit-analyzer.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | -                                                                                                                                 |\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"scope\": \"no-release\", \"release\": false}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "_id": "@semantic-release/commit-analyzer@7.0.0-beta.4",
      "_nodeVersion": "10.16.3",
      "_npmVersion": "6.11.3",
      "dist": {
        "integrity": "sha512-EUorCO4GtcFgX89WRU1zQJjVv/+sVgPWRSrZXcLuvRVrwojfeMjCtjHcv7lC015OHTLv0WXvRLQYoeuD26zsXQ==",
        "shasum": "8eb9e4c76453ae2de871384cd9a0eb5834193420",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-7.0.0-beta.4.tgz",
        "fileCount": 10,
        "unpackedSize": 32506,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdlRztCRA9TVsSAnZWagAAKWUQAIkaOC4WtZKcG3txV4CS\neMuDoEC/i5U0OMfuJ2oyuczYo4+HO5Bo17hk364717BW8r53175bgQlU32up\nA4kIM2ipEAAkbogNKjHjR4uEs9jMbPD9PcOM5RrYlYR1MYPlDJMOSqw+IuNM\nDRHTnvCdpsJueJOjEq5bm2kbbh3swEnoNeA9f2WTuZMaQOcAS0FWs2aM7Tjg\nwwQ12+6VX25qwVuG5ZBf7Cyi518lgkir5TnyOohydcFZAELXool4AJD39lUw\n1Dl3h4EkRTAJNZW6TC3fcy2qOUXz7IlRTxkJAp6JlJd8vGulYrBHc0ISSEn4\nTx9ZDycMUr3uuZUEY+3Bz7gOAlGMBUTTo3F/C1PktXBZb8iYm4UMcrJroL/9\nYm93nAJHh1RI4f/mzjekuE0qCWIG4vgUex3YdY+FhkuSdjYymWTYJu3JN3KH\nd7p9blnSrF9+ZnL90QDo7ujlyIFo61EYLnOLVfa8a90sCZB6ILplutpO7DmW\nFDeQxpxRewt0TmpyP/KZNDV5iD4nZEnDXEm9M3ofErixhizPTIn1x5S9jEOm\nVp3rwCzEmQAPCFhMD2Z8hb640PU53r+RobtO9dGy/hndwenDwf/fYSpZHkS3\nqkwxI2vpsGiyg8OSxrvdDU0CH9WhdgP7qR3TbPDHhou17FYirIhajdBihZG+\nrTB6\r\n=xhGc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDuRzRP/yA8ydQwIG2i8C3VgjZ5Xg2TdEm5edyzRrBPpAIhAK5jB4aiN2a83BMSobVTrPbiiInFcseDmDBYeimYVvoY"
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_7.0.0-beta.4_1570053356514_0.5983052519312111"
      },
      "_hasShrinkwrap": false
    },
    "6.3.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "6.3.1",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^14.0.0",
        "semantic-release": "^15.0.0",
        "sinon": "^7.1.1",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=8.16"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "6d9c9d0f22b633819b653a1d950bb4e23d06d8ff",
      "_id": "@semantic-release/commit-analyzer@6.3.1",
      "_nodeVersion": "12.13.0",
      "_npmVersion": "6.12.0",
      "dist": {
        "integrity": "sha512-TQj/BU48b6dy1jS4yJ2Vfd7vOwkNWM/ySuISvW97yeQDd8Lm++t/NUlLdsn6+IZmtGZGMwsfGHYBZSLMuRZmQQ==",
        "shasum": "050342c7ab78983461f7064457ad51924ada0303",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-6.3.1.tgz",
        "fileCount": 10,
        "unpackedSize": 32211,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJds9BdCRA9TVsSAnZWagAAsfgP/3bBq7PowxwSCoN+halz\n5RJXwjylVPfgsEi5JaEbGrMOkiuyqsSRpsJOby0EjdCcaZzXRZgI8rnodqaS\n+ZoPVXfPHZV25J6ZFVSFjKOogMo4iRs8XRysMLReoJxSKdOUUpK33Yaa7xY+\nwWxktAUsrpzQUWPqcwBTzmPrZbEkq8NaSzrJg906TDd63NwY2/0tc41upvJf\nuoghlp4gqErAHbQ4t8of3ucprJB5pTY8DUqGNY/Qf/iAvytA7j4MecBXe+mu\nok6YvRLrv/DPlLXwW/GNsZJ6n4HYwpfEKtk6BfPiFrRml5o+QzEFIR5QxJM6\nv0G6/8XXCjbBjIXoBoDC7STkl621FbeYvgxrPkSQJpr1TDit1wEYQMDPfLuG\npU/52bSFK12UBhEX/wj3IVIphv/N6Z3NgdB4TcTVT4/i8870UAbLMo1E9wrz\nkTjLvJVpsJTDJrgMwOp9rk2fYdzQgRap8kpzL9e0Yig03MlxdD8+RqzkLMGp\nLFwPW8HJRR5QJQtt/AUiKqikTWPbn7kSBjubvN4b3+kjFNTHrCepKoKw6LVd\n6WnaKbdpyjTB8egis6L1ZX1Z0uUG1FPoJa4dcgIHe/VvidgpMchcOtKOjZD0\nV4Vans1upHi53/hzjRtAKNFbtQJxlLDpfp+tCOZdDUqgTg9j4k+oCT0JnXg5\nEUBN\r\n=b73N\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDcRf7XXDQ6La3ZrZ1v+j9tl/ot9s4DDtdIM6A1GY0KVAiEA25L4aUhTSx/gAwTF6L50QOuHjtiBYpPeWA26EpH8HsY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_6.3.1_1572065373190_0.9413452259939987"
      },
      "_hasShrinkwrap": false
    },
    "6.3.2": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "6.3.2",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.0",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^14.0.0",
        "semantic-release": "^15.0.0",
        "sinon": "^7.1.1",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=8.16"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "595c81f029bbb4a26f5b716f44e7887e27b7c39d",
      "_id": "@semantic-release/commit-analyzer@6.3.2",
      "_nodeVersion": "12.13.0",
      "_npmVersion": "6.12.0",
      "dist": {
        "integrity": "sha512-TezpOODuMcdDuGcGsI2QRqkH3sT7ffhsxid9J8OyspXDe8E4tshekJESJ6Pq8jTrggluKd3tCK26Vsyu6SkeSg==",
        "shasum": "f30d621ede11d4060fe6b9d689559ff6ff7df7de",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-6.3.2.tgz",
        "fileCount": 10,
        "unpackedSize": 32411,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJducC8CRA9TVsSAnZWagAAJ88P/2KqqIBH9a7JrDs+0AR1\nIhs2EjVFoY4TeXRutD/I1LgfAjvDfliW/3qTJp7pNf265quNf6x03oR4+wcy\n9r0Ar6qGpZ89+FTQW1q3erxTJ4W8PfHDK5AtClkdFX5iC5lN8x7whH3eKqTk\n2aD9aTiqRPkPGsBusqpyXchzq1z9A+mKvfy2B5978qvecVP8Shy3ChEX/eBa\nMlIiwhXAFSoQiCMSApE9dHUJ1EIuxDil/8ozJHp58cAWG0Ttd3w5b1jwWpGP\nb93QgNDzLJk8fukBRaOMl40nlHCRhWQEATY23lznaeyOUu90E/2+hUh1FbQr\nVf3spb92zeVfr/mXkcdPswQgQHQTFTpFFkuLNK8AhFw4kw3sPVAhvrO4dJip\nmknNsjOguSif58tW60KBgMaJ6Elv2p8huVCzRv3gbHPodc14thgsx9BFxJ+4\n45cIzPMmkfuncTgDRDkaf8hlR22zMAsYKGUzghUJm1oLKKEWdEiUbe/C+o5Z\nG/4KyqLflsbXLEkT9HD1du+Ptm+bkb+jseFT/4lZLTC5w+VsdrGhZfJKM1UU\nN7fgvhMiFmWyjECWxPfiCadklqCnGhrxgfYP7z6SE2TOVjmCzwSmKG5I5Y2q\np3adAGHQAduBIGFlw7l0LCjSV2Lb6UdJ0Q2wd5S8tOvS8A5r6GgUp7igkbfx\nUKWD\r\n=909c\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBqnPVdqASrgQMwnrMy/cfT2zO5IXFNZb9/FvI0Pq9OMAiATMBhm4VZIKsKHvrGaysYe8DJ8DSMILfx3+kJZhzoMmQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_6.3.2_1572454587649_0.23738267993505602"
      },
      "_hasShrinkwrap": false
    },
    "6.3.3": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "6.3.3",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^14.0.0",
        "semantic-release": "^15.0.0",
        "sinon": "^7.1.1",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=8.16"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "tag": "next"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "4a929ca098ee8f02aec9a9aca3a2f887f21985d8",
      "_id": "@semantic-release/commit-analyzer@6.3.3",
      "_nodeVersion": "12.13.0",
      "_npmVersion": "6.12.0",
      "dist": {
        "integrity": "sha512-Pyv1ZL2u5AIOY4YbxFCAB5J1PEh5yON8ylbfiPiriDGGW6Uu1U3Y8lysMtWu+FUD5x7tSnyIzhqx0+fxPxqbgw==",
        "shasum": "885f7e46e2f0aef23a23be0904dbf18d6ece45ca",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-6.3.3.tgz",
        "fileCount": 10,
        "unpackedSize": 33497,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdxEZlCRA9TVsSAnZWagAAgbcP+gLazGERNrbdVBsXv3dN\nkZjb0CT/BKeP6WUi/eP9hGBnAZyYyAngmxw7GFmgK5+iAmaU5G2HrdBuooyS\nJLXrvLVqF8JqX1x8S5riSxW7dKdXpMYU9u+iNdb4P8emyfWzMQc9f59TXBHa\nD8FLRLJRusan9qVdcY4cr+yGkF0l/itEE1u4HGojEgM18caAXgl98hc7fX4l\nrSC2D4J5CCn6pecl0QdPWQ2k2fsHcMQ668gb5dmpr+5c4RquhiQSy9ECSeTi\nLun/01r2vdHfuzJPXwvquTxRp4lUclDMYRadOk7r8GC0IfLd9UfFRNY0HALS\n4Y8BdrbKJZD8cDnUUAmqOvIm3i/B8Ce+G+FuGiY+55J2+duAXerovP7dZBdy\nhVY/0qDJf6+dsiJYxCdUO6xY11+e4kT3R1agjM8wdm833NU5HvlmVxf6L1hB\nhWdIR8MzJL5McyNeHTcHQpL1CIkxhsiBWNW0muoHfv8jlXunRrxDkxpjlfNi\nNGQ/xiyniqKDiaiD+J53ZAZz7upDyM8s2KM84WNJx771WGYc2X7hipLujQsh\nsPWrJfTAjaOcBxhIpfrXckmRqQz6kyNm26rsN8Sc9LbSnfj9A9mwUz7I6KmC\nrg/XOdNEsjBrAEoHF0jEZ2u+1rctfNAeZZQoi+RKGtjpJKFXXrB/k1CMl2+E\n19hz\r\n=Juwi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFNWBPzuhQvBXLHb9mEBth40kBQraa8kyfSl37b2imr2AiEAkwxrvERplxZOyMTFhoYUjbbchcimxkMbZofyFgLERj0="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_6.3.3_1573144165378_0.6912603775394235"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0-beta.5": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "7.0.0-beta.5",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^3.1.10"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^14.0.0",
        "semantic-release": "^16.0.0-beta",
        "sinon": "^7.1.1",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=8.16"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=15.8.0 <16.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "b5996a702b727199f98671ef9fc9252094177572",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/commit-analyzer.svg)](https://travis-ci.org/semantic-release/commit-analyzer)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/commit-analyzer.svg)](https://codecov.io/gh/semantic-release/commit-analyzer)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/commit-analyzer.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"scope\": \"no-release\", \"release\": false}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "_id": "@semantic-release/commit-analyzer@7.0.0-beta.5",
      "_nodeVersion": "12.13.1",
      "_npmVersion": "6.13.1",
      "dist": {
        "integrity": "sha512-jHXZ+sPXy8agMkB77EXgPBfMwhkbPttZvH2MgTlfdr0/X+Egs4FzW565uc3B9EJeLzTLc3w1Db7LWfi0S8YbRg==",
        "shasum": "743299f94fafeff9ea05f8117d2ac13da26d6547",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-7.0.0-beta.5.tgz",
        "fileCount": 10,
        "unpackedSize": 33793,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd1eX6CRA9TVsSAnZWagAAwmgQAJ+9WLQ+F4UUcczdbcBr\nuV7xH778fyWPAyRGSA8x/PO+W78/Np3BJMgrLehuvdP6E/69GM3rHmoTMqyv\n+MP26A6eRo9tdW1Zeq4dIZAmDdrhd0AO7LzmMJzFl+Hjur6hkO290BWG2u5p\nYhvVZwDHw5yBo99cvdmjKErDF/GlfuPY/5bq50FcT2kmFuZNrVcSzAbT9F+X\nRhuAHD5CutdRPaEa1UZMf6zZ/CJMmRwQqJD8OaEWg+yfbUBNPq50ak4ypQEP\niWKNgRLbUzp61ZcSD4ah7nGyusWNHu+7HPMBWs5/GkMMX6feJibs+M7QpJyN\nYkPLBAAoUKchdpMNRaO2HIEV5M5J96m+wqethPSwDgCL5OvghOff5Zqw18+K\n9QW13N4Nc66XGGgHKX60+G2yQnsdNCaMBa6WfoPqYYrfEnolKPV1NvUoSKkB\nlX51U+07rvQdE1IfSDJr7nc5sN7fzy4Q52Z1/4sHnHimds4gjwtd7DgJFpG2\nSjZRAndCbSBIkdMGBgJXWRFHvwhFWZDBgkIj8Txi91ssh6+080L+qm2PyyFj\nNFkLPK/kDg6R03f8jMytkEulBWoBZmyZqWcIfV3SFA5rLQKVpN+gmFGOQGIC\nsKOIECVtEhxSqxzb/rZLD42QczN/29ZqJ+AbulGec5jMXcYcnKuHDESSQyuU\ncVQN\r\n=iIXG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCR0GvagN/xg5dk0T16b/qv+xV3dfnrQnTU/5WiIakqAwIgUH2HbYI10zX1ivek7zbLWc/3h0VtMFWoH+2Sbe8VQ9o="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_7.0.0-beta.5_1574299129557_0.8505068318099565"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0-beta.6": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "7.0.0-beta.6",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^3.1.10"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^14.0.0",
        "semantic-release": "^16.0.0-beta",
        "sinon": "^7.1.1",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=8.16"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=16.0.0-beta <17.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "4ff652fd4a936f7432e827d8d6363d99092bfcd5",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/commit-analyzer.svg)](https://travis-ci.org/semantic-release/commit-analyzer)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/commit-analyzer.svg)](https://codecov.io/gh/semantic-release/commit-analyzer)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/commit-analyzer.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"scope\": \"no-release\", \"release\": false}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "_id": "@semantic-release/commit-analyzer@7.0.0-beta.6",
      "_nodeVersion": "12.13.1",
      "_npmVersion": "6.13.1",
      "dist": {
        "integrity": "sha512-0KKdhrhRWDsiy7WcHSyh8wOKiaVafEfV1I4lxwX1VGb+koHzUu1LxCDEIazRqoAZjnfGvEkBQr6dl8/gnXwOuQ==",
        "shasum": "f7d481aa52f0d13024d519c952c82fcf225d311b",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-7.0.0-beta.6.tgz",
        "fileCount": 10,
        "unpackedSize": 33798,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd1egoCRA9TVsSAnZWagAAGGAQAJ75JJNeYJ7Gse/Jtr3w\nTAQkwuZlaE/NmNH83eR0jwcoZbShuksDhahRAJbUih0DHurggObFHbxi4VZL\nPY1Dr0LIdq7Tc2IxfJnkeyLzqjl9jRipj/OG6MszZW7AcNjCJwxINi1jxAw+\ni1WgGunrzkkZuxk5ZrQ7aGCpsu7RFBQS0Z2SYSXYRIq5qlyibiBqpFD1sgxp\ne4mP8FRjLH3/FYJyfJKg6i5JpDfaB7gppZil9Wlr733neCCSXfqopbN0dqF1\na2FoFQATtOX7DisrsosvGklSRcINhwj98CD7A67XMy6n5POCpsimAw1YaKKZ\nXrtkCKpbeNx4lVDzcMskYmOZpXr2VYm7f/isK0g/PYFqD9VYG+jAVFeqrxTC\nlE7UnXXSLStRnRrSELdPWIQC3By20xjEEgWkhjASZlOMwxuumqAqbvQssaex\nOWLzhj2wqwJiNOk7DO2sz4gzT2jLMNMYhzUfM+5WnPhr1WNWDD/ycMezBDMF\n5usIKxw9VzxkigT7T3/WSblE91r26zlfEGNv38Ocg4NcWtFHkEorncl5gMLO\nezFdGeZSHIlYI0THTr9rNQ7HWAqSJDhEPtyiXk/kwdIuJdz1CrQIWyAxvNgq\nfQuDANCL8XZuQBJDhpDS8lUVUEUYZiq5WjB+ggezj7g8iAOysKjBDtJ30PWH\n2I0O\r\n=/lPj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD0X/fUYhuxf1oohfKc4krJC3ZsAmZRpH9IYnj+nkN8pAIhAMVba81AgeAzslz8IifSal3XDp2vJhtoWE8cWVU0yK5E"
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@boennemann.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_7.0.0-beta.6_1574299688218_0.17009489633162134"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0-beta.7": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "7.0.0-beta.7",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^3.1.10"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^14.0.0",
        "semantic-release": "^16.0.0-beta",
        "sinon": "^7.1.1",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=10.13"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=16.0.0-beta <17.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "9f7290769b50d087ac044b18c9c9e9c2b1db59b6",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/commit-analyzer.svg)](https://travis-ci.org/semantic-release/commit-analyzer)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/commit-analyzer.svg)](https://codecov.io/gh/semantic-release/commit-analyzer)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/commit-analyzer.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"scope\": \"no-release\", \"release\": false}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "_id": "@semantic-release/commit-analyzer@7.0.0-beta.7",
      "_nodeVersion": "12.13.1",
      "_npmVersion": "6.13.2",
      "dist": {
        "integrity": "sha512-1mhphBfra8n4HZpIctrqbA8l7fXbBJ7lj2wgEfzL7kijAj4f6MUiRA9JmPAweRAnTyx7H9+FAQ7t8cE/7jsPJg==",
        "shasum": "d5b66ed41c0b774783bbaa6132189c6c84e34f0b",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-7.0.0-beta.7.tgz",
        "fileCount": 10,
        "unpackedSize": 33799,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd6Ve+CRA9TVsSAnZWagAAnP8QAJgiuAgCZdLe0Celbd7m\n+jV61tT9BmIrSC6GZVGYG6quEZ8Dtrv8EU/ZqkUnbh+4LkdHcY0YmJq7A+9A\nLTlelO66EXdUlLql5kr6sQvCivCtCJqIpxkIcE9hwVn1GKXe76RfwBX+5DBW\nWrv7esQdWNO9mnRfP1JUpdS/R2e9kLW78xLtQM8zrWY8kpWVBQoC5jJQ+xN3\novDvg6Ml7madowyEaKZsUuBYzf3x4nasqE8sE0GcFf/lEmVh+pdmGTybXFO/\naRbjMXAAjFW3SjwG7nIjbV8kiBxGZNyauI0yHtp/2HQ3VfdmWyq9tdQEwNAS\nIbPjZ+s6l1z4hGCyG+MgFKcd/agOKrgor+Bq+GIahkbyVJbRhfsnl4Sv3jZ8\nKtVX+9Qmq3Ehn1zChr5ksF7Fo47NyEm8aWiRQaVNgEou6RwHOVeoU/4Lyuv7\nPnH0UcWslEEQxVkCA5GXeDRS6AJdseLEtV/P0pTRGCMuxDHybNRgJ51b7Og8\nqq1svPEWVyQ0BkTvF6sZw248JejrcX5TCDzrpYIq5CzkizUlPmFHE4C7yIJH\nx4Z69T08gcHXrFfxe8y2d6yWOICVN5zj/OoFeuZol6pxwauK+oQxkXTNU7EK\n7pZ0wdcKNFSAFBMsqC6N3MkfboVlCa7OS6FyilMnCffzSN3e9kHsD9seXXJD\nx3Tb\r\n=9Xj/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHGYZG+rqbduQKfm+1Wcw8Wof3HC7vTuhxQN0u6hebNqAiAXouPZRhT5+bE2itDX1w/5ecvKKpZMiWEiods3ED2FiA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_7.0.0-beta.7_1575573438305_0.8647196653252254"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "7.0.0",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ],
        "helpers": [
          "test/helpers/**/*"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^3.1.10"
      },
      "devDependencies": {
        "ava": "^2.0.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^15.0.0",
        "semantic-release": "^16.0.0-beta",
        "sinon": "^8.0.0",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=10.13"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=16.0.0-beta <17.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "99d15a954917520b3d9d4c66b45c4c08fb8c291a",
      "_id": "@semantic-release/commit-analyzer@7.0.0",
      "_nodeVersion": "12.14.1",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-t5wMGByv+SknjP2m3rhWN4vmXoQ16g5VFY8iC4/tcbLPvzxK+35xsTIeUsrVFZv3ymdgAQKIr5J3lKjhF/VZZQ==",
        "shasum": "4318cd26787772632828738fc76a333b3d4d7b28",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-7.0.0.tgz",
        "fileCount": 10,
        "unpackedSize": 33792,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeF4T7CRA9TVsSAnZWagAAZVIQAIMgho+hpc5LaE1be2gx\n0bRIrBW5BNBHu/xl4YTHEVGchNSs6PuOJtGBoO4gxA4b5sg3SR/4SLZELdhk\n3uIRmeLnZ9MGFdDWbdPUlvFfcTHF7BLL+e/F4VW09MhqepJv/gfpPQ1IP4Xv\nsOdezWBX9PRiJy6o3gbTWk0LadkCW4biZ8xYfZuibk/e+7J9g2Yazr7QctA/\ngR4TwNRu9xkyaMAh8QtNmOtVsowMor7I++cV8juZAAcwR1Vn3RsC7OHtHYAm\nAUjVIPFeHNYZbdf+aAdSbAg7IGF5bDauCpL7VVYIdt2mN2QnQwlxhbyMvTaG\niWnC0xnP505qbTshIS0EoYTM2Z5eK1M4ScAMQCuCC/AofO/XmFBtHDm4vzfD\n/FdTggq/fz3yAFPTjDesq/G501aVgbbknCw4Ju3kougmMptEJUNXEbdCkmWC\nY7acHYwYAaguLKaID/a1g8BluMxedQSAouCW0hnz+NG9krFaHuD+yEi1oZ6Z\nq04dMUEIpnMBVJpf3af1cZrIWIbd49b/yyF0bGTujNCqdwIb1VrsV1C1AFRX\n6BR6L3TfFqK8K/4L+1x0mGugDF3drqx0ivqzjRGra8e1wfpyyykUogVQHPT/\nAaEWpr+63bgt0BFzVbnfhToOPEhxE4jw5DUgahuv1LV8KjvII+pwe4bXupMl\nlu4S\r\n=87ly\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCkmLKVYNI2jopG0p69wW5ERQuiP5u8OOD1DipbFWpSaAIgEQkCbncsXNGWD7QAJkHHimjlZI2SiGKm2yZcwwxEW9w="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_7.0.0_1578599674809_0.568711716782089"
      },
      "_hasShrinkwrap": false
    },
    "8.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "8.0.0",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^3.1.10"
      },
      "devDependencies": {
        "ava": "^3.1.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^15.0.0",
        "semantic-release": "^17.0.0",
        "sinon": "^8.0.0",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=10.18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=16.0.0 <18.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "eec56ca5adbbf5e25b73a80c9eba124d8f802ebd",
      "_id": "@semantic-release/commit-analyzer@8.0.0",
      "_nodeVersion": "12.14.1",
      "_npmVersion": "6.13.6",
      "dist": {
        "integrity": "sha512-/m4zPG0jXzSVlaI4r65exLBjRXQe4iI6Cqf+hHcetAszntaf82beD3LJ+hWOrMpKl+5Beb9Pkn15dS+GrwaFCw==",
        "shasum": "a809a30b308dddd074739ffaf0603bffa7dfb5db",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-8.0.0.tgz",
        "fileCount": 10,
        "unpackedSize": 33732,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeL1B+CRA9TVsSAnZWagAAcrEP/RY8p8vpXEXoumZ48Ivz\n7IlbHZWlHuhhch3aYDxBZDl4xVcDYnlmyD186PbfbNFSXmdcfHSg9dxx9mqq\nWWsi+aUP46YQ2E2DvQtD6TNiVl9G46nkgz9qSnBefZ56fqptiWsu779rrMbP\n6cr7gh6g4qv//Bk06QPV90BoVvhwr87OuA6Uy5NMk8GWcYTTIxgepUD8foF4\ncdAaI7imdXoI4S2bSlTCBD3DlDS3mQDktKRhuVpAc9VuFLzcnP3llkrdSI7p\nRN46S9qHWoyCIBeOhKLeZlb7jbCBVpPI8scwvHwNPE/FctJUiM0VVP/x8fHp\nwRuZqai6bMgPY4Ps6hrOMz4XX7iy0spQrS9GWFEPHPff0KgwwFdaR/L/7/kX\nGIwJk0EXXlyKbNIHV/d2g7hLYcaRZlWMmdlz/WMpLzqTgomqGm70x4n7410L\nDuIJRtG2Kxj6ufKYcXaKUgMQrselYJvw6Ve7cH/BK6VAvjXAopvLwxg8VCn1\nQtPg1civKloR/jSY5wTVyrLi3tXlBCWDjBlN0Xerc1B3fTGvSmcQM7goGCDI\nULMZtJbTsvhCQf4NgTGVmcIHOtEdkMuOyLKtSHCTYkQMJOaVNm9rjNy+yIy3\nGIpkYihLdWAscAjQXgGKbyStB7QuNf8eu3Kw/z8hquk+yyHc5fn0b1Ba0B9Z\nFWa4\r\n=fh0N\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHMyNdzY1+uVwEKV0pmEZavlWb/fZaMWsU3fijSqKZS4AiEA9IqB6TfQUjc6JcHjQUsdf4Ip74I0+EZcGFJSQfJguQs="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_8.0.0_1580159101682_0.9809453837019073"
      },
      "_hasShrinkwrap": false
    },
    "8.0.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "8.0.1",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "^3.1.0",
        "codecov": "^3.0.0",
        "conventional-changelog-atom": "^2.0.0",
        "conventional-changelog-conventionalcommits": "^4.1.0",
        "conventional-changelog-ember": "^2.0.0",
        "conventional-changelog-eslint": "^3.0.0",
        "conventional-changelog-express": "^2.0.0",
        "conventional-changelog-jshint": "^2.0.0",
        "nyc": "^15.0.0",
        "semantic-release": "^17.0.0",
        "sinon": "^8.0.0",
        "xo": "^0.25.0"
      },
      "engines": {
        "node": ">=10.18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=16.0.0 <18.0.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "codecov": "codecov -f coverage/coverage-final.json",
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true
      },
      "gitHead": "ab3e4fd9e2fd5351c8aa9001118e5e2767579b75",
      "_id": "@semantic-release/commit-analyzer@8.0.1",
      "_nodeVersion": "12.14.1",
      "_npmVersion": "6.13.7",
      "dist": {
        "integrity": "sha512-5bJma/oB7B4MtwUkZC2Bf7O1MHfi4gWe4mA+MIQ3lsEV0b422Bvl1z5HRpplDnMLHH3EXMoRdEng6Ds5wUqA3A==",
        "shasum": "5d2a37cd5a3312da0e3ac05b1ca348bf60b90bca",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-8.0.1.tgz",
        "fileCount": 10,
        "unpackedSize": 33731,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeNFPdCRA9TVsSAnZWagAAzlsQAJfjvLLDy4zXPJsRv51d\nLj/ki8V45qg6A6OPdotKnQk63XxjDQagtoqCs/qocXuPbqXAY7yJlDejrWgE\ndrJTLa9QBI5YnrJjV5fg3igDoBVi++aTQIuzOZNoaslrXKDUZmkXjhyzyYmq\n+EjgbuaSjRn9y9n4QaDfSB/G2WD9YrF3jQjb+09SzeVT0aMzjHi+pYge+0Nm\nfrahlTKM8Mt3nOEGOrlGokAsXiqoKOhIYrdlAMcZNKtAU9Zpn93/B8ARYJVd\nLPZMwYtMagvRruo1PzKnke+fkhASjn+j/D8w8WtruAaz4TEc+oeBxdunV/E4\nnmvg6ibSvbOFt/dXAtLUYOVa+nqZsfDrDerB6ZbjdLTJtMVt5OmM/fhf+hJI\nh2GAsniDpEoi9bx84HKBvVjxPhCXImL7SorgaLv5bvpVIhmKLh/AmpWWU3Mq\nXnILStGMqETouLzV+qOuek9+oBEgDTj5+aoVwaFCKRu+b9yfSQjmek/opXAi\nMzc8gTQkA66HnoEeCxsRaM6E9HEQ+UwxRdTIbXS7nMawNBtEyWYX59P6Pa+u\nfHmxQ0YNBj+qXmh1r2P9YsF6DnbypR/wxuTdpo5c9sRlv7dxocbay4/CVdIx\n+muFscWH6zZomvQ4qVbjeoJVONu+j8IZEQ9DrZTOeMCEeHu9FCLr2ftoXKoo\nMQxH\r\n=L30Y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBV71tEDmKwWvwxFy2bih7SWmOse4/CRcYl3EG7/G/m7AiEA+T6FUSDv2Up5rGMgjCRQ6ED/jhB3xrQPIWFr3tGWWUs="
          }
        ]
      },
      "maintainers": [
        {
          "email": "stephan@boennemann.me",
          "name": "boennemann"
        },
        {
          "email": "npm@christophwitzko.com",
          "name": "christophwitzko"
        },
        {
          "email": "gregor@martynus.net",
          "name": "gr2m"
        },
        {
          "email": "pierre.denis.vanduynslager@gmail.com",
          "name": "pvdlg"
        },
        {
          "email": "semantic-release@boennemann.me",
          "name": "semantic-release-bot"
        }
      ],
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_8.0.1_1580487644840_0.11486418068252191"
      },
      "_hasShrinkwrap": false
    },
    "9.0.0-beta.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "9.0.0-beta.1",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "3.15.0",
        "conventional-changelog-atom": "2.0.8",
        "conventional-changelog-conventionalcommits": "4.5.0",
        "conventional-changelog-ember": "2.0.9",
        "conventional-changelog-eslint": "3.0.9",
        "conventional-changelog-express": "2.0.6",
        "conventional-changelog-jshint": "2.0.9",
        "nyc": "15.1.0",
        "semantic-release": "17.3.9",
        "sinon": "11.1.1",
        "xo": "0.28.3"
      },
      "engines": {
        "node": ">=14.17"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=18.0.0-beta.1"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v",
        "test:ci": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true,
        "rules": {
          "unicorn/string-content": "off"
        }
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Build Status](https://github.com/semantic-release/commit-analyzer/workflows/Test/badge.svg)](https://github.com/semantic-release/commit-analyzer/actions?query=workflow%3ATest+branch%3Amaster) [![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"scope\": \"no-release\", \"release\": false}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "e7e56f69ecad441fbd7678e8e4afb923568897ed",
      "_id": "@semantic-release/commit-analyzer@9.0.0-beta.1",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "7.20.0",
      "dist": {
        "integrity": "sha512-ufQESKubR8R19KCy4fvOY9UFQ62Qewo1Lf/rQ3KaoEHFrgsGyYDYueAAnnM+QGzsC2oP1lJNMLevVTX3i0q43w==",
        "shasum": "24dc7ec0f04318da3e5ccfbf39317643ba46cff3",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-9.0.0-beta.1.tgz",
        "fileCount": 10,
        "unpackedSize": 33622,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhIBxuCRA9TVsSAnZWagAA1n4P/0wonoPmCjtO2PbEU+v/\nrqQ1gskM04ki35d5Gl/nyZE2cMpZCDgBRLXmK2wbE9yIOK+s64aQKrxTsX1b\ndbaSrsOt+xdae/v9Hoyz7Y0wUbOfaHfOt6QYEIYG/up8HBIStlf2+N/NWShw\nZ4LVw2noNqMMiWZ1/CdcBq38aL4j6T/ccrSDjNNiESkitjZYWaX65aT8z7S2\nQ49X1J8JvarzHq/I306J5oxMGrOYl/OEEBfWTxoOOXT0b0Qva0MkSwZ1VDhV\nft1YfdN1m044CDW2aWLt4T1FdY1nDBbOiE25SC9fghoOHommIiROD5J6x7fl\nAnYSTWthsWs2Z9g8iSJOqPBzyPgAphLIrX8Goywg+oTmc7OVDoC9Mb/veTKR\nbG6bWkfJ6uI76krBdVOK73Ef0WkWV9CEh/CDbac7z69USA09LEA8jmpVrcvJ\nAfUuTGSdZ567GkICk6k35+x5Er6kKizBAvkVyh1aC5UCswApSvWtJLl8ef7d\nE2D9jEL41pXtgqI0q/2XrC15knj/93x/T4SNRxah0TnDra6nXEFPivPwVFA7\nZCjpMioTWQ1HieVBgXn4tTm+rKOiGP0HkOxY30H5j8Rogyq9GncS83E7Uy+m\nGt0TTggrccerZ84o5qjdVQX9c+YwHrvJKUPD1lDkf6VFLmpEX0ZunxylcyVG\nLuf7\r\n=xqz7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB8IOi06kpsxlOl18AhQu1treoRaGxNwnNi+CdfnP6/8AiEAupqnAAemidI5pUbwLzUjIq209/xyKrhfoRSRe/dUuJE="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "boennemann",
          "email": "me@sbw.one"
        },
        {
          "name": "christophwitzko",
          "email": "npm@christophwitzko.com"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_9.0.0-beta.1_1629494382108_0.8331876020120292"
      },
      "_hasShrinkwrap": false
    },
    "9.0.0-beta.2": {
      "name": "@semantic-release/commit-analyzer",
      "type": "module",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "9.0.0-beta.2",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "3.15.0",
        "conventional-changelog-atom": "2.0.8",
        "conventional-changelog-conventionalcommits": "4.5.0",
        "conventional-changelog-ember": "2.0.9",
        "conventional-changelog-eslint": "3.0.9",
        "conventional-changelog-express": "2.0.6",
        "conventional-changelog-jshint": "2.0.9",
        "nyc": "15.1.0",
        "semantic-release": "17.3.9",
        "sinon": "11.1.1",
        "xo": "0.28.3"
      },
      "engines": {
        "node": ">=14.17"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "exports": "./index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=18.0.0-beta.1"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v",
        "test:ci": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true,
        "rules": {
          "unicorn/string-content": "off",
          "unicorn/import-index": "off",
          "import/extensions": "off",
          "import/no-useless-path-segments": "off",
          "node/no-unsupported-features/es-syntax": "off"
        }
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Build Status](https://github.com/semantic-release/commit-analyzer/workflows/Test/badge.svg)](https://github.com/semantic-release/commit-analyzer/actions?query=workflow%3ATest+branch%3Amaster) [![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"scope\": \"no-release\", \"release\": false}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path. Note that the path must include the `.js` extension.\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nThe file must be an ES Module exporting an array as default\n\n```js\n// File: config/release-rules.js\nexport default [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "a773c8bd4bca054ef3542e2836525cd864e51e6e",
      "_id": "@semantic-release/commit-analyzer@9.0.0-beta.2",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "7.20.0",
      "dist": {
        "integrity": "sha512-Romi6ObF5sxVfJTUh3o0dgj6VExsBN/ULDcVQd5dkC9t2RwVZU4/dkJevXmTRKDk9x7akNFJKNTFt+woJXeoQg==",
        "shasum": "107f6e30dd6ae44656ac70a8ebe6f425e33464b2",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-9.0.0-beta.2.tgz",
        "fileCount": 11,
        "unpackedSize": 34104,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhIIhcCRA9TVsSAnZWagAAhoIP/3rbG0DJ0FM3GPdTAKst\nBGe08YdF3A9sIgB1ZCetOfY7xWGW/+xF0tY1lQqhnSVbymkui3tke4N36eEv\n9q2gt/mfbIN8n3wmd9xiKrtdyB9fXhgxXBmVvMLUerj/e8H13Zl4xtcUnN3s\ne8GZyJQbjOXdoEJwqQsg9LAfmt0t5iG2MC2KUjCSvFclfJclP/+l7af5tzl4\n5O/FsLE0AAdsWDeSLRx0ntAepLS5QVQjIS+rF/d1B1g6Sso0SVykmN/Fk5jc\nQeHqVtre4xx0Z/wz4JmgC1exY8PR5r27XZXoO3beYMHmkrdVv5yXlnahprjK\nIZQCtCaF/IuiV4FkhCDmHI/MdN7JtsX88VwVlY/3YuoThwWn4QU4KMLseyLp\nKojjvOZwXpfvHg6q3IRnAxABQJhT1A36WV/wBD0/UT70exKRtQSEf34SLoYv\nuJm1mSfPt73X/lNDhovlKtZsIxnw4buwSotG12bbtc1bta3jFuzZNZsRnmAr\nloqTKr/CoRkJjnBGJR2lGOcpLIIkjUsX0X/Yly3khVjyXeK6EvwBpwPcS1Y7\nZMCBFbVBzu6fMFHzLwpzWn9I5uFJJbVh6A034DQ/ElqruGWJ772o3YIyJ05U\njk7kvcBNVAtv7s0sf7pOIShP3eQqYz8U5Hu4AHvMdUr4aTYun2pmhUf+3uwq\neDao\r\n=RePc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDGasLDihM+kK9Yq6Q3jC3JthqlHOpN3I+qih/Ml0f8nwIgUaNoQZyvTOsaz0/xIE4nqLuGl4l+YPMuYNIw7ZxnOtY="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "boennemann",
          "email": "me@sbw.one"
        },
        {
          "name": "christophwitzko",
          "email": "npm@christophwitzko.com"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_9.0.0-beta.2_1629522012270_0.5182595060740236"
      },
      "_hasShrinkwrap": false
    },
    "9.0.0-beta.3": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "9.0.0-beta.3",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "3.15.0",
        "conventional-changelog-atom": "2.0.8",
        "conventional-changelog-conventionalcommits": "4.5.0",
        "conventional-changelog-ember": "2.0.9",
        "conventional-changelog-eslint": "3.0.9",
        "conventional-changelog-express": "2.0.6",
        "conventional-changelog-jshint": "2.0.9",
        "nyc": "15.1.0",
        "semantic-release": "17.3.9",
        "sinon": "11.1.1",
        "xo": "0.28.3"
      },
      "engines": {
        "node": ">=14.17"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=18.0.0-beta.1"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v",
        "test:ci": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true,
        "rules": {
          "unicorn/string-content": "off"
        }
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Build Status](https://github.com/semantic-release/commit-analyzer/workflows/Test/badge.svg)](https://github.com/semantic-release/commit-analyzer/actions?query=workflow%3ATest+branch%3Amaster) [![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\":\"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"type\": \"style\", \"release\": \"patch\"}\n      ],\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n      }\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n|----------------||-----------------------------------------------------------------------------------------------------------------------------------|\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": [\n        {\"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\"},\n        {\"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\"},\n        {\"type\": \"refactor\", \"release\": \"patch\"},\n        {\"scope\": \"no-release\", \"release\": false}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"eslint\",\n      \"releaseRules\": [\n        {\"tag\": \"Docs\", \"message\":\"*README*\", \"release\": \"patch\"},\n        {\"tag\": \"New\", \"release\": \"patch\"}\n      ]\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\nWith this configuration:\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n```json\n{\n  \"plugins\": [\n    [\"@semantic-release/commit-analyzer\", {\n      \"preset\": \"angular\",\n      \"releaseRules\": \"./config/release-rules.js\"\n    }],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n```js\n// File: config/release-rules.js\nmodule.exports = [\n  {type: 'docs', scope: 'README', release: 'patch'},\n  {type: 'refactor', scope: 'core-*', release: 'minor'},\n  {type: 'refactor', release: 'patch'},\n];\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "af37269f8203b94666bd103de9a172150f25ba6d",
      "_id": "@semantic-release/commit-analyzer@9.0.0-beta.3",
      "_nodeVersion": "14.17.6",
      "_npmVersion": "7.20.0",
      "dist": {
        "integrity": "sha512-4vTYVJJhAA483pFSj9YJhqfdgaeufsl5nQNxI54D/RWxCMuE0p302R1IzuwlZK8hpquqZXsnNOwUIzJqcXIpAA==",
        "shasum": "4ae26a78e59c172c49b3a68ac95008e625996d26",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-9.0.0-beta.3.tgz",
        "fileCount": 10,
        "unpackedSize": 33622,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhMou4CRA9TVsSAnZWagAAS6YP/jvayzfV/Hl9PtlzRIua\nIOpGDvnvUtdNorHexhp/lCmAX8xpWEpqSmwzYObKKWZUiw14fo9l8I4hyBEh\nx6ZWnGnV4iPysMYSVk7yEsSEfwtGJh3weSwYtdgP6ur0B55dHccuROuYeFL7\nVeilKMH6urCv5TVySoqcuG5B+UC9kNgaNEXBfifm1oI63k3QmfmbpZxsOg6x\nXJmCiCUKrJpWTE7GjxQgEJro+vjqeirxyqUTUPIRTD6aHzqwbWEOdEN7DeHS\n3okV+55Zu14yLtHgwLgYWQ+xxZDKOsaMpKhqDTLVHbwJA/ScVDJUJcsJSx6e\nlPilwWBU6k1KwbXR/4uaeQ3yfaVBu93e5c2qTJ3dMtJlasuyvSHArFflAyz2\nliy0PwAwTJZIpvXaTv9d7YPo/fu/D3iKZ/kdf3MWTFmgL/3TA1F0fmjt9OVs\nA3Y4rBfRk1H5/IoI0Cao+ICkJnSMFTI3PHap19chws9xVitEuB9p69rMlsmC\nAvtBEmLEZ2NcGcYMWn09/TU9rkWHDE2oUl7sXPiJnZzxYT0Jn1n0jfqqE6rz\nWmMLrXTCbaB/wdYBthgggs9edq+eJDeVwELlwbuCvpVfnik0JvbtzBRQnyW2\nMGaJwkhLIf5NIl0cBMVmnYVDqPIfJR1HNZ79HmrLBIAnhxYUzLgbmh7Ay+8o\n5NTn\r\n=onIc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE1L4AiClGUbZxF3GmzS2X29+zDUivODG/K9Seh2EeMFAiEA492pEy14sI7tDiQLRdEe7NtXw1gnnEK9YeHE7LyC/EI="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "boennemann",
          "email": "me@sbw.one"
        },
        {
          "name": "christophwitzko",
          "email": "npm@christophwitzko.com"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_9.0.0-beta.3_1630702519945_0.10184626594889346"
      },
      "_hasShrinkwrap": false
    },
    "9.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "9.0.0",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^3.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "3.15.0",
        "conventional-changelog-atom": "2.0.8",
        "conventional-changelog-conventionalcommits": "4.6.1",
        "conventional-changelog-ember": "2.0.9",
        "conventional-changelog-eslint": "3.0.9",
        "conventional-changelog-express": "2.0.6",
        "conventional-changelog-jshint": "2.0.9",
        "nyc": "15.1.0",
        "semantic-release": "17.4.7",
        "sinon": "11.1.2",
        "xo": "0.28.3"
      },
      "engines": {
        "node": ">=14.17"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=18.0.0-beta.1"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v",
        "test:ci": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true,
        "rules": {
          "unicorn/string-content": "off"
        }
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "gitHead": "6eeaeb2c08bfc4ca299bd03973a44a6ea711bef2",
      "_id": "@semantic-release/commit-analyzer@9.0.0",
      "_nodeVersion": "14.17.6",
      "_npmVersion": "7.23.0",
      "dist": {
        "integrity": "sha512-wFeX+KbOazDHwAHW5y9wgAvOX/+8DPRyHTxkI/6q3DGU/ep4zy7hTNhE0Yf6msCDCQ3wras/veBYSei6EFOvSg==",
        "shasum": "b1fe79a894f780f286276f33e6ae3e9b5624f646",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-9.0.0.tgz",
        "fileCount": 10,
        "unpackedSize": 33613,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDMNZE7lJofSnGatyfqLNpcaMNevkAZaoja6E/nTLOCFAIhAPeRaKw7hZ2yOYoT+PVNtEpD1VmEnfu58j/d34InP6+n"
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "boennemann",
          "email": "me@sbw.one"
        },
        {
          "name": "christophwitzko",
          "email": "npm@christophwitzko.com"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_9.0.0_1631906799348_0.5186194310419119"
      },
      "_hasShrinkwrap": false
    },
    "9.0.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "9.0.1",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.0.7",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "3.15.0",
        "conventional-changelog-atom": "2.0.8",
        "conventional-changelog-conventionalcommits": "4.6.1",
        "conventional-changelog-ember": "2.0.9",
        "conventional-changelog-eslint": "3.0.9",
        "conventional-changelog-express": "2.0.6",
        "conventional-changelog-jshint": "2.0.9",
        "nyc": "15.1.0",
        "semantic-release": "18.0.0",
        "sinon": "11.1.2",
        "xo": "0.28.3"
      },
      "engines": {
        "node": ">=14.17"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=18.0.0-beta.1"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v",
        "test:ci": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true,
        "rules": {
          "unicorn/string-content": "off"
        }
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "gitHead": "2da0011cfdabb19a3f8a6fccd3fd66e0ab227b94",
      "_id": "@semantic-release/commit-analyzer@9.0.1",
      "_nodeVersion": "16.9.1",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-ncNsnrLmiykhgNZUXNvhhAjNN0me7VGIb0X5hu3ogyi5DDPapjGAHdEffO5vi+HX1BFWLRD/Ximx5PjGAKjAqQ==",
        "shasum": "e9b75a966898cae36493c7eb8158135eb302e270",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-9.0.1.tgz",
        "fileCount": 10,
        "unpackedSize": 33613,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHE/2xdL00xYVh3A3CRd333PcThvkTRpoXQlhBZb3UcEAiEA6zUFbJbQb7evDh0Ydtw652xWXMZjaqRLNWDRUESWl80="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "boennemann",
          "email": "me@sbw.one"
        },
        {
          "name": "christophwitzko",
          "email": "npm@christophwitzko.com"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_9.0.1_1631932108398_0.7759931015087935"
      },
      "_hasShrinkwrap": false
    },
    "9.0.2": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "9.0.2",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.2.3",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash": "^4.17.4",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "3.15.0",
        "conventional-changelog-atom": "2.0.8",
        "conventional-changelog-conventionalcommits": "4.6.1",
        "conventional-changelog-ember": "2.0.9",
        "conventional-changelog-eslint": "3.0.9",
        "conventional-changelog-express": "2.0.6",
        "conventional-changelog-jshint": "2.0.9",
        "nyc": "15.1.0",
        "semantic-release": "18.0.0",
        "sinon": "12.0.1",
        "xo": "0.28.3"
      },
      "engines": {
        "node": ">=14.17"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "nyc": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=18.0.0-beta.1"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "xo",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "nyc ava -v",
        "test:ci": "nyc ava -v"
      },
      "xo": {
        "prettier": true,
        "space": true,
        "rules": {
          "unicorn/string-content": "off"
        }
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "gitHead": "fc0a88ac84437acd56432faf84dd8ea3e29076a5",
      "_id": "@semantic-release/commit-analyzer@9.0.2",
      "_nodeVersion": "16.13.0",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-E+dr6L+xIHZkX4zNMe6Rnwg4YQrWNXK+rNsvwOPpdFppvZO1olE2fIgWhv89TkQErygevbjsZFSIxp+u6w2e5g==",
        "shasum": "a78e54f9834193b55f1073fa6258eecc9a545e03",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-9.0.2.tgz",
        "fileCount": 10,
        "unpackedSize": 33613,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhnS46CRA9TVsSAnZWagAAlL4P/3ALphRAHWtIYksT059F\n9Y1RznguVDYw1AjVBshy2W8uAPa73g85VrirWXGJQEWjyhtDU0GYqYnwTc99\nNpWAyzCXAEgJxXOGZaqrLH9wKft8nYSG7B1ydhW1zmj//oXr5ogiaAFpRANN\nvLYcVxyg3CD6wnDipuJTDXZnCq2mlBvV2GTBPBy6pm5o4HbXwkw1wfBZJLSW\nKzbl/YGTc6jQW49gSkpgy7ZaDwgChzFehoPYcXSJq3RoFQrUG0Gi6ZU5l/Im\nnqhaUhc2VLBjfrCykQQ07juf3VWui7NiRqitWVNdcXlHZ87KuUOwytY3ZHNy\nZFkPoO9+Qcoq30efayL3FK5oslIubO+5zafKS4R0Q+OWgX0SdfW5BpPfPlL3\nrTNezdyF5EymIi4UeLm4/1qGaaI/2wPEm1DrcyF98k2OEZwOwVgwUsN2FQ0h\n1heRJMLUJQ8VqBWnJ/gkgAMRRSoi49P3gQ6v7ab3/KfpDTXKAZwuUQDUihCV\nSiUSUA6HEpnm8wuSNc4OMnBnf8hvukK9wgrEZadAh9xM8wOFaCBMfQ/wpLSQ\n9QMnEbEYuQeWWkwfCU0L1RDZfgFLUh9+Pk4NfZ0mTK83F/4LEAUWTUHspRum\nM5mLZgmr8EyFXM3F1bSGB606WmrnQXoPGm2Lp6ptxELT429Fn28b9J/8r5ln\n0A2M\r\n=ujRy\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBuXYXHQiM5+iX6JKYbvjfLxxP5HT71fk/pHOfAMV6/jAiAkyJxlTOV/mkhJ1SgaUioBoBZTQfrEfdXAn5ZRlenAPw=="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_9.0.2_1637690938212_0.4500705688285944"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "10.0.0-beta.1",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.2.3",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.1.0",
        "c8": "7.10.0",
        "conventional-changelog-atom": "2.0.8",
        "conventional-changelog-conventionalcommits": "5.0.0",
        "conventional-changelog-ember": "2.0.9",
        "conventional-changelog-eslint": "3.0.9",
        "conventional-changelog-express": "2.0.6",
        "conventional-changelog-jshint": "2.0.9",
        "prettier": "2.8.8",
        "semantic-release": "21.0.2",
        "sinon": "15.1.0"
      },
      "engines": {
        "node": ">=18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Build Status](https://github.com/semantic-release/commit-analyzer/workflows/Test/badge.svg)](https://github.com/semantic-release/commit-analyzer/actions?query=workflow%3ATest+branch%3Amaster) [![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n| ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"type\": \"style\", \"release\": \"patch\" }\n        ],\n        \"parserOpts\": {\n          \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n        }\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n| -------------- || --------------------------------------------------------------------------------------------------------------------------------- |\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"scope\": \"no-release\", \"release\": false }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"eslint\",\n        \"releaseRules\": [\n          { \"tag\": \"Docs\", \"message\": \"*README*\", \"release\": \"patch\" },\n          { \"tag\": \"New\", \"release\": \"patch\" }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this configuration:\n\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": \"./config/release-rules.cjs\"\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n```js\n// File: config/release-rules.cjs\nmodule.exports = [\n  { type: \"docs\", scope: \"README\", release: \"patch\" },\n  { type: \"refactor\", scope: \"core-*\", release: \"minor\" },\n  { type: \"refactor\", release: \"patch\" },\n];\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "5932f0b019eff185462f664c670556e5464f137f",
      "_id": "@semantic-release/commit-analyzer@10.0.0-beta.1",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-9RdTJqskEyTyqaw4h0vORXJiwZWacTPR/aPaQ8ILn3oW/4v+uL3RlUnjfTICYE7nKGHRDESAp+GNRys1ewUN3g==",
        "shasum": "4ffc64ba0dd849ba105feba5afca5f2981edf7a8",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-10.0.0-beta.1.tgz",
        "fileCount": 10,
        "unpackedSize": 34225,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@10.0.0-beta.1",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v0.2"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCpzc8Ijl0qfpy6y/ku1GO7dCrgRoMgg8edg3LaBKFvWAIgSiJ+Q68q/eS5QXLl8yts1Z58E2enBHfoVumboZvFEMY="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_10.0.0-beta.1_1685414381252_0.5052212226461239"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "10.0.0",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^5.0.0",
        "conventional-commits-filter": "^2.0.0",
        "conventional-commits-parser": "^3.2.3",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.1.0",
        "c8": "7.10.0",
        "conventional-changelog-atom": "2.0.8",
        "conventional-changelog-conventionalcommits": "5.0.0",
        "conventional-changelog-ember": "2.0.9",
        "conventional-changelog-eslint": "3.0.9",
        "conventional-changelog-express": "2.0.6",
        "conventional-changelog-jshint": "2.0.9",
        "prettier": "2.8.8",
        "semantic-release": "21.0.2",
        "sinon": "15.1.0"
      },
      "engines": {
        "node": ">=18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "gitHead": "c215832ddcb3efc01a6cade537a7a7c6028530cc",
      "_id": "@semantic-release/commit-analyzer@10.0.0",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-/Uolz2+G+VRjP0eudAn0ldnC/VkSHzlctUdeEXL7ys7E6mLSFZdwdsR5pKDlTIgDJq4eYlshOZpwBNrmqrNajg==",
        "shasum": "e9c1fc01faaa5ad9011e0507cafe72e87511eafc",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-10.0.0.tgz",
        "fileCount": 10,
        "unpackedSize": 34218,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@10.0.0",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v0.2"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAnIQ8z5WC/KO3+sxcEaDBdiu3mqvBdu3g+kB/1nEF/fAiAahQItUPkKy2mKR7ZvedFMKckUIkgICheLrexs+rNvmA=="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_10.0.0_1685733788283_0.28488875575582173"
      },
      "_hasShrinkwrap": false
    },
    "10.0.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "10.0.1",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^6.0.0",
        "conventional-commits-filter": "^3.0.0",
        "conventional-commits-parser": "^4.0.0",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.0",
        "c8": "7.14.0",
        "conventional-changelog-atom": "3.0.0",
        "conventional-changelog-conventionalcommits": "6.0.0",
        "conventional-changelog-ember": "3.0.0",
        "conventional-changelog-eslint": "4.0.0",
        "conventional-changelog-express": "3.0.0",
        "conventional-changelog-jshint": "3.0.0",
        "prettier": "2.8.8",
        "semantic-release": "21.0.3",
        "sinon": "15.1.0"
      },
      "engines": {
        "node": ">=18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "gitHead": "0607201c58f4b5e54dfb0fcdf15cfa2cda24bf9b",
      "_id": "@semantic-release/commit-analyzer@10.0.1",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-9ejHzTAijYs9z246sY/dKBatmOPcd0GQ7lH4MgLCkv1q4GCiDZRkjHJkaQZXZVaK7mJybS+sH3Ng6G8i3pYMGQ==",
        "shasum": "be6fcc1703459294c394ede41b37fd9a21d39807",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-10.0.1.tgz",
        "fileCount": 10,
        "unpackedSize": 34218,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@10.0.1",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v0.2"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDL/x3KBZhL5gGK+OI5F6kd1bXOmU8zPrxY1avZDoB7GgIgObXXOCfapZaEj0fklE4eJSZ+jI92E5N2Y7xiRQKw6gY="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_10.0.1_1686147169627_0.6738661308480041"
      },
      "_hasShrinkwrap": false
    },
    "10.0.2": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "10.0.2",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^6.0.0",
        "conventional-commits-filter": "^3.0.0",
        "conventional-commits-parser": "^5.0.0",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.1",
        "c8": "8.0.1",
        "conventional-changelog-atom": "3.0.0",
        "conventional-changelog-conventionalcommits": "6.1.0",
        "conventional-changelog-ember": "3.0.0",
        "conventional-changelog-eslint": "4.0.0",
        "conventional-changelog-express": "3.0.0",
        "conventional-changelog-jshint": "3.0.0",
        "prettier": "3.0.2",
        "semantic-release": "21.1.1",
        "sinon": "15.2.0"
      },
      "engines": {
        "node": ">=18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "_id": "@semantic-release/commit-analyzer@10.0.2",
      "gitHead": "91cf4d5a82052b6ea52e0f9f7d4faed7a80460e1",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-GtHlzWj1SZlckcgjk3IQDlnykcJYiWNB9kowLET8tVh4SjzxPxmuja57DtvUn/tGRf1l5X1jtmuqCdCqObI3CQ==",
        "shasum": "e59654a31a4fe5ec077432f2814c4e8f8a41fd23",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-10.0.2.tgz",
        "fileCount": 10,
        "unpackedSize": 34217,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@10.0.2",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v1"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDiTEz2lYz6ooWx0O2AEwTyWn20RKQa768WBrAkaoV2XgIhALo5qhCo6kgMV5eTLF5SKJwWR7PvfgTMRbEjaS35fdXE"
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_10.0.2_1693102688308_0.38791478821271275"
      },
      "_hasShrinkwrap": false
    },
    "10.0.3": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "10.0.3",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^6.0.0",
        "conventional-commits-filter": "^3.0.0",
        "conventional-commits-parser": "^4.0.0",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.1",
        "c8": "8.0.1",
        "conventional-changelog-atom": "3.0.0",
        "conventional-changelog-conventionalcommits": "6.1.0",
        "conventional-changelog-ember": "3.0.0",
        "conventional-changelog-eslint": "4.0.0",
        "conventional-changelog-express": "3.0.0",
        "conventional-changelog-jshint": "3.0.0",
        "prettier": "3.0.2",
        "semantic-release": "21.1.1",
        "sinon": "15.2.0"
      },
      "engines": {
        "node": ">=18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "_id": "@semantic-release/commit-analyzer@10.0.3",
      "gitHead": "ab3ee9f93b02f3d7d288323ee2fc89c59d64290d",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-pe45eTjaJBsZbJrT6AvcTzYYS9OJF3MGABTPFSpwmnfSXVmyfFuloO92pj6EVTbx6JGEUgpoipnITbWn+zyvaw==",
        "shasum": "eb967518cd13120b3ca9cc45f946b57d356178c0",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-10.0.3.tgz",
        "fileCount": 10,
        "unpackedSize": 34217,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@10.0.3",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v1"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBrqYFgep7/Os7Nlr9ZvZVLbTR6xd4U6nh4qv+6Vz+YAAiEAjW5ziZjX7eueoeKlQcMSOc2yPYtNa1ItV1Jf/5kfbNM="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_10.0.3_1693188882105_0.3551963220026677"
      },
      "_hasShrinkwrap": false
    },
    "10.0.4": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "10.0.4",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^6.0.0",
        "conventional-commits-filter": "^3.0.0",
        "conventional-commits-parser": "^5.0.0",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.1",
        "c8": "8.0.1",
        "conventional-changelog-atom": "3.0.0",
        "conventional-changelog-conventionalcommits": "6.1.0",
        "conventional-changelog-ember": "3.0.0",
        "conventional-changelog-eslint": "4.0.0",
        "conventional-changelog-express": "3.0.0",
        "conventional-changelog-jshint": "3.0.0",
        "prettier": "3.0.2",
        "semantic-release": "21.1.1",
        "sinon": "15.2.0"
      },
      "engines": {
        "node": ">=18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "_id": "@semantic-release/commit-analyzer@10.0.4",
      "gitHead": "a7201b6ea4b523c06e7d60bd3c850f1079464379",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-pFGn99fn8w4/MHE0otb2A/l5kxgOuxaaauIh4u30ncoTJuqWj4hXTgEJ03REqjS+w1R2vPftSsO26WC61yOcpw==",
        "shasum": "e2770f341b75d8f19fe6b5b833e8c2e0de2b84de",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-10.0.4.tgz",
        "fileCount": 10,
        "unpackedSize": 34217,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@10.0.4",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v1"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDWnkBLrFdo07oeAO5mgO3oXAhTFfHr2t+HxGa3RYdc3wIhANe9/IlQ6suXzUQ3GVCYBFVcNOQlkXMPUcVp6D0WATho"
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_10.0.4_1693254593872_0.23999998841712666"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-beta.1": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "11.0.0-beta.1",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^7.0.0",
        "conventional-commits-filter": "^3.0.0",
        "conventional-commits-parser": "^5.0.0",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.1",
        "c8": "8.0.1",
        "conventional-changelog-atom": "4.0.0",
        "conventional-changelog-conventionalcommits": "6.1.0",
        "conventional-changelog-ember": "4.0.0",
        "conventional-changelog-eslint": "5.0.0",
        "conventional-changelog-express": "4.0.0",
        "conventional-changelog-jshint": "4.0.0",
        "prettier": "3.0.3",
        "semantic-release": "21.1.1",
        "sinon": "15.2.0"
      },
      "engines": {
        "node": ">=18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "_id": "@semantic-release/commit-analyzer@11.0.0-beta.1",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Build Status](https://github.com/semantic-release/commit-analyzer/workflows/Test/badge.svg)](https://github.com/semantic-release/commit-analyzer/actions?query=workflow%3ATest+branch%3Amaster) [![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n| ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"type\": \"style\", \"release\": \"patch\" }\n        ],\n        \"parserOpts\": {\n          \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n        }\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n| -------------- || --------------------------------------------------------------------------------------------------------------------------------- |\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"scope\": \"no-release\", \"release\": false }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"eslint\",\n        \"releaseRules\": [\n          { \"tag\": \"Docs\", \"message\": \"*README*\", \"release\": \"patch\" },\n          { \"tag\": \"New\", \"release\": \"patch\" }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this configuration:\n\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": \"./config/release-rules.cjs\"\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n```js\n// File: config/release-rules.cjs\nmodule.exports = [\n  { type: \"docs\", scope: \"README\", release: \"patch\" },\n  { type: \"refactor\", scope: \"core-*\", release: \"minor\" },\n  { type: \"refactor\", release: \"patch\" },\n];\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "f3b88d3e7409b0bac38cb58bd04f19506f2f6159",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-4HOXQ09k/lnHwxQLD9y1c+b3rA2M4gWA/twJl9JuRqS1eXrEc9QJ903reN5nwEC0Y7TVpuDTd1cY90B6W9EITw==",
        "shasum": "6ae9f6b35b88948a1488be5c34c93f773adffce6",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-11.0.0-beta.1.tgz",
        "fileCount": 10,
        "unpackedSize": 34234,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@11.0.0-beta.1",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v1"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDZH55kb0roc4ODbRc4qyrPaH8dtHtGG+ysEUVTMrSy/QIgQc5ijsEy4UIeVZ8VMcGlg8qD05obtxHrLmmRhG5c3Tk="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_11.0.0-beta.1_1693601897453_0.7322227730136963"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-beta.2": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "11.0.0-beta.2",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^7.0.0",
        "conventional-commits-filter": "^4.0.0",
        "conventional-commits-parser": "^5.0.0",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.1",
        "c8": "8.0.1",
        "conventional-changelog-atom": "4.0.0",
        "conventional-changelog-conventionalcommits": "6.1.0",
        "conventional-changelog-ember": "4.0.0",
        "conventional-changelog-eslint": "5.0.0",
        "conventional-changelog-express": "4.0.0",
        "conventional-changelog-jshint": "4.0.0",
        "prettier": "3.0.3",
        "semantic-release": "21.1.1",
        "sinon": "15.2.0"
      },
      "engines": {
        "node": ">=18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "_id": "@semantic-release/commit-analyzer@11.0.0-beta.2",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Build Status](https://github.com/semantic-release/commit-analyzer/workflows/Test/badge.svg)](https://github.com/semantic-release/commit-analyzer/actions?query=workflow%3ATest+branch%3Amaster) [![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n| ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"type\": \"style\", \"release\": \"patch\" }\n        ],\n        \"parserOpts\": {\n          \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n        }\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n| -------------- || --------------------------------------------------------------------------------------------------------------------------------- |\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"scope\": \"no-release\", \"release\": false }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"eslint\",\n        \"releaseRules\": [\n          { \"tag\": \"Docs\", \"message\": \"*README*\", \"release\": \"patch\" },\n          { \"tag\": \"New\", \"release\": \"patch\" }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this configuration:\n\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": \"./config/release-rules.cjs\"\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n```js\n// File: config/release-rules.cjs\nmodule.exports = [\n  { type: \"docs\", scope: \"README\", release: \"patch\" },\n  { type: \"refactor\", scope: \"core-*\", release: \"minor\" },\n  { type: \"refactor\", release: \"patch\" },\n];\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "50ee729ff94a4e1e8d76344b66544bbc1fc287a2",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-Wv/8xs4vfPcqJ1i7DKW9ZECC+Ckp1WaBaFdLTVK9dTG2q3zaxXVtZYYcSKhOAP69ZQ1aF3VR9f+9bVJtjMnSOQ==",
        "shasum": "67d20d0edc133094e7cca37408396a08bf8ec217",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-11.0.0-beta.2.tgz",
        "fileCount": 10,
        "unpackedSize": 34234,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@11.0.0-beta.2",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v1"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFWU4+4xZEkXEOixq95tlqpIOXxaATrYNS0k4BbP1vU4AiA5ycGNj5WckLTmuH0ieW66yX26b/fj5MicNbqimuLI9w=="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_11.0.0-beta.2_1694483364491_0.4462312186039319"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-beta.3": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "11.0.0-beta.3",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^7.0.0",
        "conventional-commits-filter": "^4.0.0",
        "conventional-commits-parser": "^5.0.0",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.1",
        "c8": "8.0.1",
        "conventional-changelog-atom": "4.0.0",
        "conventional-changelog-conventionalcommits": "6.1.0",
        "conventional-changelog-ember": "4.0.0",
        "conventional-changelog-eslint": "5.0.0",
        "conventional-changelog-express": "4.0.0",
        "conventional-changelog-jshint": "4.0.0",
        "prettier": "3.0.3",
        "semantic-release": "21.1.1",
        "sinon": "15.2.0"
      },
      "engines": {
        "node": ">=18"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "_id": "@semantic-release/commit-analyzer@11.0.0-beta.3",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Build Status](https://github.com/semantic-release/commit-analyzer/workflows/Test/badge.svg)](https://github.com/semantic-release/commit-analyzer/actions?query=workflow%3ATest+branch%3Amaster) [![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n| ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"type\": \"style\", \"release\": \"patch\" }\n        ],\n        \"parserOpts\": {\n          \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n        }\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description| Default                                                                                                                           |\n| -------------- || --------------------------------------------------------------------------------------------------------------------------------- |\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"scope\": \"no-release\", \"release\": false }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"eslint\",\n        \"releaseRules\": [\n          { \"tag\": \"Docs\", \"message\": \"*README*\", \"release\": \"patch\" },\n          { \"tag\": \"New\", \"release\": \"patch\" }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this configuration:\n\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": \"./config/release-rules.cjs\"\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n```js\n// File: config/release-rules.cjs\nmodule.exports = [\n  { type: \"docs\", scope: \"README\", release: \"patch\" },\n  { type: \"refactor\", scope: \"core-*\", release: \"minor\" },\n  { type: \"refactor\", release: \"patch\" },\n];\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "3ff94584f399738acb2075c6175df64e2ae181e5",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-Qxwi5CpAtTBfGspH68HBSA/sqRl+JUNV+WF0QAjGG5E9v0BBNxCkzY7J+qSFVQNt40wFOxXF4VTKagA2rdB81A==",
        "shasum": "2af885a97809d4118a1fe57c37d580083fc07124",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-11.0.0-beta.3.tgz",
        "fileCount": 10,
        "unpackedSize": 34080,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@11.0.0-beta.3",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v1"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHXQi2S3gyakZB1KBuz064aAe/0tObSnmrw73Wv5++WrAiEA+Xsb0IXP3Zxhey8Nq+TgX+hlKRAhpTSD05w7j6lVDvE="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_11.0.0-beta.3_1694801954345_0.9139277972560258"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-beta.4": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "11.0.0-beta.4",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^7.0.0",
        "conventional-commits-filter": "^4.0.0",
        "conventional-commits-parser": "^5.0.0",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.1",
        "c8": "8.0.1",
        "conventional-changelog-atom": "4.0.0",
        "conventional-changelog-conventionalcommits": "6.1.0",
        "conventional-changelog-ember": "4.0.0",
        "conventional-changelog-eslint": "5.0.0",
        "conventional-changelog-express": "4.0.0",
        "conventional-changelog-jshint": "4.0.0",
        "prettier": "3.0.3",
        "semantic-release": "22.0.0",
        "sinon": "16.0.0"
      },
      "engines": {
        "node": "^18.17 || >=20.6.1"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "_id": "@semantic-release/commit-analyzer@11.0.0-beta.4",
      "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Build Status](https://github.com/semantic-release/commit-analyzer/workflows/Test/badge.svg)](https://github.com/semantic-release/commit-analyzer/actions?query=workflow%3ATest+branch%3Amaster) [![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n| ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"type\": \"style\", \"release\": \"patch\" }\n        ],\n        \"parserOpts\": {\n          \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n        }\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | Default                                                                                                                           |\n| -------------- || --------------------------------------------------------------------------------------------------------------------------------- |\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"scope\": \"no-release\", \"release\": false }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"eslint\",\n        \"releaseRules\": [\n          { \"tag\": \"Docs\", \"message\": \"*README*\", \"release\": \"patch\" },\n          { \"tag\": \"New\", \"release\": \"patch\" }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this configuration:\n\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": \"./config/release-rules.cjs\"\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n```js\n// File: config/release-rules.cjs\nmodule.exports = [\n  { type: \"docs\", scope: \"README\", release: \"patch\" },\n  { type: \"refactor\", scope: \"core-*\", release: \"minor\" },\n  { type: \"refactor\", release: \"patch\" },\n];\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "a681fbdab30b4ff66093506ce09b383e750cca5e",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "10.1.0",
      "dist": {
        "integrity": "sha512-K6HkgFadJ+imAc0n2P9sLjrEw+xAPqigsu6RS+wCUqc6et2J7ig8uJ4hqujXsXHZLtsKQt/5yjw0t3FjcvseIA==",
        "shasum": "e50d3fbad69ee9f8a315a4a369845504ffbfc42b",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-11.0.0-beta.4.tgz",
        "fileCount": 10,
        "unpackedSize": 34094,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@11.0.0-beta.4",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v1"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDOpRFLlfSkPSqc/yTVfyN5QRxlBas+TRuiZSbpmvJLVAIhAMOKdU/SoNBulkIP0VizsRWf8ZNfCPoV96Jz6H5VORxu"
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_11.0.0-beta.4_1694925934673_0.6697516995386028"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "11.0.0",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^7.0.0",
        "conventional-commits-filter": "^4.0.0",
        "conventional-commits-parser": "^5.0.0",
        "debug": "^4.0.0",
        "import-from": "^4.0.0",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.1",
        "c8": "8.0.1",
        "conventional-changelog-atom": "4.0.0",
        "conventional-changelog-conventionalcommits": "6.1.0",
        "conventional-changelog-ember": "4.0.0",
        "conventional-changelog-eslint": "5.0.0",
        "conventional-changelog-express": "4.0.0",
        "conventional-changelog-jshint": "4.0.0",
        "prettier": "3.0.3",
        "semantic-release": "22.0.0",
        "sinon": "16.0.0"
      },
      "engines": {
        "node": "^18.17 || >=20.6.1"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "_id": "@semantic-release/commit-analyzer@11.0.0",
      "gitHead": "78f8f52d4abaeb0020172e9d75663acdaac1abe5",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "10.1.0",
      "dist": {
        "integrity": "sha512-uEXyf4Z0AWJuxI9TbSQP5kkIYqus1/E1NcmE7pIv6d6/m/5EJcNWAGR4FOo34vrV26FhEaRVkxFfYzp/M7BKIg==",
        "shasum": "824d4c04ebb6ffda9752c55f2b76f643fb09e0f4",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-11.0.0.tgz",
        "fileCount": 10,
        "unpackedSize": 34087,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@11.0.0",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v1"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDlqy0PZA2gSWA9ExlYn8cKiec/GYgoouN6uk6WoJ/EJwIhALzuiHKVgK/+0MuRJJLyTd3mwIYA+qWZJtfIv9/eE8yz"
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_11.0.0_1695040439005_0.005038513071691231"
      },
      "_hasShrinkwrap": false
    },
    "11.1.0": {
      "name": "@semantic-release/commit-analyzer",
      "description": "semantic-release plugin to analyze commits with conventional-changelog",
      "version": "11.1.0",
      "type": "module",
      "author": {
        "name": "Pierre Vanduynslager",
        "url": "https://twitter.com/@pvdlg_"
      },
      "ava": {
        "files": [
          "test/**/*.test.js"
        ]
      },
      "bugs": {
        "url": "https://github.com/semantic-release/commit-analyzer/issues"
      },
      "contributors": [
        {
          "name": "Stephan Bönnemann",
          "email": "stephan@boennemann.me",
          "url": "http://boennemann.me"
        },
        {
          "name": "Gregor Martynus",
          "url": "https://twitter.com/gr2m"
        }
      ],
      "dependencies": {
        "conventional-changelog-angular": "^7.0.0",
        "conventional-commits-filter": "^4.0.0",
        "conventional-commits-parser": "^5.0.0",
        "debug": "^4.0.0",
        "import-from-esm": "^1.0.3",
        "lodash-es": "^4.17.21",
        "micromatch": "^4.0.2"
      },
      "devDependencies": {
        "ava": "5.3.1",
        "c8": "8.0.1",
        "conventional-changelog-atom": "4.0.0",
        "conventional-changelog-conventionalcommits": "7.0.2",
        "conventional-changelog-ember": "4.0.0",
        "conventional-changelog-eslint": "5.0.0",
        "conventional-changelog-express": "4.0.0",
        "conventional-changelog-jshint": "4.0.0",
        "prettier": "3.0.3",
        "semantic-release": "22.0.6",
        "sinon": "17.0.1"
      },
      "engines": {
        "node": "^18.17 || >=20.6.1"
      },
      "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
      "keywords": [
        "changelog",
        "commit-analyzer",
        "conventional-changelog",
        "conventional-commits",
        "github",
        "publish",
        "release",
        "semantic-release"
      ],
      "license": "MIT",
      "main": "index.js",
      "c8": {
        "include": [
          "lib/**/*.js",
          "index.js"
        ],
        "reporter": [
          "json",
          "text",
          "html"
        ],
        "all": true
      },
      "peerDependencies": {
        "semantic-release": ">=20.1.0"
      },
      "prettier": {
        "printWidth": 120,
        "trailingComma": "es5"
      },
      "publishConfig": {
        "access": "public",
        "provenance": true
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/semantic-release/commit-analyzer.git"
      },
      "scripts": {
        "lint": "prettier --check \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "lint:fix": "prettier --write \"*.{js,json,md}\" \".github/**/*.{md,yml}\" \"{bin,lib,test}/*.js\"",
        "pretest": "npm run lint",
        "semantic-release": "semantic-release",
        "test": "c8 ava -v",
        "test:ci": "c8 ava -v"
      },
      "renovate": {
        "extends": [
          "github>semantic-release/.github"
        ]
      },
      "_id": "@semantic-release/commit-analyzer@11.1.0",
      "gitHead": "9dc87e0f499b793850491d719c554aac218814e9",
      "_nodeVersion": "20.9.0",
      "_npmVersion": "10.2.3",
      "dist": {
        "integrity": "sha512-cXNTbv3nXR2hlzHjAMgbuiQVtvWHTlwwISt60B+4NZv01y/QRY7p2HcJm8Eh2StzcTJoNnflvKjHH/cjFS7d5g==",
        "shasum": "dd24663c4e1e7c218f53de73f5c639eb2d5a077e",
        "tarball": "https://registry.npmjs.org/@semantic-release/commit-analyzer/-/commit-analyzer-11.1.0.tgz",
        "fileCount": 10,
        "unpackedSize": 34110,
        "attestations": {
          "url": "https://registry.npmjs.org/-/npm/v1/attestations/@semantic-release%2fcommit-analyzer@11.1.0",
          "provenance": {
            "predicateType": "https://slsa.dev/provenance/v1"
          }
        },
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC3P7FNg0LVkHeE+tG32otgjM9CRdQnUS9zIze5VMqVIAiAGA20CnvksG5OAoXPVpdfRwtKeIi44BL9AjANx9UvQXw=="
          }
        ]
      },
      "_npmUser": {
        "name": "semantic-release-bot",
        "email": "semantic-release@martynus.net"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "travi",
          "email": "npm@travi.org"
        },
        {
          "name": "pvdlg",
          "email": "pierre.denis.vanduynslager@gmail.com"
        },
        {
          "name": "semantic-release-bot",
          "email": "semantic-release@martynus.net"
        },
        {
          "name": "gr2m",
          "email": "gregor@martynus.net"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/commit-analyzer_11.1.0_1699235283355_0.9865400314400283"
      },
      "_hasShrinkwrap": false
    }
  },
  "readme": "# **commit-analyzer**\n\n[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to analyze commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Build Status](https://github.com/semantic-release/commit-analyzer/workflows/Test/badge.svg)](https://github.com/semantic-release/commit-analyzer/actions?query=workflow%3ATest+branch%3Amaster) [![npm latest version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/latest.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/next.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n[![npm beta version](https://img.shields.io/npm/v/@semantic-release/commit-analyzer/beta.svg)](https://www.npmjs.com/package/@semantic-release/commit-analyzer)\n\n| Step             | Description                                                                                                                                         |\n| ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `analyzeCommits` | Determine the type of release by analyzing commits with [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog). |\n\n## Install\n\n```bash\n$ npm install @semantic-release/commit-analyzer -D\n```\n\n## Usage\n\nThe plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"type\": \"style\", \"release\": \"patch\" }\n        ],\n        \"parserOpts\": {\n          \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\"]\n        }\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this example:\n\n- the commits that contains `BREAKING CHANGE` or `BREAKING CHANGES` in their body will be considered breaking changes.\n- the commits with a 'docs' `type`, a 'README' `scope` will be associated with a `patch` release\n- the commits with a 'refactor' `type` will be associated with a `patch` release\n- the commits with a 'style' `type` will be associated with a `patch` release\n\n**Note**: Your commits must be formatted **exactly** as specified by the chosen convention. For example the [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) require the `BREAKING CHANGE` keyword to be followed by a colon (`:`) and to be in the **footer** of the commit message.\n\n## Configuration\n\n### Options\n\n| Option         | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | Default                                                                                                                           |\n| -------------- || --------------------------------------------------------------------------------------------------------------------------------- |\n| `preset`       | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (possible values: [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular), [`atom`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-atom), [`codemirror`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-codemirror), [`ember`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-ember), [`eslint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint), [`express`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-express), [`jquery`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jquery), [`jshint`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-jshint), [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits)). | [`angular`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular) |\n| `config`       | npm package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset| -                                                                                                                                 |\n| `parserOpts`   | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends the ones loaded by `preset` or `config`. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module| -                                                                                                                                 |\n| `releaseRules` | An external module, a path to a module or an `Array` of rules. See [`releaseRules`](#releaserules| See [`releaseRules`](#releaserules)                                                                                               |\n| `presetConfig` | Additional configuration passed to the [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset. Used for example with [conventional-changelog-conventionalcommits](https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.0.0/README.md| -                                                                                                                                 |\n\n**Notes**: in order to use a `preset` it must be installed (for example to use the [eslint preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-eslint) you must install it with `npm install conventional-changelog-eslint -D`)\n\n**Note**: `config` will be overwritten by the values of `preset`. You should use either `preset` or `config`, but not both.\n\n**Note**: Individual properties of `parserOpts` will override ones loaded with an explicitly set `preset` or `config`. If `preset` or `config` are not set, only the properties set in `parserOpts` will be used.\n\n**Note**: For presets that expects a configuration object, such as [`conventionalcommits`](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits), the `presetConfig` option **must** be set.\n\n#### releaseRules\n\nRelease rules are used when deciding if the commits since the last release warrant a new release. If you define custom release rules the [default rules](lib/default-release-rules.js) will be used if nothing matched. Those rules will be matched against the commit objects resulting of [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser) parsing. Each rule property can be defined as a [glob](https://github.com/micromatch/micromatch#matching-features).\n\n##### Rules definition\n\nThis is an `Array` of rule objects. A rule object has a `release` property and 1 or more criteria.\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": [\n          { \"type\": \"docs\", \"scope\": \"README\", \"release\": \"patch\" },\n          { \"type\": \"refactor\", \"scope\": \"core-*\", \"release\": \"minor\" },\n          { \"type\": \"refactor\", \"release\": \"patch\" },\n          { \"scope\": \"no-release\", \"release\": false }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n##### Rules matching\n\nEach commit will be compared with each rule and when it matches, the commit will be associated with the release type in the rule's `release` property. If a commit match multiple rules, the highest release type (`major` > `minor` > `patch`) is associated with the commit.\n\nSee [release types](lib/default-release-types.js) for the release types hierarchy.\n\nWith the previous example:\n\n- Commits with `type` 'docs' and `scope` 'README' will be associated with a `patch` release.\n- Commits with `type` 'refactor' and `scope` starting with 'core-' (i.e. 'core-ui', 'core-rules', ...) will be associated with a `minor` release.\n- Other commits with `type` 'refactor' (without `scope` or with a `scope` not matching the glob `core-*`) will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type.\n\n##### Default rules matching\n\nIf a commit doesn't match any rule in `releaseRules` it will be evaluated against the [default release rules](lib/default-release-rules.js).\n\nWith the previous example:\n\n- Commits with a breaking change will be associated with a `major` release.\n- Commits with `type` 'feat' will be associated with a `minor` release.\n- Commits with `type` 'fix' will be associated with a `patch` release.\n- Commits with `type` 'perf' will be associated with a `patch` release.\n- Commits with scope `no-release` will not be associated with a release type even if they have a breaking change or the `type` 'feat', 'fix' or 'perf'.\n\n##### No rules matching\n\nIf a commit doesn't match any rules in `releaseRules` or in [default release rules](lib/default-release-rules.js) then no release type will be associated with the commit.\n\nWith the previous example:\n\n- Commits with `type` 'style' will not be associated with a release type.\n- Commits with `type` 'test' will not be associated with a release type.\n- Commits with `type` 'chore' will not be associated with a release type.\n\n##### Multiple commits\n\nIf there is multiple commits that match one or more rules, the one with the highest release type will determine the global release type.\n\nConsidering the following commits:\n\n- `docs(README): Add more details to the API docs`\n- `feat(API): Add a new method to the public API`\n\nWith the previous example the release type determined by the plugin will be `minor`.\n\n##### Specific commit properties\n\nThe properties to set in the rules will depends on the commit style chosen. For example [conventional-changelog-angular](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular) use the commit properties `type`, `scope` and `subject` but [conventional-changelog-eslint](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-eslint) uses `tag` and `message`.\n\nFor example with `eslint` preset:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"eslint\",\n        \"releaseRules\": [\n          { \"tag\": \"Docs\", \"message\": \"*README*\", \"release\": \"patch\" },\n          { \"tag\": \"New\", \"release\": \"patch\" }\n        ]\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\nWith this configuration:\n\n- Commits with `tag` 'Docs', that contains 'README' in their header message will be associated with a `patch` release.\n- Commits with `tag` 'New' will be associated with a `patch` release.\n- Commits with `tag` 'Breaking' will be associated with a `major` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Fix' will be associated with a `patch` release (per [default release rules](lib/default-release-rules.js)).\n- Commits with `tag` 'Update' will be associated with a `minor` release (per [default release rules](lib/default-release-rules.js)).\n- All other commits will not be associated with a release type.\n\n##### External package / file\n\n`releaseRules` can also reference a module, either by it's `npm` name or path:\n\n```json\n{\n  \"plugins\": [\n    [\n      \"@semantic-release/commit-analyzer\",\n      {\n        \"preset\": \"angular\",\n        \"releaseRules\": \"./config/release-rules.cjs\"\n      }\n    ],\n    \"@semantic-release/release-notes-generator\"\n  ]\n}\n```\n\n```js\n// File: config/release-rules.cjs\nmodule.exports = [\n  { type: \"docs\", scope: \"README\", release: \"patch\" },\n  { type: \"refactor\", scope: \"core-*\", release: \"minor\" },\n  { type: \"refactor\", release: \"patch\" },\n];\n```\n",
  "maintainers": [
    {
      "name": "travi",
      "email": "npm@travi.org"
    },
    {
      "name": "pvdlg",
      "email": "pierre.denis.vanduynslager@gmail.com"
    },
    {
      "name": "semantic-release-bot",
      "email": "semantic-release@martynus.net"
    },
    {
      "name": "gr2m",
      "email": "gregor@martynus.net"
    }
  ],
  "time": {
    "modified": "2023-11-06T01:48:04.097Z",
    "created": "2015-06-19T00:24:25.334Z",
    "1.0.0": "2015-06-19T00:24:25.334Z",
    "2.0.0": "2015-07-19T13:11:12.792Z",
    "3.0.0": "2017-09-17T21:41:10.790Z",
    "3.0.1": "2017-09-18T03:01:49.905Z",
    "3.0.2": "2017-09-19T21:21:32.114Z",
    "3.0.3": "2017-09-21T05:19:38.076Z",
    "3.0.4": "2017-09-25T17:11:33.278Z",
    "3.0.5": "2017-10-01T21:41:35.468Z",
    "3.0.6": "2017-10-01T22:01:57.261Z",
    "3.0.7": "2017-10-10T14:09:34.849Z",
    "4.0.0": "2017-10-30T01:11:57.484Z",
    "4.0.1": "2017-11-22T09:03:43.195Z",
    "5.0.0": "2017-11-25T02:42:33.898Z",
    "5.0.1": "2018-01-21T04:23:04.227Z",
    "5.0.2": "2018-02-09T22:55:34.558Z",
    "5.0.3": "2018-03-22T14:52:18.597Z",
    "5.0.4": "2018-05-29T15:30:23.672Z",
    "5.0.5": "2018-06-06T15:09:13.795Z",
    "5.1.0": "2018-07-10T15:43:39.885Z",
    "6.0.0": "2018-07-17T04:18:16.569Z",
    "6.0.1": "2018-09-11T15:18:57.190Z",
    "6.1.0": "2018-10-08T17:08:36.526Z",
    "7.0.0-beta.1": "2018-11-29T18:26:32.523Z",
    "7.0.0-beta-.2": "2018-11-29T18:55:40.903Z",
    "7.0.0-beta.2": "2019-03-21T14:47:49.052Z",
    "6.1.1": "2019-05-08T18:50:15.553Z",
    "6.2.0": "2019-06-07T16:35:08.332Z",
    "6.3.0": "2019-08-09T18:07:33.999Z",
    "7.0.0-beta.3": "2019-08-21T18:04:13.397Z",
    "7.0.0-beta.4": "2019-10-02T21:55:56.768Z",
    "6.3.1": "2019-10-26T04:49:33.305Z",
    "6.3.2": "2019-10-30T16:56:27.798Z",
    "6.3.3": "2019-11-07T16:29:25.525Z",
    "7.0.0-beta.5": "2019-11-21T01:18:49.693Z",
    "7.0.0-beta.6": "2019-11-21T01:28:08.633Z",
    "7.0.0-beta.7": "2019-12-05T19:17:18.420Z",
    "7.0.0": "2020-01-09T19:54:34.912Z",
    "8.0.0": "2020-01-27T21:05:01.967Z",
    "8.0.1": "2020-01-31T16:20:44.990Z",
    "9.0.0-beta.1": "2021-08-20T21:19:42.286Z",
    "9.0.0-beta.2": "2021-08-21T05:00:12.396Z",
    "9.0.0-beta.3": "2021-09-03T20:55:20.098Z",
    "9.0.0": "2021-09-17T19:26:39.471Z",
    "9.0.1": "2021-09-18T02:28:28.562Z",
    "9.0.2": "2021-11-23T18:08:58.340Z",
    "10.0.0-beta.1": "2023-05-30T02:39:41.429Z",
    "10.0.0": "2023-06-02T19:23:08.469Z",
    "10.0.1": "2023-06-07T14:12:49.829Z",
    "10.0.2": "2023-08-27T02:18:08.537Z",
    "10.0.3": "2023-08-28T02:14:42.274Z",
    "10.0.4": "2023-08-28T20:29:54.053Z",
    "11.0.0-beta.1": "2023-09-01T20:58:17.702Z",
    "11.0.0-beta.2": "2023-09-12T01:49:24.658Z",
    "11.0.0-beta.3": "2023-09-15T18:19:14.538Z",
    "11.0.0-beta.4": "2023-09-17T04:45:34.918Z",
    "11.0.0": "2023-09-18T12:33:59.204Z",
    "11.1.0": "2023-11-06T01:48:03.592Z"
  },
  "homepage": "https://github.com/semantic-release/commit-analyzer#readme",
  "keywords": [
    "changelog",
    "commit-analyzer",
    "conventional-changelog",
    "conventional-commits",
    "github",
    "publish",
    "release",
    "semantic-release"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/semantic-release/commit-analyzer.git"
  },
  "author": {
    "name": "Pierre Vanduynslager",
    "url": "https://twitter.com/@pvdlg_"
  },
  "bugs": {
    "url": "https://github.com/semantic-release/commit-analyzer/issues"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "contributors": [
    {
      "name": "Stephan Bönnemann",
      "email": "stephan@boennemann.me",
      "url": "http://boennemann.me"
    },
    {
      "name": "Gregor Martynus",
      "url": "https://twitter.com/gr2m"
    }
  ],
  "users": {
    "flumpus-dev": true
  }
}