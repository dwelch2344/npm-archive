{
  "_id": "@opentelemetry/instrumentation-grpc",
  "_rev": "187-e73628ce2c39b2a7986ee504f1682393",
  "name": "@opentelemetry/instrumentation-grpc",
  "dist-tags": {
    "latest": "0.49.1",
    "canary": "0.25.1-alpha.23",
    "next": "0.34.0"
  },
  "versions": {
    "0.15.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.15.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.15.0",
        "@opentelemetry/context-base": "^0.15.0",
        "@opentelemetry/core": "^0.15.0",
        "@opentelemetry/node": "^0.15.0",
        "@opentelemetry/tracing": "^0.15.0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "2.0.2",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "3.9.7"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.15.0",
        "@opentelemetry/instrumentation": "^0.15.0",
        "@opentelemetry/semantic-conventions": "^0.15.0"
      },
      "gitHead": "960b868f5b7686eabbf49190071b8463551e5d8f",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.15.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-t253u7WZaAe2XuSK9hGJERVQRTSJ6B/3BksuqgCdYA3OqGEm0RXUOXjAYRfG+ww2PfJNvw6YtI8lUsbPDIILYw==",
        "shasum": "f363e5f27c53efb000e388336ace619bbf24542b",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.15.0.tgz",
        "fileCount": 18,
        "unpackedSize": 57340,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgCf4YCRA9TVsSAnZWagAA9L0P/2cy22jAcVO33M6zRQ9w\nyXT+SSxFKgGqmiu5ctLVPy44zusQ+3vMNs+QWIgl6WX61yBkIINrg/IUAXfT\n0YabJJVAj89vx8UYDqJxf8yhCMFqq+295tsnjnHzHX20OX9Aw/cOuhTpBJd0\nHE6y3PSO+M8kFMbQ0sww/PZSUMeL63PqzaN5/feXlR8EDzOWqfzYPFWaNU/Y\nsW9L+7eUloQiR1rxEBdxaG3+gpaOJ9rXlMkYbPDqU1Ohiw6ob8sEWxNkx6zp\nz/LBhl0ocve9MJu2tl5irm0mOTyUVVI+jbf0w+GPdreyxZaLjVETGZBmUEK4\nCetgBW1dPVkECgAHuHo3gpTmNVXJPr/T6hYCtxIzbziAc5fYQAU+z82r/5Da\nPVIgBsl9DUw/Cfja9LuCWDtzdSFW5Fo6LvJfEnvVLvi//fXGh7+7AxwE7UfS\nHtS0Bjr6ojnBTQhXiGnFAAdceNYxizQgIw0whA/YRrfWUebEkfVDc/O8aVoL\nHfTzNO9nPLblxXAsRdmNhP+VAhtyGasGtVxPT6TFQgRzp/qoSoqYtiQfZZXd\nzjRjQ+nqXDdxS0m7ob+05u8oGvFExLvLVdC0qAfKqJRDvrf1gkgRlCS3CZ43\nY9ddPJozQPpwnBOGslhhIHLRlv+uEJrIIIBz3gWKHILVuTDTeN76/3Iqj0s3\nTuP+\r\n=M7U7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGjRhd7Ezjk1SXoyU/H5S/WYSMknsoe3v/+pfKSo6OzVAiBSMTDRzn4/XO/gCFPL311JJ832yH8w4Ylfrr1865XIWA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.15.0_1611267608450_0.5881071796340502"
      },
      "_hasShrinkwrap": false
    },
    "0.16.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.0",
        "@opentelemetry/context-base": "^0.16.0",
        "@opentelemetry/core": "^0.16.0",
        "@opentelemetry/node": "^0.16.0",
        "@opentelemetry/tracing": "^0.16.0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "2.0.2",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "3.9.7"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.0",
        "@opentelemetry/instrumentation": "^0.16.0",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "e68863f8e63854b08ad13fb54677294ac6d6b681",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.0",
      "_nodeVersion": "12.19.0",
      "_npmVersion": "lerna/3.22.1/node@v12.19.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-GvtXCGDdCinEu0IMsYqmrwnJ5Lxgi4dG8k7XuZXTA62nL3mrv+omr87Is+m9q2FQfnRc4DmLiBJ2WbBJ/6Vhiw==",
        "shasum": "6f56340217f19791c609f46f9b9337bdaea8fe0e",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.0.tgz",
        "fileCount": 18,
        "unpackedSize": 57171,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGIG9CRA9TVsSAnZWagAAKagP/2RIaPqBP9Xk7+FTlcF8\niazoD5w/CmNAjZvsLl5cUZIuT5gafhD3ofLzgvROcAUQFf1WmqGE5glDPS6j\n95oYDlPhvpVGmjatcTk6HHpogtteV+MOf47/OyK4S3eDkzmLaspQUZxzQKXC\nddj8FLA6cH4oiqn/MxF+tk4t8Fg3e6LNDIZiwXUwP/ChN+8NbWttKILwVlTf\n7d+71hxDLbL0yaS2WrY9527jpOzN1YAmoXE3uYZ0mhPOeJJ5vKGs5sezCijZ\nyiMQqvm+pGTk0D3T78Sm8ktH/JCEKlVjY1v+8M4u988wbcnM4jEeMnvgVFsu\nHNrfTYHeBOQ9VqaHNIvTodbpxrhD0WFup8DFY+buXursin+hpR3YEXCj+bZz\nqGf/wtTbKlS180wv4+Nj2a+CFcgtVHjkI315Ri/RFaUbdO/dYkzB943y5XgV\nCM5K0Q1bW5q6BficZ5b1yJk0QCdnb/dlOm6btq1a8cb42cJcF3KwehDyTKiM\nCoF7+NxCcUa+ViJoibb0fZRcwzymaoMNY0bp9wvKRl/LqV4PWGYuguV2Jhmw\ns0GXtgq7TBmECVyjsjbQK6xf7fOQocOpa8K/rG47TPZHPfhWyzmTswoMtA/U\nZutBc2C9iyEup/Tq4aOoL6QiJktCTf04YjrbcbBTUOwVx/uq3kO0YhI2SkV6\nHt9k\r\n=5KYf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHWN+Ha3zJ8lWnjWMudXrSJlDYNgqmOowYxCtDYUFts1AiBZz8YO60LdpN4KRZFgxUJ3zCk4N2z27HtZx9jb+08AlQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "obecny",
        "email": "bobecny@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.0_1612218813031_0.2190862705643053"
      },
      "_hasShrinkwrap": false
    },
    "0.16.1-alpha.6": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.1-alpha.6",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.0",
        "@opentelemetry/context-base": "^0.16.0",
        "@opentelemetry/core": "^0.16.0",
        "@opentelemetry/node": "^0.16.1-alpha.6+9cfa92c4",
        "@opentelemetry/tracing": "^0.16.0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.0",
        "@opentelemetry/instrumentation": "^0.16.1-alpha.6+9cfa92c4",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "9cfa92c4a5a56ceeaeaa8d043ee2eb00a561c55a",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of the Node.js gRPC library is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) for a short example.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.1-alpha.6",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-oywdkTZDEnW3Yz3bv1aqOHaQtAHyuXgtIHUGlhH5wP9X6JLwRZRkPRPUiwQMCeF7+c8ootgNuWacLTbFfzcxTw==",
        "shasum": "f9e456adb537c7bd940f2cd2dadd7adeec2acd61",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.1-alpha.6.tgz",
        "fileCount": 18,
        "unpackedSize": 57614,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgHac+CRA9TVsSAnZWagAAF5QP/1HEhNm1+NwQTtm4TZOx\nqxnR2Q5y6Wst16UBjaXoNNP8J25jv3LDkmwuJmIYPoCtK22wk5XoBNTeqz95\nD/LfGrdzNVmsRRqfun2moeq0Fju+mAaz0JUWJrtigU5IugIgvZPJVCOnciaK\n+pAdae7+SS1dPdodBdpEGH4KgVu/eQCxdYdH7T3a3kGbv/wiONETTVVzPdhX\nXVowTuY46gChzqTqBXB+vOywn5cBNCFGSt3tY0eBH+PR3XKrtDuSlM+VBLXk\nYy6xKuoi1EiTkx5ZwOw71ulTFoT9LHQNl1MjwxaLsxI3+qfKsZ2xKmbpiEWx\n8+LWGCucTIm0R+yslEX/DAH8f0EhBIijdpoIiRdOOg8dR3zk7+PqP5GXL+VC\n/fOoHViu7zxAQ/BuHkGCtpoEbJ1v+GxrZo2ezHGPRsAK6pHHuEkriV7d0ywq\nDH13vS5cKp6e/CPs/BDsvbyFwmy7hR1th2eYn/d5XlFwgPwht844S3aU9iZm\n330PdRpYa0tf4xKIawnodzrxIFNaOavwACtTeeyuJzuJb81ARR7AH1Bn6jv4\nw+yPFXDCrGQ6O9mnIJHpSf/8WZxEM5CI09htnQR00nD6JLqKRosfz/OzHUe+\nnlvPVKdXSPP4v4p6pd1PdkjJt2R8IOX0UqbmUhvIQWMnGNXqEQudjw2rrs/8\ncC56\r\n=fQaJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDe8A8FehPpbM1AL0wINp3ei9QKcXxYxQ6806fLIoaENAiA6LMLOOwzUq+DOdsPXJ9OdCb8vbJ8KpTrbUqZ6pN2EiA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.1-alpha.6_1612556093826_0.51875840142883"
      },
      "_hasShrinkwrap": false
    },
    "0.16.1-alpha.10": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.1-alpha.10",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.0",
        "@opentelemetry/context-base": "^0.16.0",
        "@opentelemetry/core": "^0.16.1-alpha.10+cacbbdca",
        "@opentelemetry/node": "^0.16.1-alpha.10+cacbbdca",
        "@opentelemetry/tracing": "^0.16.1-alpha.10+cacbbdca",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.0",
        "@opentelemetry/instrumentation": "^0.16.0",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "cacbbdca0e89d31e2e0b10a8ff5fb86d7a714906",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of the Node.js gRPC library is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) for a short example.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.1-alpha.10",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-KMHU5iLBJG6Lkxc+GgmOVqRBoKbDA9bLrHfKFSgnJhok6M2aciqL0OnnY4zryx9XKkjQR06sEitO6KHZmHRzkQ==",
        "shasum": "c770f13677b7c08a66c7b2298895e732e7e379c7",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.1-alpha.10.tgz",
        "fileCount": 18,
        "unpackedSize": 57635,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgIV2qCRA9TVsSAnZWagAADmkP/2JA6zK4LmFl7XPT9kMS\noXwPpdDouGxF1e8TOuEUoEnPNleZmMeHW6RgWvDJ7UNQ1cNQiMBT5S+cq8V/\n4jgdrvaDzrmhfRv6KgOvmjfuIN6YrpZWMmOmKArTk25Y2wIyjbjf7CNjGMC5\nal7lp0cvaRNsTyhRTeAC88ECw4RogVjwEbeaZ1AVWMBDf6yE975Q4tk7zfIY\nDkIAj707lLAqrnlDNZ8ko8ZlK6kGd1RAibhDIbVHThLLNb7wAOuAXaAWsdjC\njrIucl9Lelmfe/WzyxHGL2kpdWp8vlEFVdpapE80EoC41KAgoizM/Eg7FRer\n4s56v75c11IROLKAY7YeZwsF5iyOH8ACw/VZ/dsYGCl0fGjW/Fp/hzoRLutf\no02a6QywMq9hbRpLFSJH+CW1jXM3ZeAXkf6NEvN8XEaD3ZxDAoccGBQjwqLM\ngTCxk3Hwsvi0WCts8zUriZ6jGSM5dXgE69cbK1XvZUcawWL5dgYGMoIbrVBw\n6CDEzgdR9NCx84IPmc5foccXERioFlL7HmligBJqTyC3FeYh6ygXDBAo3noq\nHt3Giv5to7B9VY3r8fF2+qgS561IHXdGu0Dn0zLeF7uwC6tkM0fYRTQAoBnF\npoh8JejCnkBYp7nk14sqNogEt9wnNBxCezsOPf062OaGTZqfbQHz9eZ/iz+3\naf6h\r\n=Gp4k\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDw5v2AWZyT7Nuu8GWbHU3K8HbiASd2eUjqAO/LQudAKgIhAP4hzudUdEkQx5XJQiNsjMAVUw4c9/O0mg7ymTcwzoRX"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.1-alpha.10_1612799401616_0.8859056751528869"
      },
      "_hasShrinkwrap": false
    },
    "0.16.1-alpha.11": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.1-alpha.11",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.1-alpha.11+70a128ff",
        "@opentelemetry/context-base": "^0.16.1-alpha.11+70a128ff",
        "@opentelemetry/core": "^0.16.1-alpha.11+70a128ff",
        "@opentelemetry/node": "^0.16.1-alpha.11+70a128ff",
        "@opentelemetry/tracing": "^0.16.1-alpha.11+70a128ff",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.1-alpha.11+70a128ff",
        "@opentelemetry/instrumentation": "^0.16.1-alpha.11+70a128ff",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "70a128ff5dca16060ca7c2cff943369ae9999c34",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of the Node.js gRPC library is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) for a short example.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.1-alpha.11",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-mDROXa9T1Le848ibDwEg68+WRvqyvohMAdMi5u09cMcmbLMzSi7KgaLwOyPkkedkZ6o2bnV7eEPITKfRPhRRLA==",
        "shasum": "25123f8258c1c2430941b03246ef38c0ad56bba4",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.1-alpha.11.tgz",
        "fileCount": 18,
        "unpackedSize": 57707,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgIWRBCRA9TVsSAnZWagAAkyIP+wYOIQoaeap5UNSMPQRV\nKFnsTrg4zj10UXiAi7VUQJ0FMlNt2O9NoXukHfnNla8+SX/xELemLKYDqc7a\n1ZuGhIopy3b6nIe41B+u5mS4OV0UMd6dEJ4Y5uUL+V1sV3REwxV1wBlqmeCc\nlHecVXMBLkjWifkd3Rz+Korl4b/SWYLTCt9Gzf+MQpiq9cHweXMEwC0+N/Zj\nyYKP2eBTWhrPh1Hc7yffQf+t42YwYZiRK4bUqwiH7jfKEfmz22MBWhNDrxHm\nMnQbZlo6wetqJI1TKqCxBsW7idZNTCuiR6BwFAQ3P2Cb/7eTl/7dB9H0NCk/\nJrq/WOu1zMgs/b1pFzc7ACI0fTnC4r1G63j6NUXQrCpnn5yzo3Wyg7H1pmQj\nSGnjz+88K8L3p0Cay8tdnJStH7Jqx86/kgEyOh+GOtwTXFEn/GlQZwG/XuMH\nC1WWM+AY/KURYTsnPGKuiQyVn8tArqPmkVQ0TfsA0TZNSRM2GUo4l9P5l4Gs\n2SeNQsdiXuf5Ne+wp54APG2ydtE6slmmEdMmSyedT2NFUtTZ7qxWKCEi72/9\nPT5cbe3AX7/7218yzgKLwfBlYEG9YRlvSxKTcS78zO1JWVWroNxXleIyQgqx\nzayKzgcTpMhUgve62IfF8/XtdE67xNfbqwaU8nor6VUNGzEVgpuo5kTcgvv/\n2ntf\r\n=xIJ4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD4gH+NFAG60vQkRgZpA5ENlLx//BoJKa8DR66rOxv/HAIhAKwDZ2k7FIGNAI+tNX30WMrJGVIpJ0avSRPmC4z65ciQ"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.1-alpha.11_1612801089396_0.04090222687197742"
      },
      "_hasShrinkwrap": false
    },
    "0.16.1-alpha.12": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.1-alpha.12",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.0",
        "@opentelemetry/context-base": "^0.16.0",
        "@opentelemetry/core": "^0.16.0",
        "@opentelemetry/node": "^0.16.1-alpha.12+dc384956",
        "@opentelemetry/tracing": "^0.16.1-alpha.12+dc384956",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.0",
        "@opentelemetry/instrumentation": "^0.16.0",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "dc384956b3c762b16c3fc62c792def067e94a307",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of the Node.js gRPC library is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) for a short example.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.1-alpha.12",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-uKQ83Iipds047J6I1tup3SEtskbZMY73rebNwVzyEHAhqINJ1GEmgNf6E9Dq6VYPB0hmXfMn02/7PIvcf78cmw==",
        "shasum": "49d682c118f920848954165b64d1eb05758382d5",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.1-alpha.12.tgz",
        "fileCount": 18,
        "unpackedSize": 57617,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgIZrOCRA9TVsSAnZWagAAP9wP/3TsEfDcgWbZt0Rkevya\nSdf7TVU2h+HYDzVpe4FhG97dVxvHNUt+rYf9Y407O7sgUj/cqqoY2ekLINnx\n7tLEaHwBM7Qo+WG7ZQI4MbX4sbXwQz6tJiP366Yjdtdj5qHjkQwmcTVHH7fz\nKQt78alDYcoSjOxjz5Vv313PsgQSviJWAbZYs9pO4US3k4i9+d4V/vv0d3sx\nr5TJT4lOtVgn+6NwwhzHQYk/qORv14q1H1fSaMeSCcoBDNu2HVRQFy1GJmwa\nUbBPkW83EJnjsOh6xpJt3emQuVVkA3xaT+l1inFJ0FiT3inj6xInSYzmLrnp\nSqlmxQu5ZCwfqtDNF0vk8zN5YqNUvdKnPprVjFAzl3ihepZc0BDGVc0ZR5NK\nq5qJ3NlN0wzZJSiKUIS3thLYxkXfNoJKVU29qw/BIUaQQ+YSS7yHsGHJF4Xt\nK6kdLK4BD7HYQU2Csa1TiWHGDifyCiXuaJgDU+qF+olfxu6unf+v3BOGuVwD\nQJoOFx57EDl8K+4SXaMc8pjPcEp9MINRDJsLlXvMCMUg12r8+ly3VT/jWL75\niMWaCS42JdUSLyUZmcxn90JTfWz2SLdA+Yr33guEK8lgAd1aiv4SM9ecUFiC\ndYB4bmX2HLqYUv9DbM1Gw9/CWowrMMxzdQaL2WFFDzE3DuKtxhcF+ahKIJN2\nPbiV\r\n=+WNk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDR0rjcbmq5YcskwXiD8PuN0HwT+LNQweSmAH2Jb935fQIgayX2U1S4/ewWXsNHHTmMXZtzNoQVQH3Uz3HERot1SSk="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.1-alpha.12_1612815054144_0.8566023044520723"
      },
      "_hasShrinkwrap": false
    },
    "0.16.1-alpha.14": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.1-alpha.14",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.0",
        "@opentelemetry/context-base": "^0.16.0",
        "@opentelemetry/core": "^0.16.1-alpha.14+000a8ac0",
        "@opentelemetry/node": "^0.16.1-alpha.14+000a8ac0",
        "@opentelemetry/tracing": "^0.16.1-alpha.14+000a8ac0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.1-alpha.14+000a8ac0",
        "@opentelemetry/instrumentation": "^0.16.1-alpha.14+000a8ac0",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "000a8ac099a3848a9a3c66f4bdd4826b4cff987a",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of the Node.js gRPC library is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) for a short example.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.1-alpha.14",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-UFphrQbCM+Hfo1BzUyio57BokNQNnPbTuecGVyvFEULH6M7XMr+PH/BNzB0HETGGWUw33JKIRstIrn8Mk/aBSA==",
        "shasum": "ce5b9649d29a962aeb9ea70c8c70898aeb51f0ab",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.1-alpha.14.tgz",
        "fileCount": 18,
        "unpackedSize": 57671,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJAR2CRA9TVsSAnZWagAAEfIP/3/Nf8Mu5TPAp0W7Ci+v\nD8wR/HB28GpCHoBXOydeE3a9nQ326BBicNU7lv0efApz6SEz2VWvfWZHhg3B\n3rnCbFMHv3cYP1DBEgvv1tiw0lVFHnHDAdRFMP1nVOG1Qaf8noGZBaOiggzF\nDRydi/YNXwfObwTOZeMzGrMW3wuE5gYNT/wefyrcpX4rgfG/PXRpX4PDtep6\nDty351aeyxstAabjoBv4BKrHRrduNE/m/rL35vlmDeOApnBmpjtVi8bq8PKI\nycfJdvsW2FE4GIEm+UQ7G8ViCE50y0lYIXLe63aY6hGax5ktnpCEztLy62CV\nNBONdpSYLl0pc9KkVScqvMKx/GrVOEjWTiZYfN9muVvqXT8P8N9LptOFdtKv\nyTux4EEUS1EuVu40U0twgs6Q/4xitsPgbSlRGMbfE0OH5bxVPWm9gw6ok3C0\nrkB9hNRusYTjjCQUyCmUBvG/9gW7r7TrZBcjOp+Rtd+YyYC3oEjizV+gwfa0\noqwsE62qJfG0v2BdBpuhZx0xwPfZlY0XoDq1jlcNEaS9g8f0CFmO8GYbE/zM\n1yNLdeD5WjB+MiV1YixwSxb/8R3bK4yshOtG7L0Ho7E6/9r+99KVJPXWxGih\nLSpxTVxNMlUpZV2rM7jtMiMXiaMnTL/BKOvAHbp9wjICOW4d8PyBSn/T0EeV\nteUn\r\n=L02/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDoGxhGozXS4DibcUT8yQUosWbGvs4332VwRn/N3p4WJQIgYRBJQonJfyusn0AZO4iHhaepMhWSFxCyh9yq6vdgogg="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.1-alpha.14_1612973174178_0.1208840767563657"
      },
      "_hasShrinkwrap": false
    },
    "0.16.1-alpha.15": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.1-alpha.15",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.0",
        "@opentelemetry/context-base": "^0.16.0",
        "@opentelemetry/core": "^0.16.1-alpha.15+1d682c2f",
        "@opentelemetry/node": "^0.16.1-alpha.15+1d682c2f",
        "@opentelemetry/tracing": "^0.16.1-alpha.15+1d682c2f",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.1-alpha.15+1d682c2f",
        "@opentelemetry/instrumentation": "^0.16.1-alpha.15+1d682c2f",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "1d682c2f75f9d11265cfc1692fa822174594d4b0",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of the Node.js gRPC library is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) for a short example.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.1-alpha.15",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-5I261r6vm83j51y/aVJCjvg4Ixe0vcLwzmVIT1ILII7vZWP83VaHtddYG9akyZ4S8+ko8irTQGrLBvXw+py17g==",
        "shasum": "ebc11a90525529bfcb199a5150bbc672d680481a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.1-alpha.15.tgz",
        "fileCount": 18,
        "unpackedSize": 57671,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJFuqCRA9TVsSAnZWagAAmV0QAKClTeFhTeS7Fh7IfPSl\nrGxhggpOu9c/L/vXuCNwJtVK/bC+DivYDlH/Nm6ih0xMzwK3JrA0nRrzGEbC\n5N/FIlesd36oiQTDN7faFRf5cWSIGiR+Z0YMOWLsv87+ow9E9vzVrc4uaPkE\nfULRshzsNNAjCgOXu99vsnaCw+9PHXdtPFqDOKbZm2PzZ9DRG1YpZXe0H1kd\neKAadZSQviGo0Qkd5IuuLyrAzwuHwVPlZnZO+DTcbRiKQXAJPS3b9WNuDJGT\n78m5pMLWavwb5DjUInQh6D7JiewUsSkteKA69LKPKsAc19YeqUnwAuI+qav4\noQjBZSMIklKDvyR3tlvYsid20iuYQy1SWa66R5cOETcx1ByHHIRm3bgcIY8f\nEczNUkRfx3hag/PnNmOsusl0V7wIPgseFgqTddK9RE/PBgo9hq2+s3MJPTwH\n0vR+ZeaPmjCJ7FnYmdJG+54VPMaSCF0udeT6X+eZlbEACOgZBZNW5bBnJq+9\n6q5ej7P8l3TehAonbyaY4yVxatSMqUTOfX2r+TbIcFnLTU26OYeXuPYPYGQE\nVg898m+Fuer9wMQi6MoHokdvoA/Z4VQuwHqb1EQkGn3Y8yIQCV3fQauxoeqs\naXBlnGNfs3ZkoiG0SD/uBVvSDjK53mDowXrX53tzOmvYtY6SLzKP8bGFG5KT\nPjm2\r\n=RZE0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICccLwKIgxJ6QSN0lpcUh00pkiaTMQR6CbIGSMS1JQs0AiEAkAuk5ufBGnZfJ54IbprGv3X0mUKFnQ/8OpYVuLtNNkQ="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.1-alpha.15_1612995498273_0.07870306513789638"
      },
      "_hasShrinkwrap": false
    },
    "0.16.1-alpha.16": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.1-alpha.16",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.0",
        "@opentelemetry/context-base": "^0.16.0",
        "@opentelemetry/core": "^0.16.0",
        "@opentelemetry/node": "^0.16.0",
        "@opentelemetry/tracing": "^0.16.0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.0",
        "@opentelemetry/api-metrics": "^0.16.0",
        "@opentelemetry/instrumentation": "^0.16.0",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "11d9b193d1e980eec278627377626231f650f2fe",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.1-alpha.16",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-OocOFv17WycuJFGW4oJgglJyX4WvkHW8R2KH9psqqqGEUBIrX5hFspFH+Cn8Ymz34gvP6yy2BzergRb9fdWIoQ==",
        "shasum": "17575162b1b0a1cd9fcdbc2db8dc3c44ebab2672",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.1-alpha.16.tgz",
        "fileCount": 42,
        "unpackedSize": 110406,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJTYTCRA9TVsSAnZWagAAdtUP/jBzTv6Z4MSe/7aDZGme\n5u+FiAz/s4McrHU7qCz3S544xa9n5yhYD5HVgoAP4LjW5yQW1CLQU2cv2lGf\nWdsaayUX/TRZWiUHhxngXqdkw9CjL5wAKzMUIIghxXTpt3f4DHat81qufe1H\nofm2tFEvNn9Up16NUIee8zy/ZP/rZTaTQFZqc/tWWPYND9xObR9taDX76nxy\ngMtrFe+FtHO+rRDGhZwxkszlHgMiCSEnrnhdhr1FilFvymC9xwyxRcDtGLyw\n9eMG0ZsshWke1ntk39OgbnfXgjeMkgsZfdUqpwqFBbzHwntKrj3EGgm++Yod\nIATLkXpaUlxtQibhkNiJ/7fvLSxa0nHSrfR9kP7RjSI/6TQgo8SMRlWeKLKG\ny033AGjcJFfy1dGGDZy2qFR5jZ95MjJluJmhws3vIB7kJPYnWl2m+y4cIeXZ\nRNrqaY83ocL5wXpC9mvurNosCYb82AO6dbC2O3Gpr6A9FnoZckvDct7ycEpe\ntX2G9Q/VVsa0mAsHbqyY1d6TfFhg+BgjE9N9OomaM/lc14r4cb7kO09YItBb\nvXsI6EUhJls/vtSem2tiF9wWH6YJUZbxtVD+BQAGodgGPnwbhgIiR0JGv3I+\niEowYqwAjBudzn3ZVVK3GCgdLjfo5EgwtOLnBeLjt/zfUndlxFW6LSCWcE3k\n0XeP\r\n=lO9Q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFucAwu/VnoT6cyRbPmVMh6M8OSTxD2gk3EAeNuMJWGRAiEAygp/gPVT3IBuXedJlwkdVVjFW+2rO8Xxy8KM6x3uIJI="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.1-alpha.16_1613051410775_0.5993381013026511"
      },
      "_hasShrinkwrap": false
    },
    "0.16.1-alpha.18": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.1-alpha.18",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.0",
        "@opentelemetry/context-base": "^0.16.0",
        "@opentelemetry/core": "^0.16.1-alpha.18+9f965b0c",
        "@opentelemetry/node": "^0.16.1-alpha.18+9f965b0c",
        "@opentelemetry/tracing": "^0.16.1-alpha.18+9f965b0c",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.0",
        "@opentelemetry/api-metrics": "^0.16.0",
        "@opentelemetry/instrumentation": "^0.16.0",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "9f965b0c749108df00bbe44eeab84d79b04bb0a4",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.1-alpha.18",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-pdRJvntq+QabpfdOF6/L/XXg6bxiUs6swRT83E914jNOCLRMP5rZ7Z/Wg53gd8HkY1EZvG/l7FGCi6TVzxaBoQ==",
        "shasum": "83583d3fd2a9afda545c69ef790383f4f51e39cc",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.1-alpha.18.tgz",
        "fileCount": 42,
        "unpackedSize": 110460,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgKWgGCRA9TVsSAnZWagAAWJ4P/3dR0cfSAiUs4ziin61z\n2+qFbLYqVZxwUVhsMntaTvSGrQpFDmFy4a3Y34J0ggQZzSWg8TJrExIFjSqU\nstbNHpqJASaZhQ5Czmiq+aLLTokPWufK0nhNB5kafEdj5+SxPXp2sIFI9C8B\ng5/DdMb/3XV8OlokgokmY52c71wqcOM6bVnHrNe3yvQchU3KSXi6b5wU2wHR\nTDuds+/Nq1HRnZ3tTyQ8g0DVfqi+9TxvJzTTt0VDFqLIYt2qvPyOcrvPpZoD\nfomKaGFqNfP32ZDhPLt7o36I2V1KgadihjUsjixaLR9XhrPS1/cvMgItCCjV\nDDkkkpUQgq2G9A0UyPHIoVOY4SOWeYdR86GybQSbqNvcOj6GGiRyuePG/Z5v\nwRvl0ClOC0YoVTOcykrW+37EhI6ygOMQCDhAkLCIU4D0r7CO5S5O18c416cq\n32eQBQrCSCzq9zmp5oyaZG5qdXL8cfshp0/WGAOiZy6o5Y9PGMj9mTWBcJZg\n1wnYt9zjeHHQLTYfvuZv7gC074P/BZXrvIr8QV3OU8GOuszoEDjw/bW34FKf\nc3eqcTkT8izTYK6kRRIudPg0cF3SgIwdHbzN71Ya5NvdPBBKYdK03n8mxD2m\nLFSIuks5sPtN6DRTdo4vshHahKHUn83vui/ET2b2gN0xM5PwgRsFcmjSvoCL\n6btE\r\n=fV8h\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCZX6cmIFQ2a9iF/wLilSczeYG7Pkd7OsLMvKEUJT7rBQIgRByQRB9MW006236XOp6TYKC51iVe0k7czt/YrnC7ylM="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.1-alpha.18_1613326342283_0.7320781225340203"
      },
      "_hasShrinkwrap": false
    },
    "0.16.1-alpha.20": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.16.1-alpha.20",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.16.0",
        "@opentelemetry/context-base": "^0.16.0",
        "@opentelemetry/core": "^0.16.1-alpha.20+62f8695d",
        "@opentelemetry/node": "^0.16.1-alpha.20+62f8695d",
        "@opentelemetry/tracing": "^0.16.1-alpha.20+62f8695d",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.16.1-alpha.20+62f8695d",
        "@opentelemetry/api-metrics": "^0.16.1-alpha.20+62f8695d",
        "@opentelemetry/instrumentation": "^0.16.1-alpha.20+62f8695d",
        "@opentelemetry/semantic-conventions": "^0.16.0"
      },
      "gitHead": "62f8695d3fe5309c62418a1043bc6e8a176bc11f",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.16.1-alpha.20",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-Dzcw+vmkg/FH1wO1kF4bUYdTXqaYs2S7g6LuEOeNKmH4DxGnuxcx3HdWENEiDPGRsT99MSU4Tt8rRIkPLetDnQ==",
        "shasum": "a01aabc83c604871918539a5be0434bb49c12d1d",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.16.1-alpha.20.tgz",
        "fileCount": 42,
        "unpackedSize": 110231,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgLYH1CRA9TVsSAnZWagAAAqwQAIifMh+hLSZXiGERqRo3\n9PNANkdR0w2nWJYH6s2u6ry4a4NH0IrnmidrvsIyJECwFpR5y/7Ji6zMv831\nEM/lINQH4RpZVr8WWuYJDTZa8/V4w1Uqh/npY1tMAsTlJu9C0Z1cNNL9IvSF\n1jNzejFFlx/OceL9Cmzy9tC/WkxWvJhww+ByL+IZkBNNudFcOzquDyOOyMlV\njAQyfp/RiuvEMYIf/UhXc0V5csSEbjg+wdfngfloFYmdiJ2MP0qBpBxpnORP\n/NNcauZHfHzFDyu/1t2EYFsS9lMXy4FiVC5HQPzhSdpOU04ZG4N4y3vZc5OR\n2Lfs8ZHQgqe0z/3YZGmwU+37+6j8xg6sfo9iPNdt4EfUtW9w+hWXg/pYnlwU\nf6ks2igkVc8ttKx9q+zi9QFsQgu6TD4fHJBazAyGS64kOO91K/FT7818BWTh\n3nbaaz+jTZSRvOA46Ag7iU9igUM8Q0iSpdmBElX/Jil/y5tLrjoweKHgG6fC\nZ4rA1ckB8z7C1g7O2rcCMefcuVx+iBsK+J4QXwh4Tf3kp+3mPahTqc4vtd9K\nGEPu09ILqeIBRVty5XftwpxD0TW9iutJ1m3vHFi3ji4tqipo5EIhnF47LF/7\nQ/vPnhEi+8bVf4/XDGED2WcF7wIJoiEYwzj0o3hIzS2aBx/B9aPsvPD3ViMu\ngdk8\r\n=baZu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3Gp9X8Z0LCh66JWsRUwRUZ3lPCGS2iAfXy39NVAFi7wIhAOR+NpTGljBEt1r8XZJ16ltjW/cg0EA43Dw9iBhy4h79"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.16.1-alpha.20_1613595124762_0.8848239855327797"
      },
      "_hasShrinkwrap": false
    },
    "0.17.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.17.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.17.0",
        "@opentelemetry/context-base": "^0.17.0",
        "@opentelemetry/core": "^0.17.0",
        "@opentelemetry/node": "^0.17.0",
        "@opentelemetry/tracing": "^0.17.0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.17.0",
        "@opentelemetry/api-metrics": "^0.17.0",
        "@opentelemetry/instrumentation": "^0.17.0",
        "@opentelemetry/semantic-conventions": "^0.17.0"
      },
      "gitHead": "a91ea7617f288af632934334d0c8ecece318ce73",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.17.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-AgU+SnCo5hJ29p+z4f+lC5hWbwrRuJ82QzSykM5P2nRp10HHJ72Behb4rxXErs+CFlSM01USYnDhs0AGJwXNbg==",
        "shasum": "1fa5eda0fcc0aa0592c8233a29c8f0190ecdabf6",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.17.0.tgz",
        "fileCount": 42,
        "unpackedSize": 110105,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgLYecCRA9TVsSAnZWagAAN2YP/RZZxI5DjbntTbx58xtq\nFJAPhChpJP9hQbhQ9xptoweYS/1H1S8ICKJL9sI0LFNMLSWQjI8Njc0SqXZz\n68K7ra6IhBAvaHjv/8THhApN0zxjPuV8aPrBKcOLcWo9tveRTk8IHTNn/gWd\nWbZWVX31R22LLkV57Uj73V66jiNVlDeRo2LKXMPTfsxEeLnSqziHREtnpcmV\nzjAqMCtwJFDK/IFXRzqKnh4cwwlVBIUfUio4h0N1HLNeFAR5UmqRWLf3J9Lt\nUkGPGvcXpp73nVgmQLMrEsL0OqfQ0bG0A9YtqSEzft5RVbWKPxlqisL6t/zB\nWQJcx/ngKovO45YTYOfGZbZalf9GX8Uc4/Dq5+1zqs7OWiQGZZh+Z44n3k1U\ntbTC3rK1THICScdJgvNwLvuqtG0JL1do45757ndna/LEqPyxLOAGYcXB5EIn\nwgdcV4sOjC4h27DMpCBmo2eF6wdS5y6lTW7yqk553m8m4ZHGtCjsN8fvl8l5\nF9WyfUbws7CKC3bDfDxnIfXOZpobC1KdGlum1NNAhd4O+xNP10J/go3olfK+\np4B3DC8OHuDl20YwsLH8TU43nh5g9wzqq9aY+3QyQGb4Nc1jVIH0oCELEOQa\nzkFNKJz/REg/Ncb/IiXvID2ICnmYU4UIfCoqm6iuHJJvZjlR+O3sZpIQrgyW\n+EEq\r\n=bU+F\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEnoDp9Og0c/g5NskMhlQwK+Z1kKD7FRUc5ZkxMsy6dXAiAXrIBC0RGMSqxeSpEbVdEy1uLeIwlGBAmXjZIB8BruPQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.17.0_1613596572110_0.42542710439468534"
      },
      "_hasShrinkwrap": false
    },
    "0.17.1-alpha.21": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.17.1-alpha.21",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.17.1-alpha.21+a91ea761",
        "@opentelemetry/context-base": "^0.17.1-alpha.21+a91ea761",
        "@opentelemetry/core": "^0.17.1-alpha.21+a91ea761",
        "@opentelemetry/node": "^0.17.1-alpha.21+a91ea761",
        "@opentelemetry/tracing": "^0.17.1-alpha.21+a91ea761",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.17.1-alpha.21+a91ea761",
        "@opentelemetry/api-metrics": "^0.17.1-alpha.21+a91ea761",
        "@opentelemetry/instrumentation": "^0.17.1-alpha.21+a91ea761",
        "@opentelemetry/semantic-conventions": "^0.17.1-alpha.21+a91ea761"
      },
      "gitHead": "a91ea7617f288af632934334d0c8ecece318ce73",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.17.1-alpha.21",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-OWCTghXpTDo6DT1jOkPzD7yBrQlyKfkwLZ40NxV/UxoGkTTb9JZzZmCyc4tbzEVVHp3sbPqPo5HP/hA3mFni5w==",
        "shasum": "a0be292d640626af3e76955c0288114b93e371c9",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.17.1-alpha.21.tgz",
        "fileCount": 42,
        "unpackedSize": 110285,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgLYfLCRA9TVsSAnZWagAAS50P/AoLZ+YMaBF2sn+ej023\nWdizCwCH8rIdmTAwxc7C/w0MtYBOMEqfFe3gJLzwbLwEqx5hs+kyMkn5TDoO\n0mfoG/FUk+ILSw7/HxoW4i3rwTyw42vCmFgmMExdlMfZFONdAXT3QleAeRJc\nTYSvZpWc8r/nw4PMbLM5Ru16Dlnj8Rx/hWheCS9BeOnbrJy1AqoaFOUwu4BL\nTr0Ffmu+h1kv0tcH7fq7m3T5FQzZlQVi9tEK3Jx1cs6HYuDkcxhzd8QRnSMc\n7Ia7MSLNy1acFMPTJUbOnYhVBHpGO1XrvKGHjDw4Hc6wHgTAEZAtpq4W1FAq\nP448+DIBIdOsu8Inyn6UlyKJy0Kh5y95ErLrbTzL0gnBCd7i8axTk7h5JKuh\n7aPbNdMGXZbr9Le6xBD9FwuILBF7wOcSkuaRPhdSj5tSsWJrQEeipPGYxGir\nY/CcG/+h8QD1Kgluns/qadYUqjPbIwYsZIGteE1Egvp+HLMAg+X0G3FtDLXs\n+S1hC6Kg6pf35gXpOAVFYuSl/bEmVA8/OfL4uBOJOVP3rznDaiGLv3fkPztl\nr9r8fAHTc6QPjq6m4F9+w+2EuXOtaj/T9WXK96TFf7/ZN5F5p1/VsZOOQ8jZ\nEtFRACrkcOcaGBLj3i54R521UJE1Iv+O10QWwFuBn7VNo3hj1pbUGNCB+Tz+\nVW0A\r\n=an9p\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFQPLyihnQTy2VPF3AZjW/1j5y8CUJuRj+fCSNbWgK2uAiEAkbNlIxTU7suOkSmX7DD1JRKdGgq6vqC/h9HxEqUyfrE="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.17.1-alpha.21_1613596619116_0.8662168156863914"
      },
      "_hasShrinkwrap": false
    },
    "0.17.1-alpha.2": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.17.1-alpha.2",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.17.0",
        "@opentelemetry/context-base": "^0.17.0",
        "@opentelemetry/core": "^0.17.1-alpha.2+38d1ee25",
        "@opentelemetry/node": "^0.17.1-alpha.2+38d1ee25",
        "@opentelemetry/tracing": "^0.17.1-alpha.2+38d1ee25",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.17.0",
        "@opentelemetry/api-metrics": "^0.17.0",
        "@opentelemetry/instrumentation": "^0.17.0",
        "@opentelemetry/semantic-conventions": "^0.17.0"
      },
      "gitHead": "38d1ee2552bbdda0a151734ba0d50ee7448e68e1",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.17.1-alpha.2",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "lerna/3.22.1/node@v14.15.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-SCwYqGf+ejMCazpCmMTC7J0a8xWQaAGkdJB0WYf/hYcNw2n76VU7TVB9qzq+p6Ksq2CXwh3x2boIW+DlyPFwiA==",
        "shasum": "00231559d6c3f758217090b8823a9514b7c8fdea",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.17.1-alpha.2.tgz",
        "fileCount": 42,
        "unpackedSize": 110173,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgMUjNCRA9TVsSAnZWagAAwXwP/3pAP8lYlh1Gj6VJqfDw\nr+9RBzVPZNtLAdaz3pFbHXeLkjfIacx/mPnKIhAWiCB+xnUs29KXfiQ8dVrf\n2wazHDxjFBDpB6T4qeHa3DtdJhFr8D6tSCwTsBO2QPvIzqwSx1QJO+udnEDP\nn2tYB46cfGadvvMCfybuxUvWSRdqnAUhoswDaKc2OhGYlbNsNO0/X/iTParo\nw0hBhV3Z/5yL+7FT6It1TOJHM+C4p6EKLMt0Hyb67oQALxFbi4W97eGPqT0+\nekh10jEDpguHYzfmQMxUij8ELip63LzvGAPuzsVfReChAp4GtAVuzp77QdpC\nZXnvEEBgOh+hGZxCEt8PRkNOw5fDd5tCOuKohwR0quTsSmjWHy7d4snw63FV\nnXfieQyEJZK3Bs1j2C578LwbCp+89tRuxG/L93a8YXNs0mvAp6yE70UaZ3aa\n/WNB8jelw4VWlhEZYcypGjIsRAAGWYvMxGtlI5dvgkDeV26RLUTQrjj9kRBH\nhrbqK6Ts/bVkMrjbqiThUbt5YTeJfhOY6mNaZSTBVMEd2owGf5GLvn9IIaRe\nalSSKFLJqfDlB9JX+iFS5ZzycIsHtMNntwwBijn5zoLTO+1MVWeoKb1YiLav\n39siP8EcYyEn3XZrqyyjAkrdeWsvtl1pwLBHzam2PthEab+ihzBx1zoo56BK\n9Sxg\r\n=MqA0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDrLslIePqu3PC1/SIeqUSDLxBh4uTxJlKyY8FXKK4eOgIhAKFC5PcpIcsYds+lelEfS58hlQSvst7ip/3OvgzUVpRZ"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.17.1-alpha.2_1613842636756_0.6258818257055672"
      },
      "_hasShrinkwrap": false
    },
    "0.17.1-alpha.3": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.17.1-alpha.3",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.17.1-alpha.3+9437d7e8",
        "@opentelemetry/context-base": "^0.17.0",
        "@opentelemetry/core": "^0.17.0",
        "@opentelemetry/node": "^0.17.1-alpha.3+9437d7e8",
        "@opentelemetry/tracing": "^0.17.0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.17.0",
        "@opentelemetry/api-metrics": "^0.17.0",
        "@opentelemetry/instrumentation": "^0.17.0",
        "@opentelemetry/semantic-conventions": "^0.17.0"
      },
      "gitHead": "9437d7e88603e9cc4e818ba7cc90de32832ea284",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.17.1-alpha.3",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "lerna/3.22.1/node@v14.15.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-TWcLNjFuuFzKqGUQfmyORhen3ibj99K7Hjvxu9wbbMLnA/9xSSSi/MCFY2hR69iiLZDPmQJFXlDW5whZNj1A6w==",
        "shasum": "6d8a814fa68d6bd9a63b03c916f8f411b969ad9c",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.17.1-alpha.3.tgz",
        "fileCount": 42,
        "unpackedSize": 110156,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNBi1CRA9TVsSAnZWagAA2pcP/j+yFAxWREkYfXN6qYK+\nLhvhKMHm4hJiahBluSc9um8U0PJ0TBUeJe7R1tcHuT1Ccd2aXKDb7zaHZGox\nWVo16bfCk0zM7+rBx5bGm0JiMr4sIz2FONbC+naZ0VqT6vr6cSkiBKtMV7f0\nv6bUgEk0o6FRtp43yyF/ekfioY84tVTnCCrJxT0TIJFi5BTIhtrYvLGPAuVR\nxFLrMZbYTOIjvFRlvJc/ZnIHs4wqXeaEjEmh79OTakFT0mlpdXD0re+ChERX\n4kDA6djel6/oM3KPbc7Wc9HkBLqh+2W4os1WWEG2faA/wWOolIj9VPjAqge5\nUyUdXdOSQ0dxdqpw4ZsFWxhje6GPw23Cw+ucF+dvg3zvfCjJ+cHJCu+xTiG2\nGDZxQImdsnnkCJC8jpGV3NnXnlWkzgopKe0BATgjLMeiR0zzzcDommIT8aJu\nYVpz9YPlRzIjI3EYycycIV532/6N0RVW7CO7tMKtD8Ddz29yOjbsYCZQezaT\nhI86h/UmDjeIOLXOOVgkaqh04A1/E1ass/5syHy7wlL/QzDaZaQpILzuRL89\nAusnwURQblVgRpheI7pGZiuvLxu9ND+Ci5cbnSYYRB/3Ml2ONQcRwceXJWGY\nQGueiNKgW0G/SiK1+8gAJdOYd0uBuY587Oe4JGL7eSxjsw4OeRtrYB5loAyd\nuSn6\r\n=Ce2T\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIApZDE779Sf5feH3rgwi79aEyjBFf4SFPZPKIdhVB9+AAiEA+FB7k81mB9/zgXlYQLWWDbfJYoOW14IwXjPdzJ0jEb4="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.17.1-alpha.3_1614026932819_0.24744545495773518"
      },
      "_hasShrinkwrap": false
    },
    "0.17.1-alpha.5": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.17.1-alpha.5",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.17.1-alpha.5+36ae1bd8",
        "@opentelemetry/context-base": "^0.17.0",
        "@opentelemetry/core": "^0.17.1-alpha.5+36ae1bd8",
        "@opentelemetry/node": "^0.17.1-alpha.5+36ae1bd8",
        "@opentelemetry/tracing": "^0.17.1-alpha.5+36ae1bd8",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.17.0",
        "@opentelemetry/api-metrics": "^0.17.1-alpha.5+36ae1bd8",
        "@opentelemetry/instrumentation": "^0.17.1-alpha.5+36ae1bd8",
        "@opentelemetry/semantic-conventions": "^0.17.0"
      },
      "gitHead": "36ae1bd89abc2e2cc7f64e4a35a94d7e75a81d0d",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.17.1-alpha.5",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "lerna/3.22.1/node@v14.15.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-01A+bxjGnX0bHWAsC694ejpQ8hAghzqdq18zbqe9wqSWojeHV042HoJ3si/PwIpzcy98r3claKfscXhWeCxnNw==",
        "shasum": "fd495b0c5367eb2700e031ce31bd9ba72e4d127e",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.17.1-alpha.5.tgz",
        "fileCount": 42,
        "unpackedSize": 110224,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNoq0CRA9TVsSAnZWagAA8IAP/0wOMhyrAn03UykYqTEU\nFDisarscnyGKUXHEb2F0Uzh364wR86NJfFRKnOs4S6AoUdNWfg9wcvjEcrsb\nLMiV3NFqEOp7sk571FyX6lZ/itphPouo4Et/vAE2wZVowMBh+Bl1W7hUCH0z\nzHn6Gmw8bl7hn9WcvKONhMXVXCA9nvDvB2kYMoXU5i78N7WjGx+lbXJRdr8L\nNKhK5hLItx9A6EHP9DItT42m0MSplanKxjQYP+vRZbgnXsQHO6giigCZMdNs\nT0n097IRytNdC8tPGs72hbwf/blHkES6Lv6wLMOwHcbOZhqMedspIdtDB/Hb\nFSmrOKX8SxXggvSAVL9lFwscOkEAgje1c3lk22n9UTTmyawOJNHDZ/siu3cG\nJRqcs/2mIk1bt7NYfsoNxkkrTc8RFnUV2a9eyZTZa4qBm+YD+3/+IuJPqerS\nTNQKGnTAM4QWWBamG6CRprQt0+guTIvhdNS0Yp6/Znq9LzmBI3EQmOoWssz+\n4qxQl2D84fIEKMrpt2ffyC3wUIFjhkb1ufPVFl3Nym63I5Nynr3YhFTF4XiC\nRZuECnY16HHyD2wPH2rDSv8lnAOg0Sjds+WVZ13TeaEGXMFiswJfFUXCzHcs\ny8ggNGbEFy1EvM1Y7Z9CJ/waLcID9Pe+DIk/apU+G3rGdxtM92EvuM4EXBeK\n5fI2\r\n=tcNp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCID3Ket0/3ZeTMeV6i3ZpEtqGzjbhngm24rtSrfmi6TC4AiEA1SdCMhmIRV7Y9ZPj/MuemyqjUTPqeKKQntIOChcgMpM="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.17.1-alpha.5_1614187187910_0.7891039655836476"
      },
      "_hasShrinkwrap": false
    },
    "0.17.1-alpha.8": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.17.1-alpha.8",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.17.1-alpha.8+67f7e70a",
        "@opentelemetry/core": "^0.17.1-alpha.8+67f7e70a",
        "@opentelemetry/node": "^0.17.1-alpha.8+67f7e70a",
        "@opentelemetry/tracing": "^0.17.1-alpha.8+67f7e70a",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.17.1-alpha.8+67f7e70a",
        "@opentelemetry/instrumentation": "^0.17.1-alpha.8+67f7e70a",
        "@opentelemetry/semantic-conventions": "^0.17.0"
      },
      "gitHead": "67f7e70a3de005484d3e110b06f6bbee75b6f8a6",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.17.1-alpha.8",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "lerna/3.22.1/node@v14.15.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-MAFLfQb4Y+9zt5RCX06lweKYEOcw/1264bkxPTVi1wK4orbVjUNyp1o7SlKVMtGlrCJLd1ot4UQEzPgfskmp4A==",
        "shasum": "04cf4279f87cf0c893feef6596f6750da7d8054a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.17.1-alpha.8.tgz",
        "fileCount": 42,
        "unpackedSize": 110178,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPO5RCRA9TVsSAnZWagAAIzAP/jW7XNpl9Vm0eAz52ti5\n2at3qirlStj7n9Rw3OLsAOT9Nh5B02fo4LpBpeS8BLGJRBQiG3YogrhILmdl\n8VOMC+bHclT3FOpdhcU/PIL4P6DSQN6QvKul79foZU94J903KsBKn9dL6v1Q\nkYBWfocka0tk8W+i5Cz+a0MNoET+AqSYLp3r92fNwFstXAXVzKkrN+1ch8fz\nULJ58ZdnXyrNDqU0UmVCmkjf7Kp8vHZj3P/3t9CtbSwufT//07BVLekh4dOu\nNpoyZCgkJhlssZlDTSdtJKYEX3e+6HClL2ucMvcTOCMR2HBL4tVZDzfN7M8p\nZabwxgX/v+vC768qcz5H5alKAUnk1UhhUDo+SRc1Il8BmBPSBqlQ7yI75mah\nVH8zxogYfVvBz2/sgABleGIGXZVDot83lO78fqzjmSHrGN1h5vaiuLqy7Zfu\nix1slvscyQzCECkAFhA7do/cF79SKyoIwTDINw0Gbc0daGUqfS6tcH3Cf0d/\nA8rgAECIJVH0L2Lm4r5GhDiDpJq1Mb1wbuSNAe7IIPRc4ukRilWDoQYuCiua\njm3t0Sw/2el5FxjnluOsR1ezEz1ruGUmxnNzFriQE9qeTc98fmxp6oPiQDYP\nHxZjZ4H7/VAni8NTF5uFJbpuIVu3dYZ4NLGWCVrdy6kHgYtczqviyN0ka+pA\nmBLd\r\n=OskI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDpM7dOkHzTUoPBCxGA05aMvmJppOWDL4k7Swh7FoZG1wIhAJHqD40v8OsBOFAcU9owVmCjhFw9+7HAH7YS3Bks4Saa"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.17.1-alpha.8_1614605904611_0.5280292889175395"
      },
      "_hasShrinkwrap": false
    },
    "0.17.1-alpha.10": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.17.1-alpha.10",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.17.0",
        "@opentelemetry/core": "^0.17.0",
        "@opentelemetry/node": "^0.17.1-alpha.10+4c609aa1",
        "@opentelemetry/tracing": "^0.17.1-alpha.10+4c609aa1",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.17.0",
        "@opentelemetry/instrumentation": "^0.17.0",
        "@opentelemetry/semantic-conventions": "^0.17.0"
      },
      "gitHead": "4c609aa13c899dd2b7a963d2e3e491bc35ffb742",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.17.1-alpha.10",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "lerna/3.22.1/node@v14.15.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-+caA8AsidfQNfpR/Sf709BrsZ/hl1V5r0/UJ+4Ci6kTXTzyEYXKomVy1Do5HrHB8rWIbMAYUV3trVs/P6vXECA==",
        "shasum": "d6fb8a999f45b09e08d2f3b7e8e6868b505a8a26",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.17.1-alpha.10.tgz",
        "fileCount": 42,
        "unpackedSize": 110113,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPjv2CRA9TVsSAnZWagAANHsP/2CftOUUDCDN6gjDmAnv\nyk5fPSFFjdQ2SrScWEciy4gV5Q/hBW6d6mDna2WGiptN+kHA7Vf+aC1/TUPC\nG5IJ7rEc5jf64nTrTVz2jymBjhYF4cYXiDwQ8eUWMr+7u4tVhaxFhCfDO1qI\nMxzEAkd5VzcsCat2JMQCRik2zB0X458Qh0RmIhFxA/P/zkw2t3iWRgZ+/KQv\n/m1Q3UuuYH8wjC0Mcpp20rGdlicg1D2ehbE+HTk36BwFoMZrcVFEvFT8RqAL\nwZQ22it9u3mfbcL+i+5shkbgWShn0i3MqqQyUEkbqXd5r64w+NxwAZ1ZhGiu\ni/Ml8e0583KamEPoCBKBG0wws32g8EeqLffIDOks02COLWg8ihWc3/pUeBWn\njvSvp9DKPYNANoVa6ELdW+lAIZdkAIYf0RyNybvSnfR29661ha9B3H0CPbRg\nk0FIegx8XXFGgZUe6wP3AZM6zPp9I8o9J0ee1qX8lvii56STMvmPjLsTIDmz\ngvdFEyu1Mup2Zt6K9+S63rhReV/wHLd9/NlcH/4lBohIMFwMzuHDQLhMLsVW\nHjooEU+/pvqaJUJ5B9jSwRFWuqZAELDUnEKYFCpqtZLexiiM73hdVycTPJrv\nXbPYsXSxRymBYXZwPKUIXnBTmmYHmxm7etd8N/T43MQaj5u2FuAsC0f7PwqQ\nSVnG\r\n=nwlg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHA3JUgcZyW9ktc+QYHfOr1gaNu59kxKIZ3t1+YisURxAiEA/77AQ/d0Nu7FDJUPx8cyNDfKFlEES9m/ywBAyClzEmE="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.17.1-alpha.10_1614691318300_0.3206835657695406"
      },
      "_hasShrinkwrap": false
    },
    "0.17.1-alpha.11": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.17.1-alpha.11",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.17.0",
        "@opentelemetry/core": "^0.17.0",
        "@opentelemetry/node": "^0.17.1-alpha.11+41235a9e",
        "@opentelemetry/tracing": "^0.17.1-alpha.11+41235a9e",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.17.0",
        "@opentelemetry/instrumentation": "^0.17.0",
        "@opentelemetry/semantic-conventions": "^0.17.1-alpha.11+41235a9e"
      },
      "gitHead": "41235a9e68b13050ad49b8d6abc5c868885a74fe",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.17.1-alpha.11",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "lerna/3.22.1/node@v14.15.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-eLh3JCLh/H2I7vpzoRhhBE0o7Yxqa05Eturqq/DWo7JxL24gonceB3eKxau78bMMFCoelkDLBzteIF9Cu8FQfQ==",
        "shasum": "3c00333e13e6ad2d77d0e138eb877ede69935166",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.17.1-alpha.11.tgz",
        "fileCount": 42,
        "unpackedSize": 110131,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPj4+CRA9TVsSAnZWagAAX0UP/i33jxyyaku46LX37PP7\nusH4f8To5AeaWUk5PSuP/W8DhDaVI0dkYZgHBJ/iyZRTnRv/1L6XvaHE6dPF\neju79UjXqvG0LWFbgnNiQ9+kSlQCPwTPcpqpMw3rlVRCITWK1gYEYW56LWeT\n2yIUDiXaN4SVOLeRabVJO1QeQuoAmO0THlAeT+w46PzL1K9sriA6Lc9AxwBc\nY4qQPNc9qJwt/tsRjeWah+for+NJu+XYA7tydYvrn1zotCEM0uqx1/sOgFEj\nAUDz2jAou+mJT24KnNd0HIZVmcsrpiQK8AgIu8sGVPCJCmvG1iVcr3lyBKPI\nXTLM59hiWs/MAEXEnOAkcF1RAVaIhHmJxokmqzX0V8fG7Fjh/ZiDEbZE/4So\ncC87AsXt/vvdQ864jH+jhY45jFCgKoLWmKHOr3d7u/0PHaVhBy7HGXqj33NK\npHvVNjud8A2XCgcMlXbhuNI5G1zUSpG3CVv5eK9dVSLW8gsCQg5uiSLKziWO\nVCvCWO+BLtXsIDMAd1PExUwY7JPpnzvY9GKKSh9Ek2fy+nFSvkS2zvBT/i/z\nVTxMXBL3ZmM1WODEujO681sAC2n6xrYCjtx0fQ4gG1tT+Kl3EezvuctFoDaY\nlfkZ8wp+rkthIWoa++Mpr4ThBBxYaWs8o+LP7MYHEgQgV0LvJBUgGqwTrHn3\nuc1v\r\n=oQuo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCBFjWuj/emM+oEbLiwvUWE6hivev/F9FwKhQXe8IijRQIhALmvWDrBthGN9YS9h9N2txGXsvvbAKOr5Ol/n3cLmT94"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.17.1-alpha.11_1614691901744_0.9378072047255677"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.12": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.12",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.18.1-alpha.12+6540b54a",
        "@opentelemetry/core": "^0.18.1-alpha.12+6540b54a",
        "@opentelemetry/node": "^0.18.1-alpha.12+6540b54a",
        "@opentelemetry/tracing": "^0.18.1-alpha.12+6540b54a",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.18.1-alpha.12+6540b54a",
        "@opentelemetry/instrumentation": "^0.18.1-alpha.12+6540b54a",
        "@opentelemetry/semantic-conventions": "^0.18.1-alpha.12+6540b54a"
      },
      "gitHead": "6540b54a8bd49746e164ab730269188237f89b1c",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.12",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "lerna/3.22.1/node@v14.15.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-1OmuawfZ5Rojg4Ux8ZVQMYOcdR1wVyJCjDUwfystJ4zTYdz0pigInacFvF0XHptVpWkUmi3VrNFVR0MXtxLPkg==",
        "shasum": "3ad597a83d210fa4aaa34106ac3362c8fc5db1ba",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.12.tgz",
        "fileCount": 42,
        "unpackedSize": 110203,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPkN/CRA9TVsSAnZWagAAUm8QAIwjSDhGnAfJO+P74kcF\n7l9DQMkDLor+IhncB+Jz7SmnL4u8qESnYE3bG6ELbenhKsRcgHK6mJeATETp\nypB9kea3Hyyp1RBOMpU/7fzGRwM+kv24RAGitWNk0gCTQ+TLdXqp+0lj3iwT\nHjosEgNwjYWpOJW49Bv2yOeBB2QacOaREljIy+zmYJkhJpHIMTPOlOLP3fys\ns01pr15Uvb0Zx+zWOW60OvYH2nKdb/mpq6Gkhe9oZR1nPhaw0wEd8cM8P0fM\neL5jDRkHAbAOL6R9xFxi5N0UW3KJwK/QV4NiHipC/tupiT9XL4Twmi9aLf5M\ncsHCLHKair6DMxVXfFKEnVHq37h5Wkml8r0cB3/Sh95CU5gTTwq3Xu4nmMtB\nASmJssb55M2S94t9CotGWpyeidLLeyadnF3Z/qZeDgcInIgv4x6dMyMN+f9n\n83HsEQWZ77eCdlblFAWXXv0KgZp7QlpzCwtdbWS7I/0ezMDY+q4/jFmsa0AM\nUcBznU3N8oHXVRxwCNBPBraDWXeu6s5cSxzvjp1EgFJNZ+7MUt+KlQnCi18G\n6vbmHZoz06dZCgCuD2Ojy+/sYROSfFaLGmpkqSsTksieFtu/DZ6kKuTxybGv\nxRoxsG6oWFNF+r6Hmk1GgBmmpneq3jpx0L2G37mStzCU0tL7BHFWqwIvG2OF\nIwJt\r\n=Xtj3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDvFaBWvYU2Nk5t3Uzlyb7XAZVYjiHWe55saz0z1RmTQwIgDA7niHeu73wU7XkDht81bQyJhB3o4pHVSZHUj9HAvpo="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.12_1614693246555_0.37372063782787435"
      },
      "_hasShrinkwrap": false
    },
    "0.18.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.18.0",
        "@opentelemetry/core": "^0.18.0",
        "@opentelemetry/node": "^0.18.0",
        "@opentelemetry/tracing": "^0.18.0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.18.0",
        "@opentelemetry/instrumentation": "^0.18.0",
        "@opentelemetry/semantic-conventions": "^0.18.0"
      },
      "gitHead": "6540b54a8bd49746e164ab730269188237f89b1c",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-dnFj2mBaUhtasUMOQuGCKJv2SZN/q9d4rraVIXBErzg0G98XuAzjhjyqtnWM0g0xn4FSOenAmLsIQ8lU60yxtw==",
        "shasum": "3c70e7fbe18fd15fa3198f0030ad072080559cc8",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.0.tgz",
        "fileCount": 42,
        "unpackedSize": 110059,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPkUkCRA9TVsSAnZWagAAFXEP/1xbvDeHNMoPn4QJ91wR\nvVi88clZCEZLfZ8GWVzK2K31nwx9pw+wLqIf9Ep5jjkVnPIWZNBwDTn8m6/E\n5z3Sj4mQ+NBFhVhvoZ84sdVWG2H4vC4/vSEZKm82rwMS8ZaCg94A3DfvOELR\naS6FeaKr8i8HvYMIsIkl1SVlizF2pUFFGpL0SAwRaV8ssY9TT0tI+obiYDFd\noWhZm2LPyXYNbrLpk3X1bQ3C2dFwQDJWCh5W6maVhTl/uORuqFMIjR+GkkPy\nNIjkuNI20Y/COgCLjwkzr0c76EltTDLWz2S9d8oJnDAOp0aMwUwXOgkZrz5g\nOcbI5QqzG/qPyVyG9sXqhAvOvevTN9Zwmy1KlCWn0lUW+bVkIwy9D3t5puo4\nEyvKmS8mN9ISmKi7Q0PZZr5PPFtOslX4MsUF3gf7SafU3fFQ5dJkKhrof5Bn\nSSXvmFOmhQqvezlbdF+oPrR8AglQqBLNPkQtagFN5ddZ/mx3AnphAZqrA6Ef\nOVYSt/SLlTNAhAEcx7j+Vmt4nkxEdsV7SaCtO+JZ/UEXGMKQ/Lou+fUvO67G\nHMrNvEaz/FwKukF+OiaEHTr7iTjVUzncj7EXdlnt4eus1gF+T6VUHfxUYPwN\nIAv9w2sdAYDaU1FTj2fjjVb+79aajTKNPWv4kw4SHeIRXODnj/L0Is2oObbS\nl6zq\r\n=xmG3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCxQY8/TmxPKL5R3BenKZQtwgGk5BWrKYn++FVZzdDswgIgJbu4EMhFJzCd92YNfUb7mvhYxBv8LcRy24KuwlC8Akk="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.0_1614693667800_0.6576486430195594"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.3": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.3",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.18.0",
        "@opentelemetry/core": "^0.18.1-alpha.3+0643642f",
        "@opentelemetry/node": "^0.18.1-alpha.3+0643642f",
        "@opentelemetry/tracing": "^0.18.1-alpha.3+0643642f",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.18.0",
        "@opentelemetry/instrumentation": "^0.18.0",
        "@opentelemetry/semantic-conventions": "^0.18.0"
      },
      "gitHead": "0643642f61de5e2bfb8942ce7b5dadea643cb295",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.3",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "lerna/3.22.1/node@v14.15.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-lDbIIwIuW+YLjkMGNGP04NVtryib8WXWNsGEeXaysRyQBYM4eiVGoznwB9GJ4DHDdxl6ho831+3acdryCLjPKg==",
        "shasum": "b2b8f68141a4edbc39d48087973c6ffd65f1ed36",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.3.tgz",
        "fileCount": 42,
        "unpackedSize": 110127,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPo1eCRA9TVsSAnZWagAAnb8P/A84hNvulKQvShX9yrPc\nHS+YcmPnky4hmsMQ4zwmQC9yRAAPzg+tdYF+V1O/TsUe6nncmmHoY3j4KNi2\n1j7tntY+rqR/j8hTPcDZGvOXFj/k/5zJAz8SZUyE+4901I6iopCOsSryPxgv\nQYY0ZlzOAwmxnqc2CF/Ewzk4TeKpS/m/lNljz2Mmg/iES/icjJx/4gnWjV1l\nNO58YUwEsOHVRVFOjdxtQO4wlroMnAMtkDF5sPzM09QryhZ/g8EI3PszQhGK\nxCi2Fv2+v0cAZRn5DlcWq4osZ7+FRgnwGylvY+/1G5jI/W8QUTG5hsoSURzI\nwhynb1HYxeHVfsS7lo+ZrtwSQ4ntk9s1WOsIdpCcxjOa4HQ7MIfhy5GjRAXI\nGwaQ5p/E1pQFDvgWVu59zvbYDoLukg9EdysPuAJf3xYGhIGvT46kOgcdalXI\nkF94r4ileuDJLXr1q47n2T0JlEtlWpLdY2nP7Ggvd4hWVR0t5gRTWT5gDNUS\nNHYGIIi0mOLl8/wk/lqifvm7Ae+JQ2/EVhtnXtHg0H4oYBNaOyUCrVzxniak\nSAg9qXxgkVozerS02t26Bxkvznym6U4vOj0FGtT1eyihBdpsSfDXpM8AvvS7\n2yUJVO35tIdI9WgdLJwr1FNO7Tz59VVq5TmfFE+pF6gpVPjSg8FpjMKBFbht\n5+2p\r\n=iIfs\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH9CS8t724LYJAjZB1mho+zMLeox03N1zF32tkbIbgNZAiBkfciS5DNq1JRUMf34WxDfKgLrBLBKlPeyh/evglGCfA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.3_1614712158012_0.48065385578864683"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.7": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.7",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.18.0",
        "@opentelemetry/core": "^0.18.0",
        "@opentelemetry/node": "^0.18.0",
        "@opentelemetry/tracing": "^0.18.0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.18.0",
        "@opentelemetry/instrumentation": "^0.18.0",
        "@opentelemetry/semantic-conventions": "^0.18.0"
      },
      "gitHead": "60c04b1be14c584c457dd081b770bd79e026cf08",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.7",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-9jQv0Sj6nqENst4H2ldGwOWCH0yHi3QomX3aOHrdnyQT6CX6tInw3ll8LdJ1AkiJe8wLmdzQL0YJba8zxLJcHg==",
        "shasum": "fb29312bd055a19724df3cef24c91bf4878a31a9",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.7.tgz",
        "fileCount": 42,
        "unpackedSize": 110129,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgSRCBCRA9TVsSAnZWagAAPqQP/jmiu5CF/fXh5T6N3CDi\nHuMNTtOrcY/+a8WH9ZxcXrxBHFBsUQ92qdzXOY/kS68loeBkxmMyY6Wm9DSO\nPQ/xbdV0Ns9DjtxXBx7Nnu7fbHthtJj3ZmMNpjoz7yhPn2t5k5mwbD68buiR\nN6hSaFqX5aHPnWSjlElf470/fSh9liyePjnQUxAYShzmOGX74WLRC3z2wozp\nKkp/5eGkRL3amzWwHGGjFn4brMMPTA0GLjU3E2TzrR5G8CtkDILKj2N4w591\n/GmZJnMOkiTdme02ZZiFVijwyZZkT9ZDTi/URphX1RFIrvWszkPMumQNvUlU\n+pg0BLko12CanZ//1BB1SyT4Jggh4q/7Agcnm6dfTqC6agJdXJ0LzE5ZPpAr\ncZhAtJ/Yqg9jhocRXus52hpdaKI+0HlyxPkaT+RzfWdwXYumaxVTmyyI0Sxk\nEpgXoWoofvXrrsHMoODpZsQBBckqsVaf8dhNeURXmXbfoINPSUk7PmhhXMNz\n+G2pJD16NVkcNEt9AeHbeBZ184SRzUdhXuxY7T8BQH5mBME/GTIHOR+aEQBC\ni7KTRtTSTJWAFYuEKthSZoP5YOyT1qvbWVAKczhogBzSnxl4RH2tdxSUbOwZ\nXqOIccchUqwWr+2MBV9rCoS0gFMYEY4ph9CgUc9ZiNJ4emQde4vg2CjxE9Kd\nCBs4\r\n=0YlS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDg28zW0nuBGwA79eQfWX9s4X5v7YM1EZWue5gLT4SnAAiEA0LiFAMvLAZT7IEbKgA7jjybrcifcH+ahhqNrB6WFPjA="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.7_1615401081351_0.49591794558507485"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.11": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.11",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.18.0",
        "@opentelemetry/core": "^0.18.0",
        "@opentelemetry/node": "^0.18.0",
        "@opentelemetry/tracing": "^0.18.0",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.18.0",
        "@opentelemetry/instrumentation": "^0.18.1-alpha.11+0c7fef7a",
        "@opentelemetry/semantic-conventions": "^0.18.0"
      },
      "gitHead": "0c7fef7a80834e60a63ed1d2547b1ad0bd5d4e88",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.11",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-lfGLpq+Hln3AMOsMEtWP9xtSAo7lL6tAcVBEJbz+hl1SlmbXLG2P1tQmV0HdDM47p/rK1EM7+5i/lB+yFtc/fg==",
        "shasum": "3256af0cdba61a2236d2403c4abdf5f161549dce",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.11.tgz",
        "fileCount": 42,
        "unpackedSize": 110148,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgS1YbCRA9TVsSAnZWagAAsQsQAIITMbO4IpcumwN+kbey\n1njWeTMYbckTLXd/D3F8CbeWkqJWcl4m3UhWkj/5raY8sKQp3u5Z9ZwCardX\nrxCXRILuCihsE0g2bUEnON/X91bvOErWNlMZHAZfCtOXd5gcDJPCgecQlcq7\nvZLZmuwXTSpM7dkYs7/zSsMsTANaPWT6K4N/bHQFuieUiQ0hRKNOVrrgq49X\naMOd9wBUAXAnFEk1zM6wwrAuJLaZhZRWKAZUJdmQBLuotS8owFSUzFQATRwr\nq6VaHm+Wc4XQq0294FcqzXWJ1sKWdctkcrltH4dCrbuU32D8KIg/EvmCpX5s\nXiQXR4ywUauBxIAxVQ3WmjmJMzHe5RxGUe40loYK88SmmdQ4bSIVrf7jqX+x\nZ3HMFwBRvu8Ceo8QWBdFu94Gmi6WVESq2QrqGiE74p/0tjfjvUr8DF155uJ6\nUqR9lzhQQsqiQgDjkEa3FZe+DYtAi0aOxXuzUT2K+0o04xaweOHaiId7xodq\nJmd9/MuxtF3W39YwkLj/p1p2JSFJHU98FVm10I0wpLdET4B09pW+wZH9yoqq\nyX8oZk7esyJxRNWmhw9ZSd3bwBE+zrW4HzfiJUnKYNnMAiKRkWev5z2ZXK8P\nc/KJ0Q73aqGc6895VeuDULuGXmK++w1D+R1NluFGnBcwXrkIReJN/CA7qmes\n0Mxo\r\n=7KpC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHg2LBkq7lNfdynn4c9BNneix7iSlUhyDhXMAxQpbLQ5AiAUtB6Nv1Vsvk0wm+eHaOztWcv2ACxQ95/Dw6lnx6Ea9w=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.11_1615549978763_0.8687958810997882"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.13": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.13",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.18.0",
        "@opentelemetry/core": "^0.18.0",
        "@opentelemetry/node": "^0.18.1-alpha.13+445c39fc",
        "@opentelemetry/tracing": "^0.18.1-alpha.13+445c39fc",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.18.0",
        "@opentelemetry/instrumentation": "^0.18.0",
        "@opentelemetry/semantic-conventions": "^0.18.1-alpha.13+445c39fc"
      },
      "gitHead": "445c39fcd54675d455115e22605b6cf3434eb071",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.13",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-bNZeifQHRFcHonn3krAdougEyUGQQAGcFHMwKEgc/KeI0H1XCcOPnX2lfJOHPciKn6td75GHMixpUrkiCh0H7w==",
        "shasum": "0902f8e935deff1845d4c7713fbf8b3dc9ec18e8",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.13.tgz",
        "fileCount": 42,
        "unpackedSize": 110184,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgU38OCRA9TVsSAnZWagAA8i0P/RUsV0cIJVcPOBs9Z8Mf\nb/aR8kXuJmtcfXD2F/bq+ZdZ3Re8S3piHaA+IX5qy+K0o5n8pmuR6YfeosR+\neno5mQJP32v75LxIr8/qCE7vWejb3G11s+GR1WDYLkMSmdkhpz7zJdNtv6NC\nMpRDSf4V9lG5FXfjIe5j3U3+Ho+YW6IqfmVVMk1P+YwdDg/vidlWuJyrchbM\nvaGfemaT1Py6TguTHUMRW/jszqDK8phgZNpsajWkNTSGRpsKaQT6A9/zgds1\nfBN9iEiVyXr3Rj9VEAEuUJyuu+SJXj3P5axv646pr9rv/R9fJ14vtA1A2b3O\nEjEKqzAt00ceXb9Y5a/cr4GtQB1CTT+heGlKElJY/aKgCZ5OnJgfkHvgdkBJ\n7wn2Len4oiaBV3rImA4N+DYE5p3S9kUvdtzytNuGXvE8WlR0sjLfdJlK+Fms\nH0/rpY//7r+Nmdf+pdqGjcpy9Q3XczarrAsJfIs5VhTLxyZxQ17PNs13tp9H\nDQciqZIuLwsHkjzzEzpMXr9mqfZvHVnUxRJ4Ivk5UPV16Abb3+efkabB/9FS\nsbh46vK3G90dP7UTPbC6zMakbNmF3l4NlA3snuPfhSnikrIBZkN03NtXqb92\n7Vx+tk5cytNu8bzPGD/3PcldB16uQQonLbqGnUbJ6cCelYh1CnzXh6Tqr8N6\ndK7q\r\n=EJ7u\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICiAqZfYRFr66Y4OQa4LbsnoXHFKpn+q4S9eYwu2gW1QAiBX7eqQ8JkCaX7jBJte679iyMWrVFDFf75rjJM1kCIjPw=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.13_1616084750010_0.3182897815713539"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.16": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.16",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.3",
        "@grpc/proto-loader": "0.5.5",
        "@opentelemetry/context-async-hooks": "^0.18.0",
        "@opentelemetry/core": "^0.18.0",
        "@opentelemetry/node": "^0.18.1-alpha.16+f045eef8",
        "@opentelemetry/tracing": "^0.18.1-alpha.16+f045eef8",
        "@types/mocha": "8.2.0",
        "@types/node": "14.14.20",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.10",
        "codecov": "3.8.1",
        "grpc": "1.24.4",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.4",
        "sinon": "9.2.3",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.1.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.0",
        "@opentelemetry/api-metrics": "^0.18.0",
        "@opentelemetry/instrumentation": "^0.18.0",
        "@opentelemetry/semantic-conventions": "^0.18.0"
      },
      "gitHead": "f045eef8b02e6dda452aab3cdbeaf78b225c2fd4",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.16",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-Qst67VCBtRWoQgreLayV5A+yWBAPcEMJB57Uct0lLRoGpte5F2k0PPl4Pz3c8WgD+jixYNLj1W2AFAQlVPoUeA==",
        "shasum": "692d4a74399cc6aeb1dfefcca6d6dc4cc02761fd",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.16.tgz",
        "fileCount": 42,
        "unpackedSize": 110166,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgWJeBCRA9TVsSAnZWagAAfjAQAILZh7AQQ6PR8whJrFT8\n/5MZ0HelGDT2Qt64a9RYY5H+vI10PE359Gk6weS29g8n06nEuLH3SyKfi0cV\nyP/ZmepswnDGyk3j84xwkoBxclXVbBtV7MI/wtH/hu3qPz49fvCxAscx59ej\nUwOY8B/BriJTAxSfa9a/b5VuM/iCU0UHR5K0PKgZORsPtbBUeciNXS+hnLhr\npTe4zEwNJBgk6/eQsG8UMvIXGga8KZW3B6cKhIBxpOTElfBtGgFo6H3CFCV1\nFEaQHHxyCEe9TWZKhAgb5opIvLAOsXk01YZc613INeoeD6QCJeN0w/Zt5ifM\nbIfpXTVI5fMwOIxTsQ3ahdEOXmpVVHg7vJ85wRafU7nArsR/zcm2FYioTiXk\nC41tBpBCWjwkfT8Il6V59IbxsAw1PGg0NYYFSlPfCW7+qZ8xnsDc/aBomTCU\nrRy1F0Xkt2KWTLKU3Y+YAU6C7/iqxh91KntWWon+C90ob+dZ0MR50F5IA3OX\nyNBfK4jKDYBomY6F3wKN56MabdoVAoHSAf2rcl0pe9nRQIhcxIr6sqpZtoWz\n4+KWRMAbYXsNzLdjI2Ey3G6dHxUeST3b+/KOmbWi50KXsPQQL/tHstGlsyyG\nCwwGGO1XY5XUnKfnwL0pZnkvYLuDpa2AyyGn/2cpd/KdscSGVRII+ig6rAw4\nQDMP\r\n=/nFr\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCIl+ZwiMDVdyO6AlBVjSLqMv2B1at1yHfUtMHF0glUZgIhANVvziUBw/GSiQ9pMLD9bkLqofJ9l2PMdhdO9auDg9pE"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.16_1616418689377_0.8047292120201419"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.20": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.20",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.1-alpha.20+24bcfe82",
        "@opentelemetry/core": "^0.18.1-alpha.20+24bcfe82",
        "@opentelemetry/node": "^0.18.1-alpha.20+24bcfe82",
        "@opentelemetry/tracing": "^0.18.1-alpha.20+24bcfe82",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.1",
        "@opentelemetry/api-metrics": "^0.18.1-alpha.20+24bcfe82",
        "@opentelemetry/instrumentation": "^0.18.1-alpha.20+24bcfe82",
        "@opentelemetry/semantic-conventions": "^0.18.1-alpha.20+24bcfe82"
      },
      "gitHead": "24bcfe82340e02e605c5c722b0f955da50bf82cf",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.20",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-tVVf+YN9F6Bbzv9/bN8WTAyI6Gr1UX5DlYwHSEDq5HdjSWDpNo3GgUiCzFon8KvQu8xSaQ3qg0vP1t4df4eNog==",
        "shasum": "f1fa5c0436e32210d188807fe3a20f933161d5a7",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.20.tgz",
        "fileCount": 42,
        "unpackedSize": 110053,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgWzpoCRA9TVsSAnZWagAAz60P+wesXP2B9dqRAqtZfZ1J\n4f5yDGZWzbm7VhInPwooqLLFkNrIa3qRLMhPogpFi6NNZXPswo3ZzkMfwn0H\nn8n+gad3Cf4B0T2avhkElqf2PyeFU5S3efjNVcywbW0IyxtoQQdHArBM6Rn5\nFGtoSmqXB1wWeECQ71zm11SxuZAG2Td66eW//EiM5+9/Vte10nOlhEGrCJor\nXEELGVEJCZ4encDoB5WY5hh1oBPf1RlSEOMDVbu4MCB8JUHWwFIqyZA5Naso\nIRpW8s4rO7N0jkDIRRekEu+u/HgCuFapoEKhSWmocXc/+qSNh3d78yOOpABM\niprOAkEClkGTUu9jp00SXfsMMof1DA6OB7Ce3duNir7Jf2i3COkPcBBWfY8M\nAffITlzsn+SbWviQCEdMKwBnFFv+Fgoncse6JOWoyx8WTY98Y4Gk7o8djtN7\n8AOKb+d/9711j6I8HEy9uRtD77DbKqvsWRQ07vGrpy8YXU1D4s8fvmrTwH+l\nfpI0avDtUGfKx6fnRUgjw0gFBJgSDYfhVLbnsQKZDIB+M9kS1Zg1ProOiGE8\ne+Y7XGzHj3oaF/QvObKIViuQdXQriPnV7UtwyWumnJBBkf6IbFB6NuLBnbB+\ntG7TMyAV4TsfHttfwsImftDjavuASKmCitSBg847rm5WjcZsWgpifwSOE50y\nW3jn\r\n=riX7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCl71VkHPncgvz9zsvNWPch7jDi27Lcs7u+ClaNJV5dUAIgJBbEO9e75B3zKavzn8RldDqA5SKty3J105ASAMiRiCw="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.20_1616591464218_0.20115525074691143"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.21": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.21",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.1-alpha.21+8010ac2f",
        "@opentelemetry/core": "^0.18.1-alpha.21+8010ac2f",
        "@opentelemetry/node": "^0.18.1-alpha.21+8010ac2f",
        "@opentelemetry/tracing": "^0.18.1-alpha.21+8010ac2f",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/api-metrics": "^0.18.1-alpha.21+8010ac2f",
        "@opentelemetry/instrumentation": "^0.18.1-alpha.21+8010ac2f",
        "@opentelemetry/semantic-conventions": "^0.18.0"
      },
      "gitHead": "8010ac2fcd0c658c0a4184cb0f5d8108db3632e5",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.21",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-Sv+qSUqgO9xIVfVWTOv9vL/QD2ySn2JD8JsxQeuxDMcIu8ALBqYQeJTaOaXHNlVFTHp6jONFr2dtxzGEMQZ/pw==",
        "shasum": "0853c6e86407fcb85d71c0f9242340074e336285",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.21.tgz",
        "fileCount": 42,
        "unpackedSize": 110039,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgW0jvCRA9TVsSAnZWagAAJSsP/18Zbtli1Cqwa+rsKb/G\n5JPPOzOJXkS+ZYvT4KaN/BZp59+WwhLK6Re4ZO507ngXoEUQVri0Li4RlVGL\n0SqYH97p3r6RSLLK2YbQlY8jZ98ljKuFrrG0u9aRNqunvOpAZCYoTl+Byfvn\n5qlbwPWOJWSbnKhxTNaACdpFtkS88jAbgcR1ObGDu+wqy5+wXWWioXF3NzsK\naEXjJE599HBy2Dxl/4agYkuNo0pNnIas8cKQ1RkudzZTm0/lYuOOHrn2vzns\ndl1IFJWl1XQbQ7F+HdZRAPEhsKTzsncofHbxy6lkEfYNjt/fnGGhYtDV5/q5\nAbC32ELfFwQFIFI97kfOOcT6PHZYjvMbHrV0TlDU9xSC11F3hxM9AJfFkVI/\n+Z6Wrh+pnA5OeFrP0v1qQkBijPC5zAc40aH7V4oD65ZyoS9fb+5p4JVTRsjF\nfhtqvHwLQ5VJ24wD4RhusLIeNHby6mL7yLyrePxSPxsuJbpAxCbdR2nQAKSZ\no1x10B/aNV+fAqJg69AM7y/MGymQOgVayau6tWQt/zb4Nk4drdddI9Kn3tw4\nzCCdIDDcfkReY2Qg9LYtosScjaPicgjgLxUBJhZ0Eer3a9AmFMPfgK9OdWeC\naqvb9CzG27JKy6y4cILVrOyq0bs529Lx3s+EpMpHNO1BF2J1hIwaYz1kIhqQ\n3O52\r\n=DVYS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDppfE7QpXYbXX38S3nkuG/qgmdHCJxOBEsChH7DfNNTAiBXStd6fLi+SRRFKAFrQi6W+vvgRvsFh623UmLOjT1VPg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.21_1616595183446_0.6329759152079719"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.23": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.23",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.0",
        "@opentelemetry/core": "^0.18.0",
        "@opentelemetry/node": "^0.18.1-alpha.23+41db733e",
        "@opentelemetry/tracing": "^0.18.1-alpha.23+41db733e",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/api-metrics": "^0.18.0",
        "@opentelemetry/instrumentation": "^0.18.0",
        "@opentelemetry/semantic-conventions": "^0.18.0"
      },
      "gitHead": "41db733e60b5e4f981be94eaa56e4fca24b539d9",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/status.svg?path=packages/opentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://david-dm.org/open-telemetry/opentelemetry-js/dev-status.svg?path=packages/opentelemetry-instrumentation-grpc\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.23",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-8/LsF946tLOopxWV/ZYMCTLW50IFhzTEeSrOnZn1+hcsNpaiISvGemBvBgC7qY68JPjKZvRpGkdbJUOtP+MKgw==",
        "shasum": "3149a34184bd9015b612ff539f608addd46cfed6",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.23.tgz",
        "fileCount": 42,
        "unpackedSize": 109967,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgW5AsCRA9TVsSAnZWagAAkJ8P/AsSnCNxdhsm6J8rtW67\nUfe3YpRgBd3j+bvpu/sNWfudBnuKZhxquGBnwEaU9xROWddl20BhCGco4xN2\nosvG4xduUF/jqBKcv/Dg7msN9TiRr2E/1U91pHztZETNDxGhFmtE886OHYoN\nLKu6fSDBABNJQo0TBQGgsokjcXaStPcltRUPuc375KvmytG6AvsLIxgsswvm\nRoS9kjRWM0NvY2pbXkASvL5SWC8vCo6A9q4DhNSY8UXC86Q9VlVfQgLVcL0D\nTInFC/N73nfYJDszUd3hYAsLjtsibg/RhXoLOP9OKuaKILNwKdmwb6rKEdc8\nE2Uh0QzvrqFvcfqIk03X4AiBHUJ8B6GOGN2r92ECxA4JROFsSR31ZLuejA5x\nW/c5Qn1fyy/NABWMjs4ZiXvOz6uvOv3abykCtI4eKHyUtzQiv1/iUSd0FLAO\nolF4vPrX5kAiRdaKWnbEr9qglaV+/ZU73TS3LdEnqCLBNMcLejHHs3MkevbX\nF1oE8D2uqs5UtdRY1/zgIXx5eehQMwv41k6Fh+K10TunVQNGrfhvugGnEIZ8\n/t+VCk/9iOobqi/LGmXVcdXcV4Jh+X+KjQHbfK3D1Jv1di01ob4WBe2nJ3vU\n3zhjdaBnYZcUdqhHg/4nEaBIgDxydfDeEP/JhoQih8MvnxJ2CBP2yziwOOsP\nkeyT\r\n=fRne\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICmT7sntIvqXPCIaROz+40cTQj9MMsKH6PpO2f79JUpFAiA02TQS/U61hOmJBi8dA4dbN0p3sAKwUOZTkB0JJ4vsIg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.23_1616613419703_0.15762428334720835"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.24": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.24",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.1-alpha.24+69f2d3c2",
        "@opentelemetry/core": "^0.18.1-alpha.24+69f2d3c2",
        "@opentelemetry/node": "^0.18.1-alpha.24+69f2d3c2",
        "@opentelemetry/tracing": "^0.18.1-alpha.24+69f2d3c2",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/api-metrics": "^0.18.1-alpha.24+69f2d3c2",
        "@opentelemetry/instrumentation": "^0.18.1-alpha.24+69f2d3c2",
        "@opentelemetry/semantic-conventions": "^0.18.1-alpha.24+69f2d3c2"
      },
      "gitHead": "69f2d3c264497bfdefa2126d0865ca56ad5f22a3",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.24",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-McAAbmk6/7yi5bDeVrpTlxu6olZedk5k/UGnw/yG+hY3KPaw7LPmEBZ0ocFvopKzVk02YKNq7W9ytFZAmsIgUw==",
        "shasum": "c1718620c9dc08002d64149c3dda76b2b98272db",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.24.tgz",
        "fileCount": 42,
        "unpackedSize": 110072,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgW5VLCRA9TVsSAnZWagAAP6AQAJgpD6yOnvs1S8MrR0f+\nknw871GhNQ26hhzLbaDLFlsOZFQ2Q+k22j1mCDAIFgLcYMmo3XRHaVadJ0Cl\niRicC6HoThm14/SB0yF68gbvr2/LVbC+rCDL867mZ65uBWDAjM2EBmeX0Pic\nULGBaaYmiqyYVbCcoA0qcp0wlhtbcw5EmN33/rFYl4i4WpMdNSVOYoXvvBA1\nmaVh5ol0gi+oUgXjkrtKsYNZj3/Y143+I4l5NKXrMsg2BX5HEKV2d+jEe5lF\n4GDT5g/oBUN/m1wsl/oyuSyjO8RQIw8P23MVElexSxMQ3xhaqYgZgt9gVF2g\n5/oQzXwFkWnn85vGGs/qK+oNXONt7bC9j1xnYotag4znJYB38Jw5SvBBD31h\nnZnLYmV56tpU3Sr5D557mVYubXrwhBua/glPZAdiyiNEAYSpKFXJEnWx7DT5\nc66yiC56xvYNsCDJUIykyIIou+Y1K6AM1CxY0ov4EydWOIWdzZGzDPID3xhG\nbV8DF36hekVKDzNthui69st3pm0UuEBMy0gH0BD4UEARyRgA+9PLiiUBJ/jq\nBOx9lrqSfgUjHp+fofP4asSQ6nwHeeImHJMQsHeIkBj17UDn6aEUxu+JONxG\nMBuvbA0wBisl5UnKGPh412iNE7QPuT0dI9q9p8Fj8VVZdojOSw9spGHcCFzk\nJI1h\r\n=sAjp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDpAufnf5I4Vnxpi5oL8HXgerb8vZlvvvO8Br3A6VZoHQIhANGllPYUzIYsLF2G/ZiAQUPZTyyH1YxAGiaVc9UzavFI"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.24_1616614731124_0.9994625085462485"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1-alpha.26": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1-alpha.26",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.0",
        "@opentelemetry/core": "^0.18.1-alpha.26+91483873",
        "@opentelemetry/node": "^0.18.1-alpha.26+91483873",
        "@opentelemetry/tracing": "^0.18.1-alpha.26+91483873",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/api-metrics": "^0.18.0",
        "@opentelemetry/instrumentation": "^0.18.0",
        "@opentelemetry/semantic-conventions": "^0.18.0"
      },
      "gitHead": "91483873ae3e3e8a686dbe3b7711a233167efba5",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1-alpha.26",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-M9wr4v9ddaXmAOnjmLWrF+Bv+tXnb4NhO6BDRdTf+hIi1Un6fEESodzLMwqnSG975DLaTO6Homl5tB4f2nLLiQ==",
        "shasum": "967e44a45d6fd62822c9803eb4d0779aeafae530",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1-alpha.26.tgz",
        "fileCount": 42,
        "unpackedSize": 110000,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgW5xUCRA9TVsSAnZWagAAE/MP/iJ5hr+uG7KCSri/sVZH\n1LuMwZ5xBW4H3ypjNmzLlmIyfMMIrFDHgWF1TONeQQzJfc1O+hqaLDePVp++\nCF3nhgonC6mjD8n9Lyf+qivlGNeorzIqb1gVI199ELHaU4SFErYfZlafwxQn\nsRRtTQwGJO09dJXcslHfyUoYYU3YXUuV5oHieHxP0x5We3VQFUcbDzGdSUB6\nzxPLuImEi27V3vnvo3fkg/mvyiYW6faFbaRvao6EnTd22hoqqfp6o1GnArHq\nAK5jCgsjrQgd0QqQ8uLsAhhu7US63OLSshv58x/POBA9lnv5sqIY6lo1kqNh\nkC3c7sbcRnumhZRoGiMWjLjjIh+fPiDpzhAGmAvyW6kkH/E8/JRMOhsCLya3\nnHoYBaBDc9/Sg39xZFc8DzPTFX/6G7Pv4HAMWUNgf+43NIOB8C09R9VgEA47\nA0p2PYrwuK/sDkwLIB6iAO7rDSZltp83owPAALOhrtuKKWyW7bNkKCI/Kkul\nLpVhhCEIGiXSUP6Knt4WqyQ2B1EDTP9qx7H58lZ0nifGfZ/zXdaYsc0tQg8/\n/sGq7YXwAir8gvwnDx8MGnKo3Q5Wagua12qHwZkk8+mVwPppVksWdWtbO+Dv\njljy8Y3M29L5iqQTAbwEHIklmiZ45pSiZbm9/bKqiYyN6jA32SgyuS/cNgoW\nSc2W\r\n=ZKuZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHJEmHCUQe+0ijzMmyeiMG0ZuoEpKNTLHr1dbaQEED+uAiB4BMWaTPKdz6RzIyMuA2xUbk/C4UDg7tyR/uBMf/XN7w=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1-alpha.26_1616616532499_0.018656697152536372"
      },
      "_hasShrinkwrap": false
    },
    "0.18.2-alpha.81": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.2-alpha.81",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.2-alpha.81+e369035c",
        "@opentelemetry/core": "^0.18.2-alpha.81+e369035c",
        "@opentelemetry/node": "^0.18.2-alpha.81+e369035c",
        "@opentelemetry/tracing": "^0.18.2-alpha.81+e369035c",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/api-metrics": "^0.18.2-alpha.81+e369035c",
        "@opentelemetry/instrumentation": "^0.18.2-alpha.81+e369035c",
        "@opentelemetry/semantic-conventions": "^0.18.2-alpha.81+e369035c"
      },
      "gitHead": "e369035cd228a5c8781069a99322c5b938061d20",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.2-alpha.81",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-oM9fs8Qwz2fzOSIlfY5m/nvJUsj6gxroDuLrbdPYkr/50OigjFyBPPxtFGqwcap9Brby13xMbI0mLiYujEutzg==",
        "shasum": "74e0ff4baa6bb4e5a32dfad0d021b26fd335ceed",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.2-alpha.81.tgz",
        "fileCount": 42,
        "unpackedSize": 110072,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgYi/6CRA9TVsSAnZWagAANCgP+waaDmXDhvCe4bscmHPT\neMCiLX9dColBERPKahY9VvVPfU8eP681XdgCk6HF7YsEYmBNXBdD4mrTUMu1\nmntSboDw7qqCvaDzd526c1AcMlItcxa1R7mMZLoaa9LltQmYWWOt8kyPHZXL\nys/eN4lFy+uSkvuU3TJfjhXzCq6+2ueRjuu7LMW6BnZFKMLE7Oy8c44rNuWc\n6bjGUf5ZiQL6ivwdAS81hxc1IVR/lP6RJk8ngJbzRUotZAoUJVXWSlPCgIna\nttm0yS7hjXv8hvtL0ZCxSotxG2IkSvrMxe5JIgaxv0UUujJQwAwcB2epoRhg\nYHx1a8M63u+skZMXoBT4yb7cKIE7KQLxn+ryo0lRNTPzCIf2HwzmdTxCNji5\ng0oZe5MFfuImBRp7PBmWMtWE7x1avLCpu3gCwXRZliAEpTpMotCPZ+VYbIbe\nrMUizaV1r1PeIRvbn+rFPRiEHk6vFD7Rp1FDIqfhd1MCnj9JMfWT/Ar/0Q/m\n/RXQd0182AifgAnLurOB0BOHynawZys113r/foa8qtYhv8d0Uq3LTyaFUaS/\naSvgKGjL3ewL6MvB1ltR72tC5FkYja5XdOoi/YKnsJThHjFmdBpKUMAp1wt0\n8LUjap+lHfqL7wlv1erPq28loU++lNyNmZ2QLXYaQ8DFjWuQDMnhr36okSs/\nbA5w\r\n=ihgh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBuOuwSbouDjYLMPp8eAE975G/WgoD57+ye2+z9oq4olAiAFSdFB3+l9euW4/B6il88b6NDZL/DXxkiOB9Xyhv2NBw=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.2-alpha.81_1617047545853_0.011930803255623124"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.1",
        "@opentelemetry/core": "^0.18.1",
        "@opentelemetry/node": "^0.18.1",
        "@opentelemetry/tracing": "^0.18.1",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/api-metrics": "^0.18.1",
        "@opentelemetry/instrumentation": "^0.18.1",
        "@opentelemetry/semantic-conventions": "^0.18.1"
      },
      "gitHead": "e369035cd228a5c8781069a99322c5b938061d20",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.1",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-9oRjyw68sItrpRh/H1band6iqu1vwSc+yXoMpAzT14qNraks495FiAXAAA5RHOCWCe9jUzIqMbfpQMeMMNwtfw==",
        "shasum": "df7b97bb7cc12feb824055d104f88e309b0ace48",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.1.tgz",
        "fileCount": 42,
        "unpackedSize": 109928,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgYjK4CRA9TVsSAnZWagAA5SMP/Asr0tnEp1WGPk5EdmW6\nGoQpE1oh6S7YOp2421QU5tOGf9IbnZ5O5OsiSHsHU3vIt3SJAkHd9b0Pq9Ae\nvd/tFJK8TrVhb8UzAgOPW4vKgBPrPhLi+5J6735U+S4blxKUVUu+sS5uUlI1\nFX5lJi8p5NhKvRFyROGqWKGmx0IY7c5ogHkMrcnU4TgNVu0O/VafGrId4mBj\nWe/WTf42lv0NDDZCujI1cGw4w6m00vPmKGluk2ytwWpVsljLIw1xKQrLULiI\nr5+iKypKHbHOD0uEEcb1jbju7PTX3tHwBGl6Ck0HbRu6C4j4SKwQDc5MSba4\n/AQtRE79NM4AKLqjxuc+RTlq2gwvxsurYebB2xFzlaKtpKe1qEnDiXFSQpa/\nn8SuYVcRdoZe0/ryBZsG5YtGPeqzTO/OhOKqae/Qz5c0r3MIPGmeNEuxnF27\n/Jhv62+mkJG785+HxAR88w7nYFsOHzQuFEB/x4iYr/abB77/WQ3MMySe9POo\n2cmQPNcJU49Q4oFuTRLRDNaMGuHo+JslyDol501U+MZVGpgrH9dJkF2k0Ua7\nJzMn9pAUVp4/9I6mLpCN0hUuuCz7Sm4wYtLuh5II3ZyScyPY3eY4iKRpYiNS\n6J5zxAfxP49fsw43XBMMI3XyT4bh57NXcUdBflZZ6asodvXi7pKWVd+TvNU2\nNoqI\r\n=bfae\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCV/Lei9sMKglj1mn80ZeB7hajaY4D6Ja3ijXjTduwecgIgE+dWC5i6fV4zZOKk1VJsAMgNSnF4VkIsx9dKrBv7RXQ="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.1_1617048247994_0.6682197714354745"
      },
      "_hasShrinkwrap": false
    },
    "0.18.2-alpha.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.2-alpha.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.2-alpha.1+54857c01",
        "@opentelemetry/core": "^0.18.2-alpha.1+54857c01",
        "@opentelemetry/node": "^0.18.2-alpha.1+54857c01",
        "@opentelemetry/tracing": "^0.18.2-alpha.1+54857c01",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.1",
        "@opentelemetry/api-metrics": "^0.18.2-alpha.1+54857c01",
        "@opentelemetry/instrumentation": "^0.18.2-alpha.1+54857c01",
        "@opentelemetry/semantic-conventions": "^0.18.1"
      },
      "gitHead": "54857c012414c05bc83b4a8da224492c98abfd46",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.2-alpha.1",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-RL4k1aZURDUTb9KCSqIoZRxhuCoD61hPJ9E6mtoZJFkQrrm+OuZ0HhzcA3Nq+oplPmSjvwuo1gq2QT8qg8p5Gg==",
        "shasum": "00dd89927ee990084718a6c51aead5d0aedfb033",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.2-alpha.1.tgz",
        "fileCount": 42,
        "unpackedSize": 110043,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgYyJLCRA9TVsSAnZWagAABJMP/jULjhFd2D9bX19D+XQi\nf4Qe8cOWPLCjQoWolrL/xNn+AgTAd+RE5UJ6AiYZ8pi2bhKKDnq8jGuR0z9g\n+bNYst/zzioUL4WoOD6MILC/2PLpjgfvzADgr2oZytfZwjoz6cOB/jqIR2v9\nlBW2qX7msQeNTSMyJ15EtIDUibYapRkd8EcfNkfSJ4qcTx0Sj3hQMrPVI5R6\nQPXpKPg/tgM1UUzh8SqKtOu0YrxqYcV22vv/5VE5VYUdLhyDiAVsi4IszABp\nAc8Fha177NJaT2HxC6bX1PoLA4KjQMlKKX6Wua0TTrtWF49Hg2SJ1KdBLKyT\nAew4MTAD7pDcu4IfXPgq3Aj/+TZa5+cHXUhpyoD3pgK2aHoqblxD1yooJOSs\nIn19a7pN7TZi4bsQ04EA/Bpe9HX6wEiLCh9nLAI1WTNBnaLilD/xWG0/tR/3\n8JXJs8KuAq1OaT2+abQe+CTW0GdUDAd4jPJ3SS+7XBVkNd0Z7bXPu1wBvsPI\nbKRRaPLFwbFMfbLXvpSLmxVI5LZi9ky7xnK+6skj0wk9dO7yTe/FuwdnpNIc\n4Ew+KJAq5NBwb++KyZ0vMcOWCHdsPc3r4d/Kln2ZruHBVFJsUaoqHBRK7hRJ\n3UVcWccEFXtvIOr6xauEXyTOL1OOoSU5sQ1LaIqb63gkPDR8WCzVuKCfjmE4\nB0ew\r\n=aatf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGYnyeoI0n2OOmonNo9FYDiYt6n+7IOsFbAfgJMRKtm6AiAZqi4DdCFNY6K7gj5qqybeSee7QJWmjHs8Aet4v5YKfA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.2-alpha.1_1617109578872_0.020830234390772695"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.2": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.2",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.3-alpha.2+2409f1cd",
        "@opentelemetry/core": "^0.18.3-alpha.2+2409f1cd",
        "@opentelemetry/node": "^0.18.3-alpha.2+2409f1cd",
        "@opentelemetry/tracing": "^0.18.3-alpha.2+2409f1cd",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.1",
        "@opentelemetry/api-metrics": "^0.18.3-alpha.2+2409f1cd",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.2+2409f1cd",
        "@opentelemetry/semantic-conventions": "^0.18.3-alpha.2+2409f1cd"
      },
      "gitHead": "2409f1cdddd92c23548c18c055a6a36efe36349f",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.2",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-CW5nFDcpchsHvvqgP1hy5PFfwuOsNNgtHUbGTvKavirQb2b0DrYc/BLcMS1IwFrxmsdlRs52jVxD1MjfrTae5g==",
        "shasum": "f3be265a02c307e26225628e2e75ccb77256e689",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.2.tgz",
        "fileCount": 42,
        "unpackedSize": 110060,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgY0NTCRA9TVsSAnZWagAATssP/2o08LKAKVf5I8A/G330\nnUXN6mrzsGJVmOUFQA+S0CfaxUayKk4D28JHcOJ5piqLeCUNSGZACFx/zXu3\n8r7sFb4GDP5iY8iGp8pgjNSDuaHnRfA5d+LrhA7udmAonV7ouw1AzzeCezGb\nk1uVZKbyCT3D3H2Lij4KmBNyXLZGpX99ItpRCzfM+Ou6oobE33zeOBqsHJpC\njVA7T4Nv01YANxLRTgdpgc5sjHVFVDQfK1uvlSYiDlLq7WMDbGqAqUAgmI3S\nhPn9Xd2TkiunfJKpiKe5SEtG0wkFx/yXvqgyslwgGmi4u+ue/HRYVgXBlUHx\nhZPY+hhHht5XZWPbo5IBROCJgQfNlGUtCJ6TMxPWwit1Z4Gl38r4ETUdJAaG\nEsAL80lLyYceZnlQ22m9W/fZ75kpg4XDahxbQZ8HZjFUTuXRZUKUJbH1V9Nr\n4V2oSadiscAH+8/1oxNiwTbsXnRLQMf7xQ+ThUmNajJqZcCs2+L4k5Hm8U49\nbH/PQBJIYOaZQHAOIL7m5wN0XrW8A/sLMFQYjXnEE7dI1wDc7N4KXaz2hZPd\nA7xhFyrc8COobx/IxbQF3UHHz3QYiiKLWQlhi7NShR1QdVSv8U6Ne0bK2Scn\ntm37HU379EBiIQRUfDvHod1bCzKowL5BqV0dfCVq4CZ1krbUHcjWdtztaN3v\nV661\r\n=PNdq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAYG/pSSr/uMJpI+2RowygarGvBjtMvW8CqIbDH01XoDAiAuSGLQE5DtcXzco/rVVM48xFMhrv4ThzCuMgGkK+IJDA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.2_1617118035302_0.8046831666807954"
      },
      "_hasShrinkwrap": false
    },
    "0.18.2": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.2",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.2",
        "@opentelemetry/node": "^0.18.2",
        "@opentelemetry/tracing": "^0.18.2",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.35",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.1",
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "2409f1cdddd92c23548c18c055a6a36efe36349f",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.2",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-0Ho2hpQ81lxluSIjRfZQzUKdN4mi0vhdwKXiBNX82kRhIQTLEGgDcW+SMs/qukXbH0yQli6kGNs7X0gJrtQFGw==",
        "shasum": "41d5379f33ce5c087a629ee859541c2e5fce2cdd",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.2.tgz",
        "fileCount": 42,
        "unpackedSize": 109924,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgY060CRA9TVsSAnZWagAAwC4P/RXYq/laOwuKoyFXGkJc\nkA9HPCq9qYY4yQBxany3Nmats7WxeC79J/FVCP+h1nA7wBj5nB0DBW2Fzqw6\nIkD7c91yYuw6GJ+enM51bQeiPYwv4h+sF2yXmfBFVGrnCtsRbksXwS1b9vf4\ntthbHt1Vi505DFO2oA/XqeSK5I6on9djNe+LlJhYIuqGt+ra5PhVzvtScdY1\nGdnL732HU29YHck2MtSF6BklP/EbxW75vmcpMlC/9Tc8hP9tZVmqDXWA0xR9\nG+AeXc4kupRXt7CgS7RWtmBu0KxaP7jumxMcppbiRuklWNOKblq6+YYfeYLK\nxdoPexw0XPhVPu5Tq77nRlA9ohI/MKuRVf6EwY+JeSePztJV9Lroc/+lS0Gu\ni4nff8LaAf6rN/tOvImGRMOVtzwvyUPjWkvGUNQjOuysRVAlaEN3pBRbhk77\n8VwTWyzqx5kRErvb+1hfBRukd/vwkxwzhN93SRXruVkChOHb3IP8Z7cyrk2Y\ngAsoCFk3++gKwmYFIPz7DoXXOe5t71vsd+8ZhHqgthbs3A5GBa4Sjq0FFY0x\n6JNg3Ntv1ACNAiNk1GLkRdacDUdL2CFtod7gKLj6J8iZCjVjcS+z9nxJMBqR\nQ7InFriy4ejBrYrKNzc89kOOwOSmGgTCk+W2hrG13EsZB75/Thuxciws3q7L\neiEH\r\n=wBn6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDnN2epGz4TDkdojuO4ZqJ0VwUTHNEWJkHDyyoJEGIc8gIgUKux8dvc0Qb80EJVf8oxe+MjTIjBbUcMiKmQTQj9TdE="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.2_1617120948004_0.9494356238621999"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.3-alpha.1+cabf8630",
        "@opentelemetry/core": "^0.18.3-alpha.1+cabf8630",
        "@opentelemetry/node": "^0.18.3-alpha.1+cabf8630",
        "@opentelemetry/tracing": "^0.18.3-alpha.1+cabf8630",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.1",
        "@opentelemetry/api-metrics": "^0.18.3-alpha.1+cabf8630",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.1+cabf8630",
        "@opentelemetry/semantic-conventions": "^0.18.3-alpha.1+cabf8630"
      },
      "gitHead": "cabf8630cf2e295ac2e7e5f44d6efd1ae911cbe4",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.1",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-oMUYUGm7psU0aZ9uVXQzD03sQp12yUAtri1Py8nWqX7cZitNOv/E6IbNTUn+uyasAq7QCzNB6i7JWtlwnBx1bQ==",
        "shasum": "bfef97c334baad5c25fb2d249dc11f1efbc5ca0a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.1.tgz",
        "fileCount": 42,
        "unpackedSize": 110060,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgY2AICRA9TVsSAnZWagAA0nAQAJuGEarpd0gRyyziMTxU\nc8v0pHNY7f0XiHnTAfZCdEMuRJocch+G2Yz1CUAvK/QQ4RnUeekONBaHPQZd\nxz7KKqlCwjYSx0Fkl8M6Yu3FJ9LdGvRL3QGYhpwMTHQolhF98jJ1Ia/+eECM\nWpP3/UlhkdOWg5hchDKCty6D25uFs5oP7zGYsuivI7yAcS5i12FlA1QSch0t\nsluUpXz0nEmLVJhnA04OK6wAy3+mCVu2Mt8MKL/qGCYatAQGbqw94tZ6nJeN\nX8jJEw1x/3JKNpmdt4LaIMrMlDBJ6sZhF9+vPldtmCO9Jd18HtGmlEeO/4gM\nr/Hfk55czWfja1Xlw1gWnEA7FHnKLL7guHTC3y1g2oZHtyNwUbBcVQQSTKKK\nxqIGWAkJXoljLzFPQB37yeqCTpP4GOV4ueQduQ6/EsHOPP22Tzvo7RGQx7Zf\nD/5wIeKZOP2BA+e5vbTeU2rTsII8nV4xYFjBv3RcDCQDLAMWiy/sj6TUmAaJ\n6lcNRRqXcoO1irwz8eBD1Xu1GWCzLg6qCzUFkKZtdBNLiwxPp5QHpH0+Bgva\nch8QKxefjF2qByKufQ2I5Vo/mtcyJHSUscYV9xLfzkeNXjz/8rVhRF9i0gQ/\nvkOiB4aeosFlCN2b1DuSXX7kiZ204KHYoSwR0JBAAUvOwIkZz2M2y5XgBbnS\n/ycE\r\n=7hJS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD0QZW8I0WZZs+2wKFWiEt08FJpfyPfpdvlxsP0Mc0yyQIgZhYM2n99UTe/em0imHHxtuylfOc3EU08xMo0x5/vkWo="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.1_1617125383938_0.6308307577765293"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.3": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.3",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.3+853fcb94",
        "@opentelemetry/node": "^0.18.3-alpha.3+853fcb94",
        "@opentelemetry/tracing": "^0.18.3-alpha.3+853fcb94",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^0.18.1",
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "853fcb94cd96cea0bd1af18cddb355345f76adad",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.3",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-J595Wy0i/67V3ksAstIU3m7LuZWqhLitVmiO3WyXC5Gq8wCwT5jT8TUvtIUf8voCBCqZ99ztFr8cJFBCUdYhYw==",
        "shasum": "86d00159b26bbbf1d95ffa43a9ca58d449239c69",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.3.tgz",
        "fileCount": 42,
        "unpackedSize": 109992,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgZCbSCRA9TVsSAnZWagAAuJsQAJb26B44DkUxp0KLcXde\nxv6nqKRohAUoW5N7dPRUH7TlIpw1qzdEy9GmTwbB1/lf+UZ2zHw+smJTllgG\nJUO7ktTw4Luc8qEPOw4vU1gmdjXA0wTlGyAhkwHkB6do1g+Wj2aRoZXMH2bn\n4v9MkT/CtrwuxBczcb10AHzgYsmJmno4pOJ5S1RbKse2FP/ifERqQ+IMQ55n\nzBEsy7+IuAb7iMUs7b1HhxdmOpRdLFmebC90U+oCkSPXkOns4F9kaPgl45C1\nGDGaGSNrBmTj5gnXy83S++WydZlPBrFYDB4xEky92WUaFFWS3mJwGwfd6xpH\n8+0hAf+NCJEUeo0SmmaQxReZ40tU+DFz3B+gMIT83qoF8VAcCfpC45CNBzv9\n5eRSBRig9hRPyM9jPFsvXaJ+vYAQTeNqTYuTIarrbc0BXUXnASVjSBsKXYnZ\nATgCOOQysc3ykhVEHudewDxIaIij8uCmJ4uSGXWXkdvOxjISQvL8YYSr8hi5\nR+VqCUnJAAvW5Ob9GoRH0VUiKV7WTaM5P22LSIw/HRSkaXO7Wva5n1cxMISW\n4YiAcHjJ0H4X3EsTiKuVxsb/65r+mFG5Kv1dz6m1MJo1/5/iLEgTy0Kr8KzK\nJ8atm897v2FgjnnpTsbxUklgZbSGmT8xtPjI2RTezJ5KFrxMUdI8SeLeEAW+\nyFtv\r\n=hKce\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCwm4xCT3MoRop1zX1DsEG8cnPunnhVRM9g7NTnEMqqGgIhAJmMKbJz1Tnk1xgQEygwmEyMnuCXG1YnpuPRnupYVxib"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.3_1617176273452_0.6925927870311746"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.4": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.4",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/context-async-hooks": "^0.18.3-alpha.4+02175dfa",
        "@opentelemetry/core": "^0.18.3-alpha.4+02175dfa",
        "@opentelemetry/node": "^0.18.3-alpha.4+02175dfa",
        "@opentelemetry/tracing": "^0.18.3-alpha.4+02175dfa",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "dependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/api-metrics": "^0.18.3-alpha.4+02175dfa",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.4+02175dfa",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "02175dfafde72898d7ab40d8078b0e1b6576e82a",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.4",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-4hhPQUKTYcHqCDrt0OQDppygrcEpDt6XNJqwzl512bQa5CpeZvsIpGc70QIib1PLfPC30SheybXyovS3B9K7/w==",
        "shasum": "820004eeb3a5ebdf02b937e5b97abba42df944ea",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.4.tgz",
        "fileCount": 42,
        "unpackedSize": 110047,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgazzqCRA9TVsSAnZWagAAYV0P/0CMM0N466GuptfrMamS\n/fZAuX9gYc/SCF84Sxz1rOjb5Wwif00MGwYBROx5QOKAf/i6lNmjVZI6bVhj\nwLwuMSdwCPOiy0fSObTAHABsvvLo/gjjaH7unFyAaVpZk9W0xgzQTAEr48PP\nEtEByiGxDEXtrLKOVKJBol6z6OyZwHECrJNVSf0kzh2rzWIvTUtp9Ky822VM\ndtuBVZTPJO8vO0AxFbrKEZdD4ELGM4cV0LRJuDoXWHF3EDrJJCMnAgavftUg\nVhie8q9snPbOKkjqccdGEKzdm71U/DlkPa8Z0CzLyL/2fQDa5dvTyrjYPkCt\nvoM3q/b0170cqm9YpcaPjsGBnHmWET9DFiWGFn32ts/usLhVs40PeY1N0q1n\nE+dKUV2/Ow1tsuJqljSP4x69XB4G51DuBjsivU3Wlow9ljdmM1JfV7u/puer\na5+0Qhlu55+BiMFGZuJMPqEpHGh2/c6x3NQgI2I8jZECv8J9+62Sv+gahoEY\ntEgW75VlMxFR+nFjiVpDj6y3dVNW6CcHm4WTJ/DORN4hPHVpCf5e7+3LtO9C\ny5Cy1Pspm4vHv4SPNfbzbs8nGUxygs42akq+JUtRp0BDIQqtWj0eLlaFfKR0\nfCSuxKeTWrb90uOFqyWIJJ/nx2rz+p5r7+nuISq+wFDvM1iH+VjCtqlEan9Y\nf5gi\r\n=xwKS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIByQK2yNUn8pQ4/HWVQhzSv0gPARxhxTeVRWND/RIrG3AiAiyqz7b2LCtqm9i+HDjrZyYAm9MPg5NXxaHJUj5uc5JQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.4_1617640681925_0.29190595326547797"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.5": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.5",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.3-alpha.5+8e2e2a96",
        "@opentelemetry/core": "^0.18.3-alpha.5+8e2e2a96",
        "@opentelemetry/node": "^0.18.3-alpha.5+8e2e2a96",
        "@opentelemetry/tracing": "^0.18.3-alpha.5+8e2e2a96",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.3-alpha.5+8e2e2a96",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.5+8e2e2a96",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "8e2e2a9653bdb648849a0ac64df55cbe3ff0c503",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.5",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-fjNpxeM/O527YOMCWeErE/C1NGNVkbgLcjfD3tDAGRWZqAVaQSMrrBar7EO3ONNYvlMfycOZ/JTS6yFlx4iV0w==",
        "shasum": "1df7ae0e9fb2c348e4a2ed4a08b8d255a3fe8942",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.5.tgz",
        "fileCount": 42,
        "unpackedSize": 110116,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJga07wCRA9TVsSAnZWagAA3xMP/jzVpYmcuFRSJmS/knTs\nOTx1RpAUsWx0CpQnazduI6ukmqeMAQV3UCZDZq0gQRynbKbu3yWoxa5UvR6I\ngdk8jlFacntUPg4OqB/YzEoFxF2tzNHINVjKKR1FGoToYbrq2s8VN0RPQWQ9\ngBWIyl3xkuXoeJTm/RPPBAdkRTC1JSiEwcD5X2HQ+Amd8MRUk1Ncs4SeQYVs\ngle8PzEJU1j7C4HDw/7ZQSU8dxW7UYckvBYKp9Hqkn/HKtBKebmEwgMkB/3Q\n5p6bC8gqSQ1bowzMBjjSyv0wSE4DysTaM0HBplwubn7OplNA4kWLriD/cw8g\nR3CDvLeg+7LGdX3nNGBLlQzC9WevIVsAqp28DRhSO1e8jnwyLetrb5qhcs15\n9AqJnG+jUY6aJGGdiQEBvqQ+ECdl85JIITcwZcZJzd3KNSCy3mTwIeUfPq1l\njyDpv+9uijHNfmZH2hKD+4z0g/s45Vm/h71n5Hpv0NzwqDadwBYhyuQZcRol\n7RTOq7Kcyc+YpM6uW526G+juuz9m7RKEEAaEKysc5i0Eh9z1Fb4ITZCYdu97\nW0OUOeMuZq71BSLkSfUDP0XNbnbgDasUTtqyYz7rgWMBxeUzc8zBCvfzVkJs\n9w3fJHA2If8vviZ/vu3CobCk1drhDNc22W33phYmHd6016JlsCKWWfgmCzGm\nCTwn\r\n=WwTq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDqAIbV4xEG6ANaAZGoauIwE8xhTWXAtHFtU326SLMECAiEAtDk5K8lsLmQlPfz0X6FUC9B16XeZvBefWYkNb01hovU="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.5_1617645296335_0.13790278014203938"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.7": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.7",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.7+897c35f4",
        "@opentelemetry/node": "^0.18.3-alpha.7+897c35f4",
        "@opentelemetry/tracing": "^0.18.3-alpha.7+897c35f4",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.3-alpha.7+897c35f4",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.7+897c35f4",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "897c35f497363ee3f3ea4c1e5ad1628e09ec9041",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.7",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-B+vGNgqiaDzelpyOpFuBWBQhjdlHG+dJHcrkhwUJ66GsawchIhpfOHZOkQFZmjsBkZZDJvnpkg8CrSewn9owiQ==",
        "shasum": "e1ecdb67d84ae14939190c243064fb3468f66dde",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.7.tgz",
        "fileCount": 42,
        "unpackedSize": 110099,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgbdnrCRA9TVsSAnZWagAA4lEP/irEHaG5Pi+I7sNkCCGJ\noLJy4rIvxroGfUIfo0ue4S2X576SJlfQvs1SNHHjif2DOEnGasYrRgWe/DKU\ndF28hwO7iahAUYDcW0Bj3EM+Qer1xWwq/4wPk6AU80J2FfsV37eNg1jjRAPA\nHuctNL28my0a6fei5jhsWPTFE2rHJaK2VLWHPvnFFPzcwthnEdO2751JJjxt\nzzm950xMflN/EoKS8M3MiQMvb9q8uwecb54kYNwpRiFU3KCLm3qez1OTWHyi\nBm1ZADPGvwzmKxHrpmWy6BnDrbtzCfPeRssrGTQUePbY817NBSooWqm8CY6U\nzOAYTqE1SV8zA+rPmNFY5SplQK9O9wpbkC0HNKA0lxAzVPKfUOn/P75+eXtc\nt30zyIzvtRpydBmb8IyAkvZzUAE2Se6URH2l52gcqNlqli8izKs1CkjTvD2Q\n78skGK9Epojdlph8DfrHTJyEM/BIj6Ht/PeQBZRbME/hU/j2JLnOuIzSHi6X\nZok5pyJ4L31eBAw1dRMxUkiAXtwEY9tpiKFLSU4Oo52HgxQTCmeXl8gb68sE\nAqiVsikcXVkp0aAPaUFIacp98GDTL/b50gY1IVQ64dHZ/SN2r5yD0sXsv03Y\nsEkfJGCmU5Ru5q04nX0HyF9iCarmQ73fCaKKBO+P/4NYyLFbnsQd8Rm5SfsR\nPK6V\r\n=5A/J\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC8SReLSfxF42GDkpc8iyKJA5k/cSp7x7eff60xzEb7AAIgHBExHA48zQz6IQp15tWP92j1ECUapEE3ckFQPAg/rRI="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.7_1617811946779_0.18785739528646883"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.9": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.9",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.2",
        "@opentelemetry/node": "^0.18.3-alpha.9+a4577767",
        "@opentelemetry/tracing": "^0.18.3-alpha.9+a4577767",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "a4577767a07c794ea687759421693e75f2a84b27",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.9",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-sVYC4v+9vW2owYTctiSQhdKLrMTR/uK+5w+gHwnoArSj2zpXsO+OLA82PO94U+Z/qjtlcSaKZdeyg9iNZjzoyA==",
        "shasum": "61dc71fa3cb5b0f0030839bd90aaa4a4875862d6",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.9.tgz",
        "fileCount": 42,
        "unpackedSize": 110048,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgbwGsCRA9TVsSAnZWagAAa90P/j7Xl/hJq8+SpWq8i7eg\nQL5xv0SfHEkDUQyCm88JY3Qm2yXj8ydyPLrQF9u6ivobWGtSHSNL/La4V1Yv\n6YVWYrlke3+EAG7xnIaFKYbbNdoyU6+lYc/VvEnGUeixMBPa5DhDMp7Tywje\ndbogtLciqBnExV0UdTWu0bcwta+5289rBb5W+E3ldKEd8C1QFPYZUnWSLHvB\n4ehnwVW3jj+ZQfP6H7zmqihx6WyfhP49IOytu9f4mz1tYDOq1RKqZ7eZ8hnS\nja4O80AVvskusNn2P8eScC+ngRR12WKc9tn6J9EpH+IGJtjFiqBi/0MqcCWC\n49eEnu9SFw3OtDH8+K2RHaU5raZbC0xw3IeUpknpTD8wKj0NxTPks5G3Hg47\neAWm+9OnEG9/E8qDMD9JD/LgxogzlwhJxVLsXgbZTClh/Rh6IjBlrtRptxlW\nSl7ld7qCkd9oEjDzCjPDBKHC/Fc/UODxndqSifBSv70dAd3t++eJafkDpAIi\nP9yd1ljK7SYmlc7zCP7jzXsYyseGjFK0t4XTBuNDVq+0tigst2yR76WxJlie\nQnCvR8pZPRgHIk2usOQciXJCnfbDQjXs8gMgUPlUbx2IvUZnd5ilxFnrXE9w\nxZGIwCXWk2a9f5W7YOWfYKbvwSCrlSQvgDzx/bUj23s1sU95gXriI5i+y+38\n7D/p\r\n=pUBg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCKJkLg1UAih+dlcKXIFa7x3zkUvt4eDW/v6KyJ4Snn6wIhAJGTPUMRX3ZXg/OQSyZiq5gxJpPKbjo8rAr8cqRzNu1N"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.9_1617887660394_0.16546904013812025"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.10": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.10",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.10+80ff5e2a",
        "@opentelemetry/node": "^0.18.3-alpha.10+80ff5e2a",
        "@opentelemetry/tracing": "^0.18.3-alpha.10+80ff5e2a",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "80ff5e2af390ed8bf97c4bfcd1221d2a855b50a1",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.10",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-q1HiSI3jboja3mEn0pxSzDE3DVYrVVRvrUlvqIKdf3SzESw/QRYA79mEYXD/PXLLKuVKsbYeM9cKDc2rokUXvg==",
        "shasum": "ad2eb1e31d902c876ad7e4ca74ed6918eb68632a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.10.tgz",
        "fileCount": 42,
        "unpackedSize": 110069,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgbxJOCRA9TVsSAnZWagAAiRkQAKFBqYPu9/cFQ4YcXezV\nQ08E+kDa2d69FsdAf3iXfNcamIHTtdkWDh2BPD8WBMNEqhv7CT7lEJAqzpJO\nEKm+RdKuRppauv4rJPDnBJABQlIFFmg0nMeiayxUcMPc9s2A20CbBlWihRbs\nQDyF1biQ+GoaX19MOTHk5XV/jx1qZQUYVpLsNPZKG0+JTOISTuJ/2exXucb6\nHQgKbn8UwMmH6UBJBqTjalRaBROy/3QA0xVsBLcTGttAJwzsRO9BjzPJZsNE\nr1eWLqpQcm0/dvC7yHlve0/kGM18bDpRnbzY44kuX16vroBStbYN+3fHGq45\ndlOanlYto6BhPn65JM0SVKFiY+K8M7NYLEDSZB4G9qxdOSsmGQl5bWmhXc0T\nxuCRJWJ6aSiNF3T7w31/cneVPjJKV002U+8/T+JEnLwypcwoz+kHxAU1DFFm\nJhK1ssCoiFMWdmwstnafi3yXH5hCSgvcu7rst6HJQDr6129YKeCQuPiHVqS5\naSlkJI2eRLu30JwYblxs2anjlZnPYFuqe77JL6GLBDadXlb1daSVNePq89fu\nlTctqR5IoYw1d+Gvb8eVjh8HepQKyOT+xSW6lKTIa3936gWwxSaT6krNVwRh\nB3dEfwJEwXZF0VLErvn50eKPUwtc5HE9ure1NAQDxMSlHi/W4nNLcWPjGxhy\n58w2\r\n=A/6G\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD9FdNsIITsU9zOLLWdO/VUz6+i/J78Dds7/gOpyU/HZgIgUS02HYoNt4MgsHRAwQQscm4+AfHCzRRAelwgw0tl9mI="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.10_1617891917691_0.98591636894402"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.11": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.11",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.11+64c8ef57",
        "@opentelemetry/node": "^0.18.3-alpha.11+64c8ef57",
        "@opentelemetry/tracing": "^0.18.3-alpha.11+64c8ef57",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "64c8ef57a9fe3b8468f2388ff78687b927ef8965",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\n\nconst provider = new NodeTracerProvider({\n  // be sure to disable old plugin\n  plugins: {\n    grpc: { enabled: false, path: '@opentelemetry/plugin-groc' }\n  },\n});\n\nconst grpcInstrumentation = new GrpcInstrumentation({\n  // see under for available configuration\n});\ngrpcInstrumentation.enable();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.11",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-XWIWpjIkCIVzeBnlxkf+CFfkOFhH+0+3EAUXFCI5Kv/VHcxgLWjJI0Ty1qKBajQ7j0uU447+R5NV6kA4uoCmag==",
        "shasum": "542bde06fa20c2a0b78aed798bcb247016b386e4",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.11.tgz",
        "fileCount": 42,
        "unpackedSize": 110069,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgb2XYCRA9TVsSAnZWagAAuv4P/RrHjFt8w0FRwfu+eXvf\nEDwIRIVlC+JGVE2QbPL5EHgVPLmBKp9o242wz9i5Lp5YY2cdLFaYJt1skkph\nJIOMbtk3EGXMp31REC6B6CzSSWrgULAcTX9aILsovC5JRSRdNYztbmlYp+9o\nFkidt9R2RQxgEZEaDCbS29yPy4sHvX7asjmuNxY6k/RD4sLonvaQVLb5Limk\nW3A9K4k7VkQRXMYd8bqZN8XNvYsvFDo3xWYTOg6Zu56j+XUFjiOJ6hjcclfd\nPB1CvbSd8EuFC5+/SmS7bcppP9MJ+UZvSHcXNq19LCxmrscc1K+RFwlMjsX2\nfldtl1pgZyujN7eWRALOf296ovQtuNNJwOvX48EHPQvYn+kA2saVL+tAMv8p\nMbVh+2RKpNeFF7xLIyio+6iP9Ywag++UwoWaCWX1PZF1NXgYI63piKoJdThJ\nPEPCHhmDV7aQQfxlWuvlTBqgWgtJ/Hh3eIVH1Voysb48dKUhvdE+dz+s3z1m\nc2ZJjIdmF9Zln3olZUj1YdjxLvBXIASL/4k5iwC5wrr8KiEP86EMttiHhJGD\nEQKQiVozDHreCLZexlfR5F/cJqVLF/8u9yZJYGfXh57kQtO3OkO9+kTGzZsI\n7h3XqlDBo2MsAWfxVOZ6MmbXIQUBrr+bryb3e6OMapZKCfoIR03u7AWfadaL\n2sbP\r\n=LCHB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCoyz86j32ebTvtWLPJ1ZTLrOPFYsFAfB/uhLrw1DntUgIhALt6zRDG/P+8Pd04Q/GWIj8YJin97wPqjZPh8MHbzEul"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.11_1617913302510_0.8754192846260236"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.14": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.14",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.14+4a3fd1f4",
        "@opentelemetry/node": "^0.18.3-alpha.14+4a3fd1f4",
        "@opentelemetry/tracing": "^0.18.3-alpha.14+4a3fd1f4",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.14+4a3fd1f4",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "4a3fd1f4d86499e4485c1f1af0f5589de993b0dd",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.14",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-hc3jYNlmSLOUBTUrj4K++9+F/DtgtmQX2q31hW75sbWvat4EkR/v9+qPZZL6cTDwKjxpINfZo+N2P/+kMtL7sA==",
        "shasum": "4b65ba801ee431cff35a87af276a7162addfb7cb",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.14.tgz",
        "fileCount": 42,
        "unpackedSize": 110023,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgcBo9CRA9TVsSAnZWagAAHN4QAKUMCZ/HucBuwlcESfD3\nf2zbAtleSZE3nUi8UVUYZT7Eh59rBOImT5v1YrJj2u3Riswxf8bB9GXyNoEm\nIxQpWM+V27IRZSIL6FP3zL38R2C6NDYJwoTn0tooAgwS5+tSYn7NVzqfdXbt\nGolGSIfr3H7KGU6mh/AJbDYkIBk55F7/UI5+NNSjdh3HhovF2UlLWAwU9eDk\ns9RCo58NXfK8yyPZXyVw7bh5NdbQ9OfNGK4jh7JJfRzmkrKAZvgDHbO9TA8C\nvQa6fmJujOD+EWG2/qY6iedcpmjVJvGTNoxUWM4Yqn7ROQxJJE5nqR/mz/Nm\n6p2oPI9m0UWbTFWf8WwP2fzW8GrvC4bb2Ri6MUDMmNFzuqLGiJFHpCs25bMc\nTe3Bv0rxJKdRqsb3hbSt0je56kut0nzZsypQsnrRg70M0PybhjNHjhiTQHhC\nuDcwNagtfEMR/CTCzVKUcKUG3SDKQVKUwsi4m/x0+oloGHyHHD10N8UP0XJ9\noPbYbkDv2Y1hSy0X49ZtNJGr5k76jjjTFtCz4y8Z38u0w+5245lWHcZHmCEg\n90/jLFGqDWbjzNV1jm6Q0SvWUkvQjKeNCZIA/GgNQwhoOw29NC2HcprtM936\nuFC9btcbtDqGmaV7FgJ138oLOs+mdlbhQPA3ZTainUl29QFjpCpctQdBEnw2\n1MBq\r\n=b/61\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDQ4GfZI8iGz6a9DaNjg0JnFDUJVmk930D/ADOAfQOqfAiB8aacNLkzqQfH8RFM9/3LjuzGxF3TM0F54WJPvSSu4sQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.14_1617959484877_0.15637827818672223"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.15": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.15",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.3-alpha.15+a2fff0dd",
        "@opentelemetry/core": "^0.18.2",
        "@opentelemetry/node": "^0.18.3-alpha.15+a2fff0dd",
        "@opentelemetry/tracing": "^0.18.2",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "9.2.4",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "a2fff0dd2ece0c7d1246d5dae142fcf03371c21e",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.15",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-BY4MJCaIHgUEV9bVAIiRrnor8EqSY42hs/c8cOFDiRhxNUOyCjUfDWU+UevMH9wPo1RAHYpGET02psf/xSPAmA==",
        "shasum": "fecf8f1ff1e7dc4c0b0ef06e8c5aa8a42ec94820",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.15.tgz",
        "fileCount": 42,
        "unpackedSize": 109987,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgcCAZCRA9TVsSAnZWagAAgocP/AojGC/Yqf1Zi7Mocvou\nmuw4CnPGQS1J47gGBcZ4EVzWxYhn02SkJ6IH07a9WvfyvPQk7HU9NDMKfRJx\n+/NYzJ1M29FFWz76Eb0oSqwE1n8GJxLlT+Wo9GCz8NujixlHy165uiOF4Dmo\n+tfKP913zKga9arDIK+OsUyZFlanD6KCYeNmC6hzxBRFajpFG0DikZjRxTdo\ndJFzPIHYeP97p4W76KtZh81IajwJ42JionKD7Y7Rwne4zBspv9Z+NycoUVAj\njJZt7pjsG8S0b2KafEPG8kMtIp7z0TzBXYKXfePZpWRCmLRg5dpH1exZaNrU\nL9kilVSRuV0fjOTBReMuLrMzkm6kaIjDmnYXqmqKJZlrxYl3uqIK2RMfomD3\n3wKISONk41rhm5eBXnSTMAAr3tfX0WY8cHn1Ur52lzoLyqUh6rV74cx8cpSq\n68DU/OMinGfUBodqBas68hc8LKnghOmleoicj6u5Hs8mMXBGBja6YVPvTcKo\nh5a97D5qaSreFdSlIyzA7Ibt6IL0j6vDR89y7VVdlE2dymoTsRvJvwzBTlpM\nQLJ/qZnWiQ4JtoYkW8ZyYQ9K3WzOEoheNH5kmF+9xBUfE8U43OHXbiXHBp5c\nAWr4hg4wGBPuK21EUpLVdDS4Z7hPJjLZFHjI/Rept/rz4d4imL/crYT7RU2L\nPgV5\r\n=upWh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDGrkVCpclIb2bVpGfUydefBLlypX3FPq2L8YlM+s+EBAIhAN0aU3f/J37lceBZ4yMbeaJcxsCKUwEzpp7HijbhSKIf"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.15_1617960984921_0.27786818771013544"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.16": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.16",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.16+7f7afa7b",
        "@opentelemetry/node": "^0.18.3-alpha.16+7f7afa7b",
        "@opentelemetry/tracing": "^0.18.3-alpha.16+7f7afa7b",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.16+7f7afa7b",
        "@opentelemetry/semantic-conventions": "^0.18.3-alpha.16+7f7afa7b"
      },
      "gitHead": "7f7afa7bb88edf4a4d46da8b252116d92b578b79",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.16",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-4zq+IxOXuZXSyFuTkqBDMq29lUQ/glGpKZSO+OPJdRPpZ9zhb3awGRDIjn3+/3qkimQmX5OX4Xc5MOIexmxA6g==",
        "shasum": "b466c29814f9f2b14ba345e07c0d92d376fd52e7",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.16.tgz",
        "fileCount": 42,
        "unpackedSize": 110042,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgcLQaCRA9TVsSAnZWagAAOd0P/i4R3RZLCmQzXknyyR52\n4lz6xXtz3UY5vDTzMO2wiYn5KIK6y7M2V3bXxLAhzdd8AkAN06TkhGKInB6s\nxKInQAvVRhHX5gC46Wa12EgRND7oeUrWres4kdNLHSGI+sDsEda79B7+Vfed\nfr3uAvjYcdFueHz3vFQH9qBRgKyMfEks1/1VSJg6wJ1IPs+a+6UdCrD+GZn/\n1zO7F4LTYvbkPgCuHNIUDKsHXd2tgfOC9HEhojbAxgYiYRxeN+ZVvHu8h8Hl\n3IQVtB1AUWcgfGE/yeAZUWf+i8GDhl7DIk/j6Jm0mJFvyONBi/fCjZbn25Di\nivHfSFLSLiYQhr0zOW8DzDHPaf1mkvWyoowTENwhBAqYBwrnXaJUptLwV8td\nJ4rN5SVxoJfCphaqzVOF+LtFcP92PmtQzKhQWG9+rY3FkRF5m2TbIAkVbHMN\nLFNnJ8MYb7oLauqPUmDybZL4GLAzSoR9ChGsX06FoCRT8KdTNnfK3gr/Dsy4\n4xCzO9T9KRA8GRIECM5AZCWf3Wq/PaWmXF5HoQwd4qjE4YzKEvJ1YMj94GB4\nEYZAb/bzJtaNs7Te5Nzo8Ra+pg7Y7GAmLuZ3UwnikSXv/sw2nu0zNaOJbLvh\naSDqj+hhJH9F/nFKHacMaBzjaHmEmspjJXPyETunqCBhOWkSDXJvnGfBE81u\nVoT8\r\n=2K3A\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCDmqcnDuhVgSzP+rdTfKNucbpssv4hQ9UHhKVP6Ae5GQIgfjUOyee2h9FmrlJN79h+hbcQlck3Ol4RHLJkqXkgr/I="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.16_1617998872522_0.1892643101467455"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.17": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.17",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.2",
        "@opentelemetry/node": "^0.18.3-alpha.17+031b0f42",
        "@opentelemetry/tracing": "^0.18.3-alpha.17+031b0f42",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.3-alpha.17+031b0f42"
      },
      "gitHead": "031b0f4286f18a1d08523c87e419803fd1b0c9c2",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.17",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-88QCSgSWOc6CMuMTU3BT6y9HJC0p6nY6LgYSdLbmozBR/5AhMHWCOrt/qd99rSB0Swx7I/4fZYpMlpzmNfMx9w==",
        "shasum": "fed0c11af154555484ac01cc8418530e8cc22d41",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.17.tgz",
        "fileCount": 45,
        "unpackedSize": 111844,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgcXDzCRA9TVsSAnZWagAAneIP/02ccQvJeycfvYIUpmfV\n7uMYiy9RExjxzmVp1InTenpUt0MkbnMZ0UKhNjHYMgpb4kZBOvSPsW+bmAUB\nwl9y2Ll23GlO94ozj+1nsVUzfRYWJkCqpTc5yF403p/KhjaMMgYiEC50jmiI\nsfdIq7GP5utYDQ+Z2YpnfvbPjEZnTms9C8FZxrob45RHpbwzt8fsqwUT6sAb\nT0irS/EVBQ9VRWKTueYFZAkYXTCa1CrMbceSD4J1HdxBleOowI9Pz6+iJEi/\nTDSYRS0+BcuStKy+OJov/t8OSSnoA+aMXy5KFBaFFVMMwnqazoD4KadiXdS/\nel1OV0r+mxjM60D4YHgJjAj+U6Y+7NxDC2DLraoaV9QnCIQTD4Gs9ocrOujb\nsvfcf71jIivmaB0iycfHcuHJO4k4wM9GztxlvBLcOpzOXThw9QIB98h9edr8\nY7qmmdeNyG2/K6ABt9eFYlbJRO884aWvPdDnSxbIiIwixJcHlYrbIESWhtFr\n9lRXFH3xJop5MZZo3w6EHbr2jYGwd4jVL+GsAZBU3JfGeLKE36kkNnM55i8H\nEhxyXHCbRrUf4bwEQEPvwLpdnMtqlXomPQRYuO3pylLbAd1oqQwh2Io/Su/F\n9w6yrJXg8klTHP5jg6CwOcuqvu90aTp2u4TPWC8pZvyr+2TmISGM3VmvocDw\nZNoC\r\n=sD14\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEi9EqBX/3w25mXj8NPvi/aRfmHUW8tpRUerEZD6ZTydAiB86Zn3S1OPGtO/uo+CbMO/9TyMfvOxIaMAmkdDDyDOIg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.17_1618047218976_0.3655140002921997"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.18": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.18",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.18+9fc1b109",
        "@opentelemetry/node": "^0.18.3-alpha.18+9fc1b109",
        "@opentelemetry/tracing": "^0.18.3-alpha.18+9fc1b109",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "9fc1b109e7997b054c7182cc6db4d71d7ce9e5af",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.18",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-u7RTLBkxtuBBQkip6G6FSftV2+lnrj6Vji2AsV7DtN4Kn2ibKbzWMCsuvRGbPD3nZPvs7WQS/11O9+xs3sswew==",
        "shasum": "0c368e623dbef022afb22f7275e537f97ce23e26",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.18.tgz",
        "fileCount": 45,
        "unpackedSize": 111844,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgcfXdCRA9TVsSAnZWagAAMF4P+gJ000seynlfHJC1B/+3\nmCJiE0uM5upXdgbw6zE6uPvD4W4v1wPUpHA6fgB3DcwKPFzV4ssTpF8ty8Zp\n2shBXrXE1yuZVNGHPidDHz+XZI8+Q5QjmK3wNQJ4XollOEyNmziU73GQwT6f\nA6I3RrkdjnCF5Ar4tOhu3cN1m30xCFNqFOQwTIG3FFvzYfComT59z/A0k0Ga\nv6CePKfVwB2DdpGX9ZAOL3xJphVe4iw4/65UTApc7x+x7Aeb2RQkVOgz5qVv\nL18x8xwc0RdKAdSz02A+DkSVMp4+p+mshnvv3be5dc1oJVoRId/m1Szlpe5P\n5bgQeSnnlUnHz5116qiP0/ETs6Qo+FqCWYOMD0Gqgf4xi3L2kvwuiUsz1VkH\n9fmtivO7BKO57Cab4KXdyIcvFUHGNG/3YWhtCPL2/GNZ4NQpCG4B2UkKZP97\n1+5LQBd7i+sP3rAK6jE8CJb73UsmykesSSPtKfaqQUCv7EOIYPdCAH3o5r/3\nGcZck9YW2xP9/g5arrSQsxPnO3RMhSP6TS1rOdfxg9xtDjxAeEunf74fa7Rv\nUY1V2hHUP1k7jQUVsx+pLG6mHb3rPnnApe0AkHPw+4AdIr/NS/PjwA8zH7JC\nQOLB9h8qMcHjtwh3dxFxLxQBPnaCONqnG/meLuC0W+eW4PBTdtdXDHirG0wp\nRw7m\r\n=b8xT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAVE1xqx82dusi9ONsEIEprhDhYeFQ7YJh30hK4JBuzmAiBh2gTL7YGxBaGmkjCitRUem+7sB5sSNUzKc+Pl2nUr0Q=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.18_1618081245030_0.18551426653708014"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.20": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.20",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.20+b6dfd978",
        "@opentelemetry/node": "^0.18.3-alpha.20+b6dfd978",
        "@opentelemetry/tracing": "^0.18.3-alpha.20+b6dfd978",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.20+b6dfd978",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "b6dfd978513eb400a706928e604b625961ea7062",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.20",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-VZtAmNRfTnHKy72QYAjaa+w6uHLjNp4KKKKIkH5S6LZefXmFUXEGU7YSBkMgMO8Hp6bMr6+n8DmrcklwghRtpw==",
        "shasum": "68210bc682d548640cdbf0bbbffb15bf108eed28",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.20.tgz",
        "fileCount": 45,
        "unpackedSize": 111862,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdGJ9CRA9TVsSAnZWagAA1C0P/ileD5QeHGyVA0FUGjZ5\n+aOwfQizO1jf2CH5sY/Yqp8p+4JY8oyFqzPV32HHRrp/8JLDa58Pnsy09Vg6\nyb7w4D3mpHNLCl/i4d7MMIYZsRTLrCULz7fkFpfS/WmpzpkxsXsuaIBq64b/\n3PgM6vuVt7Sq2T9IwzSFRuGnCPEnOPOjJe75tYmpvRajrBEhFx6yGU8I+YeO\nJFzl5YKJ0SOO96DXhXaBdd/Al0tqgAl+kf320vwEIvgk48QOjLLENr+fU1sH\nKK9XTZh76uZJ99gy0/29WD+OCnM0N2gnyQ0bJIUNDsYAK1PWrOQAjfleXDd5\nDcuxbFU0lpcXs7byHGOZ5AED5M9HZu2MjZzyoGoRj4/nWK1hCHp2DVxqgbOE\npbTeVKvufE8Jq3sdw9ZpfsNONGadqahHIt/RpZlIYcqRblruDZm8bMvwqmrA\n6ntG6eB7fF1WOQZpHORg7gSJtzpq/yFSNYsWcBEDfsxyEwIm4+ZiOOfMlNkP\n19dRYqxGCHvTM6720UgvRcLr/q6KPnJ08AaEE0x2MIDZfJXK9Wc2M7MG200N\n/7NnAKIzk2uHsTmTRJn7oty8kXesjePD/hPoX3YB0rTFqPwUpzwN0TyUW+ER\nTd1moPX+Qt5/dWWs9JHNaCudsH7tvUCVYn3qhEFkIADWfreyGwSJ0YXNjJF6\nQUzp\r\n=T+Ji\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCHcsKVM9h1sgcpt+siE2HE1jbb3A1mnMDc3o8VigjMLwIgHAZyssop2e5ePPlFKvKT1CukOWPtgplgdS4+GQfM/DI="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.20_1618240125070_0.40346224030591493"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.23": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.23",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.5.6",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.23+2260dd65",
        "@opentelemetry/node": "^0.18.3-alpha.23+2260dd65",
        "@opentelemetry/tracing": "^0.18.3-alpha.23+2260dd65",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.3"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "2260dd6594bd007f886e7985bbedba1d655a6d3f",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.23",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-hTxznpl8uWG84iRKNG/m+SD1Okedyb5BbEBlQc2vhs835PoM3QEuus5CkpeYzcA31bwndgc9qr5vXT3m94833w==",
        "shasum": "79965f292b981619d8a5fa24c96ad022bda36d86",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.23.tgz",
        "fileCount": 45,
        "unpackedSize": 111844,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdI2bCRA9TVsSAnZWagAAg+gP/2hSabeDQ4ZQQK4GsHsQ\n9aS/UHUT3JhdL07AuOoqeYYYeh347Zjko//O8Ei10qTGHvotk5TGn8fDpybF\nUNAVdzzP8qTzG7tH1zPQ9avGEPaIWjTeqdiFRb5nYqv3QioxuG2s7qcyRoDW\n/nzHdAM4VrRWTHI2fIQb4NH+oB0jZTEHI8Dfy8sTeSMkt+E/OyCxZ2GF1tSb\ndDiA2vTxrxguDEXEo7BWO0+MJO9v1+FWNkq1i/w58qe2rPYzvjgCucFb/lZ6\nJeUEPP0ajfI8ek5sk0YC0xESwyEfWKapEWPvh0wVMyspzLE9CTUDZKUDVpf0\nUvnSkx8MMatZ1BbUEw2HJ5cnaU7l5HpmNguP0tfcaqmNcxYSiSx7qCy2wtkT\npxId07TdvPjYyW03kiKYo0avgTvUjtS/asrD3cfyHNXeCTLCYZswXNN+RukV\no50Lx2y6s9ekrku/sIYIvvoI5TxYGRtwOOe6ubO1fDgi0fLFy/1S4RmuNJxm\nUAJOGz2E/bxy6s2Yz2ceVMlafgohV2A4DiLJN+hLoEwf1NfvsapVGvgwTDzc\nv57SQ6cjZJk7kj5FC7clXnQS6hpWs3liPoOOjGxg234HeDvs9J6cznd5rMPa\nsJOU2cOVCninURuFWCAfI3OTPCDIElsmQR0rUM8sCEDxjOlQ3+eAmo2J6+Q7\n0dez\r\n=bxpd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEObcftRVzRrKiOxEi6x82cBV+7/PZMXU7XCmdMmkyU9AiA6CbH2pw38f18o5hw6pMQyZUWQ6Rb2qm9ezm6Nnv4DCA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.23_1618251162999_0.6077942525186255"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.25": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.25",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.3-alpha.25+4ef22cae",
        "@opentelemetry/core": "^0.18.3-alpha.25+4ef22cae",
        "@opentelemetry/node": "^0.18.3-alpha.25+4ef22cae",
        "@opentelemetry/tracing": "^0.18.3-alpha.25+4ef22cae",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.3-alpha.25+4ef22cae",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.25+4ef22cae",
        "@opentelemetry/semantic-conventions": "^0.18.3-alpha.25+4ef22cae"
      },
      "gitHead": "4ef22cae74b9c976f969151ebcc3ae3d931cf9c6",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.25",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-lRbfxD/OD1T0yvi6s/9ce58fTAofKpv4lbCiiR5jKBYu/S/wbyxpdEjCtnpzpZ2kSIUWsOoyKDtwGXcZgCSYEg==",
        "shasum": "7c13a7a2f1c06834687c61275f7e857986ab1f1c",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.25.tgz",
        "fileCount": 45,
        "unpackedSize": 111916,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdKKqCRA9TVsSAnZWagAAFYgP/iQ2E6qa4UX2ZFPr2jOB\n5KzdnNnO6UvrFf230I4/hxM++wjMpmtFQIZki2PRWyLEGpkbJ5IfCdRkUceJ\nkxoZGAF048+V7lBz8ps6I9BXi1Ze4Dug1Xme5rTQcOhNk4+dRI5c7g8H3ILC\nt5+Zp8z6ffbSro6h1b4gWMuThOzwOfLWkTUsJYu+m9CWsGyWdKDXyWLKo4Dy\nbvLEWL+/v8D4F3YFl4LQuCrxqH0mNitE44K1Ej0stfA1cK/zA/yVItJQFLT4\noE5Qi3l967Dq5g7W2Lfcgqgn0v/CQyl+EUIC+ZVyMehR73Oco1mf+3aDyM45\nZAo+tfKeYci8Fr/NFWmB6mINBtmVSw97DAorjcpw46oGCkVMJnlaq6toRNbL\nFLFWYduaT9WzzD2MVnNx00QZXrBhf74Zah0yZ3mjKo/26UTEfIjmS2+tURHD\nfPvnRfpDMCzfR3JFYXxa0djx7ei1cbwXJDmS7dS2rg/VIaL7eYn+O0WbDBoq\nn96Sw1FAl2p2PbyL/54jsR6PqDzFRDYmnbNwVd8sNdiKQflyqpKqg9NXPvw3\nrwYZFcEnCzpCSGsm05R9e4M0DQ9/65n0KdyWF8oITftFGThalN1jxkNnpkot\n9/cxO86GOlpCM6cOcE+uFIvZEVvosNF4t+j3UkgEB/28TLta5f08GhMV32P5\nGrw9\r\n=iLRV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEBsGUxdyRA/0Ua+R+aU+3yGrYAJO8cVBJ8TkyCM1YH5AiEAlANdf3RRUMcPhAIRrvtoAw3H4iOxy30fhcORhAldkbs="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.25_1618256554540_0.47960214469700024"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.27": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.27",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.2",
        "@opentelemetry/node": "^0.18.3-alpha.27+115ee397",
        "@opentelemetry/tracing": "^0.18.3-alpha.27+115ee397",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "115ee3977a9c5f5228a0ae91abdc7d6b6354e9c2",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.27",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-iozfKVLelvVwBWPUehTufWw7aDpJMKQG6pfv6Db1aAL6EMNqB2ZMLdqxlas9oIGV9CQfEw3QPRRVt/QK4g1DZg==",
        "shasum": "ba60c0f275b5a8f750ba03e9fd990d94d3e8b91a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.27.tgz",
        "fileCount": 45,
        "unpackedSize": 111826,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdfcNCRA9TVsSAnZWagAAqIsQAISbfi2HGxJWQth1AnAq\nMFXsjSGJyhcWVwozPnC/iu5ev4LsH43mYImZEWyZAWtrseSPxMBRAPaWRvrT\n3yvkzaUq6Mx8w7FLpW9YbeIlNwKlSTokTnT/qZjd5I7whM1d8z3LL7LPRn/n\nakJV0BwEphDdvGXM+eIVYpSRCF14RUSSNqxZbg9CzWe6uKYdMBnulxlii7s3\nzaydZ16saqkhGR8IeCwDLKVFv8/DrLJETZa12KaUpiyBDDOPcL55etBK32iC\nHqe4bKvQrBhpdZw7Rhg3WZsa9umVzu+RIIwG4DmlmLIFr3SyYz4czcbVy1wM\n7CPMIdwMMYNDnvr4xaINiQx2XnJJhDxBtEr1bNVAiEN6Uky5ulFMbCZnTUUH\nwdgd3aymPTGqrAhrAripltfgYOar8XBgmgkTKbNjXQs4RfYJhbG/8c2iUam4\nqSdLdDz0NPeBywad2L1hpSbeQzm2OkF0PrsPtpYID7yfB2CPocinaIOCawFQ\nH1W+TjUwuEEzhG7glEjm8IHylCpS/t+gOPkqhfwjhkzQWsW5sgx7J0AulU9b\n+NbK6fEb1ykifTkfO+pxk7KsL/svfcc8XIDTWIbfayG2NuGc94Hd5bnC1p29\n6OxSwuc1BD+CUj/YMaWmzgik4kdiat0p1Wab+uuKIaFGxKcZ6Ra0953IaM/I\nYgCK\r\n=qQmd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDACXlnbNFeC/rNafeiQR5VccgSyi8ml25sV1jgM/ibhAiEA2mFJ89ZB//Ir4eMauG/g4FKkrReK3esmUx0NxNXmjMU="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.27_1618343692132_0.8127016796521025"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.28": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.28",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.28+181f11ec",
        "@opentelemetry/node": "^0.18.3-alpha.28+181f11ec",
        "@opentelemetry/tracing": "^0.18.3-alpha.28+181f11ec",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "181f11ecc761b75a2702ecf4a6b017f5fb9a8445",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.28",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-25lIiWG/DxLs4Fx2CeFAf8/lbuDHJmNpPXidKRwqDOD3nLBs2q37UFMNbZWBTndiDRpY5K2GSkW5hqhJsGdyPw==",
        "shasum": "611805cbd2a119f6db05e81529928d366a384fd1",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.28.tgz",
        "fileCount": 45,
        "unpackedSize": 111844,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdp8ICRA9TVsSAnZWagAAgYQQAKUaEgCGDZOm14CGDY3i\nCc7DBbuszo+B1d39hjPyd8uHPVYG0nWPhFDNZsNmoq6+nxD1rmAEpA8twtnx\nw/9uMbNVwZKr/3mY00fi4vwpsDsBgDj1QSJxaSTx2Ti9fw8+BhTz6SfgQgIT\nIE3eRFjld1sL7hgG+yoCGGlyuwISW6IfUMwVYBbHJICjS6AnJ1jKZhqpggeq\njOu67+CRfZ9VN7tJwFBHUCPjkq6ivrYvN8FCZ9zr3Y9Qmu1FyWTdtzAEn/5k\n2cTO3rP0TSZsa+DrXyWo3dB1S3kSuSYU0tvldySX6H43YRhLAJ7TdhmXkwTW\nXN60ZbwdMe8+zsERDRvp+2gHIE5niQmuSEcGpF/HnXQIVOXV/bOU5HrvJHP0\n/aDcbJxQvHRBFSclPBbvOkZUnvtJFgq8p35uLy1WZfiFFOAKGk7l0rFDku3E\nrp2VXYLlXMKx9RZgcpihl1M44Ev5zYVbN6wZQXHebOjoDFGi9pDR6EIE/uhy\nAOFEGE3xvhUq3zG4CpCItUbZ+/O6e4Lbn1A5fn8T4kMTUaaYXK873JeaeL89\n46kNSWDtRTXRfSZXgu0DnOeZd+8tfTaV+PDTnsfDcMOMjqLuf80+93M1rYnX\nBbXl4CGqJVmX2DpQXxakm0ibuiS3i2Zpr4Zp7oe+uZR8UZJg6/r8fGD9wqNw\n9l1g\r\n=o6Jg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDGFtqCFbH5PZgA2f07D7OSap3gShRPRbGWWThdBQurRAiA6OfP7pY1d3Q+biqBvfcTgUvYDkRKcqgAU7t5KZjQmkg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.28_1618386695923_0.5649614168575612"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.29": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.29",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.2",
        "@opentelemetry/node": "^0.18.3-alpha.29+c0b021be",
        "@opentelemetry/tracing": "^0.18.3-alpha.29+c0b021be",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "c0b021be5782ebee6a23015c992dc496b105dad2",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.29",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/3.22.1/node@v14.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-1azko+PhPAmxpsree0ZxitRyDBhb4gIHILfO8V/3psYZku3lIoP2kwCrXN8sQfCsehAbJIEUGdm49qFraUHMmA==",
        "shasum": "dd472dca926a5b002bf3ea4e2ac93fba0ef57847",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.29.tgz",
        "fileCount": 45,
        "unpackedSize": 111826,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdsVlCRA9TVsSAnZWagAAnk8QAITVtnsk8BEy1lzwiP7P\nnSCFCrBwgK1GeMRvvFSMCRO1SuEWuYueev5CCS0MlqmxybH59Mm3OtoIKmNA\ngLVTwK0pblc5QIk5R/xiZoI4Ms7wweqq8JZQKi9SBhn+8ikI2Y2XFVqhK8Cg\nOIlzVN2H0ZrAvd9HMjZ/vuFQSvqCJAwzXVo5/ZZNzKn6RC/vwSCyw2yajB/E\nRmdV24xnJDr8LJOtAbJDZQExFMxW26Go3t+u2BjjsilqGcThc6bV0lP0azVz\nLhUbo297O3QII1YYYADjcHeYEZmZS+53Ce1vj5luZ+FichVr1KVo9SVMansc\n0T4UrRvrZpdtNiFccz/uQ5VvTeasPyAwIgTSxJyU194fdDnlwtJ3UGHGLfDG\n4fJy+jDlH88TJU2wQTZzVTkaOwfn62IPwBV/A7ykVzZ8EIktquBBnsRQJT0U\nAaRwDCg/PwELqv2+0bo/OfIKw5lFktv9eyyTB4IMfxBZhfo6ce76QibTqmw0\ngCldxYErUildJIfTto7bCFTp0v2E/j3UfXhlIw0TRg9KLb8RFx7qapzx+IXR\n7fIK6Uuoq/4sH4hoP1YVByNQJTSXjOfufKXcPKnk7bn7gOcwD8yC1bkspLJY\nOaoPqlb8v3tSxotgvsCOll6Sp4Pq3deP/mPVyBduib0x1d9bQoqL6BM9OgMT\nh2+d\r\n=7bkb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAh/DPpzPHn5Pto++uyKuoOJlwgH2Hy7SpvRlqNXQtLPAiEA4/6nshBGi718h9thNsLN6HZ9GOciuL22Foj+trb90a4="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.29_1618396516561_0.04407123075488939"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.30": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.30",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.2",
        "@opentelemetry/node": "^0.18.3-alpha.30+09c2aa75",
        "@opentelemetry/tracing": "^0.18.3-alpha.30+09c2aa75",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.3-alpha.30+09c2aa75"
      },
      "gitHead": "09c2aa757fe107613f3601a2a9c23d05011f755d",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.30",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-3Ho0mzIenJlyTZuo/faKMNOb07jbhz50pRL1qLgZqVXOiWG2oXmElBV6bewgUzHFHhTzBVHbXyCqNK1ZSCXmuw==",
        "shasum": "8b135405f31b9a42f8a31985a51680d0905bfde2",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.30.tgz",
        "fileCount": 45,
        "unpackedSize": 111844,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgfbdsCRA9TVsSAnZWagAAsaEP/2sAFUgGyAVLs+RjgE3E\nFFlJSQZok+Sae050RDkcOaSnyB9Ai5ZNO9wVj+nHUSy1iwFy7M8Cu1v93EPi\niPIyxEO9HdJYBaJOHehxXTgOwILQkL+wRt2vcUuqrkFRxkcR5gypJUe388kh\nQm+rgj8Y5JbKONbiKr8D9N/GINGOzflSNsCYbv4ySlxqiuVJvkDC4p9OnzeA\nBH4XzilfoCei8HBucgFefT+i063zEvTbgMdv0cbn9fO0xtFObs0/LIkGt7RH\nQBJMK12Sby9x7VZbmX1s9Y4L04X50Ou9cDwEjyEtA9S23c+TmxJL5mNZQ98p\nw4d7NRHXZQ5a62I6wXgAxPbMAQiLAZH+QebsB0ShnEvKP+WN9Hn4AbRHLmlt\n7iN5s/aQuFndg2Sjf7YwXDDFcmWaMkTtk1H8OPCL3JGaL3ct1Jxbq/bfTeqa\ni4wCZKQYr5Pf7bKmCVrtxphjXBLizGxPj3r/wAYrTViZ21qkdiqH+/ic9MwW\ngujjFurZ6X/wHB75aYGmeHO65CZUgUVT4F0rUcTvZ4rYvFj4/W2RyKIVw4If\nrMnBK2e/HA11mRSes1mZI+Zst64bA8Vwa6A0uFSXyp1m8136s1O9a/KPF+Q2\nSk6JDGW+E9Q4hz+KUEtIPU9B8qeqZi00tQ71OedrMi/IXH/FqNvorfpxuUuA\nj3mL\r\n=z9jA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC86f6GimFLB12rR4LkU17x0B6WTEmO8Y2eXug1jysdjgIgd2AG7GcL7qtDqsWFu9dFnWeA2dz8Qrqg5nnw+n4GaDo="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.30_1618851691910_0.37064809616697403"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.31": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.31",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.3-alpha.31+d268bc6a",
        "@opentelemetry/node": "^0.18.3-alpha.31+d268bc6a",
        "@opentelemetry/tracing": "^0.18.3-alpha.31+d268bc6a",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.2",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "d268bc6a8af633ed6803626096b124a269f7b24b",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.31",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-t81GUSzVGg3SmoW8lqvX0V54A9TzLCUUqoHVjJsXKhMCUokcvp5NZw/hUBTVJkn4FJU6TNzU4doLAwYZmJSuiA==",
        "shasum": "527aa0466a8f3315f2f23457ddb97ef564b016bd",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.31.tgz",
        "fileCount": 45,
        "unpackedSize": 111844,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgfvfVCRA9TVsSAnZWagAAZzsP/3mCkIZzyR42lgmi7gIP\nKszgJzbhMGYOehQVN7bztBDgla+sw6oCxoXXAQD8TsBibyfIgKcpJcNwFSCt\nv42hidp8RZCOSyQP9D/EZvBwbzJecxLfA0vLM6h45IDu9cW5U8BfBkvksSQq\ny558OSGMeh14gOKf6w89YD1z7GD91JDlX4CM3wAzvdLBmw5hnJeHrzUe7JKZ\nAjq3/O2fR9ahQbVhZT0K8rC5jd+YRnD6yZ1wn/a9jnp1zXgFjZMWDAhVq4Z7\naQ/Qd14bVeQGwiVlUZ3SConpe/y4SC7KSFTwOUouD/JLFA1QP8fYNRnEVFzU\n3KT2Qi3m86h56ub1AKRmMtZwYYUur2c8EHassEmOojllFMthslNzUMSvO94v\nRTo6F8EyqLL34KXSP7/1JO0olU4WHkoiKlvGgIHMvJQvHrudXwCJ/rY6ifYm\n2mSxYJqipOqrEVOG7g4kXFnmnBcbAvheOpkt5+38U8Gjw+pVuFxFJ/hZ+7a4\nXRyoark6d4eo888/5yEUqAkQAt9yUxO8wmEP4LE9HXIZDX5MgFXGbfGZEZBT\nANnqmJDqORnMHls55vCg/BU6x0ahs0wgzTuADLYsuvBjhIsxuj89lRg0dyJB\nmQ88RLI/VnLhUTbQTW7Y9O9mhL8rMNLEQsFRW7RUjrZ5Qf0Yr23KaDW7tcoF\nUEi6\r\n=N3BJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICMC1+r+WXWoPL61Y0rfDPyo3mUwaQdLvcpTkhWZ9raTAiEAz48aF+0EXUtNX+AWsAaY54HxB6RSgT6COY6hzlKQAAw="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.31_1618933717290_0.07518032014200449"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.33": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.33",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.2",
        "@opentelemetry/node": "^0.18.2",
        "@opentelemetry/tracing": "^0.18.2",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.33+c516264e",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "c516264ed0c01b714770c5d2a8ca78fd793625d9",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.33",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-W03TbCLwH0SgT3vLTNa8buH11w3qnSfs3bW4DH24rEBG58K9nPGVlw+UyO/s9/ItwNPbTF2P3fN4uE1LOOKWsw==",
        "shasum": "e4b3ae6ad6120938d55747193b4c631f7042344c",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.33.tgz",
        "fileCount": 45,
        "unpackedSize": 111808,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgfvxqCRA9TVsSAnZWagAAw6EP/3KRujhScdzLSvjtOBxE\neL6+68zL32SL8H+EE5clE/rqdqGlDUcxTRQG1L62jeIYNS5vm2UmqKSs/SeT\nr3PWy9JPO+Th8bd3jc6J7AzM769gdUzV8fgYrhSc6SiI40BG9FYgZVE3oooi\nC1H9G5Mh4CBDLn9Cu4d6DdHFFj0pDzLD1ajsT0MWklAxcsy4ljQv5kLdo67I\nutP9mWRDcVnoTpVpEFKC2Bb/3znee0ZH8HrhzP41tDsy8IK4PnIPAM6xoSs7\nOKeFDI1E5k054nqribBRdwZcPAHpJ7T/aJq1POOfWjTgtguzbDBBYIedvRK9\nYBwfWyT4MI2KtjEmDUbKQD/hfjMsy0ELnBJiqxaDTnIX+C3RnHV/MhzUYHyP\niNrCkGzRprPLXD5kaCedBsEY8uoJTM6GltXC8375CutZnP5HHb33hGjz/u8X\nUN41ggvoYc2KA6hwwew6aexQe53FHvGs2dbO3MyvSzjv7Kk/ywT6ysYPBJOw\nHPbGzDy2WOBf+utRpfeUKzeSG/78Yey3QFhttX53idY8xFUGDhmUso3dlrEE\nyf3TtRTVG2pOXRqmHEOzNYikHKTaFC24U+G5/6Y/R73YvkENN1EllU/CaUaE\n7QoCARKvcL2XBuZoBYMv1TF9E7BpHxsjl105FIji/Uv4zZ2xu99Cm/T5R1oj\nbx4w\r\n=7+fX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHI54VnJdmqwxB/3dh7u0wZQLE/xvJXKIEy+RBBRO/ETAiEAiu7uvg0efl3zo/2k0dhPm5tOfBApeAPrEYnSGt65eEU="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.33_1618934890442_0.9519287405299368"
      },
      "_hasShrinkwrap": false
    },
    "0.18.3-alpha.35": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.18.3-alpha.35",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.18.2",
        "@opentelemetry/core": "^0.18.2",
        "@opentelemetry/node": "^0.18.2",
        "@opentelemetry/tracing": "^0.18.2",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.18.2",
        "@opentelemetry/instrumentation": "^0.18.3-alpha.35+d3989d32",
        "@opentelemetry/semantic-conventions": "^0.18.2"
      },
      "gitHead": "d3989d32980e1f994a67b91c81831d126e6fbbc9",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.18.3-alpha.35",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-/JtuWdd5t7j9Dv7JHqENoBQ2qKz8tfpXwgvYi9EwFvuD+5fdWkA/2NCEEnNZzrPkEgVqlOzj0e12T+N5rJ52fg==",
        "shasum": "e4dcdfd68f4f9a62fd916a1a5c9f92fad9f03f8a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.18.3-alpha.35.tgz",
        "fileCount": 45,
        "unpackedSize": 111808,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJggEk2CRA9TVsSAnZWagAAdiwP/iu6zbN/2Jfagquttu02\n6RPL9Anr7DuDoAFodv7AlKaehgKdP7jhsbPqmpUoTjGfQA8vz/NtodYw+4b3\nQjc8yYmfywWQsSydGqmuQPrsH64TSVckg8uLNtdk33BnGT9ftDnmlZ7O9bu/\nyGL4xPsfrKqtI8wtE3h/LanvFQzsHNF9Y+w3G3Kb6BXmbKFkCG+M4EntsmS2\n922kp7n1HwcFb95U2GozVJb3IJOuO46Iaroknc2dwc3fO7Jyk8iA8KhQ9K/A\npyhVaYgyQ1+z7eQvZFfuNOC6WH4/P+ZWUDwgZyTK3g0cKnmSWV7da0BGFGfh\nBAfR0v69YJG3EF5PoE3l9rkt8nxxsdXERiFLfPNQl3v2Oi5bRTxO4AUhvm9k\nq/P5wwTLMsGF2QaeJOSgCt7qm7QIixtfH6jdltLTRG8VKmLIld1+3j2NxZqG\nt/tZ96cMxkCA9u9SfTsYKkmMV/I0dityoiXmPPk8DtyjkQ96VGO6XY3VcBMQ\ncq7jfbmeyAE9VWmCXpZwZJ+DfEkZGR2zMeZUKXFSnmFAhhZyctGF5i+8g9xZ\nFQi+FjXEIlaKBX6DfkH6qyyNd6rGO4RwZZMUM8DqvHQjic2stswUnTSy0HHS\nMHUY5SnlLLUmZfyL24eIU+5ijRgAQTN4ui+cweFYgZlpVTQPEL3tVffG6A9c\nxGl/\r\n=McIh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGIgO6lu5xvbNFX0yttncldcbX0doH0bEKO7SayORisgAiAm4S1XZmEO5XTmczkrJCL9s1tZwE3zevvV65ZyAaImzA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.18.3-alpha.35_1619020086149_0.3172320844490988"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.36": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.36",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.1-alpha.36+0c15999d",
        "@opentelemetry/core": "^0.19.1-alpha.36+0c15999d",
        "@opentelemetry/node": "^0.19.1-alpha.36+0c15999d",
        "@opentelemetry/tracing": "^0.19.1-alpha.36+0c15999d",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.1-alpha.36+0c15999d",
        "@opentelemetry/instrumentation": "^0.19.1-alpha.36+0c15999d",
        "@opentelemetry/semantic-conventions": "^0.19.1-alpha.36+0c15999d"
      },
      "gitHead": "0c15999dccd377294a03cf7d36085216d6e8c5c1",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.36",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-lNN2+Ar9DAVSw4MKrg8RXb5CMTwFRzHsxm1FmLYTgWOuMhuH+K0epy+Yyu/nI6WYgn2tcbZaEfOXdadTQEUxdg==",
        "shasum": "64f581f8ec65b326688f7dfb4c7dd4b342268eed",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.36.tgz",
        "fileCount": 45,
        "unpackedSize": 111916,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJggWnnCRA9TVsSAnZWagAAEY8P/13xS1r21jpABQAa8EZt\nRqqGVL6Vq+bIEau0nyRQw/p8pqky+ircOfcrIcIixfOWQQ2/j3uR5vG/9i2u\nGaWUm01G0M+gxPEL1HHLHl9vUXxufOWoqZlGYqz5yua/ROclhTvw/jZYDFwu\n+7gzKxLqH2YdC/U8lO2lNJROb9HZ75+nO0eGVgpapoEngl1ds5bqCZ8VuTJf\nQIA8+4El+5FREJK7So9uCNmL+pcoKfganXpbX559tk896in1qHBC+1IMp8xl\nTiRtLUUdI4NCI9pqo31KtVKwoLYCFMN5wP/tmSD8Pdvoj8CZ8OJvWPEFR952\ner8FEa0e6P6vXzLGoSZJ7Z0PdRwt7gly2Mf50Gm4RihfBD1A2hOaiFVOkT1Z\nM0VQtZ81jHhcFxsb38YCis+FxdiJEbGHayCz7T4AL6yU6fso36CbGKWo08aj\nB52rg1U7bFuKbG4avCQrXuTkAbA/YMIvtxMjXkfVomjVjPD4zJb7bCkSv1yy\nDx3vSMB9+K1DP9u2GsXVbkre1H+LED/uos9S0oSbWgmqrnsC9a2GyyjzQzNb\nzJKYUk/L1zYd4sNBCXAeOxdX+irzWqIDrAgINJIe4SeJvgf19x7TtohmjQm9\nnhyCo1d26KeuS7CYVqanQXJ3L4LTtAwlbWRoESz84idMQrw3LVi6GG0EBcp1\n9FVq\r\n=5eWG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDIEvM5seG+Di4kQaj+aoRhFqHpinSTfBQzF5qebs/bJQIgIpwU80NhFbloxAN8JEXlIitNuZ0TwQmuhIIVAW9xO+g="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.36_1619093990925_0.7580950354171441"
      },
      "_hasShrinkwrap": false
    },
    "0.19.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.0",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "0.19.0",
        "@opentelemetry/core": "0.19.0",
        "@opentelemetry/node": "0.19.0",
        "@opentelemetry/tracing": "0.19.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.37",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.19.0",
        "@opentelemetry/instrumentation": "0.19.0",
        "@opentelemetry/semantic-conventions": "0.19.0"
      },
      "gitHead": "0c15999dccd377294a03cf7d36085216d6e8c5c1",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-peJ5ln/sLIP0ZmcwkJR/rFT4GNfrcxlLoDfgTEGtFZAYYm0xPPIjMSWopymaUae6eVLWJb0GS9QYD3yXM2McrA==",
        "shasum": "5cf174620a136a354bac573a6eb2813797fd510b",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.0.tgz",
        "fileCount": 45,
        "unpackedSize": 111765,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJggWv/CRA9TVsSAnZWagAAyYEP/3CO68byZmNPdhMgCp6J\nWgwzH+Hn9MHbTAGSbKBqizUVTseq13jYqF7q9zdQF7DPS4a2aWpZsuYwhdJh\naPmlToiG2MbQMMKVPxhF0lLEx7SZYc5aTPit9Noc8YwzMwrsWBfF/xhOGZtL\ndCvZTAzC1fcjKdj3z+jOV1E1FmroOj06V4Yld0l+mlFM8W05GyDFtE+/w2tf\nzOmtPPwXbQCE6CObLTrSxTZVtOeSTutU23XrLbEaPjkRKFnE8sfpce+l58wO\nhuenAgXNl6e5ESTGgXb6z8sd8mLveKTt73Ebzc/cvnbIPBuv0YLWl02d5gey\n0ULr1m9IZNsRIYM81ZJW3ErVaddbtt3tcBirH342iz1ZES3NJOHswLVMC0PT\nOUmufHlhxYKnn5sjEv1zRjwAYxykOlMy610nTH7SqSZPj4i/kOHoc+hE54H+\nPYKXRAGciunV0BIanO69u2dqreY4ohppUft3dOXn7Dd4QP47KQeLxg9WRkS/\nEJV/WDRlatMhFJMQQXEszUf5k6wAUCvXjx5SN/NZfJ5vNK8FhMHV8v2ajhh0\nB85kDUcm65R55hbktuFZvlXBfJt8g4ijmwMBhIj8QS21yIzekXFwgYViL5+S\n6VQ0V/pfotvkvwgmXJ6vIWKrCC2nnKbLMfDwtMRFLsuFfiM09dxKsFBagiG+\ne2Cd\r\n=cshj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC6f9SFTPqt11ebjuid7bJL8P4ZZIobX6xJlKnDed4ZCwIgdORNc2vUBdx3fNTjP+8A39OjzMc2akmOAGqHqk9Aibc="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.0_1619094527376_0.5431959761082257"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.37": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.37",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.1-alpha.37+a0385c45",
        "@opentelemetry/core": "^0.19.1-alpha.37+a0385c45",
        "@opentelemetry/node": "^0.19.1-alpha.37+a0385c45",
        "@opentelemetry/tracing": "^0.19.1-alpha.37+a0385c45",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.41",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.1-alpha.37+a0385c45",
        "@opentelemetry/instrumentation": "^0.19.1-alpha.37+a0385c45",
        "@opentelemetry/semantic-conventions": "^0.19.1-alpha.37+a0385c45"
      },
      "gitHead": "a0385c45376a86d396cb364feda2b4afebd836d1",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.37",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-fwlMYwr61NJdpYLVgeeN+yFhS6DKGVBkmVBfK//PWlbUO68j9yYvonz0cKbGDmiL60G1DQ4yJE7CKgn2vNSUpQ==",
        "shasum": "eb1869e520cbfc7868430757984a2cea768cb546",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.37.tgz",
        "fileCount": 45,
        "unpackedSize": 111916,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJggb1hCRA9TVsSAnZWagAA+XAP/1dmckd7m7CnBxJ0cLDb\nfbQ6K3cLNfHs9GLG2vPHQ3lEgAIreBqXX9PGuPvIzvqQ+c0Gu19685WY0Fqw\nkNG0BF3uvJXVHHX8W+t47FRBtB7MlHGXr/Y0ph9bevOpnosg+am/FgPkoF6n\n6ccuVeS0bupGPjZp6Yi7CSuHZdxrVbvm3ZTi2HRhc2ks2F604VyHs6X+TyAo\nwBhz9zpdyk1ILS44pC041usgqJcDitNz5TaUC50soRx0Xfw25Tsgxl2h3esa\nTweB3UqAvUUmYx4cuRMIwdbcF4Lj3GMs43c34zebnGsQyTEmIDYQ3OYWrFoX\nDIqdQNjkMQOZ7jby2MNFRJxuxAY5CWCVR24W6/pzAEuQSfa7DEUN6izROsxS\nE3S93P0akq30W30RA7lErreuX+q9ns4niEoRxQRj7W9iEU6il6ppZUM20Eag\n7J/DLWr7u4+kWgJhDCO0VeQv+WiowibPCRdrHppVF4D7dxceA4QZ79cLCrCg\nk5P/7gHPazd5NuXajzY4Uv8Eb/FA0gT2hNjK5E1Q0jdpG44DKyOKasO8/WK+\nNEVsMjRCPwdKB3XF67dLEHacD0AVPLdmQVhc4u1dBVAwYgBF75fjjHYTMgEd\nUItd4dsYaSFEszdIbHvwC6uF4q3AbymrZcM+VnDkKQWd6gJBLakHupv1qiJ5\nGs7u\r\n=igFr\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGvuzw7uHd8xaT9IOjpmiBMXK1Yad/bGim/SDwO3e0J9AiEA6SqYwJN0ZfazlnMvWTbbpjn6hVSp1KUc+KcdAjwkqVo="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.37_1619115360879_0.10842567302796358"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.39": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.39",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.39+23ba4bfd",
        "@opentelemetry/node": "^0.19.1-alpha.39+23ba4bfd",
        "@opentelemetry/tracing": "^0.19.1-alpha.39+23ba4bfd",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.41",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.1-alpha.39+23ba4bfd",
        "@opentelemetry/instrumentation": "^0.19.1-alpha.39+23ba4bfd",
        "@opentelemetry/semantic-conventions": "^0.19.1-alpha.39+23ba4bfd"
      },
      "gitHead": "23ba4bfdc77c8bf594bf0c817320a31f59ca0bd4",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n  tracerProvider: provider,\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.39",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-cloinLN3LI5KMK4VDc4CwdLs6rPnvDwxFUi5KbA4klQx2oyumeo2M0qxnitdmWkdMAcXUwYhuPiLAaChaNdX2Q==",
        "shasum": "20e1ce2687065a8234d936952ae719cfa9f2f8ba",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.39.tgz",
        "fileCount": 45,
        "unpackedSize": 111898,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJggcQ0CRA9TVsSAnZWagAA4vMP/38fxee48bmu+/wgL3k0\nwqdNUwbvPt3dTs2rl/ihfjSeGnUJUc5fyZMzJcwDnj87opwfUNkyA0NSG9r6\n9TOna47EK8WwvvNtXeHvxP3podgbjazk/3b/WHaGTO+3LW7YByVgE97raoFo\n9zUTMX53mGXpKuGV4uyJFxPYfQDWFyeYutUgU+NYU9hGx4EwPzTTT7i+bSrv\ncEeGIAryS7dNECbNs6iLXW5LlvcENJDXaqmKniK9UclDnvcA7EY69VRnqJa8\nTGB6cTXE12Sgx9V5jR69VVKu/SnQfVssRfQ9M27+zH8a+vO/6jgq+bguhytb\ngIWSDIowWEuzQjK8eeVcMV50Gf862e4RsUKMu95AUsRsUrASKioIKfmr0EGj\nUEW94/SAG3ddgCujnpFYrB+Lm8spFqayY6Qc0TVzY1RKi2r5hDQ5x0SRy8+6\nwK38wWKtbStI9HDO+poF25dPHlArSQmaZ2NqUM6vMro7e3TnL0v8Yf7XT6kV\nU84L5cMOWKiTw93TF+n029veQxHupbLXnVUydV8n8G8Dd8T6BQ4pK01aKjVF\nWkT1Trle8WIgMkdFJHCrgLFf+ZP5lM+IyDAc18rT4eRYAz5gh7+l1SJXyENx\nh2kF0XC9v4gRXB4MwxJn+aUHCoD/1UsC+e39RsbAHoG4ugwovc6BZ5qxvUbR\nFsZ5\r\n=rczu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFp5ux3sCq7pHSLrbwEhsPXUnPn/O3FaxtybAx97HBXwAiEAtYwBxQQDPUs6UfSGs3D/OXo1R8yJn07mwqrowJ0F5qc="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.39_1619117108278_0.7692033205765176"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.40": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.40",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.40+f077df3f",
        "@opentelemetry/tracing": "^0.19.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.41",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.1-alpha.40+f077df3f",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "f077df3f14414f8587282bdf54dff703d137d4b1",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.40",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-GsB872Mo1XfO1vAFNMdPacrVL2q9XHLRMdahJgBOJQoS1XWlBVrUlSzTG8ozJMV38M1yeL91ZeisyaJ6MuculQ==",
        "shasum": "9e8a15584ad8b3b1fd98c327b48c92ae9267a4c8",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.40.tgz",
        "fileCount": 45,
        "unpackedSize": 111798,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJggsWOCRA9TVsSAnZWagAAR9gP/0ptoX/udSwxooNs0RUd\n8jx0BJiUpUv5EVsMMYX08lQoLMK5jvuOcdtgFCYRsp5Npj9zHZzit4CEGcyi\nUNmuPFvN4rIbAq5NIYVjE0E5TM4kDmNWgXUggBejts8P9ijD6ZM0Yr86YCLq\nOUIjrXjkU1x8Iy+wwv9ToDsrFDwMqxlMLtXTbzDuSwR9RK1hablVF8O4a4nb\nCw6LhL5lLjl09EmV0qQC1QTYExqzigWniyZ09p4SRYIM5/UEHS3nCPPZhI6I\n5mOhV2veBSHxxOCqOY421Yda35UciGmPpl/hNYaZzeINncSY/0h2Ttb0HDz1\n+h9wtsoL7HPfTt1UoRxlB3RE6HJhp+1gmqyDQOu3wwHcnsc+yVaNefCkE3d9\nh6n6OP15GdTDTfYtYJ3h7NfdmGHiHVIFdq8WQgnpaEAl647mjmSwrzpfY1Rt\nv2yYitUwgwcxMVzsoWozdEnmy9JkgwtB/YRRxK48L6+BOwbxNUwtLAUf2Ipv\nWVMmr9ohKyO2Ew+wZHHf8Dx1qiEyxqD25kBodGv0IbzwNUspPK4/pZuFidfR\nMAZxvWzYFrBhRNGtUi5IQZrCbb1/RJLNdsHtc0tNYIrIuXthEW/XSC+rgXxO\n3Hwcw5ZIfLasISBITAl763ysJDouw73NNKxzHAdsUUf1lyZ2Em4jDqvNub4B\n3g4T\r\n=v9YL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGpOSeWoD1RmB3Dr8ijp1VYTap6YYGc1JOG1tiNTyu38AiEA/vi7RJQez2Sr+/OOwWRRpw1gySR+0saBSzsBtl/ZSoA="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.40_1619182989792_0.5430171598044449"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.42": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.42",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.0",
        "@opentelemetry/tracing": "^0.19.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.41",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.1-alpha.42+b9c84261",
        "@opentelemetry/instrumentation": "^0.19.1-alpha.42+b9c84261",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "b9c842613c4439435f1644c8c8e288d1fd0e384c",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.42",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-NZ2fT5WVT56hulyrlBCkA+7bmVkVCm1MFX6+tkaW+p0dlSXoiDVzKA9kmgmOooscdaXeS3xvzqvWY5SHXEXezw==",
        "shasum": "68d8b7013961cb2838fdde5abf54aa327eec09d2",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.42.tgz",
        "fileCount": 45,
        "unpackedSize": 111798,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJghw3bCRA9TVsSAnZWagAAHd8P/2RdkiIIoH2bNueSIEGi\nrarUwzojDCv6BcesXEjvyhk4/dt1kGagMAj5rrkltiGd3r0rFXxftmJCVoK8\negBfyyC8DhA48YEnMYw5wu7uIwzK6E2BwolccZtY/vdwxU6OpOye8ldBAQ9q\nUiyeuRYd8UpgGUPjUR6c6sjI2hZjOVP6Nmk986DJ/lf22g9rlKvL+amIE1VF\n2dMdVmlnwajCp2svhYZulY8yu61cEGAQtbytGI1FSavWX7oJqKadNYIXDW31\nSgx/IDeFBdFeBiqW2lAGHTrH+Dyh05j7aug+AZWecnJ9OVYi7jDutlShbbfk\nRIIg9IM+fAYAmfmaM9UBUgSbb64ZlraP/me8yHnkxRI23CTpEOUH1OJU7Ne5\n+8hexnPX9k6HkoDXRuBGazyfrj+NGdMM8A/VtLoF5wImdF3ZSieEIXFli6EA\nM2Wr0GtX2AWD80wpDghyl8dvhGJgZ9tWiMmzUWZ4D+O0Ugl4keg1HLCgSzmO\nulVJOKOTD1hI5UxTyCqT8woYJLXCboOomI+X16E2SGhG9ALRzFl7kZex1Hre\nk+lsUgnaXmRpyVWwwJoNh8MdXZodBhib/LE6XNE+PDjAjaOhQfpm4x+7syWs\n+OW9sT1Zyt/rSGsM80FMAwI4Az3bzR3kDckgkGOUQjq7S/ZB7HW+US00iLFx\nUG88\r\n=Nm3T\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBF72pNQElgxvP5mgvnSb7WqpAoUA8rzgzdldJp2/aUQAiBeUSGSRiPQd7gfrpNyWxjTcBsn+U+WCy6JUS2UhgYY2w=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.42_1619463642760_0.026231226255117424"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.7": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.7",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.7+c4341c39",
        "@opentelemetry/node": "^0.19.1-alpha.7+c4341c39",
        "@opentelemetry/tracing": "^0.19.1-alpha.7+c4341c39",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.41",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "c4341c39dfcdaaa65a5d6ad8eb745b656d865177",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.7",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-nWXygcPkdHr+ifeqJA82mVODOenm0wi8BY3avMdmHvD/vKYlDfK6pRKCmi5UKbhhOmSWMG7S1tFWtofmBB3gFQ==",
        "shasum": "dd7291ca345ef12c03808888c0ddeb9b1d8c3b75",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.7.tgz",
        "fileCount": 45,
        "unpackedSize": 111812,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgiYm1CRA9TVsSAnZWagAAqDYP/3mTPmPSvIf2T+cUEbbG\nGr7gQ3RRppvyj9A3LuQqR9dBKFZ49Kc8EvWPCmbgeNYVZh0BLKxh+VdgulHu\n29E+u0jRr1+LL9Fm3wDPaOY1qsBI4jB1wOyWQSx8a31Nv5u33doDepRx+9hv\ngcfyYTSXyI4wQ2+Hcs7sNQAnyqGggqDEkL9ok+f6rJuaJ/vfNQiZ15Ylh0P2\nIoOcXKr9/MK5gIQFYp/9bm/EIKLWR1BwRCu5sU5gfmTRQbruTaYGTOoqxU0L\n0mDAMVJJJLkvHyboAriuBUF4NZ9uBWwY/75FT1hv0paJBLGHHsJlqJqRME4Z\nuXHP8Y6OZMDyIg2/qa2UjbV2hLWIcvfHlCquax0jE/j0bI4EH+GC3as6UWwx\nteri0LJ7FqIf9/lDO8hWYMdpqerN3FqHFnh984F0paI3u9lQFF71U9ight/n\nXbwMYQ6b8uz3kJXbVGzij0qyJTn9ZBCDUl/fhathk4dppzco5KIRwttgIB5Q\nsMC8yPxfwMs8s2+OnX12ourjK3HXToKgOhtWk1P2G4BxEgo9QVgFLBKhsfHq\nwGvPDnegaM+PjJv9Bx/GzVuPcEmHC7e0T9v3/iDhkOTUE3GuXKcyVxLvQ37D\nu9scS2HcyGBYSCX2x1zKlyfrMYDkKQZqItJpZn/5zmUMsmvlI8HOVo6iYFoV\nHAYy\r\n=qxwb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCID/ywBgDz0VgfouIn42YD/l5DPU2tA3wfFyG9S9FoxoeAiAaDfBO99Myx+1K4fKRsStep9bTt+osfWSRCOMDTtFKpg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.7_1619626420697_0.2755818854320735"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.9": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.9",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.2.12",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.9+677727b2",
        "@opentelemetry/node": "^0.19.1-alpha.9+677727b2",
        "@opentelemetry/tracing": "^0.19.1-alpha.9+677727b2",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.41",
        "@types/semver": "7.3.4",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.6",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "677727b2da55ad1decf399f3584ef92dd5fea239",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.9",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-+H7FuUOs090jcTaZaD3n+YtjIMykSGmG/Kyk4AtrNCiiJJ5zbYAtasPvHUA6bGS+4AX9wiG/FGjKgD4SXtZPug==",
        "shasum": "c4cf37f9d7b4bd628cfb177c6854e421f2cff37a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.9.tgz",
        "fileCount": 45,
        "unpackedSize": 111812,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgimuUCRA9TVsSAnZWagAAbesP/jqgT09wMmIbZHkfOGP7\nc35rGp4Lh+KczTyRgijuMha+/bCXFdzBfw3itQoitLrrzVRxBwT4dVcwTofl\nlEbq9uBTFr9zz4+OMjuE/XwjW6a1rxMhoozFnA40NdAWGZUXUeEvoBs5UvSJ\n5sz7D35SeUNaYapwdG6VAwGX5L2HpGx9PHTrFfYjKu5Kmvu12CugmNlCTlI/\neizLjPOmcS0WnI/GFEy90FwWexZcuH7hVzSHFd/9E6rzpg/Nzr/M/ZX2AsDN\nfoc8By35KhCjhIz4714sdqy0Akru5h4eShMRoAcpf29/VIdIl9CsUR2CA7TO\na7tGnc/tJK7nF/xAk82qnEa0Zv/N9oYH+L9MLyM05XfkLAFJBtgKoS4CgEkU\nw1A9PGrgxmk86fFSoMv0PlDnxsqRdOaOBjekkR9NlS/uBzor2oMAWO359lxP\n0AjlspA7DC9/HakT4cZn2dQhAn6jTS9ZnRbkO+aq8HL63WtmR60sXLBgoXJL\nm7Fb7VBTi7FRDU1fco5tQkd0fuSbBPP2fXMi1YGRbY842LzuTjGAf0H3MLzI\nbMRLEkOS4PPTR0Uho562duT1N14N7z282OlyYxIJfMDhQtohCZv/qUCx2vW6\noAlOywfY9lAd+ZVeKPEbJQDqr5rdjRKT5CVT514qMp1Gsk6tjGYYxBBvRcen\nNv1N\r\n=l4pE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAMdkcYPedTmGRE6upjAkRuRU+NHMJ2U4rZULyZ/46WdAiEA+QSMeO3iC6Gh/lEZBms0Atu912XJgM3VWipPWSQ3MDw="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.9_1619684244460_0.6544986109182487"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.11": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.11",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.1-alpha.11+2afcc7c9",
        "@opentelemetry/core": "^0.19.1-alpha.11+2afcc7c9",
        "@opentelemetry/node": "^0.19.1-alpha.11+2afcc7c9",
        "@opentelemetry/tracing": "^0.19.1-alpha.11+2afcc7c9",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.1-alpha.11+2afcc7c9",
        "@opentelemetry/instrumentation": "^0.19.1-alpha.11+2afcc7c9",
        "@opentelemetry/semantic-conventions": "^0.19.1-alpha.11+2afcc7c9"
      },
      "gitHead": "2afcc7c90d93bac4fa9180f4fd312ed01370b2b5",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.11",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-D2kuzYk2Rtu5Sov+aCWEIVvUg+7bvJRk6e8LFhQGnJM26KatWFdSDSyFdRSPko4EVEb0tUWnV3hdK8hO0iq2WQ==",
        "shasum": "9d8ab3b4c2fa5c18dbd0c925ca0548a6d11ad106",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.11.tgz",
        "fileCount": 45,
        "unpackedSize": 111887,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgiyAECRA9TVsSAnZWagAA6oUQAJBnEWGV6j+gnUnjKrjD\nUUuvVggBnYQ5rd2qDS72BUw6MDA+QCnolWfg5aIgk+R5alMEnMw6jHgvfeTR\nq0DIpSJ1aw291kZ825hH6sAwICs3iMpo6lM9TuI1cc02KWqLhbAeDNY9toiu\nStEzr6R1xiKrs2eB3P7yD8UQF1+Q2192FQQ3TKvMpNQANPzVkCio6Gy2qBCt\nccCQfVLkbJ1kG5pJ/0vqT0pl7+DbJ+b0xcxror9vKkUZ5gAEuEZiCEsbQbvr\nz2tXIabCuULEyoFDkwheCBvlGNNMO0V/GpLse6oDs4QTl/RI9ymnSpHb1b1e\nQwQvoOzia+1kywQaMlmTNY/1xSaXfejz44vCVLFNf1lGzRR/0doVye2gtrAM\nbO2+QP1TneBBV5gjgPYLUSIALZXY14/q7scHgSLu0XSUA136PwdMXN4ki3rq\n1ku4JcVKHnlnl4TCbdXj5KRlAAYkUbPkRALvx/YsmpAoaf85+QIOfKo/DNVd\nJwUbuLfRAW+nXhvPtbephfqYLGEVb9nkpXvtZeSS7stTM1RZpgOfydSwOrpS\nnWJXCoxOTFVGay0d9WWHXCsAKbYvuGnRoTpKH1/7z9Ir5KK5aRbjNoL2gDz2\n+pFCOIAbdWENARAzjEicKjMlh/lPCJSbfXEAgGlOHQbs9FvXyK3LL6EWVJLv\nhBV0\r\n=Nd+C\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDBF2dVHtQdqRKNa1xyrsaQjvs37U2hp8olj8YGLm0nzgIhAK8KwXSm8GHKaVAIedB12EZooGP7pD3rSHkZt52RfJ4F"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.11_1619730436336_0.5763572849563703"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.12": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.12",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.12+25c205aa",
        "@opentelemetry/node": "^0.19.1-alpha.12+25c205aa",
        "@opentelemetry/tracing": "^0.19.1-alpha.12+25c205aa",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "25c205aaffb6707d4275be6bade3e078e50e2df3",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.12",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-/4VQFdoupHF1ODQCYVl/XQ5sSMDAEeliWpFg+gtGzOQ5JW/vt6KgHL3vd5iu07LIqBMawmvfhXRETHAwTJ9yvA==",
        "shasum": "498fbf780b9bf0fdf167194d130525ec229cba72",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.12.tgz",
        "fileCount": 45,
        "unpackedSize": 111815,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgjG1lCRA9TVsSAnZWagAA7qUP/Rd4zQIIEE4GiH360pn+\nXLIIFtIzU2d5tUtXtMAMxLl6JnvUkSUTJ1T6pNc4cggXONXJCB/AXdn6HqzC\n6x3Xv/pJ9LJnZ+twJ2M+Wnz/vR3Xl+8eHrydg4pcU8guKELhv7kLcJ/Rc1ik\nbjZYkB4BR+c7qnkNWlrwbRQnp2e8tuSj9cumB7F67TzsnBlon7x/eE+Af5Rs\n3SrXiIOzmwoC6b6pKRW0Np5ymbXt+4lmcn2cc1w5OnPUdeWaAtdJBO3tCIAg\nsoKl3n8DuRGEe5JiQBBACfvTQJZPZ42C5NjeZmrdODEtjJ9oZp+JwY9Pcjj+\nwh3NrQArt5cjdImqvyta6wu9bRpI3NJjlBD+CEh1/OyfyFQVHHwvlqQg5+Nc\nww4o9aagt+C0HRnluSIJ0TbVrqrR/p2Z4tDcKH80auWb16FYaHof/92gZMYf\nKriVW+1nSDhjTlHecmqHqGxTtlg+/v5UfjaLPfK0mQmzLc+f0w94rLe/HCMN\nqKNLVqU8R0eP+9nwRpkNOr02d2ogvY8wDnN28wzUiwue+b1ndPmo0mEXHjyl\nrCrZlovvVnjymYMCbcJ4Vfu/08kFrWWOvohL/0dqSRGgumgZ6ypnqz/ZEPL4\ns4ZLgwlu/7Jjt1/3R264Dl4IfgVn3gJ2atVm6ArINIfd2+FS4VjN06N8L8BZ\nO3Lx\r\n=2+x2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGvfRjCgMo6SgCUIEtfoVC+VjHd+Z1K9OEo8O6xey38xAiEA436PaDxgZ8Z2O92eL9OC24xcOMGPmCaiDgs6DpSDp6U="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.12_1619815780677_0.2575927353541412"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.13": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.13",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.13+329cf927",
        "@opentelemetry/tracing": "^0.19.1-alpha.13+329cf927",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "329cf927c6c2c9977996cc2a18a3979af2e4474e",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.13",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-WfoFu9C/yf1UwewVrwMAE4fexB3kd/maZjGhU5SwJ8LcWl29VC7FlmPaMe0niClln78vgFAb5hK7D7G2gvLm+w==",
        "shasum": "4e3384bb0279112e1c4bdbb1d69582ac180850a8",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.13.tgz",
        "fileCount": 45,
        "unpackedSize": 111797,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgjP3MCRA9TVsSAnZWagAANi0QAJ96f9kkJ9USKMvyxXOX\n/M4ZMydz4tNoXLLm+0ZR486dPI2GU27FJDQKfluBZU7WGU2Wnt/ZuU6hAlCS\nAlttlpjrfd19bhXXnbIEovNkZm0tzUDy3trD0JUdXoDeN5zDeNVGeEf2IBea\ngWBuiJNGFqE9KzEBUVsn0sqR4yIMlCPFMCvblbce+pZqhG+Kdv7ybI7Kr7qD\nRZIjP+5H8TmQ4/fCZOcSc/x6vsP6ELmUaBomV2hKNYlrFenEr8mXo9fCDmQX\n8VzA/H3wFY7POrfJexaSyOUT+I+fBEj04y3j5XkYrpuXdcnstvvs+mYCu8o7\nUNxdAWf/7QXrQaTE77nhp/JoBnKQvYyfPrsI8vl2RKh5AaOG4fd0f4ouWQPP\n0JPYP4fMLIJ43QVIeCpxKfTEg7vuID09Q9F25yDR7jmazfH3nob4x0Iga/75\nGf0iatH3vCaGRfAN9NhFeMmFvgaOAV2MoHQ8CS9tZmnjmEdDvjMvttQh+3KC\nebLm2NvY3Cxc7x/NcRMXGehunwXQppkguRFCCvDPWhF8Ym9DP+qHfTWr8YHh\nLuUBIHTP5kpXNREt/LGk9UK40NbezqTT1pm7ONAyUA7x8EC12VKmhR+hlUOj\nbw5xmXLAf8gHatKRSkVglMtrudxuRlVoALc5NFU5KygEVFPDG0zcX7yI1ixo\nUYy3\r\n=oxbC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBTw/5/1V3M6BriDb4fbkI3MmU44aiUOtv+tsW7QpqoeAiAuqIUuAZum4CS/95VvBodxcvmL35OOe2s03ZS+Xwt6JQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.13_1619852747535_0.06047045868761658"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.14": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.14",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.14+e1e79ef1",
        "@opentelemetry/tracing": "^0.19.1-alpha.14+e1e79ef1",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.1-alpha.14+e1e79ef1"
      },
      "gitHead": "e1e79ef11c3cc190805c3d870cd82060903d6e15",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.14",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-Hfc+rUSCA/OzXB3t9nhIJiTp0UJ6QC1S+Sdw5XoMt3jczlx/k6S44zJymE/I3f5LJYuflpSYfDQjFPF4S6RvPA==",
        "shasum": "e96d2cabab6b34b52f7d2f81e42f490012e53e8b",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.14.tgz",
        "fileCount": 45,
        "unpackedSize": 111815,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgjQVXCRA9TVsSAnZWagAAHzgP/iEuDZArPgHiIYdSUfo1\ncurf4tT2MaKbob4UT2uvNKZpuG0rJoXAR4DoC+6QQYWR7AIWkvv/gmgABKGc\n9dqJ5mRgn742TCYeCFdgZL36Lw1939pO5fNhkVwWilvmEYjDsdgZOw0N9NCq\n/zI7rpgjCS9i0vc+fNhU1Wzcu96ZLv8y7HRzFgQqUAtg94Geqyq22L9x5W03\nhZO/kgiQ9XBtR67mF1p/rtg1za92z2TD8rXFAg1PgfAZjVwhbvcyhvEQkrsD\nBpPBtfuq37db/4LrlQ3RgAzxv/w8HfGH5oBZFjiztCLHYYsRYtR88iMhi68B\nPCLhd89EKaqKMyI1N4ZNDQpvVZ81KptYL/2ncVzSDDWPRZxa0fvcxhxO9dsY\nGKzg9rRduRUZquFRetRHj4HYRo1G7Ji1nXYPe7RLCPoOb/Ar0ml4haMPKo8h\nfW2lPaI8YprdIni3OyWjPVqYSHUEk57ehIkSxr3a7CM9QjCl2cQNqIEIPyCC\nslJRjkvw5FBAOsGGerRji9TDUs3ixPTQ+AvADc3E+YC7ABRZBykPGZVhdS6r\nuNfEdLpYtosyfeiYTZaQ2LTXq2Yff9iCI9VBOMTGkkW1fKpW9w3LcJw1xCrh\nmb0pMbFfPS5qZABBVZmv0AkdWDAiW2yL5Rtq3/znYoGSiCq2ha9/gG+XA8ah\n5Z9l\r\n=GBqU\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC5aGkfwZ5N2nHxHyPswoKargCBbwdJndaGnl1wEuxwgwIhAO1ezayg3M6kQgtWjBc2X83233AU4qcCfnsOBYWbbmma"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.14_1619854679202_0.4859533805785712"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.15": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.15",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.15+082abf97",
        "@opentelemetry/tracing": "^0.19.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "082abf9736aa58c45379cc5541118c4bcb9969a0",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.15",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-ZQSaN/jPqZban635oUC7lj6ecFuJ41oFPQRb5dL3T3O7c7n6bORRBd7ZLUzTD5nsPOfrxGzsJ7g5MJIzTaXh5w==",
        "shasum": "15c21d39da6c73d4f94459c5c267ee2f4cb88406",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.15.tgz",
        "fileCount": 45,
        "unpackedSize": 111779,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgj+voCRA9TVsSAnZWagAAzHUP/A2/M/3fNCW8T9cGTRsQ\n5TFHgTzeKbeRzDvdH/l7QD4P/YOjEE6zDcGlJyzTBRiTBeUfVxz38B/B9rHR\nJnsDPaKT03SGWAgROvLs4zz1qnO7SdWrCZXJfxkUCoicnWL94wq9heEUHN+X\nvtRLSIey3drzdVxXE0kxJyQeujeRtfZzGXh11bm42fJiw1fWD6ReMHVQt2ze\nWFbUTKXD823594ZjK45oib09DNs6GcN3aSYF7G5rnDiS+y7e6zxs+XuN47Vb\nFKHdm450/07tchcLVe/LrxS69smy05f76hP/49WNMEi7Q8VDQGXI+WurcFoL\nOhC/yOqVy+5LvEAaZHiYqRcY4HnzSzAC3qwNZAXwts2s8Qv2WXbKdpnAYr6K\nraAQS3qhyTqpDGXCcdRYYPDoBNFNdN/Dzj3Jw2dQ+QJNrnRa9NlJMOUIl9zD\nb/A1namV2v1angyERvBNDLmFgdv+s0jovImnS6wo3GsgTNz29PoDv8W4w6B9\nGqsYN9/Xjz17VavgLKQ/mWFpwMS4nZOYGbhoMy3sZ54GguotzHk2P6SOr/GV\nZgVUhXrpQfyex+MuCNtReDWV4jFFhcs3Sf8+nwHLMNA/dYumnB3q/IFsVrIq\n/4xPCpOlu5rA+egTVEGdgblxUoi/+eMirNtkWPGw4OH51t7+0s22/+qxkfA6\nn46P\r\n=Gk/z\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFkSQH869MT4zGWC2GdA8XJO55j3QmTDq+q1vABcY4E6AiAvuP9qxjCEyIbKsmUlucxV3JPAmSqI6sxNTU/Q/61h8Q=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.15_1620044776306_0.27101302588816467"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.17": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.17",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.0",
        "@opentelemetry/tracing": "^0.19.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "a9d300dcfe4b4a165103dc26bf9948ca701f14e5",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.17",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-koyFYm8PaRc9/rI/niBu8xi8w6vZw/BekO4l8wofN65NOWlbnIGjezcWyRZ79Hc8BD5FFIAKUnPGWJ+7hhclVA==",
        "shasum": "5c17d548ebb8921eeb7bb3c38644af97aa77e63d",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.17.tgz",
        "fileCount": 45,
        "unpackedSize": 111734,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgkFTcCRA9TVsSAnZWagAAx50QAIDWLeNMQGUdB1MWS7Ld\nw7Wt0eIdCOKv+Wm15cjNn7WnYaPqsSvtVBGMbYOCC3v4ievHpEcnYSpZc+xP\nAe/V17nG2X8cYFR/YXDf3Df3xhxc1dU1eNYOubEeDrD+I2XOytZs30tlh2hk\nypBXtLSH7y9TIP/5s+Rzbc3ijNyn/a5iy438ije3g3MO4Pc1W8RJRBjGFa12\nT+yEZjEsp4jRjHijV/2tXCDJXqliNSQYvYRTSDdGsOH3aufT/YW5rK45cy0c\neWqS9BHKVXxKjpQsg4UJjcsNg8ovzIxWwtXyIutQYTpBAoky/hD2IIlIM8hM\ngTjz+M4KqHZchu+loVkNdcXzqRWjZ8+kw/gprsfLjvhgBifMwu/QOvT5rGhA\nfEYgL3u1n3mgNmChQJJz0pqTlXYqSi6tkSoYuEsqYt/l9X6ju/0kcWy5DjnK\nJcd7uyCUs3NWyi1uJr6qcGzfeBvnIQ2ditI6w0dl7rMoKVPbBHTJB59WOYjU\nCraNBPKzFzbpTdiGbHtMYXbMuU5I4FB7F2JweyyQ7JnCazwCLoxOCcNalq9K\nSbKgAn/0N6w3ud1wg2VTKmtvh8T8W5NRr5iDddfJM2aJl+NkLKkc5aaXOzIq\nBy17SGWzy2RSCkBeKrcz6FEUliBpIAobieGzjcMXt6qLLDx2tV6mkPhnNrQ+\n+8fO\r\n=Y/9x\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC0vyN3uCqA/hbfZH8ocuQXrZiK+qoabIiRZmRi468WeQIhAO6aSVJ1eGqIsxzEOmnSzJbE+TvPimBWtHNF+BEvXZcK"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.17_1620071644057_0.36136904318172913"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.18": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.18",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.18+dfb77372",
        "@opentelemetry/tracing": "^0.19.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "dfb77372d311587c3462a43497c2ec4b3867e9fa",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.18",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-QeOE7wT8bXaqinKEy3Z+CmxCnjWdbb7KMkW12UF24EFyPI1+NmnG9UhO94dK+GJ1jIab1WsLS84UMHjeuxszBA==",
        "shasum": "ec2f89f05b86302d6bd8886c06124053a64a064f",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.18.tgz",
        "fileCount": 45,
        "unpackedSize": 111752,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgkX9cCRA9TVsSAnZWagAAs8IP/i9Oe3XJ+ii/Sx5x7P7u\ny9z7bdIShMREunPRUSL2yOv1NBec/osK0idx8JuqCjbaP2ZSFs8Birb4YZIr\nQphovsTOnQUEtDe03hpFL68mL2rLUp82D6wADwJcTMEzx8ZkIWPujYx7IbCk\n6Oma8OgPZGzbAoBaHM01u2LrtfJfV1EmWFaP4/ydrsJXFJw6+A3a3iAcf2aE\ny6jd5HtBHOVcuT9s5LKgJcKDWeHYNchE4bnJuHUgNprod6d3Ea7hQRCbqUgo\nFPm/GZzcAm9LN5IARqHBdAdyWNe3LKi/u7jvRCPSeeU1p6bJQ3LSAyygDvpH\n2dahplrM2cVKunEB1FnilCFs2fQp2uYugTitJZRgQaFQOMMsFsCcyPar+VLh\nytGZ/XI3U5D1gCCO9YIYvxmfS48gbfa5HE3MN2TZN1s1o+DG7hJ8mbhVERiL\nluJkl3cJaAzFfwaG/aOq7Uab0R5MReSYxR97rxDzcK5rQmMVDjvtnXIh7IsG\nQEDaySwhNVUFnpcI2/SgGolDQED92+q9XiPvyo66WsTJiNl/JCyU6iWRNghh\nT8NdF1xqBBPs9Lok6NwGhb21cHQnN/xbsqbosmYLcx6YQ81Mt3lCRAJqInxf\nGIYWSIvdSOgGIva3FQC9iRa0L4J4y1jJa8KSGbzGQm2eM2V9wOR1yhzFtkQn\nfNOz\r\n=KSpO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAeuIoODndG339JZ6MP5pv3NhKi1RvT4aZ2/GLEIiVZjAiEAtqOUrl32PZ2kmOunjNj0XNT7aUN2gv7mIcFDVSoL0jU="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.18_1620148060406_0.10241831525383271"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.19": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.19",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.19+9ce9eea7",
        "@opentelemetry/node": "^0.19.1-alpha.19+9ce9eea7",
        "@opentelemetry/tracing": "^0.19.1-alpha.19+9ce9eea7",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "9ce9eea7cad32cbc57bd80830f21e4f366ecf929",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.19",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-DadQXUJ8M5cvAvZ1Uy930Itejpgc2KNLrqLdlbq14FnteOVnwnTn4OZuyXCYtb4TjJ6diGKVyf8gqk53QxEkjg==",
        "shasum": "e407f6cc965e30f67c6ac7bbd6d16e8267bcc361",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.19.tgz",
        "fileCount": 45,
        "unpackedSize": 111788,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJglkOKCRA9TVsSAnZWagAA3XEP/Ap60yrSAOskntYw6U+W\n2UVVqorHpACzmKahIj4izafAW8VQxuI4uoPQdCRfv4E75sF/w3C+oN+KSYa8\n2fZu8imqP/dhHYKD/dktE2Ktu1dka8OQ/2XuSfTcRFyvKrKEnX1O+a+lUjAL\n0rzWItdYLqeMFqXkzcDfVdB2yaFl5jzJI8rV1suWRB6zSIfqFPqv/+8RisRG\nYtlV4XhZEuGz8/QloWk8mSFXPPE/AlM2FMqBqr0V4RYb54WqlUpEHnAYIRmP\nptyZk+QMBnPncisI+Awt8oiMVT1cg2t2vF9/4x87zCxcJgpLaE0xkwhoT2lD\nqLMqgsrJwJzzbC5wBfvKIIlMudjatgyL2CzN+XR93tgDM6RvzfwAoqmTSkhw\n1sdOuatNEPPLkNobm4hePvB3kAVP9vnHYypQrKGQrXZuqUuTOaDbkHv3mcYb\nnxoYSrDLgvmK7foRYy6syNvWjIlF+Rt9BTc1J9rRNW93qhshc3wwNoXkjYeH\na/iCOVIyo01FsmQGDU3LqNrofTRTdlwZyRTm9XHXPLG0c97Jhl2vuMy5/8gI\n0eSwkZoiwdY67f4bbl7z8WqKJiw3BHM3oDqvbcRnMhRM5YspX0fmosxaFRpZ\nUKSlt2W5iH/S3j3ywJw8Rlz8N4VtWnFF6w4z6TxdbkENUI4Xq3avJeHQtF7v\noykb\r\n=FyEC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCvraoqrP7+DWYBD3l/n7+EQMIokLysPcYSZ4FH/XKqdwIgLYKWIE8MACVhhIq8wNUfjEcwbEKwUytHq2bKZmUQG0I="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.19_1620460425999_0.8173808100784421"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.21": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.21",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.21+5cd02aa1",
        "@opentelemetry/node": "^0.19.1-alpha.21+5cd02aa1",
        "@opentelemetry/tracing": "^0.19.1-alpha.21+5cd02aa1",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "5cd02aa12e0bf08a9736f11f09ebaaad582eed27",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.21",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-F7tTtBAIfvb2Nfioa/m/4eU8w1F8AK0/4dx57QW6gydrVfOqZeGWN+W5h/rv5+bcQDKunYzey/dXLYbBOw8FIw==",
        "shasum": "9996cfcd8afb8c2500b7dc6cd6ca309c4f68baf2",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.21.tgz",
        "fileCount": 45,
        "unpackedSize": 111788,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgmtHTCRA9TVsSAnZWagAAIOwQAJe0lhirHxStQtK46YHK\n74JJ/XfzXFs482i0Ytmj+yRDxLIGvJ6bse3E5BoIk+NJJPM8U71zs34H6cRg\nqwhuGiKfTZf1YyXpnor63/d4JmmML0SohVgDK/ODxKfux4LL72ne9Xm/FkJL\n7zIki/6Stp03lg2ommE589N+HgXfVVXos7wXPevY0RQarpNQ/3qQbwjB6uIR\n7+Pa+ygAdqm1QvFHI7ZqZWtRFIJ5eV1Sxc7SXnDHLpSDtMYY5esE+E+ZiMML\nsJtSk9N/9vA1vczzXnTbSdejhlm1+NvrEyB7OTjowRXsXwKpsNe+hvxTxltt\ni/H6j4RORpnFW+G20lj66ni1LxJ27pvabGHmBF3hXam6Q4V1guzLF7bH0dMF\n6KqasEd9jimty8rQTiCNJlM0/Y2zx+ccIbSacyfn2UBkzc6Todukf1XCcqHi\nLjhdf2FXbi14OE0mXA3FyiIjGKk4gWGI47NqEFpCPOGOxSUCRYt8vNWx/E+Z\n0lG0AMwuN/sMNUEB9aSzEs3xHnwucXVWVW0eU3WvjnLw3S81oI2KF1vkU0bm\nq4k/xMcg/qoz5VAAzmhougeLK7odN+NlVZhReWNo1kYJB4QteotqItpW9qms\nL4uqabwRqN2LpUb/cBWw/RTNHf/zxy6+tIZc2aVFHOXMD2LwvoaDAgWw3MSe\ntzXt\r\n=VtWV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD/f5a83l9erIjDG5sjMHya539/9c95mwVyR8p0JWWY6AIhAMtHihQalH3JjGCEaTSgNRMCWFeHWuVtf3KIkL8s/2M8"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.21_1620758995345_0.9766676655174127"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.22": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.22",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.22+5f7ec008",
        "@opentelemetry/tracing": "^0.19.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "5f7ec008e407b554ee69480eb740435add0c1134",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.22",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-myavMVySbMRgMoVbEB4ttmaYEVXViiZicZKsRr6iK9n2n5ufOqTh2m9TXVECVoTw373HEvRSFRTaxbW0YQEsyw==",
        "shasum": "bdc2710b157562736dd5068f5eca3bda0737ebc5",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.22.tgz",
        "fileCount": 45,
        "unpackedSize": 111752,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgmtYiCRA9TVsSAnZWagAAdp0P/3z82p+GTNkpz2x7xlwx\n1SjUVu93AXon5uKogV/fiNxUptouNTpvY9sCNrjGA+fCfDv/5iCYp4XlNSvP\nGmLAqRThNfC0elYDCk8gu2fWTnkLrIKIEYUwiFi2iTKBncsVfBDgSSUm7ZBO\neT+TALvsEBiiZbePwcWhab1rhKO2teTg0tjfJ/I10sjljZsiHOPkzMg6Aj1E\nKXyq09KOScVy63rfsqkBaeHHdsXNGds5vAgf1t1BXf1yz96LWbXsSgefRR2I\n+J96mxxhWDFOuQi1JFh93x1ODzMjn2OgFKx9oIZgTDjVFZHStL3UblR8iv1O\nSwdjNirXj9Xs7nFlJp9Z5jHTp6fJfgiwH+vD6tsdL9w7JZTsCBljZRUuTUmN\n/wQPqVSImhUY7TCS5NZZraT1p8ctK8uwa65G4JDg8ctZO2QqNaYmVnHvrEPr\nlrx3nLTvMDXjMAOWqZWeGYYZXcVo2gjvT3lXDrCx5dVkmLlJq8nFiKLtOovX\n/irDmzlgXlxaF0rMc1qqJ876jUVRce3qhmwqDtOKUQhqb9ZH0SV3M/1YtUF0\nc91BQ5NPcVdb+FtO36JPTbORH95yCdcIiz9lqgPbjE5o4QRDf3tw49/gFqbl\nQDmaWL2HF77WwWjk8Cqlq5d1nTHB+VCrCZ2CajIRUqvPTbMxU0PWFRNabrF6\nAky/\r\n=FRBT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICkyGPQ4wCr/4oSlxpz1KtLNP5YNgdHaKmUC3OHgG1XwAiEA5smYtBh2AWXJCDb5HaeZLMVtFW7y4/v9HB+62GkNj+Y="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.22_1620760097871_0.8289878151466314"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.23": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.23",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.23+805c2e87",
        "@opentelemetry/tracing": "^0.19.1-alpha.23+805c2e87",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "805c2e87283690142d3b1970130f1fc1da2b2a4d",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.23",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-2uca8XGleEucMQYehrdDALgqNyK3caMyp56NExDmNU+NGm6H+xxmdOaeV7lEAjXzxRzog3U3b+TNz4VoNhMCYg==",
        "shasum": "f353df17023c41f250389dcf5d38f8d7c1017da9",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.23.tgz",
        "fileCount": 45,
        "unpackedSize": 111770,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgmuVaCRA9TVsSAnZWagAAfE4P/0QziPT7WAfUhY1+4zX7\nnYdTPIOAEjwoZ7sYpgWttwF/2l+7sX5ILviYceN/G4OiCCRaH2NYUfjtgQB1\nhIYsIYdqworVncZKwt+ZyAgJsNMIEhCclk29SI1FARZ9KfqDOM7jTSgahEw3\nj63QyyZkxd49BlTxwgpjFv07A2aw51Gxj4cJXpEtNmKdrebATWBeKv4SjmPC\nll1ptDgVGKmmJ65JrypC9DEYsp3GW4+KfEtc/nOm4mc0C8csXM9RvdPDc5vX\nMX825653lPOaLlQVg+NXtwphdwqPu1G6ZgsTT+HqdTRFVtwfW5BoVLx/a3rE\nGKF6OtWkn3zpDBOsVYsgRZ/0jBrOQ3NCeGhAUVHigF7HcesHf6Z8tp4312kO\nnRVQH2M8TAmTduGHE1NANBtr/I9KtrWvV172BAnj8GVeqG1rUXyoPtHYJUZ3\nhyuUrWbU4mh9dy0wdWgPnvTC7TTPVPGd423208zEqMRHIwAk3bH0D0Iy4lbY\nV+PRCp7emxoTySsLEEVr1S8Hd6i3HBrqp0+4uAmRr+k3J1Xdls6KelXMdLIS\nYW1xXY8Pb5V8771g46D84jE2kqqcjGAu2fu2SHLwEw3sBYXCmt710WrCMbLn\nTIFzHZ2uHWCbP6RRKYzmAlj28wdseECpy2H6Ec8XBZHGwLPP8O0B3+OnwS7I\n5ugu\r\n=251L\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDhfx7SGcHGacM1DvnaW8URr8yVL/mE1Z8QRvLYn4TOYQIgIsHoDyOx0jK0ACzwuLN2SfhS0eGiNZV5CASz/sMB/Ps="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.23_1620763994140_0.3637625228297314"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.24": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.24",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.0",
        "@opentelemetry/tracing": "^0.19.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "5dcec45619a1ae5c0e8f748aba909a94416e2c22",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.24",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-h0Qkb1/7QU8nD63VYiRnB7XhviJ2HuTT341ePIPBk1q0EZ7Gthv1TH1PN6uGNHMW5sD/0qcTv9kX5O9qOPNXFA==",
        "shasum": "4d8b75b585563c0fb34ae04fb7017af8bf67dba0",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.24.tgz",
        "fileCount": 45,
        "unpackedSize": 112121,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgm4ZKCRA9TVsSAnZWagAAqSUP/jL852C6wnd5BoXn1moA\nQYMX4tBUkfR57ZmjdivAvsSoTEk7MxmGLrUm2nOyTeOTmgiZcdLLl3Z+xYVn\nSc0X/ZXfY6IH7sEDTKOde/oW8OEtnUkwSoaJOPCnpiNH5/TJs9242FMi1gVU\n1jC67KzJdGRg84DlzkR/mKUTcx4XjV4zf/2nMQmUR83BuMc36JcBEpN0lLap\n6NkKLMm+u7w9vKfl7cLBTFExkilkLVWkB0tiRZVxaXJ0p2mTbMpi000Nry/I\ncqaH8V7FT+4WKZkChYFhMzBHPU8mSIhjj2+3w2nHcxXCZDsE8sd5rTe2dzrc\ncgZf0jn/8LTQbdGzjb8XT6na/UsQW+MeoCNR6L+f7G232REcSijnd5WzEGvd\n1fcYfryQjs6igM0V450UymX/+dCPfOK4jvVSZp2zN109X6KfETG9a/qWhZrx\nWUPEyQQ1g1k5UX7tRruvfOUr1Sjj8xEz0OkER75eodXjGCMATPgd3N2JhL3Q\nYgJHPzurNyTwuj/j9M/y24U5XvIBJBlIvwWSQKAyqA6qjqM576eJsgPJ0iYl\n+nPBQTZ/NywYYLT/dBGh6p4toIJZ3neQysiiRWfmDexeRnXwDFKmnO9qaFIS\n5vkaTtYCvkOoGaZrsPSHKarkbJltaYofqVFA+NAzszoZ2YYIFb/xsgNL9whp\nj4wP\r\n=5+Fx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDJsOYW8OdBHdL7vKiMhPnq9MjlpUSpSStnNAe5OhLjEQIhAPcJv+NLJSYGMuksPIkBCQTqIig36kFeKGHrOz/8fCAR"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.24_1620805193558_0.26209916966263536"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.25": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.25",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.25+02239b52",
        "@opentelemetry/node": "^0.19.1-alpha.25+02239b52",
        "@opentelemetry/tracing": "^0.19.1-alpha.25+02239b52",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "02239b52557fe5b4c5ae6eba742340428b856492",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.25",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-9QQfyNBlSje8bmVlljiAdRtUjDGXbhTpN2jNwDuvjjI6xfRdnjfKPK8AzRIdpZIiriUOfOMmIW6OsqbzEHlP0Q==",
        "shasum": "18bb5c56bce949de8acac2080aa45f08ef8ae848",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.25.tgz",
        "fileCount": 45,
        "unpackedSize": 112175,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgm/oICRA9TVsSAnZWagAAP7YP/RerQ5t8yb1q+MiYDI4r\ncKGxE+nQIUyUllsu+LM83jb3SZAe+WO9jgxhT+xMp/MMW0AS8XrNhMJmO3me\nfuwUklAvwFyQ2j205nGDsmJZQSSqqy3jlZ+TCfAzv0BZB/sJsBTj2AHO9tKW\n0sBjW8yVaIxS/owuTlJX3et2QSrFNCzYYh5HpClPwsj5KCth2TlEKC+Cn/lU\nFQFWQ/ZoU0Hy9Y9lP/r4WHwEwgRcsgkg0bUg4rPsX87LNw4VD0waQE0y9qrw\naCiSRFgIentxSMFmlRKx/77HZp+qJB1RDtFoahxnY/2bvd/cLrOx9kxg8Vrb\n7tBNVxpO6t75aYxOfQXR45+JMem55R6Mz+gAVLrUlgcI3Z6bf1p8wU1RCeEQ\n5+p359sspnQnJl2NvAVjaK6g5iwM18gZn8mJiBg7Xwn8T6vqKU69W9Hk1N++\npbwL0UovW8l0fhuKKkd8IOelmjq8e4ma+VBJ8PumCH1WMIpogZiNv4d6ozXC\nNfisBAN2ujHjittnQRvvIHhjwce15G1MBtiwHnq6ft2RVAQwbRTlEQ7Mwpnb\ni3y9prNR7O7RlQHtVXb8nNm0Zuoht5NkNXTTh42CXnPbfTUnGOo6eeaqmy6N\n/CrsxBuPo7UfgYZjIZLfLgMJmSCO/ulHV5pKqepwgkBTJxogqMgYBK6HCvX/\nfsvM\r\n=rNaA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBKWeDiuhS8oX62ai3oNaVTXhsunQ+lw3xqN46RZwZEXAiEAo4uJuidpUsu4mD5Q/6ITtH9ZCz6KhbD/Mw+EGMjqxqY="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.25_1620834824299_0.07720514195804018"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.26": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.26",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.26+1758fa6e",
        "@opentelemetry/node": "^0.19.1-alpha.26+1758fa6e",
        "@opentelemetry/tracing": "^0.19.1-alpha.26+1758fa6e",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "1758fa6e84333c9c43cc468c5e99dd3646f7e3c7",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.26",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-YZSc5OCKrudtFlQOc+cXysUbl7PleobDjbqGBlFa+LohWrltIPPojnLMWYFd7vBgvBzs8TzeCp/Bl6fjXzyqcw==",
        "shasum": "e1babab321df9831477d097791103cfc9c431fff",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.26.tgz",
        "fileCount": 45,
        "unpackedSize": 112175,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgm/0RCRA9TVsSAnZWagAASaAP/0NqWUhzHkUDBai2wIKN\neJVA6mwBEBq0hRJHziYiuzILP2Ro4Zdf0DWWcWFf561uEj2iS8ROi2fW+tPP\n3J83u6FfW7Bb5/W5udxE4mKdE3pzqPohi/3IjyYBlFKoHXMtlO+RrmlNJ6dZ\n0R/oveX2Gip39XsvVeV3C/1m3J57Y5eIdzg8tC7rOixPtObnW+YwStbOBbE/\n1IAmH9Z9Q+6Hpp8BW/jlt0gs7cM6oRzUEVgbKRzc18jjqr0fjpXFohU7NI9z\n8jMiWWZ/Rb0f3IZN0pc5u38AyJixHH8S0ybYwEZVIs1hWDGXQipR8tbMpnWI\nnxp7c2IVK8g0fuC2ycybG7dkQDK3Dw2AE3K4wzVWbkWMigN5x4RiqBZW3x1r\nSlTXfN+i9KH8Xv3cAgoRr6NGWHS1ok350LxTDeZL4a6tWodEaPO34HeM5WJh\n2vUuoLPuboUDW4PR85mbTpt40fJMljbVZpB3/ju6c8+KYzG2JpcHO1HZmKle\nAsbCMptlv6HJFruxZgMZL0o16hVegf2bIZPn46dHZQ6sKzTdX528ugcRxrdo\nU8ltmqkM/Yle52aRW4Xqm4EFetGofeOq3gHTASSkEJDClGjHCy8nXPskiOOM\nzzey4GaswaFKYAKn4artWpB1/083OtOX1+fJ3AIr4KingobxXK0/NYRBdPgy\n+L7Q\r\n=rDLW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEMCH2Gb1PV4iK31MU4TVQESnNvmDkKXkeQzQzcYD1cOrdMCIDAN1pt83lwcVSSHeZo46GkppbWpuEZqQkSY8OX4rRqn"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.26_1620835601346_0.8885291323343758"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.27": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.27",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.27+68852780",
        "@opentelemetry/tracing": "^0.19.1-alpha.27+68852780",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "68852780eb2b65cc4bf492f020ad48a9af96a4e9",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.27",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-QmVZRbjUU/MCifDz5LYdeEl2T6gfDuxdFxWguZipF5itshSmrq5Jdc6Sewj3vsIjMyMDEoZ31JBB7zFH6YvTPg==",
        "shasum": "878be2526dd9dc9db5e95e352320191fb8b7c8ed",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.27.tgz",
        "fileCount": 45,
        "unpackedSize": 112157,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgnPjpCRA9TVsSAnZWagAAaBsP/iSV1M4QB7ldEcPf2Ida\n8jH+6yHWOWx+eyPNXOeJlgeQknUPcejpuUKB2VX5Gq1d3qQIdw8pCr9sSLAr\nKQ4CZuv/LSVlNIouXWFA685TGQ+C9BVjoyyYADXhtZNcQPYJ8Gewc14mxlhL\nshUr4O2kuqj0wcJIkaiSgt+MuwHnbFN0868pwYs6FqnO+XG+WppK8kgqG6G/\n/jRtUgS8IqLkda65/Ub9+wfDH3bc9HnlaQ08Kf6uEgs6l/mlA59Sp2fhG/eC\n16JUyM/e2sr/sFwUNXVZ39vuVxId25IbJOKTIVGPOgbnQAL0DRXSkTcv8VA9\nu2E41aV1jXOIxNFWYB7KJk+fo0yHJGl0vu8A51tHvbwCaaWp1F44Vxh/MdDI\ndj5ShoFAckZPBl6/SFdboM+DqLEDpwC9yv7VfnA1P3uJWb/RkRfxroW7mLW0\n2dXrap+NDooFPTJ8Tuen8BNymW+BFH5lcU6pVCf/s1HI2L+XXP90HFHbfVD1\nD5G3TVpVFYZhKL5NG8otbV8XBGxkFrJXuGA8b/cfoDrhhqv/gvpUgPB0CHEX\nTQNSySxCHjcfi1vxrg9o+8UegxkQLMQRZUX7gomra5se2ccnCM9P8ziDv6Yb\nY9DaCt2SCLDh2r3KcuAR/68W+8saVraqooM8OwxC+oEF7E7E1/3qigl3KaxX\nu6A5\r\n=eioI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICmsluUXhUA2gH6hnIpTqZar1dskYLKL7QdAD5DSIhH6AiAsNluS2YMQmi3TvwVkJim7h4psMaHO8OLyXn0/MKmKMQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.27_1620900072659_0.22398916542802194"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.28": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.28",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.28+3f82ff41",
        "@opentelemetry/tracing": "^0.19.1-alpha.28+3f82ff41",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "3f82ff411c6cb26a5aa40ef30a788e6b03255242",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.28",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-syFlOe/Ct9KcbDjy2DJkNArXDxDogHh/r4y+qE9JdScyRHQAE9Ske1oN4ED/WoebSKzcBpSSDznHUZD6YuQuMg==",
        "shasum": "4cd928240116ba1d89730b59a276fac43a090a92",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.28.tgz",
        "fileCount": 45,
        "unpackedSize": 112157,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgnPwyCRA9TVsSAnZWagAAHwQP/2QugbV5WqaUHMK5IaHV\nxcNBaFrnPfYC3yAGWChLtDv5o824YSxgx1b2wwO+R17OzSCuSyYOlg7Bf5gs\ngtTpCGFY0upHaZqFU4CxBGHhdJtyZ1JtKyVuEYkwv9u0KB2Y9CAIItpZd5EF\nZuyMk8Mb4W+OAFdXhbCSZc/u+pIgjcVUdpkALapEUXrzqA4pDWCNn5ClDBDN\n3iBbz1JO6dKI/wVLo+5RKE5FoNiWEIspJB010bWG2bJiJhmQ/Wj9MRWy2SGC\n2WXJNQZCanjU7Yo4MIN9xfBgHKHROvQbctIORmI1gtGjruJWy6Yk/taHV+kI\nJnkbqke2dykXXq3INJyXyE7SX/fNRTv4eY9lxROWyhzUOnku25LomFF0m/ni\nB1ma3p/dHmIWaAvAVqKmwU6XCMR4FGxRyhtvICixGQLkPzq4BXn1mRiCRQHO\nyQ5/PUTeXqSaItHd2YJvaubQtmtjN0rebQXqkjvsTOQ0Q6fzb+p9OU/0vgHK\nuU8QEmJ2DcGjmHjuIDymrCpOz4Zr38RvoWAENvsCCJZja1lNrxrC4YMq0OjF\n3aN80ENpH+sUG5NyFH5OsFJ/nMReNME7gKfjKXPcf4VHl/lN8wKzwF3ahCZF\nxcm7LkGsosV4fQDf53HhTxH+b48W0lRNiGMbnQzXkd4OFBePSbywrOSxZ/mI\n5bWW\r\n=0Ubz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDMt9UPCWT9QLJ2barGbWKV43Gyxz+X2e2uP3cPOa1pmwIhAOYe/W4eLfzWzGAZiMcIgzptH+qa19Dqxlq2bipxoLxy"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.28_1620900913645_0.27894426166864106"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.29": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.29",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.29+e379e59c",
        "@opentelemetry/tracing": "^0.19.1-alpha.29+e379e59c",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "gts": "3.1.0",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "e379e59c1a2490053be16d0ca8aeb1c99d786a4c",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.29",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-Nra9NP3LFVwvJrBjmehG7pmP4x4k8FuKlD0pWZxOZERVMM4+PQVyAG1TkivkKDhotP4n/UNifECBaCMs4UUoMA==",
        "shasum": "dc3f00b2c662bfbde25be4484e62df110be54ada",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.29.tgz",
        "fileCount": 45,
        "unpackedSize": 112157,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgnP5WCRA9TVsSAnZWagAAl2oP/01mE484SVkE3EAGz6TV\nzE18TBP1/AMHlWBhA8Tu49UoEEaV46IqjFGRABcxq8sGhxO3TzWbKEvr5fkc\ndvRJYq0M+YtBZBOy02hlqSz3j0Aw0QJyt03NUOhbx9fF48LXOP6Rbk3/99ot\n89+rHo0EAMHd9688xWANFcAYuY/sMXCjcyp+/uL1D4aMPewjd/aDIfa4BOSd\nGaJPATmfVuyoa24Io6MivAzWtZaR5IcG8LIi3h3jefMBvkyb/yk0mUv3x0qx\ncoYwVq8ROdfRzgkbzoerbMdCeD4iw5O9FfPqJlAw8Yv1SwOgK8a+PGKW1Qrg\nKwzlnVqpAmcc9rPnmydfKkpw4Q4fRdbgJl5nlMwQkLLe3tjZDjKd6InrdGJc\nK+xvHpBJJd3Kfj8JA1Oc3AYpsFoDzXuG3JPAKl5Fk2c78W2J/xe7/Bdz/J1f\nL5yc2BBIOvEiFA1xvx4dGwaVba4r4lQ7133ev+93f/RdkP6A8ZY4ONFN4HxV\nQirffwnmxvCiBzOLJQZA+T4Fs0Ygk6Zin3rrD94dSh0dWnzr8ZGtPsTihOUf\nX00s6+vtHfIBV4sQSs6l0NcIoWnWIckmewZtKUmxLyJcl1gYmYoq1QcPPrQX\nH2E8Fx6uq1lg+BQCIncG0rtHvUu67YZh4V8aCfbkKpEpEr2IAKbX1wwr3Nt9\ntFG1\r\n=u9/m\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDMle+BKnyHoiDWKW60hYxZNFt3wQTyFDncv63RRUmn2AIgNx/yDnGDeuHTeESjukkC74oQha39JAKKCpHDHTc6aKE="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.29_1620901462222_0.013570982688439592"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.31": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.31",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.1-alpha.31+24adbd61",
        "@opentelemetry/core": "^0.19.1-alpha.31+24adbd61",
        "@opentelemetry/node": "^0.19.1-alpha.31+24adbd61",
        "@opentelemetry/tracing": "^0.19.1-alpha.31+24adbd61",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.1-alpha.31+24adbd61",
        "@opentelemetry/instrumentation": "^0.19.1-alpha.31+24adbd61",
        "@opentelemetry/semantic-conventions": "^0.19.1-alpha.31+24adbd61"
      },
      "gitHead": "24adbd61062759f9d9d57420fd97e50f4d8c3b16",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.31",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "lerna/3.22.1/node@v14.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-qcNda9rxSNNWxPcPykNUA9LxkVVAdg3x7/wogfHj6GNHckY2JCRDoFOkl9wfXbSHwNStw8ePI0b25tQwKgV5BA==",
        "shasum": "755430eb91d87bf01d644f229c23b66bd33bc27f",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.31.tgz",
        "fileCount": 45,
        "unpackedSize": 112227,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgpVO/CRA9TVsSAnZWagAAkJwP/1sHMVSquAeOMkYU1QKQ\nSDPrTJ8Lloon5AHQpESos+2nMRFh1o86Nuabix5JvmUKfi18Cn18UXBcta7w\nOuj8EO8dc15aobJHR3tZUQfU9qpwnxmTNPpiR8Mgfy6XcVnZPYs6DVMeXwXg\ne6RTXIAkfZXi/eQa45V2KfgrlLBFAziksBiL8+0YnlvVNvHTvg6zrmnokHSm\nRVoJ2HzFEspqqPp/aSPjZhWM4ed4JOJeh7vlRLtkd6LUh0daRrAMyIN8sDoh\nNFc+YlpJw3eFXp+ptxJ+H/NhbnrVP4BdkdwSCk0QMiTJARWBY2RQPilpSdhk\nMvdUbdh88UuBykw1Zxk1oCRLLEa5PKJHJ10ojUDDwj5ZEtIx4gCiU64yj7A5\nBNlWBda/gSJEefQPYug4VaIXBi9WLnX1GNKWpacEPQJEFhlqBtfwTJ2a4Bkw\nLHhcYLWQkQKlIIxUnCsh3XlNCXa5DXQbVmlrDyuDPg9qsy46nGuaaNGFvZKs\nHQkBZA2znQaZEfqz64t1c6b6XW6UV2dPCoh1K4ZFMoBbVra0w5ffA5bHuM52\n+wYAqFRtZnlhTeJCBjGgPysk2qju27w8EiEsV2ii9DhAgOnTBNkS8i9Vq/eC\nQBenUf0ZdWtkEwJRacc0HEP/+5PE2lGbFL1CfsgNQ3XPcA4fEUzdk0Zuk8jD\nF5m/\r\n=CSDY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGeb2gxB3rfrvwPAFDLY77MEmCUO9ku/mzWomgJv9LVZAiEA5ErrevewMRK7HAHG171XGRudj4XoeUYe6Aiap1zQwTs="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.31_1621447614675_0.4276013441204334"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.33": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.33",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0-rc.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.33+c85fbe66",
        "@opentelemetry/node": "^0.19.1-alpha.33+c85fbe66",
        "@opentelemetry/tracing": "^0.19.1-alpha.33+c85fbe66",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0-rc.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "c85fbe6682b9a8fd52e4b99bdbb079833b04e845",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.33",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-ChF8GAWQ8n+uWvXw8FACCt482c8OYTIRcqEF9VGoWCIA0nkZt+eOmU6Ofu68O93r6BkBEDZQi1XDCVAIGzYe/w==",
        "shasum": "07af1fb5ae28066fff39e5df6206d09bcb3f837e",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.33.tgz",
        "fileCount": 45,
        "unpackedSize": 112155,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgplILCRA9TVsSAnZWagAAgVMP+wUE8lOefi+e8R1sN8uF\n2C2f8xz3VsjuQypqz16dr4Udi25kjYb6yX0SZGjtiu/mmbpUDDtPnpFTzVOt\nL48ckTzZELzB1iTbLrEVHqJbr0dt9/grDhV0dtGrMFHiw2UZuhm5ka0JJ4Y5\njpMj9zDWd2cDlKmI7NO1K7WvU82w6nqOwYGSmo6lxhhBLnuZJ6ijy8COq0jt\ne0IWRRxP4la7cJN/ch0uCYh3U/3I7x4uoMzZieehe63yDUPWjFrOw8WdMMYE\n5hmilruLpmySU+rNKLVde0pcU7i389VNZK92Rvckcmyfs+HnEZBOvyJvHIWW\nTng/yaiQJGZeT7/lKLbkdNeWEFrbrIXOio+WLgKtuHMT4NZ+S1uyOMJsk8op\nzHphvIOu/cmHv0ZB6/D+BShbfOwdkdgs0OvAU3I6qGhHGklv0NOp79b/sa93\nV2vJbNJ6KV8KE0FQcSRa2BmexWPe4rROOZYH0CVhraIb4mH4NG3d2rAIObGH\n9xm+txegm+4g4AdYetEWxj7Y8abwWS+zgHQqGsbRXE+DGMgXyJeX54W7xMOP\nhaWFDlSk0aOJ7VI07c4EO94Sl8bbgz+ql6XeZZSyP88OooEOtcEb9Fh+N2c8\nPjqIeBWMdz06gqUi5UpUNrrc4GJN6gB5qOkYw+kU8bzQK5AkitOT1nGKmbFb\nj27t\r\n=QYyi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA6yiMZT/zUFAW5l5Rmc4UjgEfsbLbUn14Ck+kyjmQcyAiAy7Decr25ijUrN3nWOdncFzkTSqZ3i5n16Ab0lwdwE0A=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.33_1621512714513_0.09405202777589117"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.38": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.38",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.20.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.1-alpha.38+8e5c8a09",
        "@opentelemetry/node": "^0.19.1-alpha.38+8e5c8a09",
        "@opentelemetry/tracing": "^0.19.1-alpha.38+8e5c8a09",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.20.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "8e5c8a0965c2dc7517dd9f2084aebe56f678be89",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.38",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-1cz/zwihtj3pt+PH0MPy6+YW0RFKjxZfUDhCL0JCVs9K3JEPCGs4bsO2hrC3DbS675YUmxRYX1o5sxspj7ILRw==",
        "shasum": "cbb55f7e7dccf54c02bef6e8df61eed18ba7e349",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.38.tgz",
        "fileCount": 45,
        "unpackedSize": 112211,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgrmMWCRA9TVsSAnZWagAAppMP/3WetULq7Cie0IP1Kvya\nvmqgsomCa5PD8HRcRCHATT6NbuUC98iNc4bhsBXwmSjrBB/i8VqC2NeZccgS\ncnQW/Td9Jbh7wg+ZZlxPUmd38IOMWHy2moJZX5hAypRHk5uH6Gs+Q6qS8U8l\n9Q/ZagV7HSrVPWdGVnvW39vWAewLFIcpFBa8vM9gWnmyXe0ej95pXtRbZzV/\nL0zZHl4VmXMcn/97SGfkKyUYw7rETVMuxiIqCevQ0wBLSi/DyL4Xie2aV4Gz\nzlz34FfeMnDxms4y9Ly+5vb5QrAGSZ1ZDy0IP8WDJR+cnXKvidSKoDGag4Sv\nvA8Ai2vLAK6FitMFC+ynXDvhzikTqGbxmnOB2iQz42zfgZ1tElclz3KxB8z/\nUEQhV7LHfwCxUUX90hyN1rt8uKajZv7AaTFzeBk2u4Fj22ag5Rf/Fj+E5hIv\nTraWx44h6fQn0yeVr5kfKFpc++x0CyvZ/3/I9lGiMDV16bUhMFFI+wJkT3Fn\n12o2I6e7KR6VBj1v3LinOAdzZxWTZFTdvC8MGyZAFpOp7/a0MNe8OEKKBCTI\nXmEuz+F5qGVIAvCy1SoHc2nWoI7B7aY3E0A85xkE3H9AG3wHeOT7RYUZn0N3\nUfWIGMLwJueBwbubjVTaARAP9L9JouJ7BctQmH05P3VKUdpj7NEje8jbIrhv\nyujF\r\n=Nf34\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDWwhFrVND2LcfGaL9gvmB1qeDZWIbX3usxHY78NxyeOwIgZZoXbS9T3fli0Qb8OWCktQ3J55MOQX/OmGndVcy1nh0="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.38_1622041366233_0.011676569527288017"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.41": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.41",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.20.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.41+7fa4ff70",
        "@opentelemetry/tracing": "^0.19.1-alpha.41+7fa4ff70",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.2.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.20.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.1-alpha.41+7fa4ff70",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "7fa4ff70d1aad5875cb14c6bff99c838228447bb",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.41",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-GrhETaihzYnOq8QgSVN9HO1+QblSgTk2cAOkSAJbhGiMFQzWqw+aUSATW2CIlpqcg2pEiDBuGesNpEqXd+Wj2A==",
        "shasum": "78688fb9e47a232abc6954d73ae0a3a9420dee1e",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.41.tgz",
        "fileCount": 45,
        "unpackedSize": 112211,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgr90lCRA9TVsSAnZWagAAs7kQAKE+iJU/DB5LacY036M5\nH4SGJs1Q2y/JBCgoi84dYPFyeC0W4HE6HodXPoXqZjCdn2Dv81cmYerX20eZ\ncNk/9J5rgrie1C/gmwh26SHXnLMg7aEsHjrRgsdNMhx/2pT+GyQe2aAv5rL6\nGNCwTq4IiWz8hRv2npGVmgHuj4KrVM13sYx9jZWHAwKLboMFlMaoqPWVLlEq\nXE21HDRnwovpAtqBGFfgf1/SxnSGjr2J1VP+LJSy4WsojpjAaESjzTHAKBBT\nYywViIFcXxB3VwSXMC+pIcIUQ7L+Z91aOcnCreFimqViYfOHsM+ImR2psEma\nybAFcWQPNk9FQyb8LB5LG0xvxmgdqlI56Yub9J+K/+3VWaOI+fEWRdx1xwcS\nS2R6LguhAHuw6aC/93O3ZBkxdbIglBGUn5IxtiiKrItabK/dywlyuGxn/8Br\nir8FpBdXQa2ETUsZff8kjpDy4J5jCPfLYddUAjSSOgxxI+Qe1B9dJGgUkbt6\nSwAPc/+i7BrUyd4vhMBy7LY5tt6Fl5UnLBfzkf4LTHS8s7uwSOdnIz/ulXgu\nTmi5RKJZVL33h66x30ZNxyBW9dvLuRAMobO0dR7zPnF2OlWCqICDwZD9rrk+\n6LQpQiC/CWOCwyObkLLd1xFfxV5LRVZGw5fXuLmc6Jk3KlxwAhoYpQAMSjyV\n3CK3\r\n=JM/z\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICOYAo/yxYimXojkTYPBc0Bl7V7cuVVHNEdoGZavdxm7AiEA1ViybBk5qsqucRGQFSECxtv4/j3GVQITlQyBlibzbgY="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.41_1622138149038_0.5654636684788878"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.43": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.43",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.20.0",
        "@opentelemetry/context-async-hooks": "^0.19.1-alpha.43+d5517812",
        "@opentelemetry/core": "^0.19.1-alpha.43+d5517812",
        "@opentelemetry/node": "^0.19.1-alpha.43+d5517812",
        "@opentelemetry/tracing": "^0.19.1-alpha.43+d5517812",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.20.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.1-alpha.43+d5517812",
        "@opentelemetry/instrumentation": "^0.19.1-alpha.43+d5517812",
        "@opentelemetry/semantic-conventions": "^0.19.1-alpha.43+d5517812"
      },
      "gitHead": "d5517812b31d9206131bf1df4f8a3b5183ab07fb",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.43",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-MfaH9iB2485r9eOZUATXdCt1Gc0I+H/qCMz/VI6ofJ2JP9WBG5+XnXi+kiVG/jxk+3AwxD/WHMAgw1VTrQntLA==",
        "shasum": "0fbf7ec8ce0a1dbbc053397bfbb9edc09f35ef03",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.43.tgz",
        "fileCount": 45,
        "unpackedSize": 112285,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgto5sCRA9TVsSAnZWagAAmhUQAIWfKHmePKnIqPNPzgm6\nVsofrY7QoGIOSQfOtcf6tcIGYbdnwYkZu/yP44PsVtWTsY03hgie93lIGiiN\n+gtolF94H2BgOvUJOvpGjD12h2U93uvaBu8a89DcW9N3ULOJvLNMJ6ZWVlWa\ndKWiQcD4UKIPQbue+TWA9+TOFft10GBAm0qwj8hJotxINbNvq/X+UcmMIGz1\nmHhPfflvte9qtHzBxige5L/TALkWbkbVBA4QjPXbDOb5v25I8i8ZZTkgqpFA\n1yLXMdl5jsd+j1fhFLReh80IchGFf2i9hfl2ZhTpFAbqpf7vTXsSylc0dXBQ\nckACnnv3wNxVMfUjyAhg5jJRE0buLEb5Ne4My8jSkxorrTxRlrjpvMjqskkY\nvxPbK4KmJXx24iUqZuKLJT79qb1JVJdE6zVdT/R6qdk0oYpNCaxdED+/6ASi\nws9wZyOqpGjBm/O5x/pHynVa/dGGH9wsmM3JaIQCvL6vqr+Xskxb4ODLEs+e\nsciuXh/KblZDvu4wCiFTExBxsD/GQem884Rst4I4+UHOhmiK2kGMdsUb8mrV\n1Hja5lxojXtdviRe804qICUI53nQ/D43VUSJcXsTvJYZwO8+oQ3d/Oemu0RC\nv9CxClloUyRmKnyF9gTyDdeS/2I7CR2BnMIcW11fgpT9DzVPtnhFUUIsHIMj\nyNtV\r\n=+7nX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEeBETJf58qobMQ0dxjsdYg967FDKC5tSyDJVCNObNcDAiEApa8CaFsqCGT2+tr7rwi9JJ/rk/SNRqMfT7/3/iJK3qk="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.43_1622576747837_0.8143722386326482"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1-alpha.44": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.19.1-alpha.44",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.20.0",
        "@opentelemetry/context-async-hooks": "^0.19.0",
        "@opentelemetry/core": "^0.19.0",
        "@opentelemetry/node": "^0.19.1-alpha.44+aea89cf7",
        "@opentelemetry/tracing": "^0.19.1-alpha.44+aea89cf7",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.20.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.19.0",
        "@opentelemetry/instrumentation": "^0.19.0",
        "@opentelemetry/semantic-conventions": "^0.19.0"
      },
      "gitHead": "aea89cf7a48395f3d403e1158122bc559b09e899",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.19.1-alpha.44",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-VdK6YQrs2FBzf2pBD6I1oOA3Cl1jdT8MLxO18KzCZrSDBsR1L8LQAvVO0l78E5nWm9CE+IhGyFrhukwcGSWkpQ==",
        "shasum": "c7c60acc246abe95418dbc765c57de37061d1037",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.19.1-alpha.44.tgz",
        "fileCount": 45,
        "unpackedSize": 112195,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgtpa2CRA9TVsSAnZWagAA6XgP/094chLkRs14um/z8b15\nh51rtJkCtMXgaSyPsPjZo/BhDQ6KPYAnm+wFbKMgwSFTpWLoMgK5FiQNP0sa\nwflLkzFN0WjXamF/UEhFa6K+TjbMT2A3VMbvIHeg7mMlnp4jKix81evOMbOu\n68vpucb6JdLWgBbJOF99pqC2rqE1Eu684Un1KyFGA+pd+ctlVBB0wCBP1lm3\nBSYDMKfFqU64rzXrV0ACMeNyKLvJS9CTwEJ2tsSRK7YaLZkPg715akQ+nPJc\nVlDCwgMufdTfD4kTDwJKWwrN+r7/jvvVNB+6U2glZJOO/UJZwvD2luo7ehKf\na+LVs/dhO5M5PQvtPMyffn/FJNBFIdYyGnDZwD8GLRXAEEsAb+LPp5siHjLK\n0tTHjwUNxagR6kCK95d/1yBoiOSkE3aNz6gyp184olPv0X5FXpdScu2fVFSj\nWohF6bOe7kxlZ+bvrS5hOERD0RYwLp/imRQToaT40itd9p1Mc5JylPztfKLy\nBZ6MYOgqSvBxI5jqjRtdBxQE/w8CpkFemlBhG2IPv9CUEQN2lXE5qbcbCbh4\nX42BWJWjImu03vQJjIl8tAAi9amy0s/t7NNy3tKlzPzs2LIp1G7DP5HTYuT0\nDI0l/KKyALeN7QV3oHOxCJghV0/5CXdxMXu8pg42uHZvuQ0nSZNu1E4m5c/8\niAcL\r\n=0p9o\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCasOtg2Qja4jjsKw5GhsFOsMxCReZleFGYLZD0VAvr+QIgVQHsa/pMGiQ9Vljk/bA0hRYb3J5WX2sFy8b1Og4YLr0="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.19.1-alpha.44_1622578870100_0.19849429630664694"
      },
      "_hasShrinkwrap": false
    },
    "0.20.1-alpha.49": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.20.1-alpha.49",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.20.0",
        "@opentelemetry/context-async-hooks": "^0.20.1-alpha.49+f79aef42",
        "@opentelemetry/core": "^0.20.1-alpha.49+f79aef42",
        "@opentelemetry/node": "^0.20.1-alpha.49+f79aef42",
        "@opentelemetry/tracing": "^0.20.1-alpha.49+f79aef42",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.20.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.20.1-alpha.49+f79aef42",
        "@opentelemetry/instrumentation": "^0.20.1-alpha.49+f79aef42",
        "@opentelemetry/semantic-conventions": "^0.20.1-alpha.49+f79aef42"
      },
      "gitHead": "f79aef422b53f1314cb0b031651875658fc17008",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.20.1-alpha.49",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-xfwhFkVTXlvfiWmAgWKw4nGCnIiaZJkerfEpdE2Y4VpCUoGFYlZDOtgdyah2fOjaq2+MFj06JTkgRJZuj5xknA==",
        "shasum": "80ca0ff9d357221465dc50dbff013843a9b9491b",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.20.1-alpha.49.tgz",
        "fileCount": 45,
        "unpackedSize": 112285,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJguQzbCRA9TVsSAnZWagAAbU8P/3jeIAU6YbYc5EnZ0Ssq\n+YdKuNXJG63oK1PuIMn0Fj1LE4umN6Lne9sDdSviNDCdT5hZ9DVdHGHEQWYT\nnY5QSJvwAHAn/WkqdoCp6DYKJTZRzoqknUA5HV8mDFnsaYQRcnRC9VvHGzbI\noPwzeye8RGVtH1nD3rh6WZjhhCGind7KBgJXmB4Xiu6YRsTRDeOYf8Brfik/\nOVTtTHDccDqiDr0Ch2qoGKi+6wIMFhy351fLuz7mzqoiD8e6vFTx69uvliOV\n5C3Szlx1c912YysVRJFSuNLhDnFs+ZNxQyi4WU6sUlb05nt2KWjPH/m43bnn\n6WRQJRWsXwPuIkLTjs3bXlC0g591SbaPTClPmxQIrDHdUtO1F5CrVVsnwlqX\nL1Sky8u6x5kuMAMUZtAKg8++c/OL5eTJH8d5l15nuhJqUwsXHciMcE6WjvQY\nBvHxF6+EB3bcKzFLtP+GhHPwO7ETEOrmKInLBYx2D5R6NVdDKKZJIvkmEbBN\ncljBQng2zExswtd1z06KRUItRbI9yloyxJZeva5l1wNZ091TF6VH04U+siEl\nMUR+jVLHyiiLcKw1Xe1z4w059YcUYQunSt5HXF4BhAmyfSaMtsRAt7kNxlla\noIk2qwPC5Xtocai8CvoynTyM9okqYaimEl1sCLKKFkp8VBqec4WQnPAiREnk\nVjsF\r\n=LNi1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFsTvOKf6EHVyCvFY23arSR83EADrnP1RemRF2tal85HAiBF/6fdRAetHoLJ/jUWv9kIewyxfhBySwR+OZoYnz3tgA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.20.1-alpha.49_1622740186955_0.7443823598285986"
      },
      "_hasShrinkwrap": false
    },
    "0.20.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.20.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.20.0",
        "@opentelemetry/context-async-hooks": "0.20.0",
        "@opentelemetry/core": "0.20.0",
        "@opentelemetry/node": "0.20.0",
        "@opentelemetry/tracing": "0.20.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.20.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.20.0",
        "@opentelemetry/instrumentation": "0.20.0",
        "@opentelemetry/semantic-conventions": "0.20.0"
      },
      "gitHead": "f79aef422b53f1314cb0b031651875658fc17008",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.20.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-YvyvyoieWNPa/QglUt6dH9qDnNHF3ubWF3a8YNFOWXTfOhlS2fcHiVFhHrhPfaVq7iZ3xRhmpGe15ABgqdjWfg==",
        "shasum": "396321d377ef163cc31d0e338773ad43c99d5220",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.20.0.tgz",
        "fileCount": 45,
        "unpackedSize": 112134,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJguR9QCRA9TVsSAnZWagAAuAgQAJdyYfEuZXUpnQiC81Tj\nimoHAM6hY6LAb6X3X0Pchw0kXeOczXvN3z0EtqeV5oggax0VD5vv1Ng2bgCf\nApXqh5EGQ1YxbjWvvcMr+Dj3vG3KoJuMm8UQw2VOWNZPgHUdIob2um0b60Eo\nr4BsQWX0oANF2vIDBIkLLCiIguewB4j8EUiUBp52G5zpyyHhrSQlQF5xfhsX\n9EL4FJu58o1pMBvSZtGJccC9XJ0NMb5AMqZ65axkVd6gn0ElNj7WtdWC+SR4\naBCF+UtObhQAoXxs/gltzXpD21wv1E0yChyZ/OcdDMENnYdN5bMwOL62MUmT\nYUvOdobBw6IeuHjf9UvBkdu+D/AVGLHxm7OaBeOSAe/XmB1deS7v9DtgGkHr\nVQ4KmjBqw7rhCJLQ8wXxbIjcrGIdPUEibGuH76LzvAFYDE4XmsVcbiO64FFB\nBCuVcOF7Ysxvclfk5268cn/rbdfxxIIIUe6A5OZ9H8lHWku3Ibu0tOrMro0h\nNYmyWs0QAONj1TAgWXgVpW6FIazCk+eJzxvUOVgc3S0W2BQ4Dnc2Mck9p0Mm\nL+QoVkRGlE3StTWQpB0uqd3ZFOW5VpW/lJgqPcSMXF5XNMPO87tNBeGs1zF5\nd5gPwVAC5Zzt8S1Epg7R3l99CwlTr9EJUSbi8kmFqqHFulR8SOcJBdMaJxIv\nZcpD\r\n=26j8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAYYaM4BTflLBMVa4BXf8T80Z53BtPwSrvAIY2blU/I7AiAaBj7vh4q0TA8c7w3E77+LqBwFQc0xfxdjv8jOrBxuIw=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.20.0_1622744912642_0.0006692754481376628"
      },
      "_hasShrinkwrap": false
    },
    "0.20.1-alpha.3": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.20.1-alpha.3",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.21.0",
        "@opentelemetry/context-async-hooks": "^0.20.1-alpha.3+d4df2f7e",
        "@opentelemetry/core": "^0.20.1-alpha.3+d4df2f7e",
        "@opentelemetry/node": "^0.20.1-alpha.3+d4df2f7e",
        "@opentelemetry/tracing": "^0.20.1-alpha.3+d4df2f7e",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.1",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.21.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.20.1-alpha.3+d4df2f7e",
        "@opentelemetry/instrumentation": "^0.20.1-alpha.3+d4df2f7e",
        "@opentelemetry/semantic-conventions": "^0.20.0"
      },
      "gitHead": "d4df2f7ebaaaf433bd84b568c482e2788103ab71",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.20.1-alpha.3",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-XuN0G9t4VJ3hlaNNgHBrPQLFYlYekuQHfbnEjKOTG5t5DQEajHSDhQuARpvxisd2ozgtW9RjwBCk0eBsWBX/vA==",
        "shasum": "373cf6c38631656888b41a84b4f98d95e120381d",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.20.1-alpha.3.tgz",
        "fileCount": 45,
        "unpackedSize": 112652,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJguzXRCRA9TVsSAnZWagAApg0QAJDx/qWYcvZJU4ZBAfXz\nfy8Zh/0lmrk7LHcUGGAHtQvUEW7z4UTEnDQrRtel2pCsbmUtKzYKri+X4hEq\n/i/DRip1U1uD2YFLU7txftwgb0AQUI1Lr1N3mCp+xotEMvUMEHHg7zAD0xNT\nLhbHVX15Z71iZzaHFDfPRKcYQ/1eTKMMbVaBxVTwpQzvNrXHIkJGHr+y1aus\nXRrJCcU8mYLAmGoN1ceKqzJCke6jBASOuAatVN/lE0D0CahcdjhzHK7KwJ50\n55Tg9toj9JTe9bMyan2octHGFUPtobcE30UN9/97rdG5Z3WjChtJtTmYKmrZ\nlN1x2PAcGf+bSCf7ofNGMDwKDGZ4lsbXMvjmYUVJMHnhVSzJAByVXJVr7VPN\n+/w9KdP6LA4ElsEzJrp/eglws/ux0Em8zVr4E9XJ2VDXD0sdCy10pGCDRYcA\nZjf7DGAon/3NS9+85MbLnAegSOazsxWzWa1FcSR0ifl7xQa0uasebgvYm4ad\nDYjcgojVJBUmej1dURSN5Mo5pgW8vLYODSmnFKXYlcZlg4/lEBe16aTffZH6\nRqEFe7lnSGAz30zY7qPNU6iNpsFuT9dTzQrqtRl2cuxBYt5kguSUFQaCX/oS\nFknGXJMwXn64XqgFWWSxfZIWT+EjKClhC+UDSSYUpsc2ffu1eKckOqHyoYIl\nFJVW\r\n=Osvb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEMcyK4qs8Qh+uX6uZ5iQ4qjsrmnP9nK3/Cg2rhHozD5AiEAs1+v3vkTbcttIEFKm+rgdXMA+eKURIXg+kjWYMXVcBI="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.20.1-alpha.3_1622881744905_0.5446968008654354"
      },
      "_hasShrinkwrap": false
    },
    "0.20.1-alpha.4": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.20.1-alpha.4",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.21.0",
        "@opentelemetry/context-async-hooks": "^0.20.1-alpha.4+3d98420c",
        "@opentelemetry/core": "^0.20.1-alpha.4+3d98420c",
        "@opentelemetry/node": "^0.20.1-alpha.4+3d98420c",
        "@opentelemetry/tracing": "^0.20.1-alpha.4+3d98420c",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.21.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.20.1-alpha.4+3d98420c",
        "@opentelemetry/instrumentation": "^0.20.1-alpha.4+3d98420c",
        "@opentelemetry/semantic-conventions": "^0.20.1-alpha.4+3d98420c"
      },
      "gitHead": "3d98420cf530968e6a85bc4b9c2b1bb78b730b3c",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.20.1-alpha.4",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-fDMO3Ke4uxzo9I5NEihaAIh8XLnDELJx+pu4VSR6weqnrLdptvISbXmzVYjKj0++oNVgW5kJvfdtT6AMsJSrgA==",
        "shasum": "3e9c1b98e989d11f3b61b2b875e70d500ee1f764",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.20.1-alpha.4.tgz",
        "fileCount": 45,
        "unpackedSize": 112669,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgv3BQCRA9TVsSAnZWagAAd+YQAJguzpqaTkRTtX6fG1L+\n5NsDJEua9S1+YzbGmZzaJ8sa/Il3jQQN2sXYZs99j1R3dwpZ1ZBsEseVFKz5\nwwavuyD6h/DDZHUSdT3v+qU4UBzO8G21gQb4cDNxrKGFMSGZ/oG+yrAC834A\nK0GEelGHLriB2loQjBKo0EBDSvNcV8V/VBuleRSn87jDf3PUvOgnWXRHQqiH\ntw2QItRH7XqEXpFMPZROlLQwfRh34yL+21WDGwuysTlKrCPHVxVJokzJf7rI\n3+QXcH0h6G1urtzbGdTycF3HJL/+UeHvtwWIgc3dlhtZRkVxEcsUR0Oq03Bb\nSab9VHnR14vN6vqa+/mPpfLR2fAehcrrYoj3MBJJOX445/sQ0AzlFNzDryuK\nf6OqS6q4eYnhR7sRza/p3lQXM43HjT7eunSwmYP2HmQUMNqLCOr6AgR/cucv\nc3kD0iu9jxhaO5DMIrV85cMXZr+lCHiLwxTfLASR8Fu3THDf6zbsj0rpei4I\n9GsqfR0WOsgHnW2LTnsCUEMG9F9RQHh1WnYPKQbrVkJq28nv6L9AowWNz+3w\n35U4AKu+XAV8MyFzncc8JB67IcQxeKSCbw/tPQa1FyDneTB28SV/xvXAhzRn\nI8D7MubD38YuBMrvglY83Y2bAc6LgyrbgBe/4iMtrewC1deTBgPN8vfuz/wW\nQGXS\r\n=N0gA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBvHww9rsL84DSJ2lG528i+mox0VGtMIf4q0C4caI7shAiEAifbsCwL6vOrzafNZ04x3M+Cyx5se6ctSUdSNjFBScdU="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.20.1-alpha.4_1623158864288_0.06841770839321804"
      },
      "_hasShrinkwrap": false
    },
    "0.20.1-alpha.5": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.20.1-alpha.5",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.21.0",
        "@opentelemetry/context-async-hooks": "^0.20.0",
        "@opentelemetry/core": "^0.20.0",
        "@opentelemetry/node": "^0.20.0",
        "@opentelemetry/tracing": "^0.20.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.21.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.20.0",
        "@opentelemetry/instrumentation": "^0.20.1-alpha.5+4a1f2e5f",
        "@opentelemetry/semantic-conventions": "^0.20.0"
      },
      "gitHead": "4a1f2e5fd441cc9c0359d6aaff1919d9c6672682",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.20.1-alpha.5",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-QV3fXmO4CC2Ak4p+0A7+X2gI3WkLgFUEH3glESjLWoqzN1+R9VREtThoY6dXPEdh/Lxy/kXUp8ao5PnxlBSpPw==",
        "shasum": "94897b55d232f2ff20be2e4c4205bc903d5c3c1d",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.20.1-alpha.5.tgz",
        "fileCount": 45,
        "unpackedSize": 112816,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgwPZoCRA9TVsSAnZWagAAPCoP/3FX+ZMzOGdRsHcYxhTE\n7UPi9JVnubcKhM5S8eH7zCDs1hF+VZxW6/2FFntec4IShR0tKseacuKPF2xP\n/izSFOACQCyiCr1pBZYSJDuezEPlCyz/3zmlmh0vg87yi3SERPF7WIWM0oiT\nkeJF31iK6CFPYdVxWOUoykMiry5t/UCQ7mfb4zw96gsjparQG7Su4zB+UZsQ\n7TqROTS5vnjwi4olhdXN/aq3T0YfojloZXVeQc06xS/v5hFbIPszbpgASpKw\na+HxK2WsIinV8mfgfTo8+K7Wz+Ky2S6N3pU8JKMUhEmzp9RPdD6qB4eRxkAr\n+0Nndu520V6dHmtJ7gTgYgFqYY45TbyhjBEMujDJAjwncVfc2qXjTunZS3Td\nM3aie3wWK9n9Xg8352RdkWUo+JUxeU6Qa66taWZA2HuKQMYD/0lD91tWOWyx\nl4dIpX42fZrszdUqP/AthTkHn4kSA1oJ2oczuPWO8CONxOLzQff2i38O08Cv\nLqHvGkF7qsxxdStigWn6fCBC3BH9Ygu/8guGU3fmXpB3c98VDeK0Vj2x+Oz0\nqpCl2/digGdHSF4Xr6E8db31J2/8oATlmKHvDHuNow8JLyumaROF4lyEFxVj\nBcrlXrfa1F7zMC48xYewzsll+8v5QJ7QMA/+Aj8639gmCf7FX/j3fX3GEbvV\nWOLo\r\n=k/mE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCID4PBgYudnnz9UFnu0tnj0UUPI9ASq6lITquHEh8zGcRAiBK0J9gt4KDFINg1AWBc8Rr7BpEbAcgY6r3UZvEXMVkeQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.20.1-alpha.5_1623258728488_0.4406255448460701"
      },
      "_hasShrinkwrap": false
    },
    "0.21.1-alpha.7": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.21.1-alpha.7",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.21.0",
        "@opentelemetry/context-async-hooks": "^0.21.1-alpha.7+77502820",
        "@opentelemetry/core": "^0.21.1-alpha.7+77502820",
        "@opentelemetry/node": "^0.21.1-alpha.7+77502820",
        "@opentelemetry/tracing": "^0.21.1-alpha.7+77502820",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.21.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.21.1-alpha.7+77502820",
        "@opentelemetry/instrumentation": "^0.21.1-alpha.7+77502820",
        "@opentelemetry/semantic-conventions": "^0.21.1-alpha.7+77502820"
      },
      "gitHead": "7750282034ee58bdd257446c2970f01307d7522a",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.21.1-alpha.7",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-rW7An34tfSF2S0RiblYYO8gdBGN7+cEd1Bg0VKwQtwmiXE0DEkzHb2wsWIwqJIRkQiCV23tByBewK2JCapl14Q==",
        "shasum": "22457341b961916859b040ce043a451839cd819f",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.21.1-alpha.7.tgz",
        "fileCount": 45,
        "unpackedSize": 112918,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgwksoCRA9TVsSAnZWagAA6kEP/0OgyzibYs/YmE5jD8b6\nBrqG5G3qL9Q3FdUSLRyQu8tG1yPBXG/pESjAvvvOXtWkXqPQEQESKSQ3hXhN\nvNSvh8GzkXeax/S5QaMSssTrcxunTRpTnZ5sOru5c4B70m8kQsElDzjSNUhv\njC/yIpR/FQzlPlTJ4upFfQMSo9+Snk8htV0BmLcXxt2dZrWVA/CYVtjKe9eZ\nQ/gH2O7aDyU7L3PfEFUSH3/3Pfeo41afVCfxbTuqniUiP5+hqjFGBl9VYjcO\njDoK8qQ9Q8txA9tm6MbnSwfV1cQseqXvX57SvxGdQqJusfUuzuWpnWNF2J/4\nugPQ2KpZQUy+r5MjrEU5irN+Ki8X5m+tf/XO2KH6gaD/iJiaZqAotj6CJRNC\nAx8WLR4rOqvtvPhMGiD88RQC+9K2QUTSQ1szC0B5XFQ70WUpooUQJOnF7l81\n6FeImS3dX6qi4JFxCXCSdgwUKuNm2s5wplSaW3LwebU/RKIXUh3KT+UEdosb\ndRZxwQBCq2eXq0q118Qpvw++07StbKRKvVwVLvljboslWMtO1Xf87Xq3NjwK\nzhrGKZE10aH4jitCVy/Ni0V3AKelmXiIMIpGPIu0yP0PWaiP6DAI4xcY8FQm\nc7hkb+j25kvcDochci2ifz3/USNvDi0ZV85y57LubmpjU1yQaJ/N5Lc+Cp94\nJpdF\r\n=PLvL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHeQjO1jqzueJ4vzAF92pS0Od8JfQr7/Iknnj/jPrvN4AiEA9Op+fRQH9ItzXiwGHV+RKAZIcY+krUmINEUY6j61AeE="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.21.1-alpha.7_1623345960001_0.16609225323370458"
      },
      "_hasShrinkwrap": false
    },
    "0.21.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.21.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^0.21.0",
        "@opentelemetry/context-async-hooks": "0.21.0",
        "@opentelemetry/core": "0.21.0",
        "@opentelemetry/node": "0.21.0",
        "@opentelemetry/tracing": "0.21.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^0.21.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.21.0",
        "@opentelemetry/instrumentation": "0.21.0",
        "@opentelemetry/semantic-conventions": "0.21.0"
      },
      "gitHead": "7750282034ee58bdd257446c2970f01307d7522a",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.21.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-YCa7LGvE0TL0eusujNTBqVIEO9BrSyt9bcp8yFYg70frbckmnU4ivL8YBbdoxSGWH65Ih04aJJQzsn0o12mRkQ==",
        "shasum": "7f50eac6149efd089eb7ea465d1265422885dec4",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.21.0.tgz",
        "fileCount": 45,
        "unpackedSize": 112775,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgwlocCRA9TVsSAnZWagAAXOEP/2dd6302D0yIQvwszPRl\nCz0DdGF0RD2QhSTI/2oCaJ8sSG9KXDpHvi+fkYCh8/q8ka0b3Ch5k6iNg0Gv\nuut3qFRhSC0jX5f4ZvLQmV3t42M08MxTacYliax+7gENmlsZr6Mtc4qwYUej\nhNXimwQtMmwsDjuyo2/Ek60iKHaoaz5DS6Xgh5NjJIoLMvH/VodRDhCtzECo\nI1YRSA+bfaF/PBtSjuGzM0sQXsfe+buVtmDtOnnAZufHo3Lh/SfkdaGZNufJ\nUyE4eWzNEZPII0dF2dLanltU8HTikzfiZcr5gkLOiUY5Qi7b5l9HYIL8d1nb\nyIM7O9YrDzJqeP2GrHA4cCli5FLgyECOXN5iKNBhuHYKhw4j4B7ZwVkTfBPJ\nDFWirtSw6O4NXyGfuoCqexpuKjDynmhVvfmJnnWAuODeLY5nHNW7jVoNXFkc\nE0elr5QxFVf07nFvfaiE3SQnS6yw0XIZczFkCAgeKoQ5i5oeSfopDZ9kPVRF\nLIr6EPRE0QPYsuhAszrpiSYvVKjaeQLqAxonGgyV7MG4wv49QFt2AVIiXfrX\nkTpLLF4DWVMTFsPRxnb2chm4EqiTjYdP/CqiFWsnAwU8gceemhALPE0YEICA\n9y9PoDzyxWhI0HN+uefHtbO4eAzyoYYW7U/Vo/UrPkeQ80zsZzurGGhNHZZc\nHzBV\r\n=XJHp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCmtf84VkdwF6ljnmlPykFuOTZvggOZlGBQ8SL9vyD67gIgPt/Gx6OH9OZKX+J/FWGbXd1DBMxEEnsXHVZtng3X5tc="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.21.0_1623349787915_0.9669779229846303"
      },
      "_hasShrinkwrap": false
    },
    "0.21.1-alpha.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.21.1-alpha.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "^0.21.1-alpha.1+5b6573ee",
        "@opentelemetry/core": "^0.21.1-alpha.1+5b6573ee",
        "@opentelemetry/node": "^0.21.1-alpha.1+5b6573ee",
        "@opentelemetry/tracing": "^0.21.1-alpha.1+5b6573ee",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.21.1-alpha.1+5b6573ee",
        "@opentelemetry/instrumentation": "^0.21.1-alpha.1+5b6573ee",
        "@opentelemetry/semantic-conventions": "^0.21.0"
      },
      "gitHead": "5b6573eeff537ab49d8d8d42217e5cc794f9ad70",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.21.1-alpha.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-xHVDKwJ6dukevwyQymO709/URYqsa2YNAFra/SLfOuKwPNiSgul89fdMWaDvDlxQFJ//hc7DJ7UJA2WTru2hiw==",
        "shasum": "a175a7532eea88f737712edf5d10758bbc111b9e",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.21.1-alpha.1.tgz",
        "fileCount": 45,
        "unpackedSize": 112899,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgxG9ECRA9TVsSAnZWagAArwUP/RdVOuBHy5msWbP5hgIn\ntHrZmTepa5QKfc6+VrFIJ+hIOQFdL+KoyuAQDf8bzOC+DvFcV5sGzYfzXGLO\nSilCm6bhuBrqhY25FXwWqlCpL5DxxbwAMu+GYsy+2Mb6KJ+2bdotuY73lFgU\neNwIfb8Ly2OLt1g7Z0wguLs8FG5Vzy9tFESmlUkxS8aIKkhNMj6tuShXpDYe\nLbsHlGAe+GY6B3qeVThoCCGQdHvfg3UNvz8yC0KGUDd9y3Wi64eK46nfewpY\nZj+gKO0f8N7YUjDb+1uZ3HCoIZozDy2wxPjzImOc+oaI2VYU7Dwk1QMNXk8S\n7JmpWNkrOb0jiPOl91QyYw4HLUYaXD9PD3FoZdks5Cd7rWoRXsjupEWT1pc6\n/7Qlp9HMcFOJV/0BKsrE25Rpl3zKShTPLcQtKcqao/Czuxod5Z7yicfgmshP\nkIKtVA34/xxJM5djRBCGqBz+4n6SlseR8niLD3ZnYW8q/W4VxgyxNeigOMQ6\nDLS8m/nxkaaLiqsfXxTYpZDdHloyVdIoZs+eMMnEuJ6KwsQAj4HMpKmi8uwM\nIYcZyGuLvnnGLw1DWilQbtcJIpqfDXdbLtpj8W71q0AuJ29IbIMxmviNALyn\nppoXYLKTAGOCuVBLFp0zYXyCx+OOToaZo4+YQbcpGhu0hWgdbWFxHjXiKjsW\nBPUh\r\n=0Eo4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB9z0Lwmqf5QajvjajAZuiItdQTA3u5o4t5+IS5ubh7iAiB0gSLPKffNyq8sy7CNkUublTS6aaXY/RlVWSDq70f6QA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.21.1-alpha.1_1623486276461_0.7585840426152308"
      },
      "_hasShrinkwrap": false
    },
    "0.21.1-alpha.2": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.21.1-alpha.2",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "^0.21.0",
        "@opentelemetry/core": "^0.21.1-alpha.2+a3b77387",
        "@opentelemetry/node": "^0.21.1-alpha.2+a3b77387",
        "@opentelemetry/tracing": "^0.21.1-alpha.2+a3b77387",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.21.0",
        "@opentelemetry/instrumentation": "^0.21.0",
        "@opentelemetry/semantic-conventions": "^0.21.1-alpha.2+a3b77387"
      },
      "gitHead": "a3b77387012a5f53c193efdefcbf5f6272876e4d",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.21.1-alpha.2",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-1OARe1MnRaEZkUvWOiTNYSP+zcWLW+0tMgznnyjv+zgEsdgrQO3jctVtkjYKuPGTHeNKT41fsd4l3lGjKGr08w==",
        "shasum": "139cdec3e5ffb4b0c94072af26931aacf91a96c9",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.21.1-alpha.2.tgz",
        "fileCount": 45,
        "unpackedSize": 112865,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgxHG+CRA9TVsSAnZWagAABtMP/0TQ/RC/vdQyRuQFMdeJ\nenhP2qsfhxeQ8CLBer7WDoANph2xYL8DbI0LDpy5FDSYCR8fNlcEAmN8OxR1\nG7gh6RuuASewIJEvq2jT/3A7qB4wJLyT91xd4CqKTaEUVjxobFeILRieP0dp\nFhDGjoVTUUqGb8fuzg2t/ngGkZ+GqBtiBRgGSz/fqVjai9mS30WUJslGCSCP\nR0rSzZ8Xg9emfYSWhQMBfc/1QaIAIErtm5bUWyjsKjbzgid7SekrKcJwXjEF\nqqejUqO8+7I/oxMW9CN1//w68dFtoAy4yOErOUlMf7hjQpWUh38rX+E+Va7F\nCh6bbBbnE4EojFV9xKJGtAkjXdDxOxS7XV53eZkSr6/R5/TFTpDue4YTIfSE\nT0rDcKQSpshPeyCsTGK2OFtnHt9ofy/oPoxhErrctcy8+Cq5gd0cTOO+8l52\nHmM8Zn+jaSFKhJO3elJkBTx5S7d/K+T1JU25/t+JDkJOFkg3uedt9jlG0f5H\nRO0jG3SEKRaHgMwVejWpZ3bYxFmN4BvLghcUJcMkNDE4RUiPMpOU+1ezsRn/\nrKHR8+PtWh3M4PMcACpIcyQ9AWLQbtYj2/EbLAyp8i4TEtaEO3QZvLj5Lcr2\nq+li34qbkrBciP7vHwDnIdFIpJr0Np5KA1eds+iTq6W8+U7SvVYvzJN+eIgR\ndQet\r\n=FMce\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG/MMIA4pBp5L5tBl0E4Rn1l7InUmkZzBIMVA7dwQc6YAiEAkrPepm2pl+REY2eKSEEwqHnR0jfzEnx+R8kiHC1XOSo="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.21.1-alpha.2_1623486910449_0.7859374674535877"
      },
      "_hasShrinkwrap": false
    },
    "0.21.1-alpha.3": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.21.1-alpha.3",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "^0.21.0",
        "@opentelemetry/core": "^0.21.0",
        "@opentelemetry/node": "^0.21.1-alpha.3+23db7f0b",
        "@opentelemetry/tracing": "^0.21.1-alpha.3+23db7f0b",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.21.0",
        "@opentelemetry/instrumentation": "^0.21.0",
        "@opentelemetry/semantic-conventions": "^0.21.0"
      },
      "gitHead": "23db7f0ba383a3043964eb03be11c09df3f7453a",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.21.1-alpha.3",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-gmXdbJSFn7uTa0LwN3fOB3jnogk4hH24Dc0ntEj8xY/fZ+AToAEbnx/7rnKHl3q0j1aJgCahqR+Th+4m7rIHPQ==",
        "shasum": "4c68ea5cd86e131c036b159616eb2d1764803567",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.21.1-alpha.3.tgz",
        "fileCount": 45,
        "unpackedSize": 112831,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgyfWRCRA9TVsSAnZWagAAUEMP/1USmLUbcSg130Lf+IJa\nUlFzu77yzLQa0KJBzI+3qeDVA+4RBjyIzbzKKigC3LkEh/m3Yg/yGnvYMmhH\nSXyTCSNuejg+Lysq/zJE4geDNcRCjo+1U6mhMbZpW4BOsBpxKhkqiC8c26ZK\nGXokTa4jGvOmHCFqP6QoA7iHahSIWaunPoiWWzj5Ug2Dq5/3Twd3UCOaQAZV\nvTsjZPFSJdarGuwzbQHGrqSHVQg5y8HlDxNS4KxyFPvPLJ29RB/ugfYm242f\nb+TQym0i/9PXDEkeH2mEeH9g49eLxql0R2lUGaJCfgVa/0GTiaa9GxSF9eGO\nV+Hyaky/LlwvqtkAY+cm7tSp7e8kLaRj6+wnrU6T8/jWXI93GEzq/PKBIV8I\n33EF1JjqS5xscONgNsZYeczinSVI9QqkxfzqI4xA/ZToQvSQs8uZPaVRuZvY\n0EAQjM+qmfQTbMNZOI/d62EwhLVk0qX4zHDpB5mT/AErsocFCOpbqFJvCUfk\nlXeLEHPerryYQhXpwEdmPjYNuwb2dwS63Pv7VWF/s+I25YnhxHvXoTe49c4N\nqlDj2eg7Vrtxm9y5W23seHJbY2Q2V3PI1/msEnvH5x8tNdStS2pSNc1AsvBX\nR0ktaXU3CVFJlMwW8YEqOWbmSF7INzcSwfjTsk3OpjH6hBK+D+p84APlXOFn\nIbfc\r\n=lg8f\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFGdfVREZuVRZA7A3RZYygY0aw5BBGSL9GCL/RIVxvKsAiEAsakd8p3kw8CBxEs7DfZQwHNfXL8DngTyrT7r7uYl27g="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.21.1-alpha.3_1623848336917_0.1478728988806033"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1-alpha.5": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.1-alpha.5",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "^0.22.1-alpha.5+7860344e",
        "@opentelemetry/core": "^0.22.1-alpha.5+7860344e",
        "@opentelemetry/node": "^0.22.1-alpha.5+7860344e",
        "@opentelemetry/tracing": "^0.22.1-alpha.5+7860344e",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.22.1-alpha.5+7860344e",
        "@opentelemetry/instrumentation": "^0.22.1-alpha.5+7860344e",
        "@opentelemetry/semantic-conventions": "^0.22.1-alpha.5+7860344e"
      },
      "gitHead": "7860344eca83449170bafd03fd288e1a3deebacf",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.1-alpha.5",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-oZtYFji9+tAxruc4Uw/f2jhQZSsTQLERARFo5pDNXuYbSUAix5jmRWB4GEbJox46xnIi25dzjQKQpI6wnZ0xvQ==",
        "shasum": "8b967c0059fb4bc9e7a7ff884688151c3e164e34",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.1-alpha.5.tgz",
        "fileCount": 45,
        "unpackedSize": 112916,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgy4DDCRA9TVsSAnZWagAA/WkP/1Q6di37xZrPJ4Mofn9x\nHWw3l0th8usnq1dQucANj+PDCOgh+LakAW1czQjvMTd36d9tMD8Ut97iFT5u\nSr3/7J5qr0OTyKy4YnZk9Q5HCBrjh7qI3wYAYkWDmd9RZLUplVfxuv5W4vWS\neJJBkEfA0eo5zxS4hhWJm/wbDEiQPkjaAV32LYuRXkZkIMB2pQvLnaXvI9iH\nlzc6d7XfUGtvCobOVGrkVZgC/RAu0znotS7vZmeS024TzEA2OKc3GSA+qrQ0\nkhv9vSkgA6rqKYXrI/Y5eYqD7AlYwBAsUzcwP9r1ouo3tVZNBGEQC14VmC+d\nA3sMfswcWqVrnXQMwJKDGGjgMm5Sv4i5Aow2pM9+vE5mV4teuimgR0asUmXn\nEo8gf9wER9BQUV54bSftD1DaEMpjdU3I1a3oA83qMc8p+eSeSs6U1s35Db1Y\nuVI4REUNTB2bBUMIBkqH2ZM7WV4GkrFnQWvPIZdl9Py1mP/a0ZoM/0WoItxt\nhGu10crJ0WMJwm2PIF/5BzOPV9pAR0kcZqd1iTdb8K5rVeIyhfxDq/m22kxR\nx5Gn7c/1ONkqcgEyB8QZGHhH78ckVUDIjwRBA8FdaAzgQlq2dxANQtZ+MiOo\nwWwfTA+pXNBzT6yfk/O4EOsriMQMsQ7Ek8lfZkOQm3NoGsLNjPZkkn8FeCuw\nfvbv\r\n=fTeZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC2tdWmq5wBX8BY/5EWiw+L8QQSlDgZqinLGD9HbSk9gwIgQvtA83ZAzHR60ro5syKO2exOfPgbW4QZcLtDXbyeCgk="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.1-alpha.5_1623949507451_0.11074447374445784"
      },
      "_hasShrinkwrap": false
    },
    "0.22.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "0.22.0",
        "@opentelemetry/core": "0.22.0",
        "@opentelemetry/node": "0.22.0",
        "@opentelemetry/tracing": "0.22.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.22.0",
        "@opentelemetry/instrumentation": "0.22.0",
        "@opentelemetry/semantic-conventions": "0.22.0"
      },
      "gitHead": "7860344eca83449170bafd03fd288e1a3deebacf",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-kFs9OdOiN1hOUbOV5FWeQFfAZ/fXxuFcxS1L/nTJ2BED/3a59phOp9YWG1wXyn/1J5xjoUNrpkmAWhLkoDTJHg==",
        "shasum": "92aa3addf35b20499f14ed853449beb9cfd1d51b",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.0.tgz",
        "fileCount": 45,
        "unpackedSize": 112773,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgy41MCRA9TVsSAnZWagAA4qoP/RH3pmTwkD6Pqdv2+9AD\nKj0gPM7I3psZySc82GBcgaNp4QyLWqQriL/a9uZCHoeTWds3LacZ1OBWCwFT\nVTqvEfHFS5MPPCig7O0CdgzRJUAVfbVeY1sAogou1IlUjBt9gG+xyECZDLrH\nknX8KBIzezVzRsE12SwXHrQEAsPQyP73Z48ouWmsakpJkci/yZuL+q64l07v\nxBrEWVehbLkEMpNC6mPW5FxKw+hxRYdraembRJwte0H6/lFNWJSxTcbF/0sl\nSXI7Qi3q9ZduoJanLxqwYK5ulgesnzGbA4fPSc9BGavjcQBbGvHeqJlTg9sB\nRhBVXDCJMO6UpP4ozRwXztKIloBLKz57cyT6+34WAtAbz42c9z3nI144p6QS\n98kPz5xXlndAiS4Ualodt/q9aXXqB1PnUmwxRNliY2dKCyElmvZPYXH6QUWT\nk8Tljj6F+XhfGeU3BnUcAo8joFfAF3QXefZjuJaMpyxZiWLhAM4HWVnMXBId\nubSy+OrEIxkcecUZDpcDu+LqTBkpVLC6pQ8LJCUub1NPpMA1NTmxMarSrKnH\nHUA5XfEwQnBqcszf67kfcLrrKiNMFo8UwdwBxYm4SZfCCp5ssNYpM6CSJH16\nPClD1uIUzS5NNn0xR9oB2uo6sbY0Jn25gearbqMB54MrQHj4/S0WW2EGwTHb\nypNa\r\n=A2HO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCOAfPH4/efPgWaQQlsRnBFw3iAPdm3ZlOW7qLV7brJyAIgLasLINqVfdTNcwUMRn5ynJ7jfMhF0vkENWYAaxrxYz8="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.0_1623952716298_0.06159597302991382"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1-alpha.2": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.1-alpha.2",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "^0.22.0",
        "@opentelemetry/core": "^0.22.0",
        "@opentelemetry/node": "^0.22.1-alpha.2+bd2a0052",
        "@opentelemetry/tracing": "^0.22.1-alpha.2+bd2a0052",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.22.0",
        "@opentelemetry/instrumentation": "^0.22.0",
        "@opentelemetry/semantic-conventions": "^0.22.0"
      },
      "gitHead": "bd2a005229ea7a0a64ca0ac7c2206ee40d19bfce",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.1-alpha.2",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-lrglftlUZs2V+Ae0kyKp5vrAwa6meyRC9p4b+DiFViTB6Z8U1TCaRWNR0A1rMlc4dep6tWzd7uPZvm2SYf1Jrg==",
        "shasum": "d311188cb2d3cd0cfbc53ee8faf29a086d93ac16",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.1-alpha.2.tgz",
        "fileCount": 45,
        "unpackedSize": 112831,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg01fkCRA9TVsSAnZWagAA8HIQAIZOc6kiuyOOEWD0G3sQ\nALlYNDEYyLEJxmBDUAUYyruAq5egxYGYwFCGbS0EaWCuklkClEdtoq4wXuv7\n8LqnoRisu4M2r7xqa6P2/4mDfJOdD8zdzSMPDW93xbEMPi47/GsPKYN4meL1\nWFxkC7aj3MIMkUl4pvksseySXjocOinotrDUjxiEDAx8zEkuBxL4i3IrTS+Z\nUPmnMn2iA6TAdr5IsZd5Da/EqJDfSsjZ93uPFrcd9M05VAbpJDXXfhMy4/1C\nTEHk+WGgG7+l3sWcekvdLAwdDwB73kc3Nkz+lUmfC+GhLJqbUXe800TJz7j3\nAyYiX+ld+/73dddUzdAmPrCPkr7GB0Gdpaa+scbVh9yZT52GEc6HWHhS26dI\nIy6JBQ35wERArsJsJFjmpS9iurEe9y4AJJjGlYlxypV3uAOgwtP+hZIKJHN5\nUFHruWz+ocpSYx3aR9qX3+CA+aDQiYTP3dzHC7rapWH37p/stwAr0QxUWCpe\nIbeKCFEy5MpcOq2TRotGgwJrp2BIYK0Ua9/o6o6/wsdflfChOZS+JCT/u3ae\nvhxP2QSQaNIn1oyv2zLHF27lM9KDmHEq4orjmwGGEhMnhkNvo4zELCXgEkic\nbvVw6cYtUUT5WxT5MzT1NUKzJlbZfFko7VQLSppVCYl5SIVnxcHF1yroxB6n\nkUcy\r\n=9hqC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFfhLme+c9Mv+efA8/hrVss995iGGzfjfKW8x8VQReQnAiB4VwDptxfaCeGF1XN4wOxp5lU7qTh415CFzgPPxYZ6Pw=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.1-alpha.2_1624463332251_0.6468678429725976"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1-alpha.3": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.1-alpha.3",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "^0.22.0",
        "@opentelemetry/core": "^0.22.1-alpha.3+6fb4fd17",
        "@opentelemetry/node": "^0.22.1-alpha.3+6fb4fd17",
        "@opentelemetry/tracing": "^0.22.1-alpha.3+6fb4fd17",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.22.0",
        "@opentelemetry/instrumentation": "^0.22.0",
        "@opentelemetry/semantic-conventions": "^0.22.0"
      },
      "gitHead": "6fb4fd1712babdbb5de216c26e1283a94f7159ea",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.1-alpha.3",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/3.22.1/node@v14.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-Gzz7oAb5I8hZ++nzdzfcdIgAk2cBlJiiL7i6pCCqiMcpHhn7WPFniwtg4a4Sn21pHBiD5Swvvfex/RZEuYJjdA==",
        "shasum": "b0ee1896df610920add129e5fd0323d099e557cf",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.1-alpha.3.tgz",
        "fileCount": 45,
        "unpackedSize": 112848,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg01uhCRA9TVsSAnZWagAAn+gP/21qz0e1uPThsJ5t3Pt6\n3COWhk6D9FZg6OIsuHvt6odR4M3cz2MDVu4IVr+3I2ebPwBOCK5YseL/RnWe\n6qp9c/KDVchKM9FDAcnt9V9hWr8HM6sa6JnakmNjRgvrhH97EoMJqVHLComx\nOPj+CwzezEPlxbYeA82l4xScVTevkfPaqCErUVZfrqIEHgP956t5rd54TumO\n3HnJZ4I3zrpPK0otcr1SOKrveQmXk0zrHewyswEF9uOF9kSx5flERX3eCAlG\nD23WkQGGQSlURlgTgBURfaTnGO99kN8L3cDbjzHSHb2T5A9KuYu0NUJQP00W\nKuuV171J25t5HplsyqU6V6Fn+aji28/Qt1EDR0FdEmrHtqJQ1tFU6NxxW0DJ\nWFkH/MAGYaXbQHnVpRgPlyWLm6OJSxgMd0MuXFc4eJJdrkfSNmjo1ftGpz/b\nWZl5oiXP1MUolUBaFEsFcIR9H0jfB3LqAn/GvVlD0blrWCQqwa2yP7GhWU5h\nKd979w4ayguccCIODfk/iH2zz6gmyS2PzFUzu01UhcOZERDt7HNLNEZwXYTW\nLb4GxvCbXYrGUib9JDgafyIeentKrrmYq1NxYX113BurL2L9+s+knGjV6X0b\nWvTJWuKe2gzhm4HCpRTZNIglPyy2OcBgZYNxkHWr8mzsWsLlpQ9sAXcTVBwL\nJAWi\r\n=5UjL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFIB3cfboPYa9VZBp8T1fWpYkqmLPx3MXUmbRXgT5YWIAiB0bvaDgcnDe4aNyaaUjxuQjMc9yANNrlocHuQUHhdqvA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.1-alpha.3_1624464288829_0.8906370370104864"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1-alpha.8": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.1-alpha.8",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "^0.22.1-alpha.8+b4420488",
        "@opentelemetry/core": "^0.22.0",
        "@opentelemetry/node": "^0.22.1-alpha.8+b4420488",
        "@opentelemetry/tracing": "^0.22.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.22.0",
        "@opentelemetry/instrumentation": "^0.22.0",
        "@opentelemetry/semantic-conventions": "^0.22.0"
      },
      "gitHead": "b442048818a67da3a59960cc4d28051c4da44155",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.1-alpha.8",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "lerna/3.22.1/node@v14.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-X9DILi4Wn1AjX3HQSUjaxKMO6ScxpNe2Ju2sSaFEriqA6Eud2JW37cUtHYFb6/EjCj9WO7KLsxwi7SDs6fRyJg==",
        "shasum": "3b5ebba3c518e64f3c0df8d11e3037eb4fd250bd",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.1-alpha.8.tgz",
        "fileCount": 45,
        "unpackedSize": 112831,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3GgOCRA9TVsSAnZWagAAeHQP/1yCWQLSL6+RKiFZXv1h\niEAxsvme4CTdKRS0i9P9J0F9Y5NeGWYDlK1c2gxk542S0/DhAz/ReszH7n84\nHvBg2FNHKVKVmHMDcvv4WFAtSjzexGLjeVojt2lhIEf1PZjcxuK/KG61MHNE\n9D53A6T54/ktXacLXfdTe+XXkM2v00PqrHkKDT0i/EQ71C2la9mxq4TgFqJ6\nZnFkzwODL6R7AA+0waYEykm2wEEpe6roU4W4Ye/ZMTInCkCz9ZeT7GK2qjB4\nxjgOfHgnABD1Tm7S+vfRAyDF05GSfOGv2n+rI13ilkVSkrW/vuSyrahXmp1y\nJsygyYIlf3KleawZQuszRZnic4VsZFu19BYSxID/RpKLMSLES0zvV4DtkvBO\nQcJx1RAKRy5bU9Y4KeK2dnmR/v0RoU6L4TMWbrhyWC3W/EOPhbYuwgdgRfVo\nrAinmXAK+esRtxVy81BiXB0L2AZmvmkGb4tdb8yYYMGsTLJ3Twg0WbjfCcpo\nqoQJFJ4gVczETjCICP7cQhmpm2JqdggVZCvA6JTCsmagCtwGR+1DtJ3uwRUj\ndgqj2SYwX5cpEKIJtqTFIcJTsIYnSVAupgWe/J4P9Pi1geqEddy06EsF2F2j\nD8WB9zEhg5aVr47YbZlU6+uPc474eFbx+J124AMl7R5TG0qYnXm9+Lf0Egub\nPxyM\r\n=6JGf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDs9SxBRVbiTpMBIwZVFu80DO/cTIGTKRnnZdfuWoQlNAiAg7UXJ5BSElJNrysVzfj7jKu1DDrypFhnzKfclG5+SQA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.1-alpha.8_1625057293745_0.9639498910837068"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1-alpha.9": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.1-alpha.9",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.0",
        "@grpc/proto-loader": "0.6.1",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "^0.22.0",
        "@opentelemetry/core": "^0.22.0",
        "@opentelemetry/node": "^0.22.1-alpha.9+8f2209f8",
        "@opentelemetry/tracing": "^0.22.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.14.43",
        "@types/semver": "7.3.5",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.7",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.2"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.22.0",
        "@opentelemetry/instrumentation": "^0.22.0",
        "@opentelemetry/semantic-conventions": "^0.22.0"
      },
      "gitHead": "8f2209f8931538de105ed72e4ab7ee6935c98387",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.1-alpha.9",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "lerna/3.22.1/node@v14.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-OY4PUExBYsvRka1kf7Z7aBLyf0rg9EQ1egLvM0T6OE39zv+R33mQk/xc9dbUMUAKIjtFtPa0tFMb51BLDKPw6A==",
        "shasum": "a023a42e24ce3715eb37ebbec3435dad4c7b7e75",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.1-alpha.9.tgz",
        "fileCount": 45,
        "unpackedSize": 112814,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3GvKCRA9TVsSAnZWagAA8vUP/1UF12yNo3WPdl34kkEX\nIhLwgoXlIfndDOqxDYvw3utCLcF2b7r0efEAHJBfW48gWR+u9UX3PcujfmC9\nbPEOQuHz3/FRE+tozyXTy5AX82PFfdMiLcWlseAQmEVHBkgYGHuF+NAcZYrA\nevce2wQg+pXdBujC1QQ4+kjIfxBzzuQUi4Uro9unt1gKXspBCeYzx9FN4mSz\nGPW3AE1wEmIbYEJYSUPltDR7YXBsUzCMKJS5LawPaBaa7TkpHsogALGnGNb9\ncy2+GMgqe/IKIL+3WDSyGHweaKndyByS2DXEu3d7MHip9up0BK1JUwelHZD7\nPIXVPE8am91+BSuLt32KT6R7oYi23gaKWDRb9vTNuQ3wf/y9kFpFR0Oixhpu\nBl286Yz4PVjv3mxSQiuOcqmINZAICGg8Ft4/xQHyMvvtwPu7zOlCyOdsqj0l\ng6rJDLiIE4RthsFLAHTsn7ubxm704oDvvQMGhrGmmgQL8lCTX8nlTlJY7iT0\nfpVG9gmPq/d3MvIBMfyAHgGB9I3M27Ntny4yKfELzhYnWImuNF0YPRhCZXpt\nrU7StfTtPcPoFBJVuU+6n62wR/+vC96XNkxVwZc57NwQ/OlDzk0E/aKq8Ipr\n4uqcIxSTNE/OmMALvY3bruoypNbMp59krg7GCbN6cXh3ELEuUmAqk/O4Xj7T\n0bqL\r\n=yVd8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH/gyyAwzKaJeSWTW8krVgR8b9Mo4q/vr+n+YjHuZmGeAiBYo8ibebqNIz37spRSpEzO21rb/DfJzGNErKThLYMbbA=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.1-alpha.9_1625058250537_0.03948406316445663"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1-alpha.13": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.1-alpha.13",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.22.1-alpha.13+01418978",
        "@opentelemetry/core": "^0.22.1-alpha.13+01418978",
        "@opentelemetry/node": "^0.22.1-alpha.13+01418978",
        "@opentelemetry/tracing": "^0.22.1-alpha.13+01418978",
        "@types/mocha": "8.2.2",
        "@types/node": "14.17.4",
        "@types/semver": "7.3.6",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.22.1-alpha.13+01418978",
        "@opentelemetry/instrumentation": "^0.22.1-alpha.13+01418978",
        "@opentelemetry/semantic-conventions": "^0.22.1-alpha.13+01418978"
      },
      "gitHead": "01418978e5cc15b5ec4d5283ec48910799fe2f06",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.1-alpha.13",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "lerna/3.22.1/node@v14.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-ephDLZ9f1xgrbDVo3+2Nt6ilM6ePXp2K+G69YY/ICeNQ1Qm74aFr2R98x8D03zPJDcW6sNJHEYhlU4pi+DCQxw==",
        "shasum": "b739fd370d0dc7c990c797b6cf6b6cf776df9f82",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.1-alpha.13.tgz",
        "fileCount": 45,
        "unpackedSize": 112924,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3LqWCRA9TVsSAnZWagAA4A0P/2tFxEzRXKomRpiXkBuS\nZ6VK/LhG1k0RIMb7TZHcivOn9OGAZTIa10nKAAmDN0RnydeDwiZHzRjtvMLb\nennOwW0iVSmrSzjzBjF+EH6y82tb6oEGlAa1DmKsYgAODkgk1J4CMkTdfjmU\noyK+7mnsEDIbaB2vfBQalyMCEuiK3vyN3AG4//t8S6LjT1R2bOmFv9JlzRRt\nxj+dRiNNo19brsSB2LZqomXRYQ2eCuedxSmMvVkA1LPkqCC6vlMAeRSGW1vQ\noRf81J1Uw77IRf5VKcY+xzEyXKN/H15TpQ+1zdjHJNyYpndSeQBmVkTVOHsS\n8hFNPypVQahzDvHE8FXcf8q4NzGgFJLju+C7s9jyNhktZZfSEs2NFX8X6g1w\nTrjwCRW0t/J3m+e0LSN30ykT/ga2WrT7zu9bxfTBnpc9jvmFLKwWgJct6uMx\nV0ex3aMMZxlDtfSs/oALfxVr6m1/I6LaQzmCLX/HLT7hZRmh9kV1ZUN8cICH\nU6ZMjbhXHHKuO+k/YJLpyl7rRAlxF1m0AIvcIhIB7QFr3fTaGXgHBw/TnAPS\nRNC47zIKAIijKYXGUTzcoqCOpN0qRuj7P4Fed1k72HmbAO6THhE7UEwnv73E\nHX7u1HGjL0PkU8nYH4QJLH+04BOxKvsE6CPdglfZdTyFo3lpk6jf8J8XygvJ\n/GCx\r\n=TaRM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB73eOvhqVawsUFyLipsLAoVwwtWGOuzgH35QsFQNyiLAiAdFzHcwPnf8x3CGpkytFFdFD0PYlegrktLTWqQMtv1gg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.1-alpha.13_1625078421900_0.9266647003777504"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1-alpha.14": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.1-alpha.14",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.22.1-alpha.14+1998542d",
        "@opentelemetry/core": "^0.22.0",
        "@opentelemetry/node": "^0.22.1-alpha.14+1998542d",
        "@opentelemetry/tracing": "^0.22.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.17.4",
        "@types/semver": "7.3.6",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "9.0.11",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.22.0",
        "@opentelemetry/instrumentation": "^0.22.0",
        "@opentelemetry/semantic-conventions": "^0.22.0"
      },
      "gitHead": "1998542d35a7e0d7f162a4c999ca4c223fa26420",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.1-alpha.14",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "lerna/3.22.1/node@v14.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-yhAB9TgeeZUQtHI1Y9nHWWPWe+aBRKlYfXdgIqiyzj74gH85g7++nkU1of562LI6r/VT3jhug7z2mCuAGb3VPQ==",
        "shasum": "7905ce76e733370f397df7179e6f061e86c8da45",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.1-alpha.14.tgz",
        "fileCount": 45,
        "unpackedSize": 112834,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3L29CRA9TVsSAnZWagAAI7wQAJNNbZh8w8LlaQN34aoG\n/SMJXqOsmED03xw67oz97IysptCuqRhVh4jWt1fbmxcL9ePPmm/8JuptGWGo\nKGwkVS4nxKoesLfevmLj9IhYc8QLKWJqY68HexuMrDCI6lF0ZK041y6VdKZ8\nSNqtuLpdbAWs6Ug3Qqw4Nzz08kSXV+33SKUwDhpVXgYAEuQnU2RF7eyWwjWa\n1any/pF3YxRQCl+Vi+wIBKGg/iOIEXORkLAmzBKl2+5jI5Z81B2c0q+7LDxl\nh4WZef1WDPsKxlVqd+5Ty3fH6OOmJR9nMyEfDOD7SQIpdDrYAEmktc7hVyiq\n/RYoXQPGZdh730rKr/2U8nj3DhabptvzwIHiyhHeyWcQnHqMNghWlhj1cI7O\nA7Yj+X5h+1Xzr8WkqCTGZN7i5p4RLAjCGU1Tgbzc3PNc2JmaoR25QL7iRmp1\nE5Xr0nIjGe9pkijbqB0T7iqG1kq9prlcW6Nd/ke5/6RDROBMd2b30WP+/f5N\nFUUj+HNNvAzXFLmjW/CG6uYBJ9+O/XlKcEbxgrtJIWynoMywcb13lmEyMg5A\nZJLMFym4oJIl22xpOVMYLKOzUKVEeFHdym5VqnQDqex3h7HS5bwj0aEKlyRz\neJA61uuNQSxsp0XBsQXNC99BVQ4vqk9vptFmEv8IuzevuwQwDnQI9lyLonZf\nEZwQ\r\n=/sdC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCZMRUA3FbiKSWpE1gymBbrsO0eyZ1PtnkBi26JSWiyZAIgDKQjhKtJZNCYyyB9Fv/lCMhUZ5nE7789/KhtN+I9h7s="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.1-alpha.14_1625079229215_0.8310468833842237"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1-alpha.15": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.1-alpha.15",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.22.0",
        "@opentelemetry/core": "^0.22.1-alpha.15+c3ff9d1a",
        "@opentelemetry/node": "^0.22.1-alpha.15+c3ff9d1a",
        "@opentelemetry/tracing": "^0.22.1-alpha.15+c3ff9d1a",
        "@types/mocha": "8.2.2",
        "@types/node": "14.17.4",
        "@types/semver": "7.3.6",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "9.1.1",
        "typescript": "4.3.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.22.0",
        "@opentelemetry/instrumentation": "^0.22.1-alpha.15+c3ff9d1a",
        "@opentelemetry/semantic-conventions": "^0.22.1-alpha.15+c3ff9d1a"
      },
      "gitHead": "c3ff9d1a6b599f01634ed2479183aca2c6d57337",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.1-alpha.15",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "lerna/3.22.1/node@v14.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-6LaTn+Nd8w3a1VttnLl5SsK/pRYJYZMH5ySuK8+E1KYEl7jqH/A1wG6rvsRQFPpR+ZL3nVZGTVgNbMk9/JY49g==",
        "shasum": "9e6c97505f08ee032e5b8fc7230fa8161ccbea01",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.1-alpha.15.tgz",
        "fileCount": 45,
        "unpackedSize": 112888,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3ME2CRA9TVsSAnZWagAAP70P/i/5fKcgpV1rzN91NpaN\ngweRyRUr4hb32oQs3JiWTjuYF7wah+6gi36hKFd/3M3yH4FSRn0hyJRpejh6\nIWSsn35m+A5OzVc4oENQXjAs66WnEgMs29Jv7YFVTlJ+46WHOjHwaBQbJ8Uo\nqdYxpxdYP3vbAKOmuc0IW/ytyXt1sEN961g6s/49Nwh9i0A69WamD9K6SzmA\nN+L7DyzTnLYlSegRZw5tmKJ4RKJyFAf3u/FZHU0xvNK/Y+Ob6WfdZiYuRWkF\nOa1NU9I1JpkVH42URo9yq8pTGzAIxGFIjB6aj4bPbBGX5GQtcnzobDHk0z/X\nYzJXfLLvQtoYDAIVHJ7wT8q6cxvR5gRUn6RyiR71FkKXBVkEKmbEbLgLjHGA\n6IvWRBt2uqcq6/wesCRFB/nnFU1y1Sfn16SfvJvgJyktY6jFtBchfVcIY8dj\nD7rCrCucNu21dhEOYRxahJLS61Uqp3FBa2+D3i2nLrefVHxW/Mr+id7kqSGk\nw743uVagHV5wAgQ8cxnMufuYyt8zh1OFTEQhTzfZcIznV2dlOVgK7oPcAK/N\nzv11GF7xJJMCJXTcO05GwCm/sHIg2sVWpz5z6Yp3v9pR11orsEbp/deObUkJ\naD8YiNQRiWwbeZnOoIUKrqdJwjbJP/wX5T4xzLHz5vroX9OvNn8iDWfX5yNk\nCkm2\r\n=Q/7l\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC5gbU2v0occbf14vSdCIa/P0HNU23JMeGs5hw4aFLWdQIgYJNAfPEIfLHGhhJxtjpFEYDVDatUy5jgIPyQqxR3YVU="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.1-alpha.15_1625080118087_0.7367500786420682"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1-alpha.16": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.22.1-alpha.16",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.22.1-alpha.16+5af147b1",
        "@opentelemetry/core": "^0.22.1-alpha.16+5af147b1",
        "@opentelemetry/node": "^0.22.1-alpha.16+5af147b1",
        "@opentelemetry/tracing": "^0.22.1-alpha.16+5af147b1",
        "@types/mocha": "8.2.2",
        "@types/node": "14.17.4",
        "@types/semver": "7.3.6",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "10.0.0",
        "typescript": "4.3.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.22.0",
        "@opentelemetry/instrumentation": "^0.22.1-alpha.16+5af147b1",
        "@opentelemetry/semantic-conventions": "^0.22.1-alpha.16+5af147b1"
      },
      "gitHead": "5af147b159c9dfad8d00a20a3b140d55736f1919",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.22.1-alpha.16",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "lerna/3.22.1/node@v14.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-piwGT4AotWNjEsK7kMT7fLgNYbWDYyT1EfMEP02Zj3+WeHw8XS4YyHOenz4GqO1DAe4LuSX9L/7mwzmeWfI3bg==",
        "shasum": "165da466603c122c02c3423fe7a2fae687c64393",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.22.1-alpha.16.tgz",
        "fileCount": 45,
        "unpackedSize": 112907,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3MqcCRA9TVsSAnZWagAAoIEP+wQoCAXOg5+LqxRn6uH8\n0Bu7fit4ug+cMo0F+Q3ZcoE7e3DE/2/uUI+35dVrs6cdblTUASGBoQECY9I+\n9hIHIOBej2/q/NmLBPpxVH3AIPaNSsMxk9ePp9pztPVH1F6Q8uPn8xE5k00w\n2xMI5JuLueTBdEHqQt8zcv6mYalS7r00qkpnUELaAicKyzE9OLiLTGiMWhyx\nosvc5zrc3FE/XxBPqvMd1YUtdmmcGzhZBaiKMR8evG8FG1GccpGj3RS9mJKX\nyiDfvMdSmTPnqZTnUiNZvdVNxG4L47xhtoj+iVyBFeHEJpHPOEoJ8SLq1XDj\nx7FP/oAowADIuWAy6vYPK3wcLDlBAuPlKvMixUi7nldNo5yIGvJ2fwKKLabP\nvb7JMHNLn6UeyLSFkCTRclH43ZMJeDzztbQvQvL1f7H5Nxcet0jDbb32QrL1\nl7IDN+ldshvjRnfgnafV7+GXnJyvghPABqaBW9NHPx7zJ41aB3gIFqX6uES0\n3m31v6G3nJpOawONzbcNxDBoN1gSz2HTdu4mw1x86uOHY6QMfDqlaGSP7fQM\n1XKf1ac1fo42L/5evDhvtIVrKqHOOrquHpsV7AtzgG3R2prdamtmMAZVocb9\nfC9vcIErJegMMkzbuIOF6G+QZgmVYbY/AqEW1RNeRjE8KJCm4lTZDXRG0CkL\n2xZv\r\n=ITe+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCrQYfmSmZ63As7rdlbeozkYDrQo0Wu2bmOM1N3BBvPjwIgPArtxvIR5F35Inp0wglqVu6MpLcjWgAOMW3A1bmLgYg="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.22.1-alpha.16_1625082523812_0.3161335002953791"
      },
      "_hasShrinkwrap": false
    },
    "0.23.1-alpha.17": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.1-alpha.17",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.23.1-alpha.17+f2a958df",
        "@opentelemetry/core": "^0.23.1-alpha.17+f2a958df",
        "@opentelemetry/node": "^0.23.1-alpha.17+f2a958df",
        "@opentelemetry/tracing": "^0.23.1-alpha.17+f2a958df",
        "@types/mocha": "8.2.2",
        "@types/node": "14.17.4",
        "@types/semver": "7.3.6",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "10.0.0",
        "typescript": "4.3.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.23.1-alpha.17+f2a958df",
        "@opentelemetry/instrumentation": "^0.23.1-alpha.17+f2a958df",
        "@opentelemetry/semantic-conventions": "^0.23.1-alpha.17+f2a958df"
      },
      "gitHead": "f2a958dfeead4f6ae20901ab3fac04e4fc424a3f",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.1-alpha.17",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "lerna/3.22.1/node@v14.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-G3Vbs6oG/3oH9Qt4gSopqkDTEeLs2hjV44cyPo5WDEGeI6lYXBbY100YCDA2e0griap1t1Vx6yxPhdl9HtMucg==",
        "shasum": "57a8640c534aef6ecbdf96aaf5720d3f146fd865",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.1-alpha.17.tgz",
        "fileCount": 45,
        "unpackedSize": 112925,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3M8ECRA9TVsSAnZWagAA3pMQAI3bi4s1QO5ACu5IRZx5\ncw+BtDUKzyikDRNBzxh/wi4L6X18tEhqqydxUT3GxVwK1R+1wShnfZuSQtxI\nUVqIzbXfLhjBDBO737WqIvzcsY//ZMzuxabuOu0aDfqwpTi1LnXUy2lSuvVQ\n2Ic7/YYYS2c5RR3l0QlcqyYusbYFo4Dbz5+3IPHj29eZONCuCsLOM1UnEiMU\nS9Ffc/kjSwJ6GDXM1lUQzH2xVDpnz3wDm83HvCJ3b3RAu3D4PYA4OMLSb2ji\nwdS8q8kl0nbIOlnhgbnKpf6cCF9le83IDJCWZPoFi+6aCr2v+N+z3fOSVBhI\nUxYQDojyXyCkCrZtW71ufnZ2BPIXY1UlUEB0ro9XGf0oUU+KUPaDqXJCjYnC\nhgfdXFjhxXVHPCaLxyIWn0ycXdqGbpr6COn2vI91YFuYVCCjJEDTLKmYlUtd\nTQUh2Uyju2NVyb/OLxgH6KOghgx8Lkx/HAYzr/zq4Nx/kb42sZvgTPB0hCCR\neUXwyqQcBCeqSlYk0RLeAK7plF9Gp2aXcnEfzWZcclKo/iPgk1lXv+9/R8Jd\n5cPCVhEQJMLPmSAgj9cS+IOFqrDp8Elojy904cmkGE+BAh34lrpN21IXeGZk\nPGvpk/dk/pLSMmH1T9xotKcReQ1xYlhJZby/kXr2NUpTbIvsEvyIov0izXu8\nCMP7\r\n=bKVe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDJAwChYPcBzvCuC37yOZmJG/hxrTZDXaI7/w9S+96baAIgO6uUZUrYnTeUkPVFf5qOEEbDeVZBPbXGQFiuRXq+ULI="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.1-alpha.17_1625083652249_0.03498713862435654"
      },
      "_hasShrinkwrap": false
    },
    "0.23.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "0.23.0",
        "@opentelemetry/core": "0.23.0",
        "@opentelemetry/node": "0.23.0",
        "@opentelemetry/tracing": "0.23.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.17.4",
        "@types/semver": "7.3.6",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "10.0.0",
        "typescript": "4.3.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.23.0",
        "@opentelemetry/instrumentation": "0.23.0",
        "@opentelemetry/semantic-conventions": "0.23.0"
      },
      "gitHead": "f2a958dfeead4f6ae20901ab3fac04e4fc424a3f",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-6KQ44TNXq7WH7U3EKFYRHPQ8TvhtEogcgGVM+Nipa57aD9EDvFkhIDYKKeVwfclzrE3dZ5QndnO2vElo0T0oWw==",
        "shasum": "e86edf2ddb3c753cc3894344fc7e81eaba74b84e",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.0.tgz",
        "fileCount": 45,
        "unpackedSize": 112774,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3NC8CRA9TVsSAnZWagAAAqQQAIl2BRHy9mWiMhRPRYR9\nJ6eIiYBtkzE92kdq5+CD4V5ZyGaqpMvUgUaKoTCXeT3J8c0zcqRuMgJ/277c\n6KGAlztIFAqY8PJzUq5pJ1JW28+XZNPLm7xVOZc8ZxUuUrMFFJLlnofM/crN\njZbGXutYMiha7ffBC/jE8WaxTjLqQytjOFZQoBavNMRIXIWps1bWXG8QDm5y\nKvlMuHYzrBrSwA+D/Eq5LPvQwZE/xISVEq5NZJDHNgU9pK7HxBACEyVFaHL9\nVRfmLua24fAZinoGGkAiDGm0VF7YBlesn4bu9CKH8gwe911U5evBGMkAOllS\nlxVI4r48eX7gauL8XFEcCZW37Pyyb9Rms6fRMVOfKJz/syxdykg2KPjSIvhi\n4dNJWeE5AoKbWLjnivg8I/+fefcCwf1wvjlD/Vm5e+9kwFBX7+7fejQGVII4\n/f3nWJy47N7A0lGNx5EHiCXuc/PQXsJzSx1KGBP911Ezz/9tfdxgzE0bY6Tb\nC85o8Bu8ZAJ9nAAGjE0VVyae8GXC7NlXKmIRySF+mwyY4klaaAywWP2xoh+U\n9Ov8MWkOBzNbHAv1MOFyvdu7FrqrFGySjSLZpghOizix+xZfh14FRGvhVuGD\na35AXCbrp6MR+XPipCtkBHWC9IJnre8MaKenR+mUIUnWBTXEnIKMojPxSmCs\nQFLx\r\n=9Dju\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDhi72bTQ8KZrbXYYHOmkBGV7GTu4yGztu+hbbhcLWS8QIhAJxUW9fWAaYDIUpdg/xsGH8aXsZsGe8hVZImrWvvjPjz"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.0_1625084092420_0.6095943980230576"
      },
      "_hasShrinkwrap": false
    },
    "0.23.1-alpha.18": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.1-alpha.18",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.23.1-alpha.18+4b3425dd",
        "@opentelemetry/core": "^0.23.1-alpha.18+4b3425dd",
        "@opentelemetry/node": "^0.23.1-alpha.18+4b3425dd",
        "@opentelemetry/tracing": "^0.23.1-alpha.18+4b3425dd",
        "@types/mocha": "8.2.2",
        "@types/node": "14.17.4",
        "@types/semver": "7.3.6",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "ts-node": "10.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.23.1-alpha.18+4b3425dd",
        "@opentelemetry/instrumentation": "^0.23.1-alpha.18+4b3425dd",
        "@opentelemetry/semantic-conventions": "^0.23.1-alpha.18+4b3425dd"
      },
      "gitHead": "4b3425dd09f0a7087c9d741d25c7a9a0be42770c",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.1-alpha.18",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "lerna/3.22.1/node@v14.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-7UPsgN4tLQeebS8KqiOoyprHfefyTLBAsuWdYAjMCmLgLygGvcTUeTnp9L7mxSfBHAbzV6u/zjLhTiH1jiJfTQ==",
        "shasum": "e5a4af01120726e890b252ef869cad8e43f5f0f8",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.1-alpha.18.tgz",
        "fileCount": 45,
        "unpackedSize": 112925,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg3yTJCRA9TVsSAnZWagAA6tAP/2El5ZXVQFPrhYxLTm35\n8m14GBJ/HxvrEKHhL+Bz6Ozr7jE4OxVzJZrVq6SWTMfjevc7PxZ+j5A4D1qu\nHUgxpWAPBDZvZtm8sRFPCJHJXa26bpETL8va0UyCpqifR1a9NbJ9CR6Ql90Y\nBGA2CqRLXoYe9ghIyIojyaHUK7Ac2j+oFHXh9asHx4tszSMvXOZdq5tcFYYB\nU9Hr8LCv4gIDRnMXUJA9ixWz8gVLXR0+41snMmcgzN+bdZM840yk2AKxLkGq\nDzsZlCv2fQljDWugXB6s5rfHjqZJ1veaofeaSXQ8f+zsEQaCLS64qltn1PNc\nBN6zNo5NVRx7DjWqO4xU5lOBcN97Dah8BxZ3hTYSVD2euGfVCK76kgMV63YK\npMQzZSx0QLZVDnd5rLCWYNW57DzCyT7pbPr+m3vmLXpsVhY/YowJVhhZJDZH\nCv6vNRdT5GLs5HmEsZ6U1zHBnnhK2W3piD9CdPDlwZ6l9LlaAYJ0r3Ca+pEo\nYGALrri7EBXspWROwAFVxEFSosVQIycF0FY+3U8VR9Hm7mGNuMs9lIoJNtxh\naVSsJkc9bSsMKN5PTpfMF9s2j6W/C7fysEdRESNileX1jLy4s64v/Gm6vYVT\nann/lIHi24JmbfXZX5UZJlHvb7hmaXQ2//Ig5imzp4Td+g1fjnZGgT7QR2TC\nDlHH\r\n=2yHX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD20+4J4kKLNH/0vPMtvkC6WwWE7atzKuPVtnQi8sKOBQIgeP1YWRIBsdxGGub/gWzrJ+wlHiQ/aoOkGrF7Xx6vbhg="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.1-alpha.18_1625236680546_0.41068325522861504"
      },
      "_hasShrinkwrap": false
    },
    "0.23.1-alpha.3": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.1-alpha.3",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.23.1-alpha.3+6ed8d925",
        "@opentelemetry/core": "^0.23.1-alpha.3+6ed8d925",
        "@opentelemetry/node": "^0.23.1-alpha.3+6ed8d925",
        "@opentelemetry/tracing": "^0.23.1-alpha.3+6ed8d925",
        "@types/mocha": "8.2.2",
        "@types/node": "14.17.4",
        "@types/semver": "7.3.6",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.23.0",
        "@opentelemetry/instrumentation": "^0.23.1-alpha.3+6ed8d925",
        "@opentelemetry/semantic-conventions": "^0.23.1-alpha.3+6ed8d925"
      },
      "gitHead": "6ed8d92559df68ef1fd3273598a1860ee5197e53",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.1-alpha.3",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "lerna/3.22.1/node@v14.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-UnBDvboI9yznE1UNMzLTm7IC2JbjUAH9xs0KJRBDpiq63wmFr6Qx7MEfiWXq1LNH1d3ibzI0gmyyZgVMmLmElg==",
        "shasum": "a5f9889f7a7078a5e93071f036cb24b1df01d15a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.1-alpha.3.tgz",
        "fileCount": 45,
        "unpackedSize": 112875,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg44dNCRA9TVsSAnZWagAAwjcP/iNnkQBm6YetkfkLUOTv\nzqO4y69zQ9U4NW7uGwY8F2aBDbaGOz9EzqjuF1XfTolMzWJwXysdXj1ZZGGL\nsqyjQunDec8eq9uceuZM+xRaRdV45n1jkeEqhpJL6xHapO1kCeC+IRXFES+O\nGVx2Q2XeRVEnbiH8ftzH1GQThsfY2JiA0zF3W6lLCDXRk/NKmcyPJuVacA9F\nigYZlR8LpdzqmopS8MikhX5VB5oWBdkgW9kUnFcnw3dHlZgtxfi7dOyOmDyw\nq8BuRoBtwx5+FSY0d0soQRzhM/UHde/LAc56mOa5U0/iRYxd8uTUyF3+M8k8\naomTbCJ1Cbt4ES4ASe+BtxNyS2bC4ZfVESieZ7m2aPvzaVZhxLhyLx21w+3V\nA+ubpBKYtcd4DUPhaiCVkefCXYnsgF+8nP/uKYAAp5ki/suMzV0m237F/WuT\nM6XLN4qlAzQm6HoJy6jDMWFME18/acaUtbDaXvSDg1+LuAWc9I0hzu4MxHTR\nYgF8zokUVexLEHVdjwh1qO+QtK2BKMklhqA7TiGfQ3r0TZ2hSBCXminzOx4m\nSiU8OKT8i8v1MXw2/qPxrPMwqCMS1mkZJQJNSlZU+2Uml7obhDHCaYgAIu6F\nonB2/rs/GU+MYGf/F3S7qvmY3MsLtK7rxTw4Exvz7CMTU1gxEF9eGX8qitQ4\nn1XU\r\n=5J/L\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHttY4aIAmwDh6ZnOcaykKLbq6cQqa8TkNT36lQbQeHMAiEAx+u/AdqHmxOyhR2jyPnfVlvJxlLXHYPuyYoeRjp0wlM="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.1-alpha.3_1625524045294_0.10288229661068082"
      },
      "_hasShrinkwrap": false
    },
    "0.23.1-alpha.12": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.1-alpha.12",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.23.0",
        "@opentelemetry/core": "^0.23.0",
        "@opentelemetry/node": "^0.23.0",
        "@opentelemetry/tracing": "^0.23.0",
        "@types/mocha": "8.2.2",
        "@types/node": "14.17.4",
        "@types/semver": "7.3.6",
        "@types/shimmer": "1.0.1",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.23.0",
        "@opentelemetry/instrumentation": "^0.23.1-alpha.12+2355717b",
        "@opentelemetry/semantic-conventions": "^0.23.0"
      },
      "gitHead": "2355717b75e546fd36c623ebd880fbfb04ac7764",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.1-alpha.12",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "lerna/3.22.1/node@v14.17.3+x64 (linux)",
      "dist": {
        "integrity": "sha512-IRcV2Uz6ItTRf6Mggj69x12uwaGUzeiWHWO8qOe56w/3aG9CCpDCtnJnvbtsaqMRA9Mni5OLlpbf4zI95+dvYQ==",
        "shasum": "e07f4c14d74ed7335f6c3d76532511db0d442711",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.1-alpha.12.tgz",
        "fileCount": 45,
        "unpackedSize": 112792,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg8pllCRA9TVsSAnZWagAAdB0QAJijOE6i1OuG1hFV5gm4\n/HWK2xXk2iswZWaueHwbkgIvqo2hi2j+cnsqT7F9AND4mjH1nxQT/24uw6ko\nooSxa0hjYiX7eqhJOgZSOvX/MLYcTJ8h6E1QpMD9xDkrNwedLFxYDe4Nz2YO\nULPFBF4AOh3oGA10AE2rJjwG9VaJnHYGR7JCEIhGrt6mjSULdy2tgvX5zp4H\n/GpHb1p8pCdjsCWxhJpUPXRIot6+WATJ3fmOfMz/OSO7YQ63M0c2/cY4jlXK\nA8pVuSaUJKv0GyUWqcyyEoDOwKtCKEg3SIEdraShGKMtOIjUVyKAU2rkak3p\nc3e5L3zwENfkJu3eglh4jeLhIH5TeIUH3AagGr8Ku8ReA5ddCCA9EN7hbzi2\nmZUfgDhQQ6cX9/Lxix83YW2LjywG04uSDr52LE+Do483pgY9zQXKNrt0eTjU\nceUiTfJZYMTst85h6U3pN9kvWhaDxBuYeIEM+REXB3CMH82XXrL9MjdD6cA3\nWL9VI7nGbaQGnniGbxAfZzlTHl4xgXKAuLKF1ilPyJ6iIugwpdzFLrb0DHuS\nWhVyKLw9tAFJKT73b4OcGdaAnTJ2QBEm6L4JfLpyztyu4sO5BI3OIKwjs8Pl\n+Dvh/bdwgEO/z8Qnz/icdtbvJOUSAZw+sc5nmwld1EFDIryC2bYIFeg+UvfI\ngDea\r\n=UQQ2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDdbrV6JXSuhjWyl4i8d5GJsLv8VatKsme6hHPYRPne+QIgFdzR9AR3eHwKmCn+Wmv7NHhL62kATE7SQjwcgAIM6sE="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.1-alpha.12_1626511717498_0.8278394894656069"
      },
      "_hasShrinkwrap": false
    },
    "0.23.1-alpha.15": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.1-alpha.15",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.5",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.23.1-alpha.15+b67ca056",
        "@opentelemetry/core": "^0.23.1-alpha.15+b67ca056",
        "@opentelemetry/node": "^0.23.1-alpha.15+b67ca056",
        "@opentelemetry/tracing": "^0.23.1-alpha.15+b67ca056",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.5",
        "@types/semver": "7.3.7",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.23.1-alpha.15+b67ca056",
        "@opentelemetry/instrumentation": "^0.23.1-alpha.15+b67ca056",
        "@opentelemetry/semantic-conventions": "^0.23.1-alpha.15+b67ca056"
      },
      "gitHead": "b67ca0568c333e5d841c9b614ed40b3e107682e9",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.1-alpha.15",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "lerna/3.22.1/node@v14.17.3+x64 (linux)",
      "dist": {
        "integrity": "sha512-aecBBrrsgUKV/W1dJjabpDF4GRyvoPA8w24TzUy8wYp0CrkR/EByEv8yBHKI9AGScvpts0JAaPj3u2IIni76yw==",
        "shasum": "c3a68cf65a74946eef110f13b34aefc282f51704",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.1-alpha.15.tgz",
        "fileCount": 45,
        "unpackedSize": 112900,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg8qBKCRA9TVsSAnZWagAAMhQQAI5cg83v55+V6ObnWTYV\nhHV/v0ubdvU4IeZJJCMWYAtW82nBRDqFhunzmkC9hguQEI6XZrJ3+WnFfNql\n6BB31ZiuMZxbL3QQ8yEFg4/PNwhl2869GgUblrMza8DWyNElQq5ufGMsRVVa\nJj5ujkaWKs/D43rdFEctLMnDDivJwfgshsw084ffgnSYQssfpiNMGKFqleIl\nGAtR0IiV1ul1sTCSQjmSnI0bEFmTYpA0qpnRgNlv47Xl/KBmD9znSuT1B0jo\nD7f8NzHCbV9pmaSEy+kEBcfO32ijk/FmfoSbJbNHANU3mu8xylnofAw6ZaTy\nmaKZxkIGRIx9n7bO52lQUdh2jRsth0bllAdVS8Y6s5QizIZKG4/sOEr0PrTP\nqBExpVi28zwVfP6rKAw0Xh1ZCJDsGqqswZ19J/hHCHimJHNO+tgiAp9oVkBk\nbWzK0bKz9SyBTT1lRNEA6BzPI7mrc2dPdnedmE9X79fWnSR5tXmB55mb4VKp\nvk1W7BtTL8SZDP8JMaRYbqhoqgPcyKF+s31P/t3TgxDy6f9qP562/feLyIQC\nl45TP03Xvqlc/qSgZgBB9Vog+Ek+tMyeRwW5VVvT/EhMoYXmHHVe+dYSRkus\nEYWKSBC1DUkB/0bJa+vzHnVdFZw1EQLn2RSNjJZkUPjH/stb0VdzVMGc1S6b\nIv+v\r\n=LGT0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDwIAxFBY7McqITrmspQ6xLzV5VB+mV7epYaeX2n7KKPQIhAL4prv352h7z30lAM113DNmCaUggzRppt13EzAtB2lZf"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.1-alpha.15_1626513481995_0.6056753928280658"
      },
      "_hasShrinkwrap": false
    },
    "0.23.1-alpha.16": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.1-alpha.16",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.5",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.23.0",
        "@opentelemetry/core": "^0.23.0",
        "@opentelemetry/node": "^0.23.1-alpha.16+cef7ce90",
        "@opentelemetry/tracing": "^0.23.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.5",
        "@types/semver": "7.3.7",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.2",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.23.0",
        "@opentelemetry/instrumentation": "^0.23.0",
        "@opentelemetry/semantic-conventions": "^0.23.0"
      },
      "gitHead": "cef7ce903c84d944d6e7bd88b719aac8a0827d75",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.1-alpha.16",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "lerna/3.22.1/node@v14.17.3+x64 (linux)",
      "dist": {
        "integrity": "sha512-ta3GnCH7FK02wTgJow+cxdcoNSRWw18nvauSP/2pVPA7HabtdIpIC1bMnzC7Zzn99N8lfrFc32Y5OCgNeGSolw==",
        "shasum": "a6e4241d15d79eb63cf8303525113ffa62f7d05b",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.1-alpha.16.tgz",
        "fileCount": 45,
        "unpackedSize": 112792,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg8qIICRA9TVsSAnZWagAAVHUP/Ronpb/bBJ/p1BpL0OXb\ny0EzuB8XryKvOEkoj+0/I0j7F52uSVeo0XPnuUVESEH/qoVFfQT/vrN3QjVv\ndmHCtACfF3YVYtr4HLntS6i0zQdogvizBoD7q1WKr8uKhMgJHSeeR0Smwe69\n5yha+CMk1fIX44isI1lh5X97Yty9GLzu4rbtyc3UJxzvx19V/JRgEISy14Az\nuMqkVskvIeJ28JcbH/RnjzT/3ueNhcSrPmqj5ma+Un3Uiu7K3wtFJh6Wo5Q6\nvWPTStc72TAJGVYGSbVhp28S6MgJSizwilCGt+gga3+JkhUvtqNMG6Pr45HT\nUEf4UUDLo023ICxtSoAuxJAWHvYnpIaLzwI9zdjxrb2BFmXvU4ako9yT7hQ9\nyDvzcMslC8XRSYwjzdLg+p5hnbloT1Xglm3SoJ9aH8OrVKEifNi32DhWvs5C\nC+jclufiJ4oW2VRxfO/fHp+tobN35kIc6jXOf5jnxqhPSaHmsH/2RFztPkWK\nFP7GlOCSdZ/E2PNm4YRgRnTOvJ+K8sdZJKRKjackVGuk41a8DJ+2vuKGbh3F\n+tszztYnM53gDyIFTI2pRtJfOzIFaLPTLkylyttrAajaydOWI3heAIJsiXdW\nMfsbefkgaBITSAwW5f2jnEvTeY24rT/a/v9TBNlS0ApiQg0zq3dI9Z2XPlHm\nHnAr\r\n=d9sm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHNeqc2rNwh5m6za3XtpGIy09cE3pAqJHWhY2iB8+rabAiAQq+H6NvmWLOp84Gl/mAzs3Gs5Iz+COzvglRj4IgTx1w=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.1-alpha.16_1626513927878_0.1975122028980223"
      },
      "_hasShrinkwrap": false
    },
    "0.23.1-alpha.23": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.1-alpha.23",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.23.1-alpha.23+884d20ab",
        "@opentelemetry/core": "^0.23.1-alpha.23+884d20ab",
        "@opentelemetry/node": "^0.23.1-alpha.23+884d20ab",
        "@opentelemetry/tracing": "^0.23.1-alpha.23+884d20ab",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.5",
        "@types/semver": "7.3.7",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.23.1-alpha.23+884d20ab",
        "@opentelemetry/instrumentation": "^0.23.1-alpha.23+884d20ab",
        "@opentelemetry/semantic-conventions": "^0.23.1-alpha.23+884d20ab"
      },
      "gitHead": "884d20ab417bf0283ec84a72b9a0fae8ebcb82a1",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.1-alpha.23",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "lerna/3.22.1/node@v14.17.3+x64 (linux)",
      "dist": {
        "integrity": "sha512-5Ou5Hfy8Jfjrdm/oc0xAROHZjvv7WYAVoi/ZfAV/FStpAAs5lUaW9wYFXjST42LnfqVrViXdGyr9WyEiLFkLEA==",
        "shasum": "79bcf6ede98935623bd684558b6ad041bbd6d35b",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.1-alpha.23.tgz",
        "fileCount": 45,
        "unpackedSize": 112900,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg+wBhCRA9TVsSAnZWagAAzGoP/iy5Vp5YlBcMX85pdlA3\nFc8VB7mzSa2ZrhxDKJinojYH1kML83qUzWoO8FniZ437OObrgycD9JjcZtyv\nYEVIogcmamy1lez0NB7TDO1CbNiDeCYpvGwLsM2L4ilO5LEfeA+Tsutx1teW\nwU+cWcB2K8d9wq1yo5/O/JcoxJzbbdVyxlWfBNzxEITAGfvTt9REpRLIwUCG\nkzJxK53teboWI07J6S/5FqWHVkA1k+Eo/OmJgm8Id+gNDoGogQIJPuy6FEOX\n+K7bLlqbrIPCHrTJj5OE20w04etNws5+IppdKOum7qBrQI+hb5GoJ92GFj1a\nc/MB2Ip7qHylr7QG71M0sMIYQUv/W9wYS9b+g0BlOzfBltL9U8yvJyNW+fZu\nK4m2mw8CsvB1sckWwCV3pIU0QsotAsjJx1hAeec67s977KbePeZj2fYv477J\nwRfZV70pFyXjY9cdkLFQVtlBZnF9kzx8fCsG5MCHUTYX6lnCj+SgtEL/9N8i\naf7kVLMPJuZ9sJjwJASz4tHBcd9GF0BO7YYPcnOZRrmuAFvvvQ7DwlaGZXl4\nDQier99ZX4XYg0CBP3h9T0iTlOYhuNqqN6zlc+EN5Wr6wGDJIv6fd+YC5SNP\nr5NhlKBinKH6AyoHwV70jzXjBnebrtlioqagbRlg/76ydXRTthDSQWLctJT9\nzb0a\r\n=cqLv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEIVjK0RN7ka4+US+Ccslt0lPA2iEAwnyzo/bLx7k/3SAiBiHp8cOGbAaDHFBTlREHI9PdlMUibEfn4acHa/X+C+Kg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.1-alpha.23_1627062369263_0.8179786576247419"
      },
      "_hasShrinkwrap": false
    },
    "0.23.1-alpha.24": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.1-alpha.24",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.23.0",
        "@opentelemetry/core": "^0.23.1-alpha.24+3bc34528",
        "@opentelemetry/node": "^0.23.1-alpha.24+3bc34528",
        "@opentelemetry/tracing": "^0.23.1-alpha.24+3bc34528",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.5",
        "@types/semver": "7.3.7",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "10.0.0",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.23.0",
        "@opentelemetry/instrumentation": "^0.23.0",
        "@opentelemetry/semantic-conventions": "^0.23.1-alpha.24+3bc34528"
      },
      "gitHead": "3bc3452814e30274d7eea1f3c9da968b88b1a197",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.1-alpha.24",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "lerna/3.22.1/node@v14.17.3+x64 (linux)",
      "dist": {
        "integrity": "sha512-QLm0AfBs0wHzBL7LUYIHF9OvecX02i5vauP62B8ChZNOhRVBYo8KZdBnDu6ivXE0K7mfauRhlDkrOFhajwZ/Uw==",
        "shasum": "f85a0cbab4198019ec6c50906bd9ec0d4ebf86b4",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.1-alpha.24.tgz",
        "fileCount": 45,
        "unpackedSize": 112846,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg/Qh2CRA9TVsSAnZWagAAWU0P/2kGNUcbBXvXTpgjClTV\nMNBsKWxrPkKIzHzcn/03/S2NTxVy3YWKW6KmsjxPwS27MGJ0fm/e0nvpE38L\nrt+LpJiwKUXCRJ0IHiMgMz5LyUMqFfbiTZ1IuU9MvZeYnRiVNwNb/U8+MFgz\ncKaWN0p8b0xBHaQvnazuE9EFwunszY1zSyOCLr65+CqX5FfC1IA/bWvQUcLT\nkOVNKzNQQq5aHxOd8Fdj0fMeh9wQ9hjEJZSItixJjngFkWZYM+r6NH6eLOGt\n1fOVrKLbh/kO/eY9lsLRFGIaJIj7PoJiVRmc/sjAhgxFwFcN4+aS4aWOdDgz\nJPgDlHWFDbIHyDn/Z+shzd2fKce3X5tsVqduU+s8JiPOOi6IeSh4nCgRqOZF\nK4NoFEqdby+hc/WVRjr7lzos2jnFDqHwe8/leU+UHtiS2X1pVlELJhTweURC\nk8ASJLDeJ3aEHzpFKzzeLB0IwiYSsr4oz0AqpLc9pmZ8nKYwHpRt8jlz4Ix6\nwuAwyYxfVtI04uUjJGTHCzO+Kb/6BMj2QIaXlSTXqGAOAqAR+rFKQvdp65bj\nF/ZQD6m4xL0f0dq52JkcdwKB3ZSBOJ/LtbHZe/wox5gvYYvpUEWEV/W0vsvA\nI1x+7NSHlmcxvQwm+lOgaw72YCzLbU2g0INpK8gHVHbt17ece49iPiQ1IpGH\noLMu\r\n=KL1Q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDMsyxwxjp3mNLXuiFsbLz/lgPaT8WicM3ZVpFpmNQpegIhAO6cXfvyttl51nKB2wnJBvHmK07IxbX/DDcMf1FMvd+I"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.1-alpha.24_1627195509965_0.5186077483473817"
      },
      "_hasShrinkwrap": false
    },
    "0.23.1-alpha.28": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.23.1-alpha.28",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.23.0",
        "@opentelemetry/core": "^0.23.1-alpha.28+d8fbedda",
        "@opentelemetry/node": "^0.23.1-alpha.28+d8fbedda",
        "@opentelemetry/tracing": "^0.23.1-alpha.28+d8fbedda",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.5",
        "@types/semver": "7.3.7",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.23.0",
        "@opentelemetry/instrumentation": "^0.23.1-alpha.28+d8fbedda",
        "@opentelemetry/semantic-conventions": "^0.23.1-alpha.28+d8fbedda"
      },
      "gitHead": "d8fbeddacce3e27aab40b24c2ca3c271155e74ea",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.23.1-alpha.28",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "lerna/3.22.1/node@v14.17.3+x64 (linux)",
      "dist": {
        "integrity": "sha512-dM/WFLBr0WaYDcjOcTQdSsSyqCokAclhLHQI7SK7bFjjaNfTjlnC007zhwcWA8aArwr0xIvtpOUXS43/irVg0A==",
        "shasum": "422ccaf12520677bd67b91398f80228ca8977301",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.23.1-alpha.28.tgz",
        "fileCount": 45,
        "unpackedSize": 112864,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhAGIICRA9TVsSAnZWagAAa2wQAJXz0J8SgJMEMZplmPnu\nydSjdqoz6ARp29rSUcMGWCEcXnCgg0sM3oys3vIlNqpDN4wTj9W3Y0R47S8g\nP05HzYZQwl14xHxVJ8HZRnzGp2Jn6i72sAiswGtlHdPSChPn00oVX2evD5hj\nNwNPVDQZSwixSVgBklri9PoMyX1uT0qMYPHVBCq6U/78YMKpJ7WU80cK9unf\nz6T4ew5zA9VYhFUIYGdPNs+Bby1KR63lh3ibrobN0cYDM17Xblro9+g0ESG5\nSEj21pBI0T+p8pkC+2dsXiosJP10Mh5JArlIEoYZMAQaFs9ept01FR4N/VKh\n+tN9JzeAB0dFFwgrRwJ2Ii4tYR7glw7yGMpgQpmIPtncfyhrvKFwoNygZf5o\nPeaBWE4UazHE8AenjjBYimB0ulbvGYsCWLpQKuMOyyn3gyRWB/YnXJlpiQDU\nVW2vBzGldMuOQxykneknqCyaIHc94mzNmzTT4jOmFlkLXHkhk/Aq+zNpCOsZ\nNTDclonWdlynNyJWesfaCT+xP2yjfx8eAeISJATHS57WujBJFbIfJV/9GLft\nPhF6VI7zMJMT0l7sktd7kVCsHEjkaKzVFnOLC/LTs2CGnLvQfG34jPWjZ00s\nj+qjxPGXbAGGwPiGITdx76ZcKldjrCSNCgnCbFPeislywWm78ISj2Wj9oa65\nwKYJ\r\n=1T6+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA2yZqg64a2sx0QSD8TqcalPG1zBuKRjGF6LClrWnnUzAiBszOSTGJjZ65+EibRKghypUpzah7pe9tvWeTTmlCdGZg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.23.1-alpha.28_1627415047945_0.7463593330060654"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.31": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.31",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "^0.24.1-alpha.31+fd2410cc",
        "@opentelemetry/core": "^0.24.1-alpha.31+fd2410cc",
        "@opentelemetry/node": "^0.24.1-alpha.31+fd2410cc",
        "@opentelemetry/tracing": "^0.24.1-alpha.31+fd2410cc",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.5",
        "@types/semver": "7.3.7",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.1-alpha.31+fd2410cc",
        "@opentelemetry/instrumentation": "^0.24.1-alpha.31+fd2410cc",
        "@opentelemetry/semantic-conventions": "^0.24.1-alpha.31+fd2410cc"
      },
      "gitHead": "fd2410cc9e8d43210b6ea44b8193fa70ee900499",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.31",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "lerna/3.22.1/node@v14.17.3+x64 (linux)",
      "dist": {
        "integrity": "sha512-kHkMmA8E/m8/evizdvsng5uAAWMZIC/RDnVBfoVIOGNV2mJcuM+1Al7qHGj7Myc21l1y2R5OThw7Rk1JZy1kyg==",
        "shasum": "ccac0d757a6880f1cd13077a06f216b36507b5eb",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.31.tgz",
        "fileCount": 45,
        "unpackedSize": 112900,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhAWSHCRA9TVsSAnZWagAAwLcQAIHOCQUqAbBcOpAaFBK0\nGXoRrTOCIBkHKcI9tfqFc9hYX81w50i5PGGLD35I5N5P8ezxwaOL8/U4M1PH\nHMY7yf4euxH48cUz2c7Mhoss3LsxYZudn8I7IQtk6gst3KMp+4h/H935Ss6d\neoqc69Of/qghDXgnSxqDoAmbbSrhcrL/llr/EsYLUNSjCiMaEHdYrY/azrIK\nr+o2h6jWKT1FhscGF3jY0inDlql4SMRspYJpXoHsB4qyeyx+GAauHkbMq46q\ngtuYeDJoctQi3e7/DPnBrUwJAeavsum1Ek8z5h2GBf8m7cMx8DMD8yWjIwET\nXck1lH5mrrL9EylgI6Il5rH4/9gQ94YwF1cunbDlvp5VFtC+XyQUeewxDtzl\n65JgEAm9W4uW/xJx8DipV+UkAH8VsQEfH70KDmWwk+5LjTIXULatncKvlksf\n2vG89abTUJJJrmyiZExCM83suZ/VkrVEGZcqGYwINNlE5/KBN+OItYSOwBIs\nBCVH8a7jvVL74eHOjXrkUaoC9OqD5hOv14X+SnRjNT8ku2dsP7p8zlpsKTCr\nIMzS0Z+XZZn1ZIASPpKo7V83YXMXmM2t9cLA1WHQH/ttNu+bv37dWJTit38P\n7MeY8FinfGJLBAw5OxYZsX4oLEmpeczeR6soclNL8cBzptodpX2V0CBME5r0\nPtJt\r\n=ZaWf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDXiv2jE7WtVN4fqr10FkHXoUMvpVHxFwcms+Xz0UCtOwIhAPy3P0R2/bfs4G/bhUD6igaJKkuFJEsbN7X49zbOTyeF"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.31_1627481223230_0.19735863616969684"
      },
      "_hasShrinkwrap": false
    },
    "0.24.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.1",
        "@opentelemetry/context-async-hooks": "0.24.0",
        "@opentelemetry/core": "0.24.0",
        "@opentelemetry/node": "0.24.0",
        "@opentelemetry/tracing": "0.24.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.5",
        "@types/semver": "7.3.7",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.10",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.1"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.24.0",
        "@opentelemetry/instrumentation": "0.24.0",
        "@opentelemetry/semantic-conventions": "0.24.0"
      },
      "gitHead": "fd2410cc9e8d43210b6ea44b8193fa70ee900499",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-fdsrKC1dcUsNsoCNtHLXr669UN9iKRRHmKcONkcoPdYOmptEjkSzOd4sWUP2E+cNEwvyP3mfGGmmNOMYsEno0g==",
        "shasum": "14e87033bd277109453ae6b6fbae8e4f702f6560",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.0.tgz",
        "fileCount": 45,
        "unpackedSize": 112749,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhAWYpCRA9TVsSAnZWagAAKysP/2mQ35IDNTzWTsnYTdfe\nc7vO2ad0tLDFRQGYoZ6aPkV7tTOs0CgAJL/fS0+3UGvjLxgcLB5DVSHs9r+6\n8V382W0re3BTEOTGhi7xAY9VhxpxBSZbkkL9sFZPk0kvhDH87oay9J+wV5mB\nXZ9KGCRBZOqvOS0Jjtsj/9pqnDw8PwRPvkZUOL4kcteJtApnf7M8FseZ4Hlz\n+eYr1YTP7zJU/J1be814R4R0HkNzE26HPgb7OvS+4++FpiYWtfT5qWpm5yBq\nMcfLTP0ibRrNg3Z/mCvGBT4ABKH00fztqAJRXjqW4XaJBosqcIO61ruBqbzi\ndETo9KnjBTwvAFvnuot2cBm3kStwzWsVEs/VFXb+XKQ++7CmvWbYA8p/oa+2\n019esXoGWQMDfU0mLJzVwHNaeg9lbDhW0DqBsxseq7QGgKCyBMgzXmuBdSJD\no73KvVKHssGcTxgs4GdnfCUiJFNRVgr9lNY11/ZBKrS0GTDIJE11XdITZtL6\nlwqMACFJCxHb9YPkvh1MhwzR3gajJddQ9OzCci2S3VO/6hQyqtWZtkG68meq\nfPiXf3UfehkDkYJ8CgtHwGHJVAVDmzU1cLWKPPueq3ameP+S05Ga87fN9pC3\nEZ8SkY9YciPQaIRQ66ablcYLFHbWROQ9s1JhK/VAeaxllWC5XmXaB8Vc/Shz\nDukY\r\n=hoHD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD86GuxvyZm3DMImWeCMovQ/ZSQMBDoxGWGQb1q59tbWgIhAIyUhpBDsEiHrShN1dTrB7merirbpcdQUEf+R86SjDHu"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.0_1627481641518_0.08151431755035654"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.1-alpha.1+3b9cd16a",
        "@opentelemetry/core": "^0.24.1-alpha.1+3b9cd16a",
        "@opentelemetry/node": "^0.24.1-alpha.1+3b9cd16a",
        "@opentelemetry/tracing": "^0.24.1-alpha.1+3b9cd16a",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.6",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.1-alpha.1+3b9cd16a",
        "@opentelemetry/instrumentation": "^0.24.1-alpha.1+3b9cd16a",
        "@opentelemetry/semantic-conventions": "^0.24.1-alpha.1+3b9cd16a"
      },
      "gitHead": "3b9cd16a8eeed7a262bdfea4c93098861b4c1ba0",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.1",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "lerna/3.22.1/node@v14.17.3+x64 (linux)",
      "dist": {
        "integrity": "sha512-gdJWYs5j2mktTynXq4Fgq6nf5mOOtBxl/rg0lmb+vqe1TYFuw0/vFimsKjC8e39zL41i5vBgH4k7n7U4lKcH0w==",
        "shasum": "b09d2f7874d3354c3c738c89dc5b35e76f39f5d5",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.1.tgz",
        "fileCount": 45,
        "unpackedSize": 112892,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhBFYjCRA9TVsSAnZWagAAI1sP/R3Hzz7zJ6DX8qHedB9b\nPApj03/Y1MJ31yNDMbh/LKzdlo1+VyPzjI00al154JKQMGLhKiamx4bzxNma\njrq3rjQApQ7HGwYCbEv1OL5lS8MshQ5D88StFutDRUH0IQGfMrlBx38grR2x\nbQRiIYumwkd/UAzjjp8AnW2iruvV9bjcHeXdT1x0iOBV6jRvQinU8epG/JNw\nhFs+3czIq+OzbvI0zLQxeHXtGs4TfM9fDvmS/Gpprk5Ew/dpFFcGQzsg7tBE\nN67JoygIsgCOSpicOyi7igosUS2mnhdCnrPch8epY72R+uS+LTrUCTh4KGE2\nJkQh/m6NDI+yKsBtfoE39VSGnahvomezfXl4Ew/ehC38VG5r9peqqOwwM2ZT\nXgNXJscQt7C9NUZPocZAZfElvhZmsbUlxc/p4eYrP5Lhe+o2rk61Gx6e87nX\n0jrtLkxs/9g+3ipw/DEquh49fPIdVO+9Y0RpT+ujtn5m3A6JHUEXjiLgZRV4\nrF3TACyUfxTAC8Orsehb6xit/GGIW3o1P3+CgJ7+zcGuT6E7q7tjS66wwjcs\nPs1MgeGA47RAO9ZKgdUTizvUMKJThftpPv8nQAsJ38DRl5CSXUwqGn7MpVqz\nLLRoPsUoX4jZONc6F7zjq3tqFcTByvRwV9PQBexGTa3Slk4mnDwTVDFLA3lS\nc34k\r\n=3PM/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBgKm19wlA09kYBHJMkvIjfgrxCfcpqLcBInNXFuPrTpAiAqoV1WIoS3BfmSj8Nb4eJn0OO1b/ssES/9kc9dMJdkkg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.1_1627674147813_0.9456505505868005"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.4": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.4",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.0",
        "@opentelemetry/core": "^0.24.1-alpha.4+a8d39317",
        "@opentelemetry/sdk-trace-base": "^0.24.1-alpha.4+a8d39317",
        "@opentelemetry/sdk-trace-node": "^0.24.1-alpha.4+a8d39317",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.6",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.1-alpha.4+a8d39317",
        "@opentelemetry/instrumentation": "^0.24.1-alpha.4+a8d39317",
        "@opentelemetry/semantic-conventions": "^0.24.0"
      },
      "gitHead": "a8d39317b5daad727f2116ca314db0d1420ec488",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.4",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-ji6jxIhgMxQyu9RNlzachXX/KeZR+79yMnjc9l8fCvck32thqWF0MFrbfjUWD+Kc3QCndsCZKkeo64EoyzdEZQ==",
        "shasum": "ed6b4916194c2c9366669cfc866ea5ae8dad69d6",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.4.tgz",
        "fileCount": 45,
        "unpackedSize": 112905,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDDvLCRA9TVsSAnZWagAANsYP/0JgZWSG+WGIJ4PSKSrI\nRI+zG1G+Lh/juqe4KWDqH8NmpAREtASFjVqXM2gfRR27Sh7KqT0UxFNb7UAU\nH1celR3xqcigTsXOR0P24PMupxN8K/vVaECGjonRqNYYRIXrtwbexAL0zD8M\ngUW4AOJnzsBraYXVRH2s9ZVYVgefHjX6rvYfb0tsXyNP1zeCCYa0byujEvJY\neqdL9it+yv0704ddMhGuPZozuXSnD2i2YC1+ZoclGe7hW/dQIb52Pl61GKT4\nIMBON0IuyYocLyKcye8Yw+GNj/sp82LUtKdtdlP99GbK5XmAo4HqVODE+1C2\nFO5xKcXqdsbYV3SmpI0aTlKtGmgIV05pCnjzeQNWO+azhM8BgIpdP6wclwJ5\nD0Waq488pThr9W677Ssc/XyTovQHEdLgnPZzqQeI+tWZKwKMfIh5V6AO51o/\np1obGwZVIFD2Ua4i3uy8I5MQVwVoO4OY436WC3Rf7whtAXXr0x2RdhWXzoMT\nCoKF2ztNuxHAb3XyjRpgcqziv783w1DX+dZ03BjSjHAcU+tSou9aUU138DZT\nQ23XmzYBlRVnVlkWYx4UXoAQYHYbf9VZM9/WBnkpsngu66rudWPmj8t4PFZG\nCVNncl2WEbWx4dYQ28KrWu1FqwpVEoWGifbxtmFqMfDyEXkLP7EZ2YrG3zWN\nMdKd\r\n=C+sG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD6YHTXNLtNiVH2DAlMG22vbiiNVxWd7w3Klg0X9dO0lQIgBW2fCQMJm8XeyyvDRJKxJW0OIUxASQGTjLBCRW8dDMs="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.4_1628191690782_0.6136912587175727"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.5": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.5",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.1-alpha.5+b69ff35e",
        "@opentelemetry/core": "^0.24.1-alpha.5+b69ff35e",
        "@opentelemetry/sdk-trace-base": "^0.24.1-alpha.5+b69ff35e",
        "@opentelemetry/sdk-trace-node": "^0.24.1-alpha.5+b69ff35e",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.1-alpha.5+b69ff35e",
        "@opentelemetry/instrumentation": "^0.24.1-alpha.5+b69ff35e",
        "@opentelemetry/semantic-conventions": "^0.24.1-alpha.5+b69ff35e"
      },
      "gitHead": "b69ff35e90a33d20a0154dcd326f1467dfd39e2a",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.5",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-5l4E/tZ7Gyjry5usOitpz+VVegnEDGbaRZrwNfmGY78Z7O930ozdbHGNaauMAI3kH1XMAUemw85DhdTB1/yQaw==",
        "shasum": "8a8c3ca0faf8b892bc81e4da20fd17f4daab2f2a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.5.tgz",
        "fileCount": 45,
        "unpackedSize": 112939,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDR2LCRA9TVsSAnZWagAAzC8P+wYJbUTXbE9LECKbttK5\nlknmU1gX+LKM6EIHiU0/XBasAf8GGAZV/6b6Rj3yZ5HJo5ZH07OUMWl1ObeW\n9tUm2PqCsmdDaf1/a/Qz+iHzx+kjgdJPoIAtreAeXKbGj0XN75xLVPPWXJQu\nZMbZs9TnjusWe1wL0KQPp5/TvOKz1pdHXrVyUQkJAYnhXWkb45QIBiQCiogw\nuc0UkMUbt+b0bxyLGlAWXCrPeMtiC8lhPPBJd9orpub6U3I4yxyGOB0b/yGr\nGeiaoxMvt40ymHN65VuZW1gwE/Dcc8QE4BJzbSxQ95mOb6yzXgFMVHEfxaWf\nN8W1i2TSax7bnpAKT8nlA2Qcl0+DRWlmLUjpWc1OJ8Kp8zc0A7CGjyL21k4Z\nawHpfAa7Sno+SfNtN2gKNzER2c2JsZt0HaVtd9pBps5FfvZzt98uFVdvL/Ve\nDH0Xwst3ZaSLeVwB1SvHaAbNL5luSu7WBktfm0P5rof3MLI0gS2d0bVM5VP2\nrRRffnr7UW1aeq7MgIuvqdOUFVaK/r9tL7H107AdHhheX/ocXD5+cVOkRTYa\nPDefOv0XG0Y5LiwnGWxf8JRqQlDRWX6u4Z3eVsSt6zE6LJ2IgbPaBTPCNBhU\nhWvboEDjyYeJIsWwKTTyct6lTCQ0p1FXWHH6KqzBVcOgLZhCuIxe/DcCPNhI\nxliL\r\n=0xy5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAIBuzNjwEDRmCg50Cl7Hk17DuKa9LasQ70Hy7AXHoFDAiBva87Sf892l9d06+wJEIASunhTxJK1Hg/Erg3hx8Ev3Q=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.5_1628249483271_0.8143079099307624"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.6": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.6",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.0",
        "@opentelemetry/core": "^0.24.0",
        "@opentelemetry/sdk-trace-base": "^0.24.0",
        "@opentelemetry/sdk-trace-node": "^0.24.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.1-alpha.6+08828b4c",
        "@opentelemetry/instrumentation": "^0.24.1-alpha.6+08828b4c",
        "@opentelemetry/semantic-conventions": "^0.24.0"
      },
      "gitHead": "08828b4c6583a71ed42a341f16a18a41ed1307f5",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.6",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-gyKzy/awXgahOCKMb6spOGGVvr7toMqh8ukUqoCYbNh5t3OocBtwS+xvPb+gnUCeOwHbsCMkxPr/93favEGc5w==",
        "shasum": "4533c1e9253433d4ca97ed9d016407828bbf1ddf",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.6.tgz",
        "fileCount": 45,
        "unpackedSize": 112854,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDTszCRA9TVsSAnZWagAAJjcP/1biWigTqLtSMxqPgtOh\nzn//uJVWkhsmJhlKbMKpJlrQjOeReHnMt6YxMgflY4sO4xLaif97QS4oFJYG\nqbTY3pmjhYPnMkfEXkQHC6+w13HIfRQKLT302GTjtnOeaGu0Hs7rDcK/bYLm\ndM+UA+pGVx2AFoCZa/oET1vjojnjTWNSWbUm6tXdnvUY69zGH6TqylYh2A57\nn881uVMNKl3+Zy3o4FarNnm+EdlF45FehTdLE91i5rhJhLniUfmVg60foWl6\n38g/xx9wCM7XBK+KGOEnkoSmTQuD9psSBB1HHymx+2228GsUhEw+kWzY/U2B\nff4GnelErIX8TNQGMhL1nJcc9OZU8Et9l3ymX/6I7WIx91zkHLxYNEZeol++\nELf7NHiX/JyA5j1vAStGgIDEtoXf4Z54Pqp0+TChFQgt3sZXxCLvmIXc1Fmm\nwVN1Km196viTA+ippM4WXtPkebV3nZ3+2014V4D9SOld/12cAjMaWVAy26W+\nGIgz7+SFyagzb+SJdvc8y3BKf9kdCLGK0fISQvkLfrYS9A8WPl0ipU8xiyoS\n3QjBMfsgAGPa1OF2cW8+FEblXxfnqsr966tuIDNm4s0RikJRc/NikprJ1YYP\nDzSMoOhptpZlY7CGaBbHz1xRy1OISqncucWtD5Zfofodqalv1DdfbwOLL+8P\nsJW1\r\n=IAtf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCaRWBHGXdjNGa0HXtzRfTb6dqhKr83vOhYk19lYgj0MwIgR+iW7CTheyVj1OXs9NdNcPNY0o2efAvDDaAD0KjYQnc="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.6_1628257075809_0.38092033989751495"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.7": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.7",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.0",
        "@opentelemetry/core": "^0.24.1-alpha.7+365d502e",
        "@opentelemetry/sdk-trace-base": "^0.24.1-alpha.7+365d502e",
        "@opentelemetry/sdk-trace-node": "^0.24.1-alpha.7+365d502e",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.0",
        "@opentelemetry/instrumentation": "^0.24.0",
        "@opentelemetry/semantic-conventions": "^0.24.1-alpha.7+365d502e"
      },
      "gitHead": "365d502eaa0ba1f9799998f050d36073e943032e",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.7",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-WJes8IWXkGcP/qZBDW4IncjTdYQdyZncvSciOknphTEOQZpL8YVNJtZVKpKxMIDlK9gXxHnE6VCCdxwff89uSA==",
        "shasum": "70145d5e79e5d44e5a76e07c7d1753804d649bec",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.7.tgz",
        "fileCount": 45,
        "unpackedSize": 112888,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDot/CRA9TVsSAnZWagAAOjkP/jv3X8m21b88KcwzcdJz\nqi52KIqrZe3C1kHxPothvG8Ck3r2ar5baH73elky1F7NwWUokJHXtQhSRYDV\nrYmbie/DlI0hvzILqhXF/QHeAUCVZTBuT4Q4eTAUz1QmBzyaY21MQkxVoBIZ\nwsJXb51ath3nafc4W9xwj+HwFR2c+tDqDum0yIgwf1F69U3d3vLRf7Bi0qwG\nIV1wuxiWZQ6yUWNs8PauGhKDWUxL75UdNrU1vCncQkd6+kj3YRjrHmDrxHC4\n1+ddJ4IPZi13xlSgypaJdaWtjdqM5/Acs2oVEdSM5MAwuUyfiiDGhcjI/UQF\n1f64O7n4Cpo2yzBlH1zmexy5bQPquM6OmLVhMl3PBMeKjv91BxoORC52cw9d\n1iJh2SxlNq/2udkUcj2I7NENwdxo6EIMbkhKUEr4YXhlZVdwJDhJkqTTQkqZ\n/emfgDfH2rYEiYqsel7rF17Fa+DhmjFNayoQucHd298V+iPwqQofEQXzdAfm\nbE/6MgOHD+wlsO1a3Qv4u6Mq2S9+CWH9RVSXDNNvoi7Jdjo7yIce6cDCiJKy\ngG5jOVnjKRKmA5OWUQQcmHgFeNwq4bVzULC0j0GuLY3lAPbQyPSjTNmRowNZ\nq6bGiQk/ruWp+P7csVuULtVLY1lw/D1pszNAw2KejUUD98YH4y6NWBPOtyiE\nBqOj\r\n=WHNZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD6Y9/dA2jlTQPuRFk1JScbgABaN/Sv7FEr4bzKTf7s9AIgQhqMXRO9hSJccblVLLtCEJP7gvG3lQWPRy017mI75JU="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.7_1628343166582_0.20859486351096157"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.8": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.8",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.0",
        "@opentelemetry/core": "^0.24.0",
        "@opentelemetry/sdk-trace-base": "^0.24.0",
        "@opentelemetry/sdk-trace-node": "^0.24.1-alpha.8+f1808703",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.0",
        "@opentelemetry/instrumentation": "^0.24.0",
        "@opentelemetry/semantic-conventions": "^0.24.0"
      },
      "gitHead": "f18087030b3efe31fbc207c74af46e29264878e5",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.8",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-Pz94CaaI8zRNeRoOZ4/wB1QZM+nn0XP/hTeMlZ0xgsZUCGr3AsChSOxmq6NQGyWqDpXCQAcbDl6WopNQBC2inQ==",
        "shasum": "fd4eea282a2f6908ea1270bb7af8dbb9489fbc4d",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.8.tgz",
        "fileCount": 45,
        "unpackedSize": 112837,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDo2JCRA9TVsSAnZWagAARVQP/R7FMJVDTPVqq4FacKYw\nrjipVAlH5K9g7uPfoBTRBQNHiy7rbYy0vh0KtwH4Ubi/c6wnjHEt10stOiN8\n5gs6+OBPIMF5PS3Vi7ucqeHiuAhuTSVR5bamD5nhRSEq71od3bQF7Rslm6kF\nFk9BzmWkYhagApaPaYUaNo1kCHek3wZWw6UilmzHIXshbYl2T4TaOb0AMe0R\nfsWZ4WofiaWMfi+UzDyksIWbb17uBKagm0fVsJ5lF2tkXT3E5dNAyDkDK+YO\nfkrOCwRccXgWS5TeBfQtZT+Af+tLM7fCDieEqDcRDxV6f1vKRarbif7Hh4IL\nMNN+wxVIt8ah7tJDAby5QD/tJteu050fjcPTSqHDdbMyGSeoCWeLEXLVANb3\njt55QSyzsN6MimR8KXJDDmU+LUvvfoRxugzq0tbGZrQj9rAdP2fhdpwIGu6V\nZQH4kGo5blwatrAoL39Tapdot8y9ZMdB7s2vuTMpTh3mw8cwrGbJ0zVTbcpR\n0pwILztIgeISuvz3rFqNfBJ5zNjjThNtmYWJ9c60l29ODK2OwTBqcLjfNr4H\nAyJ6/sLEaaPs1OTHNkILQmRZDVBQ9bn+slOC5cqMAJvoA7rVCxmjfk6f6SUC\nLR4WV9RpXryiDlmpOn9nEevPoBhF4zbN/bou1gDIP3HlC7F/di9zykiSHWsN\nrxxb\r\n=3p8c\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCm08w47cLua088I2TkjKMVi7U/lW3Ldocalp9vXcHziQIhAIO741xyy7me+u0vSfONxcnvwBK4U8S2a8d9SFcC6Xb+"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.8_1628343688714_0.020655896211031477"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.9": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.9",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.0",
        "@opentelemetry/core": "^0.24.0",
        "@opentelemetry/sdk-trace-base": "^0.24.1-alpha.9+46a42a18",
        "@opentelemetry/sdk-trace-node": "^0.24.1-alpha.9+46a42a18",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.0",
        "@opentelemetry/instrumentation": "^0.24.0",
        "@opentelemetry/semantic-conventions": "^0.24.0"
      },
      "gitHead": "46a42a18570da8a0b2ae027c80018ebfb6c8096f",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.9",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-45nVrLAvFviFDecUFHfK6KSU1+gPIyiaErSNYuCpCaYwxYR3Kp2jdEsBblBpgDSLEHF92fJZ1AVvLbO3R7xLSg==",
        "shasum": "a5f2f8f9ba1781bc704cca710e53c87d0f69d2f2",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.9.tgz",
        "fileCount": 45,
        "unpackedSize": 112854,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDpQ6CRA9TVsSAnZWagAAejMP/0OgEK3oorEsJT+TZ8Wy\nMC9K5gIF9GK2PIFnggnt5/ZhWA+xjgj5rVBn/zYWl6ExNCH4TyRxamMcHLYU\nmbBdi+7YACZ7TYKEs7ZN8JpUF00GQdOvpFYoO9Y1IKNNJEeH/itMt7h3Gtjz\nvOMZydQ0Km8iKgV/7hy+qEU6kqvbF2ZOvfpH0bA/iCaJZlvStuO6lwnXO7cs\n8vIuxsJXmKIvAF4uXtYL4nHnSPd9j2GIwyxCiqjVtsUDKoTI13OCeJsIZWQq\ndHsk8kGFRqtKvcB9WtjG21UCayQzgjxA9PAtB3g6gPEpC66fvkHbrrRIaQRd\nV7IoxypgmdmgpouAOvFtL5Aml2kygGrdlgW8FMf3r6bhmz9VisNfREzuqlpG\nOivABbWFgvzQGNa858tFSKmsyemAAdmT635vTb4H3i+r4fuxqX3oeVy3PnPs\nFjf1+v9nV1ieOzZ9iSG88yVsB6GSbN4RpVJzrn2TqAqalo7C8K4wX00vooHZ\nyuXFk0ReQXLFL0qY9jasyizWFMiBwsYw5JZ/x/QXBEUuA+QWQi1pLGJ9b8Br\nT5BxDPIPl8NHR/uQ4fYGxek1zvxYpzJjyy/lRNymegeXrCG1hc6O3cktp4nq\nJIXZ4xBBxFUP6yxhMDjDRbb5twtZQbSmJYI/q1+d6b1KIc6kIqBJvTBV1iAs\nXkhd\r\n=y1iP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAiuRcO05MymvQkbShjr+YdVfFKmNPfAOqSB0NVc1cxpAiAgNrT9XTA9er+ROdrhg/6tQDxF3cm+Z7Ad9q3xuYhKhQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.9_1628345401989_0.23850292304013498"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.14": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.14",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.0",
        "@opentelemetry/core": "^0.24.1-alpha.14+4553b29d",
        "@opentelemetry/sdk-trace-base": "^0.24.1-alpha.14+4553b29d",
        "@opentelemetry/sdk-trace-node": "^0.24.1-alpha.14+4553b29d",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.0",
        "@opentelemetry/instrumentation": "^0.24.0",
        "@opentelemetry/semantic-conventions": "^0.24.0"
      },
      "gitHead": "4553b29d4a04b5b7e4bf87cad64dc2fc8c740d8e",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.14",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-Mz8BT/2ncJ/Ab4Hnr3TIN2WiteEi9/gkK7xMZC24buhJ9pdyNglhW6gxg2/smELkxERLruH1xiZLIU0WaXVxSQ==",
        "shasum": "155015246a3c493907950eee8cfdcebb1a1ec3b4",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.14.tgz",
        "fileCount": 45,
        "unpackedSize": 112875,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhE+PBCRA9TVsSAnZWagAAlLgP/imBBFSiAmBlP30PnesQ\nKr7QxpUkpx/9ObA6jO3E85F1pS5o1Go56hyaX6mxsakmJXez6soJwI0SZBz/\nS7vYfFDZYn4gxCB+B62tShksacVb7xjpZ+I92wSH8dJR8iZgpzkacHTqLL7y\nkjzhQeRYab7La0VaIITuF2pZ9TidazX5qEACV+bBahE0igPuApIS0Lz/27LA\nTCtqzLzBK5EQUXoRIN7OCukxI8p+B5FrYz7bMkN6GZ+v9joZYnMyPw2ECOZZ\nDcQA7rkXcULxIn/+uITmQcHHTnrOSLA3TPEpKPFIPGUl/wueMQ3e1jzZ+rdm\n7NYgRv1PMHzInzYoKQov2W1kkIRAyh/lY4SuU0bDUOOqjy8dk3bs/jdlbWTv\nJCswC6IXX0VwCWo+TIPzvZx6Rvif+DCgEXH84GbyOfweuWQDjUhs5bKfWI2w\nZsKb4QDoSV+gTWfCIgJzKcNU/H4VbOglWOLOPe/k4rI3G6mFsT/osBZJ5swe\n/+hHZIo+o98VV6RXnUNlXlH5Tivoc1GBPa1+FUfOisg6QKffsMN0M1Y9kwhM\n2D9CdBKcJL4JsScmNENT3V337Ta3QCGmLtz0MjxdPWKkudUOW6i50YoB/MMi\nMLbvRKnET1k7SV4IXzZT1yEC6cf+ChqtDVY6EWRoqZs/BcPosjmd8s758C+L\nbYfw\r\n=FOD5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEJvW+La4C7HEQt9txRRf5So9FAGgi+r9kYawoENExfPAiEAkZ9yma1DsA00cBilG14F1+NCJBJAbca4ylhSqoWs6A4="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.14_1628693440996_0.5774894801963057"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.18": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.18",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.6",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.0",
        "@opentelemetry/core": "^0.24.0",
        "@opentelemetry/sdk-trace-base": "^0.24.1-alpha.18+bdb12dae",
        "@opentelemetry/sdk-trace-node": "^0.24.1-alpha.18+bdb12dae",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.0",
        "@opentelemetry/instrumentation": "^0.24.0",
        "@opentelemetry/semantic-conventions": "^0.24.0"
      },
      "gitHead": "bdb12daeb2e4ca3761d1411125f5d883471709ce",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.18",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-e9INh9oSokD2wd70x0caHU5QuNlr7RQFLRjuipxDsytBSxktTNlQu06QYya3/AxJZsAJeEO0qBwpTmXv1b3aDA==",
        "shasum": "b3f18d6e1ad9b7ee587cfba6bb2b0abb07928010",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.18.tgz",
        "fileCount": 45,
        "unpackedSize": 112857,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhF3vBCRA9TVsSAnZWagAASakP/jhNF6pE72Kwh8Qq198v\nrlxFGmd9ioJYNuHYjzbqSJx/HwQlVh71mCoUegQ6yqEHBSZqBmUE7XQZD781\nfDlejSgH7XPG6KRryVNtzn228wyq+yLLw0yTE1nKSo3HPnC4lKCpA6dD4cLn\nb7YHl1PHUuWQbC2nOhg/Cc+KRr3+ltl9iZfIH51B0fUK7XzFRayxVxeBR4Ji\nmuCNPkCmmNVon+RsZUffB9es9P8al+nlZpgvTzSSCZEmqexbgyMZgxYEMwRC\nQdaPh0clu3rTCSuRfpg6XgO6W1HmSI5KZ977tldAVGcqd+9EwEd7Hm7q6mBq\nAG4E4TLUNsXRKrjVXI4kmD7V0GtwnzHb6fVKb1bqgEXqdxnfSx0DXYE+zc4c\nRmZAP3FC+v0fhHuahC04MrmZNR981wuO0qV3x0GbeqHLpujLPWCEItgZNz0x\nEoLul5YJM39uz9sHP7jY8TEgm0PVxXgtsl2cRO8AuH/UQ845WqqOFFppVIXm\nTCvU5Fe7f0S32mH9IYMb4MUgu5D0+4RHXiRy7LJ4C4JUoFHmyIK9hddLhYlc\ne+dMKJqKJ9fRExZoKu4xZAh4aLhilA1eU7Btvq4Wmw6+xjIWAhvMgLlNeSE4\nxpZeU77RcEfinTSlJtTIQsZuCGcL7yGf6MvyRUxe/kJ1yRFkNsx5K8YwlOaC\nSpke\r\n=Vn5n\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICkE5tIQtH8DgKJ9MFZDL8Rt7EqNvGVI/hIWFvrWpmKiAiEA/NwYfZ/wIhYoXI8DQbAHAldKjAk2WCO+YKyyc/skq+Q="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.18_1628928960927_0.957888440473859"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.19": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.19",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.0",
        "@opentelemetry/core": "^0.24.0",
        "@opentelemetry/sdk-trace-base": "^0.24.0",
        "@opentelemetry/sdk-trace-node": "^0.24.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.0",
        "@opentelemetry/instrumentation": "^0.24.1-alpha.19+40d0423b",
        "@opentelemetry/semantic-conventions": "^0.24.0"
      },
      "gitHead": "40d0423b4be19969085b583b6a08f3e82552c362",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.19",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-Y01fkuOrU2i9Jg4OPL2PL7nuFzNAQbXOOlQT3vhzbdfz1MFTuFpmZA4n5SXuvwndXQrWTB6w9zZwenXYyu9a5g==",
        "shasum": "2e98775c41ec6aa96aa966282bcd49e41aae14d6",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.19.tgz",
        "fileCount": 45,
        "unpackedSize": 112839,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhGqdeCRA9TVsSAnZWagAA0SsP/1NgGqJYn3HE7lnhdUn0\nCVpCj260qPLev1nfNHIiuNJS9zZ0wXJNBx+Q76aHvloYH6+3zJ6M5v5t15vB\nRvIwXS0PP9Jniv4eA60kUXHyy41u2IeEeZdumaGkKE+/y5g5efD+M4ysl34E\nH8cA1WVjWTjxhfCiqZbtSvSLbsqyAlzhTXFkuAhi50jT57liIoxFaIVpNrrz\nRxaOaQbo3+hH9qrYvyc3cijC0x0aOzevCm4oEBZlYIhuiraw70oa6yxshbHm\n8x516Jegu0A394sU8wm1ymQMmxU7+j3ClTZxm4e8y4mSav6jbFvZn220iOTd\nXiFIgMGZQHbnimGRPKJ18ihLikSHO+vQ3NeWAdkBmnzdFkqpJoyUUBZuwSlk\nj7VL3HZNDkD84T4DYG7uGtU34JilYUtwOnHRi4oTpkZrdByay6M9J/4ZRuEr\nd1ZQyJBT7zi/INBKq6cnVx7WFifz5iXsNKGWtc8/Nno8hxZODbuLhECOZsUq\nKwwX3JoJY+OlsWsP0S+rcwQED4uXouchwwalhtQbTEHljoOkhTU4ASUPp11C\neYj15xC0VnZ3Uz9FfootFc1weS3IwPjT2W2Q5uCb027J9DJf1YbTTFCLVTUO\nuQPa+W5ua1boQCW3awMPXTsxb1vr6ADA4QuD/V6LPSgLboJgNitHVZWaQiJA\n5A6S\r\n=515E\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH8sMcJ6akzsn3/LKia+qRjPbxPZ4Tj5g/fFP9apcS06AiAoXabzVFEJL/UioscTvvzqZWUniLfeOWrD8wuNcNDfmg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.19_1629136734513_0.38049275166300944"
      },
      "_hasShrinkwrap": false
    },
    "0.24.1-alpha.20": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.24.1-alpha.20",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.24.0",
        "@opentelemetry/core": "^0.24.1-alpha.20+f1291389",
        "@opentelemetry/sdk-trace-base": "^0.24.1-alpha.20+f1291389",
        "@opentelemetry/sdk-trace-node": "^0.24.1-alpha.20+f1291389",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.24.0",
        "@opentelemetry/instrumentation": "^0.24.0",
        "@opentelemetry/semantic-conventions": "^0.24.0"
      },
      "gitHead": "f12913899ff5c588e10830e5ba7183d9115c3442",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.24.1-alpha.20",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-NSvvMIMN5nLWYusALoMuvawLYL/YzgLOtCelrv+d6fgw/ui9x50yd8DyPgLXZTW/r5vA3vRlWTmn9QBE1ndQdQ==",
        "shasum": "8fa7a76ec6b420815eb787fa652fe8f67d25c4b5",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.24.1-alpha.20.tgz",
        "fileCount": 45,
        "unpackedSize": 112875,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhHCTuCRA9TVsSAnZWagAA9R8QAKC2KtONPmsm8F44te1B\nGuE52PCTKV3nhopuMeZAilqnZkVKmZ3eDTw2aRCgjW+GejidJkN/lQV130J2\nQuPrxI6ob/VUiTQtMIDOCgETOjrPE8fg1ka29wV7WA16SrFBU6y6oLHuKArZ\nA9MhGhI06080l7y9+tWIxE/L0nerTDSpSwS8DW4ZI34ABTRX4YleU40u+HbP\n5lapEXWesvcGZn5unQSCZAdWVAsrpVfb8W/cY0Uz+2Qops4McmVfrXgn1eJ1\nREFKhkwqNbP6OSjEZQZG9et2piZseQJmtCP8W/1tykBRpBKuNKOw59Xbxh4+\nV4fGc4blfDoiMEmYEldHsLlaYgpsocOQWHamq0KnJZ0o88LzJ68CXvLCKhES\nZ8n6MIIfarYfrfc5X032dRcUXvsXOQtdzRzaD4RgSFX/KnIpOxYlFX2S/Vh0\na3tEQxZoSTDXZ4FVRD7H5p23I0PWrBrDvi2rKfvzyq6QebGDmYgL8nAIhnuY\nxp29XByRe1oBTIWgC1+8t4/gGNUV99/5cy1ZK3d/zCNFETUA3hvjMVf54FWW\nQK0lzhHYX+jpYUJ7krEnZCWENbi1A/PZ1nSPuQXp3gS25HcsMtiVgBCDJiWS\nLpYik97ulco7xX7EvkKAwi4hlUh9sTGDYemUaVTc9cBOTPiA23aYMVJ+uzRV\nAkwX\r\n=7LKo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEjxQzx7eUrv1NKkytieRwqDScw+tgBK6QkVQEpKQTQeAiEAtjMyBp9wEpkAttzZtPTdAq0NfdZJEW8oa2TzDshqF80="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.24.1-alpha.20_1629234413879_0.2776928385115356"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.21": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.21",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.1-alpha.21+0ef1fc28",
        "@opentelemetry/core": "^0.25.1-alpha.21+0ef1fc28",
        "@opentelemetry/sdk-trace-base": "^0.25.1-alpha.21+0ef1fc28",
        "@opentelemetry/sdk-trace-node": "^0.25.1-alpha.21+0ef1fc28",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.1-alpha.21+0ef1fc28",
        "@opentelemetry/instrumentation": "^0.25.1-alpha.21+0ef1fc28",
        "@opentelemetry/semantic-conventions": "^0.25.1-alpha.21+0ef1fc28"
      },
      "gitHead": "0ef1fc28d366b74d98b73b5d6334ffdc75342fe2",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.21",
      "_nodeVersion": "14.17.4",
      "_npmVersion": "lerna/3.22.1/node@v14.17.4+x64 (linux)",
      "dist": {
        "integrity": "sha512-wEScReC6iPrnDItHQ4l65hkPjfIQu530nNoFQREJiTctTSFz92HHT1hcAxvGIKTPvfxRzReZH8SigKY10pI8ng==",
        "shasum": "49ed3f1a39185c591b434b83bc9e87317f4d82b4",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.21.tgz",
        "fileCount": 45,
        "unpackedSize": 112947,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhHWqdCRA9TVsSAnZWagAA+SUQAJJJMJeWXEN2UfxACUvH\nOP4wCDcl3CpeeV300nVa1xnfnAvgOfUy+/VhVfffNC2yuVTJCgOdsiJEvccJ\nh/+ID7dqwQSKV55fIjQh5ASyzORlghyaeTy2u02kyC0Bd5PnjgxsGooe+bsj\n+o+1Vp+G57KOVSA2GK4bV0D5oN3fyXVMZPMipI5CjMQxEYtnUCv+ti6Qx8PK\nvovaEFmSUA+9ko1c0EYU0/Dw7GcXaxWM/KduVZQxMdYMRa0C30z/CCTV3XT3\ne8IZqJ/5A1mybiScNAAeqoKUbpswOHhhJRXPnjYTx++cdt5vL7LHfxZ4nG5X\n4SZa3a+ZL0dV/IWIFf5MmMhXl5bJS6HF6B4WdfOPmR7iaF0McX96i0EG9lDV\nMBRmH50lUDm4GKBG7wTS93U5Fa38dbUw1pokxM1DNs9I39/ZYSDyEenCuPWu\nfvvfC09caRmBPCK4D+NDb3dh4ORQu9nIX7Gk8JpoB3wp8lT3p4x9w/am6P50\nUB+7eMZHF1PFpBTVLCYJe4uE1C+/HPlRg10THdE765zHmjolC16NJZjPbcIO\nPsVwztkckzDtbOv1LoFUeYIAtgFVhV1bY6f4oxNEDW7Gz3uKA3S5WOSJlCNb\nP6jIolfALfe10ngNvCafoDl60bTQ7SU3fUovIwDyQMd5AzK2yG8I2Ph6pvJw\nP9yo\r\n=qfM4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGUVjQDqbL88wfDvYdYB0ozDpCPK5XKJUgMFHuAHGP58AiAMi6HFJiLNXi1mXLGuekxI1FRr+k5vx7uILPDLK9TPzg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.21_1629317789756_0.5225147990306351"
      },
      "_hasShrinkwrap": false
    },
    "0.25.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "0.25.0",
        "@opentelemetry/core": "0.25.0",
        "@opentelemetry/sdk-trace-base": "0.25.0",
        "@opentelemetry/sdk-trace-node": "0.25.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/shimmer": "1.0.2",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.25.0",
        "@opentelemetry/instrumentation": "0.25.0",
        "@opentelemetry/semantic-conventions": "0.25.0"
      },
      "gitHead": "0ef1fc28d366b74d98b73b5d6334ffdc75342fe2",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-A2zLKxHkFCQJmhRRe3xKtdO1tCDJEQSgG1+yoH5/uN7qH3l0m7WGGhy2Gc+E/A9AKvWN8RNtexkDAsGSS1cYFQ==",
        "shasum": "3775bdd5f27ff96a6fa4e6d5b87dd594bc6cda6a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.0.tgz",
        "fileCount": 45,
        "unpackedSize": 112796,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhHXi8CRA9TVsSAnZWagAAMXwP/AnI3DY7VhcNyA3sDqY3\nvkvnj/SlZWMe+joyulK+7Bh645XlwuTna+0zJhob5/X0ADuKsPw3MFDLFGeV\nYeQ0py1RbV8/yvYQqt8lb3hDNCxmIUJgywWvzwyV0NdQigo/3g9JO3f5UQZp\n1+w0pS/+NmwyeOXgygRg97UjDI13o7QH4uKUuAVxREj19Is8zHU2sEpu1EX8\nrwrzog47byWhQmqOdehOyfg4TxlB1gfUxmAvKFmlVf04ijLTYMUdQwn/XvkX\n3M+6BtnatOxy27zdIYZHZ0pLMUeJ3kfP89otyM5BnkYstu3Z7ga7qurrEPyd\n2lhAwBJZyQyziHKN8b152vOK5CT99vTx432U5QVX1+pkl8I54UoDNV2XJHQw\neWXmERqFZ8YqM4U/0uoYBpcnj05g4wlw0d1IQ6hhffayqqzFuzbMJErqZRqX\nSX5+xVv+rEqG93WOBgKbLCS5sAQzPfRyV+TvC9HRDuFLt2nB9fctXyFnMtNQ\nTqH/f9pMU1xoK4Jz5FxlePRgwLmuoPqA+OWKWQtdq7UHfwQ1QAPPM4CclFNC\n1Y7Jiak5LcPH2vBrEcqbbL5eDQXj19tQG5Uzb9tMoEYAiuJHp8wghN40UpHF\nhuekz/kuvaSklGa104NBBtE4TkXwqNmLPBzTk9vS5N3M8frRTo6xHS7H3B98\nlE44\r\n=zCAT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCHdx7LClT0Au/4pR6wuOuPwWM6qcHtr8/fjyp0xnfAaQIhAP1o7xrnHtf4i+AabewjNUh1LMcJ0NvSJSxaKvrwAME3"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.0_1629321404113_0.8582254354892125"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.1-alpha.1+5bb9fcc4",
        "@opentelemetry/core": "^0.25.0",
        "@opentelemetry/sdk-trace-base": "^0.25.0",
        "@opentelemetry/sdk-trace-node": "^0.25.1-alpha.1+5bb9fcc4",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.0",
        "@opentelemetry/instrumentation": "^0.25.0",
        "@opentelemetry/semantic-conventions": "^0.25.0"
      },
      "gitHead": "5bb9fcc4db7e12741a46f140fa3804c4dfdd0e81",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.1",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "lerna/3.22.1/node@v14.17.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-QG5MAOxcX89JlhWnXCRZof5WTVmkTVv3nO96oa3eBTuMvM6KLJbCHk0H89/j12QhIKejOY3JbjH6eT7CF59APw==",
        "shasum": "2dfbe5c9d0cd9d6adc326d5ae07d64a392935a47",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.1.tgz",
        "fileCount": 45,
        "unpackedSize": 112823,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJBDfCRA9TVsSAnZWagAAungP/0ExX5GW40OrOla1riV9\nwJYEvNze6VU2LPhOVJM3TGvV9/rV/B/Xz4aCQ73yh94uuv9cmnTJE05Qwpru\nt+/goxXrU41Iuw1/BEBBkyxPogb76r7NN7H30UXMKWGPgba9D+jikbTIaUXU\nIMDgse3osvoUNIZRn5RM3Z9CSkqE6vncHVxTkJCGTNHqHvIEb1r3PIv1J6H4\nMrfo0mIwtQ28i7YzTQYmSg4+LJYAsGwbbQGyaDsJp0YaK377/zI9kl+pwp6j\nKUUkS4rt2Qgp+rDogEAXH4rZC9lc4DUWnPWo7j07/kLdFmIPsp9NdSA5g7P0\n0cwpdUd9E2j4P8PL3yvq42IOB2l+cFvjgYpo6Gi1CdndhS2acpnEVQ6rDwB4\no210gqKPQI5nnV8iPhyUJQINEkdjiUoAkLB+m+qNyRzTErskb6KFZK5UbkGC\n8hHh5hrmXqv8ITes+4wtVnqcZqPq6HeGPDtLH/EaX9KGlk+7qOJD4ra3U/25\nCzYg/SyRjbPMfGwx+4mGbuimIBN2sMtwtrhpUFR2FsZq7/N4lfoxmU859biR\nWx5+v5H8U2dVz4e504vK18fCRjJs5Zkm2CbysuuGxsaaYn8EUGTO75Q/QH0B\nBp6+lTYIe3XsRvf/FOQQq660LIor1qOTYCi4lIbLS+D3PmYX7P6B+0bliES6\nj68c\r\n=WeEZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD2ajUtxZAvUpOkNuvfyyVSJsdjy2RAxPhZTKdAJPBazAIhAPVsZrOobVsumZdVoD9amvkwHEw8CKMMjbw2McP5z3d1"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.1_1629753567722_0.06500092726186635"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.2": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.2",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.0",
        "@opentelemetry/core": "^0.25.1-alpha.2+78a78c09",
        "@opentelemetry/sdk-trace-base": "^0.25.1-alpha.2+78a78c09",
        "@opentelemetry/sdk-trace-node": "^0.25.1-alpha.2+78a78c09",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.9",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.0",
        "@opentelemetry/instrumentation": "^0.25.0",
        "@opentelemetry/semantic-conventions": "^0.25.0"
      },
      "gitHead": "78a78c093c2df24b66c47af4e037da9a6098fedb",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.2",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "lerna/3.22.1/node@v14.17.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-Dyn7acz34CgW0uzdNOfUW1rqB5GQ1vI+dpSsfO/2DolYSqpZGfFf0d9NfsHVFklYrnnHD1k7dWYzRTjrhIWFfQ==",
        "shasum": "86fa105adf3de278681d0753a4c0d9c851cb1792",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.2.tgz",
        "fileCount": 45,
        "unpackedSize": 112840,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJBXpCRA9TVsSAnZWagAAo+4P/RznzzxmsDcfFcKw0V4e\n0/I/V9eYsMfAUkGrB7yY9fx7hTokRtb3Ui4GWGsfM0VH8LENnpsVGMonjYoh\n5YeapWxJ1PEa+LYcFabcqlhLJVu7ehxr22gKmfTsEb2DoH+R/NX2m2OqD/U2\nVe+U4XL0F7HzfVSGGU+UX04CRx44dE8r2W4qLkzQYm/1zdujYO5v4ijVMybi\nNUFxYXuNLlxGt7Kujbwg4U7mz9nbr4cVys0PRIU0HqDZ6Y/DC+l6CI2De/4Y\nxG3FHGednwu3oTH7VJ2ySAXC0KlTor0zr1WXIsvtFq+ee1Wz0gbKXYKNHy1S\nz7yO+n4KhPbKy9PEgG/caoGC1Na1dR77u/GzqwWGV7+vxiX4noQEdro8kpJm\na7yHG8N+L6MkuLkHjF1tr9ql362zj+ImoiavwHR1Ef9uHGl5zMQ0EeaAAxJz\nFnfQybXFTBryj0uZp/hx9tA6kaL8T9ssqu6iqLmLoA4S15O/O1so6cZuZ9k8\njh9VMR2lJjGZtgBI+2B+8AaEBrmtk1rLGl19l8TUi0w2iiY3fQlcHE4fRoFF\nr5x2mBh2dVz8Xcr8Wdlvdts+Mzu89fYN/ME89NGUnl3hLZURqUn8QyB3UCIr\n62VOQyvRIdJwYQcQlXBvkHOLeBBS3J1HThVVLwUBDihnHAIM5iuFsp7DIvHI\nUeH6\r\n=1T7C\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDRfsSjm0I6CuZXzWBiZ8S3OxEAC+FMN31Jb2oAaFAfuwIgRBcsKja81Qjd9k7bqK45CtIfGLaskjvrkUsw5psRY0Y="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.2_1629754857771_0.30332510528105683"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.4": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.4",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.1-alpha.4+3cbd530f",
        "@opentelemetry/core": "^0.25.1-alpha.4+3cbd530f",
        "@opentelemetry/sdk-trace-base": "^0.25.1-alpha.4+3cbd530f",
        "@opentelemetry/sdk-trace-node": "^0.25.1-alpha.4+3cbd530f",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.11",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.1-alpha.4+3cbd530f",
        "@opentelemetry/instrumentation": "^0.25.1-alpha.4+3cbd530f",
        "@opentelemetry/semantic-conventions": "^0.25.1-alpha.4+3cbd530f"
      },
      "gitHead": "3cbd530f2ee5c06376210402eb87ec9e362853c5",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.4",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "lerna/3.22.1/node@v14.17.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-dTW2QfoIx6UQmLk3iO7m0zH1nNHwJZAVn69tTVkeZVbE+DXp+j1YWsjc8O0PSlZ7jakEwHDw5z3Avii95cgHZQ==",
        "shasum": "3c1736b88bc5e09f51f37a7da23757c0a1c4812e",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.4.tgz",
        "fileCount": 45,
        "unpackedSize": 112909,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJUlwCRA9TVsSAnZWagAAOagP/3h8/YhEZmHADDUznAnw\nAjHoo47wR9h2sV0XTjjCPhGMOFsruJxi5mdVX4gwNaQv7QBBl5iURpSOsuGd\n/q2YamSg9yCqNyIGJwoUchhhn+i3G3YVAzAp5Li39UCwbqQu4lmf4pnOu9Rg\n7kEyk4s15qhA5zSjiwcp1En7ha5OmtZ4bNiASMvjJ5JpAeJq31jKhoRJ9LnD\nPYXHyqOjKhs3pkyAFa6rs24UNBPUfiy3Oh4o7p/bhO926sps/HaHFUdNZsot\nlUE+f8NfNZ2l5ZN69bObncbeB2Euett3C7pQCiEWcp0diLR2JAQhieJFcDFx\nxSbN3jxghkDSXTQ71QX082x3u/RIDiyAfJ5j2FuB4v09nUIOeaH4eBwqVVT3\nac8AQFetIcvvt2SjZimG8Ek1u+86f2uIw+X2P/qMG4SThkNfqMwQ5Wr6UJoO\nFWmMKMl9ONV70xJFEuIu5IjCXuXRJsAnN60+Ozj/816lQGiaTC/OMnHk0t9r\njdiK2H93DfYO3mY69IAN4jXMmQId7eFXHovPesKkWsJSa/fZbCULqos1tXi7\n4irvTgVu378xB7uTsMn9nj8HW+KDDyUHHiSOymVaEu/lg7FAAw50Xxd01Jx9\nlcQNdCnvhVyKyOAkFRsubZAybmlfrKAUYlncqWfnhK5yyikOa9lA2WPqjLJ7\nrcGm\r\n=MeHP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDK5NxelTNGL1L4BxIHHIZfny1KH+MJnP+pETijLUpuDAIhAO+tViEmMkd3zhlk0H/aZnH3RcVP+eDj/hSFFcXQs/VU"
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.4_1629833584189_0.3734199767419959"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.7": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.7",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.0",
        "@opentelemetry/core": "^0.25.0",
        "@opentelemetry/sdk-trace-base": "^0.25.1-alpha.7+dfb597de",
        "@opentelemetry/sdk-trace-node": "^0.25.1-alpha.7+dfb597de",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.11",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.0",
        "@opentelemetry/instrumentation": "^0.25.0",
        "@opentelemetry/semantic-conventions": "^0.25.0"
      },
      "gitHead": "dfb597def863b15b37b24d965018e8c92d2ee70c",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.7",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "lerna/3.22.1/node@v14.17.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-6wmzW1hQOS3g2y4YhdjdRaEV1vVTdyk+r7SI1gklcJISF7YSq9V887oQsac8BKL5CHZN/LaDlyaOJz/PrllZqw==",
        "shasum": "f678349356a51ddba39ec449dde7e589f71dc280",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.7.tgz",
        "fileCount": 45,
        "unpackedSize": 112824,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKSzMCRA9TVsSAnZWagAAHQYP/0kRIUB5kGZdnMWRyCWc\nFtH+c/AdMxUlW/ud/Ypq0x5wKjT92aotCi2PVHmnqpIDtJPAs4zVIl2tp79c\nFvLnZ0N0VHvzrQx5GRajh/gmbwNTBJMNkkjzU01BtjEgGZ00qy15lDVGOKMX\nTw4Wk1JCUfiUOn4OD8/O/NzaPdgOUfiqD+ufPgoq4NCLNaNqX69rRjdpEu1R\njXGTOACsSXHTzo5zxotDzt44BjknG4U9xpptZxTPHrZX1qPh+iouXxLdIpbw\nbiokiKrIRCV13Z0RWjC+mjHtx3huFkP++ofpRyNqfvIC4qp0yRVW5GKMDscf\nFEQBaX8SqIwz7xo1OQ5KG3JxrwVr9zPYutcpm7TJ8h2soRYonUEV0zGrEBr8\nWNLL1YYFtz4KhaitCQSlXHST8T48Nuf8BbLMH4gRcvRcw/vr7rTAJxkdNeEC\noj+DgOMkt+SnSaHfjQQPTezhrGh+ysXW3IHDegWc1JrETofJDDDMhQke0OWl\nJ6FRghbTSFcqKCHO1//I9bSrFYjvlAIWow3G/n8rXndopHZCnC6k/o1ZfROI\nrXwBF3ptaEeIKSBGm1CQ9m6tw13aLqWmGKcH+lTF4zRrgPpJdj4GsYGRFHjc\nFkqgvxby0h2b6BoRa/jOmVByqNqDXvC2o8ki3N2rGH93fsMQ5uW/Lk4Xa0q8\n04Ml\r\n=kMhh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIA5MgNoXOlDcTOrOfetoBi27ugvqSFuruiKgm9+O35WNAiEAjOhYXurfZHLNJ4TkDZLJlhI0X95jQjxsXu6J6xRsAh8="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.7_1630088396005_0.8643593583690554"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.12": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.12",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.0",
        "@opentelemetry/core": "^0.25.1-alpha.12+7d2c4aae",
        "@opentelemetry/sdk-trace-base": "^0.25.1-alpha.12+7d2c4aae",
        "@opentelemetry/sdk-trace-node": "^0.25.1-alpha.12+7d2c4aae",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.11",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.0",
        "@opentelemetry/instrumentation": "^0.25.0",
        "@opentelemetry/semantic-conventions": "^0.25.0"
      },
      "gitHead": "7d2c4aaeb08e6c680f8b46cefcdfe955d7abe4b2",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.12",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "lerna/3.22.1/node@v14.17.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-AOisYMdou6xQm4Tyg85y2Tfcj0rQnGKv8qnS+1Qd7L6f0m0lXs7cClayYAVzJoVZr0z8lRafcPtxpqoYNvelSg==",
        "shasum": "9051b1012d6c9650934152313552ff36fab09687",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.12.tgz",
        "fileCount": 45,
        "unpackedSize": 112845,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhLT3kCRA9TVsSAnZWagAAKq8QAIuphvcyZk3jFodvk8XO\n4dSP5mKlqOffPrKpDjvRXPl09UcMDEhTqFJ6Y1OB8mSuAw+5cbXrP6TsQoJZ\nhIvfZXV7YUfKD/ocBacihIjZtttZspQkl/U+v+gOuHphglNtfaYzwwJ533Lc\npjAnBN2iznRrfHpujVcS7uVu2MP0zZDKQs7O02S5wpj0Q10GyDiTLAUQQnS1\n8a2+lDZCjANjUa3l3SpBhH6sPL6B0j7orAuZqUWIkXqtbrPjUz4XH7la4vfm\nxlWkK+++6TX8D0T5F14abpSenk/UHoKk/EE7xg3WnKWk7X9a0VOlqGIYjE0d\nGoGd1+drqu09hKX4H2RmqJBp4aFTCohYlZJTbLChSIBphzDhp3yuUDifzRP7\nPETl0Mmmcr8IklUkx+iLElmV/Zb6zJnkQx+mZy2CQRNyWJInSoZdjyJUA2V9\ny71GK522DqVRDXHQ9jMfrj6iT+M4EOLiAHAI+OEye+VQc/VMMuSshh1MKA0p\nHk0zb6EtACoF8R31K5m2CtWEdpDqTo/KLIAznt/tuqH/rU5bLDY7S9dNiMQ3\nD+635Rh4mB31UOQmF57kLT+makWkJtssChPGubW9zqYEvcJwutcUno/MZaiE\nismpX4CgZqX4SvfexKp/AFLlCpLA3AcMtH/FgDvpo9Xx2G0BEbakQ12cnvlz\nscoU\r\n=RHp/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGUet97pxENNRiU481aVR2+BBKEtc4PhXAyWHYy5zecDAiEAyyESiyUQISz4yV2ugOEmx7jj2kFJ6IpovVVEEIWtuu8="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.12_1630354916812_0.20513951229353444"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.13": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.13",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-filtered-dependencies",
        "prewatch": "npm run precompile"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.1-alpha.13+f0caa22f",
        "@opentelemetry/core": "^0.25.1-alpha.13+f0caa22f",
        "@opentelemetry/sdk-trace-base": "^0.25.1-alpha.13+f0caa22f",
        "@opentelemetry/sdk-trace-node": "^0.25.1-alpha.13+f0caa22f",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.11",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.1-alpha.13+f0caa22f",
        "@opentelemetry/instrumentation": "^0.25.1-alpha.13+f0caa22f",
        "@opentelemetry/semantic-conventions": "^0.25.1-alpha.13+f0caa22f"
      },
      "gitHead": "f0caa22ffcb26af2a2f05260f138a494e120a955",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.13",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "lerna/3.22.1/node@v14.17.5+x64 (linux)",
      "dist": {
        "integrity": "sha512-YZPW0iPqEbBhycohExUm/fDLKNAgjkylZS6x/1f/ts9aZHzTdIIGNU5vdqAyNIMnlf5nwPjFPl4j3lSiDGX8dg==",
        "shasum": "a1835facb95e294fe33ec1cc759083314441f320",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.13.tgz",
        "fileCount": 45,
        "unpackedSize": 113054,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhLUJuCRA9TVsSAnZWagAA+2UP/AzfpbvQZgIktx59JyNU\nCS87tcG2K4NogViaOkdZ4fWwSBZi14b4xaJn/M6Jgheo1SS8ZsVW4sfcN2NS\nJvi9ZvAQLK7DO5pzOYAuecgeH0p5K7jzNgX3JrSzOLMnHDj+mt9TLpzyWYKW\nlkMQqWM1iRKXMy0DmE9UW+NZNuGG4ow9wN5rbuNZiYIEPAoP4my98xR/K+sA\njT1+I5wuc2/q3uoL3O/ktPb4vU6oyZg6L4tlMDEUpv4JPGg/Cw5VzZaM03H3\nXYQ6n+C3hajwB3irErxcBUH27Wxl6BWNnUmZ77b8RL5PZiDteUAKdK9x3qHW\n9zmVE7KXDBQJyymr59x6fRLgZIpTLOnSJsiNOCi61ErJuorfg6RyJLTAi62b\n7Y2WJtrmPKJG1ehytUHlKto/V+6saMJStZWTxWwSMMlr0Oif2X/cfJuhfleX\nRbvHujPyzJOSZhEaxXPJyWAXvUJsEEHL4j9iGuO9VgivBnsVWNwyxZFXkqg/\nnaY/bI6+ZU7MzGkUPyuuy6qagGpEmCNeK+hp4uGtjdfnIuDAI2eJ/cvoJqDK\nK40Bw6K4qe9lBDViZgZRCyEz/jetjDr22CEiBDoU8mw1s9tTPQdeywn26FHy\nuAYTlYQe1ynsn3QQ7LPYfup95uu9ohsQ5i45UJshbsqHIcl9UfPtO2VPX+C8\n0EwU\r\n=s5Y6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDNVYp9cwHgOorNdnD/ZPWbKmMqYwk+aUZWP0oaHjQZxAiAW91Iz6RB3WkofLfPnpJii4uhRlPM/k1+xgGAIHmBJdg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.13_1630356078130_0.5659494073044176"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.16": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.16",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-filtered-dependencies",
        "prewatch": "npm run precompile"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.0",
        "@opentelemetry/core": "^0.25.0",
        "@opentelemetry/sdk-trace-base": "^0.25.1-alpha.16+63f67010",
        "@opentelemetry/sdk-trace-node": "^0.25.1-alpha.16+63f67010",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.11",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.0",
        "@opentelemetry/instrumentation": "^0.25.0",
        "@opentelemetry/semantic-conventions": "^0.25.0"
      },
      "gitHead": "63f6701081e3e4a7eb964bb82cbd8cbc2eaad347",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.16",
      "_nodeVersion": "14.17.6",
      "_npmVersion": "lerna/3.22.1/node@v14.17.6+x64 (linux)",
      "dist": {
        "integrity": "sha512-hJKP4KyyywgYt9NRDVvukn9dL7s1ZUQe8Y9pJLizN4vKVlX3MmcAr3ChmDzpxdKiqiBJhxOjHwdzoURcUoL3Uw==",
        "shasum": "4887ef3476d382bc5063e092f51b067d3aab3b51",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.16.tgz",
        "fileCount": 45,
        "unpackedSize": 112964,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhMyizCRA9TVsSAnZWagAA3nUP/jH4yqZAXPjbd+JL9+V5\nxDOEfjttko6VaMGsoypmrCd1UnlRWBhi/0a3eCkFP3SRYQ3hrHAmnqiUyWLq\n7cErlhONMLBT+kmdM3UZ0mrQQvvYmhiJ08npeOvU0PsmTHK9AMy/d08Rk482\n7Sr/vDFlVXgcf8SkdK0zjXFaYOVmueUgbX5bjZdpQ6tGnlNKeN+k0t8BqFRC\n9JSoHtmBWFpKhcixJDqYDCrKs/lE3hgUuhESTo4uRVfZS6opO7O9xpGz7gRJ\nX2ouAEYGvFOAHJRprSADRi5mq963dO81lcdzs7CDTvmDGNqzMhHBZl8XK61O\n18uMIQAUtDBfh6DyWBrAPfhAS2atqttkYTp/JobkS8VSzJD9svjffGd+voHb\nc8bqs9LBuqBzc0TEmTiImjIdlIfBhVA+RoE44LRD6iztGSJVyWXEdEQALiSa\n77upexp2Acy+IjYnnR1VgPcML3LMpSuYGpTaOihyvLvmMajQ4+DS2uG3VAg5\nyUCnH1Ra49Qt/IQq9bIWHpHcbYeWsW55E5q5Ko26BqKnZemVHoLf5hxTrT/S\n5QUwZ1onHfofEQwUFhGHGL5WFcQid1eDGhY1nLa36/6nhYgbMZ+Xodjl1MfQ\nEa1M07RJZ77mnCOZUgfbUzVv9ICibEuvr0AzImnrHLKxxozcahCTYa6wgxNt\nvNG8\r\n=/3M1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEgEYYCcShvJ8Oxo449Ozbl5uY9XHnGrzR40yHLhqGzBAiEA3mwvRX0twrX2QrRIXShaLzb5zGSOTLBI1wmVlm9Q+/w="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.16_1630742707748_0.5760893339311028"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.22": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.22",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-filtered-dependencies",
        "prewatch": "npm run precompile"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.0",
        "@opentelemetry/core": "^0.25.0",
        "@opentelemetry/sdk-trace-base": "^0.25.0",
        "@opentelemetry/sdk-trace-node": "^0.25.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.11",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.0",
        "@opentelemetry/instrumentation": "^0.25.1-alpha.22+3acebdcc",
        "@opentelemetry/semantic-conventions": "^0.25.0"
      },
      "gitHead": "3acebdcc070cf736e932c9ab9b683eb047c5cabc",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.22",
      "_nodeVersion": "14.17.6",
      "_npmVersion": "lerna/3.22.1/node@v14.17.6+x64 (linux)",
      "dist": {
        "integrity": "sha512-Bdq9oygLdsbMDpNxh6QU/RTf9K6TfV+fORvcyNzgZNZnrN4ocDvEK6f6ZWe+wo5ARLrVGZMjUlzAYrKPXEJJMA==",
        "shasum": "76af6dbc646596c76a60cb922777a599df739f54",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.22.tgz",
        "fileCount": 45,
        "unpackedSize": 112946,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhOM2kCRA9TVsSAnZWagAAetwQAJ5q4RxFCl481pkTJKaK\nWh8+CIW/iaddrDN6Rj6IBHeu2eoQHPno14VVXEpKgoKa0Ss1GoDcKiA9SNTd\nXkNbaN0re4Akfqw/Vf0vTe7Flw75kM3P2kygGnqbGlqkYuu3yNrE4iKGlAtH\n682KIp6BgMfg8B8Bz7rxlNbDp8xNIuZQXFGDk74mOBqw76PV6eEliJpG0rAe\nWwciX42Gq2Qf7PonagxsVjQWqUDj1evOawdlDxGbMphLau65GrprwBnSSe76\nM6X5Eb9+/jkq2uN5AEYDVhdWuV4Zrf76YabiLIlESJAoSJvq3L8T7e4mqarW\ndAWlgg95fR6yT3HCnFAJWfYDSJMp1FUiBXfJwZC12EyFn3U+KgkeTRXhhWm+\n+2rGM18V6hZ4ov0/B9MpPhdAUkAkd/TpiU+p6zyvvBfeaW+33eh3UtUXUCPx\nlRJrMZ5AOp34c5o5E9HJjP5+2c01jOyaofSc9HwvkbCAQQWhZ3w0w7/1l13E\nltpo9zomcTPi05qRVRCNp+DLAXJn3+hD3VGk2NMDc6/nVWZwdrxAnJq/M5ee\nk67hDNMeHO09sRCqt+wElnwXB2dLyPxyaFy9Y3qKrmZu4cn3HVBPr9RntmCW\nZ15uZzypBhWCwUOc9H5Z1RluNrOLMCDXBEPEHfeOTol3XtdK9RuvBWmxCv1U\nTHXM\r\n=Ermf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDV/WrR8qd31jZ57HkTW+nuP0tNsqhY9CqKJdpdDTFkZAiAswTfrjBPjTaj27jBZciuqNT96UnTEH5QDs8G7veYNwg=="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.22_1631112612792_0.08675696461202409"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1-alpha.23": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.25.1-alpha.23",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-filtered-dependencies",
        "prewatch": "npm run precompile"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "^0.25.0",
        "@opentelemetry/core": "^0.25.1-alpha.23+feea5167",
        "@opentelemetry/sdk-trace-base": "^0.25.1-alpha.23+feea5167",
        "@opentelemetry/sdk-trace-node": "^0.25.1-alpha.23+feea5167",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.11",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "^0.25.0",
        "@opentelemetry/instrumentation": "^0.25.0",
        "@opentelemetry/semantic-conventions": "^0.25.0"
      },
      "gitHead": "feea5167c15c41f0aeedc60959e36c18315c7ede",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![dependencies][dependencies-image]][dependencies-url]\n[![devDependencies][devDependencies-image]][devDependencies-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-instrumentation-grpc/src/types.ts#L32) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[dependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc\n[dependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc\n[devDependencies-image]: https://status.david-dm.org/gh/open-telemetry/opentelemetry-js.svg?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[devDependencies-url]: https://david-dm.org/open-telemetry/opentelemetry-js?path=packages%2Fopentelemetry-instrumentation-grpc&type=dev\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.25.1-alpha.23",
      "_nodeVersion": "14.17.6",
      "_npmVersion": "lerna/3.22.1/node@v14.17.6+x64 (linux)",
      "dist": {
        "integrity": "sha512-A1vxHb/rY8JxdHrT1ymL6LTRTN0yIJ2EcZoxbzHi6OhCm7C4xd2BaJIz9QpOmzgUW7QdwLRqOKbV4lOnwOKi8w==",
        "shasum": "afeab7a179adbb48c86c63fe836dbecce2f6e41a",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.25.1-alpha.23.tgz",
        "fileCount": 45,
        "unpackedSize": 112982,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhOTXjCRA9TVsSAnZWagAAYcsP/R0fN+ugjgjrWhtHmoEa\nQZHDSO0s8K0nzWuv26ZH99x/niOJn7SHBFbyX7YBclaexYhLTVXSaSuj00Vv\nUIY3wk6/Q51g7qiJWy1svtDUYyn/3+I2HTJf6zfbjen53sDP38mJBwx4siHG\nHGGMxsOYieTiKo99a6DsETCyu23LM1StpU2pXlB/X2+OZqlkBhGqZ2+AF5Mu\nls2c2ZFEQF5Hv2UTy2mzGKlmkQUu79bdgWtArlp1hDt/xCiGPs1q/fs8fCI0\ngD/7H90yp12owt3A32zYGLyZ7UBZ8E5egtIhyHDhzcSq84M7GZggcCv+fHmX\nzj4oJVcqooXOnHPZY9VTxscQdGp5RDft910XMW26xJjum1iQU5RuozvOqRHO\nTKo3b/QlZPrxWdAKfBm+dWfCC7GjQQXjI1VqLsPkOzFepPyiMKV3e5mOFiNt\nlGiDadYl/9NpfLWV4bHv+80GKmTEmR9clnm4BJohtlFmyEu+Ye29K9hjwui/\njHhtI7eXC2eHyUTX6IVsVkpcOnLBEFp0ULpUmvWLR2Lt/5W6QRJCrkeb/Hk8\nq00fVT6e4Svc5qfYlS1aCR+v8Xa4TjxGeSTOxD9SDOW7CSh+sx8gLTfnw8WV\n+AU7cYsSmWpNZLw83clQX5TgUVbqzjhvywizBHIytpJ6yGja2HrwJQ4TkDKf\nZ+F/\r\n=bNYI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGZm2y3Rpv8dzME0hbA4uQlvgExIOer57khNjGqMqhsRAiEAwAcYAHr0vOVSEWvqDl0CVcikN+QEtkZ3mbwk95F0+3o="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.25.1-alpha.23_1631139299668_0.8007668178377361"
      },
      "_hasShrinkwrap": false
    },
    "0.26.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.26.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-filtered-dependencies",
        "prewatch": "node ../../../scripts/version-update.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.2",
        "@opentelemetry/context-async-hooks": "1.0.0",
        "@opentelemetry/core": "1.0.0",
        "@opentelemetry/sdk-trace-base": "1.0.0",
        "@opentelemetry/sdk-trace-node": "1.0.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.11",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "11.1.2",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.2"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.26.0",
        "@opentelemetry/instrumentation": "0.26.0",
        "@opentelemetry/semantic-conventions": "1.0.0"
      },
      "gitHead": "0f5a5bc906a2166c30a4344e460b7206c0b20bac",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.26.0",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-D4lVZMGSPdcjMFhecuVnwG6/zrfyv65uwpU72FD8D6I+BhLYQoGQefmFefcpeCWKb5998nRUhf+WqG1ObbJPwQ==",
        "shasum": "4b851da210a7d3e3698f7f512e595a24a76c4091",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.26.0.tgz",
        "fileCount": 45,
        "unpackedSize": 171864,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCcwVRYUw1ATJFkBPqQhyctd5A7bv423pzdW3EeVf57qwIgJls8IFG2ml3FWYukbr4NynpuzCQMyrep9myIrCtz0Nw="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.26.0_1633455660028_0.2461962171905112"
      },
      "_hasShrinkwrap": false
    },
    "0.27.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.27.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-filtered-dependencies",
        "prewatch": "node ../../../scripts/version-update.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.0.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.3.7",
        "@grpc/proto-loader": "0.6.4",
        "@opentelemetry/api": "^1.0.3",
        "@opentelemetry/context-async-hooks": "1.0.1",
        "@opentelemetry/core": "1.0.1",
        "@opentelemetry/sdk-trace-base": "1.0.1",
        "@opentelemetry/sdk-trace-node": "1.0.1",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.11",
        "@types/semver": "7.3.8",
        "@types/sinon": "10.0.2",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "12.0.1",
        "ts-mocha": "8.0.0",
        "typescript": "4.3.5"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.27.0",
        "@opentelemetry/instrumentation": "0.27.0",
        "@opentelemetry/semantic-conventions": "1.0.1"
      },
      "gitHead": "f5e227f0cb829df1ca2dc220a3e0e8ae0e607405",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.27.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/3.22.1/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-aFHcAeeLfqoH8PMjmdqEwZwXDJtFSkWmGDBZeH2yrx3KzFMVBB/UJEr1n/ZC6AqfqahL/qqB1N8EnoCoOcs5ig==",
        "shasum": "198af374de5a8a995f87fe97c9ae8c205d0448b2",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.27.0.tgz",
        "fileCount": 45,
        "unpackedSize": 170672,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2UpxCRA9TVsSAnZWagAARgAP/3p9vSCOX6jc73vbV9To\nDmEmxjMkiXakrCeQGyJQGf/UdmQ9pb95Mo64OIJ3KTjFAT4fRoNfNV3V32QL\n3//HXszEWuPtz2bn6qv04Y0fsFoVwFefeYS1G5cO8pgv1VJFspsIQrd+yS06\nYYftN1litRQihAmUeeKDbeNAaphu2zP6thuToPX64Lr/3vWNRUfhXj9wub8j\nfasH24sfoGg9qDl2eKFp/ScpYBjJe9plCtDIdu1r6ZqwOFsIZ6VaMHEDYQIF\nIWRs3kr9WwdpnVHFPaz5vhOYwo1eMmsNqmChWYtuUdAnoQZmmigESmhQ8Fig\nRslOW5P8mltJvjK1ssVDB20wttuUAcIKWVTDm/iNKWNRnBCgZqAW+kSoJm09\n4/H0+CiDcyROCaFBFZ8YeuO+mPY92lrS7eC3/ZPMDWsHiqJzbW47QG9zv7FK\nCbTO1x52QP/PYcEI0E1K6+6iFfem9hNIX+cCZ2Axt8BMO9PplMsmtDinY/Wf\nPGq98d9R3OuNANysfamEUjSIK/kOs4kpwXF2ekknN+DA0fPJ+YKoFTYYDkLb\nTreg3cocWixGCTjJ0MlJ7qCvkTk7eOKOPcCqwAU4153nmJqjTJUdbkSYccEA\nFaY75fiJ+Tj1aCq3WEvEkPAC9fDxmAhGVc8iCS3tCGw7p2wclTrqRplcmOxv\nRUCe\r\n=ri87\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDUutJYesw+/tWDMaP8/hUdeXXeJlIHstLojuFzHge8kAIgJy1seoDphu7eLcNes1gt2qXQQbIi93XNPB2Y/KZ7FYw="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "mayurkale22",
          "email": "mayurkale22@gmail.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        },
        {
          "name": "obecny",
          "email": "bobecny@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.27.0_1636643262391_0.8562700769929212"
      },
      "_hasShrinkwrap": false
    },
    "0.28.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.28.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.12.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.5.9",
        "@grpc/proto-loader": "0.6.9",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "1.2.0",
        "@opentelemetry/core": "1.2.0",
        "@opentelemetry/sdk-trace-base": "1.2.0",
        "@opentelemetry/sdk-trace-node": "1.2.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.33",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.6",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "12.0.1",
        "ts-mocha": "8.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.28.0",
        "@opentelemetry/instrumentation": "0.28.0",
        "@opentelemetry/semantic-conventions": "1.2.0"
      },
      "gitHead": "a0a670a03fd35b0799bee8cc466f79e93b5b6dd2",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![Apache License][license-image]][license-image]\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/opentelemetry-instrumentation-grpc/src/types.ts#L25) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.28.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/3.22.1/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-MRYLENztpQKr3/f3ps09x9wxJ+kg3pNNqPz1qzW95w//eIxwye5repK3auXLdVib+e8md9elhpqDmlUjtKs75w==",
        "shasum": "f3e75fcf4319503071a8834989889439d0099140",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.28.0.tgz",
        "fileCount": 45,
        "unpackedSize": 170866,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDYuSSY2TNktgKjFXtPYgI1dibhHaekVLdEBEfxAPoZ5AiBOtybaAYCcZUhdKRxwv1HTdsKZ0VdAbghSdq8hVTjvdA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYsI9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqofA//YWhPj3fhzpPK8dzKLWnuSnoX98IwJjecBqllyzmdvPWSKxVx\r\nspsfVm70wUiPdQ1k3LgyO157/Zio9XgPaXx8IyEhKBt0Kv5X/k/E9lIlwMXE\r\nAExlk61Jne49AYtF3EplMfb4/w7ktZ7EJYlWcKRDzcKsPIN1yN3xjQZTzRqE\r\nIARYzd7gr9e2aom1b36n3LWHxBejmozgo5Dn4BSVvpVEsYWh7+BKMp2iJ0Hm\r\nstmmnUPmlq6nWJEqPILrDHGw18kiOCShiEptSs8OzAWqroftOmywdPkqG+o1\r\nO7M4MDhP5rMw6WdFJ5aNimmIhdoPAqcO8NGEijArmBgXTaTCPID14yoMtQHY\r\nZZterPP2vjPRcqAvz83HhuB8uhCEbkOoQjss32CVPnTCDlkZgQHnx0BMHYkb\r\n8JzRPDGzqZ1FIHjAXB/GgAYbcC0XDtjuyhkXWEx0YjkerQvMMWK90FMIdixH\r\nxSMwhBWxurL1XGeEtyAlkET/WkIVWYCcvcmU2MADlV4ljoUbD+o2eyVHN61+\r\ng+fKVeVBu2smx7VI2EtEmVxinnnd46UBMxvyUrZt8OT+Hyg4Urmu76LxEtpP\r\npVNoWxI+K5Dm7dCk8483zMDknT+ZLJhJro2dHdZmqTR6CyIoiIdfkT623LW0\r\nK3JG2xBQLgQ1bc8Ld1n2n2XI3vrgmr7X6vY=\r\n=Mj+g\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.28.0_1650639421007_0.08519857626151928"
      },
      "_hasShrinkwrap": false
    },
    "0.29.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.29.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.12.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.5.9",
        "@grpc/proto-loader": "0.6.9",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "1.3.0",
        "@opentelemetry/core": "1.3.0",
        "@opentelemetry/sdk-trace-base": "1.3.0",
        "@opentelemetry/sdk-trace-node": "1.3.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.33",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.6",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "12.0.1",
        "ts-mocha": "9.0.2",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.29.0",
        "@opentelemetry/instrumentation": "0.29.0",
        "@opentelemetry/semantic-conventions": "1.3.0"
      },
      "gitHead": "eda0b092db484855ded8b4837ba7fc19a377c5a7",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.29.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/3.22.1/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-9lYJx9Mzrt4j1kmOAejk7oXXUTEfSw03OypH322zVS4CAZzfGUO/kmsL76B3h2YBCYeimadebGDIXwGCPMIh7g==",
        "shasum": "1fba01d96bd5da10db100341913367090e841c4f",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.29.0.tgz",
        "fileCount": 45,
        "unpackedSize": 170866,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCy07Bo5D9qSihUujOGmm6hqmVnAk9krim4Thp62Wo/zQIgPEiRj3EqDM6zI9/nLUkP80KwedQsyjyU7RY1aCfb6OM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJikSliACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqF9g/8DWfBiHVL6ZZZgMvxec0dx4NjriisWuBMM8W493T5yCl3aa9H\r\n+MTzRHiSKBG5yn8qyfZTdoQvAWxsbBmCAJ27BAoaKJD6225KP/1aVWMD24iT\r\n6bfJIgQLhwMFSZnURA0XR529d6SQ9yiIVMxwM0JrZumedb+e+tp/wMHPk8NY\r\nY1Udp0Z0U4S67czAhXWj+2/zSIsVRubJ+MmnTgbYJfjHToJUDxuJg2s+pbve\r\na9jgJ01ftqRLOn/z96bfnwNzTcBUA6awBBJgum2RFzsjo4WtB0e4dtiJwg63\r\nvRNQ7SXB1xfJArV5c+CHPneBF6HvjGSz8/LsVtU3fQ4Ay100uidSaN+Z93xR\r\n/slSOk0GPTfKLsgnYpfeKYkEJ6mt0kirt6oW1nKNtDb1duIc2FMiHwYCFO+k\r\n0gUVIPxYkmB1li3UB7J5LuDZ8bIzVG2KhYmEkoROJd8WTEWkfdUCullXwkxo\r\nh5+y6Kx/gdfOLskTO756gkSIEtEBsU7Jv6zVx0Ydj4R8wazd3kQzIlvXBGTY\r\n2jEmYtt2uAJjJRDwO+OSO6aVe/qiy6B71Gv1rgTnu4nrV3NCCGf/0YWdiSpa\r\nSkDZ4HiCpFZBF+dCFBi5l4BdPhtr5xcZqaZ+7ENk/HO3BJD/3yFtsnO5y/Wx\r\nwvC2p7sDHA+1OsltppDln8IMAtUKGSRi1W4=\r\n=o+Fj\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.29.0_1653680482081_0.44607865763058796"
      },
      "_hasShrinkwrap": false
    },
    "0.29.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.29.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.12.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.5.9",
        "@grpc/proto-loader": "0.6.9",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "1.3.0",
        "@opentelemetry/core": "1.3.0",
        "@opentelemetry/sdk-trace-base": "1.3.0",
        "@opentelemetry/sdk-trace-node": "1.3.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.33",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.6",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "12.0.1",
        "ts-mocha": "9.0.2",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.29.1",
        "@opentelemetry/instrumentation": "0.29.1",
        "@opentelemetry/semantic-conventions": "1.3.0"
      },
      "gitHead": "094f016ac6697fc45ba5d7b5765f5c3e56f18d1e",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.29.1",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/3.22.1/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-/nxpFRQcvdn8D2wXqu7dxNM7466Cc1U4HcCAMusCXhmnGPXqpYtt57MXBCpFg8Xq9HxNjc1omLFOR1ud3fvU0g==",
        "shasum": "553f3686e966cb5825bd847c4ea7f572e1e235ad",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.29.1.tgz",
        "fileCount": 45,
        "unpackedSize": 170866,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCep0pgBdsJKTOMUjHBsovfGmYXhRopt/KDrqd5J+wvXQIgQaT4bSy8CvL29A/q0aCA5LMYdmzfwqVck8Pbhg5pKwE="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJil6wvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpWhQ//V9VSpzKmpm1zApw27lfqCysWvRhO/fiG2iFzSVVFIrI5Ukir\r\nt74H57+UYiY23X0Vi/+/avoQ/PllWGghW3MDzW4McMer1jVGMwZKYH3lbxSy\r\n8gtrz+KxyXmn4jAEqiRcesWClrliff0iH4d4tt/LQ6C0tGB7fOMGNfxzv2LJ\r\nsgWhe6EKgnFmt7v5048b7OVRRSqbanPo4MGZ3cA8ha6d929g7Sn20JsXD0tG\r\nTG4mtcfWW7jDDIq0wH2o6/WDyL+gGVVX33sIG9zyTKBQIQVQSY94MzEhPoQh\r\n7RBgbSWMeEf87ZjPpkcXN9s5blx8TUe51NpDA5Q9JmDSdHrxZ/C2FVjPEnd6\r\n++pHZqBgMB7XLtKr8cP/pHgi11j8ZZM1FYr54rVI+VaLxScjxZWxzE5/rfgk\r\nG8c9QUZTIle5729/4FFNvyYAGr64IlYk5McCm0uE9BElPR5kArF8SKJNbunK\r\nED+8k3De8F6iOxrJ1EB9ldRSsERC2MX7Bl0hWonaQaa3a6P79Sbn9E6+K3mV\r\nx07QwNotQWvmQnSKdPv4tXwxVXc3bUWzj6uqYA9I/DB5GVPW9YX8ocZr6DRc\r\nRfQd6YNtp9vdDjVzEbTWGs/0W4ZaY6KeyrNjUL+8jpshwpgGsFcZDsbkQaj4\r\nEWUic6CpA3ERUdXe9ULOKgtnHqsiDQ8rFoU=\r\n=JRKd\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.29.1_1654107183639_0.5044298600352202"
      },
      "_hasShrinkwrap": false
    },
    "0.29.2": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.29.2",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8.12.0"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.5.9",
        "@grpc/proto-loader": "0.6.9",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "1.3.1",
        "@opentelemetry/core": "1.3.1",
        "@opentelemetry/sdk-trace-base": "1.3.1",
        "@opentelemetry/sdk-trace-node": "1.3.1",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.33",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.6",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "12.0.1",
        "ts-mocha": "9.0.2",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.29.2",
        "@opentelemetry/instrumentation": "0.29.2",
        "@opentelemetry/semantic-conventions": "1.3.1"
      },
      "gitHead": "51afd54bd63e46d5d530266761144c7be2f6b3a7",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.29.2",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/3.22.1/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-rWyx/a7CsEYopwxaND47z+I8SrTLTHEz9sm8sf30FkMviVyRzYqt2PJT+JMGInM7Om/IpZNEc29kSzUjLmqddQ==",
        "shasum": "a98431f248431d2d5ecc39da3e72f14620a4b3b9",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.29.2.tgz",
        "fileCount": 45,
        "unpackedSize": 170866,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC6cgeTA8UTowHTy1ylT3E/U2jZge+D35R0eJaXLz/GKQIhAJ10CowuB8v06DfMGkRq5r3egpKHVMy+YWLSk1qlImI0"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinmLjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpapg/+KeL4W/rfBD/z6R0fVNEAOXW2LlVkOyRDnx257+cDu+TcTTLD\r\n7qdtGyvHw42gqruVReNFfXYcQeMRM9PdgCOWdVeWRJqvrP9cNNUDvLoK6F3q\r\n8xYl3ddIHVIHEx6oqxg3xoDZHFXe3yiLJfb64HgSH36oy1dXbZ8AgvpzRyCv\r\nuMCqgk8Qu9v9hpZtCa5v15ep6s3Kboaxd4jA2hRPz6MUI7dJrd9a/nD5fNIX\r\n7xsmKzh7O32B38iP/j9cmtcaBOI+fUOH53rqbvhL3lr+P87Dde/fQ774qytg\r\nWbOtc6DKHzMy5XsDN9ILGaqNHgCaLvPfl4FaBHO2SAGPtfDkKXXIMuG3ElAW\r\nx2h4w7yNvHfdfZtttfWxwaGSE06WxQp0tixm1Ln8Dp76vjKc2w6jWVpBlEAY\r\noFNi7/VfrLofcuuXPgJek2719S7bgfShLNZ8LKIMePxmtQvv+RE4TdDV1cEm\r\nGZhcE3bZGBkKTjm2LbT3BhoQBaZzYsz/Lj7xUd5UGjk+U/dqhITrEYJIdE5H\r\nI9MZjfhdr/dm0J+wZhDuPM5zeg6CwuDITRQAbdvwJynWQgSOb0Xd6J3KlSo9\r\nMlJGl/DvDUJWKa1MXjqjiKaO/Eaj1/pVaxoJt0Gj3vCVKV5IZvS8X7StTFDz\r\nLQ4y0ZU2L/floTqCwuQ10IaitKxLeHn+npg=\r\n=Gwyy\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.29.2_1654547171179_0.8437597855062537"
      },
      "_hasShrinkwrap": false
    },
    "0.30.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.30.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.5.9",
        "@grpc/proto-loader": "0.6.9",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "1.4.0",
        "@opentelemetry/core": "1.4.0",
        "@opentelemetry/sdk-trace-base": "1.4.0",
        "@opentelemetry/sdk-trace-node": "1.4.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.33",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.6",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "12.0.1",
        "ts-mocha": "9.0.2",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.30.0",
        "@opentelemetry/instrumentation": "0.30.0",
        "@opentelemetry/semantic-conventions": "1.4.0"
      },
      "gitHead": "e39ab883b18636238ef0fd741df4ce5ed53e8d04",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js#readme",
      "_id": "@opentelemetry/instrumentation-grpc@0.30.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/3.22.1/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-bhSjv/qepJKRcaZ0yrjNbAu3KCT4JKG1PXoqTIpuoKwTB7W94lW7psAlUnqeohZ8GfV4Z52iaK6s0HcD3XjKbQ==",
        "shasum": "93ceea6eecfcee738e6355c0cf3df5898f9dab3d",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.30.0.tgz",
        "fileCount": 45,
        "unpackedSize": 170862,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDypejMlvqL+JARjc4Zyt95YbsUdxjgXS8t5x+3zCJVOAIgKKoAUwPZrkZ7SzuMjzlzaRAoF95Ycvth9P6qZdOLE0k="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJixe1oACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqdPQ/8C79rlpL0FQg7O7YxIWGia/r5IjiD2FIXRT7kQw46vyvJavJT\r\npV4YDZ8LMYcMpgoBemYAKdX8qKMGzKeHRCMEk/uH+ivDHapLbbRY3EYUHVgS\r\nT64fYaOzX4WoB7rTlSVrjYXb0aboDVrpZz9VvYhmiYoyGcRSly/ON1lIx6M4\r\nwUTexYweYRgR2Rk3EHdW+sPF4SeXvg8fs00IuNRrEebhUKmF1CgoWTas8IkD\r\nK/BzWsA04tAuE5KxRh4jhM5/MGi/dxnPWSRZ/IyVhsyOYQ035tiWud9UIHPb\r\nYMEGFJfxX9N/iAAjAD5UkilkHcu2W7CqX3mQi7R2SKpVxGn9tl5/obZklCxc\r\nsG3gDvCrlt/42LnBiBFEe14LDxENinIiQmf+uPwLMbx/+7BdLl694q1eCTk0\r\n9HRMKZjH2sJAAVIur3IFoKD2/FnUajoz0Yh4c12m5+Op8xAmoP/etzx2ykp7\r\ntUZXv4XeNi5Z56QUNhmN3AaWWfGxizroWdviZiqChcDz4Hn7OjA0nATDj3d7\r\nlk98owh8D7sEuRP19ZqsEWHM/PzEpMr4YQ44VP86bDKcuzVHNMvpeBYrrw3d\r\nrbSSppHE1ahwgbvQXxb9J3oNrVUq0cTOjDD4J5+vFfx9ensYNZUNzoqCWc1/\r\noOFNtcVnq7HC7bNH8IjqQxe1ZCfLkbUOTR8=\r\n=wb5B\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.30.0_1657138535789_0.14067837101109926"
      },
      "_hasShrinkwrap": false
    },
    "0.31.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.31.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.5.9",
        "@grpc/proto-loader": "0.6.9",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "1.5.0",
        "@opentelemetry/core": "1.5.0",
        "@opentelemetry/sdk-trace-base": "1.5.0",
        "@opentelemetry/sdk-trace-node": "1.5.0",
        "@types/mocha": "8.2.3",
        "@types/node": "14.17.33",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.6",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "7.2.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "12.0.1",
        "ts-mocha": "9.0.2",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.31.0",
        "@opentelemetry/instrumentation": "0.31.0",
        "@opentelemetry/semantic-conventions": "1.5.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "gitHead": "776656b6e0cd0fc49a52b734702bc77110e483f1",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.31.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/3.22.1/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-NxVk/6Cr/UqCQUHbxv2q010grBMrOYTmo2OLW64wtn7hlem9gfuivJUIG0nXmbZm27SwvC7yHmE8m0rf28WTrg==",
        "shasum": "6ab4283e8ad934757a14de0bf29066e6993ae5dd",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.31.0.tgz",
        "fileCount": 45,
        "unpackedSize": 170997,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICpIpmENhCLgkjsPhY+uMRIoG9EoPH/mE9iUmdZ2B/e1AiEAuV3IC2GuPRvekCql1fF4bljwqQ4tqPygD8WHBCNIKGA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4FP9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoLDw//QX6UA2g/UvG8LNvEtQu3T3Bb//oQ7ytfdpXxuZ8RgSVMPK32\r\njXpt0/nzWkLq7rntnQ+SAEqp46w2Zyre4ncwGPWUmf8DWf7PXZ8sp+OvuATF\r\nmLaGy3IPPST6fshxWMB3KtCY1e/cfKzB+gzRG+jsjVXYiwlOrrEt+D0bAh3m\r\ndUG69zOE6Me/Reicax3hR5b2TY7y8SGW2+9jZilqgwEG/1gCoxYDJeX7UacM\r\nsvYRVJt8EIPBSVcw+04joCthkK3Y6/ep4zIFuyUJ+XsshAUVVLbYV9v9Ki2k\r\neWTXqIXVrI/TMQG8yhQFxSCSNE9z0HQ24ZX/vzOwsx0p0M4e6OxrGghNejXf\r\nTPKZQkED/pklC4bCt7ur+m5CBJR8XB6BMzAJ8SagebRDEusJDI8UxokENBcb\r\nZNQNQ3uknynLZ5CtW+OS8k7i5uhEze06wc0Up9xib9lsvgvEJsBxY8pjG0mO\r\nX/H8p48W1xWTZO73hECy9ioroAu5VHDiT6cK+0w1mCnznNyXV/xmWLd0b6JY\r\noFtdOHgFEYLIG30NCHLPUOnBvKvwYLQRHQDWtuNj7O1W14vBobGclvXgyI8E\r\nFa/q0uBwyBslQNVpuhz8YWhHbUNyB7goPr72mpWruIXQMvFkZ/287P3ba9NG\r\nqX3yKJbClI1MA6OdYze+l0CgO+s10cKKlZs=\r\n=M+rq\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.31.0_1658868732933_0.5754612340981407"
      },
      "_hasShrinkwrap": false
    },
    "0.32.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.32.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.5.9",
        "@grpc/proto-loader": "0.6.9",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "1.6.0",
        "@opentelemetry/core": "1.6.0",
        "@opentelemetry/sdk-trace-base": "1.6.0",
        "@opentelemetry/sdk-trace-node": "1.6.0",
        "@types/mocha": "9.1.1",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "14.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.32.0",
        "@opentelemetry/instrumentation": "0.32.0",
        "@opentelemetry/semantic-conventions": "1.6.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "gitHead": "a5abee69119cc41d9d34f6beb5c1826eef1ac0dd",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.32.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/5.4.3/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Az6wdkPx/Mi26lT9LKFV6GhCA9prwQFPz5eCNSExTnSP49YhQ7XCjzPd2POPeLKt84ICitrBMdE1mj0zbPdLAQ==",
        "shasum": "5a9705a166f4f10106f502078f2ed4b8681b2ccf",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.32.0.tgz",
        "fileCount": 48,
        "unpackedSize": 176864,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCzeIpviJpgS/7hqd0DBC/93bkwWSc6UkDvwkItfpyiUwIgFnjy2sRk/VD+RS3NecGKfpIBRkiB/zbankXkgkhius4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjBmOGACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo6gg//UOeLtUmw1+1ibbKyp4sqyuUWZF+RzskvZAF75FWrrdnyx27Z\r\nZRsb6XCtPtflES05+AInP2D4o+dmv+1ypZWCzyTBy9u45bCZiQ4/vDzZkb5R\r\nmsvZPqob1F1E2gd4UhpMOwqIqIZ9K2xwuifoKkdTf0Oyfhft9ctWSNwnc7Hu\r\nvx+5ogU8ZLPVK+p18MVbSnslfAJYpKpFYjLNdp/V5epvwYkGoUqQf9LWeTIA\r\nyQ3Bbh1bwlqZbbkyeimnj7J/9+xJgQEu/R3Vvw706qIhjWAFdcnSxMJ5KQU2\r\nVGslFGIhNSKShhFpO3iKQDUgv/sbxlQmjl2GIhZ2bwYdblMZ2yMROJjL+1Jx\r\nR0cYNHtRznPBSLc6jiN9uDXraRyXUZI+KdpD8bKgTIU3ULq8Wk/KMaC5oFHP\r\na3XW7vj6/eV2Y7HDz2Pz9qi0oBh/xegAbL7wEVXdd0vK405zlmjC+BdQbnwl\r\n1HqgH6WOoGtjryY95803oGStBGvkNmJmmakLhvYnh6rl6oYA91IafXU4gtjK\r\nN1I8ucl+/q92uQmxj0YZRbhg80bqnvQ0h2U9vSLT3/aRqy9rPytjhj3nUYOI\r\nyqFCtVrWtltvQ/MtfMPB2ZqGBj2ZKhq6aejJXin+3aQU4PdA5CZP/CdC+oMP\r\nYqEgMzpg14kBEr4hwlmsQ3SNZRrR1YlRMqU=\r\n=e1l8\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.32.0_1661363077840_0.7006706697113114"
      },
      "_hasShrinkwrap": false
    },
    "0.33.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.33.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "1.5.9",
        "@grpc/proto-loader": "0.6.9",
        "@opentelemetry/api": "^1.0.0",
        "@opentelemetry/context-async-hooks": "1.7.0",
        "@opentelemetry/core": "1.7.0",
        "@opentelemetry/sdk-trace-base": "1.7.0",
        "@opentelemetry/sdk-trace-node": "1.7.0",
        "@types/mocha": "9.1.1",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "14.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.0.0"
      },
      "dependencies": {
        "@opentelemetry/api-metrics": "0.33.0",
        "@opentelemetry/instrumentation": "0.33.0",
        "@opentelemetry/semantic-conventions": "1.7.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "gitHead": "ad88c3d9aa0100fe259b93f4b660e84417b757ac",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.33.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/5.4.3/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-yDu69KQt1GNvaEObIYnMJUsqb9nx+DT0ACUuvig6MURi1SuZh1I4SwBLxKZyosqZaE2CsuVHXTEGP2JeR5p2Qw==",
        "shasum": "be509f1db2105889ff4e0a013760ecf9214d9b32",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.33.0.tgz",
        "fileCount": 48,
        "unpackedSize": 176976,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAMJgn2UKbbzvSocOkiM0VT/sQr738GN0uISBgxDfTDPAiEA7W6ZdxMvlgNj5Vq/Jn4B2bl7rZjK99ADyyMiS/49UTA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJGjEACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmotag//RTw4MpqMj+YPV8tz6Pl67p7JG+FQZqxuPARvfqv6LlEguT1U\r\nyz3nhIIUAx1icdD+asAnlATBNooAuQdr2I3kQb1spIFqH+fUdUxIoeAADh/G\r\n6AxNBMq9X2h/q8qvywYqsJ2N+gPTBBCqJvIJqJGG+bVoyXuFNfTbv0HP3dJA\r\ns0MuVnu6F5n+UrYeQrPobZpwpuWT7WXpkJLmGVi0EFO7N9jSmJ3Coa0lonJx\r\nSOkxMQt6itKGXYElr0jKhlHKdBAaWNBEDQOjQ2fyQTytE6o9Fto/RvPMlDy8\r\nCy4RnoeoOY6I8XBbTHg2PJgw2J/jya2S/UReCd/Uq5KB8lbmwRAPvUWmw+nR\r\nC5WcwxrcEvvypzZwGZRCV6RO8s5c3fPgUhnSol/YWzmC7GYiwke4vJRTIpVI\r\n2UHCJaxUSRoA58IEkjLEImQMfQvB1g/QKj2kBkObsX3dSvlBAgI9eZWKp5wm\r\nGWe+VFg5VdtxmxL3DRQm1KQDUPFs+vJWU5d7CsnWGd7J5VcyX+eLmCX54OLJ\r\n45Xml0h7SKv15zIep6JQR695+s0qijFaSTrrdHb8T/oJ3Q3RNCM/vVfPm0l0\r\nVEvSWaCqad9islPbhKW4LjgNa9ZtgJ+XnhLf4QO+IC/8rL9c1EW7uBmXQANk\r\nL0uAZfFx580+zuwLxo4pkEkHUZ0N2+RQeBE=\r\n=byok\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.33.0_1663330500336_0.5878051826254758"
      },
      "_hasShrinkwrap": false
    },
    "0.34.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.34.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "^1.3.0",
        "@opentelemetry/context-async-hooks": "1.8.0",
        "@opentelemetry/core": "1.8.0",
        "@opentelemetry/sdk-trace-base": "1.8.0",
        "@opentelemetry/sdk-trace-node": "1.8.0",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "14.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.34.0",
        "@opentelemetry/semantic-conventions": "1.8.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "7972edf6659fb6e0d5928a5cf7a35f26683e168f",
      "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![Apache License][license-image]][license-image]\n\n**Note: This is an experimental package under active development. New releases may include breaking changes.**\n\nThis module provides automatic instrumentation for [`grpc`](https://grpc.github.io/grpc/node/) and [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/grpc?activeTab=versions) of `grpc` and version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with [gRPC](https://www.npmjs.com/package/grpc) or ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc) or [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options | Type | Description |\n| ------- | ---- | ----------- |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/opentelemetry-instrumentation-grpc/src/types.ts#L25) | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function. |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.34.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/5.4.3/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-IqwWq5d3Jiah0eSm1IH6K32rYKe4nnMKkm7qV6ISwWhFFtUPfuOatUKAttmuvipvPCuxiiIS2P/zbmytkwmFVg==",
        "shasum": "cba4f992beeee695fbed4ec9d9f47c94bddcce4f",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.34.0.tgz",
        "fileCount": 48,
        "unpackedSize": 176846,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDijDASdZhglAIi09x+YOvNgfUlKOHKlaY8dYdJ4Ro6MQIgDv0CZaLGNwVWabt7I1nWn7qrRrZfSV8+8h7HtPUnRhA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjbANgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrnlQ//UwttfaYmrYm9JkTj6Oj+Mt+uG/nohQy8lMhlcWfG0B8TRTKF\r\nMxE7a5Cd+DKKXw/b6PxEoqAwf+9E1w3XyjeHpbNeBgumxjCEbQIy5ocf0flH\r\nWqEFuHXGvPBtKyLz6ik2NT9rLVD7MoGrl6Ksk/SertG8NpcwuBu/YTIQI47w\r\nxcoRySwJRIgAIpJzjuW/8G9/rJCYTv4KqCGVlxdaGOTAICqzaPPYASIJxawn\r\nPcLkcAwij5uHSPYCqrOZmy4QPau8dxC6uw4HFyQ+Cl51r+wPhWdU7ej11YPE\r\nyn1Xe/Ycm+rApFcxUPPgUeEByBhSLfhSZ4LfnNyq3Pe3OOeJTtn2DeGv5BkC\r\nc700K56CVqDC6vWCwFH5Khmzi178VwG1SFYDgJGO8d5o3lQNSegBb2By/y72\r\nLsvBXTARebO/rxqvBXgGQvysXaf4WpfX+9BMA+4YWGP/lNvC+LiUBwpgf3/Z\r\nnbctNFZXPzeH/0+l//7ky6vlJmPYAYb4CZr0uHbUlI5XxnuUu8ENqlK+EzP6\r\nJTXbyOQl/eyY2/7S7jYVaZUA4/LupXCymNN1qF9OWdXUsvlX76RwT8JOsZFk\r\nqiSNerPhvyfj4c+WZTegbfiibutXTH8uQTWVfoM9Xv50LsVl0GqFtwgb/4ux\r\nFaZfBfpp++5j5ExJf1H6q6aeCR4VEX0MWyA=\r\n=oTVF\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.34.0_1668023136781_0.35796588894914794"
      },
      "_hasShrinkwrap": false
    },
    "0.35.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.35.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "^1.3.0",
        "@opentelemetry/context-async-hooks": "1.9.0",
        "@opentelemetry/core": "1.9.0",
        "@opentelemetry/sdk-trace-base": "1.9.0",
        "@opentelemetry/sdk-trace-node": "1.9.0",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "3.0.2",
        "semver": "7.3.5",
        "sinon": "15.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.35.0",
        "@opentelemetry/semantic-conventions": "1.9.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "08f597f3a3d71a4852b0afbba120af15ca038121",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.35.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/6.0.3/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-C9NTju8lwSPKSFxOoBmS6elZsuRG/EwNBEu4Zcztwcan6+S9oZxhlYkUqAXHJ5jMbmX0gbYC+UDuhsw47I9a5A==",
        "shasum": "4d26375061337d995193b9552f92aa0e6cdac482",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.35.0.tgz",
        "fileCount": 51,
        "unpackedSize": 195392,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICw4zfQ9KTrTpVOp1MCjcIAmGvPP139c01ZIiCvLebmFAiEA4TMBFYlqayQw05zwTDvLtN/1USx7NeeY6m+5jN3VrSM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvy45ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqtFg//ZTMfY9Mj5iSESdlivLwyW+BIIiulAFsOfRXnojy3GoRycXXP\r\n4pE1e7Pniy2C6coUvqcs1bdZJZ1/msKw9Lt0+AMdINjCQqEEGPRMjngKpp28\r\nK+wwPBxNvwqL8K14oTqd92assHPSiOPLllDHsCqd5fZWwiaW34DSTIWU1weL\r\nYSQ33rX3b6pCt8PdonvNeGQgvlXtDndg4+PH1z3vmMC2pIEI3nRXX0p4xXAr\r\n7RJPhKwBjz3rQTfCxFZF7XDfDNo0Ug0mI7kAueY5fTDXIgNvmXBtrKsG3bbz\r\nRnD0235ovoGBbrwbL/uza8KDqfzPUNhueg5s0GMQKE4vvu4ezcNE7zO3bBKs\r\nsJApeYbRn08YoTaQ1cYf8O0czdkVxWtd9dkoqXxXIq49S4FsF3cK1MB/nbky\r\n5JMtrlT0PtRrytHPxblMzsEU62OHhp26yNUpf76D524q80+TbaYsZaqTpZmR\r\nX9skZJMf/YP6o1vWrgTd1qhsRA9e4BDOHRi4jJnS3Ifi3WeClI+sh+3Hv/pY\r\nhlfuyzwgwoVFA0iwDyUYsf5Iw8ElhgPMLenhmpP1JDe74r1uMUBkqhzUFqqE\r\nmfs8Gtyu9SfrWrZyH7sa5U4JnEdPcsVLubiWECzJwcmXLBDqXjPlQRj1flFa\r\neib5+BdCDgPTbsnrBZgt3LjDqMF6kv+s0/c=\r\n=jXPO\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.35.0_1673473592781_0.3869601557704223"
      },
      "_hasShrinkwrap": false
    },
    "0.35.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.35.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "^1.3.0",
        "@opentelemetry/context-async-hooks": "1.9.1",
        "@opentelemetry/core": "1.9.1",
        "@opentelemetry/sdk-trace-base": "1.9.1",
        "@opentelemetry/sdk-trace-node": "1.9.1",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "4.1.2",
        "semver": "7.3.5",
        "sinon": "15.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.35.1",
        "@opentelemetry/semantic-conventions": "1.9.1"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "279458e7ddf16f7ddca5fe60c78672e05fafce66",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.35.1",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/6.0.3/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-EBmpCD+5QfUXPmupynjwxt3tUG5bgTrGZT12B0/+By9ZMLboDAryHjpiermanbPh5mTOq0q73YzruGQWU9TExg==",
        "shasum": "9518a6f75020db227d924f69d69e0e12a0911d99",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.35.1.tgz",
        "fileCount": 54,
        "unpackedSize": 197066,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFR1kXjFFb1XF7Hb7rcNR3qDeHwEYWCtkVSCEGGUx1C8AiBQMuXdzprifzfOPNqtxxopaAatRuc2OvgOojGqvdwsaw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj1+KNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrcww/9Hn1bJ0jk7TG3Om0Wv3vkehjAaVICEhCRTOnFYOGqMWL0i4Dv\r\ny6XM8mq8TihamOF53Pd79wv3eWq6qmmpWJh3Rlj/np9G09DoofLc8NkfFZ1r\r\n9T93hzkPuIM09Z+nb5OG+wvGc0ncQ1GWieNTJGWepBkGZScgLhwAAaUZvNId\r\nVWRj6pVH0+3ApDX1tp7K0xEEZG3Te+A0YJWI7MlBG0ug7R6zqX1/XTfsZJpV\r\nX4jxxZy+lAP7YmSdzy31+33PXJ2IBDY5q9/6xzjYTuqWcl1WtgVpDv/tC0Sv\r\nkBE7rG2BxrHg4F07r97i/iB2HFme6fnHLP/7u1sbG3oDxSgbe0PpkuGDmyDj\r\n3jfyGZ5aAzz7afuuNIuNOyQ1gt2JXdatfApuv+pgq27fhBRlpmBNqKjT0d/k\r\nL3F3UBgHFbO831nxSQpB4j+Gjz1k4/bbp9ME+dNQiUvH1JaJzKWN2/VGUI4S\r\nqZR3ZTp/2s4DVmfRBuCelTbhwMSN9fILXR5Off4KWIVrabuGEzNOCKfr3HQg\r\nKNXAlgbMVj2Zpxys4GNOYi6A8wYXHg+X6EqChh84nFoQCkKfj/ExDYJgcMcK\r\nOpMgTClNUO6m0+2KEAQg6NAhLnoteOXKqFkFLaReAT39UKsa5NMi+oJti/2k\r\ngSSPFA+ScJtrKf/mFovtwxRGkJGMmWmL8Fo=\r\n=jbcU\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.35.1_1675092620942_0.5408638688108676"
      },
      "_hasShrinkwrap": false
    },
    "0.36.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.36.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.10.0",
        "@opentelemetry/core": "1.10.0",
        "@opentelemetry/sdk-trace-base": "1.10.0",
        "@opentelemetry/sdk-trace-node": "1.10.0",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "4.1.2",
        "semver": "7.3.5",
        "sinon": "15.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.36.0",
        "@opentelemetry/semantic-conventions": "1.10.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "56e6b1bb890f844b8963a146780d0b9cfa8abd0d",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.36.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/6.0.3/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ztOZ4or2acDx6/PQoIq3oMjvA4hVwHb14IQE75CCEiQuO6IWcQvTibw/J+Ba8Ln1qrimMn6Y7WliP9GI0NneOw==",
        "shasum": "fc86882f4cae27dd49875b2b5ed6740b50d12174",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.36.0.tgz",
        "fileCount": 54,
        "unpackedSize": 203243,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC6e/cdj7O1skR0lXADlRc+L4YuDQIafkZfjPXodpzzigIhALSE6ciLhADOhZDVbUhTycn4eckVIgDwx3BEyVzYYaGs"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkD0cdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmph/w//TS91NOk1Rrysca31L/tThAYQRHvdqbz+iV6QDsuab+kKz8e/\r\nG9Ye6S6swBRTt8ytSO2c9s5aOf1+gxo57nxfimPeO0cNI8buIwXnvCcQPCSa\r\nq3FM+F8KIW8JjMJ+UBl8Y27ecukyKt4z0KSkY6Scp8GotE1hB7LEJQeE4OcT\r\n8B0JR0ijW2m0ZJqO6pTDkW1oOLkCiL56setrLpOhzkQtTQZdixZJAf+IKL1p\r\n/W5POFf6NXoAYR9tRlUrBZjIasOE0v273ajzAKzlxLOIn1G6rDxezEfDRfrY\r\nLJvRaU8sdx5HAEEyydOOt2mfU+VWOKfyKGn4VncdAbqzpvo20hhEueLXbtX1\r\nX8shH46MVClK0sx1ppGEfnUe757rrJatbu2gcD70z9SD03yG+Xt+29e08mgU\r\n9z9VXTogmfPVJu1Mo+Uq92Ga0+cyLlsUf7uYM94LEHdf4AWI1TT/um1x0YJD\r\nJY5ZwvUaUEmkq6gLCgSql69BJk+kXXxPG4hxmSwjTg7yZ611ecCBYvhUdwxL\r\nKbDemZjFdhqcfnAwLTPkOe/mRAxJlOcFFJROCiz+mvtd9B+srib0p6F/MMaM\r\nn+SC0+AIY1yTr8x5u1loUeN9bRrchxTNmqVyZFJ2QOFxdXaT9zZ8McmyW5b9\r\ng79HeN78byFwe241h0bcW6aAdROmzUuX0Zc=\r\n=Wd9x\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.36.0_1678722845146_0.560247581261583"
      },
      "_hasShrinkwrap": false
    },
    "0.36.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.36.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.10.1",
        "@opentelemetry/core": "1.10.1",
        "@opentelemetry/sdk-trace-base": "1.10.1",
        "@opentelemetry/sdk-trace-node": "1.10.1",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "4.1.2",
        "semver": "7.3.5",
        "sinon": "15.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.36.1",
        "@opentelemetry/semantic-conventions": "1.10.1"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "486df99906958de9b8b666839785b00160a6a229",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.36.1",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/6.0.3/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-advR1XRasogh7dsa//v9/yXgOu6YGVvcO3hHSipyAcK+GlTF/0ryt3MFl2noDGZMDObTN0KWWJlJlN1h4SHw9A==",
        "shasum": "d20c4bc1c001d05958e4e9a9a4808b5b562a39a9",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.36.1.tgz",
        "fileCount": 54,
        "unpackedSize": 203243,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICJ4/KQfoF015r01gjoFH87CLBeZLxbP7bO30hyqBREGAiAdV9ASVoVbn7fXx/w6O9Xtjv+2z12ZHZ9UiSad4sgKHg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkGIV+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrcTA//Y+hAM/FMerjUcEO7i28ruj/vRYEUZzvpb+kjMmScHH4rtsBV\r\nw40eqMvUxhpZVLSVDX6fiO/c64PoUDpq62AqKXEr5UWLP2Jw/W0a8PFnacSw\r\nvE5wjr8rcL2y5U8gRXMNmQZfhaOQkak7BUD0JacCx8VVQDtIqqN6ulnrbRjl\r\n9M6cd3nsetAoUBHC8BJD1j6kKbGF5Z5OFPb0Wl9IJcCrBhcKC7kIXVZT8TV8\r\nRldczj6AsbHfs4lc/reqANauZyQA9yJjJzP2SU5GtOvIOOFlydQg76YWUNCt\r\nyWyx9esOFWTw1TRwOBy51xr5uVqJG7USNblxQpzXSFnXRkQ2nquw7UCQdOtT\r\ndX6NQS2Y1Ys4uECOixYmx0ZTTIQLu4rTFVfmn2nj470LJBuIsnLssyKK8GDV\r\nENyz1yuHuS4dOaHE8Hthey8G1o7WuZ1n6OGjzdUBCtkM2VkqfUnIR3lfIF/J\r\n7PSWMlL9fzZubljnsmWeQkPtX1eVSghxikV4RX426FaZG82MoDL2VQn6LJkn\r\n8EBQTHdepemoIIhb2xXjM1F1WFJyx4WWx2qGEXnZEs9dSYX2+FsfFCLJ0nAo\r\nJB8chvaAqu7LT9nR9c4ka9LNhLioTa5KNs6ebwXCw4paXor6aGaN3dUGYSKc\r\nNd9PpGnM7WZGKN6yX+nk1K/xjK9IOGMW74o=\r\n=owK/\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.36.1_1679328638311_0.7380674262035831"
      },
      "_hasShrinkwrap": false
    },
    "0.37.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.37.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.11.0",
        "@opentelemetry/core": "1.11.0",
        "@opentelemetry/sdk-trace-base": "1.11.0",
        "@opentelemetry/sdk-trace-node": "1.11.0",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "4.1.2",
        "semver": "7.3.5",
        "sinon": "15.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.37.0",
        "@opentelemetry/semantic-conventions": "1.11.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "1328ee04ae78f9f6cf143af7050c00aaa6d2eb3b",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.37.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/6.0.3/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-8U65iB/imnpvxR2S4iDs580ui79lNVZvJ8k+DtZ2KMUJUpDUFt++WEOlTcSxBIJIG8fOtSy/9G6QJQxAHz0c1w==",
        "shasum": "a0b346ea6f668ef04e19e6aa8494132fa117f1a0",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.37.0.tgz",
        "fileCount": 54,
        "unpackedSize": 203243,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCfQW0Tew1ISd8JUBKca1OemiC6hOck8aRsRwhhKZe0WgIgRIiS03vaNu7hXdQ44LrwB/shW+A79oNlUd4ej/NTYuI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJaszACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrd7A//aKhzpCuJEyeZnYooJRVuy2YHloa0MXqH/RaxJDoGmA+NxSbo\r\n3+q/MMlkbpgGsikWoR6LOFw3CB8yZLqICSSK4l68EEUPDNq2x0sGLxf3u3iG\r\n8fB+VUr3JHlA0MqjVyLA6QFqk+FeJGvrVA4Sicbd3C+/+tnRf7c7+AW+pN7J\r\nUVeIHXQOYlEib5LaciVleA4H/Dg/4qVs9L87rIiheLhtuv/PEhepnXnzjNrD\r\naIrHD+ygRylEFh0NTubvISDycSyMNcs8D9qf77/rSw9SBfi3Z8e8Cla4uVlU\r\nRB/XFlEhWyR1BsV148P9FZSDg81oKm1EJuIX/Y9/2jrRzcavrqqcrGsDOzLa\r\nLyW9/kmbhN4Um7whZvKWo1eTpndKZTmUiZP0WFT1gqHcEw91NaxkCbz/riZp\r\nqSPcWwGFXeoa+/XyEYlASKoPsPJsrPJ/UJziZ06R+ZYb6Poa7exvcOqtkGSl\r\nknb+Qww39FJet5zZC00R8lXODZI5Tkt5kkpSvvCmJL1fpWwRYOX2sTV6QIZs\r\ndX4l+ocX/GIFanAWvaDmuH21ttBHUq2Hv3ogB1Eow3expgQJWDpcTUOXRzwu\r\n2I2CbnXPUulQJ/isb8vWT5sEelyCWHd+BeBPca9kblDycikwRR7NJAXq+IVB\r\nPbGv9wAXk2B1vlk9L7LidquAHRk8GAgg3RM=\r\n=PBF9\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.37.0_1680190258922_0.7895416878592803"
      },
      "_hasShrinkwrap": false
    },
    "0.38.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.38.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.12.0",
        "@opentelemetry/core": "1.12.0",
        "@opentelemetry/sdk-trace-base": "1.12.0",
        "@opentelemetry/sdk-trace-node": "1.12.0",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "rimraf": "4.1.2",
        "semver": "7.3.5",
        "sinon": "15.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.38.0",
        "@opentelemetry/semantic-conventions": "1.12.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "a04090010ee18e17487b449984807cc2b7b6e3e6",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.38.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/6.0.3/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-9mmCqzt+bZ6ejqvk8myzgaMInLUrablWbDMGQbyio9k4z9TDRnMNdCsbJrDWEJll3kcqDEUECBiH/t+BqnMmXQ==",
        "shasum": "5197cf7615fcf4c3a7ac7f3d4f18dcf3256f60f1",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.38.0.tgz",
        "fileCount": 54,
        "unpackedSize": 203243,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDyTc4RK5HPhcnXWoqCtw1wReuWIn8iJOu9xqBBnAKjGAiATdznUPpRd0PTVZ/nQ5tGlGj4rcQezoelaLWRi51OSfw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkOEZwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq/9A//RniYpJEeJSniTzvN/FKPpMBQ4qYhPbnaDWWHKe2/cFdGlLWc\r\nGoF06g5PcI/gbqQ3HPqq8sl/toINGWOq8baPjvQoo1Ja8FOECSGTHI71Yek4\r\nclEFwyCiPrvJUd7Dv4AiKqjXZ1ew1gWvJt2TpG4iWlyUqePJQdt71gaBdoxR\r\nyXRW1dI5Csj96taJY5D47XnT2hen35oSZ/26oiWQPNXKVaKgU1+XEWpAiSD7\r\nS3vn2/xsmZcfDjcqnfBCR7UEuPGwCoHRJnMjgxoh+pV65eONFCZ34y6jyDnX\r\n87MsOB9AmGlC1yw/ZKbsP0dQak7jDLtdj6DSm+aOa6IShy2L4K63n57uLhi2\r\nJGzASdzOF/35p9Aaxas8Uk82TS6Hcu6nd34MmaB0daYrF0vjffwqLDEa/Gr9\r\nAkxxsCpNNAEUoekg7JGEt/416yXPPD9388PLs1B7kjm24dCmIT5G4W6BdLdu\r\nKEtS8r5G93+F6zJG5tDaFMo6s3CSjvHU3O+sghSX+snu+qz20bh6C7iWmlQ5\r\n8HyhZ47PcJPvOVHoM/OM4uBT/CVSXRQafN8dvufcX8Ng/24cJurXS8/lmqEO\r\n587AEa2M4l2/A/nk8qckW4zbeF51EbuMLeg5BVTNatsPjFFkJZalUw2T/S3b\r\ngjNQbHfodmhLPY3/uJHXB5XT5y2UIE79yKA=\r\n=Dzgt\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.38.0_1681409648012_0.9571815504864396"
      },
      "_hasShrinkwrap": false
    },
    "0.39.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.39.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.13.0",
        "@opentelemetry/core": "1.13.0",
        "@opentelemetry/sdk-trace-base": "1.13.0",
        "@opentelemetry/sdk-trace-node": "1.13.0",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "semver": "7.3.5",
        "sinon": "15.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.39.0",
        "@opentelemetry/semantic-conventions": "1.13.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "8fc76896595aac912bf9e15d4f19c167317844c8",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.39.0",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "lerna/6.0.3/node@v18.12.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-s0k/Gl9Ze3gTXceJ+Rtk/6qrcvzf/j3lPERCFGvY3Hf3En7A2ZqIkDkji1BV1rxcJr8blNpAn0F9CtxqFQuOXQ==",
        "shasum": "c15620f61b47ed9af4cf39ef5a13ccd7e28bffa0",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.39.0.tgz",
        "fileCount": 54,
        "unpackedSize": 203220,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDXt6RUz/KwtPaO9vyZhtgaUpUQZOu83AfSSIZRbhl/MwIgGGGVfesx2A5VCM07ugob+dHAWtqo64cWw9+WIpd3gnE="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.39.0_1683811811566_0.22269881407225567"
      },
      "_hasShrinkwrap": false
    },
    "0.39.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.39.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.13.0",
        "@opentelemetry/core": "1.13.0",
        "@opentelemetry/sdk-trace-base": "1.13.0",
        "@opentelemetry/sdk-trace-node": "1.13.0",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "semver": "7.3.5",
        "sinon": "15.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.39.1",
        "@opentelemetry/semantic-conventions": "1.13.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "bba09c0e5a6d92fc71ed08028966ae9d56da53db",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.39.1",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "lerna/6.0.3/node@v18.12.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-Kw5sZTB6zvo7a515q2FhlK4tLLRwgzqt0niqozsOxtkiPUJCNcdVEoNn+US7MWtXeOB6BujEPwRu3WuDr+9wew==",
        "shasum": "70b7c0cf02c7fb3f429d3a2d3c586fcd93c1f992",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.39.1.tgz",
        "fileCount": 54,
        "unpackedSize": 203220,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDCxGq9V2wYnqiUKF4B0sTH7QRupBK9QPnYvx8pm96LXwIgdYBI3BXtnhoUsRLL8fqyZSD71GMpDLVwkKHFGyzOlXs="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.39.1_1683897176866_0.21120516628512997"
      },
      "_hasShrinkwrap": false
    },
    "0.40.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.40.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "lerna run version --scope $(npm pkg get name) --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "postinstall": "node -e \"console.log(\\\"\\x1b[95m%s\\x1b[0m\\\", \\\"@opentelemetry/instrumentation-grpc - warning: The package 'grpc' (https://www.npmjs.com/package/grpc) is deprecated. It will no longer be instrumented in the next release of '@opentelemetry/instrumentation-grpc'. Please migrate to '@grpc/grpc-js' (https://www.npmjs.com/package/@grpc/grpc-js) to continue receiving telemetry.\\\");\""
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.14.0",
        "@opentelemetry/core": "1.14.0",
        "@opentelemetry/sdk-trace-base": "1.14.0",
        "@opentelemetry/sdk-trace-node": "1.14.0",
        "@types/mocha": "10.0.0",
        "@types/node": "18.6.5",
        "@types/semver": "7.3.9",
        "@types/sinon": "10.0.13",
        "codecov": "3.8.3",
        "grpc": "1.24.11",
        "mocha": "10.0.0",
        "node-pre-gyp": "0.17.0",
        "nyc": "15.1.0",
        "semver": "7.3.5",
        "sinon": "15.0.0",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.40.0",
        "@opentelemetry/semantic-conventions": "1.14.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "edebbcc757535bc88f01340409dbbecc0bb6ccf8",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.40.0",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "lerna/6.0.3/node@v18.12.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-WDVX9AHdZmg/RArT55d8AN4QWy66osbyGJSKqmuLggF/AwLcMTOoKDdYiRLcAeG5jX5TaeBfsrPyDe1M+FaWFg==",
        "shasum": "726d1222111319f2a6e0dd6489e5873ac952738e",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.40.0.tgz",
        "fileCount": 54,
        "unpackedSize": 203632,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBdYb0FZCnxfDegesvWehbEY0f07/+vg+uAlsX29E//IAiEA/tPnMxIQpA27eZZA9zDAYT3PPnA1aIuyeQrothef8v8="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.40.0_1686031259177_0.45335051967384565"
      },
      "_hasShrinkwrap": false
    },
    "0.41.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.41.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.15.0",
        "@opentelemetry/core": "1.15.0",
        "@opentelemetry/sdk-trace-base": "1.15.0",
        "@opentelemetry/sdk-trace-node": "1.15.0",
        "@types/mocha": "10.0.1",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.0",
        "@types/sinon": "10.0.15",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "7.1.1",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.3",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.41.0",
        "@opentelemetry/semantic-conventions": "1.15.0",
        "tslib": "^2.3.1"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "06e919d6c909e8cc8e28b6624d9843f401d9b059",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.41.0",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "lerna/7.1.1/node@v18.12.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-kxuMqWxdE3ft/tNjVJZOHJjQYX4Z/u3D05Wnb8ZYE+PV2fn9GgwCGQSpng/RB98CeSK8/2BQY9S6ghZSRkOSXQ==",
        "shasum": "46dcd827d38f75db90dc7a54842094901ca68790",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.41.0.tgz",
        "fileCount": 42,
        "unpackedSize": 131900,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDQi3DWpCEg390UhGHNgmZ+RH4FERYtnsPss3xBjZeyOgIgEV8V6f2WA21rgzQrtFW+NJF/QBkBvUO/ILi7x5Kb3RU="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.41.0_1688642832165_0.3382828365594819"
      },
      "_hasShrinkwrap": false
    },
    "0.41.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.41.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.15.1",
        "@opentelemetry/core": "1.15.1",
        "@opentelemetry/sdk-trace-base": "1.15.1",
        "@opentelemetry/sdk-trace-node": "1.15.1",
        "@types/mocha": "10.0.1",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.0",
        "@types/sinon": "10.0.15",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "7.1.3",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.41.1",
        "@opentelemetry/semantic-conventions": "1.15.1"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "9f71800fdc2a5ee5055684037a12498af71955f2",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.41.1",
      "_nodeVersion": "18.4.0",
      "_npmVersion": "lerna/7.1.3/node@v18.4.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-qlij6b3XC+4YYKBJv/KF0IQRe2NAnRVjyv41YmgwNxMe9L6OLyC9qXAdn1upjcrR4V0vJ+JJf3pY0JT/3nxCdA==",
        "shasum": "570c2f23addebe45f92e6e566b0f00387bcd680e",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.41.1.tgz",
        "fileCount": 42,
        "unpackedSize": 132351,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHeNmeCaYAU2NeOifZikLXgGGqy0MKzZcXrntNXQegGQAiEA2soptZnINIpykIb+wycKci0GSh+ezEzWQvjcXs91Y7Y="
          }
        ]
      },
      "_npmUser": {
        "name": "dyladan",
        "email": "dyladan@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.41.1_1690209173478_0.3877286792342518"
      },
      "_hasShrinkwrap": false
    },
    "0.41.2": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.41.2",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.4.1",
        "@opentelemetry/context-async-hooks": "1.15.2",
        "@opentelemetry/core": "1.15.2",
        "@opentelemetry/sdk-trace-base": "1.15.2",
        "@opentelemetry/sdk-trace-node": "1.15.2",
        "@protobuf-ts/grpc-transport": "2.9.1",
        "@protobuf-ts/runtime": "2.9.1",
        "@protobuf-ts/runtime-rpc": "2.9.1",
        "@types/mocha": "10.0.1",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.0",
        "@types/sinon": "10.0.16",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "7.1.4",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.41.2",
        "@opentelemetry/semantic-conventions": "1.15.2"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "48fb15862e801b742059a3e39dbcc8ef4c10b2e2",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.41.2",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "lerna/7.1.4/node@v18.12.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-+fh9GUFv97p25CMreUv4OdP5L21hPgfX3d4fuQ0KIgIZIaX2M6/8cr5Ik+8zWsyhYzfFX3CKq6BXm3UBg7cswQ==",
        "shasum": "38b51eda1bcb6bf8d422410fa4596b56b03e98ab",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.41.2.tgz",
        "fileCount": 42,
        "unpackedSize": 150026,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE2w0RQ38hstfbOHTkLp3N27xOXC1q+oKYh3jDNlap+XAiEAv+9lWOCYuNFEm9e2p0pt2lBIgl5i+vSKXzPpc+pDceg="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.41.2_1691500894354_0.3699257092599486"
      },
      "_hasShrinkwrap": false
    },
    "0.42.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.42.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.5.0",
        "@opentelemetry/context-async-hooks": "1.16.0",
        "@opentelemetry/core": "1.16.0",
        "@opentelemetry/sdk-trace-base": "1.16.0",
        "@opentelemetry/sdk-trace-node": "1.16.0",
        "@protobuf-ts/grpc-transport": "2.9.1",
        "@protobuf-ts/runtime": "2.9.1",
        "@protobuf-ts/runtime-rpc": "2.9.1",
        "@types/mocha": "10.0.1",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.1",
        "@types/sinon": "10.0.16",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "7.1.5",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.42.0",
        "@opentelemetry/semantic-conventions": "1.16.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "5fcd8cf136e2235903dde3df9ba03ced594f0e95",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.42.0",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "lerna/7.1.5/node@v18.12.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-Fz7FHqQuKWVzMpvF3XsJFzDOB1hnVGKhaLK5Pr1FJVFlR9YWYqS4IUA8wZ1jc4tgl30vBFMQZFvKGQU9/S7XYw==",
        "shasum": "001152a1edd8954e97171ac49e45fbeca44a60f9",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.42.0.tgz",
        "fileCount": 42,
        "unpackedSize": 150026,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCbdB5KhINbu2nT64l/ADiN0mU4dvcPwBal/3PgNza59wIgTnpWQlmJgn1kMyvWq4e8Lu+m1s3XgKF8GnLq7RvOWko="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.42.0_1694434489653_0.7238292888925109"
      },
      "_hasShrinkwrap": false
    },
    "0.43.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.43.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.3",
        "@opentelemetry/api": "1.6.0",
        "@opentelemetry/context-async-hooks": "1.17.0",
        "@opentelemetry/core": "1.17.0",
        "@opentelemetry/sdk-trace-base": "1.17.0",
        "@opentelemetry/sdk-trace-node": "1.17.0",
        "@protobuf-ts/grpc-transport": "2.9.1",
        "@protobuf-ts/runtime": "2.9.1",
        "@protobuf-ts/runtime-rpc": "2.9.1",
        "@types/mocha": "10.0.1",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.1",
        "@types/sinon": "10.0.16",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "7.1.5",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.43.0",
        "@opentelemetry/semantic-conventions": "1.17.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "faf939c77591f709afbc23fadbe629c9d3607ef6",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.43.0",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "lerna/7.1.5/node@v18.12.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-iiFDYCwSbI5qeW7m/b9CyPlqdt3accmuqDXuMuHq38WEgImP8AKeb0xpdVErRjQ93V4ATRaeM8Jiw2MAzvbBLw==",
        "shasum": "947f1b3430d28de2ab80ab8cc8b146489bbdf27b",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.43.0.tgz",
        "fileCount": 42,
        "unpackedSize": 150026,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFxMhP21n2SJcFH+XNXcFaEazJ9hqxSmxATRb79atbQAAiAwqnFZLbUtFWXFyzOOSGpgtwh0LG7XokkUbshG2KAPQg=="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.43.0_1694524359062_0.40778159896541255"
      },
      "_hasShrinkwrap": false
    },
    "0.44.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.44.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.10",
        "@opentelemetry/api": "1.6.0",
        "@opentelemetry/context-async-hooks": "1.17.1",
        "@opentelemetry/core": "1.17.1",
        "@opentelemetry/sdk-trace-base": "1.17.1",
        "@opentelemetry/sdk-trace-node": "1.17.1",
        "@protobuf-ts/grpc-transport": "2.9.1",
        "@protobuf-ts/runtime": "2.9.1",
        "@protobuf-ts/runtime-rpc": "2.9.1",
        "@types/mocha": "10.0.2",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.3",
        "@types/sinon": "10.0.18",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "7.1.5",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.44.0",
        "@opentelemetry/semantic-conventions": "1.17.1"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "f8e187b473274cc2011e7385992f07d319d667dc",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.44.0",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "lerna/7.1.5/node@v18.12.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-ddj0cmC9mdyOTF2dieslRWsXvCeamGM3KGpYyFwdXBKwPnVCD5Y8zSCSplqIgqIU7B8avPHaHlPU9Li2OxMQjw==",
        "shasum": "5305f015cfb58a413476620ebc9a189691dc6355",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.44.0.tgz",
        "fileCount": 42,
        "unpackedSize": 150027,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFfkt0g5VDa9HesRZdW55v/z0IYkPyFLx5pfA+t2R0cEAiEArxhQWtHVU+2xM9iEOqBMrLwTgdVOpiZtKurZMoeqigQ="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.44.0_1696947503575_0.6381872260646819"
      },
      "_hasShrinkwrap": false
    },
    "0.45.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.45.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.10",
        "@opentelemetry/api": "1.7.0",
        "@opentelemetry/context-async-hooks": "1.18.0",
        "@opentelemetry/core": "1.18.0",
        "@opentelemetry/sdk-trace-base": "1.18.0",
        "@opentelemetry/sdk-trace-node": "1.18.0",
        "@protobuf-ts/grpc-transport": "2.9.1",
        "@protobuf-ts/runtime": "2.9.1",
        "@protobuf-ts/runtime-rpc": "2.9.1",
        "@types/mocha": "10.0.3",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.4",
        "@types/sinon": "10.0.20",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "6.6.2",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.45.0",
        "@opentelemetry/semantic-conventions": "1.18.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "73b446688f10fd8dc4cf403a085f0a39070df7b4",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.45.0",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "lerna/6.6.2/node@v18.18.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-NN9Td2RXP1nyADlKnu7ZJhHu2+Q1PAfk4iOhdMoOxSsxjzoIu+93Fhw7RtzMdA0xXCeplfCi9xoR8szncrNt1g==",
        "shasum": "f50190a0391641ca97c2a2aacd903729f46225b1",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.45.0.tgz",
        "fileCount": 42,
        "unpackedSize": 150027,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDFbkp8fGASA4WPMTdRW4040UWvnDb7CoiFBChguC5uxwIhAJo6IKSQjF3e0R0JCviJsGAk0tsKtWPbsjY8g+yOon4V"
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.45.0_1699353890654_0.6290903522053088"
      },
      "_hasShrinkwrap": false
    },
    "0.45.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.45.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.10",
        "@opentelemetry/api": "1.7.0",
        "@opentelemetry/context-async-hooks": "1.18.1",
        "@opentelemetry/core": "1.18.1",
        "@opentelemetry/sdk-trace-base": "1.18.1",
        "@opentelemetry/sdk-trace-node": "1.18.1",
        "@protobuf-ts/grpc-transport": "2.9.1",
        "@protobuf-ts/runtime": "2.9.1",
        "@protobuf-ts/runtime-rpc": "2.9.1",
        "@types/mocha": "10.0.3",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.4",
        "@types/sinon": "10.0.20",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "6.6.2",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.45.1",
        "@opentelemetry/semantic-conventions": "1.18.1"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "f665499096189390e691cf1a772e677fa67812d7",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.45.1",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "lerna/6.6.2/node@v18.18.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-KyssKMi+cMAWc+9buGs7nHjnHm4wQPH99etunFblZCKQlzgPB+s8Q6aIlJ3LCkCaOGAhofpr4IkWh7dMcapJJQ==",
        "shasum": "e4ae7285d8fff0d7c93db1c9c1e7b0164748520f",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.45.1.tgz",
        "fileCount": 42,
        "unpackedSize": 150027,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3YGr4IL8pEZkstXDl3zMRRZJQdMzE9dzRHFJylZTDwwIhAJbbnMaMlflBxOYmMDeWN8i6RZu1dg3BuvcJtyiWGFmr"
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.45.1_1699466955365_0.02591875299097479"
      },
      "_hasShrinkwrap": false
    },
    "0.46.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.46.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.10",
        "@opentelemetry/api": "1.7.0",
        "@opentelemetry/context-async-hooks": "1.19.0",
        "@opentelemetry/core": "1.19.0",
        "@opentelemetry/sdk-trace-base": "1.19.0",
        "@opentelemetry/sdk-trace-node": "1.19.0",
        "@protobuf-ts/grpc-transport": "2.9.3",
        "@protobuf-ts/runtime": "2.9.3",
        "@protobuf-ts/runtime-rpc": "2.9.3",
        "@types/mocha": "10.0.6",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.6",
        "@types/sinon": "10.0.20",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "6.6.2",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.46.0",
        "@opentelemetry/semantic-conventions": "1.19.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "d3c311aec24137084dc820805a2597e120335672",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.46.0",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "lerna/6.6.2/node@v18.18.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-KemIpB4jmywQv/+MbVoUIMVp3vr+rzra37TYbN7kTsbrn213YlzdXVamf6nq/yChI6q+9JlUnCdSZf86D6NO6g==",
        "shasum": "8ce252fe7cb4749ee45e29b3a17fb52960d479ae",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.46.0.tgz",
        "fileCount": 42,
        "unpackedSize": 150027,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIC2hltjnaraZ2TB3LslGKjdP6d6t+qEUc2SasX/w1ThvAiEAvoIqmdDj/6lwn2Jz8MzJiETPBLR3NNdRY8I9leOsHyU="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.46.0_1702557335082_0.057237925330633654"
      },
      "_hasShrinkwrap": false
    },
    "0.47.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.47.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.10",
        "@opentelemetry/api": "1.7.0",
        "@opentelemetry/context-async-hooks": "1.20.0",
        "@opentelemetry/core": "1.20.0",
        "@opentelemetry/sdk-trace-base": "1.20.0",
        "@opentelemetry/sdk-trace-node": "1.20.0",
        "@protobuf-ts/grpc-transport": "2.9.3",
        "@protobuf-ts/runtime": "2.9.3",
        "@protobuf-ts/runtime-rpc": "2.9.3",
        "@types/mocha": "10.0.6",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.6",
        "@types/sinon": "10.0.20",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "6.6.2",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.47.0",
        "@opentelemetry/semantic-conventions": "1.20.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "57008533aba7ccd51ea80f38ff4f29404d47eb9c",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.47.0",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/6.6.2/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-JPLoAMdqF8LTsX7oz5mO33bXQe8lPfTkHntwF/m7wKHSbCvStjdKTCTWH+KXwQPOa4X/sBN6y8679OgQWPg6dg==",
        "shasum": "df32099ba4a232420b3a9e812a05b0788cb94517",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.47.0.tgz",
        "fileCount": 42,
        "unpackedSize": 150027,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICLdOt0ngzx7a3JpK96MUMJDQOX2+naRN50ZWf86f2RVAiEAvoYXKaUGsmLm6OO8LUj3xmloBU01brzkVHaYh91ApBs="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.47.0_1705313752790_0.8749822878119176"
      },
      "_hasShrinkwrap": false
    },
    "0.48.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.48.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.10",
        "@opentelemetry/api": "1.7.0",
        "@opentelemetry/context-async-hooks": "1.21.0",
        "@opentelemetry/core": "1.21.0",
        "@opentelemetry/sdk-trace-base": "1.21.0",
        "@opentelemetry/sdk-trace-node": "1.21.0",
        "@protobuf-ts/grpc-transport": "2.9.3",
        "@protobuf-ts/runtime": "2.9.3",
        "@protobuf-ts/runtime-rpc": "2.9.3",
        "@types/mocha": "10.0.6",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.6",
        "@types/sinon": "10.0.20",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "6.6.2",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.48.0",
        "@opentelemetry/semantic-conventions": "1.21.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "828f2ed730e4d26d71f92e220f96b60a552a673a",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.48.0",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/6.6.2/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-MmJHkbqaulqfECjotRtco9AXOq+D1HLq53wI7UFeE8bl8kISP9iMkt+A7PrtPFpRGCglwFvSa0djId6EWsP0DQ==",
        "shasum": "4025e672037aa756aa36090ccc3fc08b909de598",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.48.0.tgz",
        "fileCount": 42,
        "unpackedSize": 150027,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDBSUdnLzRhL2QlVEg7iBLEhFwf5BMM/xbuX8o+Hj1XnAiBHVFcvahOttivmzugA+s/qHHWNWkFTVdvURZj1Rw6G+g=="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.48.0_1706249473090_0.7409371766224762"
      },
      "_hasShrinkwrap": false
    },
    "0.49.0": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.49.0",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.10",
        "@opentelemetry/api": "1.8.0",
        "@opentelemetry/context-async-hooks": "1.22.0",
        "@opentelemetry/core": "1.22.0",
        "@opentelemetry/sdk-trace-base": "1.22.0",
        "@opentelemetry/sdk-trace-node": "1.22.0",
        "@protobuf-ts/grpc-transport": "2.9.3",
        "@protobuf-ts/runtime": "2.9.3",
        "@protobuf-ts/runtime-rpc": "2.9.3",
        "@types/mocha": "10.0.6",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.6",
        "@types/sinon": "10.0.20",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "6.6.2",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.49.0",
        "@opentelemetry/semantic-conventions": "1.22.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "7be35c7845e206b27b682e8ce1cee850b09cec04",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.49.0",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/6.6.2/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-+7r6bRmYT6zNl8DANjRoUeLhBc0EXb+O0y1xO8/8zI9fl65abC9ff1sdPoY+ZsKqcUlqHSKbIZgKippKDlAFbg==",
        "shasum": "02b1a5c572bcb69a2f86ce503d6de37e06bde8d8",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.49.0.tgz",
        "fileCount": 36,
        "unpackedSize": 141288,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFb5NrIodBtoHLDOwyAkYqYkWjsodmrt/LQ10dMzpFotAiA8HPcdvQN+/iOFrcP7s/5kL9Hc3XJSAjMPiwxP+eZJAA=="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.49.0_1709198299694_0.13681182649140733"
      },
      "_hasShrinkwrap": false
    },
    "0.49.1": {
      "name": "@opentelemetry/instrumentation-grpc",
      "version": "0.49.1",
      "description": "OpenTelemetry grpc automatic instrumentation package.",
      "main": "build/src/index.js",
      "types": "build/src/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
      },
      "scripts": {
        "prepublishOnly": "npm run compile",
        "compile": "tsc --build",
        "clean": "tsc --build --clean",
        "test": "npm run protos:generate && nyc ts-mocha -p tsconfig.json test/**/*.test.ts",
        "tdd": "npm run test -- --watch-extensions ts --watch",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "codecov": "nyc report --reporter=json && codecov -f coverage/*.json -p ../../../",
        "version": "node ../../../scripts/version-update.js",
        "watch": "tsc --build --watch",
        "precompile": "cross-var lerna run version --scope $npm_package_name --include-dependencies",
        "prewatch": "node ../../../scripts/version-update.js",
        "peer-api-check": "node ../../../scripts/peer-api-check.js",
        "protos:generate": "cd test/fixtures && buf generate"
      },
      "keywords": [
        "opentelemetry",
        "grpc",
        "nodejs",
        "tracing",
        "profiling",
        "instrumentation"
      ],
      "author": {
        "name": "OpenTelemetry Authors"
      },
      "license": "Apache-2.0",
      "engines": {
        "node": ">=14"
      },
      "publishConfig": {
        "access": "public"
      },
      "devDependencies": {
        "@bufbuild/buf": "1.21.0-1",
        "@grpc/grpc-js": "^1.7.1",
        "@grpc/proto-loader": "^0.7.10",
        "@opentelemetry/api": "1.8.0",
        "@opentelemetry/context-async-hooks": "1.22.0",
        "@opentelemetry/core": "1.22.0",
        "@opentelemetry/sdk-trace-base": "1.22.0",
        "@opentelemetry/sdk-trace-node": "1.22.0",
        "@protobuf-ts/grpc-transport": "2.9.3",
        "@protobuf-ts/runtime": "2.9.3",
        "@protobuf-ts/runtime-rpc": "2.9.3",
        "@types/mocha": "10.0.6",
        "@types/node": "18.6.5",
        "@types/semver": "7.5.6",
        "@types/sinon": "10.0.20",
        "codecov": "3.8.3",
        "cross-var": "1.1.0",
        "lerna": "6.6.2",
        "mocha": "10.2.0",
        "nyc": "15.1.0",
        "semver": "7.5.4",
        "sinon": "15.1.2",
        "ts-mocha": "10.0.0",
        "typescript": "4.4.4"
      },
      "peerDependencies": {
        "@opentelemetry/api": "^1.3.0"
      },
      "dependencies": {
        "@opentelemetry/instrumentation": "0.49.1",
        "@opentelemetry/semantic-conventions": "1.22.0"
      },
      "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
      "sideEffects": false,
      "gitHead": "3920b158d08daa776280bde68a79e44bafa4e8ea",
      "bugs": {
        "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
      },
      "_id": "@opentelemetry/instrumentation-grpc@0.49.1",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/6.6.2/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-f8mQjFi5/PiP4SK3VDU1/3sUUgs6exMtBgcnNycgCKgN40htiPT+MuDRwdRnRMNI/4vNQ7p1/5r4Q5oN0GuRBw==",
        "shasum": "0e84daec5eeec54e2baf9b65df4b6072415e7d02",
        "tarball": "https://registry.npmjs.org/@opentelemetry/instrumentation-grpc/-/instrumentation-grpc-0.49.1.tgz",
        "fileCount": 36,
        "unpackedSize": 141288,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEmekwfNig+VQTuObQnMsALP2Wzo3vMoftLwoEIVcK/JAiBMFqZW2l77cQpSRD4WJ1/4wvSKc/d9Vd9TGccd/aKylg=="
          }
        ]
      },
      "_npmUser": {
        "name": "pichlermarc",
        "email": "marc.pichler@dynatrace.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "pichlermarc",
          "email": "marc.pichler@dynatrace.com"
        },
        {
          "name": "bogdandrutu",
          "email": "bogdandrutu@gmail.com"
        },
        {
          "name": "dyladan",
          "email": "dyladan@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/instrumentation-grpc_0.49.1_1709214972599_0.4323917504065198"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2021-01-21T22:20:08.255Z",
    "0.15.0": "2021-01-21T22:20:08.547Z",
    "modified": "2024-02-29T13:56:13.295Z",
    "0.16.0": "2021-02-01T22:33:33.144Z",
    "0.16.1-alpha.6": "2021-02-05T20:14:54.000Z",
    "0.16.1-alpha.10": "2021-02-08T15:50:01.789Z",
    "0.16.1-alpha.11": "2021-02-08T16:18:09.496Z",
    "0.16.1-alpha.12": "2021-02-08T20:10:54.284Z",
    "0.16.1-alpha.14": "2021-02-10T16:06:14.344Z",
    "0.16.1-alpha.15": "2021-02-10T22:18:18.461Z",
    "0.16.1-alpha.16": "2021-02-11T13:50:10.939Z",
    "0.16.1-alpha.18": "2021-02-14T18:12:22.447Z",
    "0.16.1-alpha.20": "2021-02-17T20:52:04.937Z",
    "0.17.0": "2021-02-17T21:16:12.264Z",
    "0.17.1-alpha.21": "2021-02-17T21:16:59.260Z",
    "0.17.1-alpha.2": "2021-02-20T17:37:16.897Z",
    "0.17.1-alpha.3": "2021-02-22T20:48:52.966Z",
    "0.17.1-alpha.5": "2021-02-24T17:19:48.041Z",
    "0.17.1-alpha.8": "2021-03-01T13:38:24.725Z",
    "0.17.1-alpha.10": "2021-03-02T13:21:58.472Z",
    "0.17.1-alpha.11": "2021-03-02T13:31:41.933Z",
    "0.18.1-alpha.12": "2021-03-02T13:54:06.795Z",
    "0.18.0": "2021-03-02T14:01:07.959Z",
    "0.18.1-alpha.3": "2021-03-02T19:09:18.215Z",
    "0.18.1-alpha.7": "2021-03-10T18:31:28.728Z",
    "0.18.1-alpha.11": "2021-03-12T11:52:58.911Z",
    "0.18.1-alpha.13": "2021-03-18T16:25:50.181Z",
    "0.18.1-alpha.16": "2021-03-22T13:11:29.597Z",
    "0.18.1-alpha.20": "2021-03-24T13:11:04.491Z",
    "0.18.1-alpha.21": "2021-03-24T14:13:03.611Z",
    "0.18.1-alpha.23": "2021-03-24T19:16:59.931Z",
    "0.18.1-alpha.24": "2021-03-24T19:38:51.264Z",
    "0.18.1-alpha.26": "2021-03-24T20:08:52.600Z",
    "0.18.2-alpha.81": "2021-03-29T19:52:25.990Z",
    "0.18.1": "2021-03-29T20:04:08.138Z",
    "0.18.2-alpha.1": "2021-03-30T13:06:19.033Z",
    "0.18.3-alpha.2": "2021-03-30T15:27:15.488Z",
    "0.18.2": "2021-03-30T16:15:48.153Z",
    "0.18.3-alpha.1": "2021-03-30T17:29:44.058Z",
    "0.18.3-alpha.3": "2021-03-31T07:37:53.568Z",
    "0.18.3-alpha.4": "2021-04-05T16:38:02.090Z",
    "0.18.3-alpha.5": "2021-04-05T17:54:56.479Z",
    "0.18.3-alpha.7": "2021-04-07T16:12:26.950Z",
    "0.18.3-alpha.9": "2021-04-08T13:14:20.568Z",
    "0.18.3-alpha.10": "2021-04-08T14:25:17.809Z",
    "0.18.3-alpha.11": "2021-04-08T20:21:42.628Z",
    "0.18.3-alpha.14": "2021-04-09T09:11:24.995Z",
    "0.18.3-alpha.15": "2021-04-09T09:36:25.047Z",
    "0.18.3-alpha.16": "2021-04-09T20:07:52.716Z",
    "0.18.3-alpha.17": "2021-04-10T09:33:39.194Z",
    "0.18.3-alpha.18": "2021-04-10T19:00:45.185Z",
    "0.18.3-alpha.20": "2021-04-12T15:08:45.238Z",
    "0.18.3-alpha.23": "2021-04-12T18:12:43.137Z",
    "0.18.3-alpha.25": "2021-04-12T19:42:34.705Z",
    "0.18.3-alpha.27": "2021-04-13T19:54:52.689Z",
    "0.18.3-alpha.28": "2021-04-14T07:51:36.079Z",
    "0.18.3-alpha.29": "2021-04-14T10:35:16.704Z",
    "0.18.3-alpha.30": "2021-04-19T17:01:32.065Z",
    "0.18.3-alpha.31": "2021-04-20T15:48:37.419Z",
    "0.18.3-alpha.33": "2021-04-20T16:08:10.595Z",
    "0.18.3-alpha.35": "2021-04-21T15:48:06.390Z",
    "0.19.1-alpha.36": "2021-04-22T12:19:51.108Z",
    "0.19.0": "2021-04-22T12:28:47.495Z",
    "0.19.1-alpha.37": "2021-04-22T18:16:01.070Z",
    "0.19.1-alpha.39": "2021-04-22T18:45:08.401Z",
    "0.19.1-alpha.40": "2021-04-23T13:03:09.937Z",
    "0.19.1-alpha.42": "2021-04-26T19:00:42.931Z",
    "0.19.1-alpha.7": "2021-04-28T16:13:40.847Z",
    "0.19.1-alpha.9": "2021-04-29T08:17:24.593Z",
    "0.19.1-alpha.11": "2021-04-29T21:07:16.455Z",
    "0.19.1-alpha.12": "2021-04-30T20:49:40.893Z",
    "0.19.1-alpha.13": "2021-05-01T07:05:47.729Z",
    "0.19.1-alpha.14": "2021-05-01T07:37:59.385Z",
    "0.19.1-alpha.15": "2021-05-03T12:26:16.433Z",
    "0.19.1-alpha.17": "2021-05-03T19:54:04.168Z",
    "0.19.1-alpha.18": "2021-05-04T17:07:40.547Z",
    "0.19.1-alpha.19": "2021-05-08T07:53:46.124Z",
    "0.19.1-alpha.21": "2021-05-11T18:49:55.457Z",
    "0.19.1-alpha.22": "2021-05-11T19:08:17.991Z",
    "0.19.1-alpha.23": "2021-05-11T20:13:14.271Z",
    "0.19.1-alpha.24": "2021-05-12T07:39:53.743Z",
    "0.19.1-alpha.25": "2021-05-12T15:53:44.455Z",
    "0.19.1-alpha.26": "2021-05-12T16:06:41.542Z",
    "0.19.1-alpha.27": "2021-05-13T10:01:12.796Z",
    "0.19.1-alpha.28": "2021-05-13T10:15:13.818Z",
    "0.19.1-alpha.29": "2021-05-13T10:24:22.385Z",
    "0.19.1-alpha.31": "2021-05-19T18:06:54.854Z",
    "0.19.1-alpha.33": "2021-05-20T12:11:54.962Z",
    "0.19.1-alpha.38": "2021-05-26T15:02:46.403Z",
    "0.19.1-alpha.41": "2021-05-27T17:55:49.257Z",
    "0.19.1-alpha.43": "2021-06-01T19:45:47.989Z",
    "0.19.1-alpha.44": "2021-06-01T20:21:10.225Z",
    "0.20.1-alpha.49": "2021-06-03T17:09:47.105Z",
    "0.20.0": "2021-06-03T18:28:32.821Z",
    "0.20.1-alpha.3": "2021-06-05T08:29:05.023Z",
    "0.20.1-alpha.4": "2021-06-08T13:27:44.435Z",
    "0.20.1-alpha.5": "2021-06-09T17:12:08.627Z",
    "0.21.1-alpha.7": "2021-06-10T17:26:00.242Z",
    "0.21.0": "2021-06-10T18:29:48.048Z",
    "0.21.1-alpha.1": "2021-06-12T08:24:36.626Z",
    "0.21.1-alpha.2": "2021-06-12T08:35:10.559Z",
    "0.21.1-alpha.3": "2021-06-16T12:58:57.115Z",
    "0.22.1-alpha.5": "2021-06-17T17:05:07.592Z",
    "0.22.0": "2021-06-17T17:58:36.399Z",
    "0.22.1-alpha.2": "2021-06-23T15:48:52.373Z",
    "0.22.1-alpha.3": "2021-06-23T16:04:48.954Z",
    "0.22.1-alpha.8": "2021-06-30T12:48:13.925Z",
    "0.22.1-alpha.9": "2021-06-30T13:04:10.684Z",
    "0.22.1-alpha.13": "2021-06-30T18:40:22.040Z",
    "0.22.1-alpha.14": "2021-06-30T18:53:49.415Z",
    "0.22.1-alpha.15": "2021-06-30T19:08:38.232Z",
    "0.22.1-alpha.16": "2021-06-30T19:48:43.957Z",
    "0.23.1-alpha.17": "2021-06-30T20:07:32.471Z",
    "0.23.0": "2021-06-30T20:14:52.539Z",
    "0.23.1-alpha.18": "2021-07-02T14:38:00.755Z",
    "0.23.1-alpha.3": "2021-07-05T22:27:25.429Z",
    "0.23.1-alpha.12": "2021-07-17T08:48:37.658Z",
    "0.23.1-alpha.15": "2021-07-17T09:18:02.137Z",
    "0.23.1-alpha.16": "2021-07-17T09:25:28.029Z",
    "0.23.1-alpha.23": "2021-07-23T17:46:09.425Z",
    "0.23.1-alpha.24": "2021-07-25T06:45:10.100Z",
    "0.23.1-alpha.28": "2021-07-27T19:44:08.079Z",
    "0.24.1-alpha.31": "2021-07-28T14:07:03.344Z",
    "0.24.0": "2021-07-28T14:14:01.687Z",
    "0.24.1-alpha.1": "2021-07-30T19:42:27.942Z",
    "0.24.1-alpha.4": "2021-08-05T19:28:11.109Z",
    "0.24.1-alpha.5": "2021-08-06T11:31:23.455Z",
    "0.24.1-alpha.6": "2021-08-06T13:37:55.988Z",
    "0.24.1-alpha.7": "2021-08-07T13:32:47.008Z",
    "0.24.1-alpha.8": "2021-08-07T13:41:29.104Z",
    "0.24.1-alpha.9": "2021-08-07T14:10:02.770Z",
    "0.24.1-alpha.14": "2021-08-11T14:50:41.152Z",
    "0.24.1-alpha.18": "2021-08-14T08:16:01.079Z",
    "0.24.1-alpha.19": "2021-08-16T17:58:54.661Z",
    "0.24.1-alpha.20": "2021-08-17T21:06:54.046Z",
    "0.25.1-alpha.21": "2021-08-18T20:16:29.931Z",
    "0.25.0": "2021-08-18T21:16:44.260Z",
    "0.25.1-alpha.1": "2021-08-23T21:19:27.863Z",
    "0.25.1-alpha.2": "2021-08-23T21:40:57.916Z",
    "0.25.1-alpha.4": "2021-08-24T19:33:04.420Z",
    "0.25.1-alpha.7": "2021-08-27T18:19:56.175Z",
    "0.25.1-alpha.12": "2021-08-30T20:21:56.937Z",
    "0.25.1-alpha.13": "2021-08-30T20:41:18.277Z",
    "0.25.1-alpha.16": "2021-09-04T08:05:07.922Z",
    "0.25.1-alpha.22": "2021-09-08T14:50:12.914Z",
    "0.25.1-alpha.23": "2021-09-08T22:14:59.802Z",
    "0.26.0": "2021-10-05T17:41:00.177Z",
    "0.27.0": "2021-11-11T15:07:42.581Z",
    "0.28.0": "2022-04-22T14:57:01.184Z",
    "0.29.0": "2022-05-27T19:41:22.200Z",
    "0.29.1": "2022-06-01T18:13:03.832Z",
    "0.29.2": "2022-06-06T20:26:11.329Z",
    "0.30.0": "2022-07-06T20:15:36.009Z",
    "0.31.0": "2022-07-26T20:52:13.194Z",
    "0.32.0": "2022-08-24T17:44:38.028Z",
    "0.33.0": "2022-09-16T12:15:00.532Z",
    "0.34.0": "2022-11-09T19:45:36.912Z",
    "0.35.0": "2023-01-11T21:46:32.974Z",
    "0.35.1": "2023-01-30T15:30:21.129Z",
    "0.36.0": "2023-03-13T15:54:05.340Z",
    "0.36.1": "2023-03-20T16:10:38.480Z",
    "0.37.0": "2023-03-30T15:30:59.069Z",
    "0.38.0": "2023-04-13T18:14:08.218Z",
    "0.39.0": "2023-05-11T13:30:11.782Z",
    "0.39.1": "2023-05-12T13:12:57.074Z",
    "0.40.0": "2023-06-06T06:00:59.383Z",
    "0.41.0": "2023-07-06T11:27:12.377Z",
    "0.41.1": "2023-07-24T14:32:53.653Z",
    "0.41.2": "2023-08-08T13:21:34.601Z",
    "0.42.0": "2023-09-11T12:14:49.838Z",
    "0.43.0": "2023-09-12T13:12:39.257Z",
    "0.44.0": "2023-10-10T14:18:23.802Z",
    "0.45.0": "2023-11-07T10:44:50.839Z",
    "0.45.1": "2023-11-08T18:09:15.603Z",
    "0.46.0": "2023-12-14T12:35:35.240Z",
    "0.47.0": "2024-01-15T10:15:52.979Z",
    "0.48.0": "2024-01-26T06:11:13.253Z",
    "0.49.0": "2024-02-29T09:18:19.850Z",
    "0.49.1": "2024-02-29T13:56:12.782Z"
  },
  "maintainers": [
    {
      "name": "pichlermarc",
      "email": "marc.pichler@dynatrace.com"
    },
    {
      "name": "bogdandrutu",
      "email": "bogdandrutu@gmail.com"
    },
    {
      "name": "dyladan",
      "email": "dyladan@gmail.com"
    }
  ],
  "description": "OpenTelemetry grpc automatic instrumentation package.",
  "homepage": "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc",
  "keywords": [
    "opentelemetry",
    "grpc",
    "nodejs",
    "tracing",
    "profiling",
    "instrumentation"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/open-telemetry/opentelemetry-js.git"
  },
  "author": {
    "name": "OpenTelemetry Authors"
  },
  "bugs": {
    "url": "https://github.com/open-telemetry/opentelemetry-js/issues"
  },
  "license": "Apache-2.0",
  "readme": "# OpenTelemetry gRPC Instrumentation for Node.js\n\n[![NPM Published Version][npm-img]][npm-url]\n[![Apache License][license-image]][license-image]\n\n**Note: This is an experimental package under active development. New releases may include breaking changes.**\n\nThis module provides automatic instrumentation for [`@grpc/grpc-js`](https://grpc.io/blog/grpc-js-1.0/). Currently, version [`1.x`](https://www.npmjs.com/package/@grpc/grpc-js?activeTab=versions) of `@grpc/grpc-js` is supported.\n\nFor automatic instrumentation see the\n[@opentelemetry/sdk-trace-node](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node) package.\n\n## Installation\n\n```sh\nnpm install --save @opentelemetry/instrumentation-grpc\n```\n\n## Usage\n\nOpenTelemetry gRPC Instrumentation allows the user to automatically collect trace data and export them to the backend of choice, to give observability to distributed systems when working with ([grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)).\n\nTo load a specific instrumentation (**gRPC** in this case), specify it in the Node Tracer's configuration.\n\n```javascript\nconst { NodeTracerProvider } = require('@opentelemetry/sdk-trace-node');\nconst { GrpcInstrumentation } = require('@opentelemetry/instrumentation-grpc');\nconst { registerInstrumentations } = require('@opentelemetry/instrumentation');\n\nconst provider = new NodeTracerProvider();\n\nprovider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter()));\nprovider.register();\n\nregisterInstrumentations({\n  instrumentations: [new GrpcInstrumentation()]\n});\n\n```\n\nSee [examples/grpc-js](https://github.com/open-telemetry/opentelemetry-js/tree/main/examples/grpc-js) for examples.\n\n### gRPC Instrumentation Options\n\ngRPC instrumentation accepts the following configuration:\n\n| Options                                                                                                                                                              | Type              | Description                                                                                                                                                                                                                                                                          |\n| -------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| [`ignoreGrpcMethods`](https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/opentelemetry-instrumentation-grpc/src/types.ts#L25)        | `IgnoreMatcher[]` | gRPC instrumentation will not trace any methods that match anything in this list. You may pass a string (case-insensitive match), a `RegExp` object, or a filter function.                                                                                                           |\n| [`metadataToSpanAttributes`](https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/opentelemetry-instrumentation-grpc/src/types.ts#L27) | `object`          | List of case insensitive metadata to convert to span attributes. Client and server (outgoing requests, incoming responses) metadata attributes will be converted to span attributes in the form of `rpc.{request\\response}.metadata.metadata_key`, e.g. `rpc.response.metadata.date` |\n\n## Useful links\n\n- For more information on OpenTelemetry, visit: <https://opentelemetry.io/>\n- For more about OpenTelemetry JavaScript: <https://github.com/open-telemetry/opentelemetry-js>\n- For help or feedback on this project, join us in [GitHub Discussions][discussions-url]\n\n## License\n\nApache 2.0 - See [LICENSE][license-url] for more information.\n\n[discussions-url]: https://github.com/open-telemetry/opentelemetry-js/discussions\n[license-url]: https://github.com/open-telemetry/opentelemetry-js/blob/main/LICENSE\n[license-image]: https://img.shields.io/badge/license-Apache_2.0-green.svg?style=flat\n[npm-url]: https://www.npmjs.com/package/@opentelemetry/instrumentation-grpc\n[npm-img]: https://badge.fury.io/js/%40opentelemetry%2Finstrumentation-grpc.svg\n",
  "readmeFilename": "README.md"
}