{
  "_id": "string",
  "_rev": "190-152cc92af6a87cc77eed1bcd4b0ee12c",
  "name": "string",
  "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
  "dist-tags": {
    "latest": "3.3.3"
  },
  "versions": {
    "0.0.1": {
      "name": "string",
      "version": "0.0.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string. It modifies your String prototype. Get over it.",
      "homepage": [
        "https://github.com/jprichardson/string.js"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://github.com/jprichardson/string.js/raw/master/LICENSE"
        }
      ],
      "dependencies": {
        "coffee-script": ">=1.0.1",
        "jasmine-node": ">=1.0.12"
      },
      "bin": {
        "TEST_stringjs": "./bin/TEST_stringjs"
      },
      "main": "String",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.0.1",
      "devDependencies": {},
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.0.104",
      "_nodeVersion": "v0.4.12",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "6c171e32ee2e667712dc7d9ba19e6197a439e534",
        "tarball": "https://registry.npmjs.org/string/-/string-0.0.1.tgz",
        "integrity": "sha512-sep1w+yGl0M/5DDBrpSAfEm/pOuTfVrSa/fDkK1Zep2bXN4Tl7hnOfnzXqmUV7Zjp4mv0iUMUWeZ27GiObogUA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDR0duwTjI19o4EzeZSvjX6VYcfMHC4eFKuiwMZJulqpAIhAIp3tK4GlXTL/BruED/32hPx7kvvb8dYlvMZS7TdHg/W"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.0.2": {
      "name": "string",
      "version": "0.0.2",
      "description": "string contains methods that aren't included in the vanilla JavaScript string. It modifies your String prototype. Get over it.",
      "homepage": [
        "https://github.com/jprichardson/string.js"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache",
          "url": "http://github.com/jprichardson/string.js/raw/master/LICENSE"
        }
      ],
      "dependencies": {
        "coffee-script": ">=1.0.1",
        "jasmine-node": ">=1.0.12"
      },
      "bin": {
        "TEST_stringjs": "./bin/TEST_stringjs"
      },
      "main": "String",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.0.2",
      "devDependencies": {},
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.0.104",
      "_nodeVersion": "v0.4.12",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "567007678df50b518db9805283d501f6c10efb83",
        "tarball": "https://registry.npmjs.org/string/-/string-0.0.2.tgz",
        "integrity": "sha512-Jt/CSxM6gDm7OW/YykPBPQUcQdOae2I4FowsMJVepa7+3ND/0TzQwpiZvgq5/i3S7j9zlKUsdxvi2X3Z7JeU5w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCqUXL9zpq/jh+v3TOyxCChgdSR3RousYQaHxL+YkBtiwIgY2pK3o+91SK0E3itayJQgx+dTy/SA/ECfMf+QdyF0OA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.0.3": {
      "name": "string",
      "version": "0.0.3",
      "description": "string contains methods that aren't included in the vanilla JavaScript string. It modifies your String prototype.",
      "homepage": [
        "https://github.com/jprichardson/string.js"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache",
          "url": "http://github.com/jprichardson/string.js/raw/master/LICENSE"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "coffee-script": ">=1.0.1",
        "mocha": ">=0.10"
      },
      "main": "string.js",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.0.3",
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.1.0-beta-10",
      "_nodeVersion": "v0.6.7",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "b49da40b1af2d485478131e17af001c91db68857",
        "tarball": "https://registry.npmjs.org/string/-/string-0.0.3.tgz",
        "integrity": "sha512-VDpMj//7yFCzZw+hj9fDhmxc8oFRa6OEHYtdz/NwWEmcvVxXG+Dii+xf+3YCvfGuasg1g2PS8wFOfC8MkznmXQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCi7kkaKs2mlMpk2R24ryvQ9Dc+Ti6N1EQibCbv9O+EqgIgfpVzF0QcqNXTHJgDRNs3BWA2BRh7/HpSJbgxwdSLk9k="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.0.4": {
      "name": "string",
      "version": "0.0.4",
      "description": "string contains methods that aren't included in the vanilla JavaScript string. It modifies your String prototype.",
      "homepage": [
        "https://github.com/jprichardson/string.js"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache",
          "url": "http://github.com/jprichardson/string.js/raw/master/LICENSE"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "coffee-script": ">=1.0.1",
        "mocha": ">=0.10"
      },
      "main": "string.js",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.0.4",
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.1.0-beta-10",
      "_nodeVersion": "v0.6.7",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "77abe43e790ae1956d20f5f38b2df5aca319cf55",
        "tarball": "https://registry.npmjs.org/string/-/string-0.0.4.tgz",
        "integrity": "sha512-+15ESCGmFYs/pI2f/0eQ2/gVIdKUqD4cx8HPSey8trR+bQS+gYGSRJ++dpx3JKRVPv24vVh+S/G+GJU2n/J93w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE0P498YyNOKbXC/LaqEwOhJS75MmOCwODIL+lo6yjekAiBMx3vc6GX0FrfxL0wG/4ghqcGRQNQDcYJpqNFMk+4SYw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.1.1": {
      "name": "string",
      "version": "0.1.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string.",
      "homepage": [
        "https://github.com/jprichardson/string.js"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "S",
        "s"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache v2,LGPL"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "coffee-script": "1.2.x",
        "mocha": "0.12.x",
        "uglify-js": "1.2.x",
        "growl": "1.5.x",
        "testutil": "0.1.0"
      },
      "main": "string.js",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.1.1",
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.1.0-beta-10",
      "_nodeVersion": "v0.6.7",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "a26478da61b9bd532519dfd770f4420d40884c00",
        "tarball": "https://registry.npmjs.org/string/-/string-0.1.1.tgz",
        "integrity": "sha512-KfhP8uRPDXiY5GGlSe4hLDZkiPk1Q0h6ZYtg/9Kw1sni6Io9cZDQHf3t7+m8S7Ny0ZeKaAx9ZbRw2jH79iXa7A==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFFlbGTOJD2aeVRGBqkyRSFa1oSauukNrzah19yMYF03AiA81I4DYMZX71KzC8xO8B4hU7GH3pRizchHXetIbx/1AQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.1.2": {
      "name": "string",
      "version": "0.1.2",
      "description": "string contains methods that aren't included in the vanilla JavaScript string.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "S",
        "s"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache v2,LGPL"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "coffee-script": "1.2.x",
        "mocha": "0.12.x",
        "uglify-js": "1.2.x",
        "growl": "1.5.x",
        "testutil": "0.1.0"
      },
      "main": "lib/string.js",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.1.2",
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.1.0-beta-10",
      "_nodeVersion": "v0.6.7",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "b7edc39f3711259f05dcec5b7a359972c3063f09",
        "tarball": "https://registry.npmjs.org/string/-/string-0.1.2.tgz",
        "integrity": "sha512-7Xd2ZzwOe8oJwyRPZBsg7PxSPnafdFFo+PQhhgCLmvt6uZd8baNT7JkjY8SC6gfbIQIOGRNnjDF0huPd0X+J0w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICd7/Q8ob6dRsd6d7+EHSxmtm42+wL1INuIePoqZhzGpAiA0bB9WeNoUmx8FlSlLByeHHQFtCTBfp3d2aODFOjUThQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.2.0": {
      "name": "string",
      "version": "0.2.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "S",
        "s"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache v2,LGPL"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "coffee-script": "1.2.x",
        "mocha": "0.12.x",
        "uglify-js": "1.2.x",
        "growl": "1.5.x"
      },
      "main": "lib/string.js",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.2.0",
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.1.0-beta-10",
      "_nodeVersion": "v0.6.7",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "174d2808fdab585121d3c026fbfacae13189cc22",
        "tarball": "https://registry.npmjs.org/string/-/string-0.2.0.tgz",
        "integrity": "sha512-1YxM7vnPVlncCD8vJeQYCj7VTqZcgfnYGxfEvANy8OArey4vsBl9m4RyiARn8p3qXKJp72IyD8j25QdycgaNzw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICOhGseEt8oC17ryjDFgCHXBbxGmiRg63HwAsPzUi48FAiEAo03pUtWgsbZ6NwArbGtZ380eC30ck9lKP0hwrxg+hKM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.2.1": {
      "name": "string",
      "version": "0.2.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache v2,LGPL"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "coffee-script": "1.2.x",
        "mocha": "0.12.x",
        "uglify-js": "1.2.x",
        "growl": "1.5.x"
      },
      "main": "lib/string.js",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.2.1",
      "optionalDependencies": {},
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.1.4",
      "_nodeVersion": "v0.6.12",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "26a1e5c45a6669cc6d27eb304f6ca6809b86a2a7",
        "tarball": "https://registry.npmjs.org/string/-/string-0.2.1.tgz",
        "integrity": "sha512-4Pg4v7k+0lR3mJsWu772WuQSJraWtUd8kkpnyxcaXSk7gWWL4MCST9NjUA5+Vu+nHaMHAFDo0mlcReQdm546Fw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCmoDxQwuQt0lXqX7Z1VW6eQPCwwYDxn0LyhwSiyKfIbAIhAKQ9vWsitZjsfdFkkEdyLuByF+mb7YobT4y+Udi8GDN7"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.2.1-1": {
      "name": "string",
      "version": "0.2.1-1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache v2,LGPL"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "coffee-script": "1.2.x",
        "mocha": "0.12.x",
        "uglify-js": "1.2.x",
        "growl": "1.5.x"
      },
      "main": "lib/string.js",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.2.1-1",
      "optionalDependencies": {},
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.1.4",
      "_nodeVersion": "v0.6.12",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "5fe0ca716730d8beb888246f94eac4f1e846da64",
        "tarball": "https://registry.npmjs.org/string/-/string-0.2.1-1.tgz",
        "integrity": "sha512-AZYCUmLqGC0UwDbXPcekKUZw+f6mIScxp0TxgalmXYraMzn09rahXt/OdgZOs2gehSKLUn/z9mEq7WlkaoJI7g==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC2CC7Cn/QcPKFmfC8kDqJtTOsk7NrHaccZhftKqKwdxAIgSdk8G8oYhIn4RUXXB1YKKhG9t+elmMBsLw+w0YEwD74="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.2.1-2": {
      "name": "string",
      "version": "0.2.1-2",
      "description": "string contains methods that aren't included in the vanilla JavaScript string.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache v2,LGPL"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "coffee-script": "1.2.x",
        "mocha": "0.12.x",
        "uglify-js": "1.2.x",
        "growl": "1.5.x"
      },
      "main": "lib/string.js",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "_id": "string@0.2.1-2",
      "engines": {
        "node": "*"
      },
      "_engineSupported": true,
      "_npmVersion": "1.1.0-beta-10",
      "_nodeVersion": "v0.6.7",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "5688828adc625d6c5ac1f60cfc413ea598ecc1a0",
        "tarball": "https://registry.npmjs.org/string/-/string-0.2.1-2.tgz",
        "integrity": "sha512-SIFEZ42XKdZ8dR5edI5OuVKNOG2ZvNpIfVua4rngFvcsBtlf5YyrKk+udTtXM2s1wmcCxqwk08VLnQNMe/1OEQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDT9pY2buyebetNzmSVHEoGclYGP//XYsHHDx0A+vw9ngIgSsawtd9bCPbA2UKSZ3VCABF5f3niIl6MeFZwRRQ0neA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.2.2": {
      "name": "string",
      "version": "0.2.2",
      "description": "string contains methods that aren't included in the vanilla JavaScript string.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT,Apache v2,LGPL"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "coffee-script": "1.3.x",
        "mocha": "*",
        "uglify-js": "1.2.x",
        "growl": "1.5.x"
      },
      "main": "lib/string.js",
      "_id": "string@0.2.2",
      "dist": {
        "shasum": "cd84c7d69f36d0b7759b6ad7d2411eb75aa83bfe",
        "tarball": "https://registry.npmjs.org/string/-/string-0.2.2.tgz",
        "integrity": "sha512-HiCiIBkRT+dhSyrLwUlHSXHsyaP7tMdnM2cTviIuB/xyo4YMZaPc5hGRST2t8pnrOw43zgJc8Aaeb9WjCBXv0w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBKdCCu5j58n57DtqLQHqaD04d49GxWx8eQq1lfa6x/EAiEA+aN3FX96ju9htD7wOa/bKUPSpfTQK+AwVTE2Dfxr77E="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.0.0": {
      "name": "string",
      "version": "1.0.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.0.0",
      "dist": {
        "shasum": "2fbd6b51287ba8ef7f5b83b83a82fdbf38fecee1",
        "tarball": "https://registry.npmjs.org/string/-/string-1.0.0.tgz",
        "integrity": "sha512-MmPcOG889RqDgsPymYp1Cu5UwW8kbbdMYjVFq74fHUxpOg64+7iSw3orMH4yrJ/bSrEohMWWdhtUmbhAZ6vAXQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBOo+iU+kv8IEVNHD2usp2zzpsqsYqajsDJ7msASWx8nAiByXleEYT2g6M3uAYDxAKkSphjl50BYq5gdMl7L3I8wWQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.1.0": {
      "name": "string",
      "version": "1.1.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping HTML, decoding HTML entities, stripping tags, etc.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.1.0",
      "dist": {
        "shasum": "5d66d4493300d4f8183e2ae68a25c7e1d6c2eeca",
        "tarball": "https://registry.npmjs.org/string/-/string-1.1.0.tgz",
        "integrity": "sha512-0SNnk3/hIgZ1Eq+jdyusmVxVJ+BbQaZ9bkOwp818ykyULZ84gDrDdieJlVYUVbj0M/wsENupRlqbwEEKxCJtYA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAhAJrQvgkKygC4Uktb5u4+jJp7cLWD0kppBGYc5D8Z2AiEAj7b1jUccMmt9QyKgtsETwFWoWdyJ9xx/pI81SrzYaSA="
          }
        ]
      },
      "_npmVersion": "1.1.62",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.2.0": {
      "name": "string",
      "version": "1.2.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping HTML, decoding HTML entities, stripping tags, etc.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.2.0",
      "dist": {
        "shasum": "f7bab3ea6bf6bfa113740acbe903688e5576dd09",
        "tarball": "https://registry.npmjs.org/string/-/string-1.2.0.tgz",
        "integrity": "sha512-4e0LKchh+t9mLJbNUcHEfQFbn5hMY2amqbAb+OG70BN5t8TL5fM6VkVbVHVGPhGyBXF/Tnnntf/Rsg5d78nAFw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDXQ9k99i0SNLLV+gLJthN1+ptG/P4R7ujVRbnJE82GMAIgPJlSYeCZxq4ReguFP66jL8jjLh5cEKrQt7MIxntVIJw="
          }
        ]
      },
      "_npmVersion": "1.1.62",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.2.1": {
      "name": "string",
      "version": "1.2.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping HTML, decoding HTML entities, stripping tags, etc.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.2.1",
      "dist": {
        "shasum": "7e652f7300cec6637bb31380cb25f9f00c85d215",
        "tarball": "https://registry.npmjs.org/string/-/string-1.2.1.tgz",
        "integrity": "sha512-9rIQywswYzAYsTxjrfw2kplUBkkCcLnp52euerfBNHslt+3ByeLCZLtq32lD1hc0hG5MHwaqNVf2ouVxItVjKw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCS30EGfI05zCF3aOe1qhfSrb1nCL5NJ6HD3+biI+OJ1AIgD36AM6rk3mWuQBqH7oSBlpcFuC/ksuLezPIPPp6lq6w="
          }
        ]
      },
      "_npmVersion": "1.1.69",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.3.0": {
      "name": "string",
      "version": "1.3.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping HTML, decoding HTML entities, stripping tags, etc.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.3.0",
      "dist": {
        "shasum": "0acb6c1836f13278a727db19be729c2ca9631eca",
        "tarball": "https://registry.npmjs.org/string/-/string-1.3.0.tgz",
        "integrity": "sha512-qymjXjf0TKKXngJC8iwEDAJR5gCF0yw/aSNNmulVZSh5e1ObqGIU9Jvylj1IqntpZrTLPpYPjdobn7OB5HmPDA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCVvqH0UMS+kjf75BypIJXEgD89gvI9RrSbUyZ7HIBiTgIhAPoEszWmVZSpxVui7KiEbOUyDbFXc5CW5nzkhILfJX/q"
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.2.14",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.3.1": {
      "name": "string",
      "version": "1.3.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping HTML, decoding HTML entities, stripping tags, etc.",
      "homepage": [
        "http://stringjs.com"
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.3.1",
      "dist": {
        "shasum": "c81560ded8a30e1de3b5ee03cc3956a3fc577823",
        "tarball": "https://registry.npmjs.org/string/-/string-1.3.1.tgz",
        "integrity": "sha512-+Dlw3gJ5lC2gavOTAsAAdijRncCr1gS1imeIMTpellamjTYFyVkKThgE1pO3tjpFMBFghH8nOEOHKBymYawZ5Q==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDy/BrNv/bTiCo7lNpMlCjpicbmPx+Z/OrwO6MoKiWsdAiEArtzmt+L/5xPuinZ241VJotlbxC9UB79XZJ/y29/VXqc="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.2.17",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.4.0": {
      "name": "string",
      "version": "1.4.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.4.0",
      "dist": {
        "shasum": "d147c0abe6c848fbfdff8e20e2bf33cd932613f5",
        "tarball": "https://registry.npmjs.org/string/-/string-1.4.0.tgz",
        "integrity": "sha512-9j9fk92vTPEvp4Z1DDicJsePH4nxZgYJtQFTO/6bSGIqR8A6jm54PivMV1H/vtpCyEIlg7Cz31msXMcq9tm2sA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC66b0owh+IJbKjQ35ONHen9Sl65Bp7Cmy6n/nF62gZBgIhAKSaEI1q6DCY7x9bE1aM5D6QmLWsQ1JrleIlBqHmSl7j"
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.2.17",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.5.0": {
      "name": "string",
      "version": "1.5.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.5.0",
      "dist": {
        "shasum": "9861da7f3a92b9fa114b15da086857b528a7c587",
        "tarball": "https://registry.npmjs.org/string/-/string-1.5.0.tgz",
        "integrity": "sha512-VjYQlC+IB6xpJO1Ggov7zWyC9dwVf8Oqy4cERwi4BZhyBw0+ieciG4L1Vnbv0C68zzqdfTaRjFubunSs9seamw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIClfFNKWzcI9p+eQou7aFA1sEKmnAjdmiarIKYBAhfhtAiAYfJbFg3hGK/GyUitnaR0OvmAA2sM8aRY1aNMkzg9YZg=="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.2.17",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.5.1": {
      "name": "string",
      "version": "1.5.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.5.1",
      "dist": {
        "shasum": "fbcc3a865c34fbe6e2b59bdef01f482f5d52354e",
        "tarball": "https://registry.npmjs.org/string/-/string-1.5.1.tgz",
        "integrity": "sha512-Ip3e9e9s1bLTKPJZ4SIaICjWfrhQcRTN/y4SIsQYCLqSYD2ydazMFgtPx8jdJY2c9p2GSUu5aoVMeYNqbjGrHQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCS77eQQJP8Z3w6c7R6UyUJzrgV8LugtLypbcCYpRnRLQIgCJ9hcTB+bX+7HyUdyuik65ycx71E1aCKGXwXsMQPjDM="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.2.17",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.6.0": {
      "name": "string",
      "version": "1.6.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.6.0",
      "dist": {
        "shasum": "7e15398f32a3fc26d83dff7e21db1d38b62df331",
        "tarball": "https://registry.npmjs.org/string/-/string-1.6.0.tgz",
        "integrity": "sha512-yTMpr3BU4snnl1jjAXZHJwY+pO+Zmd5/SC+Y5IyYEhX7o1tfkKilRqHVPfz1bufL/p8hNtO9rnfD5MHEbcvKNQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBkpO2wcqVXP9c8SeK9845DM8HcUscR2t/jSJkQxZS7MAiAxv/YBJ9JYCyBitwNoHnKGYxEm6Abj9l0IVoEPieJOWA=="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.2.17",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.6.1": {
      "name": "string",
      "version": "1.6.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.6.1",
      "dist": {
        "shasum": "eabe0956da7a8291c6de7486f7b35e58d031cd55",
        "tarball": "https://registry.npmjs.org/string/-/string-1.6.1.tgz",
        "integrity": "sha512-HjS4ixm3n26s7G7aj7frqsiiM/lA1vz4zoOMHD6CfT7niMZv3nqspyKWAdnYBklKQM7xYuGfUn3jDLR18WlsPQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDWF222coTKGOwsDVvPQXP9OL1X2K0DN07HsKbOyaNpzAiBg2qlt2qDxwCvh1rhoaWtd7klaHI1mKccazPxhZjYSHg=="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.2.17",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.7.0": {
      "name": "string",
      "version": "1.7.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.7.0",
      "dist": {
        "shasum": "35e917b42f758f3a57c551f665ace4d6a0988644",
        "tarball": "https://registry.npmjs.org/string/-/string-1.7.0.tgz",
        "integrity": "sha512-1f3C1hDPqw/adk1cl9H4AUvnr9GXvce4RljOkDgBhOyBLgCjtf4qTTxLKgs+NS835xUp6j0JdKVspvmMPVvglw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICGQ2Eu8Oo3bJFyIz9QAO/PtD6tomYP7HtN0ICwLfG6SAiAjDARIddwV9612lQZjMr4L2hGDXAZVb+xeMnq5YO46tQ=="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.2.17",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.8.0": {
      "name": "string",
      "version": "1.8.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "_id": "string@1.8.0",
      "dist": {
        "shasum": "47eb598679cc7f483a41166b12c20617cecf141a",
        "tarball": "https://registry.npmjs.org/string/-/string-1.8.0.tgz",
        "integrity": "sha512-IQ2VkqABlPX4S8t5YT0YQ1MxavC13ETFSq2SQrT+IJO4CDknb8vQUV7WLbRn8IZAG1KU/yzNN9hzq3Ti6OewZw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQClQ5wjUAe06uqzB0CFeUHd3SdmBw979LteQHysDlO0rwIhANMNAyb6l+6VlPh78o6qky59uS2kHIWGWrImni8U6vAT"
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.2.17",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.8.1": {
      "name": "string",
      "version": "1.8.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@1.8.1",
      "dist": {
        "shasum": "0ca205514e1fe60889b2859812689d5141562faf",
        "tarball": "https://registry.npmjs.org/string/-/string-1.8.1.tgz",
        "integrity": "sha512-6oM3+azye5yHkMkes97WSxWzqj2tSv+/SbeBfb944tSJS06fnnjEBhx6IQwQ8DUhARhY74HaXUihiXLp17rkFw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEMCHzStASsb3fsiEs9GQRoIgJIh+jr1FOLln9JSRSCT7wkCIFUXlilOfyGKOyCafr8d4mHTuBWJuva5RMVRhP+9Xegm"
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.9.0": {
      "name": "string",
      "version": "1.9.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@1.9.0",
      "dist": {
        "shasum": "10f651e718b1700e82e3a629624708bca7c4f722",
        "tarball": "https://registry.npmjs.org/string/-/string-1.9.0.tgz",
        "integrity": "sha512-TD7I/9daRSB5W+aFWrAFFLwJ/GN7IR+duKXSmrHAUY0J6FxRD+9xU20PyrId4ArlpsroN4zK8m3+z4y4rdN59w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCUyucn0V5n5joxp6HjDAo8RBuGl+6I4ws2+3lHlu2nvAIgMkClhIYpI26RYt4nSF3LYVpVCMyuOL2+DwL++XnE4OA="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "1.9.1": {
      "name": "string",
      "version": "1.9.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@1.9.1",
      "dist": {
        "shasum": "8aae1cf563dea767538dd7a3f0db2239869c619e",
        "tarball": "https://registry.npmjs.org/string/-/string-1.9.1.tgz",
        "integrity": "sha512-LBhXRM5EP2yuxdlqiDAzMFeqP358QbMIOP8TT2jKQq6refO8CGPS8dJr0rrlerFU47DSRIDPx3dZVoekykbnNQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAi7Fe+SzYLr8uJQucbcKtjAImiNKZA4/EBRGhGkyXhdAiA/2RaXigWKl3nchsNMCANSl+Ukzo3k+v5nLpgqDeAMhg=="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "2.0.0": {
      "name": "string",
      "version": "2.0.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@2.0.0",
      "dist": {
        "shasum": "23926ef976d6ce5a3643b2f04da02e117017516d",
        "tarball": "https://registry.npmjs.org/string/-/string-2.0.0.tgz",
        "integrity": "sha512-Yznue+MCEEPwRTmYGHyUYTDTAkkUIBPSvd8OIfLyGKS6DN/U8t6jL3jp+axMVl9f4AgRj5lqUSutQti0959ZlQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBsfTYAUK2RDmZrB9oM4lhbjPBCz3fjs89WUqrGlFm6pAiBvHUXfJO804kaYwecL04SsNQPuiv8dlpcQZSTyp2Hisw=="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "2.0.1": {
      "name": "string",
      "version": "2.0.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test"
      },
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@2.0.1",
      "dist": {
        "shasum": "ef1473b3e11cb8158671856556959b9aff5fd759",
        "tarball": "https://registry.npmjs.org/string/-/string-2.0.1.tgz",
        "integrity": "sha512-m+M9h/LTbp19h0XBtRQU67w/iM3MCSI1hsUqBPhZ0+aWtGaped/tEfBudaCeyL/UaOXDdJupH0519aGpdkFsJg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDcnJx1gviUC3sO7fGCAo2B8xM0GpcTG45+QisGWENdqgIhALc1WzAjeHpcWgCBN+8g8/vAmmj+EtIg5+7/VUewX8U1"
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "2.1.0": {
      "name": "string",
      "version": "2.1.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x",
        "istanbul": "*"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@2.1.0",
      "dist": {
        "shasum": "e599668d3007a5e0161de2051438c64f7ec291ba",
        "tarball": "https://registry.npmjs.org/string/-/string-2.1.0.tgz",
        "integrity": "sha512-IXHJ7jNzvYEKJyONPfGU3UA0RoMFew1GBLrC9zIQmGAaD9rA9obkaWgL/Vstjp8GVwzM63c03Z9s45WzGR1YUg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDnpI46xxPZ9wkMq6EvJMjLAFv+wfr5GZBJ47mVMo/MnQIgAVnh4jM/hMm0xNQE8bopda2BX0LBBG0JjIBHv4/JQPo="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "2.2.0": {
      "name": "string",
      "version": "2.2.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x",
        "istanbul": "*"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@2.2.0",
      "dist": {
        "shasum": "a7f84767b5ef0933bd16180ff363403c99f9fa91",
        "tarball": "https://registry.npmjs.org/string/-/string-2.2.0.tgz",
        "integrity": "sha512-gnijoVTOkjqj6V7YuHIcEnpCqwuVcmVqIBc4kR3Ics0mPv5Z8gaS96tGd+lX4YT2ijnPfbngfl0hGWy6UtHdYw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHvbuu7yVdrfarIObocHWCMNa0+QbaJvxSMypKEIvIQGAiABZvV0zMjWM87qkpnjRUIxwf7zBb9eu3cqErp3YcH5bw=="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "3.0.0": {
      "name": "string",
      "version": "3.0.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x",
        "istanbul": "*"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.0.0",
      "dist": {
        "shasum": "e8e98b30810315038406478a0f117eb5563a62ce",
        "tarball": "https://registry.npmjs.org/string/-/string-3.0.0.tgz",
        "integrity": "sha512-uUwFWRPgal5xIEDzj9+P2qm+zvrJHZDErF7dI7h7DUU9XTHlNgQnjiJbTxaOEIbItgkfhpJvxvvtExrMOP0+oQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGMktkqGftcTXCbGVBEm7yLb8bB2rklu5mrnOiYgzTj+AiAy9CMcHm6iaDS38vVWEV3arm2T3gDDZcuNsb6kbPVoJA=="
          }
        ]
      },
      "_from": ".",
      "_npmVersion": "1.4.3",
      "_npmUser": {
        "name": "jp",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jp",
          "email": "jprichardson@gmail.com"
        }
      ],
      "directories": {}
    },
    "3.0.1": {
      "name": "string",
      "version": "3.0.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x",
        "istanbul": "*"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "c7bc7d2f49d7172cfe842221830ff7f80f7833a9",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.0.1",
      "_shasum": "c63a528e09de94a6a085c9f6b6bd94eaeef96cc2",
      "_from": ".",
      "_npmVersion": "1.4.28",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "c63a528e09de94a6a085c9f6b6bd94eaeef96cc2",
        "tarball": "https://registry.npmjs.org/string/-/string-3.0.1.tgz",
        "integrity": "sha512-ZmtOLGv0oKhe04v3O0HRsmOFPtIqZ0O6W623JI7RDXh4kCUtglL0tHcEgoLUhu51p43jB8ioRjq+ydRtOt7z7w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFPtYlVo2kOg5NP2sY3s6ftbYB7VAHIimyoBY/hFyeeBAiEAyN3SkbsQp3RINcARAFAIMBqf1tm1j+8tV1X3nDWS0MI="
          }
        ]
      },
      "directories": {}
    },
    "3.1.0": {
      "name": "string",
      "version": "3.1.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x",
        "istanbul": "*"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "9ccba0e7b58bb221599ff1d94eee59aaa41561c6",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.1.0",
      "_shasum": "13653c1321e7ae3b7c126db92d9a19c57779f9cf",
      "_from": ".",
      "_npmVersion": "1.4.28",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "13653c1321e7ae3b7c126db92d9a19c57779f9cf",
        "tarball": "https://registry.npmjs.org/string/-/string-3.1.0.tgz",
        "integrity": "sha512-vEXAZkY78dcAO+Ilj+OT3XOlJKghkB4+zqSz8LnsFMsrCyqqzHmgwCWqRiOP1AaSM9hWUHfdSCJTBuGT1/dhjw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICJdWqGQOmL7jJRvbI1alnl/j2hj0/6kXL15n5T/dL5lAiEAgxqVQQ1pf57G7UL5Ui2DTH3bU65iFWM91AtfQ3dPt6Q="
          }
        ]
      },
      "directories": {}
    },
    "3.1.1": {
      "name": "string",
      "version": "3.1.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "licenses": [
        {
          "type": "MIT"
        }
      ],
      "dependencies": {},
      "devDependencies": {
        "mocha": "*",
        "uglify-js": "1.3.x",
        "istanbul": "*"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "e08fd5d4e46b6d570cc6339b979afb0e2c4fa95b",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.1.1",
      "_shasum": "40c60377275448f8e3d0dbf52e38ae4095710293",
      "_from": ".",
      "_npmVersion": "2.3.0",
      "_nodeVersion": "0.10.32",
      "_npmUser": {
        "name": "jprichardson",
        "email": "jprichardson@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "40c60377275448f8e3d0dbf52e38ae4095710293",
        "tarball": "https://registry.npmjs.org/string/-/string-3.1.1.tgz",
        "integrity": "sha512-ZPqqwE398P3i8GHRiSvOFj2vFisb6PB1CkJ52rz6Xz/Zhi5anL7C8ihFoqHdFEle8ufJUgyfDm9ZTDLZfi8ijQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAVY+/eqy65sif191e6aNo46NyYPBmTCgWYb8H7qRtylAiAiv3pm546Q7FPww4ZurQGKz1mfNH1fVhJzIcHhEsi8LQ=="
          }
        ]
      },
      "directories": {}
    },
    "3.1.2": {
      "name": "string",
      "version": "3.1.2",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "license": "MIT",
      "dependencies": {},
      "devDependencies": {
        "gulp": "3.8.11",
        "gulp-browserify": "0.5.1",
        "gulp-mocha": "2.0.0",
        "gulp-rename": "1.2.0",
        "gulp-rimraf": "^0.1.1",
        "gulp-uglify": "1.1.0",
        "istanbul": "*",
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "dist/string",
      "scripts": {
        "test": "mocha test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "9a30eedf67eac0255ccf913b5adc7bc5d5793960",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.1.2",
      "_shasum": "27fdb6d03ae817677d72ef6142d49131b7e2891c",
      "_from": ".",
      "_npmVersion": "1.4.28",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "27fdb6d03ae817677d72ef6142d49131b7e2891c",
        "tarball": "https://registry.npmjs.org/string/-/string-3.1.2.tgz",
        "integrity": "sha512-JNQYgdlh22yx3tmcPqxZKrwj6fgzGtZhrGxd/SANSmaLqLyrwwUmW2+EbfzE8NEeWl9+rYuiAsnxrwvecMGi2g==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGJAHT7E3wJGT9zAhZnthAFQW9Jv77nk+6ya6b08BIFaAiEAsPOsf7EaN22/xlvh9UYV/mVzDspCthPgaVFTO0NqqLM="
          }
        ]
      },
      "directories": {}
    },
    "3.1.3": {
      "name": "string",
      "version": "3.1.3",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "https://github.com/jprichardson/string.js"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "license": "MIT",
      "dependencies": {},
      "devDependencies": {
        "gulp": "3.8.11",
        "gulp-browserify": "0.5.1",
        "gulp-mocha": "2.0.0",
        "gulp-rename": "1.2.0",
        "gulp-rimraf": "^0.1.1",
        "gulp-uglify": "1.1.0",
        "istanbul": "*",
        "mocha": "*",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "mocha test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "eb0546377d6b55fd0a2235850cbcdf9e6ec635aa",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.1.3",
      "_shasum": "8fc63dfe4cd832a00394367cc06446a489e112f7",
      "_from": ".",
      "_npmVersion": "1.4.28",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "8fc63dfe4cd832a00394367cc06446a489e112f7",
        "tarball": "https://registry.npmjs.org/string/-/string-3.1.3.tgz",
        "integrity": "sha512-CCIY31YOfcCQZaA4L5lJPD475BV8ptwsIrbQViSoaILT8XxqdJw2yYvzEJEStNBxJbHvdxVYeaHOrFcWxWpo7g==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF7oaNXseNEu6qkfRCvBDV/0l5CIvjIJLRkBbkhpSdGrAiEAv38DGgM+MLwSz7tjOopWCCD7wWDz8PASRZn33FHAI4w="
          }
        ]
      },
      "directories": {}
    },
    "3.2.0": {
      "name": "string",
      "version": "3.2.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "license": "MIT",
      "dependencies": {},
      "devDependencies": {
        "gulp": "3.8.11",
        "gulp-browserify": "0.5.1",
        "gulp-mocha": "2.0.0",
        "gulp-rename": "1.2.0",
        "gulp-rimraf": "^0.1.1",
        "gulp-uglify": "1.1.0",
        "istanbul": "*",
        "mocha": "*",
        "mochify": "^2.9.0",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "gulp test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "a052cd51422687668ba9ad3fd584b9cb3159d8b8",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.2.0",
      "_shasum": "c3e83375e3dc57c3a5caccb9a9039887e2c3e534",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "2.1.0",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "c3e83375e3dc57c3a5caccb9a9039887e2c3e534",
        "tarball": "https://registry.npmjs.org/string/-/string-3.2.0.tgz",
        "integrity": "sha512-TzrLFv/Ufhh5s/9ATgKI5oirbGrTZ4eW9A8pBnGGRgy1oAm93ULr8FOw066xo/UKhBSdGMQg+KSa0B8BwTPkYA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAH7Cq4UOZCQrsQIz75ky3khXE92aEVsMgSW+pVfMytpAiEAoPueISfGaax77oKcG+Ao8OvrIU0e0ehWOVv9VVSJesc="
          }
        ]
      },
      "directories": {}
    },
    "3.2.1": {
      "name": "string",
      "version": "3.2.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "license": "MIT",
      "dependencies": {},
      "devDependencies": {
        "gulp": "3.8.11",
        "gulp-browserify": "0.5.1",
        "gulp-mocha": "2.0.0",
        "gulp-rename": "1.2.0",
        "gulp-rimraf": "^0.1.1",
        "gulp-uglify": "1.1.0",
        "istanbul": "*",
        "mocha": "*",
        "mochify": "^2.9.0",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "gulp test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "c044d6dbb49fd5da91b99c3c01b2ca153a9f1df4",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.2.1",
      "_shasum": "ba1c92f64df8bf39551987a7f0ebb83490e57c26",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "2.1.0",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "ba1c92f64df8bf39551987a7f0ebb83490e57c26",
        "tarball": "https://registry.npmjs.org/string/-/string-3.2.1.tgz",
        "integrity": "sha512-qUn610OK6h32gX2pKxx/0Bh/DOxTe5WcAEOdIV+4hau8/juPRcVjwH87IQUQmQUeAm0byEHQUkyB2x9+lAiyJA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDCvzBNq0OdIliTI9c96/zoXn/zP5E7NT0tGJmjgfPp7wIhAIg39I6gW67n8uaWt7k9jSIyAQBGrHg/n1hkTWW+E5Ev"
          }
        ]
      },
      "directories": {}
    },
    "3.3.0": {
      "name": "string",
      "version": "3.3.0",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "license": "MIT",
      "dependencies": {},
      "devDependencies": {
        "gulp": "3.8.11",
        "gulp-browserify": "0.5.1",
        "gulp-mocha": "2.0.0",
        "gulp-rename": "1.2.0",
        "gulp-rimraf": "^0.1.1",
        "gulp-uglify": "1.1.0",
        "istanbul": "*",
        "mocha": "*",
        "mochify": "^2.9.0",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "gulp test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "1917b28dceee184cdd4e1899b1feb3bb02833dde",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.3.0",
      "_shasum": "f73b3e2deae426dcf68c7d56692c0492f9cce483",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "2.1.0",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "f73b3e2deae426dcf68c7d56692c0492f9cce483",
        "tarball": "https://registry.npmjs.org/string/-/string-3.3.0.tgz",
        "integrity": "sha512-E4bG6rocJ+JNe8kX7ZRG4VTmzkrwI5LKHVLvuCvoipgiCoq6P0fKkNzpeQ4sbzDF1VkpQngACAa81WmbxSCxng==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCw0Z7vRewujI4EmnphDc0xCyqXiVqxGODPOYTrKxihWQIhAL7DoFK1LDD2Ff5McOnMYw2EcOVUvsDi6vIANqWy+Qs/"
          }
        ]
      },
      "directories": {}
    },
    "3.3.1": {
      "name": "string",
      "version": "3.3.1",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "license": "MIT",
      "dependencies": {},
      "devDependencies": {
        "gulp": "3.8.11",
        "gulp-browserify": "0.5.1",
        "gulp-mocha": "2.0.0",
        "gulp-rename": "1.2.0",
        "gulp-rimraf": "^0.1.1",
        "gulp-uglify": "1.1.0",
        "istanbul": "*",
        "mocha": "*",
        "mochify": "^2.9.0",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "gulp test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "27d105d9735e4745b3a001f9fc3a7a1b1a66bbf3",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.3.1",
      "_shasum": "8d2757ec1c0e6c526796fbb6b14036a4098398b7",
      "_from": ".",
      "_npmVersion": "2.10.1",
      "_nodeVersion": "2.1.0",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "8d2757ec1c0e6c526796fbb6b14036a4098398b7",
        "tarball": "https://registry.npmjs.org/string/-/string-3.3.1.tgz",
        "integrity": "sha512-j6CjCTXglxFvBWuzo814JrxXOtTVWfYN3V02wpWeRK3jHl3s4KWB0WeVPM/gE8ltWsiG6Z/XCoK5wv2Al1/U7Q==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIA03LVDUSaWHccm0y0H9NcZN12tZDu/kO3r9R8Z5BOcoAiEAl/P7sCzrGl+jXHIusGRYqqAxNuBU1kfExBRZK4WydQE="
          }
        ]
      },
      "directories": {}
    },
    "3.3.2": {
      "name": "string",
      "version": "3.3.2",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "license": "MIT",
      "dependencies": {},
      "devDependencies": {
        "gulp": "3.8.11",
        "gulp-browserify": "0.5.1",
        "gulp-mocha": "2.0.0",
        "gulp-rename": "1.2.0",
        "gulp-rimraf": "^0.1.1",
        "gulp-uglify": "1.1.0",
        "istanbul": "*",
        "mocha": "*",
        "mochify": "^2.9.0",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "gulp test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "a2ab10e0e6000fa6b4ee57d412c6fe2cc2f07c52",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.3.2",
      "_shasum": "03b4106826bf3a8cfcd5504690829570b2668fc8",
      "_from": ".",
      "_npmVersion": "3.10.3",
      "_nodeVersion": "6.7.0",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "03b4106826bf3a8cfcd5504690829570b2668fc8",
        "tarball": "https://registry.npmjs.org/string/-/string-3.3.2.tgz",
        "integrity": "sha512-fSMSWcCuQyFIGmK80pdTxlKJ95vtMgJzY3xnexmLGKUQ9LuXH48lVq89ZdAFf9zASgz2LVp1nErnoGkj3KijfQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBtQZClXhw/VhTj59AL1Jj0SntdF5/3Z1+krjwx+I+9vAiACbYb+oVUSI+6VCEtWIVJHJOC0KRk/pMI6T4/2+lLplQ=="
          }
        ]
      },
      "_npmOperationalInternal": {
        "host": "packages-16-east.internal.npmjs.com",
        "tmp": "tmp/string-3.3.2.tgz_1476154056494_0.9404454878531396"
      },
      "directories": {}
    },
    "3.3.3": {
      "name": "string",
      "version": "3.3.3",
      "description": "string contains methods that aren't included in the vanilla JavaScript string such as escaping html, decoding html entities, stripping tags, etc.",
      "homepage": "http://stringjs.com",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jprichardson/string.js.git"
      },
      "keywords": [
        "string",
        "strings",
        "string.js",
        "stringjs",
        "S",
        "s",
        "csv",
        "html",
        "entities",
        "parse",
        "html",
        "tags",
        "strip",
        "trim",
        "encode",
        "decode",
        "escape",
        "unescape"
      ],
      "author": {
        "name": "JP Richardson",
        "email": "jprichardson@gmail.com"
      },
      "license": "MIT",
      "dependencies": {},
      "devDependencies": {
        "gulp": "3.8.11",
        "gulp-browserify": "0.5.1",
        "gulp-mocha": "2.0.0",
        "gulp-rename": "1.2.0",
        "gulp-rimraf": "^0.1.1",
        "gulp-uglify": "1.1.0",
        "istanbul": "*",
        "mocha": "*",
        "mochify": "^2.9.0",
        "uglify-js": "1.3.x"
      },
      "main": "lib/string",
      "scripts": {
        "test": "gulp test",
        "istanbul": "istanbul cover node_modules/.bin/_mocha test/string.test.js"
      },
      "gitHead": "21eb9f67a545d9320558b20876b1551e9f38e52f",
      "bugs": {
        "url": "https://github.com/jprichardson/string.js/issues"
      },
      "_id": "string@3.3.3",
      "_shasum": "5ea211cd92d228e184294990a6cc97b366a77cb0",
      "_from": ".",
      "_npmVersion": "3.10.3",
      "_nodeVersion": "6.7.0",
      "_npmUser": {
        "name": "az7arul",
        "email": "az7arul@gmail.com"
      },
      "maintainers": [
        {
          "name": "jprichardson",
          "email": "jprichardson@gmail.com"
        },
        {
          "name": "az7arul",
          "email": "az7arul@gmail.com"
        }
      ],
      "dist": {
        "shasum": "5ea211cd92d228e184294990a6cc97b366a77cb0",
        "tarball": "https://registry.npmjs.org/string/-/string-3.3.3.tgz",
        "integrity": "sha512-LbvprpPZT/39QKfNrlPX9vXtS7If80vqbPQ7clnHQb5oVOM5hz/cs3iQCCZjvQDwsAWl+HpLQX3gRgN6IC8t3g==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFpyDSS5W5cSHNDpV8Qvq6ApZI/2IxO6pH/Jj7nMsZnyAiAc93cw1SEBgqwWFDi38au71yEXh+5SBBJzkO5n3uicCg=="
          }
        ]
      },
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/string-3.3.3.tgz_1476166333427_0.21646195952780545"
      },
      "directories": {}
    }
  },
  "readme": "[string.js](http://stringjs.com)\n=========\n\n[![build status](https://secure.travis-ci.org/jprichardson/string.js.png)](http://travis-ci.org/jprichardson/string.js)\n\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/stringjs.svg)](https://saucelabs.com/u/stringjs)\n\n`string.js`, or simply `S` is a lightweight (**< 5 kb** minified and gzipped) JavaScript library for the browser or for Node.js that provides extra String methods. Originally, it modified the String prototype. But I quickly learned that in JavaScript, this is considered poor practice.\n\n\n\nWhy?\n----\n\nPersonally, I prefer the cleanliness of the way code looks when it appears to be native methods. i.e. when you modify native JavaScript prototypes. However, if any app dependency required `string.js`, then the app's string prototype would be modified in every module. This could be troublesome. So I settled on creating a wrapper a la jQuery style. For those of you prototype hatin' fools, there is the method `extendPrototype()`.\n\nHere's a list of alternative frameworks:\n\n* [Prototype Framework's String library](http://prototypejs.org/api/string)\n* [Uize.String](http://www.uize.com/reference/Uize.String.html)\n* [Google Closure's String](http://closure-library.googlecode.com/svn/docs/namespace_goog_string.html)\n* [Underscore.string](http://epeli.github.com/underscore.string/)\n* [Sugar.js](http://sugarjs.com)\n* [php.js](http://phpjs.org/functions/)\n\nWhy wasn't I happy with any of them? They are all static methods that don't seem to support chaining in a clean way 'OR' they have an odd dependency. Sugar is the notable exception.\n\n\n\nInstallation\n------------\n\n1. If you want to use this library, you first need to install the [Node.js] (https://nodejs.org/en/).\n\n2. When you install node.js, will also be installed [npm] (https://www.npmjs.com/).\n\n3. Please run the following command.\n\n```\nnpm install --save string\n```\n\n\nExperiment with String.js Now\n-----------------------------\n\nAssuming you're on http://stringjs.com, just simply open up the Webkit inspector in either Chrome or Safari, or the web console in Firefox and you'll notice that `string.js` is included in this page so that you can start experimenting with it right away.\n\n\n\nUsage\n-----\n\n### Node.js\n\n```javascript\nvar S = require('string');\n```\n\nOriginally, I was using `$s` but glancing over the code, it was easy to confuse `$s` for string.js with `$` for jQuery. Feel free to use the most convenient variable for you.\n\n\n### Rails\n\nCheckout this gem to easily use string.js on the asset pipeline: https://github.com/jesjos/stringjs-rails\n\n\n\n### Browsers\n\n```html\n<!-- HTML5 -->\n<script src=\"https://cdn.rawgit.com/jprichardson/string.js/master/dist/string.min.js\"></script>\n\n<!-- Note that in the mime type for Javascript is now officially 'application/javascript'. If you\nset the type to application/javascript in IE browsers, your Javacript will fail. Just don't set a\ntype via the script tag and set the mime type from your server. Most browsers look at the server mime\ntype anyway -->\n\n<!-- For HTML4/IE -->\n<script type=\"text/javascript\" src=\"https://cdn.rawgit.com/jprichardson/string.js/master/dist/string.min.js\"></script>\n```\n\nA global variable `window.S` or simply `S` is created.\n\n\n### AMD Support\n\nIt now [has AMD support](https://github.com/jprichardson/string.js/pull/20). See [require.js](http://requirejs.org/) on how to use with AMD modules.\n\n\n### Both\n\n```javascript\nvar doesIt = S('my cool string').left(2).endsWith('y'); //true\n```\n\nAccess the wrapped string using `s` variable or `toString()`\n\n```javascript\nvar name = S('Your name is JP').right(2).s; //'JP'\n```\n\nis the same as…\n\n```javascript\nvar name = S('Your name is JP').right(2).toString(); //'JP'\n```\n\nStill like the clean look of calling these methods directly on native Strings? No problem. Call `extendPrototype()`. Make sure to not call this at the module level, at it'll effect the entire application lifecycle. You should really only use this at the method level. The one exception being if your application will not be a dependency of another application.\n\n```javascript\nS.extendPrototype();\nvar name = 'Your name is JP'.right(2); //'JP'\nS.restorePrototype(); //be a good citizen and clean up\n```\n\n\n### Browser Compatibility\n\n`string.js` has been designed to be compatible with Node.js and with IE6+, Firefox 3+, Safari 2+, Chrome 3+. Please [click here][browsertest] to run the tests in your browser. Report any browser issues here: https://github.com/jprichardson/string.js/issues\n\n\n### Extending string.js\n\nSee: https://github.com/jprichardson/string.js/pull/57\n\n\n\nNative JavaScript Methods\n-------------------------\n\n`string.js` imports all of the native JavaScript methods. This is for convenience. The only difference is that the imported methods return `string.js` objects instead of native JavaScript strings. The one exception to this is the method `charAt(index)`. This is because `charAt()` only returns a string of length one. This is typically done for comparisons and a `string.js` object will have little to no value here.\n\nAll of the native methods support chaining with the `string.js` methods.\n\n**Example:**\n\n```javascript\nvar S = require('string');\n\nvar phrase = S('JavaScript is the best scripting language ever!');\nvar sub = 'best scripting';\nvar pos = phrase.indexOf(sub);\nconsole.log(phrase.substr(pos, sub.length).truncate(8)); //best...\n```\n\n\nMethods\n-------\n\nSee [test file][testfile] for more details.\n\nI use the same nomenclature as Objective-C regarding methods. **+** means `static` or `class` method. **-** means `non-static` or `instance` method.\n\n### - constructor(nativeJsString) ###\n\nThis creates a new `string.js` object. The parameter can be anything. The `toString()` method will be called on any objects. Some native objects are used in some functions such as `toCSV()`.\n\nExample:\n\n```javascript\nS('hello').s //\"hello\"\nS(['a,b']).s //\"a,b\"\nS({hi: 'jp'}).s //\"[object Object]\"\"\n```\n\n\n### - between(left, right)\n\nExtracts a string between `left` and `right` strings.\n\nExample:\n\n```javascript\nS('<a>foo</a>').between('<a>', '</a>').s // => 'foo'\nS('<a>foo</a></a>').between('<a>', '</a>').s // => 'foo'\nS('<a><a>foo</a></a>').between('<a>', '</a>').s // => '<a>foo'\nS('<a>foo').between('<a>', '</a>').s // => ''\nS('Some strings } are very {weird}, dont you think?').between('{', '}').s // => 'weird'\nS('This is a test string').between('test').s // => ' string'\nS('This is a test string').between('', 'test').s // => 'This is a '\n```\n\n### - camelize()\n\nRemove any underscores or dashes and convert a string into camel casing.\n\nExample:\n\n```javascript\nS('data_rate').camelize().s; //'dataRate'\nS('background-color').camelize().s; //'backgroundColor'\nS('-moz-something').camelize().s; //'MozSomething'\nS('_car_speed_').camelize().s; //'CarSpeed'\nS('yes_we_can').camelize().s; //'yesWeCan'\n```\n\n\n### - capitalize() ###\n\nCapitalizes the first character of a string.\n\nExample:\n\n```javascript\nS('jon').capitalize().s; //'Jon'\nS('JP').capitalize().s; //'Jp'\n```\n\n\n### - chompLeft(prefix)\n\nRemoves `prefix` from start of string.\n\nExample:\n\n```javascript\nS('foobar').chompLeft('foo').s; //'bar'\nS('foobar').chompLeft('bar').s; //'foobar'\n```\n\n\n### - chompRight(suffix)\n\nRemoves `suffix` from end of string.\n\nExample:\n\n```javascript\nS('foobar').chompRight('bar').s; //'foo'\nS('foobar').chompRight('foo').s; //'foobar'\n```\n\n\n### - collapseWhitespace() ###\n\nConverts all adjacent whitespace characters to a single space.\n\nExample:\n\n```javascript\nvar str = S('  String   \\t libraries are   \\n\\n\\t fun\\n!  ').collapseWhitespace().s; //'String libraries are fun !'\n```\n\n\n### - contains(ss) ###\n\nReturns true if the string contains `ss`.\n\nAlias: `include()`\n\nExample:\n\n```javascript\nS('JavaScript is one of the best languages!').contains('one'); //true\n```\n\n\n### - count(substring) ###\n\nReturns the count of the number of occurrences of the substring.\n\nExample:\n\n```javascript\nS('JP likes to program. JP does not play in the NBA.').count(\"JP\")// 2\nS('Does not exist.').count(\"Flying Spaghetti Monster\") //0\nS('Does not exist.').count(\"Bigfoot\") //0\nS('JavaScript is fun, therefore Node.js is fun').count(\"fun\") //2\nS('funfunfun').count(\"fun\") //3\n```\n\n\n### - dasherize() ###\n\nReturns a converted camel cased string into a string delimited by dashes.\n\nExamples:\n\n```javascript\nS('dataRate').dasherize().s; //'data-rate'\nS('CarSpeed').dasherize().s; //'-car-speed'\nS('yesWeCan').dasherize().s; //'yes-we-can'\nS('backgroundColor').dasherize().s; //'background-color'\n```\n\n\n### - decodeHTMLEntities() ###\n\nDecodes HTML entities into their string representation.\n\n```javascript\nS('Ken Thompson &amp; Dennis Ritchie').decodeHTMLEntities().s; //'Ken Thompson & Dennis Ritchie'\nS('3 &lt; 4').decodeHTMLEntities().s; //'3 < 4'\n```\n\n\n### - endsWith(ss) ###\n\nReturns true if the string ends with `ss`.\n\nExample:\n\n```javascript\nS(\"hello jon\").endsWith('jon'); //true\n```\n\n\n### - escapeHTML() ###\n\nEscapes the html.\n\nExample:\n\n```javascript\nS('<div>hi</div>').escapeHTML().s; //&lt;div&gt;hi&lt;/div&gt;\n```\n\n\n### + extendPrototype() ###\n\nModifies `String.prototype` to have all of the methods found in string.js.\n\nExample:\n\n```javascript\nS.extendPrototype();\n```\n\n\n\n### - ensureLeft(prefix)\n\nEnsures string starts with `prefix`.\n\nExample:\n\n```javascript\nS('subdir').ensureLeft('/').s; //'/subdir'\nS('/subdir').ensureLeft('/').s; //'/subdir'\n```\n\n\n### - ensureRight(suffix)\n\nEnsures string ends with `suffix`.\n\nExample:\n\n```javascript\nS('dir').ensureRight('/').s; //'dir/'\nS('dir/').ensureRight('/').s; //'dir/'\n```\n\n### - humanize() ###\n\nTransforms the input into a human friendly form.\n\nExample:\n\n```javascript\nS('the_humanize_string_method').humanize().s  //'The humanize string method'\nS('ThehumanizeStringMethod').humanize().s //'Thehumanize string method'\nS('the humanize string method').humanize().s  //'The humanize string method'\nS('the humanize_id string method_id').humanize().s //'The humanize id string method'\nS('the  humanize string method  ').humanize().s //'The humanize string method'\nS('   capitalize dash-CamelCase_underscore trim  ').humanize().s //'Capitalize dash camel case underscore trim'\n```\n\n### - include(ss) ###\n\nReturns true if the string contains the `ss`.\n\nAlias: `contains()`\n\nExample:\n\n```javascript\nS('JavaScript is one of the best languages!').include('one'); //true\n```\n\n\n### - isAlpha() ###\n\nReturn true if the string contains only letters.\n\nExample:\n\n```javascript\nS(\"afaf\").isAlpha(); //true\nS('fdafaf3').isAlpha(); //false\nS('dfdf--dfd').isAlpha(); //false\n```\n\n\n### - isAlphaNumeric() ###\n\nReturn true if the string contains only letters and numbers\n\nExample:\n\n```javascript\nS(\"afaf35353afaf\").isAlphaNumeric(); //true\nS(\"FFFF99fff\").isAlphaNumeric(); //true\nS(\"99\").isAlphaNumeric(); //true\nS(\"afff\").isAlphaNumeric(); //true\nS(\"Infinity\").isAlphaNumeric(); //true\nS(\"-Infinity\").isAlphaNumeric(); //false\nS(\"-33\").isAlphaNumeric(); //false\nS(\"aaff..\").isAlphaNumeric(); //false\n```\n\n\n### - isEmpty() ###\n\nReturn true if the string is solely composed of whitespace or is `null`/`undefined`.\n\nExample:\n\n```javascript\nS(' ').isEmpty(); //true\nS('\\t\\t\\t    ').isEmpty(); //true\nS('\\n\\n ').isEmpty(); //true\nS('helo').isEmpty(); //false\nS(null).isEmpty(); //true\nS(undefined).isEmpty(); //true\n```\n\n\n### - isLower() ###\n\nReturn true if the character or string is lowercase\n\nExample:\n\n```javascript\nS('a').isLower(); //true\nS('z').isLower(); //true\nS('B').isLower(); //false\nS('hijp').isLower(); //true\nS('hi jp').isLower(); //false\nS('HelLO').isLower(); //false\n```\n\n\n### - isNumeric() ###\n\nReturn true if the string only contains digits\n\nExample:\n\n```javascript\nS(\"3\").isNumeric(); //true\nS(\"34.22\").isNumeric(); //false\nS(\"-22.33\").isNumeric(); //false\nS(\"NaN\").isNumeric(); //false\nS(\"Infinity\").isNumeric(); //false\nS(\"-Infinity\").isNumeric(); //false\nS(\"JP\").isNumeric(); //false\nS(\"-5\").isNumeric(); //false\nS(\"000992424242\").isNumeric(); //true\n```\n\n\n### - isUpper() ###\n\nReturns true if the character or string is uppercase\n\nExample:\n\n```javascript\nS('a').isUpper() //false\nS('z').isUpper()  //false\nS('B').isUpper() //true\nS('HIJP').isUpper() //true\nS('HI JP').isUpper() //false\nS('HelLO').isUpper() //true\n```\n\n\n### - latinise() ###\n\nRemoves accents from Latin characters.\n\n```javascript\nS('crème brûlée').latinise().s // 'creme brulee'\n```\n\n\n### - left(n) ###\n\nReturn the substring denoted by `n` positive left-most characters.\n\nExample:\n\n```javascript\nS('My name is JP').left(2).s; //'My'\nS('Hi').left(0).s; //''\nS('My name is JP').left(-2).s; //'JP', same as right(2)\n```\n\n\n### - length ###\n\nProperty to return the length of the string object.\n\nExample:\n\n```javascript\nS('hi').length; //2\n```\n\n### - lines() ####\n\nReturns an array with the lines. Cross-platform compatible.\n\nExample:\n\n```javascript\nvar stuff = \"My name is JP\\nJavaScript is my fav language\\r\\nWhat is your fav language?\"\nvar lines = S(stuff).lines()\n\nconsole.dir(lines)\n/*\n[ 'My name is JP',\n  'JavaScript is my fav language',\n  'What is your fav language?' ]\n*/\n```\n\n\n### - pad(len, [char])\n\nPads the string in the center with specified character. `char` may be a string or a number, defaults is a space.\n\nExample:\n\n```javascript\nS('hello').pad(5).s //'hello'\nS('hello').pad(10).s //'   hello  '\nS('hey').pad(7).s //'  hey  '\nS('hey').pad(5).s //' hey '\nS('hey').pad(4).s //' hey'\nS('hey').pad(7, '-').s//'--hey--'\n```\n\n\n### - padLeft(len, [char])\n\nLeft pads the string.\n\nExample:\n\n```javascript\nS('hello').padLeft(5).s //'hello'\nS('hello').padLeft(10).s //'     hello'\nS('hello').padLeft(7).s //'  hello'\nS('hello').padLeft(6).s //' hello'\nS('hello').padLeft(10, '.').s //'.....hello'\n```\n\n\n### - padRight(len, [char])\n\nRight pads the string.\n\nExample:\n\n```javascript\nS('hello').padRight(5).s //'hello'\nS('hello').padRight(10).s //'hello     '\nS('hello').padRight(7).s //'hello  '\nS('hello').padRight(6).s //'hello '\nS('hello').padRight(10, '.').s //'hello.....'\n```\n\n\n### - parseCSV() ###\n\nParses a CSV line into an array.\n\n**Arguments:**\n- `delimiter`: The character that is separates or delimits fields. Default: `,`\n- `qualifier`: The character that encloses fields. Default: `\"`\n- `escape`: The character that represents the escape character. Default: `\\`\n- `lineDelimiter`: The character that represents the end of a line. When a lineDelimiter is passed the result will be a multidimensional array. Default: `undefined`\n\nExample:\n\n```javascript\nS(\"'a','b','c'\").parseCSV(',', \"'\") //['a', 'b', 'c'])\nS('\"a\",\"b\",\"c\"').parseCSV() // ['a', 'b', 'c'])\nS('a,b,c').parseCSV(',', null)  //['a', 'b', 'c'])\nS(\"'a,','b','c'\").parseCSV(',', \"'\") //['a,', 'b', 'c'])\nS('\"a\",\"b\",4,\"c\"').parseCSV(',', null) //['\"a\"', '\"b\"', '4', '\"c\"'])\nS('\"a\",\"b\",\"4\",\"c\"').parseCSV() //['a', 'b', '4', 'c'])\nS('\"a\",\"b\",       \"4\",\"c\"').parseCSV() //['a', 'b', '4', 'c'])\nS('\"a\",\"b\",       4,\"c\"').parseCSV(\",\", null) //[ '\"a\"', '\"b\"', '       4', '\"c\"' ])\nS('\"a\",\"b\\\\\"\",\"d\",\"c\"').parseCSV() //['a', 'b\"', 'd', 'c'])\nS('\"a\",\"b\\\\\"\",\"d\",\"c\"').parseCSV() //['a', 'b\"', 'd', 'c'])\nS('\"a\\na\",\"b\",\"c\"\\n\"a\", \"\"\"b\\nb\", \"a\"').parseCSV(',', '\"', '\"', '\\n')) // [ [ 'a\\na', 'b', 'c' ], [ 'a', '\"b\\nb', 'a' ] ]\n```\n\n### - repeat(n) ###\n\nReturns a string repeated `n` times.\n\nAlias: `times()`\n\nExample:\n\n```javascript\nS(' ').repeat(5).s; //'     '\nS('*').repeat(3).s; //'***'\n```\n\n\n### - replaceAll(ss, newstr) ###\n\nReturn the new string with all occurrences of `ss` replaced with `newstr`.\n\nExample:\n\n```javascript\nS(' does IT work? ').replaceAll(' ', '_').s; //'_does_IT_work?_'\nS('Yes it does!').replaceAll(' ', '').s; //'Yesitdoes!'\n```\n\n\n### + restorePrototype() ###\n\nRestore the original String prototype. Typically used in conjunction with `extendPrototype()`.\n\nExample:\n\n```javascript\nS.restorePrototype();\n```\n\n\n### - right(n) ###\n\nReturn the substring denoted by `n` positive right-most characters.\n\nExample:\n\n```javascript\nS('I AM CRAZY').right(2).s; //'ZY'\nS('Does it work?  ').right(4).s; //'k?  '\nS('Hi').right(0).s; //''\nS('My name is JP').right(-2).s; //'My', same as left(2)\n```\n\n\n### - s ###\n\nAlias: `toString()`\n\nThe encapsulated native string representation of an `S` object.\n\nExample:\n\n```javascript\nS('my name is JP.').capitalize().s; //My name is JP.\nvar a = \"Hello \" + S('joe!'); //a = \"Hello joe!\"\nS(\"Hello\").toString() === S(\"Hello\").s; //true\n```\n\n\n### - setValue(value) ###\n\nSets the string to a `value`.\n\n```javascript\nvar myString = S('War');\nmyString.setValue('Peace').s; // 'Peace'\n```\n\n\n### - slugify() ###\n\nConverts the text into a valid url slug. Removes accents from Latin characters.\n\n```javascript\nS('Global Thermonuclear Warfare').slugify().s // 'global-thermonuclear-warfare'\nS('Crème brûlée').slugify().s // 'creme-brulee'\n```\n\n\n### - splitLeft(sep, [maxSplit = -1, [limit]]) ###\n\nReturns an array of strings, split from the left at `sep`. Performs at most `maxSplit` splits, and slices the result into an array with at most `limit` elements.\n\nExample:\n\n```javascript\nS('We built this city').splitLeft(' '); // ['We', 'built', 'this', 'city'];\nS('We built this city').splitLeft(' ', 1); // ['We', 'built this city'];\nS('On Rock N Roll and other Stuff').splitLeft(' ', -1, 4); // ['On', 'Rock', 'N', 'Roll'];\nS('On Rock N Roll and other Stuff').splitLeft(' ', 5, -2); // ['and', 'other Stuff'];\n```\n\n\n### - splitRight(sep, [maxSplit = -1, [limit]]) ###\n\nReturns an array of strings, split from the left at `sep`. Performs at most `maxSplit` splits, and slices the result into an array with at most `limit` elements.\n\nExample:\n\n```javascript\nS('This is all very fun').splitRight(' '); // ['This', 'is', 'all', 'very', 'fun'];\nS('and I could do it forever').splitRight(' ', 1); // ['and I could do it', 'forever'];\nS('but nothing matters in the end.').splitRight(' ', -1, 2); // ['the', 'end.'];\nS('but nothing matters in the end.').splitRight(' ', 4, -2); // ['but nothing', 'matters'];\n```\n\n\n### - startsWith(prefix) ###\n\nReturn true if the string starts with `prefix`.\n\nExample:\n\n```javascript\nS('JP is a software engineer').startsWith('JP'); //true\nS('wants to change the world').startsWith('politicians'); //false\n```\n\n\n### - strip([string1],[string2],...) ###\n\nReturns a new string with all occurrences of `[string1],[string2],...` removed.\n\nExample:\n\n```javascript\nS(' 1 2 3--__--4 5 6-7__8__9--0').strip(' ', '_', '-').s; //'1234567890'\nS('can words also be stripped out?').strip('words', 'also', 'be').s; //'can    stripped out?'\n```\n\n### - stripLeft([chars]) ###\nReturns a new string in which all chars have been stripped from the beginning of the string (default whitespace characters).\n\nExample:\n\n```javascript\nS('  hello ').stripLeft().s; //'hello '\nS('abcz').stripLeft('a-z').s; //'bcz'\nS('www.example.com').stripLeft('w.').s; //'example.com'\n```\n\n### - stripRight([chars]) ###\nReturns a new string in which all chars have been stripped from the end of the string (default whitespace characters).\n\nExample:\n\n```javascript\nS('  hello ').stripRight().s; //'  hello'\nS('abcz').stripRight('a-z').s; //'abc'\n```\n\n\n### - stripPunctuation()\n\nStrip all of the punctuation.\n\nExample:\n\n```javascript\nS('My, st[ring] *full* of %punct)').stripPunctuation().s; //My string full of punct\n```\n\n\n\n### - stripTags([tag1],[tag2],...) ###\n\nStrip all of the HTML tags or tags specified by the parameters.\n\nExample:\n\n```javascript\nS('<p>just <b>some</b> text</p>').stripTags().s //'just some text'\nS('<p>just <b>some</b> text</p>').stripTags('p').s //'just <b>some</b> text'\n```\n\n\n### - template(values, [open], [close])\n\nTakes a string and interpolates the values. Defaults to `{{` and `}}` for Mustache compatible templates. However, you can change this default by modifying `S.TMPL_OPEN` and `S.TMPL_CLOSE`.\n\nExample:\n\n```js\nvar str = \"Hello {{name}}! How are you doing during the year of {{date-year}}?\"\nvar values = {name: 'JP', 'date-year': 2013}\nconsole.log(S(str).template(values).s) //'Hello JP! How are you doing during the year of 2013?'\n\nstr = \"Hello #{name}! How are you doing during the year of #{date-year}?\"\nconsole.log(S(str).template(values, '#{', '}').s) //'Hello JP! How are you doing during the year of 2013?'\n\nS.TMPL_OPEN = '{'\nS.TMPL_CLOSE = '}'\nstr = \"Hello {name}! How are you doing during the year of {date-year}?\"\nconsole.log(S(str).template(values).s) //'Hello JP! How are you doing during the year of 2013?'\n```\n\n\n### - times(n) ###\n\nReturns a string repeated `n` times.\n\nAlias: `repeat()`\n\nExample:\n\n```javascript\nS(' ').times(5).s //'     '\nS('*').times(3).s //'***'\n```\n\n\n### - titleCase() ###\n\nReturns a string with the first letter of each word uppercased, including hyphenated words\n\nExample:\n\n```javascript\nS('Like ice in the sunshine').titleCase().s // 'Like Ice In The Sunshine'\nS('data_rate').titleCase().s // 'Data_Rate'\nS('background-color').titleCase().s // 'Background-Color'\nS('-moz-something').titleCase().s // '-Moz-Something'\nS('_car_speed_').titleCase().s // '_Car_Speed_'\nS('yes_we_can').titleCase().s // 'Yes_We_Can\n\nS('   capitalize dash-CamelCase_underscore trim  ').humanize().titleCase().s // 'Capitalize Dash Camel Case Underscore Trim'\n```\n\n\n### - toBoolean() / toBool()\n\nConverts a a logical truth string to boolean. That is: `true`, `1`, `'true'`, `'on'`, or `'yes'`.\n\nJavaScript Note: You can easily convert truthy values to `booleans` by prefixing them with `!!`. e.g.\n`!!'hi' === true` or `!!'' === false` or `!!{} === true`.\n\nExample:\n\n```javascript\nS('true').toBoolean() //true\nS('false').toBoolean() //false\nS('hello').toBoolean() //false\nS(true).toBoolean() //true\nS('on').toBoolean() //true\nS('yes').toBoolean() //true\nS('TRUE').toBoolean() //true\nS('TrUe').toBoolean() //true\nS('YES').toBoolean() //true\nS('ON').toBoolean() //true\nS('').toBoolean() //false\nS(undefined).toBoolean() //false\nS('undefined').toBoolean() //false\nS(null).toBoolean() //false\nS(false).toBoolean() //false\nS({}).toBoolean() //false\nS(1).toBoolean() //true\nS(-1).toBoolean() //false\nS(0).toBoolean() //false\n```\n\n\n\n### - toCSV(options) ###\n\nConverts an array or object to a CSV line.\n\nYou can either optionally pass in two string arguments or pass in a configuration object.\n\n**String Arguments:**\n- `delimiter`: The character that is separates or delimits fields. Default: `,`\n- `qualifier`: The character that encloses fields. Default: `\"`\n\n\n**Object Configuration:**\n- `delimiter`: The character that is separates or delimits fields. Default: `,`\n- `qualifier`: The character that encloses fields. Default: `\"`\n- `escape`: The character that escapes any incline `qualifier` characters. Default: `\\`, in JS this is `\\\\`\n- `encloseNumbers`: Enclose number objects with the `qualifier` character. Default: `true`\n- `keys`: If the input isn't an array, but an object, then if this is set to true, the keys will be output to the CSV line, otherwise it's the object's values. Default: `false`.\n\nExample:\n\n```javascript\nS(['a', 'b', 'c']).toCSV().s //'\"a\",\"b\",\"c\"'\nS(['a', 'b', 'c']).toCSV(':').s //'\"a\":\"b\":\"c\"'\nS(['a', 'b', 'c']).toCSV(':', null).s //'a:b:c')\nS(['a', 'b', 'c']).toCSV('*', \"'\").s //\"'a'*'b'*'c'\"\nS(['a\"', 'b', 4, 'c']).toCSV({delimiter: ',', qualifier: '\"', escape: '\\\\',  encloseNumbers: false}).s //'\"a\\\\\"\",\"b\",4,\"c\"'\nS({firstName: 'JP', lastName: 'Richardson'}).toCSV({keys: true}).s //'\"firstName\",\"lastName\"'\nS({firstName: 'JP', lastName: 'Richardson'}).toCSV().s //'\"JP\",\"Richardson\"'\n```\n\n\n### - toFloat([precision]) ###\n\nReturn the float value, wraps parseFloat.\n\nExample:\n\n```javascript\nS('5').toFloat() // 5\nS('5.3').toFloat()  //5.3\nS(5.3).toFloat()  //5.3\nS('-10').toFloat()  //-10\nS('55.3 adfafaf').toFloat() // 55.3\nS('afff 44').toFloat()  //NaN\nS(3.45522222333232).toFloat(2) // 3.46\n```\n\n\n### - toInt() / toInteger() ###\n\nReturn the number value in integer form. Wrapper for `parseInt()`. Can also parse hex values.\n\nExample:\n\n```javascript\nS('5').toInt(); //5\nS('5.3').toInt(); //5;\nS(5.3).toInt(); //5;\nS('-10').toInt(); //-10\nS('55 adfafaf').toInt(); //55\nS('afff 44').toInt(); //NaN\nS('0xff').toInt() //255\n```\n\n\n\n### - toString() ###\n\nAlias: `s`\n\nReturn the string representation of an `S` object. Not really necessary to use. However, JS engines will look at an object and display its `toString()` result.\n\nExample:\n\n```javascript\nS('my name is JP.').capitalize().toString(); //My name is JP.\nvar a = \"Hello \" + S('joe!'); //a = \"Hello joe!\"\nS(\"Hello\").toString() === S(\"Hello\").s; //true\n```\n\n\n### - trim() ###\n\nReturn the string with leading and trailing whitespace removed. Reverts to native `trim()` if it exists.\n\nExample:\n\n```javascript\nS('hello ').trim().s; //'hello'\nS(' hello ').trim().s; //'hello'\nS('\\nhello').trim().s; //'hello'\nS('\\nhello\\r\\n').trim().s; //'hello'\nS('\\thello\\t').trim().s; //'hello'\n```\n\n\n### - trimLeft() ###\n\nReturn the string with leading and whitespace removed\n\nExample:\n\n```javascript\nS('  How are you?').trimLeft().s; //'How are you?';\n```\n\n\n### - trimRight() ###\n\nReturn the string with trailing whitespace removed.\n\nExample:\n\n```javascript\nS('How are you?   ').trimRight().s; //'How are you?';\n```\n\n\n### - truncate(length, [chars]) ###\n\nTruncates the string, accounting for word placement and character count.\n\nExample:\n\n```javascript\nS('this is some long text').truncate(3).s //'...'\nS('this is some long text').truncate(7).s //'this is...'\nS('this is some long text').truncate(11).s //'this is...'\nS('this is some long text').truncate(12).s //'this is some...'\nS('this is some long text').truncate(11).s //'this is...'\nS('this is some long text').truncate(14, ' read more').s //'this is some read more'\n```\n\n\n\n### - underscore()\n\nReturns converted camel cased string into a string delimited by underscores.\n\nExample:\n\n```javascript\nS('dataRate').underscore().s; //'data_rate'\nS('CarSpeed').underscore().s; //'car_speed'\nS('yesWeCan').underscore().s; //'yes_we_can'\n```\n\n\n### - unescapeHTML() ###\n\nUnescapes the html.\n\nExample:\n\n```javascript\nS('&lt;div&gt;hi&lt;/div&gt;').unescapeHTML().s; //<div>hi</div>\n```\n\n### - wrapHTML() ###\n\nwrapHTML helps to avoid concatenation of element with string.\nthe string will be wrapped with HTML Element and their attributes.\n\nExample:\n```javascript\nS('Venkat').wrapHTML().s //<span>Venkat</span>\nS('Venkat').wrapHTML('div').s //<div>Venkat</div>\nS('Venkat').wrapHTML('div', {\n    \"class\": \"left bullet\"\n}).s //<div class=\"left bullet\">Venkat</div>\nS('Venkat').wrapHTML('div', {\n    \"id\": \"content\",\n    \"class\": \"left bullet\"\n}).s // <div id=\"content\" class=\"left bullet\">Venkat</div>\n```\n\n### + VERSION ###\n\nReturns native JavaScript string containing the version of `string.js`.\n\nExample:\n\n```javascript\nS.VERSION; //1.0.0\n```\n\n\nQuirks\n------\n\n`decodeHtmlEntities()` converts `&nbsp;` to **0xa0** (160) and not **0x10** (20). Most browsers consider 0xa0 to be whitespace characters, Internet Explorer does not despite it being part of the ECMA standard. Google Closure does a good job of normalizing this behavior. This may need to be fixed in `string.js` at some point in time.\n\n\n\nTesting\n-------\n\n### Node.js\n\nInstall the dev dependencies:\n\n    $ npm install string --development\n\nInstall mocha globally:\n\n    $ npm install -g mocha\n\nThen navigate to the installed directory:\n\n    $ cd node_modules/string/\n\nRun test package:\n\n    $ mocha test\n\n\n\n### Browser ###\n\n[Click here to run the tests in your web browser.][browsertest]\n\n\n\nCredits\n-------\n\nI have looked at the code by the creators in the libraries mentioned in **Motivation**. As noted in the source code, I've specifically used code from Google Closure (Google Inc), Underscore String [Esa-Matti Suuronen](http://esa-matti.suuronen.org/), and php.js (http://phpjs.org/authors/index), [Substack](https://github.com/substack/node-ent) and [TJ Holowaychuk](https://github.com/component/pad).\n\n\n\nContributions\n-------------\n\nIf you contribute to this library, just modify `string.js`, `string.test.js`, and update `README.md`. I'll update the website docs and generate the new `string.min.js`, changelog and version.\n\n\n### Contributors\n\n(You can add your name, or I'll add it if you forget)\n\n- [*] [JP Richardson](https://github.com/jprichardson)\n- [4] [Azharul Islam](https://github.com/az7arul)\n- [3] [Sergio Muriel](https://github.com/Sergio-Muriel)\n- [1] [Venkatraman.R](https://github.com/ramsunvtech)\n- [1] [r3Fuze](https://github.com/r3Fuze)\n- [1] [Matt Hickford](https://github.com/hickford)\n- [1] [Petr Brzek](https://github.com/petrbrzek)\n- [1] [Alex Zinchenko](https://github.com/yumitsu)\n- [1] [Guy Ellis](https://github.com/guyellis)\n- [*] [Leonardo Otero](https://github.com/oteroleonardo)\n- [*] [Jordan Scales](https://github.com/prezjordan)\n- [*] [Eduardo de Matos](https://github.com/eduardo-matos)\n- [*] [Christian Maughan Tegnér](https://github.com/CMTegner)\n- [*] [Mario Gutierrez](https://github.com/mgutz)\n- [*] [Sean O'Dell](https://github.com/seanodell)\n- [*] [Tim de Koning](https://github.com/Reggino)\n- [*] [David Volm](https://github.com/daxxog)\n- [*] [Jeff Grann](https://github.com/jeffgrann)\n- [*] [Vlad GURDIGA](https://github.com/gurdiga)\n- [*] [Jon Principe](https://github.com/jprincipe)\n- [*] [James Manning](https://github.com/jamesmanning)\n- [*] [Nathan Friedly](https://github.com/nfriedly)\n- [*] [Alison Rowland](https://github.com/arowla)\n- [*] [Pascal Bihler](https://github.com/pbihler)\n- [*] [Daniel Diekmeier](https://github.com/danieldiekmeier)\n\n\n\nRoadmap to v2.0\n---------------\n- break up this module into smaller logically grouped modules. The Node.js version would probably always include most of the functions. https://github.com/jprichardson/string.js/issues/10\n- allow a more functional style similar to Underscore and Lodash. This may introduce a `chain` function though. https://github.com/jprichardson/string.js/issues/49\n- language specific plugins i.e. https://github.com/jprichardson/string.js/pull/46\n- move this repo over to https://github.com/stringjs\n\n\n\nLicense\n-------\n\nLicensed under MIT.\n\nCopyright (C) 2012-2016 JP Richardson <jprichardson@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n[testfile]: https://github.com/jprichardson/string.js/blob/master/test/string.test.js\n[browsertest]: http://stringjs.com/browser.test.html\n\n[aboutjp]: http://about.me/jprichardson\n[twitter]: http://twitter.com/jprichardson\n[procbits]: http://procbits.com\n",
  "maintainers": [
    {
      "name": "jprichardson",
      "email": "jprichardson@gmail.com"
    },
    {
      "name": "az7arul",
      "email": "az7arul@gmail.com"
    }
  ],
  "time": {
    "modified": "2022-06-27T00:59:50.931Z",
    "created": "2011-11-18T22:10:46.006Z",
    "0.0.1": "2011-11-18T22:10:46.676Z",
    "0.0.2": "2011-11-18T22:31:25.705Z",
    "0.0.3": "2012-01-20T22:11:44.512Z",
    "0.0.4": "2012-01-27T19:41:32.254Z",
    "0.1.0": "2012-02-27T16:46:44.950Z",
    "0.1.1": "2012-02-27T20:20:45.645Z",
    "0.1.2": "2012-02-27T20:25:22.749Z",
    "0.2.0": "2012-03-03T22:13:02.569Z",
    "0.2.1": "2012-03-09T21:34:39.774Z",
    "0.2.1-1": "2012-03-09T21:48:10.311Z",
    "0.2.1-2": "2012-03-09T21:55:18.336Z",
    "0.2.2": "2012-09-20T19:48:02.306Z",
    "1.0.0": "2012-09-25T13:28:58.517Z",
    "1.1.0": "2012-10-08T21:44:07.436Z",
    "1.2.0": "2013-01-15T21:38:13.675Z",
    "1.2.1": "2013-02-09T19:57:48.163Z",
    "1.3.0": "2013-03-19T14:19:46.724Z",
    "1.3.1": "2013-05-03T18:21:05.425Z",
    "1.4.0": "2013-05-29T17:25:03.063Z",
    "1.5.0": "2013-07-11T21:52:53.710Z",
    "1.5.1": "2013-08-20T20:33:45.528Z",
    "1.6.0": "2013-09-16T18:37:42.872Z",
    "1.6.1": "2013-11-07T23:07:51.568Z",
    "1.7.0": "2013-11-19T19:39:24.900Z",
    "1.8.0": "2014-01-13T18:59:51.499Z",
    "1.8.1": "2014-04-23T20:48:42.552Z",
    "1.9.0": "2014-06-24T01:06:34.899Z",
    "1.9.1": "2014-08-06T00:16:24.383Z",
    "2.0.0": "2014-09-02T09:01:31.134Z",
    "2.0.1": "2014-09-09T04:17:52.448Z",
    "2.1.0": "2014-09-22T15:00:11.798Z",
    "2.2.0": "2014-10-20T12:11:37.114Z",
    "3.0.0": "2014-12-08T15:23:29.746Z",
    "3.0.1": "2015-03-16T18:40:15.413Z",
    "3.1.0": "2015-03-21T17:54:04.203Z",
    "3.1.1": "2015-03-26T19:16:55.374Z",
    "3.1.2": "2015-05-29T10:52:01.567Z",
    "3.1.3": "2015-05-29T20:08:57.328Z",
    "3.2.0": "2015-06-02T19:53:22.755Z",
    "3.2.1": "2015-06-13T17:43:29.189Z",
    "3.3.0": "2015-06-14T18:14:33.020Z",
    "3.3.1": "2015-08-05T19:30:46.841Z",
    "3.3.2": "2016-10-11T02:47:38.371Z",
    "3.3.3": "2016-10-11T06:12:13.668Z"
  },
  "author": {
    "name": "JP Richardson",
    "email": "jprichardson@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jprichardson/string.js.git"
  },
  "users": {
    "shen-weizhong": true,
    "maschs": true,
    "boustanihani": true,
    "karthickt": true,
    "olls": true,
    "kingcron": true,
    "yourhoneysky": true,
    "bcoe": true,
    "moimikey": true,
    "restuta": true,
    "roryrjb": true,
    "silverbeetle": true,
    "prule": true,
    "f124275809": true,
    "joaocosta": true,
    "drew.brokke": true,
    "zambon": true,
    "iamveen": true,
    "robermac": true,
    "paeblits": true,
    "nickeljew": true,
    "az7arul": true,
    "subchen": true,
    "arunrajmony": true,
    "l2g": true,
    "oheard": true,
    "chirayuk": true,
    "itonyyo": true,
    "godion": true,
    "thomasfoster96": true,
    "oneinme": true,
    "mano.rajesh": true,
    "tmcguire": true,
    "dar5hak": true,
    "naohta": true,
    "wzbg": true,
    "anhulife": true,
    "dr.dimitru": true,
    "aslezak": true,
    "crazyjingling": true,
    "erincinci": true,
    "stany": true,
    "aitorllj93": true,
    "seiyarus": true,
    "ahsanshafiq": true,
    "yuxin": true,
    "kwpeters": true,
    "j_junyent": true,
    "evanyeung": true,
    "mccoyjordan": true,
    "octetstream": true,
    "eirikbirkeland": true,
    "refo": true,
    "xxsnake28": true,
    "donotor": true,
    "iolo": true,
    "menoncello": true,
    "jakedetels": true,
    "khaledalyawad": true,
    "marsking": true,
    "hirmes": true,
    "dburdese": true,
    "asyncthread": true,
    "axelrindle": true,
    "wenhsiaoyi": true,
    "jidan70": true,
    "liesislukas": true,
    "alanerzhao": true,
    "suddi": true,
    "sqrtthree": true,
    "tudor.ciotlos": true,
    "chunhei2008": true,
    "bphanikumar": true,
    "matiasmarani": true,
    "arjun8497": true,
    "doxy": true,
    "zeusbaba": true,
    "rocket0191": true,
    "jcottam": true,
    "drveresh": true
  },
  "homepage": "http://stringjs.com",
  "keywords": [
    "string",
    "strings",
    "string.js",
    "stringjs",
    "S",
    "s",
    "csv",
    "html",
    "entities",
    "parse",
    "html",
    "tags",
    "strip",
    "trim",
    "encode",
    "decode",
    "escape",
    "unescape"
  ],
  "bugs": {
    "url": "https://github.com/jprichardson/string.js/issues"
  },
  "readmeFilename": "README.md",
  "license": "MIT"
}