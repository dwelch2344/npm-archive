{
  "_id": "emotion-theming",
  "_rev": "71-27b7f4a3a119a08e98d6031d42b1ede8",
  "name": "emotion-theming",
  "description": "A CSS-in-JS theming solution, inspired by styled-components",
  "dist-tags": {
    "next": "11.0.0-next.6",
    "latest": "11.0.0",
    "rc": "11.0.0-rc.0",
    "ten": "10.3.0"
  },
  "versions": {
    "8.0.2-10": {
      "name": "emotion-theming",
      "version": "8.0.2-10",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "files": [
        "src",
        "dist"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "cross-env": "^5.0.1",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.43.0"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.2-10",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.1.2",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-tYALUIn+UvHyzLauwnvYjXQWu+Q7KsNLW4qfEReOUuj9y93EgY/hilq7Os4h11MzVMDUf5l/oFYBg1g5J7aIJg==",
        "shasum": "a2dfbce218635dd6eda1bd50c7f8d6b5dedb1efd",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.2-10.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCGBBfd1LcbnS984uskU1gx8QtTNk1McCKDqZiyQT48kAIgbT8SxcvXbTRTkNPiIdWC031FEjLMenwvT2JIWhpvN7w="
          }
        ]
      },
      "maintainers": [
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.2-10.tgz_1506710513323_0.8239047240931541"
      },
      "directories": {}
    },
    "8.0.2-11": {
      "name": "emotion-theming",
      "version": "8.0.2-11",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "files": [
        "src",
        "dist"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "cross-env": "^5.0.1",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.43.0"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.2-11",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-UJN794jOyVV+1cBBjaOvMPxv1QcP3kRXshi+wxygVyzhy894RNqT/aI7WKHga2hsDwJcMDbc4h1B0M5+Bs6lNw==",
        "shasum": "77c22cb21db6cc676f17ea6b635897b3f67ccf77",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.2-11.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE1sW8SXUqqu3CevgE4v02saxsvvboquO67IiSVtZJV5AiEA11uOrkC0f9/IBFvn5zYSlwBKhs3sysAFVhWkbAGBiaI="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.2-11.tgz_1506748342014_0.7397020901553333"
      },
      "directories": {}
    },
    "8.0.2": {
      "name": "emotion-theming",
      "version": "8.0.2",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "files": [
        "src",
        "dist"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "cross-env": "^5.0.1",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.43.0"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.2",
      "_npmVersion": "5.5.0",
      "_nodeVersion": "8.1.2",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-+vn1QT4C3exYnY/Q/Ku5uj6CRKw/Q20P9JUihRcm/FxyIK+FIK5KtQ9Tm0ddhlkZWln+X9l6PzSiEEXcKDmPBg==",
        "shasum": "502345591571ec4809fd976a6275a779b107b8eb",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD1QoiLp2Loee1wUWR+11H8AATUleMC5w4WHb9oUlce5gIhAPah45TL+ddUN+Q6X+XtQQwxb0E8eN1ck23FmCLPH9Bo"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.2.tgz_1507217752310_0.41755343484692276"
      },
      "directories": {}
    },
    "8.0.3": {
      "name": "emotion-theming",
      "version": "8.0.3",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "files": [
        "src",
        "dist"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "cross-env": "^5.0.1",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.43.0"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.3",
      "_npmVersion": "5.0.3",
      "_nodeVersion": "8.1.2",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-sI1m1Ltw0oIkG7FYZqZ8vv+vdTnuD9fEQo5Y8jHKmIaBV8aQD1Tif+bMmwItpnA/R7e7o8VoeLooKFH9xlCr9Q==",
        "shasum": "14ee593dc58fc3b958be578a4f2bb681d64e7f28",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.3.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICejWcpSjEFaw/HNTOi0ZNeG28pK+8zeVWDdqv5EtLqGAiA1q9+tWii1dvtwV7HRACkk/5hrXf1sBsmiwJYkjz5Bqg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.3.tgz_1507328616045_0.49433254497125745"
      },
      "directories": {}
    },
    "8.0.4": {
      "name": "emotion-theming",
      "version": "8.0.4",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "files": [
        "src",
        "dist"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "cross-env": "^5.0.1",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.43.0"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.4",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-G42VQFTkmo7/8p9f8PK4A3I1QpI+ttz+9yJx/D4HRNyY9Zz8soP159egS5aJOX4CKKvlzQO7ILQuMgTEsB0VoQ==",
        "shasum": "63bb121ee7961e5f56ff69803f9d86319cc14446",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.4.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDVAiNy8Z/bUzrtMjHr/Le9wKZju4vyceULwOHIfWOkDQIhAK+qesyOu556YHvrfAp+G24ICBoKgOp3DoLh2/W603KE"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.4.tgz_1507334440610_0.9317799168638885"
      },
      "directories": {}
    },
    "8.0.7": {
      "name": "emotion-theming",
      "version": "8.0.7",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "files": [
        "src",
        "dist"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "cross-env": "^5.0.1",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.43.0"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.7",
      "_npmVersion": "5.0.3",
      "_nodeVersion": "8.1.2",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-w2VV3a8IBuBLd0PnQWHmNrUsazbqr/s8pYgk4YvFbP2NVWBFXYhSHgVEJpp2OVKUz1hyRGVQrk2gi7T6SvqUMg==",
        "shasum": "7e96316de95cb991aa5ec2048fd95db0d1e1a262",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.7.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCoslBIrKdEGwDpp8518exG+5PsH2eJuFwpaWv87bo3YwIhAPPwXIR3auLA5GZu1GmkrOpuISDzOAVI4cVT6z84cJ9C"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.7.tgz_1508173560389_0.5697432504966855"
      },
      "directories": {}
    },
    "8.0.9": {
      "name": "emotion-theming",
      "version": "8.0.9",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "typings/emotion-theming.d.ts",
      "files": [
        "src",
        "dist"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "test:typescript": "tsc --noEmit -p typescript_tests/tsconfig.json",
        "pretest:typescript": "npm run build",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.43.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.9",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-i+6NA/cfg95MXyshFrG2G4gzkoBXg1JGd5X+X89DVACgFCamXO6EZDPkwFiRYVjdpap8OlWmF31GOKiSDeqq/w==",
        "shasum": "90530194f124de7acb0b814e057f9d817df435d6",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.9.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDjKX8QKPcG6J6kNoQ3MiED01O2faugbBm8BE+eWHSZagIhAJdA1W3Mm0+JSNW3puJPmDI/JPgSL5Dwby6cx3evPIIe"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.9.tgz_1508749633954_0.2249093500431627"
      },
      "directories": {}
    },
    "8.0.10": {
      "name": "emotion-theming",
      "version": "8.0.10",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.2.0",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.43.0"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.10",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-0JKHV1aQh20O5fDA1HV3Ew8bzcHBs1+zH7rZmddvLJPYsoIEYHw4dNTeJjnYOjCXRrn9pwMhTKvn+EqF1mDkxQ==",
        "shasum": "8d85efff3fe56006087015f0abd7b575f98dad05",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.10.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDr9342ZXxfWaLklm6OWSXCrSxHf1QO+ERBOgyF2djWywIhAM1YgpvXY/8fxrk4UU3cei/UQlisBQ+dgrZfVA7lKHJ0"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.10.tgz_1510090244542_0.3702285878825933"
      },
      "directories": {}
    },
    "8.0.11": {
      "name": "emotion-theming",
      "version": "8.0.11",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.2.0",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.51.3"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.11",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-ww3DH2cpiM0T6A0EoYJ2wfIi0e93de5TJdTk/AuZn7RoLEbwFbkwMUAvRp3dR1aXwH6lx7VhwCEXQVnSfihm2A==",
        "shasum": "8bae15976273a5aed6a0655c48d59f329cb02602",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.11.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHgFJL6ceXWMpWQde4Tx3mZTKEJPaA3d12lz7OQPyuB7AiBGAHMZQ+W8tdezf6lWesKas5BZX8mk6av/wkbAbfsoag=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.11.tgz_1511520310833_0.029240128817036748"
      },
      "directories": {}
    },
    "8.0.12": {
      "name": "emotion-theming",
      "version": "8.0.12",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup rollup:umd",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch",
        "rollup:umd": "cross-env UMD=true rollup -c ../../rollup.config.js"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://github.com/emotion-js/emotion#readme",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.2.0",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.51.3"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@8.0.12",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-5vFwC5oIfWIEHmxI3dO50Gn9SNCf6nU27LJxMmP/vbId7/i/qsyiVHOVdU41Zo4s0KHzGsN3GnQgMZr4OqClGg==",
        "shasum": "7773fc448d717cc39d6eddb458d31fad39703d00",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-8.0.12.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQChYB1cbdTPLqd1oDNsv5PGxfxEpt7rgPkDeBWWKHy59gIhANfdyUjGZoA1as1aP9fxvTyCJNPI6zrQTs47gHDNXfUl"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-8.0.12.tgz_1512084596250_0.31931754504330456"
      },
      "directories": {}
    },
    "9.0.0-0": {
      "name": "emotion-theming",
      "version": "9.0.0-0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.2.0",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.51.3"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@9.0.0-0",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-cGyGOjNjrbCA6sHCw5a9Hj1FvtoBeyMCsDU71St15n+qeQLwBZNMYSnuXamsSamOlSLgm3GRTs473jnO2toljQ==",
        "shasum": "b7e7c43ca9cbb3ea6a08ccb426b912b784755932",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.0.0-0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCqzejVvBjzhguTRP3+Soo0rrn7atpLRiNRbmESecN6nQIgP8uSM9PpCMGLy3uSRjpqOMmAgD43kU+e+6L5YgAoQFg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-9.0.0-0.tgz_1514000657684_0.40786230750381947"
      },
      "directories": {}
    },
    "9.0.0-1": {
      "name": "emotion-theming",
      "version": "9.0.0-1",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.2.0",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.51.3"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@9.0.0-1",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-88uaFD7wGmCS3MNngBMh9LZERLsFdWBr+7/rIff7looU95J0TTh+18MugTURpwwJMp85eh66KLd7ndsZCiKw/g==",
        "shasum": "ac75eb1248cecebcaeca664a1e68dc449f5cf0a5",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.0.0-1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAjAbKmAN8NTq3TB33bAZj/vJtQPmtTbZwWbVNe9magtAiBoVDB1yLMxX+ieXYkCWzlZ9bPDAQnpqO/bEqR6AfCYww=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-9.0.0-1.tgz_1514005005980_0.8789513290394098"
      },
      "directories": {}
    },
    "9.0.0": {
      "name": "emotion-theming",
      "version": "9.0.0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.2.0",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.51.3"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@9.0.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.4.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-txXD+WHCNEAsju+z1kTTI+7dUvpo9VW0NW00xH4cI/E7DUCjmafVVmeOADkEMWJe/lstSKHuFd0I1y3ntWhCTQ==",
        "shasum": "3b7dd07ceae70aab98280e81df8bfd7f9254d5c3",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.0.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAwnNVvpkoSCKuUpl3lURZ5QmEc02b/JSceybZi0SkLfAiAtppDSNYFtqNr7PBEiglXxZDgRWWiidmNy7Odl/e/jGw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming-9.0.0.tgz_1517720011769_0.12455891608260572"
      },
      "directories": {}
    },
    "9.1.2": {
      "name": "emotion-theming",
      "version": "9.1.2",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.2.0",
        "prop-types": "^15.5.8",
        "rimraf": "^2.6.1",
        "rollup": "^0.51.3"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": ">= 15",
        "react": ">= 15"
      },
      "_id": "emotion-theming@9.1.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.6.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-Mlr7fIvzEna6paZOFu6hdCuiEPVHxu/+Jm/mKnULoGB2AEnhN8MM8SF6/WRvQtoJC1AXADSARNz6i+hM9Kk4uw==",
        "shasum": "f044b03d00f44e4b19cfaa2165bdf72affa40080",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.1.2.tgz",
        "fileCount": 18,
        "unpackedSize": 109715,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa1aYoCRA9TVsSAnZWagAATzUP/13YovaNbywPveDFqJyH\n1qhuw5eT4hOMOgzlddxRD4vX+YKNdMQyYZoKVrkc+Mz1a4GbJKi0iOvJNxb6\nvzubbx3TmJ3GORpcJhOu2RGqd5nRDdRqyMXMWhpjXMtp4TqLWCVmWvVJxJHF\nzLIB80WqFCMYiEdZC1sxQN7QxHyqc8SOgOUS+53ok0IWpoQWuvaylUuKxhBN\nUPRPHc3ac2SjN9kUhlfflHDvcWln792Wp/BpWo4zssv9sooe3A+m8aDlideO\nxuqsEWCLwnt7QLS5XbXoajeet6zXuCXkXAI1yLxYdivFgfoVRUSM5a57HFT3\nvdgisE53prp9l2dAvw0TovX1s9BF6AnZqLc+nDgSfuW7VasbBp9N6n/jwPme\nYG83uYccTGnfGuA2v3iMJykyn7j0AzxjxrlbQPLTwiFV+UKeRSFeAw7tqhgC\nX4oXxsZWxnQ4mt2us9cMK5Nf/GmMY8dubJ9JQTAmK1PraM5KJe1j9/XXPAcg\n2J8MSDHZXpMjqCTSeoocSOnnUIdlReXKF3wRdSyUNP7GyM5cRaOcMwutyH4Y\naX5uHcly2BAn1A3jFl7UGMY7FuaWMpMsFfF8uC0DsFL30VsIkW4/qiPFQ34+\nEXyDBvGFJqVtfcbw5AaljLr6wVGta7Wdw9L4N78YR4eRbKIGkUAr3yifk0qX\nPnY9\r\n=J7q3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDrFngrIL05dFQIgGFXToEEM5HYU9hnQZqxfwnfPo5Q2AIhALhbdVs33QhkRKl3D5EdArYv0MCB2FGtAtPZCuG87Q0M"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_9.1.2_1523951143286_0.5719531029373239"
      },
      "_hasShrinkwrap": false
    },
    "9.2.0": {
      "name": "emotion-theming",
      "version": "9.2.0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh/",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.3.0",
        "prop-types": "^15.6.1",
        "rimraf": "^2.6.1",
        "rollup": "^0.51.3"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": "15.x",
        "react": "15.x || 16.x"
      },
      "_id": "emotion-theming@9.2.0",
      "dist": {
        "shasum": "a98448cf87ea8040f5339b9c6377901d64859d13",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.2.0.tgz",
        "fileCount": 22,
        "unpackedSize": 125022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGQKKCRA9TVsSAnZWagAA8HUP/0fjXQw30FzhO7KuNkOy\nXqTLgARrokHN9Vl+Vx4MEiGxjvPYEu/wGvnwux2AiuSKsWIU/O5zfk4/SyIX\nC+eUeXxKl/NLclJe2sIzokZXpkKzWt1RR1aDODp3NX71zlaUo3/cfSz0ZdQQ\nRVmITiLQXWGbuYDb2bdXut7eswV1RUNVI3fVjBbpJ6SLXOi4F+ygCKiwAdFL\nLEiIB3hMov+JNLrVy1EUPVSkfL4Bc3M+nmlrHSm9txmLdoOQfKjXiSxSATRM\n8ipWSbbuECFErzsjgLpsg1oZLfKX17uhjYkjQoO1vxuB6Z8S8rcbAsuEI605\nWgC/X3u907SLVn8rKQOEcr71OYNr0ryKdk+whMCCxQ2Cxp/5ryYBd1Ermx6B\n00jvQz2A1QSFsfk3oXvWH06U7XESYLsxxNPPgNBB1GZKmU6jLVDcN7wQcz9G\ngPUivq7+Nx/SvzADobUclgvtwrfQdFaOIs7bBPfWBAG15zaebAYl6h5fD8fU\nTocXuI/v5EEIIkSXdpjDhuFoWkoDz6zsyX1VwNIkvDt8TjjVCUtHvbIyy5n+\nJmsYb8OKyrCYVUQxmpVt3dhGhzBM2JqLmRivFLRhy3bgnm6eyVQ+UOBOv01p\nIt+eTviLGHdBf/S1+KLOeQyjytajVDWq9rCpQDsik/nB4YyhnGidJRV4a99O\nqb45\r\n=SyZq\r\n-----END PGP SIGNATURE-----\r\n",
        "integrity": "sha512-2t++fJk5q7dJLR/2BxYnj6qr7FTyV4KFO5ieo/2sPDRG9/m3pk8SwDX4hzSz5ts7wivvwGujDhMsFaSQQaFEmg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF5vEx/An+H00SpKAqlqlvZsOAp2lwGZadDPMKHN+otcAiEA/wAgU5zhmE8p+QckbTeWjcMlu8zYnE9LVvdQpaHhy4E="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_9.2.0_1528365705611_0.9025446286003618"
      },
      "_hasShrinkwrap": false
    },
    "9.2.1": {
      "name": "emotion-theming",
      "version": "9.2.1",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh/",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.3.0",
        "prop-types": "^15.6.1",
        "rimraf": "^2.6.1",
        "rollup": "^0.60.1"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": "15.x",
        "react": "15.x || 16.x"
      },
      "_id": "emotion-theming@9.2.1",
      "dist": {
        "shasum": "a25963f3afe267c77539606ec2bdf721bda31d9c",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.2.1.tgz",
        "fileCount": 22,
        "unpackedSize": 61356,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGQo1CRA9TVsSAnZWagAALDkP/2kOOcUfpsZefUNA7/d1\nSfZD0KN2P7lg5xcJiG238+DNkoXElUO19tM4+jVHkCafzOOMI4ddwE88aaIB\ntxXyXxwlie+Xja0UwewJxhIUKbJh/Qy/G4v4brqC+AWA6cwHmc91k+yEtS25\nZf0Xfl6UONygBIE3a8fqSpAG6Ogl3HwUxwCpj3EpUbCvupacUyD6fyNe3Qtf\nq7l5riIuySWCtn5RZm0hY98I78HAxCsUSUqtPFodqNqP+Cwu3BuA/nj/HgLf\nwdkgA731PbIcYN7eK9s+MvaTvFeimqL6kACT5fm5XrucZEtA4k3rlMFM97nq\nIbyOUANoUNYAV0kz2BzG0g5jVOqx5rpj4JURl3GhArJufuCnJ5hgIu4qg/rM\nCA9EIbCX6QmcuO6a7pJHDJgnfZyWGPVgTEow/iq8wv1fsx//x1ZlICVpLvqZ\n0lj/E+iFo1BYLkELFmZwYl++9tpjJQNOexPXby4NkHJu91n5m+XC7ycynQGz\n8hQ01whQWn0HrWUiPkCDOqVeCAxxlt67KwFycj0IQAKDaNzXt83px5+UMyAf\nOXc8021yhAhHnrSGrXtKEsQlBr+UEjGBnPIQWVnU/WOD4sZEI3O4KPVaUG1Y\nxRNNiNpQbczcK88o3SVHwC7qOyBN8+kCip3CEvQt64+QiW8NHbxzEC5WAoEU\nxaSy\r\n=kx/f\r\n-----END PGP SIGNATURE-----\r\n",
        "integrity": "sha512-WKAnGbcYZMfWQ2CQjd2+kJSB6wUTw3OADGO9mNs3GCJXSbQFu7WMJleS6FqOpt093hOJSRnxFOzBj+Hz1UFhqA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCYDTRcAvLLYeTXgRhVaabVdAkW5dDBb+o2tYJv2ir2MAIgDbLRqq1UyyOAJ8IQplz6Y0M03FA4YrNeSA4bwc1iFRQ="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_9.2.1_1528367669449_0.9091369866696524"
      },
      "_hasShrinkwrap": false
    },
    "9.2.3": {
      "name": "emotion-theming",
      "version": "9.2.3",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh/",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.3.0",
        "prop-types": "^15.6.1",
        "rimraf": "^2.6.1",
        "rollup": "^0.60.1"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": "15.x",
        "react": "15.x || 16.x"
      },
      "_id": "emotion-theming@9.2.3",
      "dist": {
        "shasum": "a851f66615aeb8a7a02891e201da3b56fddf9a46",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.2.3.tgz",
        "fileCount": 22,
        "unpackedSize": 61319,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGzoTCRA9TVsSAnZWagAAYuIP/00TOEtxEIAjQimEYght\nTb92VfWC+xISmOhSF001DJJnHNr2Gp+sQ6eZ+/mVhJVR9DxuXjcZN3TePjRX\n2oMIvDxr673FSImeTSE6sOsnAABH+1XG3lfC/61/3xi0C9TOLO7NbLk0YYKe\noR26KKSwBdqLyclFLjVf4LSaG7iEvTnXMbRTQRzJsx+nNk3e4EQPv+lqpKYC\n8wa99nE3ovr+Y1AhHaqcXbLLyv8zIs+Jxb1VdEE157zbgE3MvKMeEaNGgS7Y\n4MDrbwRPxOKLdL0sITPZY+NpFaCu0KTne5wnvMDP8bBGHEJPZwmp1tnTifau\nBSHMwVRAkaVhxuQ0uqqMy00xVOeCNhMj+4xSsOPzC+c1mA//tL+8VCjr5VSx\nghs9B+StMYeKtMtkXaTmdYs8+ECzDBK4YXjU8wSYFOTbz68PuaeY5kcX01Uy\nyCYxbyY25Qh7h56sH7e5MXtama9NrsxO5ja/IvpLBT/FV0kJdEeiCq3LHSuU\nxB3omb6KbOVhzSXuCBvrSPcf/eiUQDDd6Ef9DRpZ/GIrRFTpsrlzKw+aYlXZ\nU+/pcHfJeq4MkKiF6gZ6GycbBObUkFvyrJDTRVykTgpPbdWE3g2yVbF/hwgI\ncwCtF5ngN2NsPsAKWNyGRDvcOMiNZEnfx0oqmzbHVoZzKAZpoozzgbAcizdM\nLjgz\r\n=tU7M\r\n-----END PGP SIGNATURE-----\r\n",
        "integrity": "sha512-hcpfHgISt4zrnLN5w1BEDyZadmEHY3T+UWOT43J0kJnWgqUcEyvsm6Xcnae6+zcBusUHE0FlS6L8vnfDG5/VlA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCNjQb/Dxuy7ChwfHTBgiDvrQm08tEq1/en6wdn4P08MQIhAIXj4MOY24w91jqDPgsxoqtQsHuix0GTg3kSXHOx/Rct"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_9.2.3_1528510994709_0.8696741575949423"
      },
      "_hasShrinkwrap": false
    },
    "9.2.4": {
      "name": "emotion-theming",
      "version": "9.2.4",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.es.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "build": "npm-run-all clean rollup",
        "test:typescript": "dtslint types",
        "clean": "rimraf dist",
        "rollup": "rollup -c ../../rollup.config.js",
        "watch": "rollup -c ../../rollup.config.js --watch"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh/",
      "devDependencies": {
        "@types/react": "16.0.16",
        "cross-env": "^5.0.1",
        "dtslint": "^0.3.0",
        "prop-types": "^15.6.1",
        "rimraf": "^2.6.1",
        "rollup": "^0.60.1"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": "15.x",
        "react": "15.x || 16.x"
      },
      "_id": "emotion-theming@9.2.4",
      "dist": {
        "shasum": "975837861ef2028704a014a60c64ebfabd432755",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.2.4.tgz",
        "fileCount": 22,
        "unpackedSize": 61419,
        "integrity": "sha512-8a7cdEaBfMKqQAwHM1X6x2cu2rJgbcO53TxeTibT+Szi8B4Dpfb38vvySZnNTdB016LIiazPz+72RnJSWl5qNw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDCILS4Ip0ttc/3kqnVSwK7RapmPXVXK4La24HpnLS9xAiBuVrUJfPwxAc/mZXzAtGnN4e4O7Wrs7AksZKm/lKZmFQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_9.2.4_1529614510424_0.5640532212042557"
      },
      "_hasShrinkwrap": false
    },
    "9.2.5": {
      "name": "emotion-theming",
      "version": "9.2.5",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh/",
      "devDependencies": {
        "@types/react": "16.0.16",
        "dtslint": "^0.3.0",
        "prop-types": "^15.6.1"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": "15.x",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "_id": "emotion-theming@9.2.5",
      "dist": {
        "shasum": "f33f210f11c80e113641b34aec9e0bf9e04cbd89",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.2.5.tgz",
        "fileCount": 22,
        "unpackedSize": 61439,
        "integrity": "sha512-eUFVcVONp39wLQof7McCc00OvqKEc0LfWDyL/EWQzSaNpax7Lef3EWIpWyKSRtGhTvatdf+xmPR1KJeOcGFpgg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB3/dSENm7mdnj1xdutNhbK1fi0zUq5rUR97qVCAz+tbAiBb6AQh820xlyeGIzXTg6DwkR+42UIPAd1hB/HirhAyVA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_9.2.5_1530918173075_0.4965384459088582"
      },
      "_hasShrinkwrap": false
    },
    "9.2.6": {
      "name": "emotion-theming",
      "version": "9.2.6",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "files": [
        "src",
        "dist",
        "types"
      ],
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.0.16",
        "dtslint": "^0.3.0",
        "prop-types": "^15.6.1"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": "15.x",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "_id": "emotion-theming@9.2.6",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.6.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-sbZStubPmaDuMhs3+saH4XegnoMgbVtEY2giD1MP+maDinCnJdzf/1Apcip1wo5HMAN7vrjvpmcY13pH34xR6g==",
        "shasum": "ca69b94e28f66a5d9ca1e259633246beaa24afbc",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.2.6.tgz",
        "fileCount": 18,
        "unpackedSize": 59984,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbSsjRCRA9TVsSAnZWagAA0DsQAJpOR6xxAwBNrkQISdqB\nL9b/hatF2dJLOYhwH3Y9odXjDq2M56+lMr4BiCfuPcs6qbbqeRl9gT+sRrUH\nb6RziOaD0EY9itwJOqAopLzPjXaHsJNRqjH41LkstAvyQZDsBItjkJili/JE\n1r0jGe4X8N3TlIoJZtKedL2YlOHJxwfWa1PTrerZf0votH8oScOJ6PHd2rQk\n1CqAWFz2IxSgUCn1qlCS2Xv7OrWY0/bFnHrY1xqAg1JO5eYy6KRZWfkQ9uFu\ndGRxGRWuJ/lflD9xDBixyb5+xCVDaeV9IAhBP/d6Hn46StBw9/jsmLccK0A3\n/qq6vsITorvmcUbCHZ9NBdF3wWKhVQkf1exunxOhw/kWFhSVRRatLmpQEcA0\nbzAE7vylLE3vHsYVLeGCujtVrIxJdrxNbeyRueWIILZr6+ZB0NieTB30vNn7\na7IURSUB532Ohfju+pJTWk6Q5YwjgMVADjPpz1g7ubJCYZJJv2sDUqslqbA7\nI7G+2+Bsdn+Nycc6FBp/QymeZbIuC1Q7As4++Fw3yVV36f7r813VXSvD3LlK\n3/ZZVw9bR5YYPDyJg/zS3YxiTc9uQcTu2d3wHqgtnDDDn7msxihLkzjLM39q\nU6/2WrOEycD0leVFefaavX6miAn0DsZhkp2NJv9fk9hOjGXyJD0hG9sK/Mqq\nxfiY\r\n=OWL5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDL7olts/GLwwCy/MaMLFkn0NTi/kOi5TTrCF/jPbNsDAIhAPvOFAUrfn8t43vQn2PaGHnp94yht1cJCnIWChX1Y9X/"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_9.2.6_1531627728970_0.8542122836009656"
      },
      "_hasShrinkwrap": false
    },
    "9.2.9": {
      "name": "emotion-theming",
      "version": "9.2.9",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.0.16",
        "dtslint": "^0.3.0",
        "prop-types": "^15.6.1"
      },
      "dependencies": {
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "prop-types": "15.x",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "_id": "emotion-theming@9.2.9",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-Ncyr1WocmDDrTbuYAzklIUC5iKiGtHy3e5ymoFXcka6SuvZl/EDMawegk4wVp72Agrcm1xemab3QOHfnOkpoMA==",
        "shasum": "2bfd77fdd47d3f5e60d59d97dd4cea4622657220",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-9.2.9.tgz",
        "fileCount": 16,
        "unpackedSize": 43414,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbnjQ1CRA9TVsSAnZWagAAjCoQAIAKYFtzU3STCX8S2qs+\ndmYwu9O3xPu3m5HXkbQVq0bX5xz2K9rzfcZ+MsXOrTmSmmwEaU+0TFuJnoRH\nUAJ9XgTq5vqK2yjo380ilgSr84vtEtqebujNA7SPj/LSA6a4S3qqEoGksVip\nyKD9OG62bcI6MlL6Sf8MhdgWnYjBqDhTmHLjvn5TQ2mSZggFuV02vL5Ldzht\nEZ3uHVp5jrwQVvXgLJkPDL5c1YQHYEX7lI3TwbcmgCUVIj3gWbuCvE16kB5t\nduPgCREozAT8d+2wrBvjPumJ+cndmydcHDE3rz8YDmPp9sO+UbfisThuUZSe\nGNyHFDPba3Nt+9yA+Ck5eIv6PMjQQsGhbGeMW2+fdQOp5Tcw9U+O0jCjRCrF\n9drSW95196BpawI1W4GqxHkN3dF7ukzsdTEHttTOy+cy6ezFzIs1GBq6TUpR\no2Ku6FQkDYrH4mOjw0ozFYkw/venNI2hkGNdYHS1pFmRTQZfmRAx6PS4gGSO\nyuteL0CeYCuI5DZV/dpvc4igzwiSlSyLl7dVPrntiTlKhJxkLGeZMmeXVFV4\n31kGTcNcKqziNKd94mCkSd8iyxpnkv9dx252qx9VL820IJ5IOp6BdkWW8JYl\npFEmg+unSubOFe1UXHMpOVcdN4q82UhBl5/GQb6s1tTaMpIz4LkDvVsceX5Q\nRrkw\r\n=uQ+V\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGINxxwyAhHz7Mdce3QjCQXUVwaOY+DuQDodgLvJPzQIAiBsPx8FXXLuEeAe2NIM0+m+EMWO8lQWrmbd+jhszkCOhA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_9.2.9_1537094708234_0.22782629196994897"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-really-unsafe-please-do-not-use.0": {
      "name": "emotion-theming",
      "version": "10.0.0-really-unsafe-please-do-not-use.0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.0.16",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^10.0.0-really-unsafe-please-do-not-use.0",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": "0.x.x",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "gitHead": "a5f3825603dffd69fddb44bf5f29afd7c49eabd5",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:emotion-theming-10.0.0-really-unsafe-please-do-not-use.0.tgz",
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n* [Install](#install)\n* [Usage](#usage)\n* [API](#api)\n  * [ThemeProvider](#themeprovider)\n  * [withTheme](#withthemecomponent)\n* [Credits](#credits)\n* [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\n### TODO: Add example with the css prop\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component (HOC). This HOC seamlessly acquires the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`.\n\nHere is a complete example for a typical React + Emotion app (information about each piece of the theming API is listed afterward):\n\n```jsx\n/** child.js */\nimport React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.div`\n  background: whitesmoke;\n  height: 100vh;\n`\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font: 20px/1.5 sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n      </Container>\n    )\n  }\n}\n\n/** parent.js */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './child.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n\n// this assumes the HTML page template has a <main> element already inside <body>\nReactDOM.render(<App />, document.querySelector('main'))\n```\n\n`<ThemeProvider>` acts as a conductor in the component hierarchy and themed components receive the `theme` for whatever purposes are necessary, be it styling or perhaps toggling a piece of functionality.\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `<ThemeProvider>` wrappers may be added deeper in the hierarchy to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n* **`children`: ReactComponent** - A single React component.\n* **`theme`: Object|Function** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n\nconst Text = styled.div`\n  background-color: ${props => props.theme.backgroundColor}; // will be green\n  color: ${props => props.theme.color}; // will be blue\n`\n```\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who originally wrote this.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-really-unsafe-please-do-not-use.0",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-guZ3QE6Qh2/Cz4FfjcwepKn9OU8cP3p5gqFcGv86iU7omibpaNNQt+d0a51FVNeZIZdpjPEooHMraLbpUUXU7g==",
        "shasum": "70fdbc46ee8ae434dd5bac92439bde4a1d21cd94",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-really-unsafe-please-do-not-use.0.tgz",
        "fileCount": 19,
        "unpackedSize": 35647,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrWkCCRA9TVsSAnZWagAAX9gP/2yxV1U9Ew/ptLxODhhq\nKYUU12/hk9AmmriYckmzHRgJ7nUJDxK3ZGYsfYOgfuN0TrBOjEEzzPZy5PCD\nVnxfqL5/vq/NZbB1cDD/0D4zBv4+VAGzM3QTPXiDKis7lWU7RL2zxqSHqg1C\nDBGeSrU1qiRjUM5yl7mFw9vtqvqrupvjBd3hVLgsPRPHbOYiNzjYZ5nYkio6\n6F2LdPGrAkA+N75Qpjhr/4rgLnFaE4xmk0ZJjoGUjM/qBJu36oVVxyf4eZoz\nk2XsYBHRR2nrYf5L+ZLkflbVwGv2upJ7DGp8sotli6egNix0VtZH7Jc/qoIW\noy9dYhCtbpQGluJ+qWhlVAftUfUsel3l1G/EYwvc/lNBSbRrOL7f+Wrn3kb1\nmPPc0j9cs23sM3VnTpisq6m8B/r1ruGhX8WxKTgt1Ho1wL9HALlrAdkvZ7qx\nYynuNkoz0vIGCegGChjXPC/f86IMa9wGYDbFw7XKcJgwedgr0SzGMGCRMneK\nkT2baydSJnpMI/xFkPv1TDQmfb57NlBGbWqUdDWlBiqhUBNeI9HQPtD9vVhi\nEA9EHUq5woVGQ6cxwtB4nzYtfKS09B0p1bNSL78PLEZupDpJ+rbV++J0gicf\nx4LvRd4t/sfXbTXO0TuWf589MmZBn7DEnoghYFvXnG2NVjKevyLS+hi88J4A\nLDTs\r\n=XW21\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCl3F7fnya0gigCSoO623SVK7xzqV/5E8G/16Xsq+iq9QIgXZlFPFqb7JY9GAspipufYB1ILnhSM3oDQBS3ewHRT+Q="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-really-unsafe-please-do-not-use.0_1538091265227_0.8997466442947692"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-really-unsafe-please-do-not-use.1": {
      "name": "emotion-theming",
      "version": "10.0.0-really-unsafe-please-do-not-use.1",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.0.16",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^10.0.0-really-unsafe-please-do-not-use.1",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": "0.x.x",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "gitHead": "2b1bf6ef43eaa9133ba7a9d7c8d96ebc1d3877e2",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:emotion-theming-10.0.0-really-unsafe-please-do-not-use.1.tgz",
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n* [Install](#install)\n* [Usage](#usage)\n* [API](#api)\n  * [ThemeProvider](#themeprovider)\n  * [withTheme](#withthemecomponent)\n* [Credits](#credits)\n* [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\n### TODO: Add example with the css prop\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component (HOC). This HOC seamlessly acquires the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`.\n\nHere is a complete example for a typical React + Emotion app (information about each piece of the theming API is listed afterward):\n\n```jsx\n/** child.js */\nimport React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.div`\n  background: whitesmoke;\n  height: 100vh;\n`\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font: 20px/1.5 sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n      </Container>\n    )\n  }\n}\n\n/** parent.js */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './child.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n\n// this assumes the HTML page template has a <main> element already inside <body>\nReactDOM.render(<App />, document.querySelector('main'))\n```\n\n`<ThemeProvider>` acts as a conductor in the component hierarchy and themed components receive the `theme` for whatever purposes are necessary, be it styling or perhaps toggling a piece of functionality.\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `<ThemeProvider>` wrappers may be added deeper in the hierarchy to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n* **`children`: ReactComponent** - A single React component.\n* **`theme`: Object|Function** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n\nconst Text = styled.div`\n  background-color: ${props => props.theme.backgroundColor}; // will be green\n  color: ${props => props.theme.color}; // will be blue\n`\n```\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who originally wrote this.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-really-unsafe-please-do-not-use.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-RJ1TfRArSIkBmUIHBDkr4GHq3WJQtCwDCrxJlXt9kQXq2sVlkghDfBXyUhEyJiz92VATlIZ1JBUU1qDAzGuajg==",
        "shasum": "00749f778bbefeb1195a6cfc4fa79b9a57f85361",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-really-unsafe-please-do-not-use.1.tgz",
        "fileCount": 19,
        "unpackedSize": 35647,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrauXCRA9TVsSAnZWagAA664P/j0M351iP0FC+83m4xkz\nweqenmEhQqnT0CTNOaSia81IwnYetZUBmSR/XUK3g3QU3359jZRhHQPiRuV/\n8B0gIY4FRohxoMlLLgKgpbHzkGJKTEpziC2+2fL8uI98RsVjl2IJ0aQ99bp0\n81+hRNQt5viCIJz3omJNDlTZSbLeLLH/tAFcdRCrMLfc31qS6bxDPkDIRCBf\nHj6NJasMWa+Mi6deFdwRIFxrV9qNz9mhw5SbE2qhHBTSsuyk5Jvk2wjIMzPN\nUjndJthnluQnngfWuZX23FOA4rsluNqqJlZTFnTEfU9mZUyyWHPpXx/ytJ15\nS0PuFClMmukXi56oDvZ41AuIZ3XNxFaTA/iosjxRgcvhC2HYEA6ejUMLbDVS\n3pI6d5PQTi5Hnl7eDNC/XXBxMABR8l6tlb/EDveBC6s//K/q+ejhrLkpi14C\nYAzy9UdXGT4dCnjoUklg9/wkesxeNuGOf/1zBdh9nHy3wUkFfBebuK8DR4NA\ngINXR3vYlNmxQzbXR5IyFx+5KkGnnOYYqv4nFYuQ46OPV8O6lWjmWN4N9AY2\n2DgFoFMkhBvkhuBVysJsVsjckpeEskl5Sp2E5O0Up2d/+uGvCzSuGXHgyWHS\n8z5iosippPCCWqwi2N5wG2FwVe0jGQYtlv9crRB+guajxww4Bm1RIf/x613e\nLJIb\r\n=6h/9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFWrQ90yPOSNjQERFlXTgA6ldMcoUiNK/A0JuM8uYwLdAiEA6VvzOTZpw42aNug+/ylpuGtWDZhuOSic/+N4+iokF3I="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-really-unsafe-please-do-not-use.1_1538108311053_0.15471763105980485"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-really-unsafe-please-do-not-use.2": {
      "name": "emotion-theming",
      "version": "10.0.0-really-unsafe-please-do-not-use.2",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.0.16",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^10.0.0-really-unsafe-please-do-not-use.2",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": "0.x.x",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "gitHead": "0da0de50f6f2c19e46bca7662d1a954d48db1264",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:emotion-theming-10.0.0-really-unsafe-please-do-not-use.2.tgz",
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n* [Install](#install)\n* [Usage](#usage)\n* [API](#api)\n  * [ThemeProvider](#themeprovider)\n  * [withTheme](#withthemecomponent)\n* [Credits](#credits)\n* [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\n### TODO: Add example with the css prop\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component (HOC). This HOC seamlessly acquires the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`.\n\nHere is a complete example for a typical React + Emotion app (information about each piece of the theming API is listed afterward):\n\n```jsx\n/** child.js */\nimport React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.div`\n  background: whitesmoke;\n  height: 100vh;\n`\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font: 20px/1.5 sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n      </Container>\n    )\n  }\n}\n\n/** parent.js */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './child.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n\n// this assumes the HTML page template has a <main> element already inside <body>\nReactDOM.render(<App />, document.querySelector('main'))\n```\n\n`<ThemeProvider>` acts as a conductor in the component hierarchy and themed components receive the `theme` for whatever purposes are necessary, be it styling or perhaps toggling a piece of functionality.\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `<ThemeProvider>` wrappers may be added deeper in the hierarchy to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n* **`children`: ReactComponent** - A single React component.\n* **`theme`: Object|Function** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n\nconst Text = styled.div`\n  background-color: ${props => props.theme.backgroundColor}; // will be green\n  color: ${props => props.theme.color}; // will be blue\n`\n```\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who originally wrote this.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-really-unsafe-please-do-not-use.2",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-xgcvCmw5xKi4MQQqnRzxDqPeAlKkZl9oQRVAIeHcGeY4JIPY/KKwu4/wgLf0kBNxxHyP8sxpO6sLd8LhrcL5OA==",
        "shasum": "d33b3e73f7b2fec28efab0103f6cb0c99b9ea026",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-really-unsafe-please-do-not-use.2.tgz",
        "fileCount": 19,
        "unpackedSize": 35647,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbra//CRA9TVsSAnZWagAAHxcP/3+ds2kDFGuVelcFA0UJ\nURrdSCisx6Ky6R0oCFZL6IQ7FQwLvJFngIQzjMoghg1Jm3QVlf8zkVSVekfs\nFijd/FjR25hKCcmJBMPhm1xs8b1Ixj4TTvLCLV83fr5XCX9srqFtYUjUREi9\nP14uOa+KE7w7ZPeXnu1omgOjzZQ/N42mNYNkOqj4T4+4MAmaYwVCZouqbPlp\nr2MKkJS9Y4EqW5Yqn9f98Vft/TIRh9hOE0kRVqght9+QgNIY/IJ83OgEOoeW\n7jxXyB0UeIoK1dMxnn7mNddVyJidorEoIrGydOAE7ErSJX6kARyyXkBJxTVq\npDKbW/snBKu0mu/FKHtqlxk9qyvmzcPKeaYJsW6XDxVxDbKNWjrwOeXIKXi+\n08XxnGc61Q+J6SFODPTOddlak4SUXlvNkLrAqtsA9kLYOYSX/8gJVenv0yh7\nE2CZ3NtFWifk5FJJyHGVIdrtMwhtyRzE19nSvUltHOEewGLHj9jsz2b/8+Id\nBywGNMTYBrJGvOfirJ/RZHmCuYWEoCd2mCsq41meS13uZ7e78jM7gF+ahG2p\n6RhUAHz68o/HZrSIICiYSmeNOEz6xfDn0SfVZ1YVQ/XFbM7N4RiBHqy6mj42\n2onuXWwiYosk6qw3cX3WB1bnjEh2iqzHId0aBLoxd89h4VaXZ7nii+VJh335\n7XES\r\n=7qo0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCTmApTtichmPTc6IbLvn18XMQcbcGhaWiTgw1aMvNRFgIgAts4gZmHFzpZ5SGRW0jS/QP2GIz+h+dkeFaZeP8mqxU="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-really-unsafe-please-do-not-use.2_1538109438931_0.6147039114331478"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.0": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": "0.x.x",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\n### TODO: Add example with the css prop\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component (HOC). This HOC seamlessly acquires the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`.\n\nHere is a complete example for a typical React + Emotion app (information about each piece of the theming API is listed afterward):\n\n```jsx\n/** child.js */\nimport React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.div`\n  background: whitesmoke;\n  height: 100vh;\n`\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font: 20px/1.5 sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n      </Container>\n    )\n  }\n}\n\n/** parent.js */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './child.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n\n// this assumes the HTML page template has a <main> element already inside <body>\nReactDOM.render(<App />, document.querySelector('main'))\n```\n\n`<ThemeProvider>` acts as a conductor in the component hierarchy and themed components receive the `theme` for whatever purposes are necessary, be it styling or perhaps toggling a piece of functionality.\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `<ThemeProvider>` wrappers may be added deeper in the hierarchy to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: ReactComponent** - A single React component.\n- **`theme`: Object|Function** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n\nconst Text = styled.div`\n  background-color: ${props => props.theme.backgroundColor}; // will be green\n  color: ${props => props.theme.color}; // will be blue\n`\n```\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who originally wrote this.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.0",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-T8IZaS5EzUvYXKY9awr2OFm529cdLaBCjw90qMHDvxjOYKRNRuNaMCMWwsF3ghHcPXZ7UHcpqYKTI55rQkRAGw==",
        "shasum": "e10994048d5c937ba98a12e240d6bc88122231ef",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.0.tgz",
        "fileCount": 19,
        "unpackedSize": 34405,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbwaAsCRA9TVsSAnZWagAAdooP/0BBOaBqBgdSSYKPKdOw\nIUBdkcW0fEZlRTuwn2QsXu38s7e/xeyapTI0FHSu2Kl9SXGV4VOpbwtig6qh\nmW+4p+gnbtojLknGLZGKSfMyNeCD1Ah4epQXuEiI9y7TpsRKhZp/X2KX1drk\n7Ne5fgIAlRlm/wmTBBevJ2ec5x7vgchvz7i7usiMOC16zb4OI7Q6DiGE6JFL\n4erSsFTmelvo0CSc67TDX9rRoWCidp4FS21fFFLBoPJFEaWRZM/S3/Q+GpJ7\n7Mobh+I0X4dJrvSqKXkwQk+h/r5ca7oViY2UUEcvSsOLJCUvpyWLuc0ECCY5\nGxo8nnAMs+aPnvzMc4md4Ou83mJtFBsknY0rnczT7+wlBmh9bGu19nAtcKpU\nimI1OSkcpEm2tBSFsIXu1Jn7ShXi+PGK0bPWqm/cCzshzIxFQpUJrSi1iEkl\nBlYWgPS367GUD5Qk2+ySKs6A/fJ/D/9NbRxpvbzoeMRdol1tYh4q7qiQ70Ek\nk2PA74ouf3YzNKj2VgXF8aNEDUdsMezxvHRbHUKn0y7hw6HXvgMUXAN8WX9g\niL0SPMMwfagoRtU0GyY72PvPKesEydYb03WMhthh+5gBWGBeKhTzMEy9i/Oy\n5sk+gXyrsOuNm20QefIXB2L63kmz/Xcd2NuClSO2KgH7qJB5SWLERcZXBn8H\ncV1R\r\n=hnyn\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFArs6xdOybfnCT8yEhgL2ZOs+OtecoJU5GcqbwCrvixAiEAky4SU9FvQrnNcq6QabgpoEyPZ03xQDx8+YRX8I4GnWI="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.0_1539416107633_0.6972230062090803"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.1": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.1",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": "10.x.x || 10.0.0-beta.x",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\n### TODO: Add example with the css prop\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component (HOC). This HOC seamlessly acquires the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`.\n\nHere is a complete example for a typical React + Emotion app (information about each piece of the theming API is listed afterward):\n\n```jsx\n/** child.js */\nimport React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.div`\n  background: whitesmoke;\n  height: 100vh;\n`\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font: 20px/1.5 sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n      </Container>\n    )\n  }\n}\n\n/** parent.js */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './child.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n\n// this assumes the HTML page template has a <main> element already inside <body>\nReactDOM.render(<App />, document.querySelector('main'))\n```\n\n`<ThemeProvider>` acts as a conductor in the component hierarchy and themed components receive the `theme` for whatever purposes are necessary, be it styling or perhaps toggling a piece of functionality.\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `<ThemeProvider>` wrappers may be added deeper in the hierarchy to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: ReactComponent** - A single React component.\n- **`theme`: Object|Function** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n\nconst Text = styled.div`\n  background-color: ${props => props.theme.backgroundColor}; // will be green\n  color: ${props => props.theme.color}; // will be blue\n`\n```\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who originally wrote this.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-ECDtn1I2mbwKCUhGmb2nbDYQ9v3ZhxYY5XgqYT80cnfdL+iqhGYPDZCatvUmo9zNtcoqJU4+P1cC3GryzEAAVg==",
        "shasum": "385eb0924be228dcc9860f3fe045c0f9d09a0581",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.1.tgz",
        "fileCount": 19,
        "unpackedSize": 34423,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxGtxCRA9TVsSAnZWagAAxjwP/0lKsmanSfOuvDId10Zl\nxLFpbd2cy+O5zUYuPGF+m3jcKbVzLIxUdvjq6NnULHQVr8RPMT+ijwXdDouo\nopdn4dnZ/k+l+ugIrZmwpFQb2hEbTmh/OBpDMLjJwbI9EgZVn6A27gQ5tE/u\nVuMjUSivfBtbpgGPAsg0Rm0V+7xD/98lkdr/kK7d5l4hKkwmO9cRbPoeLsn6\niO52o7ORm4G7Y6yA0oGE1UiYXBUdiORnhtOBKii93Qk6G+IGxw+BE3iM1NeT\nrOvEN24GWvJm9tZHRGDAQo1HabSqIDRJ1vv0/SzysfjWhAZZx1FqrBSNMdSP\nEwVbDo5IWyD8g65Ir8bKJYHtFek10CCZoqtJNiD4nSyz+/z48yJ5XX2u/6ZD\n3Ud78QWj80A1sS5oLGcybxELXLIQay0Zl7ixfGPnFSTIjO4EG74yjDgzm9p4\nYaRMEd9Rso8x78sLvDcUreC6NXu55Yu3m86lj48Vu0zcsLzq9z49ZpYZnazv\nt7yAIITYAxq4TZsEGxfS6MG9PLwmQkxH9rezGt0rMJGWMZCL9A9USs4MhK48\nyE8LCXkmfq4X+a+jDdJQQj/4MzWaF+frfQqPsIZY07d2c7JQwePmU3Dylj/8\no7Jf+4LuRKHUa7OmK/XDwEx+MJ5X5oXFkUL1l2GjmiXzbuahw1VWsjQX2YPy\nDKy4\r\n=xrZF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBHpqr7XiW6Gh0AKTpsSjuJMT3G5ZjL+sgiU2qRW3FHXAiBGWMeBD713cRzTecksMB0shwTFySt0PB7Be9uBjPL44A=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.1_1539599216792_0.5854484256015522"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.2": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.2",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\n### TODO: Add example with the css prop\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component (HOC). This HOC seamlessly acquires the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`.\n\nHere is a complete example for a typical React + Emotion app (information about each piece of the theming API is listed afterward):\n\n```jsx\n/** child.js */\nimport React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.div`\n  background: whitesmoke;\n  height: 100vh;\n`\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font: 20px/1.5 sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n      </Container>\n    )\n  }\n}\n\n/** parent.js */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './child.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n\n// this assumes the HTML page template has a <main> element already inside <body>\nReactDOM.render(<App />, document.querySelector('main'))\n```\n\n`<ThemeProvider>` acts as a conductor in the component hierarchy and themed components receive the `theme` for whatever purposes are necessary, be it styling or perhaps toggling a piece of functionality.\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `<ThemeProvider>` wrappers may be added deeper in the hierarchy to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: ReactComponent** - A single React component.\n- **`theme`: Object|Function** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n\nconst Text = styled.div`\n  background-color: ${props => props.theme.backgroundColor}; // will be green\n  color: ${props => props.theme.color}; // will be blue\n`\n```\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who originally wrote this.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.2",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-5p4v9UyI7eneFRhPAaZS3PXA68hpER/pkqJ058g7BxGrhiFEWsCcC1pV1GPwullh0xb13oWPFmAcK7HS8D2D7g==",
        "shasum": "65ead7a0cb470af7993c596a16fe0774fcb72e99",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.2.tgz",
        "fileCount": 19,
        "unpackedSize": 34413,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxaLPCRA9TVsSAnZWagAA4TYP/0H2asvO+0ZcgvU0pKgD\nV1s6k2c8HN60Rp5wzcoei+FC9eG/ehVWX+APRX0F76gf0Rp9jcORwrqU0QZO\ndWcDijS1ZvbP4TTKmigY4GA7SEK9FLjofp0/wn4WQRcMipxAk1RKjkDroXvC\nAI2PabYz0XhHoJmLoG4l1ytBCSPfTSjY7x0PWEO/VutDq0hh7co0uw9QyE7S\n7Tq5RiBNAPOUjZ/NLH+1010ByVrLWC19aE0Oj0JXJGNBlokvQk85a/+T25OZ\n8wuR/7GxO/09pz6weiEjELMR4OwqPPVLbmh2rkJ/OgaLVz21B1kHnviEMo1r\nylpSXzbSkt7DJCucnAGv2b4cjTm3sRpYt+C1X8RKhFFzG3dPnOb/tUAhsNsn\na7WpBHp6d956QHcfLQGvfpY2yV5nOv9BmhhmQbg9MSjzHBmDPBBt7ApgDxj8\nEZYUOr/fOVK5mLiooKJcrAzOv59MV8C4Wc5+Is6oLJIWUBbaIxOytxfRBSun\nMUMthMeYW0jyTfjBgDwUAkkYoKIH4pMGncFN9qU0qZV29FFmce2hCuHTu45M\nnqHO2rJvuWMvmUjddqcD37oR1W7ropYOY4tzv8fttUCgePHoO9FRQI8erjIP\n9bMP1L9/OTChmeO3HQCQLpvq5+S4ithBi/iecZVhm5o8Xr2Tv94wz6m4Pm/6\n/nFx\r\n=rOkd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD06e+eecjlJm3XGqQPuPC25gfjnf1WUFgYovzOrJ6OsQIgWfBqxxdOKcVhejg0JYYVExu9whLATcsjihVxBJ0C2aY="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.2_1539678926642_0.22412612702266466"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.3": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.3",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\n### TODO: Add example with the css prop\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component (HOC). This HOC seamlessly acquires the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`.\n\nHere is a complete example for a typical React + Emotion app (information about each piece of the theming API is listed afterward):\n\n```jsx\n/** child.js */\nimport React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.div`\n  background: whitesmoke;\n  height: 100vh;\n`\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font: 20px/1.5 sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n      </Container>\n    )\n  }\n}\n\n/** parent.js */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './child.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n\n// this assumes the HTML page template has a <main> element already inside <body>\nReactDOM.render(<App />, document.querySelector('main'))\n```\n\n`<ThemeProvider>` acts as a conductor in the component hierarchy and themed components receive the `theme` for whatever purposes are necessary, be it styling or perhaps toggling a piece of functionality.\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `<ThemeProvider>` wrappers may be added deeper in the hierarchy to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: ReactComponent** - A single React component.\n- **`theme`: Object|Function** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n\nconst Text = styled.div`\n  background-color: ${props => props.theme.backgroundColor}; // will be green\n  color: ${props => props.theme.color}; // will be blue\n`\n```\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who originally wrote this.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.3",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-YS7DDX7C7g+7uVKV6I+Drzx3qGcw2Trdf4hYJszSP9nkA+U/RpMcscp248gvN8XVC0iGua37pd7I+oDpHIBbrw==",
        "shasum": "ff7eeb4ed1ce8cc22dfd6a7732e9211dfef994ef",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.3.tgz",
        "fileCount": 19,
        "unpackedSize": 34413,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxntBCRA9TVsSAnZWagAAa9UP/RsVumOtm59/UqaSK/+n\nMNBEfM/4HsFxvYzB8htbhuSY50kPQRNCs64L7BSuiwAttCcCe/Oiz5S3rCxC\nGmpDwmw4hdX/cC33Jek5FcEOWfz8ybi0NuSYNFaOaOUMqU4ADloc4Pyf9vMG\nGPbPrncRfzqPqb4wg0OMIZbCNKGyaEsMaQIlZEmrrtChljtZw8c9SzZxa1lm\npXcf7DDf3bAC/cbaqX+b8cHyyC+Bes7n9nlBb1wZzvIBqN7RS2Urjvdqk2gs\n1M5RKOPwx7kgBtYVveFy6kwCJT11rrYEyRPto1rYP/Mw9VBNV9rlOPvv103L\nCA26acS3CY4Zyp5Inrfc4QomrpPQ7RysXNMbLsuTnQZgYW1mdPHJqIbXJ806\nuHac7g8n4gMSTZ2FG/1H2UmO8/mmdk7e0NwTDhU5ABdmX6X0/Q3nSP6DSyuX\nwswAQCRaWmhbBTHp2MYK13r2D+nhg6Mi/8+0yppeSHjv+IgkGPfGndIjSbQC\nc8BgvpOUzp4hcd4HhE/U9P0IXwMM5EArA2uLqQ0c8zxkAU9KieUWpJgOH5RX\n84FIKIItBYaxxivp5uVojpIOgsJ20gYkfPAaH2VDs3BPKhedc+MHcQXOZkjD\ng84RPe9qKxjZ/oqVVqCSox6CODh2Hcfpmuy/k+Vgwa5E/NPcKxefXnxn0Rl8\nSdsW\r\n=RjFw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCqrRdHigfgCKfFUuxiq8IVGITe24EEGvRE/qqtZ97opQIgeFR6kVvHa9Em22HxFbRRyyVYrmKiBwofZ/aZJkkcuf0="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.3_1539734336209_0.9747146130595723"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.4": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.4",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\n### TODO: Add example with the css prop\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component (HOC). This HOC seamlessly acquires the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`.\n\nHere is a complete example for a typical React + Emotion app (information about each piece of the theming API is listed afterward):\n\n```jsx\n/** child.js */\nimport React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.div`\n  background: whitesmoke;\n  height: 100vh;\n`\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font: 20px/1.5 sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n      </Container>\n    )\n  }\n}\n\n/** parent.js */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './child.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n\n// this assumes the HTML page template has a <main> element already inside <body>\nReactDOM.render(<App />, document.querySelector('main'))\n```\n\n`<ThemeProvider>` acts as a conductor in the component hierarchy and themed components receive the `theme` for whatever purposes are necessary, be it styling or perhaps toggling a piece of functionality.\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `<ThemeProvider>` wrappers may be added deeper in the hierarchy to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: ReactComponent** - A single React component.\n- **`theme`: Object|Function** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n\nconst Text = styled.div`\n  background-color: ${props => props.theme.backgroundColor}; // will be green\n  color: ${props => props.theme.color}; // will be blue\n`\n```\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who originally wrote this.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.4",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-OLeEPn8bMwHDODunEW7IgQK6mAUX2o30JZkAUZOd5aWyrxak0bbWELQQFsSecXY9OmfrNbBnL2nyCXm9aq5K/Q==",
        "shasum": "235d3bd7007c8f325e66ce0f769216ba08f88883",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.4.tgz",
        "fileCount": 19,
        "unpackedSize": 34413,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxuQDCRA9TVsSAnZWagAAKOAP/081NlzyKEoY8j1pybC+\n7FM7u6CfEet2I382zOsXo+P7lrTe2qNhOM4+D1gNB7u6ewqgw9tnPvGX0PiL\nsAd86UmoILM+DwmZmZ9WJ9AryWpcNx26QwuAzayju09WP7qDJGxAuRFFuhrD\nMann3lsSRzP1FF+liusyI9I46C6BED2DoQ/KCtGKkHHEStUIuZcfmGshA8jQ\nHPzHRbrNeHek6BRovlwLPmC0hnKK84mQ+NWprAfpCSBoOjaUktx4YNlX+IQD\njyQRmd9o3JxiSRxe1vVq3uIAhtenNGicjKTgJl/FwP+Ydkuv41T2cj8Mhv9S\nQXDHDaeiSGXkEz4DaFtmowFLaxK+Bzlxb8XNp67yxlQ1NjF/xyizaTGrIdsu\nFMIl2jjC4gNx2dFYcjqQzg/xeDv88FGAlumiShdcPQJkL12P7aH6lP1AiPMH\nPNOWDTiuit+aBIQLzm1ElJZiSBmXjJQHMi/IlvzJ5QOHrKO3h1LTc9wX70HT\nUBe/UgWIQlvhGZbbjWMIlJIgEQfPQGucVHKxZxuA+gm8YDgRLsrhlcl/QfK3\ngxHkyJOKT58sfuztwYIr0ks8MbWEDqls4hT7dbKLWsnidfrJUSXER9/p4iZk\nW3aWZ9yAbSG3yoxXIxQRty/M7Ug08iMq751aznag2XKUqiGpcxoZPOEKiHYD\ndCit\r\n=OZmi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCMr6eh5cE0PqLcIIXnTugqhmbUwMmWDkTjyhegCN5B1wIhAOFv6zn5n845Ot0e1IIxSlObTCHJvvENuWOGlQo0Uzuk"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.4_1539761154364_0.3220779838854899"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.5": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.5",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta",
        "react": "15.x || 16.x"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\n### TODO: Add example with the css prop\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component (HOC). This HOC seamlessly acquires the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`.\n\nHere is a complete example for a typical React + Emotion app (information about each piece of the theming API is listed afterward):\n\n```jsx\n/** child.js */\nimport React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled.div`\n  background: whitesmoke;\n  height: 100vh;\n`\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font: 20px/1.5 sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n      </Container>\n    )\n  }\n}\n\n/** parent.js */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './child.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n\n// this assumes the HTML page template has a <main> element already inside <body>\nReactDOM.render(<App />, document.querySelector('main'))\n```\n\n`<ThemeProvider>` acts as a conductor in the component hierarchy and themed components receive the `theme` for whatever purposes are necessary, be it styling or perhaps toggling a piece of functionality.\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `<ThemeProvider>` wrappers may be added deeper in the hierarchy to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: ReactComponent** - A single React component.\n- **`theme`: Object|Function** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n\nconst Text = styled.div`\n  background-color: ${props => props.theme.backgroundColor}; // will be green\n  color: ${props => props.theme.color}; // will be blue\n`\n```\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who originally wrote this.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.5",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-f+lbniWtyW0E8ncWSqDzJ4sAzKH8Z+wbKyXGs7ZawtPnvs2HOyVr+6ljDy8F/AgovpjC6eU+Z0GgcBZL54v1oA==",
        "shasum": "05cab0a882b5295a706abd8d023ccfc398bfaa14",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.5.tgz",
        "fileCount": 19,
        "unpackedSize": 34413,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxuYpCRA9TVsSAnZWagAAzF4P/ik6h85TImqBPNOFdl7v\nAmC908EU9ZMbREv+xZmczvHUKhURZWLxRYcGddfo7VyFpg2N4YVPt38JYuBA\nrAzumSNc68KRIXNH4yA8yw1pwrZQZW8sgiLclfGxVSOdCji16zpZhaRyr3L5\nRu3XGI8nlaUq8rUilAzhtpThIPFEhJsrb1z494yElajAScN1qy4CT2OKQHDv\nwiQ22iOPIzakTKScbM/N9KRNxwpZkS/jEBksPYFwOvRNqkwUsaf3/+XrCABI\nraiAqyCFr/Rwiwvo7Uc34ipUKraRVIjXpdpeC3cNin0SrjxpKlEb7w8Hcs6D\nto0//DRzXHGoG3chpVYK8OTltkLRm3YrP6OBM+KPhi0A6qc5eL6Vni5oTWhZ\nZJ25DlVE0eLD9X0IWetwsyHCPRnYCvftFB+0jermrAxZ/G86v1zqB+4QYpta\n4PeW0worhKMCKFipDULXcRopdXVIkX4nX6C1Yh7Q4H+JA8jDO20MEKusTXOM\nohNXTVHRImVtn0Wqqfevfsmjk55tqb/rZGkjGM0BcVm8OkLeIgQ4Jj2jtyIW\narvZP8T+kILVKpscvPfTGlU/jUuxbE2a8xS/b53XoCdmBklTzH9rOnjJqJc+\nWGq6CW5tNN6fiOvXwjpV05bAgiwDNIHDJrINqRIyuVW+gJXznyyFtOAEUNBi\nPJms\r\n=x4Bv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGXMjiPollz2TG/5b3hfKV+rElsvVTiwaLwt8sEKeNQYAiEAnhkcDcDrCTyDNW6Fg3yw6x8iPuYLMomf1KXq+XQIhCI="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.5_1539761705256_0.9497520029404631"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.6": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.6",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.0-beta.6",
        "@emotion/styled": "^10.0.0-beta.6",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.6",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-Jtac3IVyPtLe/CukcHlGI88pFk9SljcK9758ofPJ+dlccPwuNwWYYDJHjNmpUovQ1XUQPPTufkYPGBbfPCHaog==",
        "shasum": "b4a181781cd7c1dd7473e31feaf53883927f8218",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.6.tgz",
        "fileCount": 19,
        "unpackedSize": 34020,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0/XuCRA9TVsSAnZWagAAoj4P/0vi3vszZhRQrQ17O+pO\nKZcmUdAPLpFlRWd77upwTKXAM/c0QznqA3nSDgfb2KaVPfGDeJGynd7l8bK4\njO+cxxHP+V/sm/U7pVfZVfDMgva5nng55h4v3JmogPK7La6pZRhK/uDSZFKq\nAvrvScMbktcNk6OFozxoe2F4DeDYrt+qZY95+AgBikLkkd8knGNFMmlxziBF\nW75sKF+Flz8nMzJDicy+yeljflmmCqMU/WuCNbLEYDK9jCas1SW72VpF0Abu\ntWn4xoNA9+pTQeX1snNjjRbP/P2XgsKcm/iy8+lwXnHI082lUP4Fuvf56VOv\n821Ce8vjHDD6KY6qeYf9BCDpuc73JSWXtnmF9BKdgQyzqK2MGmJm+Qh/s9Hl\nJsOkRfIjO4wJytC4Dl8Yp2YVtXuKA966yMVelhMCKbKv6TdrK/vVm4BCWtte\nk8dll8fOV95O6fEDilbB5gvYCC5fMbX91Mpl9OPqNrvXb2LG5NF1PY1AC0DO\nfWgGFW3nUgKvP+/6dqMGzAiHaTyvgdpdPDRWiBBKTRSxFaqy4Gc1H9FxTq2I\ndbC0GUDbrcG4wtkpLce2Tgcp3Mvb4YNeyCCD/3WDDChD4JT4jSRdsqhxKNaW\nxVceYPNAnnaFICjGzWS0L0bt/RSSKml6DXMVkrLEcALFTUCKRtRpLanVG4Rs\nDFAd\r\n=iH1t\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDfdGjmW+L3kQR7sX4JHN54Hu6w53s2z+YS5TMiyb0D1AiEA/EaKOrZKwYoEP6uEbGREA44pZsNcw0ypJ0W43P4OmPs="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.6_1540617709729_0.015081579078992657"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.7": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.7",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.0-beta.7",
        "@emotion/styled": "^10.0.0-beta.7",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.7",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.0.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-aO7WJ+N34BrOiL0fqL60AQkh7cWAGBadA6/WZGaAG9j25qlj34Dg/TsDfzIWpEHaO9QrnogxrQqvtejfRJjMbg==",
        "shasum": "ef1f46da2fa1267441595e5203af01cf2e82e039",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.7.tgz",
        "fileCount": 19,
        "unpackedSize": 34020,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2/1KCRA9TVsSAnZWagAAOwwQAI+otBKgHSHxC8ZVUYoZ\nwZkgHlA1kkJitit12ncaihj+IZt1WuON8JlSMpDT+SxckMjthRLzOx5i64e0\nSI5Dl33/3aZcbjA8HaoVAS+mJJOumr/Q36X5Mx6BczQQwiqjdVWR5U5+fRvP\nfGLJyxvG2AoEh9/jDo4nSoAxgQ9GmgIZDLPBAqkbLwBBD7B0O4UI/QcZ+6/Q\nDS2ZPKadKD1ifZLLHDboFeXNkXksUx+gdy9GILqyJE69LuC/7qEvLNQgx5jU\nSGq7TFwau90DFmMryZnCUaOj7kYTDBaHrDHlc2vhVuttC4wbXicRgwhzRyXd\nm0HqBBPYfUjBxzEEfbNZaUfmBkDO3HveWfkA0o3LHZnAUBKWh9xOhRxrnuS6\nRLNZwzhcJzDEMWxbQFcio+/XFuLzl4z7tPAIy2QYtDrTPAktGSOe9vJkm1oL\n98VLrjYg5cAN3L4Jaw9zd6qNR2rZquLXdcfdEBN2GsFgoAGVd3NHm4NO46Rg\neTIVtp1Im6Mz0c6N1kQyB8AOdZeTZFzK9oIQw8KJaao2ZYrrc3yccran4k74\ncFri7G1PgirHRhoAaWRRabXdpbdxl7KUzgZfPAogGeM9wvKKkQ7QARrKjd5F\np4psGPrh+C8RkpTO8+dfV6Os4XGEsfzOlvQW4AdbneC+eFCZn85SJ9Wc6ndZ\nJBa5\r\n=l5/P\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF6rOYzt79o3JlxIsEbLDbR2D2PhbE5kwx9sIdyrpo5MAiA1xJwGXHqP7zeKJ5xHlr3GV6MwAvGgBd1mflRh4DmtgA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.7_1541143881912_0.6062215913571241"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.8": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.8",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.0-beta.8",
        "@emotion/styled": "^10.0.0-beta.8",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.8",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.0.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-Hks/0uBo641PNIWksMNzHeU/IePWBbDky/JMcPcWJ/nVcLY+wj5N7QANfrC5MFCF0bjJHZitI2PnevrpEXovOA==",
        "shasum": "973641c91431b08c0b1afd2279b2fffe92124ff0",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.8.tgz",
        "fileCount": 19,
        "unpackedSize": 34317,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb38tSCRA9TVsSAnZWagAA/o4QAIimir6wKwSvvAg0Diu6\nf/et/vvTzyIQcQjpN35tb6T3zdzqrZcFXXRBxqGYwiUALx17wNEYaQG57lGq\nF5SfjzxRLinWTPwTTtFcjW183FVf1GY/a+k/wTo5+2kUxiOrxdJ1Q5gNJYbA\n77WjN0vS4/RIFX1aAVD65OYiprU6BvKmSHTHVZ6c6flvRsa6U+o2ucdMMDmY\nc6sp38NyoaODZn4nWjzjaKx+TDhGOs6ETSoZCkQ9Zwoac4swW+fMDfw6aEIW\nIXbA+kXJ/L4C2U/kuTi6HF3ze7MU0glgCdzg8/dYH7D1QVlnps2FO9bAfTyZ\n3zI5GgEeZ/GjrjAl7zzunmvnlOnxda+jg9GRO56/WhFU74kTtu1Sbu1IwVHS\nLtKcZT+kBizhgNp6ekWqxRb7mwsKWEPvn1n7hyXt/Vu2/1NLYd50F5afXnV7\nBb6KB2/T409CtHU+dInbws/Iczr/hyfOREb/0F1rZrO/xIo6FjAogPwGGKRF\nv4VWvaPOFzVBJvBZ9Xx0DNRMZCaCruEwSho7VZxNRkt3OvbRl28ES0EqG57/\n4NS50PDj9Gs6TH1wqtRq5MAOLRXhvE0G9M8vkWNda4owBkPllUfg1Y1Fl9xl\nwNniLqf1p1wkSwfS6pvDDphvI4mBxrsYzlpDPCNb+W6As6badfdWW7CddeV6\nG6/9\r\n=oect\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDJxGscP3l4Ssq7YZGsiEaqVCAgaWJ5VqKO27kZwZRryAiBNfznSA2M4xrbyRx/NSoKFPjFVP5lRAcbQ5JqQ7wyuNw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.8_1541393232149_0.04462858342303222"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.10": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.10",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.0-beta.10",
        "@emotion/styled": "^10.0.0-beta.10",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.10",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-v2YaHUiTJMShqMNHPkKYCADnbnRbnZqleg1PU9qF5i+TlTfHP+yiKdGhx7dljRTNFTwM0OVVM1pgCuQSysOBZw==",
        "shasum": "87db0122688c4937708f728696ee29bfc206c401",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.10.tgz",
        "fileCount": 19,
        "unpackedSize": 34320,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6Qz2CRA9TVsSAnZWagAA0bsP/AqWwOzyKq5HU3mfnsoQ\noZAxXzJcEkQV28HRe5mkTKMSiVM0SLiXXPFOriCNwyijHDaiPfJQ5zCS69U2\nkhpFlAQEgz6EsOdT6/oDLue5yIqwl3RsuIklKgXo0QcfomvTZyQXJ6UDWUrC\nN2anYGSeZhOwxy/+I1QfKXbg95t13SKfwyGWtEIgo47uzMKEws/Jr5SQnQuH\nNNmTJaMdAmywlZEAtA9PSilK5YxFyFl8fcJQYhhe5rghvV7HIXfHvHuZs1zu\n+qlHsxRVsPJIi20OmuEhBw36fqMle+THzsZi+1mUOBXliaZGVczbOtYYBwCn\n/xy+eeqv25bVD8SIKcT23w71BtgOdIEh/lwrWNuXKIVgMuNhRsOnq9BFwm2f\nNN6Pkzo/HZKErmQ+Q3jGCrlmuf4ePRDtCTg6NtacrB0bain1LocSXWm4dsrh\noEepRBJ6JQTpHntSOL7orQwVhc9un1XtMunf3rdZl7ZaSN8uT76xPajUIFab\njtuurTXM6lLbLrA3oM6tAESQK1wuOyXOdKSthIeNMEa4sOUkOdlIP8aEvCH1\np/W3Qd42LGsrmLMUl8JsSR2MLHf7uvt8m7HDbvpC5N8EuTSN9/JWihv6HVOi\n/MY+hraHMBntfszrAaKw0X9TahQQOSiMkYO68lcDYKBdPKwPziEcs6kn+MlV\noM+q\r\n=VE7R\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEQoiB02vU0oUDmjysW3oFjn5RURqDP8jPj/hmwvqfklAiBl6t1gSIGGhXfn+YXTGkvfDxUdiab3yiED7DdRZ0FBsA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.10_1541999861108_0.2575913731912549"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.11": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.11",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "10.0.0-beta.11",
        "@emotion/styled": "10.0.0-beta.11",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "^0.2.0",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.11",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-ahwl7eNsS1VZxxDu6DWdvD0uh+BP6xy3Nnu6LKwKafnHmz6s7D87eaNHxhY6HihXN/5WQ9GEPYCIurQuvB0Ktw==",
        "shasum": "b942916041abb5ac8589902e4915cc359d97f07f",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.11.tgz",
        "fileCount": 19,
        "unpackedSize": 34318,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6SqaCRA9TVsSAnZWagAAMz4P/jqMf3jAkswKQN4oI9yX\nHBh/41I4NpSNn5inV1bUlJllJ3BkTCTbnQDuNxc9MGpYZuQ0hQixdFuUZBUg\nOReSEWWsCqgjEubZgRrbdOgCThHa00A5Qm4mArfq+0oIhU6kXDznz8JIC4NM\nr2j5/bZoAv+cxFYE76mQuNqwJcx6M4tHY6m8BaHhcNmysJDJA3H+3ORnixJv\nyo13Nw/iI5ao6EH2tB/0UqPZeNrEhNzdVAuOQYb4StTkr5dDzahEUkvcmVTA\niYMWpgw7XhehAkiNjGNcrJgkrCXvoIcQsIXpz6J09X56gJbUhHt78FP39y+/\nsKIvqnB/FVEix02wTcN8SqxTxF0k02LteyrwKusvCuVBnY+tJoKVCHeiT8o9\nL5OE4H6X9DeJ2MKoc2fCCNHjx5FQF8S0VHeqORO68eCUeP5+Zk1lRIta/wQ4\nMMSdFTN25wUKIjnDm5DseIs+mZTRzve3E/SIU2tnWdlW6dZ8YhlOc+/KLUFk\nIXXP6IQ6wCbc/a4/Ufe2eG+piPQBWY+U6sPaCJxej8lK81yYmRIxO5+ZQRRm\nOWZgzCEK5FdF2mWd8DqRrfgoJ7A7hx/qN4FCarODqWzkxZPMYl7FKSmJM3LY\nPNg7rWzdzTSrVKKucKv7T47pPQ+hYPmgt5irndGar7L7OdOFtrKG6FnuhFjB\neFJN\r\n=ZSDV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAYqOl6hOxeh6wOYB615kPd4EV7+L9ZPtiJRpo+24Qn8AiBaRdOYQaxahjuUmbOk+e+9rAQqVogStbB9lLS1r+VZcA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.11_1542007450159_0.7956923629642345"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.12": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.12",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/index.cjs.js",
      "module": "dist/index.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "10.0.0-beta.12",
        "@emotion/styled": "10.0.0-beta.12",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.1",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta"
      },
      "umd:main": "./dist/emotion.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/index.cjs.js": "./dist/index.browser.cjs.js",
        "./dist/index.esm.js": "./dist/index.browser.esm.js"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.12",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-ew3MENv7rTZ2fUQKHxV0QEb1w5PtvMBOIsFRBTzJSBVadxdiyGL2IEZMqii7XZMG9tgQK7cilMRsTwx/mLs2NA==",
        "shasum": "e1f605779e0e0132c3ea25e2ceae68dd716974ab",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.12.tgz",
        "fileCount": 19,
        "unpackedSize": 34403,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6l1LCRA9TVsSAnZWagAA6gYQAIKgOcfcxpDx0UQR4T1I\nxau/BXe3pxlPTLqKmghXplXoOHTanC/JKa3vtWNhzZCi8PJ7lXc3Spe/ZK0H\nY+TiBwFXu6+S97J/lt5jGIFrblB4HYf6VmGci+mPUOnKn2EM66wRHoPZK+/S\nZJPrjOhBJZp1Tg75TlqvB95rTsyYtaxehU6HpoTmCfy5aWwGZuDcF67rIkOI\n5Xa2fcNB+lUE7u7rxc5KXEKiI3uUcfojJF2Ex5FkYEEnEiy/+KYRIhLvShfV\npDi4SLU/VnvWsP2bUeN7/BBrOPxUfdphSE7ndk7YPg0pCPexQoq4OWPdnw+z\nq0ZYToe+oXp/gqVUbbIelTT9pk/gHn2n/FjmRjrm2h57EcsQOeZwLvdgOVX9\nYm4QQkiacM5qU5VaS4GtF17XzR8OkbYGy+pYcbE9H48fyWLXIhoXSWxfZMh+\n9Hgfs4Hv04vJxIx+uPAm4R95+Jg7rlMgM6sKdQt8nG4ZWAEuGb4r5I0BXNZl\nReVjA1wiw0QqnGbgXbx7VxX5+jhkkyGlj5oN1mzMX3A7Fi0Z4x9Qg5qJVu/h\nsB4WEAG3UwGNsBv9kJbT7CeaLEW7RbYPlvuCHhIDancV4aTcKHdoXH3SWCtm\ni0IKaXH+2ddTvKT1OfmA2Ys/Fv1TMjnsABpYu448Q6tgK3B0GUUkauwo8NDm\nF9O3\r\n=eUzk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC/Aueisjya25mBLLYctwRvLqf5ikX9GBCnH291X5kziAIhAM8biyNGHDap9O7Mdlg7F63D934itCDhF1dhO740h5pT"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.12_1542085962576_0.6496964346132434"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.13": {
      "name": "emotion-theming",
      "version": "10.0.0-beta.13",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "10.0.0-beta.13",
        "@emotion/styled": "10.0.0-beta.13",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": ">=10.0.0-beta"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "publishConfig": {
        "tag": "next"
      },
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider)\n  - [withTheme](#withthemecomponent)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from 'react-emotion'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.0.0-beta.13",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-3eohT5RCCalDkTfZKqJzrK5f+/lVyiUngSKFK/5qQ6ibHp0r9lh2fDQ1XjRA3qVKEOYzgeYYGbaalWqYdItB5g==",
        "shasum": "f1fcb2d4cbf27023787c65a69d4c931fd60c8292",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0-beta.13.tgz",
        "fileCount": 19,
        "unpackedSize": 34560,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb8//qCRA9TVsSAnZWagAAzDgP/1yg99g9jR0D8Igl/4ej\nh5cL3SAbxkdKE7fFDzRwG8XgaUewoPpcgn7VDAgaO/dq+/b98BC8UO4SpTvm\nSAFSWIRVlSGk2tjRI9UR0JT7Yr+EFWm8VzwGOoPUeRbbW1bsaSLD4q0/uQDw\nC5q5QKtiRpMppW098nmGP27i5ey3O5Bk4r7SsS1F9iYIfJmD6X/+L0Y36Ugp\nQ5HHUP6VmCT/rYwCEb/BUncTFCH+v99bAvGUWgTqs3N6MzilgwN5n2LpszX7\nTT3PT+saSRY6LoDwktQo5ke7eHiXBZacqvWYb/QLX8TFWUcB9Z7ceRWQgLMN\nFKGUTEZe67/oV+sdncI78BgoLKN49lqvymshIotjfB9KZJuYgrAVEvkEl9jT\ncQVMWeH7cPflC/X7Am8zeBc4z/L97EESrOg8lR6vj3+3BvFtp986vUhbSA/1\n9hdT8fPjNMjNsLBvlIpizgr2ukGK6BYQZSWGJPXUdX8jmdoBbVgIzCEw6etM\nFIIdHvUbCUfIIaSLfXg2gAWtptWuVx4cmTEyycH2y4Hv+1eLcb3bjUM8h/81\nXypR69sj12aPQfQBW73cMVXVDe0a0+i9ATMw2It/xIRbuAzx9G7sr0ZIVpyQ\nJO7oks3OvCOCu8i9/FFIJH0cEtF0jDy4cFEXEBYBXF5KXFiPndTEqpp/19VX\nzYJX\r\n=Ycb2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDDU3aqpj/2daL3LtTxd4R0IN/TcNGnXDbR6OrRM5RprgIgOVMMJcEC4dxDxVG49L+KHJ1BinG/Dny3cuhxtC9JLgg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0-beta.13_1542717414800_0.39853033628262535"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0": {
      "name": "emotion-theming",
      "version": "10.0.0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "10.0.0",
        "@emotion/styled": "10.0.0",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.0",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-sMl2nfkHTXpDlAD3uP8MsWK0r8P7EFgQryr1Kpyf7B4LZFr3BiitVZ6DDGehZgHkcprvBMB0LMvksyrYAw0U3Q==",
        "shasum": "18331115176f65a13248893b674b98fa7496517c",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.0.tgz",
        "fileCount": 19,
        "unpackedSize": 34488,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb/coSCRA9TVsSAnZWagAAWBkP/1wRudnMXsslyMsUbgbQ\nTEfFVx2wZHhya0Yrvklroux7NN+5/xo3fP6LYnTlSDj+zJs5U3isWtD7Fmdh\nRDfW3YliKm5oE06sSsAdBkI6lDapN616IerTCxDSKJguw6lkH72tpXOySbmh\nIAHnUshJpi+YuH59D2UVFlxf+qZn8poKvtXpfVgcsYdGJUNTJD3o4X0jqQWO\ntfHFbgc0TMxGhg3dtsHQn1BmcKAGpS8T1wPI1I97aAb7WZyh0gqs0ImMljVt\n0mrkMXsp42wUTsVG38lTqaZrboAC/yWEKZDlCbR+/g7O3uXmDFTwGUmL47Gd\nagJzglvGMllYR/wMgpxBt8qn2Fl72hrL+GVMaB9Tvl+W0eYM3Y8tQ+2Tuml9\n4ZIp7yMWp6gr+7QU1mCMtv6X4UHFB5ciY5Af5E3oseUnJTQgRucQ9buuY7IM\n+knC1BeLIJ4t//EIOWn7DJizJv0T5qluTu7R0oXQGWgrPImU01VuE3eNO4Uf\nSl1+4CnG2mGrsyUJrsoy71S7+cMgvh9/VxnvVQdVq+LfogPoctWcrNEdll8g\nsFJTHkzCsZRCV61B8UOfL4SSelk8HHolPR1y3GXAJA7ghtRmRqV63eqKc94+\n6UpIa71KB2GXN4+i1hsQURkvvcHqmsU49BeLUv3wt0AiO/kQh07IfnMZOU7I\nfDvs\r\n=bnOa\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD1dnSW5utvNc3gu2RisyuWHd+7Ke1/BnmAUMBD4RuJCAIhAJwH8v5fJt/2bGoQ/xSE/ZCyo+qZsbPVnFu3heEY491E"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.0_1543358994238_0.6008704220926415"
      },
      "_hasShrinkwrap": false
    },
    "10.0.1": {
      "name": "emotion-theming",
      "version": "10.0.1",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "10.0.1",
        "@emotion/styled": "10.0.1",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-AqObssGDWzOQk6uj1AHTT2KFdAZ8LUXp0UFat2bO/xNKVOXTIqoMRbSp/IF5DUhb3fS2rgrrTg1SfIlnTIxnTA==",
        "shasum": "1ab3500b06467beb1e59a090b21148b56a6ee25e",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.1.tgz",
        "fileCount": 19,
        "unpackedSize": 34488,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcAvGQCRA9TVsSAnZWagAAprgQAIHww1xQPXI4taoMOvm0\npwYOqbWi3GGtYUHhK/dLVBLZx+umxykzKuZPNvrZ2uu68jb+QdOjOb+CuISt\nMXS9e91Gc+YaAwdTrCGe7BojllpZ0LWUeGNEX2OD0Vg6k8vIZZbBkJj+mBRB\nUwardfWMjdjnLhOlhK57YnCeZ2hUGsx6B4sJI2XecidYpowhLViy9qUz5mvR\nRNbmf9j73BdJIF6u9DmmEkXYZ9/D0hWuSznudbOz1BYqXAIR4CeIWD4yflhM\n5znK3XLW6QsfTgRFXPvpavXXrNk1eMMW7AVO2y1LYJo6BZLdKf1DxKbpv+lL\nL20hy3D5Xxn4sM1UFx0NMMrqGJZNKwdW/ZCTntwSaCPBR79sTyLjw/sDqr7w\n6vWvu0bAs6J43aoNMQJq9KcpFxeSKP6b6ytshhEH3qfB4ZgY5UDICvUdvzVt\nlfxQ4LwB356BAVNSpligqwPppaHaJ6Ag6UzRESugB8vJKJHtYtBoztHvmApp\ngHEa/xe9ebtX6i+HkTO3gbAy/l2Y3ZQPe7GB2gdjcXWCKzS+WApot4qtMDTQ\nWBhBC9PddfynJVAqK0v+4k4+TUH/WSi4gx2zamQXXnV3EQJ0bH0w9ugL1/zJ\nFz+E5oLVf7iAnN0LpqsUoZbjg3j7Jx6yyutHYc/LmNOTFP0IYOaR3b9J5Wni\nwqrf\r\n=q5ng\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD+0bI+za2XDo7KfHgx8x0/n4Tn1ot1A9pUGJ7NUZA85gIhAJ0Ix36UEUCVVlRwECxMDS2SR/kr2UtiVvoN+8eWLOTH"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.1_1543696782564_0.10821705092291589"
      },
      "_hasShrinkwrap": false
    },
    "10.0.2": {
      "name": "emotion-theming",
      "version": "10.0.2",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "10.0.2",
        "@emotion/styled": "10.0.2",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.2",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-uy513P3PhSuVyMkvN7QaB1Djj4e9hu/ABYTfKD6DqFua6KeQHjhapYvZybrblnhgDjQ5Qxz8HwurDelEmLEHxA==",
        "shasum": "fccaffee4a79eec890c29dc480a7b4aec9addf2c",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.2.tgz",
        "fileCount": 19,
        "unpackedSize": 34488,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBbSrCRA9TVsSAnZWagAAuOEP/AtUkHj7OnodZ2L3cftL\nAPjK3yaGEy7Va0PmgUTxIfTv3ZevKQ5B193lJp7axyCWs05ZFmcL7nREctf5\nrIVQc9A6ppjHnS7lqAhi/ng7s298Ctb1yJQc3sc6CmixIv/QRr/7HvtJsAeu\n/pippmIjtD2R8vabTUcO8pEY9NRo+rIVzTn6SCfLFczvKaMyOYFtGXU0n4Dj\nU2xi9pO1Js/RD4eWsrWnTBD+Q8UwEFqEhwXaxpEIYczuNfQSKFzP+2+pwVUp\nzSuMI8jK/qe6ZKL3nGKlv4Fm0yXIbhSPZSpaxwVSaoWk8jHi2dyPvMPrIOJ8\nIn9/BIbNK+7D5A65W0Kp5afi7yxKRMA20HUBT4xqkUVYV2PaWKfM0hKNBNFX\n8tjJCmuEReZKLdn5PmNKHPkxGWWWLLZfNcY5EQBYl8FFTZjG+dHgiR1rSVPm\nLjqJiXkklk4Ab48OKX+UqUwuz8gatK5i40CaSpTD+BgRkjMF2xql5BoO13eF\nBscUmYyQGK6A32OvGYhCa7pIDtPQ1ufh/YmL3UVgE3HjxBfyTeGtE2QZqK8L\ndo0gFcmSX6qqAxMsV7UCOAkfT6VmTnh4gUjIQgFcA+oWEUl9QLeEUZ06uokQ\nP0bnwJdwx0VAjnRf3OfFolNUk9zvUO4HP24H/uAsMeb3PFZ9/x2Mdhp5uzMv\nIl0+\r\n=UVu7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH6v3YvgJsU37vNdYKAEK4kAgZk+mdw5qgtWeGXDFM0XAiEAqv1z/RnBLLq16Vqh+9QsbWOJ6WmsQSxxkKEM1bShDWM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.2_1543877802912_0.46083252718168555"
      },
      "_hasShrinkwrap": false
    },
    "10.0.3": {
      "name": "emotion-theming",
      "version": "10.0.3",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.3",
        "@emotion/styled": "^10.0.3",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.3",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-25uXD1zeaTnrXbLIh3xlL3msiVlyNLNJSxGojjEBLZK1fp3nWIucJtgAOT24o4RBZeCfCuAhmnl2MPvENv7tYw==",
        "shasum": "4a13b3ceec7ac8d2491b58ab25d9ac26e0f3a3fe",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.3.tgz",
        "fileCount": 19,
        "unpackedSize": 34490,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcCD2zCRA9TVsSAnZWagAA6tAP/0DS44JHpTqo4rnmVfZe\n0jxjWN6gN1WWUkRjdIAj4v9t2s7F3fTrAQ/pTuQYLz5YHUDbQc99gTX3Rv1R\ndosW4iR0dHPNmrc7DG4pY/ItR5EROWR7YMGJeoLtUR1EK7KS0aVeb/js/kWP\n2fxLDZ8JPWaVsVDENe0oA53Lse1qQGBVUfQojqSID97rx2648G+CZsIozX3D\nLVYJOT2Rep0XY7+kZRXfdPbc/wv/e9m/sLMZ5Br4j+U0HQybl1vkms+jxogg\nnW4wQC3O5xTc5a2Z++yo/lVaY8PTs+8EPJB8n030aulBG7OFz+yBXouhth6i\n8fSBHY7DbahMwFP83lB5JE1NuCXkYPeiRfElNSko5Poi0zwsrCpiDDno+dQx\nz56tYHJHRKV3oduccaHj7/D7Cg5DhKqAkfgyK0LYd76wBLnYT6GiIcdaW3LZ\nXcNRfC1JSVeK6lIDqcKB85A3lfDUqJJmaAqQJzPHH55oSGCagED1mpwikK2t\n5z1q+Rt1DzeDRGua/2jEZUrCoIC+QuwqzextLy5RABQmxcc2aqLoAafHLEDt\nYhM+1eDodCVEch1zskzIih+xAJV8wWp0UDHdDJpoLKsQgQ58SFxmX50d7aIR\nS/h6xO/dmviNCwB0SxPiN9WEpooSF6EYllCB7QAgbu+1zgCwmBP+E9lEbxZe\nOENm\r\n=3oQP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEszvNanRXVcRh1CzfY6X2FtdyRjDfJPtWyHbHwCu8iFAiAkzasXysYJsXAWf+7RDYS5tp6T5Gd7KzWUq150ah/uOg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.3_1544043954818_0.11578901166125699"
      },
      "_hasShrinkwrap": false
    },
    "10.0.4": {
      "name": "emotion-theming",
      "version": "10.0.4",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.4",
        "@emotion/styled": "^10.0.4",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.4",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-pVktvH1rsLuAYAb3Uc2aLJeB/cwPr9otSjU0tj2d2p73QuknH9gZ06vyqIeNY3DAslyKht9zTCdlv5pX1mGnBA==",
        "shasum": "efaf77e71e80793a4e31a116c5520c2ab223b6d2",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.4.tgz",
        "fileCount": 19,
        "unpackedSize": 34490,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcCEHrCRA9TVsSAnZWagAAOZsP/3RjyLG0/USmSy6sxSOn\nTCoWk447sqkpRUsLsG23FFQMpw7KwUKzM3ZYpG0nqLsXGMLIzzvHMu31oKGX\nNbnBYb1A0HilmrmQCk51H1lyxf+8OSK5hiWTJTs+ZYFL58zWDjqycmbUJ4WC\nzYhNsectt/2DAj9TrB/0dxcW8bVw/zuScQ2MMSH4+ATgQo6XD+F4nVl6gJ73\nonX88ohBfV/hNn6vSZkuN0vQhjFwc8+pNoq+6ncJ/l7mGGyezZEdLqzi6wVH\nNXzIyQbnRwNKDVkBKn8RlHTrcHW6xFiX4OthxCjZXQfsLT7OXYwHCT73CNew\nKIujmD8TaTTT7RXIt1h70XIWltHqWf7UACImuljr+UafAbtha+GEOJOmSwaE\ncDaa6Do2ius6JpKVvewBw6Ieeix+uoQiKlsW1dZqIH2NB3D/Lv4asajJpeKR\nRHT9J1VxC8xGD9LyObYSado5wD4Y4fMIdsnKujW9VgWUvXAhWHbtuI5ylmD7\nCmqMllzKSP0D4PiP8L0ehcYJsKtIti7+8lWlKecDd121sa7ldqEawsk2B9cm\nKLFPPS4MHziEHGYHkDR/zOBGiTBGr2hGvdtXThr/45RpBzL5gY41Ee70L64j\ngU/nLo0zn6bfJBjEgEVwcSOcnFuj21i/ryWnFMKfX3VZRKqk2ugr3DPkvvBl\nFfp5\r\n=3C5Y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAC3ZsXUBuZmkjYMqohirjeBpcx5UZL8YUOFRuBmejTYAiEAoFN29Rc2kndEbP1PnsCpt3gvNShwBGxc15gYqfp7+cQ="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.4_1544045034826_0.20566750297745595"
      },
      "_hasShrinkwrap": false
    },
    "10.0.5": {
      "name": "emotion-theming",
      "version": "10.0.5",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.5",
        "@emotion/styled": "^10.0.5",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.5",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-mTXZuSsGVW00HY/rVvBTn9lkwFWVCzJZymx52c4UtVIKbj0xVNfjuTZARYmOqbJDK3QZm7aBIbTgyTj/IJ2s2g==",
        "shasum": "dfd783a4b45c7142cbe1d68d03a0b934a25e452f",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.5.tgz",
        "fileCount": 19,
        "unpackedSize": 34490,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcEv4mCRA9TVsSAnZWagAA7H8P/iaPzEwkgE/yaeR5hXVf\nKFnasnMDjkvfnMl5PO54lqcOA7Kh/GJLBoyvTjaqgMRcXN59TJRodTXdaa9y\n8Yw2ZhZb/3YWenxXWc+tgzV+zBkQGxqT0YtWJRZlI2EeFILDpAZiAXaSvGDi\nk80UEloz85PxIssuKJYdnGXUn6wx/tZE4ij2sPc+alHJ6On8ucNlLz9ab4Zx\nNULTIv6Y3JYXSzQWFYr7qXzxvHOzlAY5CxRo/v1LsLqJlPKIkmB4mWDwmp3O\nRUMxebduRpsWHCDXyIJ+Nf5x2g5Rs11TYmJt/baJJV1rwrdH1VvbxuGyBKCF\n9+YfkYIuU09qMnwVkf7PFaCb5Oi+C1brQ7VIhck77e/yBiq8tpdHuLsWym3l\nuHru8PJw7cC3Qk13lABebPQsBpm31Z34Ikp6msHK26q71xqC+u/yHRvp1I6t\nhJXP+wM4mMOA4skSIzj2LdvCAn3UO2J6Cngy5kaaRQXnd1or2WhN4aYxn/2y\nqUzZp0caaptsUrlhCNy6TjWwmNVAmLAAu+1HfS03uxelp74XWKZekDY9oTIo\ng+mcu53/y64c1hctekTWPltYpqYAyEaZuQRQMPwTzQB+MvEd3Jz62w32sc1f\nYXcY6A1tqCz6U15Z8omDHI/6+/A9dxBYe1sBBGZJDhikI5uJK81uRoXgtoSj\nd5j4\r\n=etHC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBOa93/VRJGy8WxT4sMWipHRoYGFu/3C2Nkk20bUx4/nAiEA3AQNf6CprPALBHWfBYaCBLF4eUexcDb2Kojh825/2+Q="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.5_1544748582259_0.6655738076272515"
      },
      "_hasShrinkwrap": false
    },
    "10.0.6": {
      "name": "emotion-theming",
      "version": "10.0.6",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.6",
        "@emotion/styled": "^10.0.6",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.6",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-GDCBkPjY2sIMh0KRtc/y8zsSLZfDdNJ8dWo+DjBGttTI62z/RgfP9qMYlQr43FPQ/FuOkbhXE3nsJJQfDA2tVA==",
        "shasum": "869f8d40e4f2549dbc165bd9c43bdf5fbedfeab8",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.6.tgz",
        "fileCount": 19,
        "unpackedSize": 34490,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcMoxbCRA9TVsSAnZWagAAom8P/3JISVZa+ey7pv1T6h2P\n1hzag6bPbLzQAlw748v+l97XtMYrlzpAIEIblHt49ZwMB4/hxPhCyqEyIj4F\n8pJHPbs+/CQiZ7TAWMRQHe+CVGboNRqIXL5EZmKoDX3x1o73cTSp0S30GYD/\ntlekCevkWnMdNs0OjFVmZx8v2RUtxbTTFdbK+oRMb4JzWnueRTSZiqbcYlbM\nQRW9bvBQfMpsuV6KJ4JwJzGBkFzNo8MSdAyTbcZdZtjsHghWmTLElQ4VPTkL\nc3kFMlo7EiY4P0DI1Evrph/7O5ne4STmagpUkOSQ6n44j1qThZvMBv1U+3+s\nb0v/618mbbV/VS6M8Lk7dcJM7nwGgEqlO4DE84gEXUUZgYAlcT4Ir1pfHJZa\nNa+GD1VpLvOf+oX7CXB0T4V3r7BJZa4nZbVUk+1UvaSS1EW4B+pcXKfNuFiG\nn+AcYs8ZUX08O4+6JjoyofhkOXr5Z47ffVdtElyFqwHSkTK7dAZ0x/Q5B5tR\nCvuo1oJeD0oXZWd4LkAdQpUYUHGPuRbwgtcrt0DRRl/qdJB9cWaAQa97OdVo\n8HA6Hj2MPFRH8/D8ZMbqQ65MCuYbPOiGVa8tipz2jJ5AyIq1Ur7I9p8z1C1x\n8BNpgHYqIMBLGcKBBB0aLVwzPiazHsW4Kog5PNr1aJFyNXokGL5WcijpeOno\n/Wsi\r\n=8xW2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDFoc8Flx9+KviYfnlEBNJHRBLkpkTB9UVTcmWB2mOCdAiB/hOwtNK5Sp6aTbdJ6ijyUAJsN6mqGgNmRWIEmtZcYqg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.6_1546816602392_0.8675589515260564"
      },
      "_hasShrinkwrap": false
    },
    "10.0.7": {
      "name": "emotion-theming",
      "version": "10.0.7",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.7",
        "@emotion/styled": "^10.0.7",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^2.3.1",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.7",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "11.7.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-/dqXTvPA8pRQJRrW6/wpGqu0s0tmtwC27Pk0IOrxDV2F/knbKcd7J/G3T2385NjE+aJO4XJJ7JCNWQkwcjuX0Q==",
        "shasum": "0629740840f2ff6b929a7c3d52811187768e91c9",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.7.tgz",
        "fileCount": 19,
        "unpackedSize": 34519,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcV+QUCRA9TVsSAnZWagAA0vAP/3nbuhOgZEpCsglXsqrE\nDEQ0/DvBftvQV7fb+fOF+yudm2wckbg/TPc1QGISDHpzm8FoyHmNk5MIS8bG\n7cj2hgSpIHW6YaCALzlQk2RAK8UTf2A44+IFJymvYqlYd/WnZ/rmmvMH7Jvo\nbcBPVqYtTU0ijhmrnt5ZzWEq/YUIXT1X4NijC0sb+nIb3QWO33uQq/gZxoo2\ng9JVfysdAOhF2Nw9fQnSDFA9HSh/FOnPfd/4C/bSMEXtDAmo2RaNYVhmwgAX\n47kIYbfUT8Bg+caWM8fGocvPBtisXyrG2AXhjFeUkWUUV8c4zj6iQE2GFFh7\nGwAH9FzDl60LqrSD7UF/h8uMoU161sLptaF7bX/aucqFwgry4VXg8rgKGotG\nV6DPKnVhrSWcHPWLWhoe705qTzrXrV1Vs34+OFE3U1wIDFTnQSQDUQmD3lR+\n1WYS61OqMn3/wpLGjRjbuyK/uf6Qk3UT7FYmEczGyNCTIfSrksrkrzo91N+A\nuuAIUWURHtDmOPDejxaVOaAZoBrp4Ykypb5SsW8UtikzmmrpY1SgaSdWr9oY\nDTdiHma95wT9EFCGVaSfgJWo0FlOLEuxWX8b63PmNt5dSfDxElG1t9PR0tMT\nL0xyjfVcvV0q5LkYveEWMhwvP3TS0qEt5lVz2weKISB4q21D6Ni6H/A/kQme\nB+/c\r\n=mZMQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC7pByOqqpw3upk0fcSnWJo+XlUyStw1VXN7FPyPGga6wIgT8a1YD1A4wt6YQa7ULdwWtOxvKnKGlzZMGmbH9CSi5U="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.7_1549263891619_0.4893989586588825"
      },
      "_hasShrinkwrap": false
    },
    "10.0.8": {
      "name": "emotion-theming",
      "version": "10.0.8",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.8",
        "@emotion/styled": "^10.0.8",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^3.3.0",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.8",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "11.7.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-/74e6rOlXZppDz4dBv0oi+vqWV/pmFbxcanpJT2GGH3ozaYLw1waRnjfpM2mWT7ebclPyFvirYlZZCeTxUFrFw==",
        "shasum": "a626972188321426ea76eec587ded105af344e19",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.8.tgz",
        "fileCount": 19,
        "unpackedSize": 42903,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJchf94CRA9TVsSAnZWagAAdX4P/2CCDs2ovIXvRYbaWpX2\nEWopREsFRWTdzDYmPrZwkC4iWVWtRwbFucW7YiDcKq78NVhz94t7NtAy+7w6\nf5L/vogS2YYdRgpFXxx7egaD1I1lbKe8CLRJsWqClhaaWIFVW11x2R1ujI/s\nF1OjZiy5KyBgzjSG4cKXvh6zizN07bjgGdia5X03RpP9Y6dnBvZfjECtnNeY\nYFts0n7mVuHIUZd+m+YwaigTD6pHa4bj/0wUa1IE+TVKygkE3rRyQ8kKBWD1\n/HQ1bS0v8rw7y7UikrVKV9TFoJSLDos23JEmYdX75wPIU8pn7zKmzgAoMMw9\ntbdkbCFBAYc2lGGpgtB1mqBaaAOCKxvesQL8g5KjZaPtxkdWrZOs+3zfJ2WS\nlaBDwg/+/dhISXOrlGKwZCtlTMUcy0aFbY04Qkwp5FWnigd+wc9fUyZFMDkU\nvuEO+K4O1fjes9ZwDb3sPQm6+XDpPd06ZA7B02bKP6Ho+1Mj829PU98SSHb6\nahVsLfhvu+G9rHtLgN2CsQN/T0720YEOslLORosiuJnTzGuUwWv8aXX8xwxD\n5XAXCEwm43G5T1UpbhHZCVwknJcukeSufREaIQOr9F0UmKyvVWhSWvAzHWiE\nQ5kEQCF2i0JuiwErGdkFBBxjxn6sg26HGhU3uAf1g1eD68s9h5exB2nUAZO+\nhzEb\r\n=SNHI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCA99W23dXVg5wNf6sPNZxX0dAX5bA1kNFbbWA29WBqtgIhAPctLXAEi49VBWpHOhPi3+87XFa2jA4v7AuXQ2GPqoXN"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.8_1552285559081_0.024994801972602954"
      },
      "_hasShrinkwrap": false
    },
    "10.0.9": {
      "name": "emotion-theming",
      "version": "10.0.9",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.9",
        "@emotion/styled": "^10.0.9",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^3.3.0",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.9",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "11.7.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-Z8fg5+5u62fOkZR9uCO9/TTxjTk5ieL/GIQgtRhi6WrZT++NAqY9u9GBUjbbJDWYkt6GIcy/S+m7yKaB+iGrDA==",
        "shasum": "80e9fc40db8c46b466fcc11f3ae076f332933a4e",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.9.tgz",
        "fileCount": 19,
        "unpackedSize": 42903,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJchgESCRA9TVsSAnZWagAAWWYP/29kkN7pC129wV43aQrm\nOTyUs1m46YHVrG7dRaS9z2OrOxXWOeq4cv8e1014MUHKYl9mlhzGK5wx5tPb\ncUs+wHgGbhwNORq3xCJoY3SoEbo23xUoRgfzGXXhpuIX6UIiHmA7IwMahmpM\n4ta7nmFDyJbaOr5MGwizzE6lZJxwD+er52DUqr6vDwwFEs5NIrrNsg0/EAhs\n/jteGoZ+J/vPVx1aYFyFZvp7Ms/6GmNkxB5x39xqWB8SzMmuHQFTzW2/kV7Q\nGdOJ6W7C85zfUS8CyX46yDgnJusu1Vn/nt+O586+cqwXWG+M0ij67dzEY/i/\nGKlalKz6arxLonkYZQL5Ylbwm6lcucQAOILy7apmk73fOtJcFCE04IEiPVqM\nY5iuohbOfOsCPWYQqfTmmfpKoFezzMTBwWl4aIhNvaLDatQONLvY+q75yfT6\nYpWFvs17x+5AR5yBLteT1LHFKGsZs5CLsimRljf4xVES1L+q+6TakrYqtQoA\nz70DZmbR+LirKHG9QFZlzIb81nTTWrpwCX1B5/Idx8CvqALG3Oxbtvx7NaJm\nozQHmQwtR7AZi1qh2L1HPH+dmPeq4DsR8luXucE3qO3br9L0LP45Km2qZ6hQ\n+/VD62suXt7tYM5ZbWF78AY6pqhMO/9McWTv2hJ6kbXEyhuxm8KnEI9z1MV7\n7zp9\r\n=dLrl\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDDZH3xMJHn7BgjqTanRXK6jO7zUvDBvXaK+ksQCxO5igIgZawk1ueclrTCExRxeg053LncYsQiJalEyp2doHeLj9U="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.9_1552285970053_0.6666290401414174"
      },
      "_hasShrinkwrap": false
    },
    "10.0.10": {
      "name": "emotion-theming",
      "version": "10.0.10",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.10",
        "@emotion/styled": "^10.0.10",
        "@types/react": "16.3.18",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@emotion/weak-memoize": "0.2.2",
        "hoist-non-react-statics": "^3.3.0",
        "object-assign": "^4.1.1"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.10",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "11.7.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-E4SQ3Y91avxxydDgubi/po/GaC5MM1XHm8kcClKg1PA/TeOye0PiLBzAzlgt9dBzDRV9+qHDunsayPvzVYIYng==",
        "shasum": "efe8751119751bdc70fdc1795fe4cde0fb0cf14c",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.10.tgz",
        "fileCount": 19,
        "unpackedSize": 43670,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcmIaGCRA9TVsSAnZWagAA5P8P/iYEO9w7J9NsWcSP+DrQ\npfuRs6jUx8ugiboVH0/5gzWphrj62GIl1lrKxEqeIftBh8Rv/s+XmqWMRRNc\nj29LrY+bFTjNcm3YwMwDL0bORj2vJAikGvZLFa08xSW7sy67kRoymkQe7uFD\nAVa8q6j4zwS3rCSe2vxFe/NnGFnNt/RD+yF6XxMRELw4eoOXu3GQ9vIM0yd/\nwow8zgwkmwXth6SO8W2wA5r+9dmS2rSbfpWwSfe2SUvgkv3toKZxvHvxD7xb\nz9b0YwoPQ6EndHFJd1rAXggJbCkTjHAShXjvZPrIWyfHIcyqyngyK5aTeNqc\nbwQBXPAq0sxAsQcbdNVudQ1qfvFcgWsXbyeOx6QsgvufUM/KuTPXgOr2nI/0\ndsIW4NWA6fXVBAaXod4fxCsI18hSrqM44K6xt3KyMt8d4gN+SwqLW4uCZC9o\nU23dxqMjEWlxqqhsUFJZPHKx0cQorbZfeD0vE0MeNIbAs4Nn8HlxvEOrNWEp\nNOEgs9yzy9QN/vNEGSddrIvenvpKWecVvp+5LS/tqOM20wqGzrGapAqdDr/M\nUwYLNqYOXHvnWOr+RMU5rRtsiMcpNcMVwwKXWlJOJkqH4kF4KdmJMhdblrok\nJihC9H/faQu+XEfnTfQ/OoTYwM8SRKHOnvvqz1/n1tABci0JUFtwAIrlQ9Zw\nb3wT\r\n=y7LR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCbql29QjbVB8xb1KRiAODawtK6FZQvDuL1SQH9gz7xGgIhAOyIzIuk+OjF5m9z6T9HxvysfQHYDYTmxcd+UGHEry2l"
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.10_1553499781830_0.5380517418363215"
      },
      "_hasShrinkwrap": false
    },
    "10.0.14": {
      "name": "emotion-theming",
      "version": "10.0.14",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.14",
        "@emotion/styled": "^10.0.14",
        "@types/react": "^16.8.20",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@babel/runtime": "^7.4.3",
        "@emotion/weak-memoize": "0.2.3",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.14",
        "react": ">=16.3.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.14",
      "_nodeVersion": "12.4.0",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-zMGhPSYz48AAR6DYjQVaZHeO42cYKPq4VyB1XjxzgR62/NmO99679fx8qDDB1QZVYGkRWZtsOe+zJE/e30XdbA==",
        "shasum": "e548d388493d07bedbb0d9d3bbe221766174b1f4",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.14.tgz",
        "fileCount": 20,
        "unpackedSize": 43808,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEqltCRA9TVsSAnZWagAAhU0P/iULYj3O4m2LnCQwkV+z\nLCeBa/C81IO3MfRO9XbBTxjLSRpGWuHp3cuj4b1nQVLctfk77eVmQarfmbXF\nAVh78w/uMPcUGo4N334I4cDUv3NLE6BvsRGh2QHCm0W33zUl/Jia67HkYJin\ns54KlYyRiH2UWRfB0++C6ACv7UvW5358sgnjyxlzzcR2oIDKCNp9bdv95cfV\nRCWCe2WGjVgZmD5eUZG4CDs9zcMXkl/af57KMF+zD03dsyW5Vd7677Z4EEAJ\nte+EsBe9liGMRzolQODNVa8BLrh5P8T9veQ26FFKedA0OZMfAZRcIM1HqIV3\nYpJzypi0cUCxqmIhbmF/tyV3mY35UNiXafWC7u2obG9kP3SHN/lCdlkK4Jaj\n3RkOOtoi6KBHbYKKRYmvqTFp+vrHuUSCR/QbG9wq8PSknAAFoocqAvtIJr+W\nLagU44dp+BigyI+2KAFWf9dp317fdPcrqbChuV8j19etId41E/7+jT6UHDKF\n0Ve8LElPY/glOfJ/yL1UxavyoAFYN8C2YuLZJxYSNBHGzCJlCYg80sPYxQ7A\npMxrA5lwOMJ7HGET9WbmboRwlgWvsb+yMgNlcRyXcS5U4oLIx0u/9Ykb3Yf2\n5eXHxHYDCBFdRTW6+GiNmLWY74HJNi/RTv0vwKUByoKEFni+BolD7GzgEXyI\nB/s4\r\n=++zQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDILuADkHNZzm72sNDowQhW4DTej4zxu0ZpUf1ap7w7uAiAJ5qiBZGVGwQlHhSpzrbSGC13VXOSjtHCp8jrQH+sF8w=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.14_1561504108849_0.5765633787109496"
      },
      "_hasShrinkwrap": false
    },
    "10.0.17": {
      "name": "emotion-theming",
      "version": "10.0.17",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.17",
        "@emotion/styled": "^10.0.17",
        "@types/react": "^16.8.20",
        "dtslint": "^0.3.0"
      },
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "@emotion/weak-memoize": "0.2.3",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.17",
        "react": ">=16.3.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.17",
      "_nodeVersion": "10.16.1",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-EocpFv+YjZPve20spmnj0Xtnkm/aJec8J8d69XJWtn5Kqqq7jK5S/amMtXSGNm5sjAwoGfJBMZ1p0jMgB3wIPA==",
        "shasum": "dc1fe33c24dc7377633535dff4885cfa4d6ad48b",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.17.tgz",
        "fileCount": 20,
        "unpackedSize": 49971,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdawg5CRA9TVsSAnZWagAAnzIP/2jKNU7VS5vGRMd+7GU4\nBOWQLhnDGBIzslrX+450LihYHpIaLwP4NTOWhllrIzL6umyuknWbprFaNnxi\ndTXH4PS2L+52xnEODGrRpkkdxwQCTmtnFBNAKldK5Ie7XTBWYhnlDkTPU+5O\nBHVqI53gZUft1lA7eNjhKnPD9GKlplWaxYvHszmI5uVIX2uZApDty6nfdhxG\nl5A7L5Mv62K6H+4QGSl/xHoAM0qHdGfnPmBn0pVuIpHEyarTP3R5AOVLXll9\nQy+uGr1tuSS69EbsDvqF1D4IirPseNsBANUhWRTkezr+KlzmxnsxQtJ/whfq\ni45WR27ExlMltBQMma3mh3L3R3MkTSbd9UBldmijGWmvuuybUANP1FoXxfRK\nb3sW63CLNCXO00o/+9Wj+FEXcpridSt5aHt7FMl9z/uSuvWDt9JKB6TLPhVo\nr1KF8cwj/aNTuyw6mQpQpUTJ7olHfjg2MGuWqjr5yd5loJqazNMtbAv9t0zI\nmwg9OCeeKWYP+a/L1fh2NGBvoxPSVNJ5oR0t8wtle260QT1s7Yi8+eBLlKBC\nqmQTDGInJTKWbvTB4kQd+BpCdus0XxfqRJKbDn1hLqkN+ChIzIWR2GfRhnSw\nlhNbTR9hqQZor4LGF3Hrb5NmrWxK4vId0MOu75hQNr2AgrSfWroApdiZmmRj\n/uzt\r\n=8S7T\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBZqIyJGA4pGYJ2kiHiyX+MxcuZlb6y+/gwSzBJ59+kyAiBj1alz+5jwWnx8gYN5PlvpNWKJAqjpOX29xcF5HrZXFA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.17_1567295545362_0.3605463324512379"
      },
      "_hasShrinkwrap": false
    },
    "10.0.18": {
      "name": "emotion-theming",
      "version": "10.0.18",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.17",
        "@emotion/styled": "^10.0.17",
        "@types/react": "^16.8.20",
        "dtslint": "^0.3.0",
        "react": "^16.5.2"
      },
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "@emotion/weak-memoize": "0.2.3",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.17",
        "react": ">=16.3.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.18",
      "_nodeVersion": "10.16.3",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-zFAax4setUIKDj+cmbl3nxXDBRIMsPmiRNpg+qDmX9wTHW2TPWpETMGaDWB67LwK63rfSIkeTH7stFFnyKd2pQ==",
        "shasum": "7d636eb465cb190590e17d815b8d318be512ef7d",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.18.tgz",
        "fileCount": 21,
        "unpackedSize": 52108,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdeWPcCRA9TVsSAnZWagAAQYUP/1F+hDXNddcSXNiHQtGF\naOK/yS2Y3zT1NY5PnyLnpGVaDuuEb63FfGNC7AchKsPSlgwauD6lI1duY919\nkiC6jbbUpFzGe/mXkH708MhpqR0MW/3O/+SFJ9pTIq9nYJVA+qB8CyJliXuQ\nUkYre1Sn2GKdHJcvmYx45N2n05mStd2KIZCNzvzMTmRaEsQjAkZ1MeFMmccZ\n0h34SIglE0zq5ysr7ZmVT2EmT3MVx0OTgBWmc/pzUhJUuvAxRHMUFffpRilZ\ngBgAoK0SgXqkWh02gQ+Ma1lHgfCwWxoBbzUq0kFbPl7hPZ5Wuu1A+jEe4W51\n7VufyFrROSEFDOLUx0K/vr1XuuHkdT0nEAiUbM93e5YSZ54dO4buYOI0EOcI\n4wr0SumfWDcywAeyJz5EqBm+F5DgbaxXOL8SvzxOJp7FRdX2tZMCANHFLtON\nt3ChyjnP29AiEaLCe8MrUGKY4UzkgMF7OKYkhnt+vBgQakQ7imKIl9pbuUTs\nXwDvjBuhxebdLBJlECSi3O5aXXXlk/qmbJq84f0j3xaSFXhWZWdINVm8YViI\nfVNxf0q1cIPWQB1gjTK9f5hBgDyZNnPdED3EdDfuPXSUw1ZO6PbYAkUGyswe\nwBKvhh6lb5SlCEhpBQeSyiWOSR1ypV3pKsciYqtpdueXpmOB/h0Q4QpzKx/I\nX8aZ\r\n=V8a4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDua9TknpmkjpnUh4NEbW5B8Y03jd8XA8E36AzNKJ+EAwIgII+VdbTqvEQjoy3/LsOn1x1JUs6/s0hC0euzEPEFblQ="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.18_1568236508057_0.2248314180870361"
      },
      "_hasShrinkwrap": false
    },
    "10.0.19": {
      "name": "emotion-theming",
      "version": "10.0.19",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.17",
        "@emotion/styled": "^10.0.17",
        "@types/react": "^16.8.20",
        "dtslint": "^0.3.0",
        "react": "^16.5.2"
      },
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "@emotion/weak-memoize": "0.2.4",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.17",
        "react": ">=16.3.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.19",
      "_nodeVersion": "10.16.3",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-dQRBPLAAQ6eA8JKhkLCIWC8fdjPbiNC1zNTdFF292h9amhZXofcNGUP7axHoHX4XesqQESYwZrXp53OPInMrKw==",
        "shasum": "66d13db74fccaefad71ba57c915b306cf2250295",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.19.tgz",
        "fileCount": 21,
        "unpackedSize": 52640,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdgNbHCRA9TVsSAnZWagAA0BMP/2MmqZV94EB9pQY7fhcO\nYhyik73PuiK5TgCNxePyN0pujPyUhSbqkpAxB3wXH4OlZdYx4dKTFooUaJGn\nnH3nvYCNGiC4jzNbie7RAN/U+aOH1LvXJZRFHm4Q9O09mDv2sQRArN3yRQ9a\nH8uzdqBah8h0Ju2+2ah797PqmIrnaRtEvx7R/6vw8Y0lJO26WH9E24iQmlWU\nK+Ip4b54vSRNDcb1ZmVLxWhL3UEjhY1Q379wFdKo2GnMJz9Lh+rhpzn26GoL\nDyPCNZZP37Y+MKC6atPn/zWFTZ3Z6bjA2WY+D3A6Ajh1KFLhKCLZ0W3vVQtf\nSv4QBRayTrL+EeVIzQJbKkik6Il866cAuHwzaoO85kdOZDJ33TYe2mwAMk67\nY6bWm0l0G5xSotRItss7fs8nWc7PuYVzkP8h7kzI261i/kmRSyD9UqlgFVLk\n0DkwsXCfG+CT6P0dl+Z3mhDK/vwcWXvWYPOt948IswVyzxSOMOAy0j9zWRVz\nfEa7srVoCWEPWFdDz2eUfqn4OUSvRyMwcXRHzRcPFNGKEF2TG3MrTD8cDdR9\nRcPu1bKhQ8Ao55AvQnjY6xc9nHK3mk+523uqoF+DEU8mWj8Qdv+pH38S+VEz\nliw0HKAf1OkR3n7yYd5d5wl4q3jFUncLu3zYfCWbcCbMqgYm7O2n60OsoCcR\nFvfi\r\n=Pjes\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDKXZgyO+ZQSzbIMb9DEkl58wLyeNf3yIT3/ynap9qppwIhAOZMKrptGnGrd2untTM84VUymOlcXAdMgR975bsl/uFj"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.19_1568724678808_0.6388684261355857"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.0": {
      "name": "emotion-theming",
      "version": "11.0.0-next.0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^11.0.0-next.0",
        "@emotion/styled": "^11.0.0-next.0",
        "@types/react": "^16.8.20",
        "dtslint": "^0.3.0",
        "react": "^16.5.2"
      },
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "@emotion/weak-memoize": "0.2.4",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^11.0.0-next.0",
        "react": ">=16.3.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider-reactcomponenttype)\n  - [withTheme](#withthemecomponent-reactcomponenttype-reactcomponenttype)\n  - [useTheme](#usetheme)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n### useTheme\n\nA React hook that provides the current theme as its value. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\n// @live\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, useTheme } from 'emotion-theming'\n\nconst theme = {\n  colors: {\n    primary: 'hotpink'\n  }\n}\n\nfunction SomeText (props) {\n  const theme = useTheme()\n  return (\n    <div\n      css={{ color: theme.colors.primary }}\n      {...props}\n    />\n  )\n}\n\nrender(\n  <ThemeProvider theme={theme}>\n    <SomeText>some text</SomeText>\n  </ThemeProvider>\n)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@11.0.0-next.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-3vqLVTDCDoJFRnNDdQ9gRIJWPsyo4BXW+yiB/NctN6Eo0kMdNSp2JR+JOIAb4y5wMCAAs/1cGYVfb3TSU7e9JA==",
        "shasum": "82c618e16bff8f4642b1865a1724feb11ac3cc3e",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-11.0.0-next.0.tgz",
        "fileCount": 21,
        "unpackedSize": 53261,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdvzoHCRA9TVsSAnZWagAAQJ0QAIIRTQ32wmRPZvU8OVBF\nrwGdAi4ZoyyhbTqzHGxsWHvD5M1QmH9ZYQ8bNPphjPfOEBxZjiNCzHRjOYMZ\n1vdwV5IzpsGi6grSzMHyxhTTnQsvNn+6bJiUH6r+33FrdFuX3yTGRRBr+fyK\npXOhP4ygE2DHbHBSI7iinbKJbuA8mX5SVucWFv0Ao0a5xWINmKinTWT0fMs8\nshRlmJGKSwreYgLqLNtOISeWU3UDrC2q/RD8OmsOAuEcIUZPbmlGRAvSwd8l\nYf7B7v2getjRoiVENuP9bLaFsxrOw/kjBRQjGk2DTRS1iVV0KDQ7IDlgNQ1m\nn1EIq5bT+Nbxw6TDmsD2urgPgXN41QKo8H+IJOWRbCvxENADJS1+9aSNIdvm\nFatgw8GZW63JSMUNgMGcWlom2vh6ZhEL0UyN484loc0WbeSbwSMrCODzUVJR\n7r5ATFCH+mY3XA6DW8Hd1yqehw9cCmJWOpNVvoNHo1n+utpFcKFDODj9dyjH\n1JcpHRMQFpH81SRWvmFguxGlNK0xto6qwu/8CbKycbw6+nmr8+ecDeZc48an\nL1zH/50T70YEoqZCN8ByXw31oLsvOUKXRbBam4fMZrVeg2RdqQ3iNfY3RGoa\nekW22/GEo1DHJzGrv7aN3FewFV/jE8ZdRl0DbFSuv8HCG+WPQJosnXlOKK87\nFKJW\r\n=Ygm0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHLFcDzLMpyaSs8lY/nDr1I5y6WXu2wl4ZVXny+dEC0LAiEArlxTNSU93m6PcIsBGdIgvuCx0r8VQQQRQOXmS//Wmu4="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_11.0.0-next.0_1572813319313_0.5706779871371201"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.1": {
      "name": "emotion-theming",
      "version": "11.0.0-next.1",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^11.0.0-next.1",
        "@emotion/styled": "^11.0.0-next.1",
        "@types/react": "^16.8.20",
        "dtslint": "^0.3.0",
        "react": "^16.5.2"
      },
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "@emotion/weak-memoize": "0.2.4",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^11.0.0-next.1",
        "react": ">=16.3.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider-reactcomponenttype)\n  - [withTheme](#withthemecomponent-reactcomponenttype-reactcomponenttype)\n  - [useTheme](#usetheme)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n### useTheme\n\nA React hook that provides the current theme as its value. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\n// @live\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, useTheme } from 'emotion-theming'\n\nconst theme = {\n  colors: {\n    primary: 'hotpink'\n  }\n}\n\nfunction SomeText (props) {\n  const theme = useTheme()\n  return (\n    <div\n      css={{ color: theme.colors.primary }}\n      {...props}\n    />\n  )\n}\n\nrender(\n  <ThemeProvider theme={theme}>\n    <SomeText>some text</SomeText>\n  </ThemeProvider>\n)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@11.0.0-next.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-JIEOKsKYJfaJnCReJsnBVtfIdIseQ37p7wqup2/P/kRRMYVszMOn0fjO84PoSXJ/e3REyOYwlCDqQ2T8iprHmg==",
        "shasum": "8be6fe7ad18b39a8fc6683b4b91621f0bb804331",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-11.0.0-next.1.tgz",
        "fileCount": 20,
        "unpackedSize": 56640,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdwdrKCRA9TVsSAnZWagAAoOYP/1SeQQVWL0hz43FyhZQl\nohA0hrAHIQJUjRetA0pOv7vGxnGya4yq1LLSqEltA5hn0GKI6U3MGJFpY4eB\n8jUNCTo+e9eU95iNbWZud96qqPlns8wPtC+n53FROLMitQ7GK8kBPptn8Mu4\nlmJO/V1qh+hxeNB5ge6HVfh3XSfxXf1D/ArsHjMects5XUPn1vIRmYvxKl+5\nwCJrsA7JPN/oxSE/PjJ+Gd5ugcpNpmpCjvCxFvexFnZPuajz9YbQeoZo0nU/\n6wWDAN8h+jROnmGhN6kK/ZN98FzYZlJ7ieeEF3Zm4h688lTx8a5i4lZwl2WU\n4BJfOx1Y9BmbqlWG57sdwBSVgk1Vyos3K3jndQsL4Aq+04T7G/cY3Obo2Tbc\ngw67Eit4UBiASeMChTr1PlZ8A58AxeQeVYkvnx5rx7RLWnOGhuuYZk/MNuia\nkgx1sLz+ycoiHs5o1rdieAXVliJ4KPwspwf0agi9lP4xzSA9ke/4jt+zkEMP\nRGP3ny/2c4NFGVzwGD/WK3G5sFO5Q76UL/CLMl70N772neYBQk+9D1EG2ef7\nLw7o5w4W3X3uaKgqRwuiGxoYbbXREUmKLFJ20PFROiunntk/o82dZfuTHNot\n6WcV0YaWRuU7kGhu/XlpVKCqtOIeMwkz3Jb3foAivDzg2LJc+MOUN3Qz2K48\nKVq6\r\n=2ljt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC4bm0G8lScc5Sx/hhB2b53ULIu1FVBmGZ926dHBFlfTAIhAIUbz5i24D/kYoRhIg9B0hezC6aj4/tbrxflNg4EfTkl"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_11.0.0-next.1_1572985545671_0.10800120177003691"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.2": {
      "name": "emotion-theming",
      "version": "11.0.0-next.2",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^11.0.0-next.2",
        "@emotion/styled": "^11.0.0-next.2",
        "@types/react": "^16.9.11",
        "dtslint": "^0.3.0",
        "react": "^16.11.0"
      },
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "@emotion/weak-memoize": "0.2.4",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^11.0.0-next.2",
        "react": ">=16.8.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider-reactcomponenttype)\n  - [withTheme](#withthemecomponent-reactcomponenttype-reactcomponenttype)\n  - [useTheme](#usetheme)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n### useTheme\n\nA React hook that provides the current theme as its value. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\n// @live\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, useTheme } from 'emotion-theming'\n\nconst theme = {\n  colors: {\n    primary: 'hotpink'\n  }\n}\n\nfunction SomeText(props) {\n  const theme = useTheme()\n  return <div css={{ color: theme.colors.primary }} {...props} />\n}\n\nrender(\n  <ThemeProvider theme={theme}>\n    <SomeText>some text</SomeText>\n  </ThemeProvider>\n)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@11.0.0-next.2",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-g6hrEytgP3H8qwd0XI1X7LJoAKVLNq6QcR5sqxwGAFEi1kYTi/aGS7cs4fKE/FOSDSvGdLrnqTJL7rWbIZIGnA==",
        "shasum": "564e9ab54d4b430ba7c917b6e2f759e68465137d",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-11.0.0-next.2.tgz",
        "fileCount": 20,
        "unpackedSize": 56781,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdwf2BCRA9TVsSAnZWagAA1w4P/03UOnM4E5cPMASC2YvU\nX/ZmAYbL3lLWmjKuOtkRyquCrwMaKmkUPquwIGlyPKgYeUwxJJwr7vq224fi\nnl0177cNMsk6XU6ArqUSw05AJ2MNuMmf40WO8Fz7tTgKSRppUK1WqIhh/56J\nnC1eCdeu/VckdVoHUs193NmRuw9vhRBeaCbW9C6560lZKPBBr0HCEcnvYMeY\n1y7C4gAwVGmuNrvASGLP7xcpPEr3+Qi8mUH8WL3nyrPP/+uTQA3YI5Rb5MaQ\nSFucBaPqUfxMN48tmU7aey3REoe909pdIu55ZHNH9s+sDTTd9n1oQ1Gy0sNO\niEmxf4ExnaJ3asTH3ZFGVeqmMIc/rzhPOm2fCk6nYBKKgRCQzy1R/roX+/Q8\ntRm4Q1RFQwyEYmMjmmKH6mDMB/13iFMwei0OonIxQtdiIhstFGskaEmx6xQ2\nt5+b8gTtCBU+wzNKwcytxa43OJAzIYTUwxM422vgFriScyJCa3jM6zp+d/dx\nmuogt1cDA2pD5c/BJP2FlewvxGQKD3sM3zGvp4AnhcM1A7CK6cAokSG0iWX6\nwg6ZgHpA6bblU0izz8nIRcHuXuGTGaEiA5iJ3fstF0xCcnEXRWgAXIpReLoB\nUCtgm1w/b73jJLv4axsgPQOzUQ3LJmUQAAZuleTH7V2CNx56vCxN9ixGD6mL\nYtZa\r\n=bsfG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHQIJhDzjuUBCma9qaFiMkNBp//CtmmyiNhsWL89Y5rFAiAlkUaOlK74/q0+pPfPu9nnwxEyNRXKQ7gs4ZKvZmI8qw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_11.0.0-next.2_1572994432694_0.7045105422652984"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.3": {
      "name": "emotion-theming",
      "version": "11.0.0-next.3",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^11.0.0-next.3",
        "@emotion/styled": "^11.0.0-next.3",
        "@types/react": "^16.9.11",
        "dtslint": "^0.3.0",
        "react": "^16.11.0"
      },
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@emotion/weak-memoize": "0.2.4",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^11.0.0-next.3",
        "react": ">=16.8.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider-reactcomponenttype)\n  - [withTheme](#withthemecomponent-reactcomponenttype-reactcomponenttype)\n  - [useTheme](#usetheme)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n### useTheme\n\nA React hook that provides the current theme as its value. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\n// @live\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, useTheme } from 'emotion-theming'\n\nconst theme = {\n  colors: {\n    primary: 'hotpink'\n  }\n}\n\nfunction SomeText(props) {\n  const theme = useTheme()\n  return <div css={{ color: theme.colors.primary }} {...props} />\n}\n\nrender(\n  <ThemeProvider theme={theme}>\n    <SomeText>some text</SomeText>\n  </ThemeProvider>\n)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@11.0.0-next.3",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-3Kx69VIlsk73fJRDVuzRE06T3uHXwnhnQA26CdOVIEcY2KMUycEo7Y/3+bish8TaTQSRikRkzkAH/hmaqX1PMg==",
        "shasum": "1baebb5ef6ee771fc842559b4489ca2e9c5c3542",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-11.0.0-next.3.tgz",
        "fileCount": 20,
        "unpackedSize": 51064,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdxpL3CRA9TVsSAnZWagAArEIQAIKaR8WwOKN6ULa83oSw\nOMxnz57YS7CFruthYpmpCN02EoPCDB0Yt8ASW3vzcjytSXcbtEbEIxc8aoeC\nXjcNMtTukRGbXKmRM5O4QuwYk9Eo/gln7iDDaT2txkv2kV1fQia73FZNDVit\nXsNHTmO6cwGY06KKuc3I0BRx9VmDSTk55DdpWgR8VO8ECx8OgQ2+cbtAjhil\nuutBAwnrFnNbeUGjDHUh+CkoKtMWh7lSd6YyqKOUtseMtiqiCaWnTqOH0dcs\nylLOjFmuWIya3c6WbqdV/qzEfr/U0sFE0XiazH2/82fvBdPT89IDqvfQos1H\nGNgGEKRmlr7vAocsjlh1ZKFM02ovls7CZ6gjvf77yAIJMFxS6Fh/b0jHyarW\nEYT4BrGsNujzWIX4c7ZQwNtcORK8x+HzdeETd0EcJ8rumD9BYQsFMcQPFz9s\ndBQ7XTroEypLGsC9du/Ibzpjiw06fzx/eKpubnu0CDigt2Rxk2nCVQeu5QZa\n+jUc3z7dpC5/kO62Id8+X0nynyyCH5AodoKoRmBP/91VUpNMuwXzBFLOhKXw\nEZvWihZrkkkkDSQyxFZsfJSTr97KhcH7b1FjdtqJRyuQkOnmYoZTGNf+0fic\n1k7HSinGBCqdvAyJE9A0j4uKUumS4I0RCCmfrwQgsYOp2NIYkd78ATjxgoDs\nj4sJ\r\n=DAO/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBFZDKIN85NYEjz6oHK2+B6HW5//izdSx6r7L9VqLKDJAiAtrjVAddAQ94avezTe+Fp+IR/SR7zVWJuZ5WTQ9tgvIw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_11.0.0-next.3_1573294838889_0.12614440374721347"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.4": {
      "name": "emotion-theming",
      "version": "11.0.0-next.4",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^11.0.0-next.4",
        "@emotion/styled": "^11.0.0-next.4",
        "@types/react": "^16.9.11",
        "dtslint": "^0.3.0",
        "react": "^16.11.0"
      },
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@emotion/weak-memoize": "0.2.4",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^11.0.0-next.4",
        "react": ">=16.8.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider-reactcomponenttype)\n  - [withTheme](#withthemecomponent-reactcomponenttype-reactcomponenttype)\n  - [useTheme](#usetheme)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n### useTheme\n\nA React hook that provides the current theme as its value. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\n// @live\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, useTheme } from 'emotion-theming'\n\nconst theme = {\n  colors: {\n    primary: 'hotpink'\n  }\n}\n\nfunction SomeText(props) {\n  const theme = useTheme()\n  return <div css={{ color: theme.colors.primary }} {...props} />\n}\n\nrender(\n  <ThemeProvider theme={theme}>\n    <SomeText>some text</SomeText>\n  </ThemeProvider>\n)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@11.0.0-next.4",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-EB1r14DyJMrdG7lL5RJzkHYoEIwT+MBHWiWpcJ30i+cehuOiuV6BsAJkWHTvODw+UT4+vuugJluexS6YkDLdng==",
        "shasum": "c9c960b858e666776faea11c2028ffa304560987",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-11.0.0-next.4.tgz",
        "fileCount": 20,
        "unpackedSize": 51294,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdy94uCRA9TVsSAnZWagAACt0P/i4o63kDXT2cZABQvICB\n3XR/C7BH7mR9ZGcLUNpbbZtN0vpVvvYJQL2XVGj+UkwF2qjP/o44DBEN9zNf\nAN86GmTZ7abIZJUPHn5NWKQoNVCkXKYyhc51sweuqzcDhXpBmTUZe0xrLYBt\nmbV9Ufl9ol/30G04WFC3S7sXkGkCEFPSBvr+hEUrAZZilVSXTmcsfzUHOlRs\nWXsbdKg+LEvuvQVKhRiNCCKIusZ9nOUvCv5ywR3IvOvoimZMUHhWQteTrNB8\nPmS09aMtjz/XnMtgSVC8x+cW+NfVPNfcAVPmQhewoHGdry1cPwkX+vyRTjor\ngSuG4mfepmD48Lr3te8hJMLllfI9vTLYGoKmypuqIcVkEVwQf4XH/GX9g4fG\nt7z9Utof+u8irR2lusffrxSDWxg+hqLkDp8qfO4thz4Y/MFAaC+wbqWk4Zp5\nFfNBLR6HDj2x8WbYvlIFaybKgtwfFQF/TPwtxVMPjwcwUInju7VIY4ihsLQ+\nOZCzSfopS/MM6cfbQCFkdVM8GLEN0/zhjjDSZjF8vGLmuOuwzSbmGTwEPPPZ\newhwIDDCJbE5LpiOY+yQnLVEcXUkud8JtF1ZwMdDPIm8+3WsUh9CCxmwd0S3\nKVNJCRwkeRL2ZUJaDOR0SG+5B1+obVdt7JfcViiawrYczU/SOwIsksua5tpR\nhb2b\r\n=QqwQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDOthe6LtgYwPQXpqt+SU8FNBKB4Vfupvx615K0BywgnwIgYoilbkALi9oU7pDImLtf88PdeFE5fdRgnRVdNrS4TnA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_11.0.0-next.4_1573641773674_0.913993518123946"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.5": {
      "name": "emotion-theming",
      "version": "11.0.0-next.5",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^11.0.0-next.5",
        "@emotion/styled": "^11.0.0-next.5",
        "@types/react": "^16.9.11",
        "dtslint": "^0.3.0",
        "react": "^16.11.0"
      },
      "dependencies": {
        "@babel/runtime": "^7.7.2",
        "@emotion/weak-memoize": "0.2.4",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^11.0.0-next.5",
        "react": ">=16.8.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider-reactcomponenttype)\n  - [withTheme](#withthemecomponent-reactcomponenttype-reactcomponenttype)\n  - [useTheme](#usetheme)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n### useTheme\n\nA React hook that provides the current theme as its value. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\n// @live\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, useTheme } from 'emotion-theming'\n\nconst theme = {\n  colors: {\n    primary: 'hotpink'\n  }\n}\n\nfunction SomeText(props) {\n  const theme = useTheme()\n  return <div css={{ color: theme.colors.primary }} {...props} />\n}\n\nrender(\n  <ThemeProvider theme={theme}>\n    <SomeText>some text</SomeText>\n  </ThemeProvider>\n)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@11.0.0-next.5",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-RGgCge3Jtwis6owosE5PfJtn/wwjhYkTCwGLb7FslqRJm2Gkr41RH+sP69bX/+H4yZ40jNq4BDHqxteGfiEi4A==",
        "shasum": "a98cd5773f6fc316839a9991a18bd4f2046dc13b",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-11.0.0-next.5.tgz",
        "fileCount": 20,
        "unpackedSize": 51625,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdzmv4CRA9TVsSAnZWagAAF2YQAIfUjnqwLuLafPoiIeZr\n/y0cYI5SZIrAPXG3i8rd51kvuXrThoxsxqI+5sOZjlo1c6My9FFalUpl+g0K\nT3yyPHDCdK9tWhd+dkw0OKnkGLZjVq1ax05yPXx9vjx5lUSosMRubPTcwGx9\nsK3R+yeg+GPTSfHxCZQNk5sqAHvdtmsxSoEpDQfXE/Olc6MvMqAmgjgOrGGc\nLd4ombB/EUuQeh4MkbtT845a0KORme2H5tjA2cj2uS9AuEDsMtE6jBnX6W9P\nRQ+5Z/P87bKNxsqluiCuELh0grtuMLKpvhIZkYHqYOBMxfDF09pwZHuB9YY5\n1DySkDNgBzQDlyukBfQdfiWb+eQB/bPeXiFALJYCJGQnKy8P/02O3Fsr4y1S\nMpFiG9bL1x0ERne6J0qfEv8tSjKkdN4vQUdN6j1Md1gZdUEddaXLql5ErOQd\n2F99a+nevWVlSOlg7AiGSimpX76uRuHmUXrqIRkt0zGwDHGg+IhUliPitWqP\nr0hvFs+PqbBmoJJoqvGpLnEaldr8LdmZZjwIA7G6AdTBIGRRTSnnkqs5IFPc\nZjN+vLl2coA1edQIZZQvPt2OmdBh4i5zIoQ+bc+Gi7mQMrxjCvyKuGaRd/FW\nSAj3/AVv8g5cip/D0cdt1dDrA0mMVzk65vvUsPMUr1Y+FRJ/xIHhzqpW5gTh\nBFNo\r\n=oQIW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDbFpoE1CcPISWUGcCHWnyLFe1G0CPz0akAxsI2EiE8sQIhALRp/AMM37ykcSoFZbMYEK8es0PofrByZCW7wdI8DpHZ"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_11.0.0-next.5_1573809143919_0.3092745379483386"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.6": {
      "name": "emotion-theming",
      "version": "11.0.0-next.6",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "readme": "ERROR: No README data found!",
      "_id": "emotion-theming@11.0.0-next.6",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-VpEu6mjBWiWm1JRFrn8WFqOQXqQxFGA6PimplvfzsE2Q1vW1ZvnPkh2Bbq2OIp6dgPHbtl1Cz/DH5Ob3VgtQHQ==",
        "shasum": "323bfe596169111497c9087cfd07d529fe739679",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-11.0.0-next.6.tgz",
        "fileCount": 5,
        "unpackedSize": 7644,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd3FlQCRA9TVsSAnZWagAA8VgQAIdghCfcKYfrykSU/76q\nOaJA4CQwHzjLZUXYUrxt7pgDGn3sN7yrcb+1KxxsilNIPGqUAPtDFFHXWySF\nxKCRZeS6L1iBNREurUJloHxyiSPdXg5vf2C1zmKYTnbfHnAwGcVqhk+5m3IO\nh4ZjSWTi5cLWQWj6HM8I3led5G5LDwbZAjI422Nk6cBCOjIPPX8XGMmnlYjd\nlAqjSYdctsuNgwZvKOIMFDMAqbSv4rDsUGSNMcknGG+RoPdbDUQ+o0rOZkv8\nKa/DxiDEcVPuuiqqf8eq0JSkQKifYRzIaHva+7qM482+Ux1J8m8GpVIcSKJY\nWBh8pXiwGgSEz9S0Xtgdd4VZKre66jZuIEDjmvWqr3quJlv4H5H7j78KFaDY\n4OcGGBGdG/Jnxr086gGESDpHEoXFQ1E9+MfTcb+oj+loQ2Qix61VreonBMqV\nYdne2nL2aflCVSRFCGpMNwLPg2dgDd2HG0L7SOPdCaofdae3y9XnUZiuQiA1\nfOjANhLz2IhswVrsvXkpV2C8bHXBWwzD53n227y7LdzSQMqWtbS6Co8XAtvZ\nDbZ5SqX1gOWh4ZBdbA8b+A1dekEutqjK3AB2hJYIUwByrSDSQAqA58gJs5dM\n28SkCMHSKJzJxAxWWHUITFyz/aKAOaNVI13PXc2dCvvXOGpwTVgl744jpNGC\naeY+\r\n=TxaV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB9zeQ77BKI398T1Y7wDPOQCKuR1pD8C4Z8TOClx3sW0AiAZR/JiuGxVcZPxao29DnFUSt/13w1HnGoJkZH7McItHA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_11.0.0-next.6_1574721870393_0.28230299024864314"
      },
      "_hasShrinkwrap": false
    },
    "10.0.27": {
      "name": "emotion-theming",
      "version": "10.0.27",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.0.27",
        "@emotion/styled": "^10.0.27",
        "@types/react": "^16.8.20",
        "dtslint": "^0.3.0",
        "react": "^16.5.2"
      },
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "@emotion/weak-memoize": "0.2.5",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.27",
        "react": ">=16.3.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "_id": "emotion-theming@10.0.27",
      "_nodeVersion": "10.18.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-MlF1yu/gYh8u+sLUqA0YuA9JX0P4Hb69WlKc/9OLo+WCXuX6sy/KoIa+qJimgmr2dWqnypYKYPX37esjDBbhdw==",
        "shasum": "1887baaec15199862c89b1b984b79806f2b9ab10",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.0.27.tgz",
        "fileCount": 22,
        "unpackedSize": 54197,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd//gdCRA9TVsSAnZWagAABIIP/3q2XrP9r1UXylU2x3gJ\nRrDrIyrB6oKtPEgNNpHBC16ie5oP7mft2Lnrv4QBQqDSPUt+21x6zNNT8YIv\nP4Tk1LrElP1bqHfzUzHD7sR2672wt9X9N8IMRuiez4JkVOUJZfy79WSA+QD6\nt849L4uwdkER7E/oYVOCccW1G4IOpyMYxzIC28trRl42+mxAXDoKdLporja7\nLiWQFj8hQu3/9xKn02ANot8z52RDyqDVgdyF3nTDq3zgohj/0udgaycZDFcN\njnncSfMjhS5SiURt9Wb/4wekVRGSsYLehccTEmS6U2EYMhWr19qR/U3ztVIy\n9xM6J+f4xhXLf0qrMWPLw7k8OUnnR6Id0gdWODocpyRkr5WnmP2/4n+GBiik\nJAcCmqk0ATjZ7fRvts4z7pErpQ/CQ07dOr4czuQWR7awGIEgj/6qM3+VTISS\nwLZA+SXbIPswCJ7JU7F4orj+JfWI1XRkoYvIvCXXqTZTs1KnZDn2gGoqmDVu\npgR5Kz8nAXwZq2qO7vrg2rBCkWEAZo4C7AvjLAwh3oEL61el5B9YaPc5B/CP\n8d5ZgvtOAAWTHxZGUoRC0hoLj0tNVapxvHX6kheiVYOVCeirCoUkHTAbbHwG\nsbyXdua3r7E+PZdnlCSbCOoU8zELy9KG6lzSwNIeVkx6LGfAHv1ffFd4JJuB\nkmt8\r\n=edME\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCy63AErgGjd5JeigNVgjlr70A7O93ivBjFpU71jkoQygIhAML7TZoGQpURlrvAPGWg7Scw9MbJJ9J5P+ZO8wFf/Ypt"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.0.27_1577056285189_0.5105684881971244"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-rc.0": {
      "name": "emotion-theming",
      "version": "11.0.0-rc.0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "readme": "ERROR: No README data found!",
      "_id": "emotion-theming@11.0.0-rc.0",
      "_nodeVersion": "10.22.1",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-7ZgEbhoIVtfy/fvzcUp4ZngW9JIA15cDsoTxgTsrX8kAhbBqxm4VUZpGwrAr5BuHbV3DTRboZzxEAtmYtsS57A==",
        "shasum": "d1be77e03c2332d4377543708a73dc804effead9",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-11.0.0-rc.0.tgz",
        "fileCount": 5,
        "unpackedSize": 8388,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfgw5ACRA9TVsSAnZWagAAEW8P/2IYno/BXIfMrgwRLOiw\njc/JfQ3dDgxf3kJr5C8GG1ja1FcxwCIzzYCfSLizll5R+gY+1AYCIMGbMq9q\nIrOqC1kwa0j07qLRYDrvtTwpQoZ8i4ri+GbJEsDdWqdtw39abUBy22+iK/Zf\nwbu+u6VlyQTcGXAzp8SGjE//+N3Ftf+1HkwiIz7T03axtbtsx6xher8FbTsQ\n5Q7AyAH5gAYhxOs4No1Q+wRSUjE9Yiw2OYVVIPOGJRIPDeEtFraAsv+VTmJj\ntgB2IgSQDatikAFQcmBVL2cxfqEBkH9bFtDvJ2LSbxsEkUlgdf6qHHBJQk/V\nlJyHWzeKasunRbq1p5kFRgcRjaD7N1Aw0CXdCZfOr57KNkFOizHALmHq9aWx\nC4agMTSDiRomPBtqjinsHCXHhuq4081LFWXp0M8dSLHIE2ewZvQR+NSpPMXg\n7VEB2Mvdz8lw2yfA6vXPDjmwI7ieu+UAdz77xyQd67JhbJdQpdth0Cb3u3mW\nEScUy2wgmnMGDhwWrpebEzyXfaQ5jqujYY5Kin6BBh/WEadTVClP1UDZTHnr\nbOnPDuWDKk+x6FIFdj5JFOKnY41I/yGIYFq5LEPdAplXxx4ZyL6656e1zxOM\n6mru8FUNVblORfCBcnZGb3ZEFXftwzsoFpyV28fUSJMM89h+qO7IXS1/XLxc\nk/Ho\r\n=era3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBRXehO2cEG8826tGydlXAdEXWDMU4mrK8QiosmxXPOqAiBDBRBgG0rgfFNTfzAmhJMAXH4x/hZprrGS93VfJB9Znw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "emotion-release-bot",
          "email": "mitchell+emotion-release-bot@hamil.town"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        },
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_11.0.0-rc.0_1602424376975_0.9548090761999701"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0": {
      "name": "emotion-theming",
      "version": "11.0.0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "_id": "emotion-theming@11.0.0",
      "_nodeVersion": "10.23.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-OhYpCGBjaLcD9c4ptwCr9SxHjfRTDqeqdzMobusJ+a/drlfnJ3AT9gmGKIhNHiXtr6626h6fsvLY22Or9CxUqw==",
        "shasum": "821de3c9804cfe7bb5fda2dd12ad722a6c5bcff5",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-11.0.0.tgz",
        "fileCount": 5,
        "unpackedSize": 8831,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfrIW3CRA9TVsSAnZWagAAw5EP/iLj8KMTQmzeesMYzpQw\nPbr4oqj5OYQibTXQxqn1bkx3wpVs9WIukcmwOS4jnfiALGTaag0JFZ+CrMbh\nA9jGNxl0k4fvFUNzUWsv98nKyy/A6xFn3TBFs58Ps2S/TQojFc3/ykoPFnLb\naE+1yNcxWtD+anjg9hZspaYDW3dRPh+N2r0k7IHFp2jy5VFb2hJMp5lUsqFm\nCViBzbE8cDXgjGMdDD6MmhG5QaMUL7Wfa+9hPMHbULi7SFJfJ+SiUH8O3Z4D\nRNIVTGJRHhCBXNvlmEb3kriAcfHdE2/7yq63Z6OYPw1QKGQI+aYrxB4sCLrg\niZ+O5UfDKLvji10LLrWPV0fs00TvPx3JloBiN7G6lnErlw8MZk0aHKstvAgB\nAnNJBf6OmIzBZBH25ZZ0SGuWDj2g0HGaipl6ZmnyNSyY3hhtfwrY3PEZ9vQ6\nfUz/aAeWjEFL3qXpBKVmA7goek3QVU7UWGSmks9IuyCiLGuIcgT1VpVJ63kY\nRp4z8Z9PSDa2E0RfBC9qbRMsDrc34P+8UMuVUqcNurO8VJFi1cW28CNokG91\n7p2iw9ClKbDRoOAUUDid79y29WAJ9DlA0uWLt7SOrrw52vRs903QqHxWh+Nt\nL9RdMeeQEXby83UdRa1kkgL6SeA5FSnEhPNLWBggdVZM34f6JGupp5cJKS1a\nhbuM\r\n=gXwP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDhyGIIMNOn3ZkY7tklU3S7Yy+SsI8vgAgpBhen1N0i0AIhAPKqW3knRj5Wxc9m/cbzlFgNlpASR/yRBgiRkiY9L6Mx"
          }
        ]
      },
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "andarist",
          "email": "mateuszburzynski@gmail.com"
        },
        {
          "name": "emotion-release-bot",
          "email": "mitchell+emotion-release-bot@hamil.town"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        },
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_11.0.0_1605141936134_0.004520795134769884"
      },
      "_hasShrinkwrap": false
    },
    "10.3.0": {
      "name": "emotion-theming",
      "version": "10.3.0",
      "description": "A CSS-in-JS theming solution, inspired by styled-components",
      "main": "dist/emotion-theming.cjs.js",
      "module": "dist/emotion-theming.esm.js",
      "types": "types/index.d.ts",
      "scripts": {
        "test:typescript": "dtslint types"
      },
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
      },
      "keywords": [
        "react",
        "theme",
        "theming",
        "emotion",
        "cssinjs",
        "css-in-js"
      ],
      "author": {
        "name": "styled-components team"
      },
      "contributors": [
        {
          "name": "Evan Scott",
          "email": "probablyup@gmail.com",
          "url": "https://github.com/probablyup"
        }
      ],
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "homepage": "https://emotion.sh",
      "devDependencies": {
        "@emotion/core": "^10.3.0",
        "@emotion/styled": "^10.3.0",
        "@types/react": "^16.8.20",
        "dtslint": "^0.3.0",
        "react": "16.14.0"
      },
      "dependencies": {
        "@babel/runtime": "^7.5.5",
        "@emotion/weak-memoize": "0.2.5",
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@emotion/core": "^10.0.27",
        "react": ">=16.3.0"
      },
      "umd:main": "dist/emotion-theming.umd.min.js",
      "browser": {
        "./dist/emotion-theming.cjs.js": "./dist/emotion-theming.browser.cjs.js",
        "./dist/emotion-theming.esm.js": "./dist/emotion-theming.browser.esm.js"
      },
      "preconstruct": {
        "umdName": "emotionTheming"
      },
      "readme": "# emotion-theming\n\n> A CSS-in-JS theming solution for React\n\n_`emotion-theming` is a theming library inspired by [styled-components](https://github.com/styled-components/styled-components)_\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  - [ThemeProvider](#themeprovider-reactcomponenttype)\n  - [withTheme](#withthemecomponent-reactcomponenttype-reactcomponenttype)\n  - [useTheme](#usetheme)\n- [Credits](#credits)\n- [License](#license)\n\n## Install\n\n```bash\n# add --save if using npm@4 or lower\nnpm i emotion-theming\n\n# or\nyarn add emotion-theming\n```\n\n## Usage\n\nTheming is accomplished by placing the `ThemeProvider` component, at the top of the React component tree and wrapping descendants with the `withTheme` higher-order component. This HOC gets the current theme and injects it as a \"prop\" into your own component.\n\nThe theme prop is automatically injected into components created with `styled`. The theme can also be accessed via passing a function to the css prop.\n\n```jsx\n// Page.js\nimport * as React from 'react'\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nconst Container = styled.div({\n  background: 'whitesmoke',\n  height: '100vh'\n})\n\nconst Headline = styled.h1`\n  color: ${props => props.theme.color};\n  font-family: sans-serif;\n`\n\nexport default class Page extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Headline>I'm red!</Headline>\n        <p css={theme => ({ color: theme.color })}>I'm also red!</p>\n      </Container>\n    )\n  }\n}\n\n// App.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport Page from './Page.js'\n\nconst theme = {\n  color: 'red'\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Page />\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n## API\n\n### ThemeProvider: React.ComponentType\n\nA React component that passes the theme object down the component tree via [context](https://reactjs.org/docs/context.html). Additional `ThemeProvider` components can be added deeper in the tree to override the original theme. The theme object will be merged into its ancestor as if by [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign). If a function is passed instead of an object it will be called with the ancestor theme and the result will be the new theme.\n\n_Accepts:_\n\n- **`children`: React.Node**\n- **`theme`: Object|Object => Object** - An object or function that provides an object.\n\n```jsx\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, withTheme } from 'emotion-theming'\n\n// object-style theme\n\nconst theme = {\n  backgroundColor: 'green',\n  color: 'red'\n}\n\n// function-style theme; note that if multiple <ThemeProvider> are used,\n// the parent theme will be passed as a function argument\n\nconst adjustedTheme = ancestorTheme => ({ ...ancestorTheme, color: 'blue' })\n\nclass Container extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <ThemeProvider theme={adjustedTheme}>\n          <Text>Boom shaka laka!</Text>\n        </ThemeProvider>\n      </ThemeProvider>\n    )\n  }\n}\n```\n\n> Note:\n>\n> Make sure to hoist your theme out of render otherwise you may have performance problems.\n\n### withTheme(component: React.ComponentType): React.ComponentType\n\nA higher-order component that provides the current theme as a prop to the wrapped child and listens for changes. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { withTheme } from 'emotion-theming'\n\nclass TellMeTheColor extends React.Component {\n  render() {\n    return <div>The color is {this.props.theme.color}.</div>\n  }\n}\n\nTellMeTheColor.propTypes = {\n  theme: PropTypes.shape({\n    color: PropTypes.string\n  })\n}\n\nconst TellMeTheColorWithTheme = withTheme(TellMeTheColor)\n```\n\n### useTheme\n\nA React hook that provides the current theme as its value. If the theme is updated, the child component will be re-rendered accordingly.\n\n```jsx\n// @live\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ThemeProvider, useTheme } from 'emotion-theming'\n\nconst theme = {\n  colors: {\n    primary: 'hotpink'\n  }\n}\n\nfunction SomeText (props) {\n  const theme = useTheme()\n  return (\n    <div\n      css={{ color: theme.colors.primary }}\n      {...props}\n    />\n  )\n}\n\nrender(\n  <ThemeProvider theme={theme}>\n    <SomeText>some text</SomeText>\n  </ThemeProvider>\n)\n```\n\n## Credits\n\nThanks goes to the [styled-components team](https://github.com/styled-components/styled-components) and [their contributors](https://github.com/styled-components/styled-components/graphs/contributors) who designed this API.\n\n## License\n\nMIT 2017-present\n",
      "readmeFilename": "README.md",
      "_id": "emotion-theming@10.3.0",
      "_nodeVersion": "10.24.1",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-mXiD2Oj7N9b6+h/dC6oLf9hwxbtKHQjoIqtodEyL8CpkN4F3V4IK/BT4D0C7zSs4BBFOu4UlPJbvvBLa88SGEA==",
        "shasum": "7f84d7099581d7ffe808aab5cd870e30843db72a",
        "tarball": "https://registry.npmjs.org/emotion-theming/-/emotion-theming-10.3.0.tgz",
        "fileCount": 22,
        "unpackedSize": 64183,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhoLgECRA9TVsSAnZWagAA/mMQAKN68EoCH1oxAjfyI5Jn\nB5KFFf+JY+JquVjlzsZwPTZsx8Xt7WyFxwUU0EVaFm0Polj4o2GqATPFb1Ac\nCd5tL9gLj9WR3NTZv5U1dgEBu3ufRyAF6azrCpoU2L3BakpVznEoH40wZhau\nXcPld2yVtqORk/hzAGYbuH1AkHfftgV2jYEJpc6xXOVc8RwDUjvm3CLeVB3B\nsKHA5/ap8pGfDzplF9VZkyCSrHQp28lvSqolOrEdwgSXLCpdUqyAiiaFigtC\n7+EvSaRJ3ODQwzozTDhDDpIekERnB307zw1KVRUeCJjU+ri4sLDemWkYUaKs\n/Dtoy0pxjdIpainosme6I0oWJYXcnyafKlqv/qJOVIzwbtx2QJefWFS0LBVw\nnigJSMAlA2DdIZx+i9pmav4bwgGINYqY4pQ21BP3o9pL3yJ5P4wKfrEYx/k6\nOacQ5irTRJJOVKq7TJVjdMU1oBaimIJdPVq2Ek/Foy9GuUl78YNSFQLhQW4O\nb1M9vN7+PJlDm72fEc7uiYEJSR2WqsE7v5IEoBjwYgcRHkON7TuBgEBqp55F\nez8sPhtT4XQLi4mbDPlLe4AOYC++gtvGXCsCFsJsc6rLOY9GJ7j5vQMAFbuD\nauKJWgQYkj5tz/dCvzAT9EgWIWJBEhTDiHMQmcF2tcL5STs7TW9s9hcdDswD\nu+wO\r\n=IDhl\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDdavoqlqEIipHD1Yv0GvwY5mprbolE43DY3utBKIwn+QIhAMeD4MSEdXXSzY9Mn93jHR1CIFs2sN8RnWZr6/0Uuqjn"
          }
        ]
      },
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        },
        {
          "name": "mitchellhamilton",
          "email": "mitchell@hamil.town"
        },
        {
          "name": "emotion-release-bot",
          "email": "mitchell+emotion-release-bot@hamil.town"
        },
        {
          "name": "andarist",
          "email": "mateuszburzynski@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/emotion-theming_10.3.0_1637922820720_0.6038322512519689"
      },
      "_hasShrinkwrap": false
    }
  },
  "readme": "",
  "maintainers": [
    {
      "email": "npm@emmas.town",
      "name": "emmatown"
    },
    {
      "email": "kye.hohenberger@gmail.com",
      "name": "tkh44"
    },
    {
      "email": "emotion-release-bot@hamil.town",
      "name": "emotion-release-bot"
    },
    {
      "email": "mateuszburzynski@gmail.com",
      "name": "andarist"
    }
  ],
  "time": {
    "modified": "2022-11-17T04:06:04.804Z",
    "created": "2017-09-29T18:41:54.339Z",
    "8.0.2-10": "2017-09-29T18:41:54.339Z",
    "8.0.2-11": "2017-09-30T05:12:22.111Z",
    "8.0.2": "2017-10-05T15:35:53.249Z",
    "8.0.3": "2017-10-06T22:23:36.985Z",
    "8.0.4": "2017-10-07T00:00:40.787Z",
    "8.0.7": "2017-10-16T17:06:01.329Z",
    "8.0.9": "2017-10-23T09:07:14.028Z",
    "8.0.10": "2017-11-07T21:30:44.631Z",
    "8.0.11": "2017-11-24T10:45:10.905Z",
    "8.0.12": "2017-11-30T23:29:56.392Z",
    "9.0.0-0": "2017-12-23T03:44:17.786Z",
    "9.0.0-1": "2017-12-23T04:56:46.503Z",
    "9.0.0": "2018-02-04T04:53:31.867Z",
    "9.1.2": "2018-04-17T07:45:43.437Z",
    "9.2.0": "2018-06-07T10:01:45.674Z",
    "9.2.1": "2018-06-07T10:34:29.494Z",
    "9.2.3": "2018-06-09T02:23:14.851Z",
    "9.2.4": "2018-06-21T20:55:10.515Z",
    "9.2.5": "2018-07-06T23:02:53.140Z",
    "9.2.6": "2018-07-15T04:08:49.075Z",
    "9.2.9": "2018-09-16T10:45:08.411Z",
    "10.0.0-really-unsafe-please-do-not-use.0": "2018-09-27T23:34:25.414Z",
    "10.0.0-really-unsafe-please-do-not-use.1": "2018-09-28T04:18:31.196Z",
    "10.0.0-really-unsafe-please-do-not-use.2": "2018-09-28T04:37:19.129Z",
    "10.0.0-beta.0": "2018-10-13T07:35:07.710Z",
    "10.0.0-beta.1": "2018-10-15T10:26:56.939Z",
    "10.0.0-beta.2": "2018-10-16T08:35:26.828Z",
    "10.0.0-beta.3": "2018-10-16T23:58:56.407Z",
    "10.0.0-beta.4": "2018-10-17T07:25:54.543Z",
    "10.0.0-beta.5": "2018-10-17T07:35:05.378Z",
    "10.0.0-beta.6": "2018-10-27T05:21:49.973Z",
    "10.0.0-beta.7": "2018-11-02T07:31:22.021Z",
    "10.0.0-beta.8": "2018-11-05T04:47:12.281Z",
    "10.0.0-beta.10": "2018-11-12T05:17:41.323Z",
    "10.0.0-beta.11": "2018-11-12T07:24:10.291Z",
    "10.0.0-beta.12": "2018-11-13T05:12:42.705Z",
    "10.0.0-beta.13": "2018-11-20T12:36:55.076Z",
    "10.0.0": "2018-11-27T22:49:54.336Z",
    "10.0.1": "2018-12-01T20:39:44.324Z",
    "10.0.2": "2018-12-03T22:56:43.026Z",
    "10.0.3": "2018-12-05T21:05:54.999Z",
    "10.0.4": "2018-12-05T21:23:54.997Z",
    "10.0.5": "2018-12-14T00:49:42.503Z",
    "10.0.6": "2019-01-06T23:16:42.514Z",
    "10.0.7": "2019-02-04T07:04:51.726Z",
    "10.0.8": "2019-03-11T06:25:59.467Z",
    "10.0.9": "2019-03-11T06:32:50.182Z",
    "10.0.10": "2019-03-25T07:43:02.014Z",
    "10.0.14": "2019-06-25T23:08:28.988Z",
    "10.0.17": "2019-08-31T23:52:25.503Z",
    "10.0.18": "2019-09-11T21:15:08.274Z",
    "10.0.19": "2019-09-17T12:51:18.938Z",
    "11.0.0-next.0": "2019-11-03T20:35:19.451Z",
    "11.0.0-next.1": "2019-11-05T20:25:45.859Z",
    "11.0.0-next.2": "2019-11-05T22:53:52.808Z",
    "11.0.0-next.3": "2019-11-09T10:20:39.018Z",
    "11.0.0-next.4": "2019-11-13T10:42:53.778Z",
    "11.0.0-next.5": "2019-11-15T09:12:24.051Z",
    "11.0.0-next.6": "2019-11-25T22:44:30.552Z",
    "10.0.27": "2019-12-22T23:11:25.307Z",
    "11.0.0-rc.0": "2020-10-11T13:52:57.157Z",
    "11.0.0": "2020-11-12T00:45:36.305Z",
    "10.3.0": "2021-11-26T10:33:40.909Z"
  },
  "homepage": "https://emotion.sh",
  "keywords": [],
  "repository": {
    "type": "git",
    "url": "https://github.com/emotion-js/emotion/tree/master/packages/emotion-theming"
  },
  "bugs": {
    "url": "https://github.com/emotion-js/emotion/issues"
  },
  "license": "MIT",
  "readmeFilename": "",
  "users": {
    "arcticicestudio": true
  }
}