{
  "_id": "@stdlib/bench-harness",
  "_rev": "12-2a5de25cf988c3bb9d532cae0ad5294c",
  "name": "@stdlib/bench-harness",
  "dist-tags": {
    "latest": "0.2.1"
  },
  "versions": {
    "0.0.1": {
      "name": "@stdlib/bench-harness",
      "version": "0.0.1",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "bin": {
        "bench": "bin/cli"
      },
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "bin": "./bin",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://github.com/stdlib-js/stdlib",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.0.x",
        "@stdlib/assert-is-boolean": "^0.0.x",
        "@stdlib/assert-is-browser": "^0.0.x",
        "@stdlib/assert-is-function": "^0.0.x",
        "@stdlib/assert-is-node-writable-stream-like": "^0.0.x",
        "@stdlib/assert-is-null": "^0.0.x",
        "@stdlib/assert-is-plain-object": "^0.0.x",
        "@stdlib/assert-is-positive-integer": "^0.0.x",
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/cli": "^0.0.x",
        "@stdlib/fs-read-file": "^0.0.x",
        "@stdlib/process-cwd": "^0.0.x",
        "@stdlib/regexp-eol": "^0.0.x",
        "@stdlib/streams-node-transform": "^0.0.x",
        "@stdlib/string-from-code-point": "^0.0.x",
        "@stdlib/string-replace": "^0.0.x",
        "@stdlib/string-trim": "^0.0.x",
        "@stdlib/time-tic": "^0.0.x",
        "@stdlib/time-toc": "^0.0.x",
        "@stdlib/utils-copy": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.0.x",
        "@stdlib/utils-define-property": "^0.0.x",
        "@stdlib/utils-inherit": "^0.0.x",
        "@stdlib/utils-noop": "^0.0.x",
        "@stdlib/utils-omit": "^0.0.x",
        "@stdlib/utils-pick": "^0.0.x",
        "glob": "^7.0.5",
        "resolve": "^1.1.7"
      },
      "devDependencies": {
        "@stdlib/assert-contains": "^0.0.x",
        "@stdlib/assert-is-regexp": "^0.0.x",
        "@stdlib/assert-is-windows": "^0.0.x",
        "@stdlib/bench": "^0.0.x",
        "@stdlib/buffer-from-string": "^0.0.x",
        "@stdlib/math-base-assert-is-nan": "^0.0.x",
        "@stdlib/math-base-special-cos": "^0.0.x",
        "@stdlib/math-base-special-sin": "^0.0.x",
        "@stdlib/process-exec-path": "^0.0.x",
        "@stdlib/random-base-randu": "^0.0.x",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "d18e784bd22554a229c719de5a4558af5cbfb2d4",
      "_id": "@stdlib/bench-harness@0.0.1",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-pnqCc6u4n+SLnFIutjPvVEdMIEQrdKYAJs+m1D+bq68RO5Nfgi/xF289KdDMNdX8Th3pSIjflBYpMSdiPvsJgg==",
        "shasum": "78f24eef11596d9d1a41c0a5c02cd51a0155e94b",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.0.1.tgz",
        "fileCount": 51,
        "unpackedSize": 167620,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgyOh6CRA9TVsSAnZWagAAkAwP+QGty5XYk43hWwfuiHy4\n1t19jUADFxs7egxIrjS6pZUYWF01glPn5qRKOK8axly4fo6u01BWFjhE3A/F\nvslDIAS3YhZdIFwJHLoUHdPXmz8jnxZr10SR64NhD0p7hG0agZ0ZMpHdeT7W\nvtcIcD2R+WDcCFfidF+Znfvnkhxn2BNczboqQpgNzqs0b9knyFQQak6R+aSo\ndUX3GFrUcRbNI18lNYtB/8oZjxEzkCQpRew2WbTVHsQ6hgyR+iZGa1+QPdi3\noKPcJZlid6WIfHkQkQcB/WibABj7mprwVoh2ZdJ6nVdmarHHLigDWipwwE+7\nfTyPoITf/2NgAW1ruSM3T7QGgUZZ4JqzWuR+wMkzzCef+FOBq6iI20FIK9/m\ntdHhKqzMOBPM56yAtv82058SpUGmpZKUDFl2tGYv3kZaLwbDrrdOYDJHeJ+7\nFg69jM6D79ihY/+uDL97rAnE9daQg8mZn5xjCfLcJEjp0n8HEmLH+uXkLRHW\nQ/WJXRv9MhdHRk9EyXNrb80sKUXqH3QDMJ6wwvcDSEQNC/VAcOqV3SAHSeKQ\n4jxcdcYUHeSu/dzfH3/VV/vAuhnS9aM8yiYHuH9JRqWKW363GxTwTB9SR9uH\nMSyCKMZTAv9CJxiyWOuM1RsgjqkUjXmVxbQDQl/UUxd5lMWgizSt2a+Q7v5X\nfC8K\r\n=XUvG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE5+B2dn2QaHLOVxMdwmysd4dRzBBCnacWxaPml4R/wTAiAVgukSH5l5J21WlsEh/vLJ5vSa1LHSPQVSP/Cjoc4eFA=="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        },
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.0.1_1623779450477_0.9499459580139671"
      },
      "_hasShrinkwrap": false
    },
    "0.0.2": {
      "name": "@stdlib/bench-harness",
      "version": "0.0.2",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "bin": {
        "bench": "bin/cli"
      },
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "bin": "./bin",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://github.com/stdlib-js/stdlib",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.0.x",
        "@stdlib/assert-is-boolean": "^0.0.x",
        "@stdlib/assert-is-browser": "^0.0.x",
        "@stdlib/assert-is-function": "^0.0.x",
        "@stdlib/assert-is-node-writable-stream-like": "^0.0.x",
        "@stdlib/assert-is-null": "^0.0.x",
        "@stdlib/assert-is-plain-object": "^0.0.x",
        "@stdlib/assert-is-positive-integer": "^0.0.x",
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/cli": "^0.0.x",
        "@stdlib/fs-read-file": "^0.0.x",
        "@stdlib/process-cwd": "^0.0.x",
        "@stdlib/regexp-eol": "^0.0.x",
        "@stdlib/streams-node-transform": "^0.0.x",
        "@stdlib/string-from-code-point": "^0.0.x",
        "@stdlib/string-replace": "^0.0.x",
        "@stdlib/string-trim": "^0.0.x",
        "@stdlib/time-tic": "^0.0.x",
        "@stdlib/time-toc": "^0.0.x",
        "@stdlib/utils-copy": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.0.x",
        "@stdlib/utils-define-property": "^0.0.x",
        "@stdlib/utils-inherit": "^0.0.x",
        "@stdlib/utils-noop": "^0.0.x",
        "@stdlib/utils-omit": "^0.0.x",
        "@stdlib/utils-pick": "^0.0.x",
        "glob": "^7.0.5",
        "resolve": "^1.1.7"
      },
      "devDependencies": {
        "@stdlib/assert-contains": "^0.0.x",
        "@stdlib/assert-is-regexp": "^0.0.x",
        "@stdlib/assert-is-windows": "^0.0.x",
        "@stdlib/bench": "^0.0.x",
        "@stdlib/buffer-from-string": "^0.0.x",
        "@stdlib/math-base-assert-is-nan": "^0.0.x",
        "@stdlib/math-base-special-cos": "^0.0.x",
        "@stdlib/math-base-special-sin": "^0.0.x",
        "@stdlib/process-exec-path": "^0.0.x",
        "@stdlib/random-base-randu": "^0.0.x",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "dbf4c23f9914c7658ab8ce1a401d0527597a03f6",
      "_id": "@stdlib/bench-harness@0.0.2",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-SZgj2LYEmbpTUKtfIBf48sDIG4sg8t2V+d6hO9IdQzPjJTu7JDFWBP3egY42eFsWuMtBlkhbBJRUTSp0TA/pKw==",
        "shasum": "a5b86effac7235c2226b83bb1a1a651ce216d628",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.0.2.tgz",
        "fileCount": 55,
        "unpackedSize": 181583,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgyZHDCRA9TVsSAnZWagAAz0gQAKHH3xzhas+LDHTK1oi5\niGYZnJ7f9uo5kyCiXPY62evmL7GdivJN8Ijdkv1rkusIH9+QGkMqgFgQHYJC\nrtvT7h1ux3dmHZ/rMU6mfXq33certWFg+YYZLr9gUIBt7USTf4onWioi012I\nqkV71l1eW2UW/y7Gd4w4Jl0pzo3JRk+dLCvPEWrVQ2NeWBf9xpzTrmRT3j8A\n6pPZOXA8QgtRZOi+zicwt9Tc40xvJHoDl1/YZrOqscq4V/s83dfK6Yd7V9lf\nk6O0AMNy389D4xB62snQqqu9vFggNEveN6bVts3CUaetLCcnsVn//IJc9KlX\n9W8eOrsWtP4XVrAP04yaoOoeRe8Sp4ElyblE8I0wGbVLR5iZJ/nE6UDVTD+3\n0ryqffJaZcMH6Zn/E36/OHvcb2IWaVCHk7Yoa9ZlTQQ4OepFatPp1wgEtO3j\nA1/y+fm5RUtMwUVdk94FkLTkV8mwzsSNy78CgD4s3nUntkmRj/WEIqLvnrzf\nqSKn0UjK0Knd3Bc0QdcQU9C0ecNGpj4G1Xy9/M9QYc3y9yCao6iljssXSd8V\n7wzpasuOaVoxt/ZPO0X2LXC5vA2FtSdkky/xiltl3u8DVpYBhEFzmDRYG5lM\nQ+yd8sxgHFctIV0uiFRGfbjPIOSDIDlWv8CZ3OSqeGZK0seeiRrTFomUsrbN\nhvTF\r\n=L4sf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDc6tUWENY11CFNWkDXQfaOYK0ebuzKwbZU7ZxgjA8LngIhANd745+CM9W8uaQfyL2r8Fgb1K2wzNFUeeJBFfBolS9u"
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        },
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.0.2_1623822787351_0.9864785101153801"
      },
      "_hasShrinkwrap": false
    },
    "0.0.3": {
      "name": "@stdlib/bench-harness",
      "version": "0.0.3",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "bin": {
        "bench": "bin/cli"
      },
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "bin": "./bin",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.0.x",
        "@stdlib/assert-is-boolean": "^0.0.x",
        "@stdlib/assert-is-browser": "^0.0.x",
        "@stdlib/assert-is-function": "^0.0.x",
        "@stdlib/assert-is-node-writable-stream-like": "^0.0.x",
        "@stdlib/assert-is-null": "^0.0.x",
        "@stdlib/assert-is-plain-object": "^0.0.x",
        "@stdlib/assert-is-positive-integer": "^0.0.x",
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/cli": "^0.0.x",
        "@stdlib/fs-read-file": "^0.0.x",
        "@stdlib/process-cwd": "^0.0.x",
        "@stdlib/regexp-eol": "^0.0.x",
        "@stdlib/streams-node-transform": "^0.0.x",
        "@stdlib/string-from-code-point": "^0.0.x",
        "@stdlib/string-replace": "^0.0.x",
        "@stdlib/string-trim": "^0.0.x",
        "@stdlib/time-tic": "^0.0.x",
        "@stdlib/time-toc": "^0.0.x",
        "@stdlib/utils-copy": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.0.x",
        "@stdlib/utils-define-property": "^0.0.x",
        "@stdlib/utils-inherit": "^0.0.x",
        "@stdlib/utils-noop": "^0.0.x",
        "@stdlib/utils-omit": "^0.0.x",
        "@stdlib/utils-pick": "^0.0.x",
        "glob": "^7.0.5",
        "resolve": "^1.1.7"
      },
      "devDependencies": {
        "@stdlib/assert-contains": "^0.0.x",
        "@stdlib/assert-is-regexp": "^0.0.x",
        "@stdlib/assert-is-windows": "^0.0.x",
        "@stdlib/bench": "^0.0.x",
        "@stdlib/buffer-from-string": "^0.0.x",
        "@stdlib/math-base-assert-is-nan": "^0.0.x",
        "@stdlib/math-base-special-cos": "^0.0.x",
        "@stdlib/math-base-special-sin": "^0.0.x",
        "@stdlib/process-exec-path": "^0.0.x",
        "@stdlib/random-base-randu": "^0.0.x",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "b36ffc108d69252f11f117a39f429a11ca8abee2",
      "_id": "@stdlib/bench-harness@0.0.3",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-oJZCIQkrcXScZxqUcRJepRUeieJH2/ezPqJ95rscaFMtF+lxqXhKZ9Q1Ui0xYNhVtqNvB893CUnO+Q/R4kMM7A==",
        "shasum": "2a9963044cffd5a9c8f8c3db593edf4247a40f67",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.0.3.tgz",
        "fileCount": 55,
        "unpackedSize": 181737,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg2QvRCRA9TVsSAnZWagAATfIP/1iuT8nCXX08BobbRkDH\njaI/IHgS2H41EPAdNvaIkmwvHmrnTZARxOgbzDBdF9VzDLwyVr7vXYT3GjhE\nZkeyzWhhMiHsF927f6yTpr7NMClbF/3/5wADf2TO4/j2kjAVHWIFm/t8TWjf\nlnBQZgNJ2XUshyaupRkmPU8Nqg4JGXNq7T2NT7cZAk8oE651iok/lGM8VagH\nLMfhj/5EKzpJnNDd0rdedxgroXeBoGRBupsBPOX8fOC+4oSMdvzXZsMMqKTn\n1mYJngeknEsB9kSxquSzyjG8SV5/6gwYUT43rSQuEFdWOrS+v466ykC4a1R8\n678GGRynKovIE7QwyKAAWx62SNtWz1d2i7RaBy2aZ3PsHHVEvxlE4JAx8cay\nq5d/0TcN8NrBFPaMIvn2jGD9rwYNitcBylzZOqC1szvzkmgv1zw6bzC/e0xS\nM6HgWVZfRJMtzQq2AAjIDlTANmnsz7fPfU315rzXUs2gYrUrtpkmzjP74Bez\n1m3JwHTTOWLQkP2fQzZCwHUPSABdEqtxQ+1MDJWImCo9LxxN2JtLrofOKgM3\nTiV5XcftoQAqMc/uSM1eDCdES6xfHmEjnC44qjEsLZLy+5Y/T/am6YJQnqYR\nhWCFkHI2IJalfSURN6eFRWz7AuIJ4+mpDoZSpx8KizJG5t2YRZ2mJG4J79R0\nv8f3\r\n=QaLx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCUz0XltSxeExrtlkU2bisKhO6P+wEWQokfDr1P0SQhQgIgJ8and2UrqtmAHOSD3XrXnHAs0W+qeSBK9Hp6aDx9Hp4="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        },
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.0.3_1624837072762_0.21490767029783475"
      },
      "_hasShrinkwrap": false
    },
    "0.0.4": {
      "name": "@stdlib/bench-harness",
      "version": "0.0.4",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "bin": {
        "bench": "bin/cli"
      },
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "bin": "./bin",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.0.x",
        "@stdlib/assert-is-boolean": "^0.0.x",
        "@stdlib/assert-is-browser": "^0.0.x",
        "@stdlib/assert-is-function": "^0.0.x",
        "@stdlib/assert-is-node-writable-stream-like": "^0.0.x",
        "@stdlib/assert-is-null": "^0.0.x",
        "@stdlib/assert-is-plain-object": "^0.0.x",
        "@stdlib/assert-is-positive-integer": "^0.0.x",
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/cli-ctor": "^0.0.x",
        "@stdlib/fs-read-file": "^0.0.x",
        "@stdlib/process-cwd": "^0.0.x",
        "@stdlib/regexp-eol": "^0.0.x",
        "@stdlib/streams-node-transform": "^0.0.x",
        "@stdlib/string-from-code-point": "^0.0.x",
        "@stdlib/string-replace": "^0.0.x",
        "@stdlib/string-trim": "^0.0.x",
        "@stdlib/time-tic": "^0.0.x",
        "@stdlib/time-toc": "^0.0.x",
        "@stdlib/utils-copy": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.0.x",
        "@stdlib/utils-define-property": "^0.0.x",
        "@stdlib/utils-inherit": "^0.0.x",
        "@stdlib/utils-noop": "^0.0.x",
        "@stdlib/utils-omit": "^0.0.x",
        "@stdlib/utils-pick": "^0.0.x",
        "glob": "^7.0.5",
        "resolve": "^1.1.7"
      },
      "devDependencies": {
        "@stdlib/assert-contains": "^0.0.x",
        "@stdlib/assert-is-regexp": "^0.0.x",
        "@stdlib/assert-is-windows": "^0.0.x",
        "@stdlib/bench": "^0.0.x",
        "@stdlib/buffer-from-string": "^0.0.x",
        "@stdlib/math-base-assert-is-nan": "^0.0.x",
        "@stdlib/math-base-special-cos": "^0.0.x",
        "@stdlib/math-base-special-sin": "^0.0.x",
        "@stdlib/process-exec-path": "^0.0.x",
        "@stdlib/random-base-randu": "^0.0.x",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "846e2563c91c67db8a724092cf6aa1fd92663567",
      "_id": "@stdlib/bench-harness@0.0.4",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-hNHERwcWKYdGOLCVN7ibmqh/vARg3JXG6ObzLEjlur+JrboEdyY8XdMu4hKwsbJrX/12cSNP+GwXTIXjVR0J8g==",
        "shasum": "997075d189815342fdc37cef1acd9466d491e7c1",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.0.4.tgz",
        "fileCount": 55,
        "unpackedSize": 181747,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg5QlICRA9TVsSAnZWagAAYnMP/iYPSxAG1btgwqtbn33Z\nCIiAs32J6w5QeH277WGcFKPTxdZI2d7+6NuRkbsgfck7ZWBRRqpKDAGtw4WI\nEEfhrG89yqWAbdukldJMbRjvLv/QI9SWJksiUIQQexDcSYHyIH4ar4Qd3yqH\nIBKWLGXk6nOLRbQDpiLPmTh4jRyhArClR6Rlldg9KLBFsGfXvbCC0UEIMn/A\nMTzAUC+ooE7Y0dKG/B61aJiUDl1nXyy4AMeJScFu2/6165iUDB50yRNAVt12\nsFY51nJtWuIOxTeBOZir6efP5xVABnYzSJVEgtNOsE4aifx5zXTgggr8vVoW\nDLcUFDpC+dOPEyH50gSU7K1oLLVQLum3GlHwPb6bos0rq+JZ6Q1oQXUYia04\nHiIxlYFE2ZWCNjkuY4eo+Y+RfGczp07hhAEI+QkNdlH738IKJ78YqJUakFwp\n80QJM83aWpJbfiyZdZYEALG4IHOpWX6eVdBbQ1pW2i5vo6Amz4WKVWHWlMqU\nWoJ06u88IGwliRzf5RzA1QzzkrENqArHfsAnJQYY+Dazd9p28fTAuyt50HJL\njMzDN7bK6+RmeYHTCw5naBevb9H7b5bLMo0xw90HDgLX5nkdh7Rf8GjoXL+0\nQebuwv1HYxXUJuhJ0rLgWWnG2mZNnBYeKQRYcjzvM8cohMEY8ORosu6XQ7Pv\n7DmH\r\n=+nS5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGW/HXkwj3aMWvYvWVbhCCFhH6ug847vpwJgBYiAFGpfAiEA/IT8O6+90tnZZ+Sfm92c2lU4lAuVl2kQcpq93XIFdKM="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        },
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.0.4_1625622855802_0.2639037845945462"
      },
      "_hasShrinkwrap": false
    },
    "0.0.5": {
      "name": "@stdlib/bench-harness",
      "version": "0.0.5",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "bin": {
        "bench": "bin/cli"
      },
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "bin": "./bin",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.0.x",
        "@stdlib/assert-is-boolean": "^0.0.x",
        "@stdlib/assert-is-browser": "^0.0.x",
        "@stdlib/assert-is-function": "^0.0.x",
        "@stdlib/assert-is-node-writable-stream-like": "^0.0.x",
        "@stdlib/assert-is-null": "^0.0.x",
        "@stdlib/assert-is-plain-object": "^0.0.x",
        "@stdlib/assert-is-positive-integer": "^0.0.x",
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/cli-ctor": "^0.0.x",
        "@stdlib/fs-read-file": "^0.0.x",
        "@stdlib/process-cwd": "^0.0.x",
        "@stdlib/regexp-eol": "^0.0.x",
        "@stdlib/streams-node-transform": "^0.0.x",
        "@stdlib/string-from-code-point": "^0.0.x",
        "@stdlib/string-replace": "^0.0.x",
        "@stdlib/string-trim": "^0.0.x",
        "@stdlib/time-tic": "^0.0.x",
        "@stdlib/time-toc": "^0.0.x",
        "@stdlib/utils-copy": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.0.x",
        "@stdlib/utils-define-property": "^0.0.x",
        "@stdlib/utils-inherit": "^0.0.x",
        "@stdlib/utils-noop": "^0.0.x",
        "@stdlib/utils-omit": "^0.0.x",
        "@stdlib/utils-pick": "^0.0.x",
        "glob": "^7.0.5",
        "resolve": "^1.1.7"
      },
      "devDependencies": {
        "@stdlib/assert-contains": "^0.0.x",
        "@stdlib/assert-is-regexp": "^0.0.x",
        "@stdlib/assert-is-windows": "^0.0.x",
        "@stdlib/bench": "^0.0.x",
        "@stdlib/buffer-from-string": "^0.0.x",
        "@stdlib/math-base-assert-is-nan": "^0.0.x",
        "@stdlib/math-base-special-cos": "^0.0.x",
        "@stdlib/math-base-special-sin": "^0.0.x",
        "@stdlib/process-exec-path": "^0.0.x",
        "@stdlib/random-base-randu": "^0.0.x",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "582ec1fb99636b0c2591b089173a680a62b67cd7",
      "_id": "@stdlib/bench-harness@0.0.5",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-I7Pqv5hVQnvdCEg6NWyRpbglgeikfe1G/Bv9AijatxkKOIM/vb4DrQfVgPtkEPWmIv6L9YBBWC3qPHGXGF6RDA==",
        "shasum": "fe7c2b38c7f6323e7191b007a67674b48088f028",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.0.5.tgz",
        "fileCount": 55,
        "unpackedSize": 181747,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg6OdTCRA9TVsSAnZWagAALaEP/RObwuT1SqSXAOZt/br2\nCkdXx1adYhERbAT2YVZwZCbtXHwjE5Bo5KXSt+336vunCO0QqVOJClTbdZnx\noiiaJHMrr84vP8cPl1May/ON7mfe6PGkVT3uVvdKXaFN8IW4mTo3r7nHhYY/\nK1K+MN/HIxMjFWyUiXvuB/+ReJyBuJZ75o7Gy6XccS1rL/WVAkmdxFg0izlm\nu4VgVf3M3haiBjMRYeXX+M4MxFvvI3PtdYw4fgFzvL7NEjCkcv1T4QpEQ5hj\nbBTV1LM04RNv8gCq0FvptM+5HhD2szSG/ta6N/f8Uz0hLnqL8JQ1/gUTOGob\nOI/pXKggmRHruOD50B+wxKQiqXM462K9obPJLI7R0dubqvkynbKwXCZdz15B\nlIhrlMyEIJWIZpGC/l//8qDL63aFBRi/unLqAJBIPX9NgPkzJSmVfucJMjrC\nR2icNIBZsZf0a2f711wgjsC3eI1y8Ft3GiC9xJQU2mYC8NaGDyg5AF6Zq6mD\nRRBtBXPdnKafcZF9hGgCpIt3BQognSPBfxUzvtxD2urHOvzG05DZRcsgEL1r\nHHyhGvpMO1vQ3a8VHODzeQg7CMCCLFTVcZbjB7zuoBJPhe4eaRv9l+UwPrM1\nV3qBfdZTj10kVAbrFtZK+gfZm41qd/c2ss1FwLeEoXwt2WiJ9r0SMfN2FqG+\nH8mL\r\n=WwV2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF625q/maAfcrlwlMeCZwcBj0k7ZMJKAgtJF+6wX8IuxAiEA7AXS2kP+Hbzov3qjFhPUzFJgT9LRD7QOtVTaztnK7JM="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        },
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.0.5_1625876307141_0.5269494774976431"
      },
      "_hasShrinkwrap": false
    },
    "0.0.6": {
      "name": "@stdlib/bench-harness",
      "version": "0.0.6",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "bin": {
        "bench": "bin/cli"
      },
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.0.x",
        "@stdlib/assert-is-boolean": "^0.0.x",
        "@stdlib/assert-is-browser": "^0.0.x",
        "@stdlib/assert-is-function": "^0.0.x",
        "@stdlib/assert-is-node-writable-stream-like": "^0.0.x",
        "@stdlib/assert-is-null": "^0.0.x",
        "@stdlib/assert-is-plain-object": "^0.0.x",
        "@stdlib/assert-is-positive-integer": "^0.0.x",
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/cli-ctor": "^0.0.x",
        "@stdlib/fs-read-file": "^0.0.x",
        "@stdlib/process-cwd": "^0.0.x",
        "@stdlib/regexp-eol": "^0.0.x",
        "@stdlib/streams-node-transform": "^0.0.x",
        "@stdlib/string-from-code-point": "^0.0.x",
        "@stdlib/string-replace": "^0.0.x",
        "@stdlib/string-trim": "^0.0.x",
        "@stdlib/time-tic": "^0.0.x",
        "@stdlib/time-toc": "^0.0.x",
        "@stdlib/utils-copy": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.0.x",
        "@stdlib/utils-define-property": "^0.0.x",
        "@stdlib/utils-inherit": "^0.0.x",
        "@stdlib/utils-noop": "^0.0.x",
        "@stdlib/utils-omit": "^0.0.x",
        "@stdlib/utils-pick": "^0.0.x",
        "glob": "^7.0.5",
        "resolve": "^1.1.7"
      },
      "devDependencies": {
        "@stdlib/assert-contains": "^0.0.x",
        "@stdlib/assert-is-regexp": "^0.0.x",
        "@stdlib/assert-is-windows": "^0.0.x",
        "@stdlib/bench": "^0.0.x",
        "@stdlib/buffer-from-string": "^0.0.x",
        "@stdlib/math-base-assert-is-nan": "^0.0.x",
        "@stdlib/math-base-special-cos": "^0.0.x",
        "@stdlib/math-base-special-sin": "^0.0.x",
        "@stdlib/process-exec-path": "^0.0.x",
        "@stdlib/random-base-randu": "^0.0.x",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "bf0199766ec1a7f7a5b5ea07845671d5b5c4363c",
      "_id": "@stdlib/bench-harness@0.0.6",
      "_nodeVersion": "16.7.0",
      "_npmVersion": "7.20.3",
      "dist": {
        "integrity": "sha512-wfQWobjjrTjLBxkJrdn7juwdZeTF0eyX84YiRGaRNswtxFWbeGSsLpqd+hQfABuJq1GI5aDOTP6BJ3G4Sxn1ug==",
        "shasum": "056a09ba6320c04b36180aab2e30ab8cf80811c5",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.0.6.tgz",
        "fileCount": 54,
        "unpackedSize": 181628,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhItWACRA9TVsSAnZWagAA0yYP/2GNns9cbadAj7Tlm66E\nB/r2Ht5cTMi923c0lq1Y2JlMxSxxyCLYoKyDt46H977g+Q9D6JSDqXirot5w\nAk6+fF8f8hFUOYdaexUVYD69ay3Gl2r3PJw541QXgM+piQ3d/UNw5rjCWg3a\n5NCr+KNM51fEsjU9M64A/3lzN6gu0lbOnx0R7z+sqKVfIOz7J7XYcSDZvyuB\nFjpm1ry8B+jQ/ei8/jIHFI9ibAT7koifMlB0sI7TzzaqLuhaOTSJWewnr43d\n6CeCa1OMT3zAq1+LDqNvNil/9wdJotRmtgxoV2eLg538J/u+UkD5SmGT1uue\nIZNPmMbPZIptytPwwsBfNCvdBTCyhn6pVme6vgV8zjPCyXrT/K3Cwyh9qshi\nM941ESpMpXpfZXhqqDpl3KmDhiDawRqMqDA0BO6usiE80LOsVNlkIXhnyiZq\ncsfKo14ZBo4M/dFrsszGo/JXIrDd5lZMCz+Zws3qNhNN8O46R2/qBL+FwToD\nWTYWn3d5xobZRZXAAT1alhGRA0IH3bn1lmMacJrPGnsXmZT1d71Gmeq5Mla4\n0fHpDVyL2aWcPd7nt6nexk58b0D5qrGuYAO49wEcNyfco2xCbvJpmcY6lpxj\nbDX4Af5EwA8ZqZCESDxM6Da0AOqebm2swmJc9lLDK4jtgCsduPyArtU2zt8h\n+onC\r\n=OyzO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCoJ1T0RGSZn13ioiHVD/jWH/mmdJLian2yIt/eoeLX2AIhAMcOwdOaoB1bVVPwRoB4qBo+RUWCy83M+SB5ZcF+XhAE"
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.0.6_1629672831777_0.6843468516889051"
      },
      "_hasShrinkwrap": false
    },
    "0.0.7": {
      "name": "@stdlib/bench-harness",
      "version": "0.0.7",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "bin": {
        "bench": "bin/cli"
      },
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.0.x",
        "@stdlib/assert-is-boolean": "^0.0.x",
        "@stdlib/assert-is-browser": "^0.0.x",
        "@stdlib/assert-is-function": "^0.0.x",
        "@stdlib/assert-is-node-writable-stream-like": "^0.0.x",
        "@stdlib/assert-is-null": "^0.0.x",
        "@stdlib/assert-is-plain-object": "^0.0.x",
        "@stdlib/assert-is-positive-integer": "^0.0.x",
        "@stdlib/assert-is-string": "^0.0.x",
        "@stdlib/cli-ctor": "^0.0.x",
        "@stdlib/fs-read-file": "^0.0.x",
        "@stdlib/process-cwd": "^0.0.x",
        "@stdlib/regexp-eol": "^0.0.x",
        "@stdlib/streams-node-transform": "^0.0.x",
        "@stdlib/string-from-code-point": "^0.0.x",
        "@stdlib/string-replace": "^0.0.x",
        "@stdlib/string-trim": "^0.0.x",
        "@stdlib/time-tic": "^0.0.x",
        "@stdlib/time-toc": "^0.0.x",
        "@stdlib/utils-copy": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.0.x",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.0.x",
        "@stdlib/utils-define-property": "^0.0.x",
        "@stdlib/utils-inherit": "^0.0.x",
        "@stdlib/utils-noop": "^0.0.x",
        "@stdlib/utils-omit": "^0.0.x",
        "@stdlib/utils-pick": "^0.0.x",
        "glob": "^7.0.5",
        "resolve": "^1.1.7"
      },
      "devDependencies": {
        "@stdlib/assert-contains": "^0.0.x",
        "@stdlib/assert-is-regexp": "^0.0.x",
        "@stdlib/assert-is-windows": "^0.0.x",
        "@stdlib/bench": "^0.0.x",
        "@stdlib/buffer-from-string": "^0.0.x",
        "@stdlib/math-base-assert-is-nan": "^0.0.x",
        "@stdlib/math-base-special-cos": "^0.0.x",
        "@stdlib/math-base-special-sin": "^0.0.x",
        "@stdlib/process-exec-path": "^0.0.x",
        "@stdlib/random-base-randu": "^0.0.x",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-spec": "5.x.x"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "patreon",
        "url": "https://www.patreon.com/athan"
      },
      "gitHead": "4e18a909ed429c635e5e218405528d9b8a3a76d0",
      "_id": "@stdlib/bench-harness@0.0.7",
      "_nodeVersion": "16.13.2",
      "_npmVersion": "8.1.2",
      "dist": {
        "integrity": "sha512-Dw/FiQITyIRHtN/RbJHIC9rKl7OaVcIkb3e0eXZk7iKJ3R1D0C1giRqyx5GPr4PgdMCIrKK8hN7aAXxwiP1+mA==",
        "shasum": "c589b4051a6e6ca1f2b5dd91d31a753934416960",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.0.7.tgz",
        "fileCount": 54,
        "unpackedSize": 182174,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiDVYECRA9TVsSAnZWagAAM/MQAIwr7BDT8WLBpLdyngto\nSSKgYSb4uEvFQ4M+ZkJOFZAKtsYimBs8zinxsM++nqfovEUjp3isOyLaui1E\nMyD8QQjOKzYLpbME1+bXimMeBBrhfnlnUrN/mB8ydcVvVkqq5gHdWzVVY6sm\n+pLdrggqhIy1AKhvmcZAj/4wD0/5U/TFdRxMoOGb6hcCf2VmNhvaWrLQEzga\nD4HAFOmPO4JViTOEEgIF5uarKUaFQRpA1O+1EjrwRd0UlPbulrGn8baW13YO\nR2j5SiZCx2tRvus7fezBFXFuxEHjXDR5MTjtRbEjUDVu9nNutn0R6l+622Bd\n57gE64cHK/6YSKUWM78wSfGHxIzQqJ8JZtkGGBzexOYb8OseCyzbsw7JvZVk\nGPEcyjsZ2BtfO6b5NEZB/gtg6kBBGeGoNBvN2mLb1ZC12fT1esUqas5bnn9D\nVrTeIg6Mga3BcNoAgndK4VUvwJe8nE3/YVXtYzg3Sz1UpvFpJchh21y8gmCh\nfvIML3jySosDDheTJYMgr+oqGAs+d9YG94C/pCW89L40sAXE8CxtJHtVAYH6\neb8IbiewgwX7c4Iups1YoSO+CkLEoEkwAOA8ER7PVw+hSfCMpPCpvUK2e/fB\n12aUqXIibJ/YkiB2+xIL1Ff8ioAVR2yZVlQdTuiQmpmt4ue2hfFtrR7/GPkH\naORV\r\n=xwBu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEYcF3yaNVYx2xkm9RgNszmCdZYenoWViN6vqozhVNYUAiAtRnCT+gUpXPGJ+VV6InGUD553q7fxfaiUcpqr/gvyfg=="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.0.7_1645041156345_0.1652454967639998"
      },
      "_hasShrinkwrap": false
    },
    "0.1.0": {
      "name": "@stdlib/bench-harness",
      "version": "0.1.0",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.1.0",
        "@stdlib/assert-is-boolean": "^0.1.0",
        "@stdlib/assert-is-function": "^0.1.0",
        "@stdlib/assert-is-node-writable-stream-like": "^0.1.0",
        "@stdlib/assert-is-plain-object": "^0.1.0",
        "@stdlib/streams-node-transform": "^0.1.0",
        "@stdlib/string-format": "^0.1.0",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.1.0",
        "@stdlib/utils-noop": "^0.1.0",
        "@stdlib/utils-omit": "^0.1.0",
        "@stdlib/utils-pick": "^0.1.0"
      },
      "devDependencies": {
        "@stdlib/bench": "^0.1.0",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-min": "git+https://github.com/Planeshifter/tap-min.git"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/stdlib"
      },
      "gitHead": "4e3cc6d57c6463c9e569dd91fd6648ddaa6b63f8",
      "_id": "@stdlib/bench-harness@0.1.0",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-s035cHBOfqURChpUDyzTrdy014i/VzsIfw1Cp2oxyRvcMI5DZJQsCUhjrGQ/2EEP6PGn137yTVKfabFyBxG1zw==",
        "shasum": "8ba99df8fdcd06bc5a6f9ea1be058f0aeb438a14",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.1.0.tgz",
        "fileCount": 54,
        "unpackedSize": 292282,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC/pb1zoU9evFjrROLVz/wTjxVkVAI32VbWqNaP4zv/lwIhAIhtXZeb2zYZnBgyf6IetYdpHfX4m2mUdk+CWiqmU4un"
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte+stdlibbot@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte+stdlibbot@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.1.0_1695503802062_0.3357094439653916"
      },
      "_hasShrinkwrap": false
    },
    "0.1.1": {
      "name": "@stdlib/bench-harness",
      "version": "0.1.1",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.1.1",
        "@stdlib/assert-is-boolean": "^0.1.1",
        "@stdlib/assert-is-function": "^0.1.1",
        "@stdlib/assert-is-node-writable-stream-like": "^0.1.1",
        "@stdlib/assert-is-plain-object": "^0.1.1",
        "@stdlib/streams-node-transform": "^0.1.0",
        "@stdlib/string-format": "^0.1.1",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.1.1",
        "@stdlib/utils-noop": "^0.1.1",
        "@stdlib/utils-omit": "^0.1.0",
        "@stdlib/utils-pick": "^0.1.1"
      },
      "devDependencies": {
        "@stdlib/bench": "^0.2.1",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-min": "git+https://github.com/Planeshifter/tap-min.git"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/stdlib"
      },
      "gitHead": "26aef2895b8430b2db15e967df75e2eaebbac145",
      "_id": "@stdlib/bench-harness@0.1.1",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-dtTUItlFH8hiC1w41jQjtl5skRSwhfV4nUJTJ/Y+57Wp4OC8Gq83Gfhfs7YwWKQ+Zt3CW6jV3jQsOj9OP086Ew==",
        "shasum": "5adb0168c61c476fd8bc55fc8bae10663d7b5da1",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.1.1.tgz",
        "fileCount": 54,
        "unpackedSize": 292282,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHw8J/neTo4yfFCbcMkWIo+L1hhpYOVNtxss1KTq3lphAiBCEqMOojC+X2CxhlpomUK5+33kDdpx5/mMKSXKFN2F3w=="
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte+stdlibbot@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte+stdlibbot@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.1.1_1700364216552_0.5995165743015407"
      },
      "_hasShrinkwrap": false
    },
    "0.1.2": {
      "name": "@stdlib/bench-harness",
      "version": "0.1.2",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples",
        "benchmark": "make benchmark"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.1.1",
        "@stdlib/assert-is-boolean": "^0.1.1",
        "@stdlib/assert-is-browser": "^0.1.1",
        "@stdlib/assert-is-function": "^0.1.1",
        "@stdlib/assert-is-node-writable-stream-like": "^0.1.1",
        "@stdlib/assert-is-null": "^0.1.1",
        "@stdlib/assert-is-plain-object": "^0.1.1",
        "@stdlib/assert-is-positive-integer": "^0.1.0",
        "@stdlib/assert-is-string": "^0.1.1",
        "@stdlib/regexp-eol": "^0.1.1",
        "@stdlib/streams-node-transform": "^0.1.0",
        "@stdlib/string-base-replace": "^0.1.1",
        "@stdlib/string-base-trim": "^0.1.1",
        "@stdlib/string-format": "^0.1.1",
        "@stdlib/string-from-code-point": "^0.1.0",
        "@stdlib/time-tic": "^0.1.1",
        "@stdlib/time-toc": "^0.1.0",
        "@stdlib/utils-copy": "^0.1.0",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.1.1",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.1.1",
        "@stdlib/utils-define-property": "^0.1.1",
        "@stdlib/utils-inherit": "^0.1.1",
        "@stdlib/utils-noop": "^0.1.1",
        "@stdlib/utils-omit": "^0.1.0",
        "@stdlib/utils-pick": "^0.1.1"
      },
      "devDependencies": {
        "@stdlib/bench": "^0.2.1",
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-min": "git+https://github.com/Planeshifter/tap-min.git"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/stdlib"
      },
      "gitHead": "f6eff6e70a22f8a3e11daceabe3e91b926e453b9",
      "_id": "@stdlib/bench-harness@0.1.2",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-Pn2KSDdNshYKwibrw5CYfzH+0HjyoT0p05bQMyllDlQL712MZEAjCQQ9IDFKmCtnVYycEBmMP4u4hgbyWioepQ==",
        "shasum": "40801f018104b1612efeb41249433aee2636044f",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.1.2.tgz",
        "fileCount": 54,
        "unpackedSize": 292893,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCqac2K6l3SmnvhQIUMAMzcTvCZI1MyYbNpVUviFSqe/AIhAIQ4dvOuM2qJJuLKQQnANlOPd5TyWjdfk3I3OOk1dN1n"
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte+stdlibbot@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte+stdlibbot@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.1.2_1700406103045_0.7509447063940835"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0": {
      "name": "@stdlib/bench-harness",
      "version": "0.2.0",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "benchmark": "./benchmark",
        "doc": "./docs",
        "example": "./examples",
        "lib": "./lib",
        "test": "./test"
      },
      "types": "./docs/types",
      "scripts": {
        "test": "make test",
        "test-cov": "make test-cov",
        "examples": "make examples"
      },
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.1.1",
        "@stdlib/assert-is-boolean": "^0.2.0",
        "@stdlib/assert-is-browser": "^0.2.0",
        "@stdlib/assert-is-function": "^0.2.0",
        "@stdlib/assert-is-node-writable-stream-like": "^0.2.0",
        "@stdlib/assert-is-null": "^0.2.0",
        "@stdlib/assert-is-plain-object": "^0.2.0",
        "@stdlib/assert-is-positive-integer": "^0.2.0",
        "@stdlib/assert-is-string": "^0.2.0",
        "@stdlib/regexp-eol": "^0.2.0",
        "@stdlib/streams-node-transform": "^0.2.0",
        "@stdlib/string-base-replace": "^0.2.0",
        "@stdlib/string-base-trim": "^0.2.0",
        "@stdlib/string-format": "^0.2.0",
        "@stdlib/string-from-code-point": "^0.2.0",
        "@stdlib/time-tic": "^0.2.0",
        "@stdlib/time-toc": "^0.2.0",
        "@stdlib/utils-copy": "^0.2.0",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.2.0",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.2.0",
        "@stdlib/utils-define-property": "^0.2.0",
        "@stdlib/utils-inherit": "^0.2.0",
        "@stdlib/utils-noop": "^0.2.0",
        "@stdlib/utils-omit": "^0.2.0",
        "@stdlib/utils-pick": "^0.2.0"
      },
      "devDependencies": {
        "proxyquire": "^2.0.0",
        "tape": "git+https://github.com/kgryte/tape.git#fix/globby",
        "istanbul": "^0.4.1",
        "tap-min": "git+https://github.com/Planeshifter/tap-min.git"
      },
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/stdlib"
      },
      "gitHead": "7137673f0798ef13d7c9fd7becf78e557b1d583b",
      "_id": "@stdlib/bench-harness@0.2.0",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-N2hF4uDzs0EvnADRTYAXLRvjTK3UAqGxl4hqW45sCdz1zwtpQDuAFycrkCjkXWpiVAdLwBgC4DRIu6tkJcNz/g==",
        "shasum": "94f75c6afe98f6bb9a458ca76109373f7f181167",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.2.0.tgz",
        "fileCount": 54,
        "unpackedSize": 292636,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCWpv1QaG/iXImOyE3TaYiU0VOoe5iwBgBQI74OCf0X7AIhAOGUyJEpiEM9Zxt1CVeZtEtw5Pw51EjLuK96f4EYzGdY"
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte+stdlibbot@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte+stdlibbot@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.2.0_1707894736819_0.8948564586073051"
      },
      "_hasShrinkwrap": false
    },
    "0.2.1": {
      "name": "@stdlib/bench-harness",
      "version": "0.2.1",
      "description": "Benchmark harness.",
      "license": "Apache-2.0",
      "author": {
        "name": "The Stdlib Authors",
        "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
      },
      "contributors": [
        {
          "name": "The Stdlib Authors",
          "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
        }
      ],
      "main": "./lib",
      "browser": {
        "process": "process/"
      },
      "directories": {
        "doc": "./docs",
        "lib": "./lib",
        "dist": "./dist"
      },
      "types": "./docs/types",
      "scripts": {},
      "homepage": "https://stdlib.io",
      "repository": {
        "type": "git",
        "url": "git://github.com/stdlib-js/bench-harness.git"
      },
      "bugs": {
        "url": "https://github.com/stdlib-js/stdlib/issues"
      },
      "dependencies": {
        "@stdlib/assert-has-own-property": "^0.2.1",
        "@stdlib/assert-is-boolean": "^0.2.1",
        "@stdlib/assert-is-browser": "^0.2.1",
        "@stdlib/assert-is-function": "^0.2.1",
        "@stdlib/assert-is-node-writable-stream-like": "^0.2.1",
        "@stdlib/assert-is-null": "^0.2.1",
        "@stdlib/assert-is-plain-object": "^0.2.1",
        "@stdlib/assert-is-positive-integer": "^0.2.1",
        "@stdlib/assert-is-string": "^0.2.1",
        "@stdlib/regexp-eol": "^0.2.1",
        "@stdlib/streams-node-transform": "^0.2.1",
        "@stdlib/string-base-replace": "^0.2.1",
        "@stdlib/string-base-trim": "^0.2.1",
        "@stdlib/string-format": "^0.2.1",
        "@stdlib/string-from-code-point": "^0.2.1",
        "@stdlib/time-tic": "^0.2.1",
        "@stdlib/time-toc": "^0.2.1",
        "@stdlib/utils-copy": "^0.2.1",
        "@stdlib/utils-define-nonenumerable-read-only-accessor": "^0.2.2",
        "@stdlib/utils-define-nonenumerable-read-only-property": "^0.2.1",
        "@stdlib/utils-define-property": "^0.2.1",
        "@stdlib/utils-inherit": "^0.2.1",
        "@stdlib/utils-noop": "^0.2.1",
        "@stdlib/utils-omit": "^0.2.1",
        "@stdlib/utils-pick": "^0.2.1"
      },
      "devDependencies": {},
      "engines": {
        "node": ">=0.10.0",
        "npm": ">2.7.0"
      },
      "os": [
        "aix",
        "darwin",
        "freebsd",
        "linux",
        "macos",
        "openbsd",
        "sunos",
        "win32",
        "windows"
      ],
      "keywords": [
        "stdlib",
        "standard",
        "library",
        "lib",
        "bench",
        "benchmark",
        "tap",
        "harness",
        "measure",
        "performance",
        "perf"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/stdlib"
      },
      "gitHead": "31aff930532b53e34d2c7386684375a079fcf6bb",
      "_id": "@stdlib/bench-harness@0.2.1",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-Y86n/j9dHJLNdDw5En4MdNwbUuKB+DHi83qjpIZzyrM9MruXLhgcCuf3spW4maGrcd966rxJPvrPNhIeJeG9SQ==",
        "shasum": "2fd83180979be9dc13dc17065b16901e2c629737",
        "tarball": "https://registry.npmjs.org/@stdlib/bench-harness/-/bench-harness-0.2.1.tgz",
        "fileCount": 54,
        "unpackedSize": 292295,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDgUA+gbAnDwgm4wbW4MaF3p6yw98CTuLGaWZVvQRkT7AIhAKheKx+S2RKKK9VOo6sxIi6NmB2hzKii/2uMQlgIhBvr"
          }
        ]
      },
      "_npmUser": {
        "name": "stdlib-bot",
        "email": "kgryte+stdlibbot@gmail.com"
      },
      "maintainers": [
        {
          "name": "stdlib-bot",
          "email": "kgryte+stdlibbot@gmail.com"
        },
        {
          "name": "kgryte",
          "email": "kgryte@gmail.com"
        },
        {
          "name": "planeshifter",
          "email": "pgb@andrew.cmu.edu"
        },
        {
          "name": "rreusser",
          "email": "rsreusser@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/bench-harness_0.2.1_1708790773971_0.5069508814882084"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2021-06-15T17:50:50.312Z",
    "0.0.1": "2021-06-15T17:50:50.623Z",
    "modified": "2024-02-24T16:06:14.652Z",
    "0.0.2": "2021-06-16T05:53:07.478Z",
    "0.0.3": "2021-06-27T23:37:52.893Z",
    "0.0.4": "2021-07-07T01:54:15.922Z",
    "0.0.5": "2021-07-10T00:18:27.291Z",
    "0.0.6": "2021-08-22T22:53:52.156Z",
    "0.0.7": "2022-02-16T19:52:36.571Z",
    "0.1.0": "2023-09-23T21:16:42.304Z",
    "0.1.1": "2023-11-19T03:23:36.729Z",
    "0.1.2": "2023-11-19T15:01:43.211Z",
    "0.2.0": "2024-02-14T07:12:16.999Z",
    "0.2.1": "2024-02-24T16:06:14.168Z"
  },
  "maintainers": [
    {
      "name": "stdlib-bot",
      "email": "kgryte+stdlibbot@gmail.com"
    },
    {
      "name": "kgryte",
      "email": "kgryte@gmail.com"
    },
    {
      "name": "planeshifter",
      "email": "pgb@andrew.cmu.edu"
    },
    {
      "name": "rreusser",
      "email": "rsreusser@gmail.com"
    }
  ],
  "description": "Benchmark harness.",
  "homepage": "https://stdlib.io",
  "keywords": [
    "stdlib",
    "standard",
    "library",
    "lib",
    "bench",
    "benchmark",
    "tap",
    "harness",
    "measure",
    "performance",
    "perf"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/stdlib-js/bench-harness.git"
  },
  "contributors": [
    {
      "name": "The Stdlib Authors",
      "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
    }
  ],
  "author": {
    "name": "The Stdlib Authors",
    "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
  },
  "bugs": {
    "url": "https://github.com/stdlib-js/stdlib/issues"
  },
  "license": "Apache-2.0",
  "readme": "<!--\n\n@license Apache-2.0\n\nCopyright (c) 2018 The Stdlib Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n-->\n\n\n<details>\n  <summary>\n    About stdlib...\n  </summary>\n  <p>We believe in a future in which the web is a preferred environment for numerical computation. To help realize this future, we've built stdlib. stdlib is a standard library, with an emphasis on numerical and scientific computation, written in JavaScript (and C) for execution in browsers and in Node.js.</p>\n  <p>The library is fully decomposable, being architected in such a way that you can swap out and mix and match APIs and functionality to cater to your exact preferences and use cases.</p>\n  <p>When you use stdlib, you can be absolutely certain that you are using the most thorough, rigorous, well-written, studied, documented, tested, measured, and high-quality code out there.</p>\n  <p>To join us in bringing numerical computing to the web, get started by checking us out on <a href=\"https://github.com/stdlib-js/stdlib\">GitHub</a>, and please consider <a href=\"https://opencollective.com/stdlib\">financially supporting stdlib</a>. We greatly appreciate your continued support!</p>\n</details>\n\n# Benchmark\n\n[![NPM version][npm-image]][npm-url] [![Build Status][test-image]][test-url] [![Coverage Status][coverage-image]][coverage-url] <!-- [![dependencies][dependencies-image]][dependencies-url] -->\n\n> Benchmark harness.\n\n<!-- Section to include introductory text. Make sure to keep an empty line after the intro `section` element and another before the `/section` close. -->\n\n<section class=\"intro\">\n\n</section>\n\n<!-- /.intro -->\n\n<!-- Package usage documentation. -->\n\n<section class=\"installation\">\n\n## Installation\n\n```bash\nnpm install @stdlib/bench-harness\n```\n\n</section>\n\n<section class=\"usage\">\n\n## Usage\n\n```javascript\nvar bench = require( '@stdlib/bench-harness' );\n```\n\n<a name=\"bench\"></a>\n\n#### bench( name\\[, options]\\[, benchmark] )\n\nQueues a `benchmark` to be run during a subsequent turn of the event loop. After running the `benchmark`, the function outputs benchmark results as Test Anything Protocol ([TAP][tap]) output.\n\n<!-- eslint-disable no-restricted-syntax, stdlib/no-builtin-math -->\n\n```javascript\nbench( 'Math.sin', function benchmark( b ) {\n    var x;\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        x = Math.sin( Math.random() );\n        if ( x !== x ) {\n            b.fail( 'should not return NaN' );\n        }\n    }\n    b.toc();\n    if ( x !== x ) {\n        b.fail( 'should not return NaN' );\n    }\n    b.pass( 'benchmark finished' );\n    b.end();\n});\n```\n\nA `benchmark` function has the following signature:\n\n```javascript\nfunction benchmark( b ) {\n    // Benchmark code...\n}\n```\n\nwhere `b` is a `Benchmark` instance. Synchronous benchmarks should, at minimum, have the following structure:\n\n```javascript\nfunction benchmark( b ) {\n    var x;\n    var i;\n\n    // [1] Start timing:\n    b.tic();\n\n    // [2] Loop containing code to time...\n    for ( i = 0; i < b.iterations; i++ ) {\n        // [3] Code to time...\n\n        // [4] A conditional verifying results to prevent certain compiler optimizations:\n        if ( x !== x ) {\n            b.fail( 'something went wrong!' );\n        }\n    }\n    // [5] Stop timing:\n    b.toc();\n\n    // [6] Another conditional verifying results to prevent certain compiler optimizations:\n    if ( x !== x ) {\n        b.fail( 'something went wrong!' );\n    }\n    // [7] End the benchmark:\n    b.end();\n}\n```\n\nAsynchronous benchmarks should have a structure similar to the following:\n\n```javascript\nfunction benchmark( b ) {\n    var i = 0;\n\n    // [1] Start timing:\n    b.tic();\n\n    // [2] Asynchronous code to time:\n    return next();\n\n    function next( error ) {\n        if ( error ) {\n            return b.fail( error.message );\n        }\n        i += 1;\n\n        // [3] Exit condition:\n        if ( i <= b.iterations ) {\n            // Asynchronous task...\n            return;\n        }\n        // [4] Stop timing:\n        b.toc();\n\n        // [5] End the benchmark:\n        b.end();\n    }\n}\n```\n\nFor both synchronous and asynchronous benchmarks, calling `b.end()` is **mandatory**, as failing to do so will cause the harness to hang. For example, the following benchmark will **never** complete.\n\n```javascript\nfunction benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        // Synchronous task...\n    }\n    b.toc();\n}\n```\n\n**Avoid** making assertions within timed code, as doing so will **significantly** affect raw performance numbers. For example, **avoid** the following:\n\n<!-- eslint-disable stdlib/no-builtin-math -->\n\n```javascript\nfunction benchmark( b ) {\n    var x;\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        x = Math.sin( Math.random() );\n        b.equal( x, x, 'does not return NaN' ); // Avoid doing this!\n    }\n    b.toc();\n    b.equal( x, x, 'does not return NaN' );     // This is fine.\n    b.end();\n}\n```\n\nAdditionally, ensure that all setup code executes **before** calling `b.tic()` and that all cleanup code executes **after** calling `b.toc()`. For example, **avoid** the following:\n\n<!-- eslint-disable stdlib/no-builtin-math -->\n\n```javascript\nfunction benchmark( b ) {\n    var x;\n    var y;\n    var i;\n\n    // Start timing:\n    b.tic();\n\n    // Setup code:\n    x = new Array( b.iterations );                  // Should be before b.tic()!\n    for ( i = 0; i < b.iterations; i++ ) {\n        x[ i ] = Math.random();\n    }\n    // Code to be timed...\n    for ( i = 0; i < b.iterations; i++ ) {\n        y = Math.sin( x[ i ] );\n        if ( y !== y ) {\n            b.fail( 'should not return NaN' );\n        }\n    }\n    // Verify results:\n    b.equal( x, x, 'does not return NaN' );         // Should be after b.toc()!\n\n    // Stop timing:\n    b.toc();\n\n    b.end();\n}\n```\n\nThe function accepts the following `options`:\n\n-   **iterations**: number of iterations. If `null`, the number of iterations is determined by trying successive powers of `10` until the total time is at least `0.1` seconds. Default: `null`.\n-   **repeats**: number of repeats. Default: `3`.\n-   **timeout**: number of milliseconds before a benchmark is considered failed. Exceeding a timeout does **not**, however, end the benchmark. Ending a long running benchmark requires manual intervention. Default: `300000` (5 minutes).\n-   **skip**: `boolean` indicating whether to skip a benchmark.\n\nBy default, the harness will automatically determine an iteration number for each benchmark such that a benchmark runs for a length of time sufficient to accurately compute benchmark results. To require a specific number of iterations, set the `iterations` option.\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar opts = {\n    'iterations': 1e6\n};\n\nbench( 'require a specific number of iterations', opts, function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        // Code to be benchmarked...\n    }\n    b.toc();\n    b.end();\n});\n```\n\nTo ensure that benchmark results are reproducible, the harness runs each benchmark function multiple times. To specify a repetition number, set the `repeats` option.\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar opts = {\n    'repeats': 5\n};\n\nbench( 'repeat a benchmark multiple times', opts, function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        // Code to be benchmarked...\n    }\n    b.toc();\n    b.end();\n});\n```\n\nTo skip a benchmark, set the `skip` option.\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar opts = {\n    'skip': true\n};\n\nbench( 'skipped benchmark', opts, function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        // Code to be benchmarked...\n    }\n    b.toc();\n    b.end();\n});\n```\n\nTo fail benchmarks which take longer than a specified amount of time to complete, set a `timeout` option (in milliseconds).\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar opts = {\n    'timeout': 5000    // 5 seconds\n};\n\nbench( 'async benchmark', opts, function benchmark( b ) {\n    var i = 0;\n    b.tic();\n    return next();\n\n    function next( error ) {\n        if ( error ) {\n            return b.fail( error.message );\n        }\n        i += 1;\n        if ( i <= b.iterations ) {\n            // Asynchronous task...\n            return;\n        }\n        b.toc();\n        b.end();\n    }\n});\n```\n\n<a name=\"bench-onfinish\"></a>\n\n#### bench.onFinish( clbk )\n\nSets a listener which is invoked once the harness **finishes** running all benchmarks.\n\n```javascript\nfunction onFinish() {\n    console.log( 'Done!' );\n}\n\nbench.onFinish( onFinish );\n```\n\n<a name=\"bench-createstream\"></a>\n\n#### bench.createStream( \\[options] )\n\nReturns a results [stream][nodejs-stream].\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar stdout = require( '@stdlib/streams-node-stdout' );\n\nvar stream = bench.createStream();\n\n// Direct all results to `stdout`:\nstream.pipe( stdout );\n\nvar opts = {\n    'iterations': 1,\n    'repeats': 1\n};\n\nbench( 'beep', opts, function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        b.equal( 3.14, 3.14, 'should be equal' );\n    }\n    b.toc();\n    b.end();\n});\n```\n\n```text\nTAP version 13\n# beep\nok 1 should be equal\n  ---\n  iterations: 1\n  elapsed: 0.002985193\n  rate: 334.98671610177297\n  ...\n#\n1..1\n# total 1\n# pass  1\n#\n# ok\n```\n\nThe results stream can be combined with any [`Writable`][nodejs-writable-stream] stream (e.g., network connection, file, `stdout`, etc).\n\nThe function accepts the same `options` as [@stdlib/streams/node/transform][@stdlib/streams/node/transform]. For example, by default, the method returns a stream which produces [TAP][tap] output as text. To return an object stream,\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar opts = {\n    'objectMode': true\n};\n\nvar stream = bench.createStream( opts );\nstream.on( 'data', onRow );\n\nfunction onRow( row ) {\n    console.log( JSON.stringify( row ) );\n}\n\nopts = {\n    'iterations': 1,\n    'repeats': 1\n};\n\nbench( 'beep', opts, function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        b.equal( 3.14, 3.14, 'should be equal' );\n    }\n    b.toc();\n    b.end();\n});\n```\n\n```text\n{\"type\":\"benchmark\",\"name\":\"beep\",\"id\":0}\n{\"id\":0,\"ok\":true,\"name\":\"should be equal\",\"operator\":\"equal\",\"actual\":3.14,\"expected\":3.14,\"benchmark\":0,\"type\":\"assert\"}\n{\"ok\":true,\"operator\":\"result\",\"iterations\":1,\"elapsed\":0.00283753,\"rate\":352.41918147120913,\"benchmark\":0,\"type\":\"result\"}\n{\"benchmark\":0,\"type\":\"end\"}\n```\n\n<a name=\"bench-createharness\"></a>\n\n#### bench.createHarness( \\[options]\\[, clbk] )\n\nCreates a benchmark harness with a new pending stack and state.\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar harness = bench.createHarness();\n\nharness( 'beep', function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        // Synchronous task...\n    }\n    b.toc();\n    b.end();\n});\n```\n\nTo trigger an action when a harness finishes running all benchmarks, provide a callback `function`.\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar harness = bench.createHarness( onFinish );\n\nfunction onFinish() {\n    harness.close();\n}\n\nharness( 'beep', function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        // Synchronous task...\n    }\n    b.toc();\n    b.end();\n});\n```\n\nThe method accepts the following `options`:\n\n-   **autoclose**: `boolean` indicating whether to automatically close a harness after running all benchmarks.\n\nBy default, a `harness` does **not** automatically close. To automatically close a harness once a harness finishes running all benchmarks, set the `autoclose` option to `true`.\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar harness = bench.createHarness({\n    'autoclose': true\n});\n\nharness( 'beep', function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        // Synchronous task...\n    }\n    b.toc();\n    b.end();\n});\n```\n\n* * *\n\n### Harness\n\nA `harness` has the following properties and methods...\n\n<a name=\"harness-createstream\"></a>\n\n#### harness.createStream( \\[options] )\n\nReturns a results [stream][nodejs-stream].\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar stdout = require( '@stdlib/streams-node-stdout' );\n\nvar harness = bench.createHarness();\nvar stream = harness.createStream();\n\n// Direct all results to `stdout`:\nstream.pipe( stdout );\n\nvar opts = {\n    'iterations': 1,\n    'repeats': 1\n};\n\nharness( 'beep', opts, function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        b.equal( 'beep', 'beep', 'should be equal' );\n    }\n    b.toc();\n    b.end();\n});\n```\n\n```text\nTAP version 13\n# beep\nok 1 should be equal\n  ---\n  iterations: 1\n  elapsed: 0.00166768\n  rate: 599.6354216636286\n  ...\n#\n1..1\n# total 1\n# pass  1\n#\n# ok\n```\n\nThe method accepts the same `options` as [@stdlib/streams/node/transform][@stdlib/streams/node/transform].\n\n**Note**: benchmarks will **not** run until a destination stream has been created.\n\n<a name=\"harness-close\"></a>\n\n#### harness.close()\n\nCloses a benchmark harness. Any pending benchmarks are cleared from the harness stack.\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar stdout = require( '@stdlib/streams-node-stdout' );\n\nvar harness = bench.createHarness();\n\nvar stream = harness.createStream();\nstream.pipe( stdout );\n\nvar opts = {\n    'iterations': 5,\n    'repeats': 5\n};\n\nharness( 'early close', opts, function benchmark( b ) {\n    var i = 0;\n    b.tic();\n    setTimeout( next, 0 );\n    function next() {\n        i += 1;\n        if ( i <= b.iterations ) {\n            b.ok( true, 'should be truthy' );\n            return setTimeout( next, 10 );\n        }\n        b.toc();\n        b.end();\n    }\n});\n\n// Early close:\nsetTimeout( onTimeout, 50 );\n\nfunction onTimeout() {\n    harness.close();\n}\n```\n\n```text\nTAP version 13\n# early close\nok 1 should be truthy\nok 2 should be truthy\n# WARNING: harness closed before completion.\nok 3 should be truthy\nok 4 should be truthy\nok 5 should be truthy\n  ---\n  iterations: 5\n  elapsed: 0.05940291\n  rate: 84.17096064822414\n  ...\n```\n\n**Warning**: a running benchmark may finish **after** closing a harness.\n\n<a name=\"harness-exit\"></a>\n\n#### harness.exit()\n\nForcefully exits a benchmark harness. All pending benchmarks will generate **failing** assertions.\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar stdout = require( '@stdlib/streams-node-stdout' );\n\nvar harness = bench.createHarness();\n\nvar stream = harness.createStream();\nstream.pipe( stdout );\n\nvar opts = {\n    'iterations': 5\n};\n\nharness( 'force exit', opts, function benchmark( b ) {\n    var i = 0;\n    b.tic();\n    return next();\n    function next() {\n        i += 1;\n        if ( i <= b.iterations ) {\n            b.ok( true, 'should be truthy' );\n            return setTimeout( next, 10 );\n        }\n        b.toc();\n        b.end();\n    }\n});\n\n// Forcefully exit:\nsetTimeout( onTimeout, 20 );\n\nfunction onTimeout() {\n    harness.exit();\n}\n```\n\n```text\nTAP version 13\n# force exit\nok 1 should be truthy\nnot ok 2 benchmark exited without ending\n  ---\n  operator: fail\n  TODO: include stack\n  ...\nnot ok 3 benchmark exited without ending\n  ---\n  operator: fail\n  TODO: include stack\n  ...\nok 4 should be truthy\nok 5 should be truthy\nok 6 should be truthy\nok 7 should be truthy\n  ---\n  iterations: 5\n  elapsed: 0.061504862\n  rate: 81.29438612511642\n  ...\n```\n\n**Warning**: a running benchmark may finish **after** exiting a harness.\n\n<a name=\"harness-exitcode\"></a>\n\n#### harness.exitCode\n\n**Read-only** property whose value is the harness exit code. If all benchmarks run successfully (i.e., no failing assertions), the exit code is `0`; otherwise, the exit code is `1`.\n\n<!-- eslint-disable no-restricted-syntax -->\n\n```javascript\nvar harness = bench.createHarness();\n\n// Benchmarks only start running when results have a destination:\nvar stream = harness.createStream();\n\nfunction onFinish() {\n    console.log( harness.exitCode );\n    // => 1\n}\n\nvar opts = {\n    'iterations': 1,\n    'repeats': 1\n};\n\nharness( 'exit code', opts, function benchmark( b ) {\n    var i;\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        b.fail( 'failing assertion' );\n    }\n    b.toc();\n    b.end();\n});\n```\n\n* * *\n\n### Benchmark\n\nA `Benchmark` instance has the following properties and methods...\n\n<a name=\"benchmark-name\"></a>\n\n#### b.name\n\n**Read-only** property whose value is the benchmark `name`.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar str = b.name;\n// returns <string>\n```\n\n<a name=\"benchmark-iterations\"></a>\n\n#### b.iterations\n\n**Read-only** property whose value is the number of iterations.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar iter = b.iterations;\n// returns <number>\n```\n\n<a name=\"benchmark-tic\"></a>\n\n#### b.tic()\n\nStarts a benchmark timer. In order to benchmark code, this method **must always** be called within a `benchmark` function.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/no-builtin-math -->\n\n```javascript\nfunction benchmark( b ) {\n    var x;\n    var i;\n\n    // Start a timer:\n    b.tic();\n\n    for ( i = 0; i < b.iterations; i++ ) {\n        x = Math.sin( Math.random() );\n        if ( x !== x ) {\n            b.fail( 'should not return NaN' );\n        }\n    }\n    b.toc();\n    if ( x !== x ) {\n        b.fail( 'should not return NaN' );\n    }\n    b.end();\n}\n```\n\n<a name=\"benchmark-toc\"></a>\n\n#### b.toc()\n\nStops a benchmark timer. In order to benchmark code, this method **must always** be called within a `benchmark` function.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/no-builtin-math -->\n\n```javascript\nfunction benchmark( b ) {\n    var x;\n    var i;\n\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        x = Math.sin( Math.random() );\n        if ( x !== x ) {\n            b.fail( 'should not return NaN' );\n        }\n    }\n    // Stop a timer:\n    b.toc();\n\n    if ( x !== x ) {\n        b.fail( 'should not return NaN' );\n    }\n    b.end();\n}\n```\n\n<a name=\"benchmark-end\"></a>\n\n#### b.end()\n\nExplicitly ends a benchmark. In order to benchmark code, this method **must always** be called within a `benchmark` function.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/no-builtin-math -->\n\n```javascript\nfunction benchmark( b ) {\n    var x;\n    var i;\n\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        x = Math.sin( Math.random() );\n        if ( x !== x ) {\n            b.fail( 'should not return NaN' );\n        }\n    }\n    b.toc();\n\n    if ( x !== x ) {\n        b.fail( 'should not return NaN' );\n    }\n\n    // Explicitly end the benchmark:\n    b.end();\n}\n```\n\n**Warning**: no assertions should follow a call to `b.end()`. Including assertions after `b.end()` may result in interleaved [TAP][tap] output or an output stream closing before a benchmark executes pending assertions.\n\n<a name=\"benchmark-comment\"></a>\n\n#### b.comment( msg )\n\nWrites a message without breaking [TAP][tap] output.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nb.comment( 'This is a comment.' );\n```\n\n```text\n# This is a comment.\n```\n\nTo prevent confusing results parsers, **avoid** using comments. Comments are frequently used for demarcating the beginning of a new benchmark run and/or providing diagnostic information. Both of the aforementioned use cases typically fall under the domain of the harness, not the user.\n\n<a name=\"benchmark-skip\"></a>\n\n#### b.skip( value, msg )\n\nGenerates an assertion which will be skipped.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nb.skip( false, 'This is skipped.' );\nb.skip( true, 'This is skipped.' );\n```\n\n```text\nok 1 This is skipped. # SKIP\nok 2 This is skipped. # SKIP\n```\n\n<a name=\"benchmark-todo\"></a>\n\n#### b.todo( value, msg )\n\nGenerates an assertion which should be implemented.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nb.todo( false, 'This is a todo.' );\nb.todo( true, 'This is a todo.' );\n```\n\n```text\nnot ok 3 This is a todo. # TODO\n  ---\n  operator: todo\n  TODO: include stack\n  ...\nok 4 This is a todo. # TODO\n```\n\nWhile `b.todo()` assertions typically fail, they do **not** contribute to the failed assertion count. If a benchmark includes `b.todo()` assertions and no other failing assertions, the benchmark is considered successful.\n\n<a name=\"benchmark-fail\"></a>\n\n#### b.fail( msg )\n\nGenerates a failing assertion.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nb.fail( 'This is a failing assertion.' );\n```\n\n```text\nnot ok 5 This is a failing assertion.\n  ---\n  operator: fail\n  TODO: include stack\n  ... \n```\n\n<a name=\"benchmark-pass\"></a>\n\n#### b.pass( msg )\n\nGenerates a passing assertion.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nb.pass( 'This is a passing assertion.' );\n```\n\n```text\nok 6 This is a passing assertion.\n```\n\n<a name=\"benchmark-ok\"></a>\n\n#### b.ok( value\\[, msg] )\n\nAsserts that a `value` is truthy.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nb.ok( [] );\n```\n\n```text\nok 7 should be truthy\n```\n\nTo override the default message, provide a `msg` argument.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nb.ok( true, 'This asserts a value is truthy.' );\nb.ok( false, 'This asserts a value is truthy.' );\n```\n\n```text\nok 8 This asserts a value is truthy.\nnot ok 9 This asserts a value is truthy.\n  ---\n  operator: ok\n  TODO: include stack\n  ...\n```\n\n<a name=\"benchmark-notok\"></a>\n\n#### b.notOk( value\\[, msg] )\n\nAsserts that a `value` is falsy.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nb.notOk( null );\n```\n\n```text\nok 10 should be falsy\n```\n\nTo override the default message, provide a `msg` argument.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nb.notOk( false, 'This asserts a value is falsy.' );\nb.notOk( true, 'This asserts a value is falsy.' );\n```\n\n```text\nok 11 This asserts a value is falsy.\nnot ok 12 This asserts a value is falsy.\n  ---\n  operator: notOk\n  TODO: include stack\n  ...\n```\n\n<a name=\"benchmark-equal\"></a>\n\n#### b.equal( actual, expected\\[, msg] )\n\nAsserts that `actual` is **strictly** equal to `expected`.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar expected = [];\nvar actual = expected;\n\nb.equal( actual, expected );\n```\n\n```text\nok 13 should be equal\n```\n\nTo override the default message, provide a `msg` argument.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar expected = [];\nvar actual = expected;\n\nb.equal( actual, expected, 'This asserts two values are strictly equal.' );\nb.equal( 1.0, 2.0, 'This asserts two values are strictly equal.' );\n```\n\n```text\nok 14 This asserts two values are strictly equal.\nnot ok 15 This asserts two values are strictly equal.\n  ---\n  operator: equal\n  TODO: include stack\n  ...\n```\n\n<a name=\"benchmark-notequal\"></a>\n\n#### b.notEqual( actual, expected\\[, msg] )\n\nAsserts that `actual` is not **strictly** equal to `expected`.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar expected = [];\nvar actual = [];\n\nb.notEqual( actual, expected );\n```\n\n```text\nok 16 should not be equal\n```\n\nTo override the default message, provide a `msg` argument.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar expected = [];\nvar actual = [];\n\nb.notEqual( 1.0, 2.0, 'This asserts two values are not equal.' );\nb.notEqual( actual, expected, 'This asserts two values are not equal.' );\n```\n\n```text\nok 17 This asserts two values are not equal.\nnot ok 18 This asserts two values are not equal.\n  ---\n  operator: notEqual\n  TODO: include stack\n  ...\n```\n\n<a name=\"benchmark-deepequal\"></a>\n\n#### b.deepEqual( actual, expected\\[, msg] )\n\nAsserts that `actual` is **deeply** equal to `expected`.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar expected = {\n    'a': 'b'\n};\nvar actual = {\n    'a': 'b'\n};\n\nb.deepEqual( actual, expected );\n```\n\n```text\nok 19 should be deeply equal\n```\n\nTo override the default message, provide a `msg` argument.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar expected = {\n    'a': 'b'\n};\nvar actual = {\n    'a': 'b'\n};\n\nb.deepEqual( actual, expected, 'This asserts two values are deeply equal.' );\n\nactual.a = 'c';\nb.deepEqual( actual, expected, 'This asserts two values are deeply equal.' );\n```\n\n```text\nTODO\n```\n\n<a name=\"benchmark-notdeepequal\"></a>\n\n#### b.notDeepEqual( actual, expected\\[, msg] )\n\nAsserts that `actual` is not **deeply** equal to `expected`.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar expected = {\n    'a': 'b'\n};\nvar actual = {\n    'a': 'c'\n};\n\nb.notDeepEqual( actual, expected );\n```\n\n```text\nok 22 should not be deeply equal\n```\n\nTo override the default message, provide a `msg` argument.\n\n<!-- run-disable -->\n\n<!-- eslint-disable stdlib/doctest -->\n\n```javascript\nvar expected = {\n    'a': 'b'\n};\nvar actual = {\n    'a': 'c'\n};\n\nb.notDeepEqual( actual, expected, 'This asserts two values are not deeply equal.' );\n\nactual.a = 'b';\nb.notDeepEqual( actual, expected, 'This asserts two values are not deeply equal.' );\n```\n\n```text\nTODO\n```\n\n</section>\n\n<!-- /.usage -->\n\n<!-- Package usage notes. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n* * *\n\n<section class=\"notes\">\n\n## Notes\n\n-   All benchmark functions execute **serially** in separate turns of the event loop.\n-   All benchmark functions should be added during the **same** turn of the event loop. Otherwise, you will likely encounter race conditions where a benchmark executes and finishes causing a harness to close **before** subsequent benchmarks register.\n-   Similarly, create results streams **before** adding benchmarks to the harness. Otherwise, you will likely miss benchmark results.\n-   If a harness is invoked without providing a `benchmark` function, the benchmark is considered a `todo` and `opts.repeat` is ignored.\n-   All benchmarks are pretested. If a benchmark generates failing assertions or fails to call `b.tic()` and/or `b.toc()` during pretests (even if due to an intermittent failure), a benchmark is **only** run once (i.e., `options.repeats` is ignored). Similarly, if `options.iterations` is `null` and a benchmark fails during iteration number determination, a benchmark is **only** run once and for one iteration. Accordingly, if a benchmark does not run an expected number of repetitions and/or iterations, this behavior is likely attributable to a benchmark failure during pretesting.\n-   All benchmarks must have a `name`. If a `name` is not provided, the harness will throw an `Error`.\n-   While not required, all benchmarks should have a **unique** `name`. Unique names ensure easier identification and assignment of benchmark results.\n-   Uncaught exceptions in benchmark functions are **not** intercepted and will cause the harness to error.\n-   If any one of `b.tic()`, `b.toc()`, or `b.end()` is called more than once within a benchmark, the benchmark will **fail**.\n-   **Always** verify results. Doing so prevents the compiler from performing dead code elimination and other optimization techniques, which would render timing results meaningless.\n-   While many benchmark frameworks calculate various statistics over raw timing results (e.g., mean and standard deviation), do **not** do this. Instead, consider the fastest time an approximate lower bound for how fast an environment can execute benchmark code. Slower times are more likely attributable to other processes interfering with timing accuracy rather than attributable to variability in JavaScript's speed. In which case, the minimum time is most likely the only result of interest. When considering all raw timing results, apply common sense rather than statistics.\n\n### TAP\n\n-   Results are output in accordance with the Test Anything Protocol ([TAP][tap]) version [13][tap]. \n\n-   Example [TAP][tap] output:\n\n    ```text\n    TAP version 13\n    # Math.hypot\n      ---\n      iterations: 1000000\n      elapsed: 0.457849215\n      rate: 2184125.181911691\n      ...\n    ok 1 benchmark finished\n    # Math.hypot\n      ---\n      iterations: 1000000\n      elapsed: 0.454676639\n      rate: 2199365.250432407\n      ...\n    ok 2 benchmark finished\n    # Math.hypot\n      ---\n      iterations: 1000000\n      elapsed: 0.472378014\n      rate: 2116948.652059831\n      ...\n    ok 3 benchmark finished\n    # hypot\n      ---\n      iterations: 1000000\n      elapsed: 0.13120811\n      rate: 7621480.105155086\n      ...\n    ok 4 benchmark finished\n    # hypot\n      ---\n      iterations: 1000000\n      elapsed: 0.129308984\n      rate: 7733414.717727579\n      ...\n    ok 5 benchmark finished\n    # hypot\n      ---\n      iterations: 1000000\n      elapsed: 0.12404053\n      rate: 8061881.064197323\n      ...\n    ok 6 benchmark finished\n    #\n    1..6\n    # total 6\n    # pass  6\n    #\n    # ok\n    ```\n\n-   For each failing assertion, the harness outputs diagnostic information as [YAML][yaml] blocks.\n\n    ```text\n    TODO\n    ```\n\n-   Timing results are output as [YAML][yaml] blocks. The fields are as follows:\n\n    -   **iterations**: number of iterations.\n    -   **elapsed**: total elapsed time beginning with `b.tic()` and ending with `b.toc()` (in seconds).\n    -   **rate**: number of operations per second.\n\n</section>\n\n<!-- /.notes -->\n\n<!-- Package usage examples. -->\n\n* * *\n\n<section class=\"examples\">\n\n## Examples\n\n<!-- eslint-disable no-restricted-syntax, stdlib/no-builtin-math -->\n\n<!-- eslint no-undef: \"error\" -->\n\n```javascript\nvar randu = require( '@stdlib/random-base-randu' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar sin = require( '@stdlib/math-base-special-sin' );\nvar bench = require( '@stdlib/bench-harness' );\n\nvar opts = {\n    'iterations': 1e6,\n    'repeats': 3\n};\n\nbench( 'Math.sin', opts, function benchmark( b ) {\n    var x;\n    var y;\n    var i;\n\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        x = (randu()*100.0) - 50.0;\n        y = Math.sin( x );\n        if ( y < -1.0 || y > 1.0 ) {\n            b.fail( 'something went wrong!' );\n        }\n    }\n    b.toc();\n\n    if ( isnan( y ) ) {\n        b.fail( 'something went wrong!' );\n    }\n    b.pass( 'benchmark finished' );\n    b.end();\n});\n\nbench( 'sin', opts, function benchmark( b ) {\n    var x;\n    var y;\n    var i;\n\n    b.tic();\n    for ( i = 0; i < b.iterations; i++ ) {\n        x = (randu()*100.0) - 50.0;\n        y = sin( x );\n        if ( y < -1.0 || y > 1.0 ) {\n            b.fail( 'something went wrong!' );\n        }\n    }\n    b.toc();\n\n    if ( isnan( y ) ) {\n        b.fail( 'something went wrong!' );\n    }\n    b.pass( 'benchmark finished' );\n    b.end();\n});\n```\n\n</section>\n\n<!-- /.examples -->\n\n<!-- Section for describing a command-line interface. -->\n\n\n\n<!-- Section to include cited references. If references are included, add a horizontal rule *before* the section. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n* * *\n\n<section class=\"references\">\n\n## References\n\n-   Chen, Jiahao, and Jarrett Revels. 2016. \"Robust benchmarking in noisy environments.\" _CoRR_ abs/1608.04295 (August). <http://arxiv.org/abs/1608.04295>.\n\n</section>\n\n<!-- /.references -->\n\n<!-- Section for related `stdlib` packages. Do not manually edit this section, as it is automatically populated. -->\n\n<section class=\"related\">\n\n## See Also\n\n-   <span class=\"package-name\">[`@stdlib/bench-harness-cli`][@stdlib/bench-harness-cli]</span><span class=\"delimiter\">: </span><span class=\"description\">CLI package for use as a command-line utility.</span>\n\n\n</section>\n\n<!-- /.related -->\n\n<!-- Section for all links. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n\n<section class=\"main-repo\" >\n\n* * *\n\n## Notice\n\nThis package is part of [stdlib][stdlib], a standard library for JavaScript and Node.js, with an emphasis on numerical and scientific computing. The library provides a collection of robust, high performance libraries for mathematics, statistics, streams, utilities, and more.\n\nFor more information on the project, filing bug reports and feature requests, and guidance on how to develop [stdlib][stdlib], see the main project [repository][stdlib].\n\n#### Community\n\n[![Chat][chat-image]][chat-url]\n\n---\n\n## License\n\nSee [LICENSE][stdlib-license].\n\n\n## Copyright\n\nCopyright &copy; 2016-2024. The Stdlib [Authors][stdlib-authors].\n\n</section>\n\n<!-- /.stdlib -->\n\n<!-- Section for all links. Make sure to keep an empty line after the `section` element and another before the `/section` close. -->\n\n<section class=\"links\">\n\n[@stdlib/bench-harness-cli]: https://www.npmjs.com/package/@stdlib/bench-harness-cli\n\n[npm-image]: http://img.shields.io/npm/v/@stdlib/bench-harness.svg\n[npm-url]: https://npmjs.org/package/@stdlib/bench-harness\n\n[test-image]: https://github.com/stdlib-js/bench-harness/actions/workflows/test.yml/badge.svg?branch=v0.2.1\n[test-url]: https://github.com/stdlib-js/bench-harness/actions/workflows/test.yml?query=branch:v0.2.1\n\n[coverage-image]: https://img.shields.io/codecov/c/github/stdlib-js/bench-harness/main.svg\n[coverage-url]: https://codecov.io/github/stdlib-js/bench-harness?branch=main\n\n<!--\n\n[dependencies-image]: https://img.shields.io/david/stdlib-js/bench-harness.svg\n[dependencies-url]: https://david-dm.org/stdlib-js/bench-harness/main\n\n-->\n\n[chat-image]: https://img.shields.io/gitter/room/stdlib-js/stdlib.svg\n[chat-url]: https://app.gitter.im/#/room/#stdlib-js_stdlib:gitter.im\n\n[stdlib]: https://github.com/stdlib-js/stdlib\n\n[stdlib-authors]: https://github.com/stdlib-js/stdlib/graphs/contributors\n\n[cli-section]: https://github.com/stdlib-js/bench-harness#cli\n[cli-url]: https://github.com/stdlib-js/bench-harness/tree/cli\n[@stdlib/bench-harness]: https://github.com/stdlib-js/bench-harness/tree/main\n\n[umd]: https://github.com/umdjs/umd\n[es-module]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\n\n[deno-url]: https://github.com/stdlib-js/bench-harness/tree/deno\n[deno-readme]: https://github.com/stdlib-js/bench-harness/blob/deno/README.md\n[umd-url]: https://github.com/stdlib-js/bench-harness/tree/umd\n[umd-readme]: https://github.com/stdlib-js/bench-harness/blob/umd/README.md\n[esm-url]: https://github.com/stdlib-js/bench-harness/tree/esm\n[esm-readme]: https://github.com/stdlib-js/bench-harness/blob/esm/README.md\n[branches-url]: https://github.com/stdlib-js/bench-harness/blob/main/branches.md\n\n[stdlib-license]: https://raw.githubusercontent.com/stdlib-js/bench-harness/main/LICENSE\n\n[tap]: https://testanything.org/tap-version-13-specification.html\n\n[yaml]: https://yaml.org/\n\n[nodejs-stream]: https://nodejs.org/api/stream.html\n\n[nodejs-writable-stream]: https://nodejs.org/api/stream.html#stream_writable_streams\n\n[@stdlib/streams/node/transform]: https://www.npmjs.com/package/@stdlib/streams-node-transform\n\n</section>\n\n<!-- /.links -->\n",
  "readmeFilename": "README.md"
}