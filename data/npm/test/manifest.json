{
  "_id": "test",
  "_rev": "109-92f7c566e689b92e9c7383cb23dbcf02",
  "name": "test",
  "description": "Node.js 18's node:test, as an npm package",
  "dist-tags": {
    "latest": "3.3.0"
  },
  "versions": {
    "0.0.2": {
      "name": "test",
      "version": "0.0.2",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "web": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "./test/node-test.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://github.com/isaacs/npm/raw/master/LICENSE"
        }
      ],
      "_id": "test@0.0.2",
      "_nodeSupported": true,
      "_npmVersion": "0.2.7-2",
      "_nodeVersion": "v0.3.1-pre",
      "dist": {
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.2.tgz",
        "shasum": "67d0610319d4308a39d1b25b0a074e709c4dc0be",
        "integrity": "sha512-1UqUlZ4CRMuYPUuMGTLlUUGDwAJlIeG3w3nzvODHuVAYyXCCE3tURXlUs/yo+L6hDnWowfq8EBLRRuxOfpjc0Q==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDrMX8cMvslhroHLhp8Bv5zmBflMoDMV2ucARMZtVnShAIgLUWOkfsoBIkXQMYyG9cMqNMESc6vPI3Nm8imo5FqeDI="
          }
        ]
      }
    },
    "0.0.3": {
      "name": "test",
      "version": "0.0.3",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "web": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "./test/node-test.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://github.com/isaacs/npm/raw/master/LICENSE"
        }
      ],
      "_id": "test@0.0.3",
      "_nodeSupported": true,
      "_npmVersion": "0.2.7-2",
      "_nodeVersion": "v0.3.1-pre",
      "dist": {
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.3.tgz",
        "shasum": "87bd204807f9972cd9096202a40cd7eed4ead5e0",
        "integrity": "sha512-KLB74zHPd2YX/T76U5bHAwMg8wsVBOQJjnXfPtP4XLnYAIuUVQJidi52uJlv9fvTNq9Alp31JS3WzOPPihdqFA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGmyVavuZCI2iI5ueJf24rQ0r2sNyh+Q/db/EtvhOqFCAiEAhX86ESZQJhx0v5lG9Lb9JMVGm+3ZWJaSrYK7OTgOprU="
          }
        ]
      }
    },
    "0.0.4": {
      "name": "test",
      "version": "0.0.4",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "web": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "./test/node-test.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://github.com/isaacs/npm/raw/master/LICENSE"
        }
      ],
      "_id": "test@0.0.4",
      "_nodeSupported": true,
      "_npmVersion": "0.2.7-2",
      "_nodeVersion": "v0.3.1-pre",
      "dist": {
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.4.tgz",
        "shasum": "dc6536fe47a9437a0f3c586c0b3c05659ed5be9a",
        "integrity": "sha512-Bv6/RuU2Jmx7XAilx7hDFt1EOmIDMIihJ3k6uqeBE1XXBM6jKhpmsc52HdysgJMGFmItoeRrabFPWQdq5VnTRg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFwoKUh0xTaafK0fm1cjQx+3oEE1znVFp3xW8RsBHl5jAiEAzeoa3WFDx3qorqivOtR545sDpM4HkpV7HpzqVNIBtlA="
          }
        ]
      }
    },
    "0.0.5": {
      "name": "test",
      "version": "0.0.5",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "web": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "node active/package/test/all.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://github.com/isaacs/npm/raw/master/LICENSE"
        }
      ],
      "_id": "test@0.0.5",
      "_nodeSupported": true,
      "_npmVersion": "0.2.7-2",
      "_nodeVersion": "v0.3.1-pre",
      "dist": {
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.5.tgz",
        "shasum": "0565c62de9042d404c7af948884ca44e277a8f4c",
        "integrity": "sha512-CQ1bGjO0/W4khw9hI0ED0TIazlkkHX4mL1WPshdUJOWp9Iwvfb2VMbfiRnma6khmVFejpebEEc8lNbWho9J9Pw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCuT50pF9HOJU1Qz5M4lW1LBoYwJ1VkDbNTV3SWKKhlDAIhALXOR7wueu5u0Pi1UmNUdSLdtoOsJ1QrbUmYwjE3BbS1"
          }
        ]
      }
    },
    "0.0.6": {
      "name": "test",
      "version": "0.0.6",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "web": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "node test/all.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://github.com/isaacs/npm/raw/master/LICENSE"
        }
      ],
      "_id": "test@0.0.6",
      "_nodeSupported": true,
      "_npmVersion": "0.2.7-2",
      "_nodeVersion": "v0.3.1-pre",
      "dist": {
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.6.tgz",
        "shasum": "f74c095e789568e9c8a004602d695d85cf8f2334",
        "integrity": "sha512-PDTqGK7vTdMrUG5rWCbX8XKpFCAMEvTy8aLKJGmxjVG4WZlcxq0LY5pFEQzKNkrQ+pNFysHl4akUNHCGDhBP4A==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDb67Isp6rwdQD+AgPq0fTZpAOYYzcxnsEJxeGSqWde8QIhALWLfMBvTvxI/iCfsbvyEib8JSio/GNFEvqR+PJJVofX"
          }
        ]
      }
    },
    "0.0.7": {
      "name": "test",
      "version": "0.0.7",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "web": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "node test/all.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://github.com/isaacs/npm/raw/master/LICENSE"
        }
      ],
      "_id": "test@0.0.7",
      "_nodeSupported": true,
      "_npmVersion": "0.2.7-2",
      "_nodeVersion": "v0.3.1-pre",
      "dist": {
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.7.tgz",
        "shasum": "f3cfff3500fded2f060d200b9a89a46b481431a7",
        "integrity": "sha512-R6wD3KRcWtG5B6s+4b0YjivpSTre/vrys5G5YAL29dtFcMFzJCtswxJciUX6ZhpG1lMcG/XPwcXUfjdTg7HI9w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHFnevd0ERI9I6L2gKwKHuKu4KdZ9vjiQ01M1+KacMyOAiEA9yKeuZj6Zr8hkpfpz1PStpIdlhG1q6L31yIZMGDIcKA="
          }
        ]
      }
    },
    "0.0.8": {
      "name": "test",
      "version": "0.0.8",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "web": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "node test/all.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://github.com/isaacs/npm/raw/master/LICENSE"
        }
      ],
      "_id": "test@0.0.8",
      "_nodeSupported": true,
      "_npmVersion": "0.2.7-2",
      "_nodeVersion": "v0.3.1-pre",
      "dist": {
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.8.tgz",
        "shasum": "adb9f455c621cd5ee5bae10dcb88a241468e1abc",
        "integrity": "sha512-gJ6NSrgPpy7iWcV6aoJt/sm2xWXF/bFUHvCVZTRcX1AhBy8z9X2exQ+ikHtVfe2D6ufvGGHsQ/RbZgtxQOskVA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICYeU6AswiC7MHbj45LTbXEDZH2PvYIcQ+IloA8wsQr2AiEAxfaLLU90UjJJIbmxtmB+YcVBCliv5xz58iGB9EiTdXQ="
          }
        ]
      }
    },
    "0.0.9": {
      "name": "test",
      "version": "0.0.9",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "web": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "node test/all.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MPL 1.1/LGPL 2.1/GPL 2.0",
          "url": "http://www.mozilla.org/MPL/"
        }
      ],
      "_id": "test@0.0.9",
      "_nodeSupported": true,
      "_npmVersion": "0.2.7-2",
      "_nodeVersion": "v0.3.1-pre",
      "dist": {
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.9.tgz",
        "shasum": "22b42989fb3baff527f375dda838d381b8a074f1",
        "integrity": "sha512-UANkWwEw6i9qgd8kc4fhtQuSQpzE/ph+jLPMSIG/cL9i5YBUdtPV0ouRuMm/9ArtlzN2m8di3ToWYTU4JxOUeg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGg7QXS/75aHWYpMqrRWaNcxTuGormbMVeBTE1K+hTHJAiEArt3OEgrDE530hxRvWshDnDuTsUatv+E46LkUIy/DON4="
          }
        ]
      }
    },
    "0.0.10": {
      "name": "test",
      "version": "0.0.10",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "web": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "node test/all.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MPL 1.1/LGPL 2.1/GPL 2.0",
          "url": "http://www.mozilla.org/MPL/"
        }
      ],
      "_id": "test@0.0.10",
      "_nodeSupported": true,
      "_npmVersion": "0.2.7-3",
      "_nodeVersion": "v0.3.0",
      "dist": {
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.10.tgz",
        "shasum": "f795f3b53c1ccc7ab32dbbd08d70175403e327f6",
        "integrity": "sha512-dVb82s7svha7KvYo31KDswWw2sRbos1eoJ4bebMX5ItrDMdCRqT/c2SH0mzGwIaX6n9CEDo8CAmlD4eCd8l1OA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDAWCT+ELzOLT3/eSqPs8ca2E6jvZUkVMAbrE43aq0HqQIgcEwu6TROy4zyIWUXVOKoDXKpK47NLa1jDTtcGGLCY0I="
          }
        ]
      }
    },
    "0.0.11": {
      "name": "test",
      "version": "0.0.11",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "scripts": {
        "test": "node test/all.js"
      },
      "main": "./lib/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MPL 1.1/LGPL 2.1/GPL 2.0",
          "url": "http://www.mozilla.org/MPL/"
        }
      ],
      "_id": "test@0.0.11",
      "_engineSupported": true,
      "_npmVersion": "0.2.18",
      "_nodeVersion": "v0.3.5",
      "files": [
        ""
      ],
      "_defaultsLoaded": true,
      "man": [],
      "dist": {
        "shasum": "0892941c6a08452cf2db639604f4e31e4a7a4c5e",
        "tarball": "https://registry.npmjs.org/test/-/test-0.0.11.tgz",
        "integrity": "sha512-cppwYGCN2o/RhHdEmdyAN16d2bglPowniSlXEmvwS1ElWZ0/X/TtgYp68EJd79X6dg6z5jNjXGrWeJyE7Mb4bw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG+tsRw2MMXFQ2N15b9+CucN9qcABYZFp+l09Ytj3x/eAiEAqVMvk0Wx7Mz9HHIQ21kGU5OkvAZnOJXQKNqr5RwmCKM="
          }
        ]
      }
    },
    "0.1.0": {
      "name": "test",
      "version": "0.1.0",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "overlay": {
        "node": {
          "directories": {
            "lib": "./engines/node"
          }
        }
      },
      "scripts": {
        "test": "node test/all.js"
      },
      "main": "./engines/common/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MPL 1.1/LGPL 2.1/GPL 2.0",
          "url": "http://www.mozilla.org/MPL/"
        }
      ],
      "_id": "test@0.1.0",
      "_engineSupported": true,
      "_npmVersion": "0.3.7",
      "_nodeVersion": "v0.4.1",
      "files": [
        ""
      ],
      "_defaultsLoaded": true,
      "man": [],
      "dist": {
        "shasum": "176b4f94188a4e8ea33950d9f2958b95bea7478f",
        "tarball": "https://registry.npmjs.org/test/-/test-0.1.0.tgz",
        "integrity": "sha512-wvo8fi8DNMZ0swD88Z/L52+FDFxv+wxNVbmJRgtXx68MsTYRMmzTvSJIBAUAt662nEasZ4S3R9D5rsWOUlGW9w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD36y0B7UhShgfDSf7BkttJJPZcv3tbAnCkSZGfTUXgHwIgV5Aj8qJbFmjfizJdiH+4Dt+cAmPhRn8NeO6BIOhm3iE="
          }
        ]
      }
    },
    "0.1.1": {
      "name": "test",
      "version": "0.1.1",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "homepage": "http://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "directories": {
        "doc": "./doc",
        "man": "./man",
        "lib": "./lib",
        "test": "./test"
      },
      "overlay": {
        "node": {
          "directories": {
            "lib": "./engines/node"
          }
        }
      },
      "scripts": {
        "test": "node test/all.js"
      },
      "main": "./engines/common/test",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MPL 1.1/LGPL 2.1/GPL 2.0",
          "url": "http://www.mozilla.org/MPL/"
        }
      ],
      "_id": "test@0.1.1",
      "_engineSupported": true,
      "_npmVersion": "0.3.15",
      "_nodeVersion": "v0.4.2",
      "files": [
        ""
      ],
      "_defaultsLoaded": true,
      "man": [],
      "dist": {
        "shasum": "02fde1d15a0e23b74c274146b066318424b4f033",
        "tarball": "https://registry.npmjs.org/test/-/test-0.1.1.tgz",
        "integrity": "sha512-eJy/5pzlnIzhRuUS2fZV92kdSPpiiBOu/ojI9978f1rtzecJt1/AAt9oNTCZAvdaS93ujvShO6xtdqMsTUYFkA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCxIH4QgWCrYrVQx0E3/O99G5qrQgMXvy8qRDZjnyFTNQIhAKZEwhprYd0Yfk0ziYF7CIrfOaz7hboRUEaPK6mmgKDp"
          }
        ]
      }
    },
    "0.2.0": {
      "name": "test",
      "version": "0.2.0",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "keywords": [
        "test",
        "commonjs",
        "unit test"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "node tests/all.js"
      },
      "main": "./test.js",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://jeditoolkit.com/LICENSE"
        }
      ],
      "_id": "test@0.2.0",
      "dependencies": {},
      "devDependencies": {},
      "_engineSupported": true,
      "_npmVersion": "1.0.8",
      "_nodeVersion": "v0.4.8",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "9e082995859d8e9c7716db9b306bc7d5e15f028e",
        "tarball": "https://registry.npmjs.org/test/-/test-0.2.0.tgz",
        "integrity": "sha512-3fG+B3Dx/Gd2bly1IMgXWFGxE5ioiY6a9jYiCIvURNcDhrSJtKecPNp22BjLRDFFVy2H2/673CbvXJegb6GFXg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDAZ2eEIBXqGr4hfMHjdI1emyadgbbxtjHSFfkQy/ReigIhAJ6SXC0MJLrlcgLiINIzCStApglAys/hhehqxj3wEukt"
          }
        ]
      },
      "directories": {}
    },
    "0.2.1": {
      "name": "test",
      "version": "0.2.1",
      "description": "CommonJS test runner for Unit Testing/1.1",
      "keywords": [
        "test",
        "commonjs",
        "unit test"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "node tests/all.js"
      },
      "main": "./test.js",
      "engines": {
        "node": ">=0.1.103"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://jeditoolkit.com/LICENSE"
        }
      ],
      "_id": "test@0.2.1",
      "dependencies": {},
      "devDependencies": {},
      "_engineSupported": true,
      "_npmVersion": "1.0.8",
      "_nodeVersion": "v0.4.8",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "88aa14b8b8820a3b639597565b507b6de471cddd",
        "tarball": "https://registry.npmjs.org/test/-/test-0.2.1.tgz",
        "integrity": "sha512-dcZnz3MTJCHYsEJeRbHfPTDGptRum2DeX8BrN4GZ5T55pB+K5VymMJbYjl/4mPpsICWRH0MnO34gQ2c1jgJnLw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDPx1BYttFNiDeobuVgXZ4+HdDmz6uBI63EjC3poVyYEwIhAPmzzyDBmlS2fz7/8Z6uO96gfj/TG4nvX3TuRcNUwyEB"
          }
        ]
      },
      "directories": {}
    },
    "0.3.0": {
      "name": "test",
      "version": "0.3.0",
      "description": "UncommonJS test runner.",
      "keywords": [
        "test",
        "commonjs",
        "unit test"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "node tests/all.js"
      },
      "main": "./test.js",
      "engines": {
        "node": ">=0.4.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://jeditoolkit.com/LICENSE"
        }
      ],
      "_npmJsonOpts": {
        "file": "/Users/gozala/.npm/test/0.3.0/package/package.json",
        "wscript": false,
        "contributors": false,
        "serverjs": false
      },
      "_id": "test@0.3.0",
      "dependencies": {},
      "devDependencies": {},
      "_engineSupported": true,
      "_npmVersion": "1.0.15",
      "_nodeVersion": "v0.4.9",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "b7ca6e5891090ad3c7475bd325b1fff4d56e5aa2",
        "tarball": "https://registry.npmjs.org/test/-/test-0.3.0.tgz",
        "integrity": "sha512-rNxK7ongc+Fk++ywcobL0ndxDEckGjecJePepv/LA9Ymk62GqvgXLFY6AHwwxb53kFVJFRgyZ+bwZVV2oCWznw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBvaVpWY3eNNVPAi3UU77B9jLDaXSke5pIm/OvdDisDqAiEAhHANgVkup6xTb4FiaGIx37h3+roBvIukuxJTsyZ0mGw="
          }
        ]
      },
      "directories": {}
    },
    "0.4.0": {
      "name": "test",
      "version": "0.4.0",
      "description": "UncommonJS test runner.",
      "keywords": [
        "test",
        "commonjs",
        "unit test"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "node tests/engines/node/test.js",
        "test-browser": "open tests/engines/browser/index.html"
      },
      "main": "./engines/node/test.js",
      "engines": {
        "node": ">=0.4.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://jeditoolkit.com/LICENSE"
        }
      ],
      "_npmJsonOpts": {
        "file": "/Users/gozala/.npm/test/0.4.0/package/package.json",
        "wscript": false,
        "contributors": false,
        "serverjs": false
      },
      "_id": "test@0.4.0",
      "dependencies": {},
      "devDependencies": {},
      "_engineSupported": true,
      "_npmVersion": "1.0.15",
      "_nodeVersion": "v0.4.9",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "85e8db29291ad2e66d39a03013b9bb4a1fd8a135",
        "tarball": "https://registry.npmjs.org/test/-/test-0.4.0.tgz",
        "integrity": "sha512-WI1+fV2ItWHylcVuuEna18jGbMrhJSDoTcweUx3ARAHe+7DYLneGUxpAW5ow/vy6HCqkWzLBx/pTu9/7uDRdeg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEdB7H/nlUhZqPxvvUNUKblla/KImIVjsmcaSqIvPvkvAiASLVnAyEt+8n1DDxsKoB1x2j4AD11wlq2kdHWu9y/k2A=="
          }
        ]
      },
      "directories": {}
    },
    "0.4.1": {
      "name": "test",
      "version": "0.4.1",
      "description": "UncommonJS test runner.",
      "keywords": [
        "test",
        "commonjs",
        "unit test"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "node tests/engines/node/test.js",
        "test-browser": "open tests/engines/browser/index.html"
      },
      "main": "./engines/node/test.js",
      "engines": {
        "node": ">=0.4.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://jeditoolkit.com/LICENSE"
        }
      ],
      "_npmJsonOpts": {
        "file": "/Users/gozala/.npm/test/0.4.1/package/package.json",
        "wscript": false,
        "contributors": false,
        "serverjs": false
      },
      "_id": "test@0.4.1",
      "dependencies": {},
      "devDependencies": {},
      "_engineSupported": true,
      "_npmVersion": "1.0.15",
      "_nodeVersion": "v0.4.9",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "fba3c3c736bd78229f462b525c41a32aa7c9ccad",
        "tarball": "https://registry.npmjs.org/test/-/test-0.4.1.tgz",
        "integrity": "sha512-JEkx2NxsTZRaIjuUb68IxyoBBo1JqFUz6E73+68QShYKKuqhbLljR9XghEtI+c10DXDdyrG7/1W4dvhUmTbt1A==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB7CyyPO9JzzqL0GOsEbQNKsbIDfValqgD2lUEn0zD79AiEAoZsVrdW6V6ElD0jsknlX3ugfdOeiaNjIIlMXUPOSghU="
          }
        ]
      },
      "directories": {}
    },
    "0.4.2": {
      "name": "test",
      "version": "0.4.2",
      "description": "UncommonJS test runner.",
      "keywords": [
        "test",
        "commonjs",
        "unit test"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "node tests/engines/node/test.js",
        "test-browser": "open tests/engines/browser/index.html"
      },
      "main": "./engines/node/test.js",
      "engines": {
        "node": ">=0.4.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://jeditoolkit.com/LICENSE"
        }
      ],
      "_npmUser": {
        "name": "gozala",
        "email": "rfobic@gmail.com"
      },
      "_id": "test@0.4.2",
      "dependencies": {},
      "devDependencies": {},
      "_engineSupported": true,
      "_npmVersion": "1.0.101",
      "_nodeVersion": "v0.5.9",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "e4f55eb18071f2a2a3c793111a484ccb33a4cb5d",
        "tarball": "https://registry.npmjs.org/test/-/test-0.4.2.tgz",
        "integrity": "sha512-SmYSWBBSEkeKhXRSu3kyEQdjIfRvGCtXR8sO9osejofKjYo/kcOMkQ90gdMd28QUqcwSaFhBtkTbg5m6K36n9Q==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCccKbVnhrqRDvd9/tq7DQ9G5bKmj+OOY3S9OZH3eSWJwIhAKAnqcLyQ3xiPGrcKmpGK8XXWznHvX5WrCy4bvqxaPsx"
          }
        ]
      },
      "maintainers": [
        {
          "name": "gozala",
          "email": "rfobic@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.4.3": {
      "name": "test",
      "version": "0.4.3",
      "description": "UncommonJS test runner.",
      "keywords": [
        "test",
        "commonjs",
        "unit test"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "node tests/engines/node/test.js",
        "test-browser": "open tests/engines/browser/index.html"
      },
      "main": "./engines/node/test.js",
      "engines": {
        "node": ">=0.4.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://jeditoolkit.com/LICENSE"
        }
      ],
      "_npmUser": {
        "name": "gozala",
        "email": "rfobic@gmail.com"
      },
      "_id": "test@0.4.3",
      "dependencies": {},
      "devDependencies": {},
      "_engineSupported": true,
      "_npmVersion": "1.0.101",
      "_nodeVersion": "v0.5.9",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "bf02e38bdeea000169e3f039726e6868827ce22b",
        "tarball": "https://registry.npmjs.org/test/-/test-0.4.3.tgz",
        "integrity": "sha512-Q462HVB+Cv1yDtwgPo9SuWTgnanjaOn+hJBYQ8z80c2YFRqyTzD/wMEGBABQ4JRvUqHzO8Xsuq7Q7qyfit+LFg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD2sxwnJ0NvJwTq1k5i74+2+NNqizV7+C1RY5igvdRZlwIgbqyOagJ7eLP3tPOYEuSW3CsDHKa3FB8IrDq6P1H0g14="
          }
        ]
      },
      "maintainers": [
        {
          "name": "gozala",
          "email": "rfobic@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.4.4": {
      "name": "test",
      "version": "0.4.4",
      "description": "UncommonJS test runner.",
      "keywords": [
        "test",
        "commonjs",
        "unit test"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "git://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "node tests/engines/node/test.js",
        "test-browser": "open tests/engines/browser/index.html"
      },
      "main": "./engines/node/test.js",
      "engines": {
        "node": ">=0.4.x"
      },
      "licenses": [
        {
          "type": "MIT",
          "url": "http://jeditoolkit.com/LICENSE"
        }
      ],
      "_npmUser": {
        "name": "gozala",
        "email": "rfobic@gmail.com"
      },
      "_id": "test@0.4.4",
      "dependencies": {},
      "devDependencies": {},
      "_engineSupported": true,
      "_npmVersion": "1.0.101",
      "_nodeVersion": "v0.5.9",
      "_defaultsLoaded": true,
      "dist": {
        "shasum": "758fc3237571ab7b6ba6ac1befde10f19b9eda47",
        "tarball": "https://registry.npmjs.org/test/-/test-0.4.4.tgz",
        "integrity": "sha512-VFINPWUPxRYJFOSp33jxXiyamD5eLiivjIx/url0YQ08KN87ZZE9WKmGQQb85zsVZVT6lLKradsZgyYnKjTwGQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHpGkzwsqs593Em+T9q5KXF/8on7GWOqW03GKAT/Hi+LAiADLyZ8ZdaJeFdxVg1HihHyP6JtBlEWA9Yo0sj29/3X5Q=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "gozala",
          "email": "rfobic@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.5.1": {
      "name": "test",
      "version": "0.5.1",
      "description": "(Un)CommonJS test runner.",
      "keywords": [
        "test",
        "commonjs",
        "uncommonjs",
        "unit"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "node ./test/index.js"
      },
      "main": "./test.js",
      "licenses": [
        {
          "type": "MIT",
          "url": "https://github.com/Gozala/test-commonjs/License.md"
        }
      ],
      "dependencies": {
        "ansi-font": "0.0.2"
      },
      "_id": "test@0.5.1",
      "dist": {
        "shasum": "78c640982bc15d9f41a19d5baf4a3af1285282f0",
        "tarball": "https://registry.npmjs.org/test/-/test-0.5.1.tgz",
        "integrity": "sha512-u+5SS2S/hLXvKMEXya8M/Q99TRKCDJe3eCUaWdh3NS2+/iej6OVccK55xWVb37v7UQOPm0C/f7tW5tmBeSP+pQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCg0NnudsPrRv1ChafoO97D06BZUatLZKcw3T1AIk+icAIhAPx/NI9XnmvstJ+Ru6MUiPZFMCaNBR8H06Dwp+sHAuvJ"
          }
        ]
      },
      "_npmVersion": "1.1.64",
      "_npmUser": {
        "name": "gozala",
        "email": "rfobic@gmail.com"
      },
      "maintainers": [
        {
          "name": "gozala",
          "email": "rfobic@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.5.2": {
      "name": "test",
      "version": "0.5.2",
      "description": "(Un)CommonJS test runner.",
      "keywords": [
        "test",
        "commonjs",
        "uncommonjs",
        "unit"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "npm run test-node && npm run test-browser",
        "test-browser": "node ./node_modules/phantomify/bin/cmd.js ./test/index.js",
        "test-node": "node ./test/index.js"
      },
      "main": "./test.js",
      "licenses": [
        {
          "type": "MIT",
          "url": "https://github.com/Gozala/test-commonjs/License.md"
        }
      ],
      "dependencies": {
        "ansi-font": "0.0.2"
      },
      "devDependencies": {
        "phantomify": "~0.x.0"
      },
      "_id": "test@0.5.2",
      "dist": {
        "shasum": "0d726831a7d9852d25e46e6b8265fea216cbd8ad",
        "tarball": "https://registry.npmjs.org/test/-/test-0.5.2.tgz",
        "integrity": "sha512-iPWgTOENs3SCORqpr/yc2vHM8cOUEeOdMPa+AkTt1zHDzdKvmGXZ8WTVQUBIGuDWBd4SPz5NSY0xEVWal3AyOg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFaGal8Gsflt4f5qdFHjyTEjeT8SND3gyFcbIAMmzw+7AiAXV6iAV58ua82FRTb5XDaPotrcCXk1+1ucsVCd2cUQ0w=="
          }
        ]
      },
      "_npmVersion": "1.1.64",
      "_npmUser": {
        "name": "gozala",
        "email": "rfobic@gmail.com"
      },
      "maintainers": [
        {
          "name": "gozala",
          "email": "rfobic@gmail.com"
        }
      ],
      "directories": {}
    },
    "0.6.0": {
      "name": "test",
      "version": "0.6.0",
      "description": "(Un)CommonJS test runner.",
      "keywords": [
        "test",
        "commonjs",
        "uncommonjs",
        "unit"
      ],
      "homepage": "https://github.com/Gozala/test-commonjs/",
      "author": {
        "name": "Irakli Gozalishvili",
        "email": "rfobic@gmail.com",
        "url": "http://jeditoolkit.com"
      },
      "contributors": [
        {
          "name": "Irakli Gozalishvili",
          "email": "rfobic@gmail.com",
          "url": "http://jeditoolkit.com"
        },
        {
          "name": "Kris Kowal",
          "email": "kris@cixar.com",
          "url": "http://github.com/kriskowal/"
        },
        {
          "name": "Zach Carter"
        },
        {
          "name": "Felix Geisendörfer"
        },
        {
          "name": "Karl Guertin"
        },
        {
          "name": "Ash Berlin"
        },
        {
          "name": "Francois Lafortune"
        }
      ],
      "repository": {
        "type": "git",
        "url": "https://github.com/Gozala/test-commonjs.git",
        "web": "https//github.com/Gozala/test-commonjs"
      },
      "bugs": {
        "url": "http://github.com/Gozala/test-commonjs/issues/"
      },
      "scripts": {
        "test": "npm run test-node && npm run test-browser",
        "test-browser": "node ./node_modules/phantomify/bin/cmd.js ./test/index.js",
        "test-node": "node ./test/index.js"
      },
      "main": "./test.js",
      "licenses": [
        {
          "type": "MIT",
          "url": "https://github.com/Gozala/test-commonjs/License.md"
        }
      ],
      "dependencies": {
        "ansi-font": "0.0.2"
      },
      "devDependencies": {
        "phantomify": "~0.x.0"
      },
      "_id": "test@0.6.0",
      "dist": {
        "shasum": "5986ac445ec17754322512d104ba32c8a63e938e",
        "tarball": "https://registry.npmjs.org/test/-/test-0.6.0.tgz",
        "integrity": "sha512-dfbzeAI09tjJM0TCxxzLzPnHAO8gXHN6KaZ6N9zBde2YOFXunHO69tetz/ai93XRsOOkEm8q4IE3MJB/RlszxA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD6kgGRY78HriZ+XqDB8uAerEC1uap4WPxr0Ksyb0yuRQIgdfjs4/bYe+AuEBxd3ersseNZpON4JFs/xt//75zmKfA="
          }
        ]
      },
      "_npmVersion": "1.1.65",
      "_npmUser": {
        "name": "gozala",
        "email": "rfobic@gmail.com"
      },
      "maintainers": [
        {
          "name": "gozala",
          "email": "rfobic@gmail.com"
        }
      ],
      "directories": {}
    },
    "3.0.0": {
      "name": "test",
      "version": "3.0.0",
      "description": "Node.js 18's node:test, as an npm package",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/nodejs/node-core-test.git"
      },
      "main": "./index.js",
      "types": "./index.d.ts",
      "bin": {
        "node--test": "bin/node--test.js",
        "node--test-only": "bin/node--test-only.js",
        "test": "bin/node-core-test.js"
      },
      "imports": {
        "#internal/*": "./lib/internal/*.js",
        "#node:test": "./index.js"
      },
      "scripts": {
        "test": "npm run test:lint && npm run test:unit",
        "test:lint": "standard --fix",
        "test:unit": "node test/parallel/* && node test/message && node test/node-core-test.js"
      },
      "devDependencies": {
        "standard": "^17.0.0",
        "typescript": "^4.6.3"
      },
      "dependencies": {
        "minimist": "^1.2.6",
        "string.prototype.replaceall": "^1.0.6"
      },
      "gitHead": "d38d817850e34f10702a054fc96a255d20995cdf",
      "bugs": {
        "url": "https://github.com/nodejs/node-core-test/issues"
      },
      "homepage": "https://github.com/nodejs/node-core-test#readme",
      "_id": "test@3.0.0",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "8.5.5",
      "dist": {
        "integrity": "sha512-MmKSHRj6K5aVu8Kn8HctQIxwZqjeo9M2AzirnzJv4f0JeagyFoSN4T2EGFALota4Vw2lrvcvt83TkR8INMNHaQ==",
        "shasum": "fdfa090c3e0b77a2283e2e6c0d69c585fd826ee3",
        "tarball": "https://registry.npmjs.org/test/-/test-3.0.0.tgz",
        "fileCount": 55,
        "unpackedSize": 91350,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDOz1FMG4H9oLGKAcKQwJGWYyVTV6HMPO9TQ/FcIvlQoAIgMIAuBcZFP6+baxHIkkceVVfb7UDW6cT/nTjM0IJXqZA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJimMAkACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmozaQ/+LN9iU/QmZZDH+BziWzBdZrorPe6obrU2ZLELfTRwQ5n0dqPu\r\nbmZwIbH424UfiV4p/OrWE1rZ1GsToctC+4iNf1DA/OQJSo+n3x28zTyc1mzV\r\nJ1F4zuU2zeZRju99zYfe8YBeS1hd9738SY/kMBfD+kiX06VM4Fg6D1qmXqpC\r\nmNxHqDgjxN51btiZu5GKG0//gt/x2lWn7kCGS4yZPCsb6DpF7dlT6zZsPaEO\r\neb8S7XqHp/HE3aRAKv8T9KE4hgSbdhMDW/FWVi2n3XfRD//4SZ30H/PEsPym\r\nqNRh4P/Tjwg65Usdo2UsflADUBJY7UvtmoXVx6W/mY4RCbjTMZGQcJD3X6YU\r\nlZaHgASPHzYAxvpGZxu50FFa1xFioTmDED+XTfRM4kIYPdiJDUYRwzlbCt3W\r\ngS4IWK9OR6f1SB08l7pICydnmccXLLjXsOxl6mwDmAhlBFKGPKxG4AYMK9CX\r\nttlyNG8IN3lsbh6AyHPzIuNmLeO22lXl/uYsR2tWlylbugHqXgIFbWBcawZj\r\nmdZNS2mIRwYZhiF19CymTD+dG8I04UvHsLFEmQZKpCjqNGVVIWniPjRHzNZV\r\nWLyVQlkzPTHLDs4bYVT3bfAZ/1hXm7Jft5viK2d513ulA8MwgLnmaXBS3RYV\r\n2wQNq+tWc8qH/00tLUYbkjb0ZSy/7m0n98g=\r\n=hdrl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nodejs-foundation",
        "email": "build@iojs.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "gozala",
          "email": "dev@gozala.io"
        },
        {
          "name": "nodejs-foundation",
          "email": "build@iojs.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/test_3.0.0_1654177828647_0.5436818575711242"
      },
      "_hasShrinkwrap": false
    },
    "3.0.1": {
      "name": "test",
      "version": "3.0.1",
      "description": "Node.js 18's node:test, as an npm package",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/nodejs/node-core-test.git"
      },
      "main": "./index.js",
      "types": "./index.d.ts",
      "bin": {
        "node--test": "bin/node--test.js",
        "node--test-only": "bin/node--test-only.js",
        "test": "bin/node-core-test.js"
      },
      "imports": {
        "#internal/*": "./lib/internal/*.js",
        "#node:test": "./index.js"
      },
      "scripts": {
        "test": "npm run test:lint && npm run test:unit",
        "test:lint": "standard",
        "test:lint:fix": "standard --fix",
        "test:unit": "node test/parallel/* && node test/message && node test/node-core-test.js"
      },
      "devDependencies": {
        "standard": "^17.0.0"
      },
      "dependencies": {
        "minimist": "^1.2.6",
        "string.prototype.replaceall": "^1.0.6"
      },
      "gitHead": "1c19129c26aba0973289e60c1d0f0888dc42c685",
      "bugs": {
        "url": "https://github.com/nodejs/node-core-test/issues"
      },
      "homepage": "https://github.com/nodejs/node-core-test#readme",
      "_id": "test@3.0.1",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-4wOJGleojd+hwR9a/l02damXIf6ED4ZPJ1MYFKgBUfIDC4fCMZLErtWT4CpuyEsI5AOaxX6vlATPR4qetUxf/A==",
        "shasum": "d5cfbec291f48d427ea9fe809aef072fc7f25be7",
        "tarball": "https://registry.npmjs.org/test/-/test-3.0.1.tgz",
        "fileCount": 55,
        "unpackedSize": 91348,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC7V7b3ej3QgwJP1Nkbc/VPMV+JcXkv+ln41ueTIY/+4wIhAJpn/PYX5fwEPHL0rG6VeFWxrXJ6aGwPkWBpQKY7qQ6X"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqZu1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpahQ/+LJRRgj22nm2Jwo0JnCT03ff3Me4+U5a5GeMMRJWJAqT3xKiR\r\nS2OB4VZPKmKbnupE5Sqm0Pl1WEFeUATW1MsFlaCGTNxlGjTe5Cmwor5grESm\r\nhqbQS4QOGX61fFjSad7v/LgqXuwpcQFKVDGRueJJKH3Toxfj76qsgeAGiIF0\r\nVqMXsgZXxbJpISzRT/ezAEN6PdZV6IT2fZGEG+GqyagQFnP8K/2n+WPUfuOp\r\nKSgZ7RByLnG305hA5C9RVrBAC6YuwbAtLEkfcrFiriWJeKIe1r+SOuy0NrdV\r\n1FJCuB0h6T7YcpoH9B1jYeRjgZZqoBelEVfNn88HrYBl73r4tbV3JCdwreXo\r\n3PjWkfufKTjYjsfHkBTbZnkgpLMDOvWwn8rhPrjsMQcTRb9Nzz3fZHogpR+9\r\nWd2I/As8B7jKTOvCsHGCoGX8zGvarf5ZxhA7ZfV4YEnbPMDeQ9qtSjvkIRzm\r\n2iLI2Uw94+YUxa5iNl0yBJpEoHf7ULZ/AjoORO3lWgUINcosTLaZ3DUQ0ucC\r\nZaSIO8lMRIx1Y45pSLxQhpRjjkMRb9NiiHs6x5ZwsyMlG5VE7PC0YvZf2utR\r\nW7MEiZNsYYuUDnSn1LZqDRF2VIomDUSgXEMHRaHgTWSgTQ7LhoSQnbTdyJMT\r\nDmR8mvOWBd8ChGMFp6A6TRers3uajujEuzQ=\r\n=CCAB\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nodejs-foundation",
        "email": "build@iojs.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nodejs-foundation",
          "email": "build@iojs.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/test_3.0.1_1655282613594_0.7002552981717798"
      },
      "_hasShrinkwrap": false
    },
    "3.1.0": {
      "name": "test",
      "version": "3.1.0",
      "description": "Node.js 18's node:test, as an npm package",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/nodejs/node-core-test.git"
      },
      "main": "./lib/test.js",
      "types": "./lib/test.d.ts",
      "bin": {
        "node--test": "bin/node--test.js",
        "node--test-only": "bin/node--test-only.js",
        "test": "bin/node-core-test.js"
      },
      "imports": {
        "#internal/*": "./lib/internal/*.js",
        "#timers/*": "./lib/timers/*.js",
        "#node:test": "./lib/test.js"
      },
      "scripts": {
        "test": "npm run test:lint && npm run test:unit",
        "test:lint": "standard",
        "test:lint:fix": "standard --fix",
        "test:unit": "node test/parallel/* && node test/message && node test/node-core-test.js"
      },
      "devDependencies": {
        "standard": "^17.0.0"
      },
      "dependencies": {
        "minimist": "^1.2.6",
        "string.prototype.replaceall": "^1.0.6"
      },
      "gitHead": "e155daee8222069cb5ac81901af8a7bbdf36409d",
      "bugs": {
        "url": "https://github.com/nodejs/node-core-test/issues"
      },
      "homepage": "https://github.com/nodejs/node-core-test#readme",
      "_id": "test@3.1.0",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-3lO5M33Y4JoWYNzhJeKBSaZCcyFf2LJS5EsRwI5J//keVINQAWBybLZXoXZNHm8fFe2kcASb2EfjEodDY4kqRg==",
        "shasum": "3605b6204561a0e49d85a8ed6192ed6b270df81e",
        "tarball": "https://registry.npmjs.org/test/-/test-3.1.0.tgz",
        "fileCount": 62,
        "unpackedSize": 148085,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICvngmvw229R4jxzPhkFfJR8XTSDHOka/6lBVDMWfB77AiBfMi16d98MiX9kFYifxm/J9KQJXT7GvCWUAugmUoIQYQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2EiGACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo6eA//b9yiI8zggvHIChSPbFwkIe4/UmFsRu80zyiRYVFGF8g0iczf\r\nrzyJWQ07VsNnTWA+FBX4tjY9yQPAkAHg/pjmFyLqvbpK54zgiZNqWujs1T1P\r\nxbPDXBNfw3xjP7qhvOKdqr5V/fBFKIBW9SEw2rN+IQl18w5scCRPMaueVLHB\r\nmv740KfWunx0YTEzoqM/3Lyp3Lf7Qdfs8mUtgawhTkxzt2iF7lQ3b+zlNLu0\r\n6BHefXwWFCpMyNk2spX41ha2Zz8u+n8eA8JXjGaqfxsUWtVtVgcCFjOvh1jq\r\nWRNo0jBrkT59h2yaPIsxWX5MkLqxA51NU2gn39f2Z0yY0WjKzwYUXFIPmgBO\r\nMKrF1I3Y2oiiDM3xktJXZIqc4NZ1n/ukQfZXvYk7BKvzLpm1/7wJkClrIWaD\r\nWbnXSSzicscgRNm5kIq9/LfyxZRKo4bwwP4pQcK1/sKSWDoR7/QuCruAZhfb\r\n4R0AKfhzT2vOD4nFMQZyjDdSPtyz4NtXV8/7t5qaR/7mFIu+pKHoSFmAetKF\r\ntiK+AKmSxeS+9Uv4zH0OEDI5aHl30Q6MdVrzkIih2m7IKeumss5mPoX+Gq3/\r\no6WQwOgq4XRXlWyIyPbmg0elKBGAZiC5W7VXIkj0x+vkNVaapeq/SHsVWq0X\r\n2founPcn5faCh6zLpH2pcRQpzxzbVS4wG7E=\r\n=BUcQ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nodejs-foundation",
        "email": "build@iojs.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nodejs-foundation",
          "email": "build@iojs.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/test_3.1.0_1658341510636_0.4282050766395624"
      },
      "_hasShrinkwrap": false
    },
    "3.2.0": {
      "name": "test",
      "version": "3.2.0",
      "description": "Node.js 18's node:test, as an npm package",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/nodejs/node-core-test.git"
      },
      "main": "./lib/test.js",
      "types": "./lib/test.d.ts",
      "bin": {
        "node--test": "bin/node--test.js",
        "node--test-only": "bin/node--test-only.js",
        "test": "bin/node-core-test.js"
      },
      "imports": {
        "#internal/*": "./lib/internal/*.js",
        "#timers/*": "./lib/timers/*.js",
        "#node:test": "./lib/test.js"
      },
      "scripts": {
        "test": "npm run test:lint && npm run test:unit",
        "test:lint": "standard",
        "test:lint:fix": "standard --fix",
        "test:unit": "node test/parallel.mjs && node test/message.js && node test/node-core-test.js"
      },
      "devDependencies": {
        "standard": "^17.0.0"
      },
      "dependencies": {
        "minimist": "^1.2.6",
        "string.prototype.replaceall": "^1.0.6"
      },
      "gitHead": "f9c40b595e06d420a4e76320d8bd2c14b48b14d4",
      "bugs": {
        "url": "https://github.com/nodejs/node-core-test/issues"
      },
      "homepage": "https://github.com/nodejs/node-core-test#readme",
      "_id": "test@3.2.0",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-c09Wx2+QkX4aHsGV/LCJGIEnQWZhdXixDtFmHvcVLZbItVZJIEOuFv0Vv+GdKPsMkuZ8DeAuGhx6gT+xBN8E3g==",
        "shasum": "f375dcc183d28a483cfe7bd05561236f59dd0d74",
        "tarball": "https://registry.npmjs.org/test/-/test-3.2.0.tgz",
        "fileCount": 77,
        "unpackedSize": 193517,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEb9RCEAtLWtu3s5lhfLPt8yx3wwrPY10xvTaz1ZaA1pAiAtZugOKLQPjwcY+OtOMvd9OU9VjPYT1aGUH4tnnzS1BA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi55KoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoMGw//RpoDokTKfIVltNEWAsckpmwKADJGJyaclTOyJkVTgzZ0TxnG\r\naZtX/jvGUGVBeYYIUwGo7MGpr2tQNSfBo3ASGBA8tR915WdNzaKZJD80cuxn\r\nX7JcKWBdBoup0gGL/8c9iS0gP6MOA0PsgK9oPvBgxlZGwKfx0GCkU66Hvcf8\r\nzlxENKIXPYOkpP1o+1GhuzLTQWX1Sl2Gvf6TK+QhGLisaZehl9CdffcjkOn6\r\nY8TzmXd0rtt1zSKJO3jrP0wyxUsfOWC1nl1H/9bAP2OhvjRx6UAAJjwSVGCr\r\nDzEy81PBRthN89hEq+Q33Ao4wjk/531f+78r53UNfa+8rDH9RpP/XrVJeRRL\r\nBqfjZdHWHsYbaRoo9eM5Y2jp/vpgtMQz7x8WFPVcZJ9gxzi+K3IqDawCIWHR\r\nhZ857Ke0FHqQL3QisSCU28TQzQxvvORCScKxDmuW427ntajvZ7l+72wa9Y2a\r\nvSxBt/OseBN8dWJXuEmhnTxaobjwtMT9/BrHvtwGYpnRrviNu4crXaUvOlv8\r\nexx7RZXhT5oDCtQ0Omkq3m/8WRS+iEFgtHp/MlxiApSwgW1BruGVd1tpYFST\r\n4ThvjLL39Su3vQ/IulsZiTmgurtoJzEF/yTWCS/OCwOElfJIUy0LNrILf3ZD\r\njqP5/JL9AbOlh/lZVEAbTZwacFZseK+qmms=\r\n=Jd23\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nodejs-foundation",
        "email": "build@iojs.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nodejs-foundation",
          "email": "build@iojs.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/test_3.2.0_1659343527742_0.28823595872924535"
      },
      "_hasShrinkwrap": false
    },
    "3.2.1": {
      "name": "test",
      "version": "3.2.1",
      "description": "Node.js 18's node:test, as an npm package",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/nodejs/node-core-test.git"
      },
      "main": "./lib/test.js",
      "types": "./lib/test.d.ts",
      "bin": {
        "node--test": "bin/node--test.js",
        "node--test-only": "bin/node--test-only.js",
        "test": "bin/node-core-test.js"
      },
      "imports": {
        "#internal/*": "./lib/internal/*.js",
        "#timers/*": "./lib/timers/*.js",
        "#node:test": "./lib/test.js"
      },
      "scripts": {
        "test": "npm run test:lint && npm run test:unit",
        "test:lint": "standard",
        "test:lint:fix": "standard --fix",
        "test:unit": "node test/parallel.mjs && node test/message.js && node test/node-core-test.js"
      },
      "devDependencies": {
        "standard": "^17.0.0"
      },
      "dependencies": {
        "minimist": "^1.2.6",
        "string.prototype.replaceall": "^1.0.6"
      },
      "gitHead": "3604d09ff5a59ef98e7b0b57ec71b4522ca9a9fc",
      "bugs": {
        "url": "https://github.com/nodejs/node-core-test/issues"
      },
      "homepage": "https://github.com/nodejs/node-core-test#readme",
      "_id": "test@3.2.1",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-D9eN4OxdhyYS3xHSsAh5A0e+UhaOPxeREwBHTknZHoVFd4TqnPtkVrQ7lIUATPgpO9vvGg1D+TyMckVmUyaEig==",
        "shasum": "8876adae35e86c4bccbcfdf5b018493b1c9501be",
        "tarball": "https://registry.npmjs.org/test/-/test-3.2.1.tgz",
        "fileCount": 77,
        "unpackedSize": 195362,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHHfc/IOtLiEwcOwjFnyuSJH/khPIeESi6PjrWW6iQy1AiEA0K594arhSIzxDI1N7OSGTPNAol7nUVOrJFXhOvm83e4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6ltlACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr9WQ/6Aw3Po99xPvksXxafbA1OOwifPieMEts5pS1U5mXR0efdShEi\r\nWc5BNMOjAHyXRnJhZoSVUzXAbFSKO3fWV8SOaTteo0lP9ATc2mCCef4C3Gi+\r\nvcHDKigf5Paz87IplMentaQPLMYZksrBz0rPwbidfJOGlmCMPZ7Ntv1UuKO4\r\nR2IUeI+z3ePcmxQVvw7eacIy1sHXAWGGAEZDS1MLNB9/ji4SAEn/9w7E+753\r\ncQXdOzx3O/1CkYWuxIO2E44V91VCAtNwYGVIr5lVHgfUON5mt586PDz8RSjr\r\nkVnoOLa8mCbU7l+hUH1oH+G2UvxKUt6kUBoyZFytZjNR9K9/uJbZGzP3l/eX\r\nPudbfLFB8Laq2t79RTVEb5HyNZonOzKozzy8w06Jg+UoqR20gy5Vp7s5GBH0\r\nXq1aHMZTY8ILoavqi8YTmmrAv/Ab1taQbWRasxbzloKET387iLFW+1aE01CR\r\nyEuLYD4IJ93yzEzSyJLsaKT/JWEQ4Zp+E1fCQgDz+jZtWN1/nRv8GpKQ+PeA\r\nVabqYs3UvgwroKJP9HBXrGEsKKHuOCK6I+okJsahfui64HBUhOzXOB2SAw/y\r\nTeddPh/H53U2/nwMbL7nHdGbp+e2Wmw1khWrf+r9Hhyx0ov7n27QHi5ElNcF\r\nnuGVAf4EWBmeWlRFeGpW60FghV2rPqKaC1E=\r\n=s93+\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nodejs-foundation",
        "email": "build@iojs.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nodejs-foundation",
          "email": "build@iojs.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/test_3.2.1_1659525989534_0.6166188200653895"
      },
      "_hasShrinkwrap": false
    },
    "3.3.0": {
      "name": "test",
      "version": "3.3.0",
      "description": "Node.js 18's node:test, as an npm package",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/nodejs/node-core-test.git"
      },
      "main": "./lib/test.js",
      "types": "./lib/test.d.ts",
      "bin": {
        "node--test": "bin/node--test.js",
        "node--test-only": "bin/node--test-only.js",
        "node--test-name-pattern": "bin/node--test-name-pattern.js",
        "test": "bin/node-core-test.js"
      },
      "imports": {
        "#internal/*": "./lib/internal/*.js",
        "#timers/*": "./lib/timers/*.js",
        "#node:test": "./lib/test.js"
      },
      "scripts": {
        "test": "npm run test:lint && npm run test:unit",
        "test:lint": "standard",
        "test:lint:fix": "standard --fix",
        "test:unit": "node test/parallel.mjs && node test/message.js && node test/node-core-test.js"
      },
      "devDependencies": {
        "standard": "^17.0.0"
      },
      "dependencies": {
        "minimist": "^1.2.6",
        "readable-stream": "^4.3.0",
        "string.prototype.replaceall": "^1.0.6"
      },
      "gitHead": "414743a74ef26ba383ae6c4d87e5b806bf7dc831",
      "bugs": {
        "url": "https://github.com/nodejs/node-core-test/issues"
      },
      "homepage": "https://github.com/nodejs/node-core-test#readme",
      "_id": "test@3.3.0",
      "_nodeVersion": "18.13.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-JKlEohxDIJRjwBH/+BrTcAPHljBALrAHw3Zs99RqZlaC605f6BggqXhxkdqZThbSHgaYPwpNJlf9bTSWkb/1rA==",
        "shasum": "a2b56c6aa386c5732065793e8d9d92074a9cdd41",
        "tarball": "https://registry.npmjs.org/test/-/test-3.3.0.tgz",
        "fileCount": 115,
        "unpackedSize": 443334,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCaf8Z1yDUlMikQh1RouG51OXMazNEX37VqLkVDoP7ChQIhAK19hRazs6GgWzyNVoaprpHD47L1tgZegJjSYJRG4Ued"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj44P+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoRvQ/+PXMHsV6QmbMAYjfLzXNnorD1zUoJa4cLc4iVaQOGQZPjuC7/\r\nBVGYIBfWcAGGA9aFeuYym+9CqSqJBCO8MwAk/eb+SKhHEIhQMJrXhto0oDEz\r\nHLkIlW0HU6acq4qlnRJ0wRZ029L+Yw1ozlPGt33knrg45tGza4RNbtRidbYz\r\nrnpS99eHgfyE9lWCMlufYLUA1Nhxfc1p99zdMwxXstfD5MJD6FGzI00hF8Ln\r\nIyXd7d453hB0KY11BqhDdUdpS/g1n3m2YXoaLz6xksSTex+v7mjrU+QY1uZG\r\newvje3OSKUtrl5Y3L1F9enCgItriAtaFzmjasJe2UPBzm93Db5lnEkMk8nXN\r\n2RMd/XL+ZZdNuJ9BFu2KMWyOBkr6i/YyY1/7Fj5KPv+HL5bSakOpU8dht2jK\r\nBkasiRNItddzbfsDCa0x1tfXLpCwThiIJP/Hl5n5qmclEDf/igAb1Z6ylhlI\r\nNQSsMeSXwoDPD1JN1HScPak4hbEHuVf4D5Rr6YmkfwdxQ9QQGWNvwVAGbmjF\r\nuz725UHMjQi8qmJ3ZxDjHJHYt023TxQ0Coasx6Axlbo7pV6hN9rVGWMDxRAp\r\nwVSgwit8QCr1EssX4KObO68OGhPQao9ix3MxOJPf7LkXUiDq1Cb/86XflcCC\r\nagMTQalLeaLrWiflW/iHYPmQppcEJFwdWIA=\r\n=wxmL\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "nodejs-foundation",
        "email": "build@iojs.org"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "nodejs-foundation",
          "email": "build@iojs.org"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/test_3.3.0_1675854846455_0.8014841319357373"
      },
      "_hasShrinkwrap": false
    }
  },
  "maintainers": [
    {
      "name": "nodejs-foundation",
      "email": "build@iojs.org"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nodejs/node-core-test.git"
  },
  "time": {
    "modified": "2024-02-20T10:05:22.662Z",
    "created": "2011-02-16T22:31:02.088Z",
    "0.0.2": "2011-02-16T22:31:02.088Z",
    "0.0.3": "2011-02-16T22:31:02.088Z",
    "0.0.4": "2011-02-16T22:31:02.088Z",
    "0.0.5": "2011-02-16T22:31:02.088Z",
    "0.0.6": "2011-02-16T22:31:02.088Z",
    "0.0.7": "2011-02-16T22:31:02.088Z",
    "0.0.8": "2011-02-16T22:31:02.088Z",
    "0.0.9": "2011-02-16T22:31:02.088Z",
    "0.0.10": "2011-02-16T22:31:02.088Z",
    "0.0.11": "2011-02-16T22:31:02.088Z",
    "0.1.0": "2011-02-24T13:39:28.664Z",
    "0.1.1": "2011-04-02T01:10:09.545Z",
    "0.2.0": "2011-06-07T12:39:12.436Z",
    "0.2.1": "2011-06-09T23:57:53.383Z",
    "0.3.0": "2011-07-10T12:28:33.904Z",
    "0.4.0": "2011-07-10T14:55:35.087Z",
    "0.4.1": "2011-07-17T22:30:22.185Z",
    "0.4.2": "2011-11-14T23:01:53.471Z",
    "0.4.3": "2011-11-14T23:06:18.478Z",
    "0.4.4": "2012-01-20T09:51:42.755Z",
    "0.5.0": "2012-11-01T01:58:31.420Z",
    "0.5.1": "2012-11-01T05:27:52.320Z",
    "0.5.2": "2012-11-01T07:05:34.818Z",
    "0.6.0": "2012-11-24T09:13:06.534Z",
    "3.0.0": "2022-06-02T13:50:28.862Z",
    "3.0.1": "2022-06-15T08:43:33.797Z",
    "3.1.0": "2022-07-20T18:25:10.819Z",
    "3.2.0": "2022-08-01T08:45:27.997Z",
    "3.2.1": "2022-08-03T11:26:29.684Z",
    "3.3.0": "2023-02-08T11:14:06.655Z"
  },
  "users": {
    "fgribreau": true,
    "crazyjingling": true,
    "tobiasnickel": true,
    "nickeltobias": true,
    "brs999": true,
    "krytius": true,
    "lovasoa": true,
    "alexxnica": true,
    "bbohen": true,
    "cptechadmin": true,
    "mf-pherlihy": true,
    "yavarguliyev": true,
    "tecnomatrix": true,
    "mthompson001": true,
    "xear": true,
    "sneaked": true,
    "theblackpuppet": true,
    "faaabae": true,
    "nacho30": true,
    "beji7777": true
  },
  "readme": "# The `test` npm package\n\n[![CI](https://github.com/nodejs/node-core-test/actions/workflows/ci.yml/badge.svg)](https://github.com/nodejs/node-core-test/actions/workflows/ci.yml)\n\nThis is a user-land port of [`node:test`](https://nodejs.org/api/test.html),\nthe experimental test runner introduced in Node.js 18. This module makes it\navailable in Node.js 14 and later.\n\nMinimal dependencies, with full test suite.\n\nDifferences from the core implementation:\n\n- Doesn't hide its own stack frames.\n- Some features require the use of `--experimental-abortcontroller` CLI flag to\n  work on Node.js v14.x. It's recommended to pass\n  `NODE_OPTIONS='--experimental-abortcontroller --no-warnings'` in your env if\n  you are testing on v14.x.\n\n## Docs\n\n### Test runner\n\n> Stability: 1 - Experimental\n\n<!-- source_link=lib/test.js -->\n\nThe `node:test` module facilitates the creation of JavaScript tests.\nTo access it:\n\n```mjs\nimport test from 'test'\n```\n\n```cjs\nconst test = require('test')\n```\n\nTests created via the `test` module consist of a single function that is\nprocessed in one of three ways:\n\n1. A synchronous function that is considered failing if it throws an exception,\n   and is considered passing otherwise.\n2. A function that returns a `Promise` that is considered failing if the\n   `Promise` rejects, and is considered passing if the `Promise` resolves.\n3. A function that receives a callback function. If the callback receives any\n   truthy value as its first argument, the test is considered failing. If a\n   falsy value is passed as the first argument to the callback, the test is\n   considered passing. If the test function receives a callback function and\n   also returns a `Promise`, the test will fail.\n\nThe following example illustrates how tests are written using the\n`test` module.\n\n```js\ntest('synchronous passing test', t => {\n  // This test passes because it does not throw an exception.\n  assert.strictEqual(1, 1)\n})\n\ntest('synchronous failing test', t => {\n  // This test fails because it throws an exception.\n  assert.strictEqual(1, 2)\n})\n\ntest('asynchronous passing test', async t => {\n  // This test passes because the Promise returned by the async\n  // function is not rejected.\n  assert.strictEqual(1, 1)\n})\n\ntest('asynchronous failing test', async t => {\n  // This test fails because the Promise returned by the async\n  // function is rejected.\n  assert.strictEqual(1, 2)\n})\n\ntest('failing test using Promises', t => {\n  // Promises can be used directly as well.\n  return new Promise((resolve, reject) => {\n    setImmediate(() => {\n      reject(new Error('this will cause the test to fail'))\n    })\n  })\n})\n\ntest('callback passing test', (t, done) => {\n  // done() is the callback function. When the setImmediate() runs, it invokes\n  // done() with no arguments.\n  setImmediate(done)\n})\n\ntest('callback failing test', (t, done) => {\n  // When the setImmediate() runs, done() is invoked with an Error object and\n  // the test fails.\n  setImmediate(() => {\n    done(new Error('callback failure'))\n  })\n})\n```\n\nIf any tests fail, the process exit code is set to `1`.\n\n#### Subtests\n\nThe test context's `test()` method allows subtests to be created. This method\nbehaves identically to the top level `test()` function. The following example\ndemonstrates the creation of a top level test with two subtests.\n\n```js\ntest('top level test', async t => {\n  await t.test('subtest 1', t => {\n    assert.strictEqual(1, 1)\n  })\n\n  await t.test('subtest 2', t => {\n    assert.strictEqual(2, 2)\n  })\n})\n```\n\nIn this example, `await` is used to ensure that both subtests have completed.\nThis is necessary because parent tests do not wait for their subtests to\ncomplete. Any subtests that are still outstanding when their parent finishes\nare cancelled and treated as failures. Any subtest failures cause the parent\ntest to fail.\n\n## Skipping tests\n\nIndividual tests can be skipped by passing the `skip` option to the test, or by\ncalling the test context's `skip()` method as shown in the\nfollowing example.\n\n```js\n// The skip option is used, but no message is provided.\ntest('skip option', { skip: true }, t => {\n  // This code is never executed.\n})\n\n// The skip option is used, and a message is provided.\ntest('skip option with message', { skip: 'this is skipped' }, t => {\n  // This code is never executed.\n})\n\ntest('skip() method', t => {\n  // Make sure to return here as well if the test contains additional logic.\n  t.skip()\n})\n\ntest('skip() method with message', t => {\n  // Make sure to return here as well if the test contains additional logic.\n  t.skip('this is skipped')\n})\n```\n\n## `describe`/`it` syntax\n\nRunning tests can also be done using `describe` to declare a suite\nand `it` to declare a test.\nA suite is used to organize and group related tests together.\n`it` is an alias for `test`, except there is no test context passed,\nsince nesting is done using suites.\n\n```js\ndescribe('A thing', () => {\n  it('should work', () => {\n    assert.strictEqual(1, 1);\n  });\n\n  it('should be ok', () => {\n    assert.strictEqual(2, 2);\n  });\n\n  describe('a nested thing', () => {\n    it('should work', () => {\n      assert.strictEqual(3, 3);\n    });\n  });\n});\n```\n\n`describe` and `it` are imported from the `test` module.\n\n```mjs\nimport { describe, it } from 'test';\n```\n\n```cjs\nconst { describe, it } = require('test');\n```\n\n### `only` tests\n\nIf `node--test` is started with the `--test-only` command-line option, it is\npossible to skip all top level tests except for a selected subset by passing\nthe `only` option to the tests that should be run. When a test with the `only`\noption set is run, all subtests are also run. The test context's `runOnly()`\nmethod can be used to implement the same behavior at the subtest level.\n\n```js\n// Assume node--test is run with the --test-only command-line option.\n// The 'only' option is set, so this test is run.\ntest('this test is run', { only: true }, async t => {\n  // Within this test, all subtests are run by default.\n  await t.test('running subtest')\n\n  // The test context can be updated to run subtests with the 'only' option.\n  t.runOnly(true)\n  await t.test('this subtest is now skipped')\n  await t.test('this subtest is run', { only: true })\n\n  // Switch the context back to execute all tests.\n  t.runOnly(false)\n  await t.test('this subtest is now run')\n\n  // Explicitly do not run these tests.\n  await t.test('skipped subtest 3', { only: false })\n  await t.test('skipped subtest 4', { skip: true })\n})\n\n// The 'only' option is not set, so this test is skipped.\ntest('this test is not run', () => {\n  // This code is not run.\n  throw new Error('fail')\n})\n```\n\n## Filtering tests by name\n\nThe [`--test-name-pattern`][] command-line option can be used to only run tests\nwhose name matches the provided pattern. Test name patterns are interpreted as\nJavaScript regular expressions. The `--test-name-pattern` option can be\nspecified multiple times in order to run nested tests. For each test that is\nexecuted, any corresponding test hooks, such as `beforeEach()`, are also\nrun.\n\nGiven the following test file, starting Node.js with the\n`--test-name-pattern=\"test [1-3]\"` option would cause the test runner to execute\n`test 1`, `test 2`, and `test 3`. If `test 1` did not match the test name\npattern, then its subtests would not execute, despite matching the pattern. The\nsame set of tests could also be executed by passing `--test-name-pattern`\nmultiple times (e.g. `--test-name-pattern=\"test 1\"`,\n`--test-name-pattern=\"test 2\"`, etc.).\n\n```js\ntest('test 1', async (t) => {\n  await t.test('test 2');\n  await t.test('test 3');\n});\ntest('Test 4', async (t) => {\n  await t.test('Test 5');\n  await t.test('test 6');\n});\n```\n\nTest name patterns can also be specified using regular expression literals. This\nallows regular expression flags to be used. In the previous example, starting\nNode.js with `--test-name-pattern=\"/test [4-5]/i\"` would match `Test 4` and\n`Test 5` because the pattern is case-insensitive.\n\nTest name patterns do not change the set of files that the test runner executes.\n\n## Extraneous asynchronous activity\n\nOnce a test function finishes executing, the results are reported as quickly\nas possible while maintaining the order of the tests. However, it is possible\nfor the test function to generate asynchronous activity that outlives the test\nitself. The test runner handles this type of activity, but does not delay the\nreporting of test results in order to accommodate it.\n\nIn the following example, a test completes with two `setImmediate()`\noperations still outstanding. The first `setImmediate()` attempts to create a\nnew subtest. Because the parent test has already finished and output its\nresults, the new subtest is immediately marked as failed, and reported later\nto the {TestsStream}.\n\nThe second `setImmediate()` creates an `uncaughtException` event.\n`uncaughtException` and `unhandledRejection` events originating from a completed\ntest are marked as failed by the `test` module and reported as diagnostic\nwarnings at the top level by the {TestsStream}.\n\n```js\ntest('a test that creates asynchronous activity', t => {\n  setImmediate(() => {\n    t.test('subtest that is created too late', t => {\n      throw new Error('error1')\n    })\n  })\n\n  setImmediate(() => {\n    throw new Error('error2')\n  })\n\n  // The test finishes after this line.\n})\n```\n\n## Running tests from the command line\n\nThe Node.js test runner can be invoked from the command line:\n\n```bash\nnode--test\n```\n\nBy default, Node.js will recursively search the current directory for\nJavaScript source files matching a specific naming convention. Matching files\nare executed as test files. More information on the expected test file naming\nconvention and behavior can be found in the [test runner execution model][]\nsection.\n\nAlternatively, one or more paths can be provided as the final argument(s) to\nthe Node.js command, as shown below.\n\n```bash\nnode--test test1.js test2.mjs custom_test_dir/\nnode--test test1.js test2.mjs custom_test_dir/\n```\n\nIn this example, the test runner will execute the files `test1.js` and\n`test2.mjs`. The test runner will also recursively search the\n`custom_test_dir/` directory for test files to execute.\n\n### Test runner execution model\n\nWhen searching for test files to execute, the test runner behaves as follows:\n\n- Any files explicitly provided by the user are executed.\n- If the user did not explicitly specify any paths, the current working\n  directory is recursively searched for files as specified in the following\n  steps.\n- `node_modules` directories are skipped unless explicitly provided by the\n  user.\n- If a directory named `test` is encountered, the test runner will search it\n  recursively for all all `.js`, `.cjs`, and `.mjs` files. All of these files\n  are treated as test files, and do not need to match the specific naming\n  convention detailed below. This is to accommodate projects that place all of\n  their tests in a single `test` directory.\n- In all other directories, `.js`, `.cjs`, and `.mjs` files matching the\n  following patterns are treated as test files:\n  - `^test$` - Files whose basename is the string `'test'`. Examples:\n    `test.js`, `test.cjs`, `test.mjs`.\n  - `^test-.+` - Files whose basename starts with the string `'test-'`\n    followed by one or more characters. Examples: `test-example.js`,\n    `test-another-example.mjs`.\n  - `.+[\\.\\-\\_]test$` - Files whose basename ends with `.test`, `-test`, or\n    `_test`, preceded by one or more characters. Examples: `example.test.js`,\n    `example-test.cjs`, `example_test.mjs`.\n  - Other file types understood by Node.js such as `.node` and `.json` are not\n    automatically executed by the test runner, but are supported if explicitly\n    provided on the command line.\n\nEach matching test file is executed in a separate child process. If the child\nprocess finishes with an exit code of 0, the test is considered passing.\nOtherwise, the test is considered to be a failure. Test files must be\nexecutable by Node.js, but are not required to use the `node:test` module\ninternally.\n\n## Mocking\n\nThe `node:test` module supports mocking during testing via a top-level `mock`\nobject. The following example creates a spy on a function that adds two numbers\ntogether. The spy is then used to assert that the function was called as\nexpected.\n\n```mjs\nimport assert from 'node:assert';\nimport { mock, test } from 'test';\ntest('spies on a function', () => {\n  const sum = mock.fn((a, b) => {\n    return a + b;\n  });\n  assert.strictEqual(sum.mock.calls.length, 0);\n  assert.strictEqual(sum(3, 4), 7);\n  assert.strictEqual(sum.mock.calls.length, 1);\n  const call = sum.mock.calls[0];\n  assert.deepStrictEqual(call.arguments, [3, 4]);\n  assert.strictEqual(call.result, 7);\n  assert.strictEqual(call.error, undefined);\n  // Reset the globally tracked mocks.\n  mock.reset();\n});\n```\n\n```cjs\n'use strict';\nconst assert = require('node:assert');\nconst { mock, test } = require('test');\ntest('spies on a function', () => {\n  const sum = mock.fn((a, b) => {\n    return a + b;\n  });\n  assert.strictEqual(sum.mock.calls.length, 0);\n  assert.strictEqual(sum(3, 4), 7);\n  assert.strictEqual(sum.mock.calls.length, 1);\n  const call = sum.mock.calls[0];\n  assert.deepStrictEqual(call.arguments, [3, 4]);\n  assert.strictEqual(call.result, 7);\n  assert.strictEqual(call.error, undefined);\n  // Reset the globally tracked mocks.\n  mock.reset();\n});\n```\n\nThe same mocking functionality is also exposed on the [`TestContext`][] object\nof each test. The following example creates a spy on an object method using the\nAPI exposed on the `TestContext`. The benefit of mocking via the test context is\nthat the test runner will automatically restore all mocked functionality once\nthe test finishes.\n\n```js\ntest('spies on an object method', (t) => {\n  const number = {\n    value: 5,\n    add(a) {\n      return this.value + a;\n    },\n  };\n  t.mock.method(number, 'add');\n  assert.strictEqual(number.add.mock.calls.length, 0);\n  assert.strictEqual(number.add(3), 8);\n  assert.strictEqual(number.add.mock.calls.length, 1);\n  const call = number.add.mock.calls[0];\n  assert.deepStrictEqual(call.arguments, [3]);\n  assert.strictEqual(call.result, 8);\n  assert.strictEqual(call.target, undefined);\n  assert.strictEqual(call.this, number);\n});\n```\n\n\n## Test reporters\n\n<!-- YAML\nadded: REPLACEME\n-->\n\nThe `node:test` module supports passing [`--test-reporter`][]\nflags for the test runner to use a specific reporter.\n\nThe following built-reporters are supported:\n\n* `tap`\n  The `tap` reporter is the default reporter used by the test runner. It outputs\n  the test results in the [TAP][] format.\n\n* `spec`\n  The `spec` reporter outputs the test results in a human-readable format.\n\n* `dot`\n  The `dot` reporter outputs the test results in a compact format,\n  where each passing test is represented by a `.`,\n  and each failing test is represented by a `X`.\n\n### Custom reporters\n\n[`--test-reporter`][] can be used to specify a path to custom reporter.\na custom reporter is a module that exports a value\naccepted by [stream.compose][].\nReporters should transform events emitted by a {TestsStream}\n\nExample of a custom reporter using {stream.Transform}:\n\n```mjs\nimport { Transform } from 'node:stream';\nconst customReporter = new Transform({\n  writableObjectMode: true,\n  transform(event, encoding, callback) {\n    switch (event.type) {\n      case 'test:start':\n        callback(null, `test ${event.data.name} started`);\n        break;\n      case 'test:pass':\n        callback(null, `test ${event.data.name} passed`);\n        break;\n      case 'test:fail':\n        callback(null, `test ${event.data.name} failed`);\n        break;\n      case 'test:plan':\n        callback(null, 'test plan');\n        break;\n      case 'test:diagnostic':\n        callback(null, event.data.message);\n        break;\n    }\n  },\n});\nexport default customReporter;\n```\n\n```cjs\nconst { Transform } = require('node:stream');\nconst customReporter = new Transform({\n  writableObjectMode: true,\n  transform(event, encoding, callback) {\n    switch (event.type) {\n      case 'test:start':\n        callback(null, `test ${event.data.name} started`);\n        break;\n      case 'test:pass':\n        callback(null, `test ${event.data.name} passed`);\n        break;\n      case 'test:fail':\n        callback(null, `test ${event.data.name} failed`);\n        break;\n      case 'test:plan':\n        callback(null, 'test plan');\n        break;\n      case 'test:diagnostic':\n        callback(null, event.data.message);\n        break;\n    }\n  },\n});\nmodule.exports = customReporter;\n```\n\nExample of a custom reporter using a generator function:\n\n```mjs\nexport default async function * customReporter(source) {\n  for await (const event of source) {\n    switch (event.type) {\n      case 'test:start':\n        yield `test ${event.data.name} started\\n`;\n        break;\n      case 'test:pass':\n        yield `test ${event.data.name} passed\\n`;\n        break;\n      case 'test:fail':\n        yield `test ${event.data.name} failed\\n`;\n        break;\n      case 'test:plan':\n        yield 'test plan';\n        break;\n      case 'test:diagnostic':\n        yield `${event.data.message}\\n`;\n        break;\n    }\n  }\n}\n```\n\n```cjs\nmodule.exports = async function * customReporter(source) {\n  for await (const event of source) {\n    switch (event.type) {\n      case 'test:start':\n        yield `test ${event.data.name} started\\n`;\n        break;\n      case 'test:pass':\n        yield `test ${event.data.name} passed\\n`;\n        break;\n      case 'test:fail':\n        yield `test ${event.data.name} failed\\n`;\n        break;\n      case 'test:plan':\n        yield 'test plan\\n';\n        break;\n      case 'test:diagnostic':\n        yield `${event.data.message}\\n`;\n        break;\n    }\n  }\n};\n```\n\nThe value provided to `--test-reporter` should be a string like one used in an\n`import()` in JavaScript code, or a value provided for [`--import`][].\n\n### Multiple reporters\n\nThe [`--test-reporter`][] flag can be specified multiple times to report test\nresults in several formats. In this situation\nit is required to specify a destination for each reporter\nusing [`--test-reporter-destination`][].\nDestination can be `stdout`, `stderr`, or a file path.\nReporters and destinations are paired according\nto the order they were specified.\n\nIn the following example, the `spec` reporter will output to `stdout`,\nand the `dot` reporter will output to `file.txt`:\n\n```bash\nnode --test-reporter=spec --test-reporter=dot --test-reporter-destination=stdout --test-reporter-destination=file.txt\n```\n\nWhen a single reporter is specified, the destination will default to `stdout`,\nunless a destination is explicitly provided.\n\n## `run([options])`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\n* `options` {Object} Configuration options for running tests. The following\n  properties are supported:\n  * `concurrency` {number|boolean} If a number is provided,\n    then that many files would run in parallel.\n    If `true`, it would run `os.availableParallelism() - 1` test files in\n    parallel.\n    If `false`, it would only run one test file at a time.\n    **Default:** `false`.\n  * `files`: {Array} An array containing the list of files to run.\n    **Default** matching files from [test runner execution model][].\n  * `signal` {AbortSignal} Allows aborting an in-progress test execution.\n  * `timeout` {number} A number of milliseconds the test execution will\n    fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n  * `inspectPort` {number|Function} Sets inspector port of test child process.\n    This can be a number, or a function that takes no arguments and returns a\n    number. If a nullish value is provided, each process gets its own port,\n    incremented from the primary's `process.debugPort`.\n    **Default:** `undefined`.\n    \n* Returns: {TestsStream}\n\n```js\nrun({ files: [path.resolve('./tests/test.js')] })\n  .pipe(process.stdout);\n```\n\n## `test([name][, options][, fn])`\n\n- `name` {string} The name of the test, which is displayed when reporting test\n  results. **Default:** The `name` property of `fn`, or `'<anonymous>'` if `fn`\n  does not have a name.\n- `options` {Object} Configuration options for the test. The following\n  properties are supported:\n  - `concurrency` {number|boolean} If a number is provided,\n    then that many tests would run in parallel.\n    If `true`, it would run `os.availableParallelism() - 1` tests in parallel.\n    For subtests, it will be `Infinity` tests in parallel.\n    If `false`, it would only run one test at a time.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `false`.\n  - `only` {boolean} If truthy, and the test context is configured to run\n    `only` tests, then this test will be run. Otherwise, the test is skipped.\n    **Default:** `false`.\n  - `signal` {AbortSignal} Allows aborting an in-progress test.\n  - `skip` {boolean|string} If truthy, the test is skipped. If a string is\n    provided, that string is displayed in the test results as the reason for\n    skipping the test. **Default:** `false`.\n  - `todo` {boolean|string} If truthy, the test marked as `TODO`. If a string\n    is provided, that string is displayed in the test results as the reason why\n    the test is `TODO`. **Default:** `false`.\n  - `timeout` {number} A number of milliseconds the test will fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n- `fn` {Function|AsyncFunction} The function under test. The first argument\n  to this function is a [`TestContext`][] object. If the test uses callbacks,\n  the callback function is passed as the second argument. **Default:** A no-op\n  function.\n- Returns: {Promise} Resolved with `undefined` once the test completes.\n\nThe `test()` function is the value imported from the `test` module. Each\ninvocation of this function results in reporting the test to the {TestsStream}.\n\nThe `TestContext` object passed to the `fn` argument can be used to perform\nactions related to the current test. Examples include skipping the test, adding\nadditional diagnostic information, or creating subtests.\n\n`test()` returns a `Promise` that resolves once the test completes. The return\nvalue can usually be discarded for top level tests. However, the return value\nfrom subtests should be used to prevent the parent test from finishing first\nand cancelling the subtest as shown in the following example.\n\n```js\ntest('top level test', async t => {\n  // The setTimeout() in the following subtest would cause it to outlive its\n  // parent test if 'await' is removed on the next line. Once the parent test\n  // completes, it will cancel any outstanding subtests.\n  await t.test('longer running subtest', async t => {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, 1000)\n    })\n  })\n})\n```\n\nThe `timeout` option can be used to fail the test if it takes longer than\n`timeout` milliseconds to complete. However, it is not a reliable mechanism for\ncanceling tests because a running test might block the application thread and\nthus prevent the scheduled cancellation.\n\n## `describe([name][, options][, fn])`\n\n* `name` {string} The name of the suite, which is displayed when reporting test\n  results. **Default:** The `name` property of `fn`, or `'<anonymous>'` if `fn`\n  does not have a name.\n* `options` {Object} Configuration options for the suite.\n  supports the same options as `test([name][, options][, fn])`.\n* `fn` {Function|AsyncFunction} The function under suite\n  declaring all subtests and subsuites.\n  The first argument to this function is a [`SuiteContext`][] object.\n  **Default:** A no-op function.\n* Returns: `undefined`.\n\nThe `describe()` function imported from the `test` module. Each\ninvocation of this function results in the creation of a Subtest.\nAfter invocation of top level `describe` functions,\nall top level tests and suites will execute.\n\n## `describe.skip([name][, options][, fn])`\n\nShorthand for skipping a suite, same as [`describe([name], { skip: true }[, fn])`][describe options].\n\n## `describe.todo([name][, options][, fn])`\n\nShorthand for marking a suite as `TODO`, same as\n[`describe([name], { todo: true }[, fn])`][describe options].\n\n## `it([name][, options][, fn])`\n\n* `name` {string} The name of the test, which is displayed when reporting test\n  results. **Default:** The `name` property of `fn`, or `'<anonymous>'` if `fn`\n  does not have a name.\n* `options` {Object} Configuration options for the suite.\n  supports the same options as `test([name][, options][, fn])`.\n* `fn` {Function|AsyncFunction} The function under test.\n  If the test uses callbacks, the callback function is passed as an argument.\n  **Default:** A no-op function.\n* Returns: `undefined`.\n\nThe `it()` function is the value imported from the `test` module.\n\n## `it.skip([name][, options][, fn])`\n\nShorthand for skipping a test,\nsame as [`it([name], { skip: true }[, fn])`][it options].\n\n## `it.todo([name][, options][, fn])`\n\nShorthand for marking a test as `TODO`,\nsame as [`it([name], { todo: true }[, fn])`][it options].\n\n### `before([, fn][, options])`\n\n* `fn` {Function|AsyncFunction} The hook function.\n  If the hook uses callbacks,\n  the callback function is passed as the second argument. **Default:** A no-op\n  function.\n* `options` {Object} Configuration options for the hook. The following\n  properties are supported:\n  * `signal` {AbortSignal} Allows aborting an in-progress hook.\n  * `timeout` {number} A number of milliseconds the hook will fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n\nThis function is used to create a hook running before running a suite.\n\n```js\ndescribe('tests', async () => {\n  before(() => console.log('about to run some test'));\n  it('is a subtest', () => {\n    assert.ok('some relevant assertion here');\n  });\n});\n```\n\n### `after([, fn][, options])`\n\n* `fn` {Function|AsyncFunction} The hook function.\n  If the hook uses callbacks,\n  the callback function is passed as the second argument. **Default:** A no-op\n  function.\n* `options` {Object} Configuration options for the hook. The following\n  properties are supported:\n  * `signal` {AbortSignal} Allows aborting an in-progress hook.\n  * `timeout` {number} A number of milliseconds the hook will fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n\nThis function is used to create a hook running after  running a suite.\n\n```js\ndescribe('tests', async () => {\n  after(() => console.log('finished running tests'));\n  it('is a subtest', () => {\n    assert.ok('some relevant assertion here');\n  });\n});\n```\n\n### `beforeEach([, fn][, options])`\n\n* `fn` {Function|AsyncFunction} The hook function.\n  If the hook uses callbacks,\n  the callback function is passed as the second argument. **Default:** A no-op\n  function.\n* `options` {Object} Configuration options for the hook. The following\n  properties are supported:\n  * `signal` {AbortSignal} Allows aborting an in-progress hook.\n  * `timeout` {number} A number of milliseconds the hook will fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n\nThis function is used to create a hook running\nbefore each subtest of the current suite.\n\n```js\ndescribe('tests', async () => {\n  beforeEach(() => t.diagnostics('about to run a test'));\n  it('is a subtest', () => {\n    assert.ok('some relevant assertion here');\n  });\n});\n```\n\n### `afterEach([, fn][, options])`\n\n* `fn` {Function|AsyncFunction} The hook function.\n  If the hook uses callbacks,\n  the callback function is passed as the second argument. **Default:** A no-op\n  function.\n* `options` {Object} Configuration options for the hook. The following\n  properties are supported:\n  * `signal` {AbortSignal} Allows aborting an in-progress hook.\n  * `timeout` {number} A number of milliseconds the hook will fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n\nThis function is used to create a hook running\nafter each subtest of the current test.\n\n```js\ndescribe('tests', async () => {\n  afterEach(() => t.diagnostics('about to run a test'));\n  it('is a subtest', () => {\n    assert.ok('some relevant assertion here');\n  });\n});\n```\n\n## Class: `MockFunctionContext`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\nThe `MockFunctionContext` class is used to inspect or manipulate the behavior of\nmocks created via the [`MockTracker`][] APIs.\n\n### `ctx.calls`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\n* {Array}\n\nA getter that returns a copy of the internal array used to track calls to the\nmock. Each entry in the array is an object with the following properties.\n\n* `arguments` {Array} An array of the arguments passed to the mock function.\n* `error` {any} If the mocked function threw then this property contains the\n  thrown value. **Default:** `undefined`.\n* `result` {any} The value returned by the mocked function.\n* `stack` {Error} An `Error` object whose stack can be used to determine the\n  callsite of the mocked function invocation.\n* `target` {Function|undefined} If the mocked function is a constructor, this\n  field contains the class being constructed. Otherwise this will be\n  `undefined`.\n* `this` {any} The mocked function's `this` value.\n\n### `ctx.callCount()`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\n* Returns: {integer} The number of times that this mock has been invoked.\n\nThis function returns the number of times that this mock has been invoked. This\nfunction is more efficient than checking `ctx.calls.length` because `ctx.calls`\nis a getter that creates a copy of the internal call tracking array.\n\n### `ctx.mockImplementation(implementation)`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\n* `implementation` {Function|AsyncFunction} The function to be used as the\n  mock's new implementation.\n\nThis function is used to change the behavior of an existing mock.\n\nThe following example creates a mock function using `t.mock.fn()`, calls the\nmock function, and then changes the mock implementation to a different function.\n\n```js\ntest('changes a mock behavior', (t) => {\n  let cnt = 0;\n  function addOne() {\n    cnt++;\n    return cnt;\n  }\n  function addTwo() {\n    cnt += 2;\n    return cnt;\n  }\n  const fn = t.mock.fn(addOne);\n  assert.strictEqual(fn(), 1);\n  fn.mock.mockImplementation(addTwo);\n  assert.strictEqual(fn(), 3);\n  assert.strictEqual(fn(), 5);\n});\n```\n\n### `ctx.mockImplementationOnce(implementation[, onCall])`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\n* `implementation` {Function|AsyncFunction} The function to be used as the\n  mock's implementation for the invocation number specified by `onCall`.\n* `onCall` {integer} The invocation number that will use `implementation`. If\n  the specified invocation has already occurred then an exception is thrown.\n  **Default:** The number of the next invocation.\n\nThis function is used to change the behavior of an existing mock for a single\ninvocation. Once invocation `onCall` has occurred, the mock will revert to\nwhatever behavior it would have used had `mockImplementationOnce()` not been\ncalled.\n\nThe following example creates a mock function using `t.mock.fn()`, calls the\nmock function, changes the mock implementation to a different function for the\nnext invocation, and then resumes its previous behavior.\n\n```js\ntest('changes a mock behavior once', (t) => {\n  let cnt = 0;\n  function addOne() {\n    cnt++;\n    return cnt;\n  }\n  function addTwo() {\n    cnt += 2;\n    return cnt;\n  }\n  const fn = t.mock.fn(addOne);\n  assert.strictEqual(fn(), 1);\n  fn.mock.mockImplementationOnce(addTwo);\n  assert.strictEqual(fn(), 3);\n  assert.strictEqual(fn(), 4);\n});\n```\n\n### `ctx.restore()`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\nResets the implementation of the mock function to its original behavior. The\nmock can still be used after calling this function.\n\n## Class: `MockTracker`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\nThe `MockTracker` class is used to manage mocking functionality. The test runner\nmodule provides a top level `mock` export which is a `MockTracker` instance.\nEach test also provides its own `MockTracker` instance via the test context's\n`mock` property.\n\n### `mock.fn([original[, implementation]][, options])`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\n* `original` {Function|AsyncFunction} An optional function to create a mock on.\n  **Default:** A no-op function.\n* `implementation` {Function|AsyncFunction} An optional function used as the\n  mock implementation for `original`. This is useful for creating mocks that\n  exhibit one behavior for a specified number of calls and then restore the\n  behavior of `original`. **Default:** The function specified by `original`.\n* `options` {Object} Optional configuration options for the mock function. The\n  following properties are supported:\n  * `times` {integer} The number of times that the mock will use the behavior of\n    `implementation`. Once the mock function has been called `times` times, it\n    will automatically restore the behavior of `original`. This value must be an\n    integer greater than zero. **Default:** `Infinity`.\n* Returns: {Proxy} The mocked function. The mocked function contains a special\n  `mock` property, which is an instance of [`MockFunctionContext`][], and can\n  be used for inspecting and changing the behavior of the mocked function.\n\nThis function is used to create a mock function.\n\nThe following example creates a mock function that increments a counter by one\non each invocation. The `times` option is used to modify the mock behavior such\nthat the first two invocations add two to the counter instead of one.\n\n```js\ntest('mocks a counting function', (t) => {\n  let cnt = 0;\n  function addOne() {\n    cnt++;\n    return cnt;\n  }\n  function addTwo() {\n    cnt += 2;\n    return cnt;\n  }\n  const fn = t.mock.fn(addOne, addTwo, { times: 2 });\n  assert.strictEqual(fn(), 2);\n  assert.strictEqual(fn(), 4);\n  assert.strictEqual(fn(), 5);\n  assert.strictEqual(fn(), 6);\n});\n```\n\n### `mock.getter(object, methodName[, implementation][, options])`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\nThis function is syntax sugar for [`MockTracker.method`][] with `options.getter`\nset to `true`.\n\n### `mock.method(object, methodName[, implementation][, options])`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\n* `object` {Object} The object whose method is being mocked.\n* `methodName` {string|symbol} The identifier of the method on `object` to mock.\n  If `object[methodName]` is not a function, an error is thrown.\n* `implementation` {Function|AsyncFunction} An optional function used as the\n  mock implementation for `object[methodName]`. **Default:** The original method\n  specified by `object[methodName]`.\n* `options` {Object} Optional configuration options for the mock method. The\n  following properties are supported:\n  * `getter` {boolean} If `true`, `object[methodName]` is treated as a getter.\n    This option cannot be used with the `setter` option. **Default:** false.\n  * `setter` {boolean} If `true`, `object[methodName]` is treated as a setter.\n    This option cannot be used with the `getter` option. **Default:** false.\n  * `times` {integer} The number of times that the mock will use the behavior of\n    `implementation`. Once the mocked method has been called `times` times, it\n    will automatically restore the original behavior. This value must be an\n    integer greater than zero. **Default:** `Infinity`.\n* Returns: {Proxy} The mocked method. The mocked method contains a special\n  `mock` property, which is an instance of [`MockFunctionContext`][], and can\n  be used for inspecting and changing the behavior of the mocked method.\n\nThis function is used to create a mock on an existing object method. The\nfollowing example demonstrates how a mock is created on an existing object\nmethod.\n\n```js\ntest('spies on an object method', (t) => {\n  const number = {\n    value: 5,\n    subtract(a) {\n      return this.value - a;\n    },\n  };\n  t.mock.method(number, 'subtract');\n  assert.strictEqual(number.subtract.mock.calls.length, 0);\n  assert.strictEqual(number.subtract(3), 2);\n  assert.strictEqual(number.subtract.mock.calls.length, 1);\n  const call = number.subtract.mock.calls[0];\n  assert.deepStrictEqual(call.arguments, [3]);\n  assert.strictEqual(call.result, 2);\n  assert.strictEqual(call.error, undefined);\n  assert.strictEqual(call.target, undefined);\n  assert.strictEqual(call.this, number);\n});\n```\n\n### `mock.reset()`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\nThis function restores the default behavior of all mocks that were previously\ncreated by this `MockTracker` and disassociates the mocks from the\n`MockTracker` instance. Once disassociated, the mocks can still be used, but the\n`MockTracker` instance can no longer be used to reset their behavior or\notherwise interact with them.\n\nAfter each test completes, this function is called on the test context's\n`MockTracker`. If the global `MockTracker` is used extensively, calling this\nfunction manually is recommended.\n\n### `mock.restoreAll()`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\nThis function restores the default behavior of all mocks that were previously\ncreated by this `MockTracker`. Unlike `mock.reset()`, `mock.restoreAll()` does\nnot disassociate the mocks from the `MockTracker` instance.\n\n### `mock.setter(object, methodName[, implementation][, options])`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\nThis function is syntax sugar for [`MockTracker.method`][] with `options.setter`\nset to `true`.\n\n## Class: `TestsStream`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\n* Extends {ReadableStream}\n\nA successful call to [`run()`][] method will return a new {TestsStream}\nobject, streaming a series of events representing the execution of the tests.\n`TestsStream` will emit events, in the order of the tests definition\n\n### Event: `'test:diagnostic'`\n\n* `data` {Object}\n  * `file` {string|undefined} The path of the test file,\n    undefined if test is not ran through a file.\n  * `message` {string} The diagnostic message.\n  * `nesting` {number} The nesting level of the test.\n\nEmitted when [`context.diagnostic`][] is called.\n\n### Event: `'test:fail'`\n\n* `data` {Object}\n  * `details` {Object} Additional execution metadata.\n    * `duration` {number} The duration of the test in milliseconds.\n    * `error` {Error} The error thrown by the test.\n  * `file` {string|undefined} The path of the test file,\n    undefined if test is not ran through a file.\n  * `name` {string} The test name.\n  * `nesting` {number} The nesting level of the test.\n  * `testNumber` {number} The ordinal number of the test.\n  * `todo` {string|boolean|undefined} Present if [`context.todo`][] is called\n  * `skip` {string|boolean|undefined} Present if [`context.skip`][] is called\n\nEmitted when a test fails.\n\n### Event: `'test:pass'`\n\n* `data` {Object}\n  * `details` {Object} Additional execution metadata.\n    * `duration` {number} The duration of the test in milliseconds.\n  * `file` {string|undefined} The path of the test file,\n    undefined if test is not ran through a file.\n  * `name` {string} The test name.\n  * `nesting` {number} The nesting level of the test.\n  * `testNumber` {number} The ordinal number of the test.\n  * `todo` {string|boolean|undefined} Present if [`context.todo`][] is called\n  * `skip` {string|boolean|undefined} Present if [`context.skip`][] is called\n\nEmitted when a test passes.\n\n### Event: `'test:plan'`\n\n* `data` {Object}\n  * `file` {string|undefined} The path of the test file,\n    undefined if test is not ran through a file.\n  * `nesting` {number} The nesting level of the test.\n  * `count` {number} The number of subtests that have ran.\n\nEmitted when all subtests have completed for a given test.\n\n### Event: `'test:start'`\n\n* `data` {Object}\n  * `file` {string|undefined} The path of the test file,\n    undefined if test is not ran through a file.\n  * `name` {string} The test name.\n  * `nesting` {number} The nesting level of the test.\n\nEmitted when a test starts.\n\n## Class: `TestContext`\n\nAn instance of `TestContext` is passed to each test function in order to\ninteract with the test runner. However, the `TestContext` constructor is not\nexposed as part of the API.\n\n### `context.beforeEach([, fn][, options])`\n\n* `fn` {Function|AsyncFunction} The hook function. The first argument\n  to this function is a [`TestContext`][] object. If the hook uses callbacks,\n  the callback function is passed as the second argument. **Default:** A no-op\n  function.\n* `options` {Object} Configuration options for the hook. The following\n  properties are supported:\n  * `signal` {AbortSignal} Allows aborting an in-progress hook.\n  * `timeout` {number} A number of milliseconds the hook will fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n\nThis function is used to create a hook running\nbefore each subtest of the current test.\n\n```js\ntest('top level test', async (t) => {\n  t.beforeEach((t) => t.diagnostics(`about to run ${t.name}`));\n  await t.test(\n    'This is a subtest',\n    (t) => {\n      assert.ok('some relevant assertion here');\n    }\n  );\n});\n```\n\n### `context.after([fn][, options])`\n\n<!-- YAML\nadded: REPLACEME\n-->\n\n* `fn` {Function|AsyncFunction} The hook function. The first argument\n  to this function is a [`TestContext`][] object. If the hook uses callbacks,\n  the callback function is passed as the second argument. **Default:** A no-op\n  function.\n* `options` {Object} Configuration options for the hook. The following\n  properties are supported:\n  * `signal` {AbortSignal} Allows aborting an in-progress hook.\n  * `timeout` {number} A number of milliseconds the hook will fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n\nThis function is used to create a hook that runs after the current test\nfinishes.\n\n```js\ntest('top level test', async (t) => {\n  t.after((t) => t.diagnostic(`finished running ${t.name}`));\n  assert.ok('some relevant assertion here');\n});\n```\n\n### `context.afterEach([, fn][, options])`\n\n* `fn` {Function|AsyncFunction} The hook function. The first argument\n  to this function is a [`TestContext`][] object. If the hook uses callbacks,\n  the callback function is passed as the second argument. **Default:** A no-op\n  function.\n* `options` {Object} Configuration options for the hook. The following\n  properties are supported:\n  * `signal` {AbortSignal} Allows aborting an in-progress hook.\n  * `timeout` {number} A number of milliseconds the hook will fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n\nThis function is used to create a hook running\nafter each subtest of the current test.\n\n```js\ntest('top level test', async (t) => {\n  t.afterEach((t) => t.diagnostics(`finished running ${t.name}`));\n  await t.test(\n    'This is a subtest',\n    (t) => {\n      assert.ok('some relevant assertion here');\n    }\n  );\n});\n```\n\n### `context.diagnostic(message)`\n\n- `message` {string}Message to be reported.\n\nThis function is used to write diagnostics to the output. Any diagnostic\ninformation is included at the end of the test's results. This function does\nnot return a value.\n\n `context.name`\n\nThe name of the test.\n\n### `context.runOnly(shouldRunOnlyTests)`\n\n- `shouldRunOnlyTests` {boolean} Whether or not to run `only` tests.\n\nIf `shouldRunOnlyTests` is truthy, the test context will only run tests that\nhave the `only` option set. Otherwise, all tests are run. If Node.js was not\nstarted with the [`--test-only`][] command-line option, this function is a\nno-op.\n\n### `context.signal`\n\n* [`AbortSignal`][] Can be used to abort test subtasks when the test has been aborted.\n\n> **Warning**\n> On Node.js v14.x, this feature won't be available unless you pass the\n> `--experimental-abortcontroller` CLI flag or added an external global polyfill\n> for `AbortController`.\n\n```js\ntest('top level test', async (t) => {\n  await fetch('some/uri', { signal: t.signal });\n});\n```\n\n### `context.skip([message])`\n\n* `message` {string} Optional skip message.\n\nThis function causes the test's output to indicate the test as skipped. If\n`message` is provided, it is included in the output. Calling `skip()` does\nnot terminate execution of the test function. This function does not return a\nvalue.\n\n### `context.todo([message])`\n\n* `message` {string} Optional `TODO` message.\n\nThis function adds a `TODO` directive to the test's output. If `message` is\nprovided, it is included in the output. Calling `todo()` does not terminate\nexecution of the test function. This function does not return a value.\n\n### `context.test([name][, options][, fn])`\n\n- `name` {string} The name of the subtest, which is displayed when reporting\n  test results. **Default:** The `name` property of `fn`, or `'<anonymous>'` if\n  `fn` does not have a name.\n- `options` {Object} Configuration options for the subtest. The following\n  properties are supported:\n  - `concurrency` {number|boolean|null} If a number is provided,\n    then that many tests would run in parallel.\n    If `true`, it would run all subtests in parallel.\n    If `false`, it would only run one test at a time.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `null`.\n  - `only` {boolean} If truthy, and the test context is configured to run\n    `only` tests, then this test will be run. Otherwise, the test is skipped.\n    **Default:** `false`.\n  - `skip` {boolean|string} If truthy, the test is skipped. If a string is\n    provided, that string is displayed in the test results as the reason for\n    skipping the test. **Default:** `false`.\n  - `signal` {AbortSignal} Allows aborting an in-progress test.\n  - `todo` {boolean|string} If truthy, the test marked as `TODO`. If a string\n    is provided, that string is displayed in the test results as the reason why\n    the test is `TODO`. **Default:** `false`.\n  - `timeout` {number} A number of milliseconds the test will fail after.\n    If unspecified, subtests inherit this value from their parent.\n    **Default:** `Infinity`.\n- `fn` {Function|AsyncFunction} The function under test. The first argument\n  to this function is a [`TestContext`][] object. If the test uses callbacks,\n  the callback function is passed as the second argument. **Default:** A no-op\n  function.\n- Returns: {Promise} Resolved with `undefined` once the test completes.\n\nThis function is used to create subtests under the current test. This function\nbehaves in the same fashion as the top level [`test()`][] function.\n\n## Class: `SuiteContext`\n\nAn instance of `SuiteContext` is passed to each suite function in order to\ninteract with the test runner. However, the `SuiteContext` constructor is not\nexposed as part of the API.\n\n### `context.name`\n\nThe name of the suite.\n\n### `context.signal`\n\n* [`AbortSignal`][] Can be used to abort test subtasks when the test has been aborted.\n\n> **Warning**\n> On Node.js v14.x, this feature won't be available unless you pass the\n> `--experimental-abortcontroller` CLI flag or added an external global polyfill\n> for `AbortController`.\n\n\n[`AbortSignal`]: https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal\n[TAP]: https://testanything.org/\n[`MockFunctionContext`]: #class-mockfunctioncontext\n[`MockTracker.method`]: #mockmethodobject-methodname-implementation-options\n[`MockTracker`]: #class-mocktracke\n[`SuiteContext`]: #class-suitecontext\n[`TestContext`]: #class-testcontext\n[`context.diagnostic`]: #contextdiagnosticmessage\n[`context.skip`]: #contextskipmessage\n[`context.todo`]: #contexttodomessage\n[`run()`]: #runoptions\n[`test()`]: #testname-options-fn\n[describe options]: #describename-options-fn\n[it options]: #testname-options-fn\n[test runner execution model]: #test-runner-execution-model\n\n## License\n\n[MIT](./LICENSE)\n",
  "homepage": "https://github.com/nodejs/node-core-test#readme",
  "bugs": {
    "url": "https://github.com/nodejs/node-core-test/issues"
  },
  "readmeFilename": "README.md",
  "license": "MIT"
}