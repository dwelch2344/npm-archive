{
  "_id": "date-fns-tz",
  "_rev": "46-6adcf6da681afe4dbb107618d7ea10bc",
  "name": "date-fns-tz",
  "dist-tags": {
    "latest": "2.0.0",
    "beta": "1.3.0-beta.3"
  },
  "versions": {
    "0.1.0": {
      "name": "date-fns-tz",
      "version": "0.1.0",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "scripts": {
        "build": "node scripts/build/build.js",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.12.1",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "gitHead": "3c5585c9594dfc6c1d103d7592818f5d6959d5ee",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@0.1.0",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-DUGsho8jhftat0cDoZsddBrqTvCWhVeIOsj7v8xFn75kzayr58/Vrwxa+t9qzgUtL1qQzjdzLfd4ftf17jMiyA==",
        "shasum": "5a94a03bc911b223a6d55ffe8865aec36317b994",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-0.1.0.tgz",
        "fileCount": 49,
        "unpackedSize": 414700,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6ev9CRA9TVsSAnZWagAAseAP/0pFH1VP1rWRfrkCRRdz\nz4CyzycfxM8W0bAC450k2wEpuc6L50AZNChNKsMq0ci4h0ygx19RjoAHk1bH\nwvLsFxbLra1w7s7wir6W+gtoQlvhPoNfd8BCV8XAPUv16lxRAYUc7xiGsGLC\nbVkAlMMYV9qb/T2KYnH1GE4qDc6WcppzjjLIV+3dkOCVwYqOcGjnUgMHmVlZ\n71abJiFE6+ipzp7JFUV9Wo5zaELlfvZgI9sCZoTUQZZeC/IJwGpl0pk9rKDV\nvlUgfCheITy7/GMQlj4BLLAFDvSrP1LYW+rjUHC/Pd8RZyqNc2HOSq5tgPLy\nJA3DfNMqJ0NKmYzmzGSIKI+BP5bmEBXtd3E/3ojNfzoW+5uVSMi/t1LEkyFZ\nLwNR3UoptycB3P1h9m2qqvW5DGSwZ3JMeeucMOwvotGZ37UtyTRkDuKPnvPG\nC0NSN6eR2p74Gd4wd00NWNBWeu5mWeFtOa571CTPN4NyiS3L55qYmRmSfxln\nUlIu31/WxveomI2rPkYF2urf9wRpfTN+YBRqkklzZC2T2qx7f5mBUzwshAUP\niqAlyoKQm7zniH+ssS5XxbccQo1Quy+5/IgHl3B6qUVirfvjH5zY4Q6KHXgX\n3sHb1dvIui8BO0aW/coOum2i2dbKqmxNYNoFDISVD1lMV9ratN28D737uwtf\nji37\r\n=y52M\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGCfFls1gOc22VyALz2+utSJ33GHkgtteeCEYCu1bwt3AiEA3HgL4dgF6mnBxZcD3AmwBb7men+tQJvhYvxJCJKdiZ8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_0.1.0_1542056956834_0.5480936752271921"
      },
      "_hasShrinkwrap": false
    },
    "0.1.1": {
      "name": "date-fns-tz",
      "version": "0.1.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@0.1.1",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-fEgWoemVvd1JZeBNYjD9uUqxcwqe7dJ+7QAzT62UFhwlcVxvhTtZHNDRNI7qr0lXWCQ0YYB2CZE3Sgq3OiGz+g==",
        "shasum": "04dd452a6ea76f8fc5c904a7ce0120609b241690",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-0.1.1.tgz",
        "fileCount": 127,
        "unpackedSize": 189677,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6qKQCRA9TVsSAnZWagAADqwQAI4r2eCJw27MSmlBAFSw\ninc43J0AsOStlay/rCRxnhDr87kYcoOLdAXe3cwejPTK94Ha5qn2BbeGNyoq\nGzj9jDgENmOXCPv71jwCiHT4yF+2n23/4/e8wqj1cKggIo0E98t/dO8CWF7a\n8siOG2X7HtppoA1h+35PDqRO6Furn8+Qae05C6UfGz5hj4MtoQYETVQSpTMc\nlYe7PeUWyw39ne8E7lCemYNWKTXYjLvvvyeOE8JfZEmhRKU/q+CYOEESpN5v\nMys9IVxSU37plzgQN74cSHfBJ6BKw1hfN1DbRj2xXmtPyUo3c3WBhF+cWIq/\nNHval2rDdKgKMdmdktBO4NW+f8OFmL3SkQKcNC5lhs0Ipn7+vtwMmPBb8pBZ\nnrG6ATWlc5z3W/8P/GEN8C6T93cOY+Sfulej7FmJW8TVIzzZw1eDp88q3EWY\nJF6RGssp1HmacMgdRyuhMBBMW2oYCTVif4XP7moUDKCiunN31zjZ59U0ddTi\n8TapBEiKyJJEDvC79ahZG3XsA3QvalDC8Smh9W1zzyjgLABA5MgR/BAchfXn\nSZgkRCrSW9rDG5LSloV/8nyG+QKzN0IeX2euDBDnTvNxPHOhiL0hrvcgp57d\nJ+qz9LiU1UCVi8s4LFkaYWl9JXbeBg5aL4NNVoMCIWNcZHugW8Gq6mvnJiFS\n1MgK\r\n=f1V+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF+kaUS2HzRD1BGW0/bAmMKo0ExzH2jHuHNo68jEQkOAAiEAkBlbN3QelsempfXIY6ueur9HTYAgHISusTeJvHOSgDg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_0.1.1_1542103695267_0.9857506182250846"
      },
      "_hasShrinkwrap": false
    },
    "0.1.2": {
      "name": "date-fns-tz",
      "version": "0.1.2",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@0.1.2",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-yLFfN5riwreYzviNZh5ypSNQtJsaRtEoaSKfUBYkhBoBerR5KS3XySQ3RIAgkOs4bREj/AU0ZlbJJ1ulow/djQ==",
        "shasum": "6cdc21e235f7381d9b9e88d2599251492ba2b3b0",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-0.1.2.tgz",
        "fileCount": 127,
        "unpackedSize": 189705,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcGBJBCRA9TVsSAnZWagAAfRkQAKEDjUhEJW8tQ50a3uxa\nKxhghPNtaayZC2NgRMVBuFQNkVRGPoScDxbtB4CTPe0QGyYyU9WjKes6YEaV\nRnNnC+dz/xKkncKMrAL6wzC46QTqLRC8/aeEBqrk20AA+GHlLiNs9s0VDaO5\n8bctURivbSvLjrtNkJMDtjnwzUydTcKiC1s6exkUmyLozGj4AZVKR66sHE2e\nyACzTSPdmibtVfRVxk/1VpafEMyFZsTARtIAPRF1fHwNRs6vbwtoCfyRtBlJ\nCJsYLjncKMm6SaZ+sO0ntgnOEJqu6ZSSDjYfVYVGjodynQodqOLs9XKstlgG\nzjQMf7ib0JIEpy7IFP1CKK7tQG462m/ropcX8Uuzb2A3Jz9A6u3RtjrtdeSW\nb1+o7buaqwv5yWZMKB6KdOYDORPJgETQ/nvEFDDeySIbHfwPxDmXmQEEyjh8\nC6T54fOO5hKROcyYO+JiUoDrHOlhKA9607MMVvYIbQJFPoJKxfhgEYOJ1G1M\nkKVi7PxS9LdpXmC3ToMDad9O2I3V1rdcShfb8cVHchP5MVmm4HRMlSc6nI+T\nGz4b9jrAcgX6GvTr/lRuP4B6fO+mrWveJGAwr0cApjXaoJ4pTfjC9tDiutEj\niZri2hVAc/1UODTYK+Kqs1BNRFAwHco3YeB0ntsBPgQfrGFVg74Zfws8/MEN\nj/Pg\r\n=+Pv7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD9bUORXD55e/M5lb9zdpmFU1bd25Vxl2w2KqrJf31EvAIhAKwbRPMJWTzxOPkN2E6kW6eNi6O94trYEJ8zSwoi6xjL"
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_0.1.2_1545081408587_0.2210278523548046"
      },
      "_hasShrinkwrap": false
    },
    "1.0.0-beta.1": {
      "name": "date-fns-tz",
      "version": "1.0.0-beta.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "typings": "./typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "readme": "# date-fns-tz\n\nTime zone support for [date-fns](https://date-fns.org/) v2.0.0.\n\nDependency free IANA time zone support is implemented via the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl) to keep \nactual time zone data out of code bundles. Modern browsers all support the \n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://github.com/yahoo/date-time-format-timezone) can be used.\n\nIf you do not wish to use a polyfill the time zone option can still be used, but only with\ntime zone offsets such as '-0200' or '+04:00' and not IANA time zone names.\n\n*This work was initially proposed in PR [date-fns/#707](https://github.com/date-fns/date-fns/pull/707), but won't\nbe considered until `date-fns` version 2 has been released. It is my hope that these features will eventually \nmake it into `date-fns` or at least contribute to the conversation and that this project will be deprecated.* \n\n## Table of Contents\n\n- [Overview](#overview)\n- [Time Zone Helpers](#time-zone-helpers)\n    - [`zonedTimeToUtc`](#localtimetoutc) - Get the UTC date/time from a date representing local time in a given time zone\n    - [`utcToZonedTime`](#utctolocaltime) - Get a date/time representing local time in a given time zone from the UTC date\n- [Time Zone Formatting](#time-zone-formatting)\n    - [`format`](#format) - Extends `date-fns/format` with full time zone support\n    - [`toDate`](#todate) - Can be used to create a zoned Date from a string containing an offset or IANA time zone\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another \ntime zone's local time, other than the current system's, like on a Node server or when showing the time \nof an event in a specific time zone, like an event in LA at 8pm PST regardless of where a user resides.\n\nIn this case there are two relevant pieces of information: \n - a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n - the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/New_York`).\n\nLibraries like Moment and Luxon, which provide their own date time classes, manage these timestamp and time \nzone values internally. Sine `date-fns` always returns a plain JS Date, which implicitly has the current \nsystem's time zone, helper functions are provided for handling common time zone related use cases. \n\n## Time Zone Helpers\n\nTo discuss the usage of the time zone helpers let's assume we're writing a system where administrators set\nup events which will be start at a specific time in the venue's local time, and this local time should be \nshown when accessing the site from anywhere in the world.\n\n### `zonedTimeToUtc`\n\n**Get a date with the correct UTC time for the date/time in a specific time zone**\n\n```js\nzonedTimeToUtc(date: Date|Number|String, timeZone: String): Date\n```\n\nSay a user is asked to input the date/time and time zone of an event. A date/time picker will typically \nreturn a Date instance with the chosen date, in the user's local time zone, and a select input might \nprovide the actual IANA time zone name. \n\nIn order to work with this info effectively it is necessary to find the equivalent UTC time:\n\n```javascript\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst date = getDatePickerValue()     // e.g. 2014-06-25 10:00:00 (picked in any time zone) \nconst timeZone = getTimeZoneValue()   // e.g. America/Los_Angeles\n\nconst utcDate = zonedTimeToUtc(date, timeZone)  // In June 10am in Los Angeles is 5pm UTC\n\npostToServer(utcDate.toISOString(), timeZone) // post 2014-06-25T17:00:00.000Z, America/Los_Angeles\n```\n\n### `utcToZonedTime`\n\n**Get a date/time in the local time of any time zone from UTC time**\n\n```js\nutcToZonedTime(date: Date|Number|String, timeZone: String): Date\n```\n\nSay the server provided a UTC date/time and a time zone which should be used as initial values for the above form.\nThe date/time picker will take a Date input which will be in the user's local time zone, but the date value \nmust be that of the target time zone.\n\n```javascript\nimport { utcToZonedTime } from 'date-fns-tz'\n\nconst { isoDate, timeZone } = fetchInitialValues()  // 2014-06-25T10:00:00.000Z, America/New_York\n\nconst date = utcToZonedTime(isoDate, timeZone)    // In June 10am UTC is 6am in New York (-04:00)\n\nrenderDatePicker(date)          // 2014-06-25 06:00:00 (in the system time zone)\nrenderTimeZoneSelect(timeZone)  // America/New_York\n```\n\n## Time Zone Formatting\n\n### `format`\n\nThe `format` function exported from this library extends `date-fns/format` with full time zone support:\n\n- The `z..zzz` Unicode tokens: *short specific non-location format*\n- The `zzzz` Unicode token: *long specific non-location format*\n- Using the name of any IANA time zone or offset by specifying a `timeZone` option;\n  when using this option the `x..xxxxx`, `X..XXXXX` and `O..OOO` tokens will also use the provided\n  time zone rather than the system time zone.\n\n```javascript\nimport { format, utcToZonedTime } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\nconst nyTimeZone = 'America/New_York'\nconst parisTimeZone = 'Europe/Paris'\n\nconst nyDate = utcToZonedTime(date, nyTimeZone)\nconst parisDate = utcToZonedTime(date, parisTimeZone)\n\nformat(nyDate, 'YYYY-MM-DD HH:mm:ssXXX', { timeZone: 'America/New_York' })  // 2014-10-25 06:46:20-04:00\nformat(nyDate, 'YYYY-MM-DD HH:mm:ss zzz', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20 EST\nformat(parisDate, 'YYYY-MM-DD HH:mm:ss zzz', { timeZone: 'Europe/Paris' })  // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\nenGB.code = 'en-GB'\nformat(parisDate, 'YYYY-MM-DD HH:mm:ss zzz', { timeZone: 'Europe/Paris', locale: enGB }) \n// 2014-10-25 10:46:20 CEST\nformat(parisDate, 'YYYY-MM-DD HH:mm:ss zzzz', { timeZone: 'Europe/Paris', locale: enGB }) \n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n**Caveat:** Note that when using a locale the language code of the locale should be added to the import\nsomewhere in the project so `format` can identify the locale. Once this library is absorbed into `date-fns`\nthis can be added to each locale natively.\n\n### `toDate`\n\nThe `toDate` function can be used to create a zoned Date from a string containing an offset or IANA \ntime zone, or by providing the `timeZone` option.\n\n```javascript\nimport { toDate, format } from 'date-fns-tz'\n\n// Offsets in the date string work as usual and take precedence\nconst parisDate = toDate('2014-10-25T13:46:20+02:00')\nformat(parisDate, 'YYYY-MM-DD HH:mm:ssZ', { timeZone: 'Europe/Paris' }) // 2014-10-25 13:46:20+02:00\n\n// Since toDate simply clones a Date instance timeZone option is effectively ignored in this case\nconst date = new Date('2014-10-25T13:46:20Z')\nconst clonedDate = toDate(date, { timeZone: 'Europe/Paris' })\nassert(date.valueOf() === clonedDate.valueOf())\n\n// When there is no offset in the date string the timeZone property is used\nconst bangkokDate = toDate('2014-10-25T13:46:20', { timeZone: 'Asia/Bangkok' })\nformat(bangkokDate, 'YYYY-MM-DD HH:mm:ssZ', { timeZone: 'Asia/Bangkok' }) // 2014-10-25 13:46:20+07:00\n\nconst nyDate = toDate('2014-10-25T13:46:20 America/New_York')\nformat(nyDate, 'YYYY-MM-DD HH:mm:ssZ', { timeZone: 'America/New_York' }) // 2014-10-25 13:46:20-04:00\n```\n\n**Note:** Since the Intl API does not provide a way to parse long or short time zone names the `parse`\nfunction cannot be supported using this approach.\n\n## Credit\n\nThe idea of using the Intl API for time zone support was inspired by the [Luxon](https://github.com/moment/luxon)\nlibrary. \n\nThe initial port of the idea into date-fns was done by [@benmccan](https://github.com/benmccann) in \n[date-fns/#676](https://github.com/date-fns/date-fns/pull/676).\n\n## Alternatives\n\nThe [`date-fns-timezone`](https://github.com/prantlf/date-fns-timezone) library provides similar functionality\nfor `date-fns` version 1 by bundling time zone data. This does have the advantage of making parsing time zone \nlong and short names possible.\n\n## License\n\nMIT © Marnus Weststrate\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.0-beta.1",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-tUnXGYEd8bSCrUN0vv75p5V8r90lFLUay0hEAx59JwH6hMNQAz8Zci8mAmLzP7EFA1wFG1gxchTf9XsAtcCMxQ==",
        "shasum": "c8019821fbd91e1fcd1fe868220b50a662fcc3bd",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.0-beta.1.tgz",
        "fileCount": 120,
        "unpackedSize": 169062,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcK6/8CRA9TVsSAnZWagAAAxMP/0hygbV/UXKo2Mv526ht\ndDuOISGvpt8qsD+H7tFgra6Rxoa9FiuA++V1Ll0ghoxnT3Khvsk3ygGDosDh\nV+kGPcATlcXmJz/Fr/pQL/hLKu1K0FS2e2vxEYOgvKiEVUDVI3ph10OAF9oV\n/7cBWma5l1AI9vYVaZuiNmeMRuq2nnYC1GdaHro468SX+xc6/tSExqxZQZ+x\nvJlSe8+jcGbHIfncVkpO4EnA0KWV9f4B2wUzVkib3Hk4YpXdJIP2Sk7asDg2\n4UEym+W+tp50IPamzJGoY7uSqxZDEB/GKWnu3U+5ouDjF/r+cbWIfQwDb1zM\nkpurX7axTiJ4MiaJigSJoBZZLu6cLFO6IBGDGal5gGMlWq04HeT4TCpjgI7A\nqkbTC+T33HZ4wh0ItSwS5/2of1OmZcsiAURV6a9wAC5w9zr/OC4/rrN7n24k\nd42vA5HCx7Yr8rPhW5zqa1eQHK6G26sRp+VM8OiBWnbdAgVwBOH1U04Ztfm+\nF7Vqz9Kkum4uAsUIhJX7XxfjmssWOXmfRgRfTfJjPKQEI1gWOZT2mDSxMOiW\n5ZpllC4z78i09ZhlVKEbnvE8lQoZtfW3aTrrXc752meG4EK+jry7px9VhYgd\nYQbi+IW44vR3mtfssU9U6u/oryhp6w8/ibd84xGVPq9Z5No2xq7G47aR21SX\nCegx\r\n=Cg9G\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCehhHCbuILuPK2WeRBKFFL+szh0dso6NRe7BJcID7uKAIhAK3MlKcUTiNCwIquq9oStUoQsHQZGpbAvRbPJv/AoWNG"
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.0-beta.1_1546366971546_0.6434679364039091"
      },
      "_hasShrinkwrap": false
    },
    "1.0.0": {
      "name": "date-fns-tz",
      "version": "1.0.0",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.0",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-Vl54KzcZ2zWHQMEkXiEFr4wOR/ok3jX/ANAXXQVsytW+WcOw3kQvqXK7T4KSFGlNSx/S3NEZL4H0t/IUQt340g==",
        "shasum": "854aa477c5ea7b26272d32484a8fdc8a8d708a8f",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.0.tgz",
        "fileCount": 120,
        "unpackedSize": 169035,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcK8U/CRA9TVsSAnZWagAAtj0QAIQ9CgmVrjtivdtSDBmF\nVZJTMY9kme0pdvgCTeY9EufF3m3jUrBV14VB83layVXF9k1vObtm8u3L6awg\nMA3qau22e98lj66O+lWeRkUBnsnULA+Z9xXrAuu2QglC106p/r3QlwokTSu2\n67qJmnmGa+iTB9xn2i2e6ZbLANkk8nLeNnBjqStpiw/sBOJZSQ3am7ILOyAr\ntgQ8K1vUK28UhrhdpttochOph4dmqsiwRxw9PFXY4JIThZIuYwGE3t/bdCCC\nXfNy3qm3gcV0S/9OVs4bepv97gzM4FnNzXc1bo1JYgn019HAXyRt6vRHcCaz\n6gXpB+Z37ScmkKlNmQlVgH/8cjLrTw9wNOvXcympewsoYBMCoLCkSGvgUpmb\nvPoeP965wWglZDcd9KYhVc98/DwM9Bd3Qfb0VcgU5jCQmRuUKglg2VP0auiS\nn09el7xME9vyUb2aOt1fczazLRGT9S0dv3BhbBxHqiqAkPyi+0m+6P3K4mV3\ndluwOuTcwd0WpIgAowEwPp/T5gtUj9cWwiRecgL6Bj1wTOiRB0r1K4Ujvri/\nxu2o7U66G+udFpUn1NVW7ds/pCkn2+HTlFPvOHgi44L0BnHATXyNftrT9NLL\nYo2Mn/k3ClZOt9yzh9rsebLBj7ER7e734r8gSsY5XxWHhNi2uI/M1o0dk9ez\npjlt\r\n=iLw+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD/YAuuKZxz1MgdgSjAc288oaCQd3ksImU5oZjuBASU1QIgDGUPsBPRStbzKt3uAjb5HVMBlu6JEf5BjF6cjDGayFk="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.0_1546372414856_0.05151863749980645"
      },
      "_hasShrinkwrap": false
    },
    "1.0.1": {
      "name": "date-fns-tz",
      "version": "1.0.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.1",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-fbHLLGPsC2fa+jen3q4UviE4And925hmYFPABpQMCOunLvrG8pYFLsIQWhn5X8TXG7GZWS3p3XNJdA2aP4F0Yg==",
        "shasum": "c5bed0ec03faf04f8ef4dbc295ef15d9f3ca3955",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.1.tgz",
        "fileCount": 120,
        "unpackedSize": 169035,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcOdc4CRA9TVsSAnZWagAA2hgQAIGnAMrtBGyMvEwUmwYw\nTg7Ef/Ph3puzes/7T1woLwq5dXsXpB7OEHnMNHJeKbyNnzIsvVnyJ0E7c8+Q\nUrTcSDYtYolHoRCQd5+2LRDlK9I75lO6IPgNeBOPo9xmXS4DVvVlqRIE7TVi\nqRYlzAASSFBM87xLtsgF0RNGTYLqqt1o1AgUdjvDKScHLQEZ9YDqnCHS6nWt\n2EesIXLxoWzzOu2G1DqClG/k0IkE4b+ZhsJGkLMV4yDA9wUeukCQ+PHUbyNM\nPnRcBEukZdIYliAH0pAiKEIkqe559vRL2qYONFnW+FHd9vBxRVVc8GJX7BJ7\nz1U8SE9R2Q43DoRqkphYdw5/LjFj/UvoKQyi25y/mmx19cYJTm5wSFXL6+fv\nSt4tVBQuxBNox31gn/UEJJiT4YuKFdbwNQx3mlHMXI7XMRhFAkIKBJe+wxI0\nEFHs9ePPX7ZnW9QK2hDSMNxgcv7a9e8l0xk4vUkbYratsbnEmbUuszxsw89v\nSPtl8wyWTh2W+eGAIZQSwo8tA8EwYdGXgXxGoPOaz1Q0B6EauW1gnRHMoHxn\nxw1WcCF+uJHbTRT5IXYSURn3akPdAC6K54GS38kROwoTQmd9s1H48osTjzOe\nnUdZZnlsaTkmDPzE/d4RaIc9cuexex8axo2ylhm6xH5UO2V69XJ/v26/mPW4\n9866\r\n=FgzG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCE3xi/3Mq42A3+XFD1Zyje4kku6Cd5rX6iavlJvt/9ngIgUSJvsFok35fzfZXjqWeNNTBVVUFIVU/GKbiBQS60zEo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.1_1547294519565_0.24897273540424547"
      },
      "_hasShrinkwrap": false
    },
    "1.0.2": {
      "name": "date-fns-tz",
      "version": "1.0.2",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.2",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-FtozS0fegxvF5nAHGOdhuxfnGHA+NxJq57P4UoY4YyUFXg8n1UEUTEnAPnUrNTcPpc/1sQj+FpNRhN7MmZWCzw==",
        "shasum": "cbfa042c557c77581c85008753348f44551bd09b",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.2.tgz",
        "fileCount": 120,
        "unpackedSize": 168989,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcRXcaCRA9TVsSAnZWagAAS8cP/iVbhW547v9GpKnFcdCK\n0wBof+oUehDeBXRX/H0m6RTTjZHmrfGPzzUXa2NEIBUsj2QuqNzA5IYQdHpi\nBEvb48WzTsq95AlAfZY4l0nL/KU5YXydDPXDmdyZXVfoGFhYksudPblLlF4Q\nL4MjfS6U9HoSqebbsP3iFguW1xd8uaxGZxqtUNFJwVCcVMpozIesyUZHEjTd\npyfvEzCPzJN5x+0LzjPdx7ms1RgfU3qHV+zS4MlYlESkp+6VV5AB8DCOJ7XS\nuYj0CtoEyI4OoP553Mtzg1+/g+mL7a36QHy7Q2fR60ExfpbP7jvSW/yx1e+u\nqlXMY6GIxl9P+ijkkLQVCotbdJ9Rq5sFVNUP5PLcC+txWCXK5NjXsU3DebLQ\nqyy7Ar6utYeR6EJu6ON7sahympP4RTz/nGJ7Uu2jADFpIucndmD0xoEIMlup\nPKYu6GQZPJvlglC8TuHyemSK6JSzHa31IJaSzzx/jt+eQltkhf3tyxSe4A3D\nq4tZe4X76KSOvrJf9h1k/VUFDn/zDDGmLy1HMJu+C6tlmgrUcqF+aJn/5GYS\nL2wTSn+EVLaqZBxQg5hIOBe/gnCx5YLjc01PCSiy9JcY9FKBYnnLbi+26VrD\nnAoz5iDLqA8kCsYhzTPPGXDBr2SkpctCoD4ylA9FMcseRPAyEZORPfSilUAR\nQdOt\r\n=7r2f\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGxhWl2C2dZEPJnwXmo0ZV/XCPpuqP3YjtIQdJAhqpTvAiEA41HmqzIim+0fsAj6qw5dtnP2E8okjDetlimnL66+aqo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.2_1548056345649_0.18951115861460477"
      },
      "_hasShrinkwrap": false
    },
    "1.0.3": {
      "name": "date-fns-tz",
      "version": "1.0.3",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.3",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-kb+W7quhhoO1EK6vR7z2V1bym1NCrsprKhGXqPQ1wqBPMgl9Yya5Bv8LZizbu9YoAzjU3vfJH5xvHIWr8ec1vw==",
        "shasum": "6f82ec3d354ddfbb6ec8c335ba987ffa27ce16b7",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.3.tgz",
        "fileCount": 120,
        "unpackedSize": 168982,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcRXwlCRA9TVsSAnZWagAA+wQP/348TWnExSDtjAx5nJ3y\nnQk9PqfSFgNjGQH2Af5XASewA0wOWVuW8TMp/AOLEHH+wA7RoaCY0JBfFC1i\nm17WXrZ93FoesP3HtMEFVHN74nETPjzJ2LnQs0jzLVd5bN9BYRj7HC78Ng0O\nnA2fEjPJzZHufK6OrsYjJFOY5qs0Ttnkh8tCjxxeXv5pQUxFqXhJAjeX6HKN\nKEfpHF4+B7x7QYyyv2smpDFO2OxKhgo07rnOFJXRNz6iJKu9Dzl8XrZRlx8k\nhSN3bG82LvgE44b0i++5IS9KGP6sdYsvYP5NIJ45AdLzw/n8+H7iD2tXPBlz\nrrAVrkeC4IIsnNf3ZaDAcK/Xir7hjUBF6eigGW5WBc3YX0nG5wUSGUl/jG78\n6pQ+fv8ligBqfC7JOHGolfRfzaHj5qzjUVM1d/dP4iGqt31wrEOfvPplSPJc\niblD0W2ctbBvtbB6GbfyIKhzF//uNEYxAOvJDQ0TObaqb/cA5Oroc1GJKCYz\nxANUgbHbZM/m6D5HqkwgEr9RVD0bzp645IpX/oFU3S0MZTj4Tnio4QRqoMVD\nUd1/OZgnhdBDYjNY4PeA8dikxc5JfJrsl3RKyyg78TedlPGGHUEFq/gaGghK\nIqZCOrXm18vttfY5y4hhe4vTnQbdoSpIt9g55aJn8eE7DwurWXhJ5QXGQHyJ\nldLR\r\n=kz00\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDvXf9gVl6PYj/IlRtnsgjiVlX9WAM2BW6s64DSqFR81wIhAKcNQBu+dEcd9VxZqld+vzEisPC4BbCpRxpb7frGm3/c"
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.3_1548057636534_0.3039851698096261"
      },
      "_hasShrinkwrap": false
    },
    "1.0.4": {
      "name": "date-fns-tz",
      "version": "1.0.4",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.4",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-8bwgh+BPNQ78EW2wRbdq3Uz/4VgSi3kQDMyUqFyAG5lmY/4jiDWb5JBdgwLbaVnwr7KdqQgFCFOe+793f9+SMg==",
        "shasum": "ec8cae1a394258c5c9630e298e2b5bb28634b755",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.4.tgz",
        "fileCount": 120,
        "unpackedSize": 168887,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcSBXLCRA9TVsSAnZWagAAitoP/jWyQ47b4H9llUoV3KaN\naI15GMb9ngtNbQquDbIzXuQ/iRG9QudurzBEI6Lc/u0z9LICLxDDNTOepR9Q\n3U/KpXqSna9Dw9pwNo3kmB3SnLpRHxcqircXv23B0S7c9kFTgkUPK2pn6tXE\ng20fhalqg7UvoGGSFPnI4xPzfusBMbfu7rFetjh11fAGKBL3+qchMHTAqzKu\n1rtibXQ3OaHZ6qt/NImB3y/CeJEMIbUWPzoRQ1s+5RKtw41w5cP85CREiGHY\nTdB5wFEvi+/LZT/X5loFR82na/PMIt9Penzb0wkk1e3K75F/fJHDKEagKFZ9\ntGm2EHR1exr0x5Frudekj7Mt+MrzGzu4ijh0iTvDtKfmbOu43vlKY1Wu+IYG\nLx3g5Boq9yEFejES4ci7aUkYgHRCct8L0Ib9hK37JEdbIYEMQwREPrVtzdA2\nan+a6IO+gAlS5dnCfGLz1UxQ0S3QDjDnuk6CgmPhYCspENiDN/7lEo1RCvHU\ncz72Ql2G0Hjja2/wz5GL1igszHYouZQgQIwYBhxCkevwY12GX8OjQ4In2fNt\nJp5gU5UoDsfP+xJ3us+5cfTWozUvJIWf/oNTOO3ZjMqhRyXxL7UE3d4ZF968\nXoyYQDnrkvlhmZiX0cpS3YBQTIgYs1xga9xwUNZElL5WtVwW4im3EHrEsoPN\n5usY\r\n=OHN4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBcIQxB+2Msthf8452wslKdE6uHEMbiFRsivDk5h2kvbAiBcF/+AoQipabX5WU5njz3jq5auVpvQSI5Rnjpnb6p3Ag=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.4_1548228042812_0.008597405211501874"
      },
      "_hasShrinkwrap": false
    },
    "1.0.5": {
      "name": "date-fns-tz",
      "version": "1.0.5",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.5",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-wADCK0wNgvD9TnI0ZmscoOlyG+Q7z8M6VMgweDJ0JRS6gykegCYWQJkNlp38IO9G92MrbWOb1EpIgXVsEoB7ew==",
        "shasum": "70aac94e56468abd5ca479ae97b4c4447dabc944",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.5.tgz",
        "fileCount": 120,
        "unpackedSize": 167495,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcSse9CRA9TVsSAnZWagAAv3UP/2m46hxQOK18tkZ4pj5T\ndyKwpXTi46DF5uzs5U2HyPyjhi5QekukEOQKlHtKV7SuCnLqWVdGKBToRiex\nJmDxbrMGmmonbXLHQ77fnH1DMs62oBwjuzSYFab+o1NETUNySw5qnsynltxs\n39MUp1ryq6TxdQeeEE4JH3Ar8Gqx7YAPcculmaJV070sG1tiMYM1k9Sy9KaE\nP2oU7Q2CWFHJeyTznd0UwrQZMEnC61MTHsb2h5+kGVYm0DwasXZT9bGweTCJ\n9mYOgQz9OTScB/TApTdKlMc+wEA0gJuSQYPUcS6aCQ32iOsWMrz/LujKGIkq\nPxVhXc3icaUxsnPsLsxIBPNM3c+E8zdqF9waaKW9v8jJgAwj8/6z4hWaJDyk\nH81g7hxFcPoZ7HF1oHWLdQm1UU6hgA0oH4mMyzDx6ErIzfq2po1tXSo6VeSj\nkkW5QPyuyi1hlDPP9RTSDoN4Ul8kyrsLoMoOmjPOqB3/+oWBL0ISt4OBNSYm\nGnH+ae6zQz/+myNmjsXcT4ki3bjeLeHFRViZn1FZ3HTkeU7tJzHOC2Qihjej\nms9jKgbcyHhfSWr9hatPlGGVYIBPoOPe4vKeJy7c/Vn6akKQxUwRlmC7P+gm\n8gTpgBbQXL+t/XOEYxXz0MPopbXgzIqB0XXjkI2lUKUtAkV8bvTmuSboy3eF\nN5lf\r\n=kBZs\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDjXUqkQ74WDRxDm87lcx/i2xq+ZkccvLkDzpLPyOpEOQIhAM3cF9UT4Af3pFS/MHhSvb6o64e+uR5MaOYjeWaHLI6B"
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.5_1548404669292_0.511644208615395"
      },
      "_hasShrinkwrap": false
    },
    "1.0.6-beta.1": {
      "name": "date-fns-tz",
      "version": "1.0.6-beta.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "readme": "# date-fns-tz\n\nTime zone support for [date-fns](https://date-fns.org/) v2.0.0.\n\nDependency free IANA time zone support is implemented via the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl) to keep \nactual time zone data out of code bundles. Modern browsers all support the \n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://github.com/yahoo/date-time-format-timezone) can be used.\n\nIf you do not wish to use a polyfill the time zone option can still be used, but only with\ntime zone offsets such as '-0200' or '+04:00' and not IANA time zone names.\n\n*This work was initially proposed in PR [date-fns/#707](https://github.com/date-fns/date-fns/pull/707), but won't\nbe considered until `date-fns` version 2 has been released. It is my hope that these features will eventually \nmake it into `date-fns` or at least contribute to the conversation and that this project will be deprecated.* \n\n## Table of Contents\n\n- [Overview](#overview)\n- [Time Zone Helpers](#time-zone-helpers)\n    - [`zonedTimeToUtc`](#zonedtimetoutc) - Get the UTC date/time from a date representing local time in a given time zone\n    - [`utcToZonedTime`](#utctozonedtime) - Get a date/time representing local time in a given time zone from the UTC date\n- [Time Zone Formatting](#time-zone-formatting)\n    - [`format`](#format) - Extends `date-fns/format` with full time zone support\n    - [`toDate`](#todate) - Can be used to create a zoned Date from a string containing an offset or IANA time zone\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another \ntime zone's local time, other than the current system's, like on a Node server or when showing the time \nof an event in a specific time zone, like an event in LA at 8pm PST regardless of where a user resides.\n\nIn this case there are two relevant pieces of information: \n - a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n - the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/New_York`).\n\nLibraries like Moment and Luxon, which provide their own date time classes, manage these timestamp and time \nzone values internally. Sine `date-fns` always returns a plain JS Date, which implicitly has the current \nsystem's time zone, helper functions are provided for handling common time zone related use cases. \n\n## Time Zone Helpers\n\nTo discuss the usage of the time zone helpers let's assume we're writing a system where administrators set\nup events which will be start at a specific time in the venue's local time, and this local time should be \nshown when accessing the site from anywhere in the world.\n\n### `zonedTimeToUtc`\n\n**Get a date with the correct UTC time for the date/time in a specific time zone**\n\n```js\nzonedTimeToUtc(date: Date|Number|String, timeZone: String): Date\n```\n\nSay a user is asked to input the date/time and time zone of an event. A date/time picker will typically \nreturn a Date instance with the chosen date, in the user's local time zone, and a select input might \nprovide the actual IANA time zone name. \n\nIn order to work with this info effectively it is necessary to find the equivalent UTC time:\n\n```javascript\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst date = getDatePickerValue()     // e.g. 2014-06-25 10:00:00 (picked in any time zone) \nconst timeZone = getTimeZoneValue()   // e.g. America/Los_Angeles\n\nconst utcDate = zonedTimeToUtc(date, timeZone)  // In June 10am in Los Angeles is 5pm UTC\n\npostToServer(utcDate.toISOString(), timeZone) // post 2014-06-25T17:00:00.000Z, America/Los_Angeles\n```\n\n### `utcToZonedTime`\n\n**Get a date/time in the local time of any time zone from UTC time**\n\n```js\nutcToZonedTime(date: Date|Number|String, timeZone: String): Date\n```\n\nSay the server provided a UTC date/time and a time zone which should be used as initial values for the above form.\nThe date/time picker will take a Date input which will be in the user's local time zone, but the date value \nmust be that of the target time zone.\n\n```javascript\nimport { utcToZonedTime } from 'date-fns-tz'\n\nconst { isoDate, timeZone } = fetchInitialValues()  // 2014-06-25T10:00:00.000Z, America/New_York\n\nconst date = utcToZonedTime(isoDate, timeZone)    // In June 10am UTC is 6am in New York (-04:00)\n\nrenderDatePicker(date)          // 2014-06-25 06:00:00 (in the system time zone)\nrenderTimeZoneSelect(timeZone)  // America/New_York\n```\n\n## Time Zone Formatting\n\n### `format`\n\nThe `format` function exported from this library extends `date-fns/format` with full time zone support:\n\n- The `z..zzz` Unicode tokens: *short specific non-location format*\n- The `zzzz` Unicode token: *long specific non-location format*\n- Using the name of any IANA time zone or offset by specifying a `timeZone` option;\n  when using this option the `x..xxxxx`, `X..XXXXX` and `O..OOO` tokens will also use the provided\n  time zone rather than the system time zone.\n\n```javascript\nimport { format, utcToZonedTime } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\nconst nyTimeZone = 'America/New_York'\nconst parisTimeZone = 'Europe/Paris'\n\nconst nyDate = utcToZonedTime(date, nyTimeZone)\nconst parisDate = utcToZonedTime(date, parisTimeZone)\n\nformat(nyDate, 'YYYY-MM-DD HH:mm:ssXXX', { timeZone: 'America/New_York' })  // 2014-10-25 06:46:20-04:00\nformat(nyDate, 'YYYY-MM-DD HH:mm:ss zzz', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20 EST\nformat(parisDate, 'YYYY-MM-DD HH:mm:ss zzz', { timeZone: 'Europe/Paris' })  // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\nenGB.code = 'en-GB'\nformat(parisDate, 'YYYY-MM-DD HH:mm:ss zzz', { timeZone: 'Europe/Paris', locale: enGB }) \n// 2014-10-25 10:46:20 CEST\nformat(parisDate, 'YYYY-MM-DD HH:mm:ss zzzz', { timeZone: 'Europe/Paris', locale: enGB }) \n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n**Caveat:** Note that when using a locale the language code of the locale should be added to the import\nsomewhere in the project so `format` can identify the locale. Once this library is absorbed into `date-fns`\nthis can be added to each locale natively.\n\n### `toDate`\n\nThe `toDate` function can be used to create a zoned Date from a string containing an offset or IANA \ntime zone, or by providing the `timeZone` option.\n\n```javascript\nimport { toDate, format } from 'date-fns-tz'\n\n// Offsets in the date string work as usual and take precedence\nconst parisDate = toDate('2014-10-25T13:46:20+02:00')\nformat(parisDate, 'YYYY-MM-DD HH:mm:ssZ', { timeZone: 'Europe/Paris' }) // 2014-10-25 13:46:20+02:00\n\n// Since toDate simply clones a Date instance timeZone option is effectively ignored in this case\nconst date = new Date('2014-10-25T13:46:20Z')\nconst clonedDate = toDate(date, { timeZone: 'Europe/Paris' })\nassert(date.valueOf() === clonedDate.valueOf())\n\n// When there is no offset in the date string the timeZone property is used\nconst bangkokDate = toDate('2014-10-25T13:46:20', { timeZone: 'Asia/Bangkok' })\nformat(bangkokDate, 'YYYY-MM-DD HH:mm:ssZ', { timeZone: 'Asia/Bangkok' }) // 2014-10-25 13:46:20+07:00\n\nconst nyDate = toDate('2014-10-25T13:46:20 America/New_York')\nformat(nyDate, 'YYYY-MM-DD HH:mm:ssZ', { timeZone: 'America/New_York' }) // 2014-10-25 13:46:20-04:00\n```\n\n**Note:** Since the Intl API does not provide a way to parse long or short time zone names the `parse`\nfunction cannot be supported using this approach.\n\n## Credit\n\nThe idea of using the Intl API for time zone support was inspired by the [Luxon](https://github.com/moment/luxon)\nlibrary. \n\nThe initial port of the idea into date-fns was done by [@benmccan](https://github.com/benmccann) in \n[date-fns/#676](https://github.com/date-fns/date-fns/pull/676).\n\n## Alternatives\n\nThe [`date-fns-timezone`](https://github.com/prantlf/date-fns-timezone) library provides similar functionality\nfor `date-fns` version 1 by bundling time zone data. This does have the advantage of making parsing time zone \nlong and short names possible.\n\n## License\n\nMIT © Marnus Weststrate\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.6-beta.1",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-5xrZKqbyEf6nsfHI/cE2q4Pw7ysXWMAWSljrdJx8mZomA5YflD6Qm556vOJ4/MPgK657u57mFRMUNFUJU2jUBw==",
        "shasum": "f77f8ec7f434c8ebc91eccc2d00437c8e741c53c",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.6-beta.1.tgz",
        "fileCount": 120,
        "unpackedSize": 167102,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcSyQaCRA9TVsSAnZWagAAj5YP/1WyRJUawpimcFpwIXil\nDnebM3GMu93FIEaz1vVtDjecthDexMG9lNMNQ+AK15P+Aa5wkowgBkiH/Fw3\nMabJKNnG0uxJOjR3YbrsH0wm2t3p97PByNbBZ4sJohoBez2B/bo6xlGcCTrg\npX59eUdFiMQY+2h2XNiaWeK1aOn4l0OqSneOxF44/GWmdawpOGjmRxmF7bUI\nLUAF7xkgFO5z6VOUAMxkPSftfWISnZJExVmcXnKERDxBpcsSXWqlTfZGSR9p\nLP+/JVBi9CAZmOIqodBoXJTMF8JVholVQUlUOtKZI5kONbOuvUqqVn4QGhpU\njSX+Mc07TJg3RhikU/XHD5sRlDkVN6vGvH0DXlOFEikbTWt8QLTzyFQ61bML\neqC7Rs6lUSwz88aumIr/CHpBddC29p6lWXcAtBNFA03+C9SRLGIcICuZ0DMG\nA4PejYsFDpzsvNt18shPwD2cG7YEb/ariE1b6xOoaHxVqbc0egTAqrYxMxNG\nyDrTz0qCCVHheoxEG7yYj1gbVABKT1vGb/9yuenUyrriqr6cGnu9IqbnbVIK\nvK7QoglyDMNkn1g69YtA3pc7yF+E+06STzMvFXvax4s+FMTPMh8LXYM6plpY\nA5NvRVg6rQ1tS97wEXAq/NMSgUiA1sIzNHM1IYvbJdYW5qY51/D34X0y1IzP\nsOoL\r\n=eyze\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICOYu07XUDj3JcxNLxSwD/uEAj5g9/1Jft9jR1jXgAKyAiAyvqGHirgp9W5vXWoo/+mDVUrt7ncItrcI9vs1uFeiLg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.6-beta.1_1548428313397_0.8276920945840498"
      },
      "_hasShrinkwrap": false
    },
    "1.0.6": {
      "name": "date-fns-tz",
      "version": "1.0.6",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.6",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-g0IY9CebRuyB5e2GIueO9mHpySpauMxSkbdkmVQEWi/R3w49ikYxC3dBNruGSOegwiNLI9cjuM0POZOFX0r8zQ==",
        "shasum": "76df64f4c29ec1e00ce48b5c5978161e191ca8cb",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.6.tgz",
        "fileCount": 120,
        "unpackedSize": 167358,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcVa2aCRA9TVsSAnZWagAAKJoP/2ySQEY3dhjbSX8Dpcn4\nBDfYsIn/fKfOMeiH8L+CsLl4ejnmBxOc5M5ulKayvAbO8C2ITxu60w0BrjFC\nEXJcSHfmZqJr4MpNIW7IBP3bLZCWQguJVSNSM9GFFRGUTW1HJnu1nD2opDhu\nleaGSfaL6qbcbhihE8csU/pZ4XGyq+Knl+qliGqAmLMSKicXWzxvpLhNxD6K\nV/8tyAWCpXuaQ5S722drG2DtHPbxI67NGIDXenVytnvwNnHs++63fTSMzIBy\ngDYu0eObB5syCmW911yZYjzUqKvgkuA9wwBE24w5rQSkANYVw2bVIAsdTbyR\nLLBBzJMqr2naCQW2U9AqrmKnf08B1yUJZSmOigoxaA1PkoURXPBmahnruHyC\nFmUYYbB+FvoNO47fDFDfigVRqyo1o1/cf5mYepZHNiVwGVMB5I7fCOKS+wuw\nCnZ4noEPJc+uLIzmbzfF3v/Ce5a4lVmnExMSRieDc/sAUxLgtxvwPEI+tHN5\n/xT9zbL+ehAVRJGOc/0twuvy21qkaJ1nxdB8wUsdnmVrSwjUJicvuL13p0sP\n4IrKiWGmYbb305OtG3AqM27R7MI3CWnu0yIv2KRTFql63dH8x/CsVlwwiZiV\nGsv6zy83R35abpU7WtWxMXT3HP3xxr7fSSOy5T4zcNYW8GrZSPrRLuvjxCxP\nd7Is\r\n=oRhJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHBG4kj9CRJNxZdkWeHbUcux44bhrv5ss0sF0z0m/jfrAiEAmNktEVD5NmWBUiN3OE2U1AMjB8FDauQyEkq8fp0jjsM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.6_1549118874108_0.5735969203355258"
      },
      "_hasShrinkwrap": false
    },
    "1.0.7-beta.1": {
      "name": "date-fns-tz",
      "version": "1.0.7-beta.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "readme": "# date-fns-tz\n\nTime zone support for [date-fns](https://date-fns.org/) v2.0.0.\n\nDependency free IANA time zone support is implemented via the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl) to keep \nactual time zone data out of code bundles. Modern browsers all support the \n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://github.com/yahoo/date-time-format-timezone) can be used.\n\nIf you do not wish to use a polyfill the time zone option can still be used, but only with\ntime zone offsets such as '-0200' or '+04:00' and not IANA time zone names.\n\n*This work was initially proposed in PR [date-fns/#707](https://github.com/date-fns/date-fns/pull/707), but won't\nbe considered until `date-fns` version 2 has been released. It is my hope that these features will eventually \nmake it into `date-fns` or at least contribute to the conversation and that this project will be deprecated.* \n\n## Table of Contents\n\n- [Overview](#overview)\n- [Time Zone Helpers](#time-zone-helpers)\n    - [`zonedTimeToUtc`](#zonedtimetoutc) - Get the UTC date/time from a date representing local time in a given time zone\n    - [`utcToZonedTime`](#utctozonedtime) - Get a date/time representing local time in a given time zone from the UTC date\n- [Time Zone Formatting](#time-zone-formatting)\n    - [`format`](#format) - Extends `date-fns/format` with full time zone support\n    - [`toDate`](#todate) - Can be used to create a zoned Date from a string containing an offset or IANA time zone\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another \ntime zone's local time, other than the current system's, like on a Node server or when showing the time \nof an event in a specific time zone, like an event in LA at 8pm PST regardless of where a user resides.\n\nIn this case there are two relevant pieces of information: \n - a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n - the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/New_York`).\n\nLibraries like Moment and Luxon, which provide their own date time classes, manage these timestamp and time \nzone values internally. Sine `date-fns` always returns a plain JS Date, which implicitly has the current \nsystem's time zone, helper functions are provided for handling common time zone related use cases. \n\n## Time Zone Helpers\n\nTo discuss the usage of the time zone helpers let's assume we're writing a system where administrators set\nup events which will be start at a specific time in the venue's local time, and this local time should be \nshown when accessing the site from anywhere in the world.\n\n### `zonedTimeToUtc`\n\n**Get a date with the correct UTC time for the date/time in a specific time zone**\n\n```js\nzonedTimeToUtc(date: Date|Number|String, timeZone: String): Date\n```\n\nSay a user is asked to input the date/time and time zone of an event. A date/time picker will typically \nreturn a Date instance with the chosen date, in the user's local time zone, and a select input might \nprovide the actual IANA time zone name. \n\nIn order to work with this info effectively it is necessary to find the equivalent UTC time:\n\n```javascript\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst date = getDatePickerValue()     // e.g. 2014-06-25 10:00:00 (picked in any time zone) \nconst timeZone = getTimeZoneValue()   // e.g. America/Los_Angeles\n\nconst utcDate = zonedTimeToUtc(date, timeZone)  // In June 10am in Los Angeles is 5pm UTC\n\npostToServer(utcDate.toISOString(), timeZone) // post 2014-06-25T17:00:00.000Z, America/Los_Angeles\n```\n\n### `utcToZonedTime`\n\n**Get a date/time in the local time of any time zone from UTC time**\n\n```js\nutcToZonedTime(date: Date|Number|String, timeZone: String): Date\n```\n\nSay the server provided a UTC date/time and a time zone which should be used as initial values for the above form.\nThe date/time picker will take a Date input which will be in the user's local time zone, but the date value \nmust be that of the target time zone.\n\n```javascript\nimport { utcToZonedTime } from 'date-fns-tz'\n\nconst { isoDate, timeZone } = fetchInitialValues()  // 2014-06-25T10:00:00.000Z, America/New_York\n\nconst date = utcToZonedTime(isoDate, timeZone)    // In June 10am UTC is 6am in New York (-04:00)\n\nrenderDatePicker(date)          // 2014-06-25 06:00:00 (in the system time zone)\nrenderTimeZoneSelect(timeZone)  // America/New_York\n```\n\n## Time Zone Formatting\n\n### `format`\n\nThe `format` function exported from this library extends `date-fns/format` with full time zone support:\n\n- The `z..zzz` Unicode tokens: *short specific non-location format*\n- The `zzzz` Unicode token: *long specific non-location format*\n- Using the name of any IANA time zone or offset by specifying a `timeZone` option;\n  when using this option the `x..xxxxx`, `X..XXXXX` and `O..OOO` tokens will also use the provided\n  time zone rather than the system time zone.\n\n```javascript\nimport { format, utcToZonedTime } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\nconst nyTimeZone = 'America/New_York'\nconst parisTimeZone = 'Europe/Paris'\n\nconst nyDate = utcToZonedTime(date, nyTimeZone)\nconst parisDate = utcToZonedTime(date, parisTimeZone)\n\nformat(nyDate, 'YYYY-MM-DD HH:mm:ssXXX', { timeZone: 'America/New_York' })  // 2014-10-25 06:46:20-04:00\nformat(nyDate, 'YYYY-MM-DD HH:mm:ss zzz', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20 EST\nformat(parisDate, 'YYYY-MM-DD HH:mm:ss zzz', { timeZone: 'Europe/Paris' })  // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\nenGB.code = 'en-GB'\nformat(parisDate, 'YYYY-MM-DD HH:mm:ss zzz', { timeZone: 'Europe/Paris', locale: enGB }) \n// 2014-10-25 10:46:20 CEST\nformat(parisDate, 'YYYY-MM-DD HH:mm:ss zzzz', { timeZone: 'Europe/Paris', locale: enGB }) \n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n**Caveat:** Note that when using a locale the language code of the locale should be added to the import\nsomewhere in the project so `format` can identify the locale. Once this library is absorbed into `date-fns`\nthis can be added to each locale natively.\n\n### `toDate`\n\nThe `toDate` function can be used to create a zoned Date from a string containing an offset or IANA \ntime zone, or by providing the `timeZone` option.\n\n```javascript\nimport { toDate, format } from 'date-fns-tz'\n\n// Offsets in the date string work as usual and take precedence\nconst parisDate = toDate('2014-10-25T13:46:20+02:00')\nformat(parisDate, 'YYYY-MM-DD HH:mm:ssZ', { timeZone: 'Europe/Paris' }) // 2014-10-25 13:46:20+02:00\n\n// Since toDate simply clones a Date instance timeZone option is effectively ignored in this case\nconst date = new Date('2014-10-25T13:46:20Z')\nconst clonedDate = toDate(date, { timeZone: 'Europe/Paris' })\nassert(date.valueOf() === clonedDate.valueOf())\n\n// When there is no offset in the date string the timeZone property is used\nconst bangkokDate = toDate('2014-10-25T13:46:20', { timeZone: 'Asia/Bangkok' })\nformat(bangkokDate, 'YYYY-MM-DD HH:mm:ssZ', { timeZone: 'Asia/Bangkok' }) // 2014-10-25 13:46:20+07:00\n\nconst nyDate = toDate('2014-10-25T13:46:20 America/New_York')\nformat(nyDate, 'YYYY-MM-DD HH:mm:ssZ', { timeZone: 'America/New_York' }) // 2014-10-25 13:46:20-04:00\n```\n\n**Note:** Since the Intl API does not provide a way to parse long or short time zone names the `parse`\nfunction cannot be supported using this approach.\n\n## Credit\n\nThe idea of using the Intl API for time zone support was inspired by the [Luxon](https://github.com/moment/luxon)\nlibrary. \n\nThe initial port of the idea into date-fns was done by [@benmccan](https://github.com/benmccann) in \n[date-fns/#676](https://github.com/date-fns/date-fns/pull/676).\n\n## Alternatives\n\nThe [`date-fns-timezone`](https://github.com/prantlf/date-fns-timezone) library provides similar functionality\nfor `date-fns` version 1 by bundling time zone data. This does have the advantage of making parsing time zone \nlong and short names possible.\n\n## License\n\nMIT © Marnus Weststrate\n",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.7-beta.1",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-O3jINnKcIK6OLn1Vm9mzVxWlojoT1vAf2kVOa1bbEgY3feTSJMIFU6Vu+1bfxoupHckeEKO7YP2SHyqVIokyEg==",
        "shasum": "af7f587bdc39b97caf0253eb755557fa51fec69a",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.7-beta.1.tgz",
        "fileCount": 120,
        "unpackedSize": 166870,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcVbK+CRA9TVsSAnZWagAAwDcP/1o6HMMz38keOsPONwFd\nmNwpSQHWldP1TCWMCNHLSmF3/AjKi69k9G17DcXYm53UX5hbssn5gTIoeC/K\nmYURv7PkLix+sCBdhku6gAKAbH4X93tLJiQavCEPR0B8HQnU058KM8RZTn68\nTSzGJwAslKNJiAsi6BhKYHw5yG+5hV/S9rPJvnbWlhZ0oWZyPRxcLfdhnqW7\nKMBIAitqi17+gTWa9g6z8rlcEiDTQ2vtlbVmMwPr0IsFa/pPk5nfjb/AB/H4\n5nuCXym93JB1Tnxfu6pkciRS6n3G3ArazsTaRcnhJQHx7c89ouHGi3aMzLMb\nXiSrn/pm+rOSBNj7i7TIDb1uigJz7RGbYaXkgk7LzoxVDyG/aP/XfGjb2nLB\n8ELP3w2ghX45ZYyCAylQNiTDZHJCCG3/u3x+ApE/GGvk+fIUjRmmjM8WK+Pw\nEmasQSAGhg+V5X6tQ2Lq9XowsC5uIiyBgUj3FpXqW3ziSbLiJly7ZVvtg5xF\ntg56WQXY+7Y85nDsy6jSeK382z6vscHClh4b8tu0+RaL0UMjoa9uVHw6j/Yb\nYVPpgDXvH05Sc49mgpCEjvnkXW4x8K3dh9ATMkLFio67KoXN9PkkvuWjlxzT\ntynQsoWgav/O2n1WXUkAfSouHMjI0XjfxNjxiQ0cRQwTvxZcmvVtlRqdJw5c\n2FYy\r\n=zSgN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAvHIRqs5z93QX4Ufc7qX+/l9W0L+nzLl48MavWcuom1AiEAzXx+j3vxUQO2RhsWQ0en+cV9qLM7ELhYvljdN5ZmntI="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.7-beta.1_1549120189918_0.6265218188213295"
      },
      "_hasShrinkwrap": false
    },
    "1.0.7": {
      "name": "date-fns-tz",
      "version": "1.0.7",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.7",
      "_npmVersion": "6.1.0",
      "_nodeVersion": "10.6.0",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-oNfi/3IxRfmysRIT+QJMbO/44Uj10nApAYJvlayTmNRFZG+JqdOJYXm1DWU65DNlG/ySbuQwpFkGIa3b2XFUVw==",
        "shasum": "1c80f7592cca5da4fd2085132936dcc7fa9afecd",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.7.tgz",
        "fileCount": 120,
        "unpackedSize": 166863,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXp6VCRA9TVsSAnZWagAAgm0QAJbkq/W9vShOz0dNclxo\nWOq0V3DQp6yXZ3M7oBRqtPFBClT/OjSINiXO6qgbojajJeaB7I40QWP/sGDp\nYfIiM0fOdXAdJk6v3J1CJs414ERzsvruw887P8NTckqwcFmtyMFBz3doVlyZ\nyA+G+n+1RyyGwMJ3F1HmOjnMSO4aVCSgqKFZrUKbL+ITISViJQT5rA7vj993\nhDGOF2XU+A3n/9Bn+lxcClknyWLK9cNVqjcbSyWeUYut3GjOia8rpJy0DTH8\nttRjQF3iIHaLeVUaodcuSEnMrIB2GAnr2l2nY6KtY2oQzoGBW2DjqCFAmwfj\nUstw1u5CHaby6bpym2Bl3dn71OfhIxtSx2vCzXlNoIi43NU0ez4DVQXZfvEJ\nRssTrDRbXtPLMWYNXVrN2vqCEWNBWiH0OGfTtASUP/1lOBhjNVelJSeX/bgq\niJZP3DtRqF6NWnG575IvcPUcp94BuiJ6CojT6wMDuc8Uxc61LFaS4KblOtYX\nR2DTZyIOxqZCKZEqIZHpXw+ATBH+g5kJsFLPeSvGq+nUkE3dz2O9Bb13D5zW\nVk0vg93RRCzsUI55sBYY9NMje3OJ+rYPy8kSmG52AEmMn7mKH3eQHX4eEoan\nLjnJwHOPcOGpRo2g7i3C8HnyQ2Yj0+TuQdFrfeikh1lcQjh4Mi8uvX2WOAmp\nF3Og\r\n=JOP7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBzvzQRvZyuhmKc+HqwOQUgYaTO5ERmerTHRQ7uwQpkCAiBADRYj3MJEE45Mdl9ZJIFZUIv7rcjD/4qCQRbiU69VxA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.7_1549704852619_0.30664662209360194"
      },
      "_hasShrinkwrap": false
    },
    "1.0.8-beta.1": {
      "name": "date-fns-tz",
      "version": "1.0.8-beta.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "prettier": {
        "singleQuote": true,
        "semi": false
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "babel": "^6.5.2",
        "babel-cli": "^6.6.5",
        "babel-eslint": "^8.2.1",
        "babel-loader": "^6.2.8",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-preset-es2015": "^6.6.0",
        "babel-preset-power-assert": "^1.0.0",
        "date-fns": "next",
        "flow-bin": "0.84.0",
        "fs-promise": "^1.0.0",
        "husky": "^1.1.1",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.0.0",
        "karma-benchmark": "^1.0.0",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sauce-launcher": "^1.2.0",
        "karma-sinon": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^3.0.5",
        "lint-staged": "^7.1.1",
        "lodash": "^4.17.4",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^3.2.0",
        "power-assert": "^1.3.1",
        "prettier": "^1.14.3",
        "sinon": "^1.17.3",
        "webpack": "^1.12.0"
      },
      "readme": "# date-fns-tz\n\nTime zone support for [date-fns](https://date-fns.org/) v2.0.0.\n\nDependency free IANA time zone support is implemented via the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl) to keep \nactual time zone data out of code bundles. Modern browsers all support the \n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://github.com/yahoo/date-time-format-timezone) can be used.\n\nIf you do not wish to use a polyfill the time zone option can still be used, but only with\ntime zone offsets such as '-0200' or '+04:00' and not IANA time zone names.\n\n*This work was initially proposed in PR [date-fns/#707](https://github.com/date-fns/date-fns/pull/707), but won't\nbe considered until `date-fns` version 2 has been released. It is my hope that these features will eventually \nmake it into `date-fns` or at least contribute to the conversation and that this project will be deprecated.* \n\n## Table of Contents\n\n- [Overview](#overview)\n- [Time Zone Helpers](#time-zone-helpers)\n    - [`zonedTimeToUtc`](#zonedtimetoutc) - Get the UTC date/time from a date representing local time in a given time zone\n    - [`utcToZonedTime`](#utctozonedtime) - Get a date/time representing local time in a given time zone from the UTC date\n- [Time Zone Formatting](#time-zone-formatting)\n    - [`format`](#format) - Extends `date-fns/format` with full time zone support\n    - [`toDate`](#todate) - Can be used to create a zoned Date from a string containing an offset or IANA time zone\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another \ntime zone's local time, other than the current system's, like on a Node server or when showing the time \nof an event in a specific time zone, like an event in LA at 8pm PST regardless of where a user resides.\n\nIn this case there are two relevant pieces of information: \n - a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n - the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/New_York`).\n\nLibraries like Moment and Luxon, which provide their own date time classes, manage these timestamp and time \nzone values internally. Sine `date-fns` always returns a plain JS Date, which implicitly has the current \nsystem's time zone, helper functions are provided for handling common time zone related use cases. \n\n## Time Zone Helpers\n\nTo discuss the usage of the time zone helpers let's assume we're writing a system where administrators set\nup events which will be start at a specific time in the venue's local time, and this local time should be \nshown when accessing the site from anywhere in the world.\n\n### `zonedTimeToUtc`\n\n**Get a date with the correct UTC time for the date/time in a specific time zone**\n\n```js\nzonedTimeToUtc(date: Date|Number|String, timeZone: String): Date\n```\n\nSay a user is asked to input the date/time and time zone of an event. A date/time picker will typically \nreturn a Date instance with the chosen date, in the user's local time zone, and a select input might \nprovide the actual IANA time zone name. \n\nIn order to work with this info effectively it is necessary to find the equivalent UTC time:\n\n```javascript\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst date = getDatePickerValue()     // e.g. 2014-06-25 10:00:00 (picked in any time zone) \nconst timeZone = getTimeZoneValue()   // e.g. America/Los_Angeles\n\nconst utcDate = zonedTimeToUtc(date, timeZone)  // In June 10am in Los Angeles is 5pm UTC\n\npostToServer(utcDate.toISOString(), timeZone) // post 2014-06-25T17:00:00.000Z, America/Los_Angeles\n```\n\n### `utcToZonedTime`\n\n**Get a date/time in the local time of any time zone from UTC time**\n\n```js\nutcToZonedTime(date: Date|Number|String, timeZone: String): Date\n```\n\nSay the server provided a UTC date/time and a time zone which should be used as initial values for the above form.\nThe date/time picker will take a Date input which will be in the user's local time zone, but the date value \nmust be that of the target time zone.\n\n```javascript\nimport { utcToZonedTime } from 'date-fns-tz'\n\nconst { isoDate, timeZone } = fetchInitialValues()  // 2014-06-25T10:00:00.000Z, America/New_York\n\nconst date = utcToZonedTime(isoDate, timeZone)    // In June 10am UTC is 6am in New York (-04:00)\n\nrenderDatePicker(date)          // 2014-06-25 06:00:00 (in the system time zone)\nrenderTimeZoneSelect(timeZone)  // America/New_York\n```\n\n## Time Zone Formatting\n\n### `format`\n\nThe `format` function exported from this library extends `date-fns/format` with full time zone support:\n\n- The `z..zzz` Unicode tokens: *short specific non-location format*\n- The `zzzz` Unicode token: *long specific non-location format*\n- Using the name of any IANA time zone or offset by specifying a `timeZone` option;\n  when using this option the `x..xxxxx`, `X..XXXXX` and `O..OOO` tokens will also use the provided\n  time zone rather than the system time zone.\n\n```javascript\nimport { format, utcToZonedTime } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\nconst nyTimeZone = 'America/New_York'\nconst parisTimeZone = 'Europe/Paris'\n\nconst nyDate = utcToZonedTime(date, nyTimeZone)\nconst parisDate = utcToZonedTime(date, parisTimeZone)\n\nformat(nyDate, 'yyyy-MM-dd HH:mm:ssXXX', { timeZone: 'America/New_York' })  // 2014-10-25 06:46:20-04:00\nformat(nyDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20 EST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/Paris' })  // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\nenGB.code = 'en-GB'\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/Paris', locale: enGB }) \n// 2014-10-25 10:46:20 CEST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzzz', { timeZone: 'Europe/Paris', locale: enGB }) \n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n**Caveat:** Note that when using a locale the language code of the locale should be added to the import\nsomewhere in the project so `format` can identify the locale. Once this library is absorbed into `date-fns`\nthis can be added to each locale natively.\n\n### `toDate`\n\nThe `toDate` function can be used to create a zoned Date from a string containing an offset or IANA \ntime zone, or by providing the `timeZone` option.\n\n```javascript\nimport { toDate, format } from 'date-fns-tz'\n\n// Offsets in the date string work as usual and take precedence\nconst parisDate = toDate('2014-10-25T13:46:20+02:00')\nformat(parisDate, 'yyyy-MM-dd HH:mm:ssZ', { timeZone: 'Europe/Paris' }) // 2014-10-25 13:46:20+02:00\n\n// Since toDate simply clones a Date instance timeZone option is effectively ignored in this case\nconst date = new Date('2014-10-25T13:46:20Z')\nconst clonedDate = toDate(date, { timeZone: 'Europe/Paris' })\nassert(date.valueOf() === clonedDate.valueOf())\n\n// When there is no offset in the date string the timeZone property is used\nconst bangkokDate = toDate('2014-10-25T13:46:20', { timeZone: 'Asia/Bangkok' })\nformat(bangkokDate, 'yyyy-MM-dd HH:mm:ssZ', { timeZone: 'Asia/Bangkok' }) // 2014-10-25 13:46:20+07:00\n\nconst nyDate = toDate('2014-10-25T13:46:20 America/New_York')\nformat(nyDate, 'yyyy-MM-dd HH:mm:ssZ', { timeZone: 'America/New_York' }) // 2014-10-25 13:46:20-04:00\n```\n\n**Note:** Since the Intl API does not provide a way to parse long or short time zone names the `parse`\nfunction cannot be supported using this approach.\n\n## Credit\n\nThe idea of using the Intl API for time zone support was inspired by the [Luxon](https://github.com/moment/luxon)\nlibrary. \n\nThe initial port of the idea into date-fns was done by [@benmccan](https://github.com/benmccann) in \n[date-fns/#676](https://github.com/date-fns/date-fns/pull/676).\n\n## Alternatives\n\nThe [`date-fns-timezone`](https://github.com/prantlf/date-fns-timezone) library provides similar functionality\nfor `date-fns` version 1 by bundling time zone data. This does have the advantage of making parsing time zone \nlong and short names possible.\n\n## License\n\nMIT © Marnus Weststrate\n",
      "readmeFilename": "README.md",
      "gitHead": "91e0a08a2422ee8989e1c3c5013b86bb08608624",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.8-beta.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.3",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-Qty03oHRlN5BR/LeTWTaiFKtZYq7CQY5y1YD32CR3SGlhQCjeAwot74r/XDM+QXRowWV/Dwmr3xIfd+jPCrLmg==",
        "shasum": "15df3e4188ec0e2c59697fbe91915860ca87878d",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.8-beta.1.tgz",
        "fileCount": 82,
        "unpackedSize": 377462,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdoC8JCRA9TVsSAnZWagAAY0AQAJqTPNHwqPRfmM0RsEWA\nQrUuAinqjzHzDDUdniCSjVIdxYQhM1L1gky17gWp1vC8xsrL51fIYWxk1J5v\nE7drkwtvrkFlj2zgEIbLWMkA2GMk1gH4Z6Z3wwtxKjThkig/KvzYXOwTPSpb\nIeD8tDCFB6jktfzh0H1R3Lcak+03zTA7Dzy8mjcB15kFOReS0KaGpgT4Zjb0\n7snS7Dzgv7vZQ0ZTZNMS4T+73hTEg6pP7nSpKUheSLoiCQY0u0G0zlmAlI7h\nuj3U/WAeIGhtwzDi4mFUdvJcU22gi5+pX5B+rSdHjUQSt4brR3bdL5f+7lzc\nzf2wq593hQNJPd/giQ+K/MoDkoqc8ZDKlh0iUTu75PI2WLxgAUWjEOq1iw5M\n0d6zS8ns7emoEnOuDlBIQbPwjNXES7jTKiBXG1ff7AYwMAnXZhqfn2doUHCp\nSZRvgQLgV4329V9ogWjXzC+7mpsqC8QpINkz77HUXWRnRr9U/vemYRQrcMSN\nPC7aZ58jPCqfwtm0eyLC2C/P7Ennfady+69PnOT2EY1FSpyGMVm6C9MKst6P\ndJzM1Ywd53DYqb4upkQK+GFR66k5Z7QopiKc+0ncD5LmLxMW8D6h7rR96RIR\njfgCDOwhHtuajs1Q03vBrHLAHIDM0AD6FcN1q7HZlGg+QxJtRghyEKodtxy0\nj/Am\r\n=xe+w\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDISPDoMSCb7faXnsRD9YXvsUEGGg846kfcyTMFpoi8xQIhAPn8s3aIalnpzgXQEgmTnWUFiWVBEZrUmlqM+AMDzWJg"
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.8-beta.1_1570778888764_0.6292691367034022"
      },
      "_hasShrinkwrap": false
    },
    "1.0.8": {
      "name": "date-fns-tz",
      "version": "1.0.8",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^2.3.3",
        "@typescript-eslint/parser": "^2.3.3",
        "babel-eslint": "^10.0.2",
        "babel-loader": "8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "date-fns": "latest",
        "eslint": "^6.5.1",
        "eslint-config-prettier": "^6.4.0",
        "flow-bin": "^0.109.0",
        "fs-promise": "^2.0.3",
        "husky": "^3.0.8",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^9.4.2",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^1.18.2",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.8",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.3",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-BWoRepQOHUx3GxcIn2zmhttL23sB1ogMpucECFyEN0jWv+AmEzatZvBaX1/J9ALQ46jK9/Fo73HmHejpgNEyaQ==",
        "shasum": "296809f745422aa28337fe4700607949623a6513",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.8.tgz",
        "fileCount": 120,
        "unpackedSize": 166499,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdoeYFCRA9TVsSAnZWagAAIAQP/2WLpAg2E3sI407mvp1C\nh+ivGNXwgzSD5FeQLoR5IxXMt2AyGAsS5tbJ60Eg1o+RS+/ERUFgLHv8zehA\nYr+QvkntFaVjhKT5tMWXk14l+KRubZ/+GLmvfryA7V6cZhegYS8x89SJjP13\nOVeCJTzeD0e5HBM2qXyFIiXIGeUosGZETdgC4uPH3YSiOP/anjcIeYFH6qXU\nagmV+qemdvd4kDQJJKsoXOPEjyUQscYkAQMUAmd0ey2oB0Dn5XeUpS4t+k5F\nCR3MUM7Xw4GNedHu1bisGidWgHI0cREPT9eB1OiMzzDopKOwhvTZXzwbSdSJ\n8lneNop8OibKFpUczFK2O3GDHTbXZW9pB0NfDROLlnCvc0GCSYLVKQrqSZEd\nPdix0i/611jDWaKV1rB6Bwsq8px2YkDvzN8n+JLtu6g/Hsyr9xdQdVO4U3Lx\nTmvrEgcH9CL+91ZepYqutvlwPIapt7dgm0volNGJsva7j+BjOX1mkJPeMQoh\n3eL/+5769xViti6yBwwDuL90SMNEV9r9YR5waAYLZD3R7ziKEJkjbvpojwwb\nUGZ1Gog8MTSf2vEnuMmg9SBfX7sfIZTj3riBaVYqEobEIAgtzBfmnjBmGo7V\n0JR8KK86p2ubSVF2WUmeAT4wVC8ZZyJi657Dij4ggR1mNDKUSqXFPjTagTon\nxSHV\r\n=O7zY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGPcPHrfM0pkkoNsUZ2amj2+Z6YuZNaqIOD9Ea1iuhU+AiEAyiXHro83uIkeAVA2oVxDZS/oKyaI6rtmB31XwBCFq/0="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.8_1570891268973_0.030774595135017346"
      },
      "_hasShrinkwrap": false
    },
    "1.0.9": {
      "name": "date-fns-tz",
      "version": "1.0.9",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^2.3.3",
        "@typescript-eslint/parser": "^2.3.3",
        "babel-eslint": "^10.0.2",
        "babel-loader": "8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "date-fns": "latest",
        "eslint": "^6.5.1",
        "eslint-config-prettier": "^6.4.0",
        "flow-bin": "^0.109.0",
        "fs-promise": "^2.0.3",
        "husky": "^3.0.8",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^9.4.2",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^1.18.2",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.9",
      "_nodeVersion": "12.10.0",
      "_npmVersion": "6.10.3",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-5VOe9FBMwhb3LjGttJhrxdgf6WrVwzu9HEU1H4KgJYAclt0UABmQhE/5jUaDsH7qktihxd22xF8zl6BChAYTAw==",
        "shasum": "71ca33b5b471f6cef71d6c1ec7365e7e0b47b412",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.9.tgz",
        "fileCount": 120,
        "unpackedSize": 166822,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeB3/yCRA9TVsSAnZWagAApwkP/jM5nRexrnS+FTi4QLYm\nM1Ej510P7JVokcWOsCpJIC5UccONEXjFbsoFKrue1e2yn7+zJR2j7eOZT4So\nfc/nwpdCBRDvpSN+bOz3m6/APk0nkIc+8BJP77tCiKCQ0zOkL9Su6CKYGS7J\nTQbIf3YLTZzkMNNVWUcFJNM5++U9q0J0/MDEWxE4Ywg2hAIEnVKm8S+uieSQ\nogeCH5Os8LhvRzcuLZP5FnDalReQdBv8432niMFdclok/XmT1bLNPU6Gk5cl\nbkCDlvCDKHyqHJiEbdWgGg6c/4HBSEtxFSjBP4/HJiz4DMMg6C2/LU8uIZ/N\nUCrx/rpwLb9WBd3Wm0rkMw0pSrSEa2R6CvFV/dSF66kvnvo4OOAAQAq4ZNH4\npvmYHVvHFnwtndO+xTDKcwjev2iMPApXa9V9uVJLHMaIXyUirUAMQPkwWSfW\njXUhTWwGRbXl14hXdBgmgxMm98bdqNcRRYxeaa30SSZy18GTHoKKD+tlABG9\nQN1QhULubiIKZq4/dsqbgU+d4Jm+9tYKO3L00zK+hxpQ7VSRmRtmZCBIeOs7\nz1tlpZ3fm+3bwwI3VF8XYPbxBk+ugj+UATwhssG/zXvclWLsMkVvOMG++9Ku\nl1V8X4Doo0OX2O+e4wPpw92d329vnl4E5J7H4s8I1zgD1e2K/AGMeKeDh6yb\ntMLX\r\n=gDR7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQChhHkij4I3gVaR4hOpBe+/4bWm/kXnLo6TGOIWsZzU+QIhAO8h63p67kl5cGLwff6UA7uNusVXhQul/Cc1VXZLm4Zy"
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.9_1577549809984_0.7803886870217465"
      },
      "_hasShrinkwrap": false
    },
    "1.0.10": {
      "name": "date-fns-tz",
      "version": "1.0.10",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^2.3.3",
        "@typescript-eslint/parser": "^2.3.3",
        "babel-eslint": "^10.0.2",
        "babel-loader": "8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "date-fns": "latest",
        "eslint": "^6.5.1",
        "eslint-config-prettier": "^6.4.0",
        "flow-bin": "^0.109.0",
        "fs-promise": "^2.0.3",
        "husky": "^3.0.8",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^9.4.2",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^1.18.2",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.10",
      "_nodeVersion": "12.10.0",
      "_npmVersion": "6.10.3",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-cHQAz0/9uDABaUNDM80Mj1FL4ODlxs1xEY4b0DQuAooO2UdNKvDkNbV8ogLnxLbv02Ru1HXFcot0pVvDRBgptg==",
        "shasum": "30fef0038f80534fddd8e133a6b8ca55ba313748",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.10.tgz",
        "fileCount": 120,
        "unpackedSize": 168554,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQTFPCRA9TVsSAnZWagAAVlMP+QCkbWOFue9yo3cOZ/dO\n3AD+8sii4YxBt8CT2tWro8bnFwS0zAiK0BYKR1WJAylgM+LQ543TwwQQwJmr\nh3DXLd9lq05djpSKP52hokE1oUHG0BMKTC8eHEnjO0eBBHeVtBg17hcqxRqr\nPYS7sWWrjMxC8wBbZ6qozXR1UQKOoAC7tbS/fZOvR8Zy+aWdc6aWlRb87xBD\n2l1ERFdSrELBg1lzuBlwx4jnnSN5dOLCy/BtCL18krFn6DcCEWmFpIzdUtVu\nstojJJDDL9bYvCS/cr3wmQ1BPc+4ZCZA1yEsRxZNRqf4cey53CKIPD2P6d4u\nlU6zAzoOVVLwgeXkzYMmO5NOQpoOyfYMG/dmmk/vUhqXklKkiXVV/oD0KgAF\nwV3IAwEg41gXQX2pg17mtpylk9dihNSpoov8Arwp14fwwXamGJShSaSjdFsb\nXyNmpcb4BguMnHXEmjEOanBaNu6cKEJ77iOKe49u5BmUusEeszLDFJwmXhQn\nzaOLHTJoOCgFhvTm729V0MVfq37jEyXZhPTs6DYeUP9h7Cizz65YMHff5wTN\nI6SHZGLWqFHJ0k8L8lIyZuBYnE1l0GlugSf5tOtcy8WWW0qQzAyNu5ALjOk4\nMeHndCYZPsx9LcEY2NE5BKk7ZTo8otCZkkoqoHCa5G25nOptmvf+L/5F1JNX\ndUqW\r\n=nMQ2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDduxOcrZwSwOgAkRfA5S/nQStvweCcWwMZYWmSsHXQlwIgBCCLApGo/M8LIkafhlwa/k5lr/9dOB5wSkjsndYWut8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.10_1581330766541_0.17156456711262424"
      },
      "_hasShrinkwrap": false
    },
    "1.0.11": {
      "name": "date-fns-tz",
      "version": "1.0.11",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^2.3.3",
        "@typescript-eslint/parser": "^2.3.3",
        "babel-eslint": "^10.0.2",
        "babel-loader": "8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "date-fns": "latest",
        "eslint": "^6.5.1",
        "eslint-config-prettier": "^6.4.0",
        "flow-bin": "^0.109.0",
        "fs-promise": "^2.0.3",
        "husky": "^3.0.8",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^9.4.2",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^1.18.2",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.11",
      "_nodeVersion": "12.15.0",
      "_npmVersion": "6.13.4",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-nrgEo+rCw1g5KFsIfcnaAIMPg5l6rV5fwlfoPeiGpgctUPiEVI1KNyDY0HXl/LWXpPhTPK4e6SInuPA+bZKBDg==",
        "shasum": "e7d9ceea5ff29280e0ed11a436ac01e10bbc5754",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.11.tgz",
        "fileCount": 120,
        "unpackedSize": 168517,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfexn2CRA9TVsSAnZWagAAVrMP/1kyczOsGlFSBmnW5DNi\nR44aFQTRhVgA3aTho1cPb12TYuNjFVdrq6YpIe+8FYTYYK8X0nWIStR6N571\nLcUoJc1hZrl0z/gfYd4ZAQhjr5X/K2zWs7uwsIRpnEeCpyQ2zFxe4FGz5V4c\nWIwqjBbtxzoU2BhO15s3I/0gvUi/w00Xruqwm5IduDSc9qoX0cAbQI4fhEN4\nFBiRFE3j20r7L6Q7eqSH4hVUn2EG45gSH9liFgtQ+EnZzoQQmQIvfO8RNtzP\n2p0698TWXDaposxwH/RafDQ5+SQpLJdC3OHpQWmjnLGP3NTRLowCknLHw5X8\nz38j5tuV1AGLTgrR/19iLjebVFoTt6eR4uuLdcui+i/9w2bMXhuAwgmR/iid\nhLQ/xJ2t9o7kGBwf+Tvh4CK2DceudA1Kb5TITDRUPa5q7rI0gMTtBpnTZTTQ\nEXDdvh9AfhyM9t8Z+h9ngWraedPRbNVNaZrhxBhM+lig0u0ND6FiMsZHaH0Z\nIzEYrhd4a2+0o4/OzoOmFqScATIMG4V1SxyUJNK6u7TzmDRPTPC+9vp4Kwxh\nKcfsEA4aAVKg5P030dvMyxWCMFFDylWpLtBwWfkSRa+aNlDS+QXl1d/hb24I\nGU2gr2wMxwRlksnBsxMb8YvAzCZ6apZnCHIwsMNEbRaeqmcBGUyX5w4NxdCr\nK7Xd\r\n=fFwu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDBfKFRq6xcIvHCJXx6+SuQL8NpyST6ZR++OkNpqjr/iwIhANmrgR7srnGBckjB3ZZTU3r/U3kjpiYeF/6GHU19MA89"
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.11_1601903087514_0.6709344044750265"
      },
      "_hasShrinkwrap": false
    },
    "1.0.12": {
      "name": "date-fns-tz",
      "version": "1.0.12",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "prettier --write",
          "git add"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^2.3.3",
        "@typescript-eslint/parser": "^2.3.3",
        "babel-eslint": "^10.0.2",
        "babel-loader": "8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "date-fns": "latest",
        "eslint": "^6.5.1",
        "eslint-config-prettier": "^6.4.0",
        "flow-bin": "^0.109.0",
        "fs-promise": "^2.0.3",
        "husky": "^3.0.8",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^9.4.2",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^1.18.2",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.0.12",
      "_nodeVersion": "12.15.0",
      "_npmVersion": "6.13.4",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-Ca+9pjGkU90XDHnclfSjz9o7g/ZqyYyYI0aCYmbf65P75oy8gktuaRslO3UPXl3ADgAnF9/KCykQkpU3/xvtWQ==",
        "shasum": "2d680e1099767775cff7a30eac34362d52639fed",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.0.12.tgz",
        "fileCount": 120,
        "unpackedSize": 168951,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfgJUsCRA9TVsSAnZWagAA5lwQAIjcFVWdS/tMaNAEvuxh\nCscEXyvw9TMU255MeJuyaagc/6czVfAtpBlZUQjT0ALWkl5ajGmhvlQIQ6KC\neU8RbL/mZTDraWWvi3bgPJYT5cZOWw0XxRUXvotrpR1OUYvoG6rS4dVEwdNx\ngwpffFzqn6Ffo/qRrq8DIi3LQbaADxSzqiEMggJAiX/cLFwr73BX37NTcf3a\nIIctOvB8qViKfoYfc5DBKOIhuMH6FbRXJZSy/4g7urUjZhHUuIkv4V720xqF\n9xGdkO76ipSjbVba5tEdmKxLuKZFhiwljpNVVrD9XrsGL54S6BshSTRJwpSs\niKlJetVqgswdzQzjNyiymKmdGgkbHZeJ9OEWvzCdl+46U2zop6Pw3VXl6i4f\ntRD/VQGGmb1rJfWCtwF8xUvMyxPu/l3oo8Vjl4YUE2/t2up2Th1hICPs87AT\nSYZaAORIUTWLcWMfoAkMvD/fOUAOLkA6eBi6hUKzCCkSw3QBvjhmBT7TypYU\nQ4/HuxRpuWefi7mfWGg0hiSeUFFukGdED+6pCWcrTttdQJzwzCeV7anTfPkE\ngeS7vwWBTqW1+XTa6Yow6Cc1g0jyeIj6fLfUsn613jDnT6H8fpiKLT3Kvo+6\nQ0OPZBtyA3OyJcg8w8AhHRKsnSwXyvyHzIr4ikf4IpXrDJbJu246rxGSHpkp\noqsa\r\n=zonY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDSMhptXRYaWqAKnVANG/DQNwQOPhT4YaMcREetXMHa7AIgLs2Q42daNT5pg0FO62ZIeSuGb0y+19/l+AC308IS+Go="
          }
        ]
      },
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.0.12_1602262315870_0.4893910556625891"
      },
      "_hasShrinkwrap": false
    },
    "1.1.0": {
      "name": "date-fns-tz",
      "version": "1.1.0",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.4.0",
        "@typescript-eslint/parser": "^4.4.0",
        "babel-eslint": "^10.0.2",
        "babel-loader": "^8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.16.1",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.1.0",
      "_nodeVersion": "12.15.0",
      "_npmVersion": "6.13.4",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-l9PW2A1fylHtKlcAQbtbTtxbykvgYlJx2+MDtjiA4Ivu47n01ZsT28E1BxBz6ckXQcWytZCOnEaclihRGfUVVw==",
        "shasum": "9f5c11e23316750f8e1761b89479f40ba3071b63",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.1.0.tgz",
        "fileCount": 136,
        "unpackedSize": 179653,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgFUHtCRA9TVsSAnZWagAAxQcP/2cpx+Qr2zLIn0yBiLS0\nPalF+JHfT3r+sCctclcuQUg1PTBLm6VHqd2pEsAiAXdjtZB5vc+4gGQnQDsB\n1jcHKzeQs8OnXtYCYosdSqF098fgrPGpVnvHQ4ckGSlB44vw590ojiu57X3b\n5vTvKU9LI1NqyKHwhycTddMnpRWBWoxBHHf3Ygk7Vlnke668qasE12N3Jk5k\n7ZKtDYNr3T+kGoTcG7xqt9UxtRKk87ZSJWFw5b34zJU8ZSL6NKK9tdQVUjkl\n+fkKo0xRNNB0vMmZ+buZeVMsdRsMQHn/60UJnqT1B9oT6xAmxK8WfIVvO+5C\nBj7+R6huXim2gliXHwmp7LSZdVPyXI1qXMvptCO3o5Uiq2GzraBiwKyiO8O8\nB96An4HxdUUp4UznVEBXyjbsoOEoJfhkBGMhXAA0SdqGGYD6KNFMOsoGVJDW\nQk7+CJ0PZqI6+UZ8Bx5fFCFzbnXt7eTXkNBI5V0zr69zjOGn8Irn+rx10JB6\nFylwwliVSpdXziXjwefYDZbqu4NXttIAhYnuxEEcPPMweVqaRMLymzih0ZDJ\nR/8bY9XFWW3XSHq69HRwNml4CjHntXQC+9dbrBY7OCbo9PDdZ8K0IRDbKqkc\nwNOX2OzlYPd0qD48t+ecW3OnkzdePzRtpjbnuIBhzzmu7d0kVV4vmy8gSQqi\n/RbE\r\n=ByrD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDoeSxsM7ZynUZFudII06rqWhtQGh/TD9EPfcqKYKqVxAiAB5CIMd8CVq/+yWJ6RVKlweD8PfDHpCcMDr56fBQRRJQ=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.1.0_1612005868433_0.9956649480767188"
      },
      "_hasShrinkwrap": false
    },
    "1.1.1": {
      "name": "date-fns-tz",
      "version": "1.1.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.4.0",
        "@typescript-eslint/parser": "^4.4.0",
        "babel-eslint": "^10.0.2",
        "babel-loader": "^8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.16.1",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.1.1",
      "_nodeVersion": "12.15.0",
      "_npmVersion": "6.13.4",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-5PR604TlyvpiNXtvn+PZCcCazsI8fI1am3/aimNFN8CMqHQ0KRl+6hB46y4mDbB7bk3+caEx3qHhS7Ewac/FIg==",
        "shasum": "2e0dfcc62cc5b7b5fa7ea620f11a5e7f63a7ed75",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.1.1.tgz",
        "fileCount": 136,
        "unpackedSize": 179768,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgFUM0CRA9TVsSAnZWagAAOcAP/RjHfcZtccLlL0V60dm7\nA6KBv8sxW+PUXkConLLv60DJpgE28ohj0zim9UJt6jYOSHL9neV7h4qCbVKL\nw3YMukz8sUCh108xFVekC6hIWXZA/aWMOeQ3K0p1A0WDLFlnw6ALwcaiZgui\neFySTDfmQhBv/WGrDEcCJwAO4Gnxd+wrnlJ5u3HHM05+PGzvaeDAIdZtHP+R\nvV5zf3kndzJNH5H92SSq/Pw09ZUvPBWMHTxWj7/0kOf/sxI86t2EO7NyFMeo\nuQ+WjB/px+W50WpDjBjAEnqM2jqKM3Rbflq01nvuuq/wy/yuz1RUmSO6i5ip\n5Pqf0QMlDj2ClyXeCdrCWW9aY2Ng/czyHkxL3WJIyWFHlYvw0RjY3YH9jEVd\ns8CGnr9HJqfxfUzhadbxoBPG9HTMqs64jUttZwQ2vPxSACqNCfM5QboQUYUL\npkXoIWJ/eGFK3KpGaMFS/RmwopWbufipKIOPdWK5L0IlS3EwoWaW+enPXqJ0\n2oHqdpkFVAKp3RCjgQi/PIm0GdWjuCwhGCN5QYWyrL43tWBk476cf+4JN7Qh\nbKkBC+l72vYoMrk4r10bLegFx9Lhh5PJBA9BGB9gktc2i6NMnvem6yd034bm\niFdiDhdklS8tKT7CU4McMuNoCz0BaJqcc0oAniOa3ox5L9IhloeBDRHC+EP4\n0I19\r\n=1zo/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAIgzvb6ih/LAERSG+leOxEVvqwDtC7gvj496AfIOLFtAiBxRfNIYch+NwQN3QDShFDmA3sQmN7DjKghwOcuwSwgaA=="
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.1.1_1612006196042_0.3549239159238624"
      },
      "_hasShrinkwrap": false
    },
    "1.1.2": {
      "name": "date-fns-tz",
      "version": "1.1.2",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.4.0",
        "@typescript-eslint/parser": "^4.4.0",
        "babel-eslint": "^10.0.2",
        "babel-loader": "^8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.16.1",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.1.2",
      "_nodeVersion": "12.15.0",
      "_npmVersion": "6.13.4",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-QY3KoLy16bERNTEhJV2UJfvQRcPOwneAGwLcKUyHYT1PKydYyEZ7rKJjo6tDvx3bXlQhbnvq7CrvbFlonR00AQ==",
        "shasum": "893c73026e20a8ae1bfb0c565dd2972df723776e",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.1.2.tgz",
        "fileCount": 136,
        "unpackedSize": 183066,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgMRE9CRA9TVsSAnZWagAAEgAQAJ428+MjgER6d2CB1FUp\nt4SYQxkwvuk0ISCysl6eIEcxnqNKbqWIQTlfpL9HipTvRWYR/TRrpVfp3MFj\nbX8yu7GfToiNfW0TyOKX3/l1OvmWHeeUbHly3hI8NEA8jGhdcEMNCtDTNfVy\nb8GPuv4s87eksR3vl3babPQQ+QoUVkisl10ReboPWBa7S2pgPpkY11md0HAW\nPTmuig26NucJqjiZ8u3Bosqm77sM/U9df/Fzp7i1OTLQfARyFmHhWV1LSVzJ\nUQOvGk1PZjEAAq+ukdljKUN4E7XhAVUk1hdY/d6ZVYaLraaTHTMd4OEpD2B2\njYH0Ov4lFq8IE+7/DOIb6QpXbZwxw00HibCt/Jb+A9zeqK9XOIvU7BzrgXn7\n5zdmEvDz35EbhJz72aVoUNPIO9U8uKF7H5tTmyBr7Zgeo/o1xkXEnmlVsYwJ\nAQbWlE+M+B+D6TWFvVAo3ScRrLLOi7H9h0aHP9sr07DwslneCQTiolz3XTWg\n9u37kTaua+A1+a0C8XJKT5eATTcNJ89PUqjbvHyt+IZnvaiiHDXmQByI4/9v\nv1y6eF3aGzPeMZIubeICEeSl2KFRn9Gh1mRkRU5yrwWemJ94ZggbkgBCz1EI\nyNbGMM2I01lhyHx6Fuko5bcmSFNfOAS7ceenjzKAdl2hHA95SR/malL0KuHh\nurKp\r\n=hLG1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDQs0Om8VGZCoxgMzjYVjfJU+j01Fuq5f6WteSZuTIQDAIhAIgvFp6vP+YEyA/rEldfVFJqCCW0jnRu05xlWqXfbAo7"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.1.2_1613828412854_0.9374827738645355"
      },
      "_hasShrinkwrap": false
    },
    "1.1.3": {
      "name": "date-fns-tz",
      "version": "1.1.3",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.4.0",
        "@typescript-eslint/parser": "^4.4.0",
        "babel-eslint": "^10.0.2",
        "babel-loader": "^8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.16.1",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.1.3",
      "_nodeVersion": "12.15.0",
      "_npmVersion": "6.13.4",
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "dist": {
        "integrity": "sha512-mD26WkejWz842RggjFrKsY6ehGgyBQSJ209mn83/vsjhgQ5WbdVvBzJ0CuosnGdklDxOvOppQ/wn1UgvTOPKPw==",
        "shasum": "8783489c9d90e5785548869af5bb8c4642a03855",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.1.3.tgz",
        "fileCount": 136,
        "unpackedSize": 183068,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgOi6BCRA9TVsSAnZWagAAVEkP/iVFTaNCZUNggPMaZ/zg\nVtsIMQgq71ClddTF3jUbmAEI3mIuACQ6hogKz0WXYe9swTUM6QdCo2VGQRXf\nZQko2VEKEI8HOvGap1zvJDzY98PFQBTsY/wXrWUrwpAaGJT1OgBnthvhOEBt\n4ULKkS/A4FtVHcq0QB74QRVjJT8PIhOAQq0C2uJXTL39hBuqy3t6ON/ahmTm\nxsY4L5EAoo39/iIf5a+QsePGcuYNYR2doJurcOunqUNnXMoV8peG+0N55qk3\nEXuTas2GtU6vA38oN4Q2L0PNRGe62LeNag98p0okebUKMZyc0g9MMtkhVxb9\nCuW7/2jvcjcGhBchr7Sjz0d89zAi3f+XKsIyox9HNUCJSEEobB/ibFsHL7wF\nhYyUGNXoIpW6LZ2Zi/SfA9QSj55uAYc0doI5TnUSIii4NwVdRweVWqeEu/gU\nf/sBPfr5duMfrFDCu91mcCJYU+pieCdRsVLXnHLW2hX+Yg1qSLm9aJukIePv\nd7+FqNQeYaVnpBeDd10BYfvTMoLfoHKgHuUT/VIT2LnZuzrLgVmLZMtEmitI\n4SHi2AmbrSLhB6XWfiIJOWRX3OhcMehS2Aq840vDmWgn5W1VrM0yOo4mqcGM\niPXW276mnza33YGuOTmdq4fi2QifYmrmI4CiA8bsc6AJL2HV34Z+o36Bak/o\nKsjg\r\n=eNlw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCF2g4vfrSHtBQhc/j4V4tZ9vql2a8QpcDgVrZdvsFroAIhALGHtXduHTH7bF074jGvOJ1Vai+ILmBe6ELx2ZyG8Ax6"
          }
        ]
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.1.3_1614425728802_0.5098961272347822"
      },
      "_hasShrinkwrap": false
    },
    "1.1.4": {
      "name": "date-fns-tz",
      "version": "1.1.4",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.4.0",
        "@typescript-eslint/parser": "^4.4.0",
        "babel-eslint": "^10.0.2",
        "babel-loader": "^8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.16.1",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.1.4",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-lQ+FF7xUxxRuRqIY7H/lagnT3PhhSnnvtGHzjE5WZKwRyLU7glJfLys05SZ7zHlEr6RXWiqkmgWq4nCkcElR+g==",
        "shasum": "38282c2bfab08946a4e9bb89d733451e5525048b",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.1.4.tgz",
        "fileCount": 136,
        "unpackedSize": 181289,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdg2sCRA9TVsSAnZWagAAP6IP/1mEyZnercFRd/2vCWFU\nzMsMjuShMan6oNhvvPYxuZ4U/PiRWrhkcs+J6iHT4CLbjjYKxF+20vqrLw6s\nSDXDvTTf4YnS+XQ2HRDaW8qCOcbM2Nil31pd7+hpImmbweej0g0EFAbJAJkx\nz0waFR8B5ZR9reskneLHcWij+8ZeQfPHPjbhVZffPnBOumtVmQgZ+epN87xj\nbkIx4GJ8eYSOsqT/33v1VW8YnfzjkS2iGWO7fn023+MWSd1pi+iGZeZAiG8B\nQOI9+ki6Se1p9PUzSeexGSbh1jNtXb4KlY5Hl8xUNCupQlQkxBI+o+CyrmV9\nbv2Y1SYHscqxkPnRybi9aubN7zGX8cu+6A1jUpxa3ee9oos1pltrAmwsVs/6\nddE1MxSDtRjpcp/xxnb+ysD12lz6RpcG28DHsnm4ACpuYTF/JSCyGWb2+pX2\n54QaO32alUvuu2iAj6MBpeyURt8NKq49xe7lgFlr4S0n2PTA7zLtKBKZx/73\n3SvW2F6fgzh5AzgE1kIRRAkAra4Pak9BgMtyQgyGMXNVqT0SNss3oLOoJxjB\nv6Twe6HAe5YxqFfSLz3rez5Rd5eZ/dgzJzWc7nqp/+5QZXTefce7lbbQ835m\n7eK7Hi2AzK96K2FJFh3qzZ4rJaSMqNZ7RFxw3hin4WUsSXiS5B2Y6Q3BmQ+C\nW2vI\r\n=Y8Fd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC0H5w4yop1sR4+EwVYPtV7UdfbCd/nl01Qdkcl8f1cMwIgIXq9ZepbWzcYosJmVridgnT+j1KWKg/q+Ad1TAk6c7E="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.1.4_1618349483592_0.8925027113178254"
      },
      "_hasShrinkwrap": false
    },
    "1.1.5": {
      "name": "date-fns-tz",
      "version": "1.1.5",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.4.0",
        "@typescript-eslint/parser": "^4.4.0",
        "babel-eslint": "^10.0.2",
        "babel-loader": "^8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.16.1",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.1.5",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-6Gka82FhZJ1ejE+EBWWWdRRa8AHUfO2K0Jf077aEKsA2TfB4amsDOQLk/mU/9SfVh4miz2gGeqlneD4BKd7VjQ==",
        "shasum": "5bffad5df41c1f567e0293a3236ef75ee7361fc5",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.1.5.tgz",
        "fileCount": 136,
        "unpackedSize": 181484,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg/7nwCRA9TVsSAnZWagAAdmEP/RhZVHMUY7bRFeigcosP\nmNB3bf07A2ySZ2IPJuW/+cxmki5LKkHXz6N18QzIlrcSwRRRV7aXdUnptHH9\nHqaNtfrw5/cGeOVpLYJ84m3B/jFvYsBx1SrmbuJCPY2S77z9yoHch8qLac3W\nVXlDS38yI/Hptf3Isj7muNQgMU68o/8uRek6ifafWoUMFM4V8mYgtmmt6qwA\n9St6BQbfIp7ImWVCkRnQ61/+hUw+omQpd+0aQAM6MCMk/LiatMJVWHajNPee\nWnMN9eH8/MhMgKGVX2/SxGBtYxVpAlRXuAYwJaYUYRDdDI8w2Mb6wjaSzX29\nT4EYlH4Zma1b8508+4O4B2o1hXynQEaPh1DjjPpGLLKggVyk5Ps8UDmgnhsK\nS/Tt7cXyBjY+SwVSCMnPr/7g6CTLVVQgBckTy/f9HusLu9GvIelx6q0xsHIk\nHX/PDEAb0WLNRKW6ebgI3uDk2gc+CF2KnydcVKEYKCIwF+FGPIirtwhh6ogA\nvWw5tOVTeNJT9q+f6AsUruC2ejQExSXvw7UXce4Me2xjmaAQdQnyc/8kAZTK\nDOSIzGwiRBAhu4wqoUNsv/IPunXf9wgVBGXZIYadBi2OcaUzYNB2Ytnc1tLJ\nrMpNwCfBLneBT4uazo1rphWR3dFyZuDWPbaJDciPMIIb4OF3CZpJmDzNtAvZ\nkAkf\r\n=s7/N\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB9mkzDEBvajK0CJukM+wDL5MIIqg4eZ/wIP6UNIelscAiAiYWAVVe28f5xY5rM0V+uHKlXs4zokf1ZDGLAC+/YRaw=="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.1.5_1627372016604_0.39253156194267214"
      },
      "_hasShrinkwrap": false
    },
    "1.1.6": {
      "name": "date-fns-tz",
      "version": "1.1.6",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the browser Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.5.5",
        "@babel/core": "^7.5.5",
        "@babel/node": "^7.5.5",
        "@babel/plugin-transform-arrow-functions": "^7.2.0",
        "@babel/plugin-transform-block-scoping": "^7.5.5",
        "@babel/plugin-transform-destructuring": "^7.5.0",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.4.0",
        "@typescript-eslint/parser": "^4.4.0",
        "babel-eslint": "^10.0.2",
        "babel-loader": "^8.0.6",
        "babel-plugin-add-module-exports": "^1.0.2",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.16.1",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "github:leshakoss/jsdoc-to-markdown",
        "json-loader": "^0.5.3",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.1.6",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-nyy+URfFI3KUY7udEJozcoftju+KduaqkVfwyTIE0traBiVye09QnyWKLZK7drRr5h9B7sPJITmQnS3U6YOdQg==",
        "shasum": "93cbf354e2aeb2cd312ffa32e462c1943cf20a8e",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.1.6.tgz",
        "fileCount": 136,
        "unpackedSize": 181498,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhADd9CRA9TVsSAnZWagAA/sUP/2ByIYav+7wXZnpz0anS\n32qxc4Udp7iZNdhaPUOeeGTbSey9DGCVcfkAUF/8XW8sArgv56ejks+l3Oh6\nUYGEx2dKu/C1UuYXa6fXiTbAJe55HsBJ4E3arw73KaqB/osMw9B4ovbplCOY\n+2eNdd+uupanJTwjcTSL3Xunzd7ljEWgLdjhvSBTWATuZiiEcEwEqX8CYqVA\naMgxG9Ew2VYGThMH/h9tF4k7ZuVzr1847H6EbqHzkakQSnaL5Ibt8p0t7nmi\nNLifJ+e2zjkYSvrImubr/j872Qxf+OgalQ1w07KbitW/qzvJg9GNfxxCK4Iy\nYEXUTxT5CMvhKLmCYnEtSFOZ7iwOUsNBUv8eiFPq9qD//cuHXT7dhhOLC+B0\nuul7/1X2b179fwd+BQZO4asEscHqE0uGcSghQER8QwCoDzwAIa1Cn4VuPknE\nyWck58OpewDm1zKTGAT6ZmHBlNymJjp+2MfDCwxpARaeWdqU/EteNCTRQljJ\nfJZaPCjIdoXEP822roYysmcAqfTQ8Hui0ibNdIqoAVEamJoCQpJ0tPZKSGck\n7UJFdPYoxq/Iv3FviAUZx6ptkdk9HciwUvejxTZPcuwuCtD94u5bxxwqYoEy\ndghN8mHnUKFgLTq6o1OGHDiE1pYKHgln99nT0wPCBiQhNXNKNB+jfG0Nynhw\nbaFo\r\n=uu8W\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDCt3jXw7D2S/XgD/atDquTG0PzXqo4pVMMo+v4G6oDewIgcslQ2cMagvCwAECrSRf68rL1SXJJILYyucbB9NjyzZE="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.1.6_1627404157523_0.8515390234788751"
      },
      "_hasShrinkwrap": false
    },
    "1.1.7": {
      "name": "date-fns-tz",
      "version": "1.1.7",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0-alpha.13"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "539baf27d19661dc80ab5aa353d6bbaffa8d275b",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.1.7",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-xfL918kXO528DJ17Sao60H07rYv5L/X0Bp6zojDssuZAR/acYETDS9PaICKAnodcO9XVHL/0bpLRGKd7kNnvcQ==",
        "shasum": "17d86054d18829b5052bfbe4ed5c394f40d2b615",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.1.7.tgz",
        "fileCount": 136,
        "unpackedSize": 183246,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhvHs8CRA9TVsSAnZWagAAf40QAKL8yLHhI7b/4DkKzWkI\nghM9Y6zgR/meYCmz0bQahzwClVDVjf1Nng16YezYLVUUWIXay4B513FdUgq0\nscbl+3Q2oeAAhZcVgBjlWTAYC1Ok3/aPNLZ64yjhc/eOzbTwhxl3XT/bXH4f\nd5JeE88m+emXpFc6Mb3ewiwiOFptqBNGSGslf++erZsGSfGTqMZep9i0ffx5\nH28qqBIdU2QIJlsUcXy4cb+4QxcrwgyTlEbsaWkkdiyXwcaG97nZWgVSXUFZ\naLKydPjbEoD8itrwVyjEaS2Sg0wQURMTtOA8yMsadXRc6h7IjWnKtQYPZDwL\nWhCaYFe9j4VyOMqZjLPSR6C7K4Nadg8wv1i8LE1oc0kAexbmE5jSo1NGxt5v\n+fj6p1ai4Ij+RGaA6ZAiKtmWsgGlQLrZEzKnDwozWmuBHBnYR6rAVZEgq+eK\nLleJmWCYoK3LRPbkeFE/UKKZC94si8Oi5OSsY8xIr6IsSE/Zgkp0mB4kIE2N\n4kS65QQTo4SkXrsCyIKOjuqmDkjCdewdVgj58zCycRYR3I8hdDipBE30El5o\n/nJkZWws+1FzDtASnkvAjOQAgDF614UGULwMPKuLtSM1b3vaq3vBFKB9CCKb\nlwl3gOaUh4JBU1x+BGg1JZqk6YZeUHF+xLQ9VpoTByb8/nuj8fo/2xpUq8Za\nUKE2\r\n=UlF2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDYsAtkDtlDNfiPvEG87MCWdL90BKwIbTiw+cGaJpP9UwIgTnoEluv606/Wukxmf5YyreUdYoCmPYccmJo0vP+x4Lg="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.1.7_1639742268563_0.48226797027844137"
      },
      "_hasShrinkwrap": false
    },
    "1.2.0": {
      "name": "date-fns-tz",
      "version": "1.2.0",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "f2df9d7765232a54b538de71041a75bd2046a39c",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.2.0",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-ikznnuBSJcBu4HC4HEfZ8D3r8TvRKz52hlTQq6E+LBWcVsvAS1ADc+km9klcVZkk0CJwglBcNMMRY8mXOn+Wig==",
        "shasum": "7bdeeea16b9191bf593e937b049878e2028433fc",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.2.0.tgz",
        "fileCount": 162,
        "unpackedSize": 203970,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhwIzyCRA9TVsSAnZWagAAZEcP/iZ+UWzPX3KWKNOwHKKw\nDZhTQ37wlGMnDlp1qaDt++Mog2qRy5Z+qZz9b2+diuODbRJ9ynCmYGWR5keQ\nc2nBBJ6TJC7lULhgYLnL2fHGYnxL01cGuQLUvNme3BeSpvMuZeIpkLenmPU1\noS6XgbmehRLkaqmWUWjKjSr7IdQJAy+F0BQqhTpCt0DmB8rlSegCn3ILdYB7\nUGQVjAIF9qGZux9AWIZnS8PfnydDXBkzd2ABkta3JNKC6NAKip2pm/lX1W3T\nW0MXqEvStQ6Ko5sA1v0y3rESsoER3+JTitiqSFd19T/we4TLtbmPiGQCAKDC\n+nxCX1DcJ+jJqsnGfrllEF5yyC8j+gq3dvFMYKwQMILlBHG3EWrQCI2Srkhe\neqVf1sqCPv3VyzbzsiY6BB5yWyBhrVX20GmeIUg7AsS8/ecCtv7UKjGHY71a\nbcw/sWXjspa0loqtw3TDjvVvOBjuNx4EY+JgfaUbWd8XvAWwlIW9+YAmSir2\n/upxYTgeCZrdP4EpIaJ8wWaJLFodDvWy/548h/SUsrNFLylyHhKDfrGkcy33\nIPCL5KmwedP8r5ILsq+peY1ik+Ab/Gh68t8ouh4uG57JnedjWiaYFSqz7+ct\nadadLcJKnpYu6GJur7WmvmdAuLx3Ids8wxpJUQ2CZ0D4koP/oZn62xmyPz4I\nr2+H\r\n=LxDf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFzErjUD3s6U/h2p8j9Yfw/n9wMJqP+jU3oK7ERJMk+hAiAcwOPuWpcQE0zUqUaaKmEtO/Z4TdpcbdHFPgBEx3U3Dg=="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.2.0_1640008946284_0.9867589318013803"
      },
      "_hasShrinkwrap": false
    },
    "1.2.1": {
      "name": "date-fns-tz",
      "version": "1.2.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "36b410d390be73c62ec620ad7ec5315135a85e8c",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.2.1",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-BzfpZr6grrtE/k+uCoRWq3vgI37Poa773XzD3JFPONEc648wAgcnXQiJbTqcq1h7w0wY5QKVSdefn0PgEziGlA==",
        "shasum": "863d180424010001c8d65d85ec2f9873da521293",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.2.1.tgz",
        "fileCount": 162,
        "unpackedSize": 203969,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhwa/hCRA9TVsSAnZWagAA9SgP/AgSBaGYYlMmnB+d8MFm\ncqnKFpBi4wIfWamMpQrK4heoUUcStI0c6Mt2qzeoLHuwpgni3pHJUdZfQrvc\ncgMHcbJyVhp2343fYLJjV13O1AVtQfhv1lYWvOO8b/og13J71vhLqSw+TSzo\njZ5tzF24XQxi2L3ZCI6E4rzy6eCIzjcwdm5XYnA8cI5rCLtsAnWYXfqncWEs\nErWxwNShFwr5fLdN7F1wIqNYwmXXkDgBnic8IY0Bb4PB62rR/dg3i+skBBUt\ntLR/iW4xF//NjkttLFkXNx5X2OJXDhjBmsiDvT4Ck71J1M7p6GWakqc93gSm\n0uFh+plmOosm1xWuVHvNzJkc4eIivaXt4TeVgk32NvUrbq11AQuTPOkfL2nr\na8s7uGliKZPD1RAzMUNYTKmcg8bx2D3ou6CHqdmkNUGHKKXm1TLYyWJ92qJN\nuyahCZUGARq02lEPyzpHTABPanuflafnSW1xZK3BJo4m3QAttl+hL9rrwD+f\nYcMlF7IGpvJNeV5tp2ltWPnX9k4nxFjaK6lOeGzrtjgx+ETeUKPMVr0EIhls\n47EHqRhPGNJrjdnom7avwq+Xu8IsRh1RwiCU/Sps3K77df5TcteqkQeFM/YN\ntAnu4H0akRxCtHB1tEtaV3mQQHsG5tj8WySkOVpEpDJgpHrZZtbwpgGz6rLD\nxu3U\r\n=EhuT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDxecT6XO9RJZlJVgC+Y2NFlo7KgeCliID2SC/8s6Xm+wIhANqINL6f14IkVeJfb1579yxDosUOHcW0HdXOspwX4PZp"
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.2.1_1640083425155_0.6395355855605362"
      },
      "_hasShrinkwrap": false
    },
    "1.2.2": {
      "name": "date-fns-tz",
      "version": "1.2.2",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "0961f0d1824815f601c1cbdab382bc1503f5093e",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.2.2",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-vWtn44eEqnLbkACb7T5G5gPgKR4nY8NkNMOCyoY49NsRGHrcDmY2aysCyzDeA+u+vcDBn/w6nQqEDyouRs4m8w==",
        "shasum": "89432b54ce3fa7d050a2039e997e5b6a96df35dd",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.2.2.tgz",
        "fileCount": 162,
        "unpackedSize": 205555,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhwbICCRA9TVsSAnZWagAALegP/juu+rl6xUEBQ4t2gwwF\n9T7vj+eoiU4zxWCL7P+xuAhBmaU/fcO0Q7+4XU8FrXkv3pzcqc+tyoeqf35U\n1gmCrOsn1jMYlsFZFHMJr6n2mGN9SqCpcxl77/8YzxCg/fX7yOHhRkmOVpLX\n8KhqjWkpdF51/0VBXqxDt629snhB46m2Z0rsR1Qeazfvp4y98yShpdaVI8EE\nGedGq5NUqbJmgEaVdG6CstSduUuKbmHePJrvr6n274upFRiq61Cp/e/Jy9wM\nzed/hoRZSo6IJVoDYfzZbjcrO1CtQ7tNbzpOJW5AexO73NTbaVT0k3xUFzWg\nuZqOde3qMzJwUlo19k0sAGP1Nqi0/T/7D2pqCf5Nnup479fPr2CYqw4fOwVh\nWoYAnMzFRq7u+mTijUB7gCyHOldhbQ60B60XZ+muVDll3c/LUW2/AHxeuArg\nMoGF5DbHXrO0JF+7IfN7hk8xULulAQvnFDnZWgDb8DeWC8CPipwdTdSFX9Bl\niByI5jxUj7LBuNS18CkZh4xxAQzZNi+N6ydFAveotv3DWtis+V9EqLioJfGy\n8C4TV4jAWffb7W803SE/+aW6UZG18AdAAsh5atS6HxslhJ19g+pM4oGJQEQ7\nBsqQ18xJPodv3kwmyZdjMEfYZH6VKBERE/71+csxH8qfQ7CST33qe+2W/mhB\nt3d9\r\n=5VXR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCIW7Z3W6z44kcohJ255BFO9YB+jbQJAAsWymjPnR20JgIgC666fGIFSShKUF1Njpmn/E5A1lOaO7VV44iNW35Q0RQ="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.2.2_1640083969977_0.28367014266087165"
      },
      "_hasShrinkwrap": false
    },
    "1.3.0-beta.0": {
      "name": "date-fns-tz",
      "version": "1.3.0-beta.0",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "readme": "# date-fns-tz\n\nTime zone support for [date-fns](https://date-fns.org/) v2.0.0 using the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl).\nBy using the browser API no time zone data needs to be included in code bundles. Modern browsers\nand Node.js all support the\n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://github.com/yahoo/date-time-format-timezone) can be used.\n\nIf you do not wish to use a polyfill the time zones can still be specified as offsets\nsuch as '-0200' or '+04:00', but not IANA time zone names.\n\n**Note:** `date-fns` is a peer dependency of this library.\n\nIf you find this library useful, why not\n\n<a href=\"https://www.buymeacoffee.com/marnusw\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n## Table of Contents\n\n- [Overview](#overview)\n- [Date and time zone formatting](#date-and-time-zone-formatting)\n  - [`formatInTimeZone`](#formatintimezone) - Formats a date in the provided time zone,\n    regardless of the system time zone\n- [Time zone offset helpers](#time-zone-offset-helpers)\n  - [`zonedTimeToUtc`](#zonedtimetoutc) - Given a date and any time zone, returns a `Date` with the equivalent UTC time\n  - [`utcToZonedTime`](#utctozonedtime) - Get a date/time representing local time in a given time zone from the UTC date\n  - [`getTimezoneOffset`](#gettimezoneoffset) - Gets the offset in milliseconds between the time zone and UTC time\n- [Low-level formatting helpers](#low-level-formatting-helpers)\n  - [`format`](#format) - Extends `date-fns/format` with support for all time zone tokens,\n    including `z..zzzz`\n  - [`toDate`](#todate) - Can be used to parse a `Date` from a date string representing time in\n    any time zone\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another\ntime zone's local time, one other than the current system's, like on a Node server or when showing\nthe time of an event in a specific time zone, like an event in LA at 8pm PST regardless of where\na user resides.\n\nIn this case there are two relevant pieces of information:\n\n- a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n- the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/New_York`).\n\nLibraries like Moment and Luxon, which provide their own date-time classes, manage these\ntimestamp and time zone values internally. Since `date-fns` always returns a plain JS Date,\nwhich implicitly has the current system's time zone, helper functions are provided for handling\ncommon time zone related use cases.\n\n## Date and time zone formatting\n\n### `formatInTimeZone`\n\nThis function takes a `Date` instance in the system's local time or an ISO8601 string, and\nan IANA time zone name or offset string. It then formats this date in the target time zone\nregardless of the system's local time zone.\n\nIt supports the same format tokens as `date-fns/format`, and adds full support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_, e.g. `EST`\n- The `zzzz` Unicode token: _long specific non-location format_, e.g. `Eastern Standard Time`\n\nUnlike `date-fns/format`, the `z..zzzz`, `x..xxxxx`, `X..XXXXX` and `O..OOO` tokens will all\nprint the formatted value of the provided time zone rather than the system time zone.\n\nAn invalid date or time zone input will result in an `Invalid Date` passed to `date-fns/format`,\nwhich will throw a `RangeError`.\n\nFor most use cases this is the only function from this library you will need.\n\n```javascript\nimport { formatInTimeZone } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ssXXX') // 2014-10-25 06:46:20-04:00\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 06:46:20 EST\nformatInTimeZone(date, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz', { locale: enGB })\n// 2014-10-25 10:46:20 CEST\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzzz', { locale: enGB })\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n## Time zone offset helpers\n\nThese functions are useful when you are not formatting a date yourself, but passing it to\nthird-party code such as a date picker library alongside an input for selecting a time zone.\n\nTo discuss the usage of the time zone helpers let's assume we're writing a system where\nadministrators set up events which will start at a specific time in the venue's local time, and\nthis local time should be shown when accessing the site from anywhere in the world.\n\n### `zonedTimeToUtc`\n\nGiven a date and any time zone, returns a `Date` with the equivalent UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```ts\nzonedTimeToUtc(date: Date|Number|String, timeZone: String): Date\n```\n\nSay a user is asked to input the date/time and time zone of an event. A date/time picker will\ntypically return a Date instance with the chosen date, in the user's local time zone, and a\nselect input might provide the actual IANA time zone name.\n\nIn order to work with this info effectively it is necessary to find the equivalent UTC time:\n\n```javascript\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst date = getDatePickerValue() // e.g. 2014-06-25 10:00:00 (picked in any time zone)\nconst timeZone = getTimeZoneValue() // e.g. America/Los_Angeles\n\nconst utcDate = zonedTimeToUtc(date, timeZone) // In June 10am in Los Angeles is 5pm UTC\n\npostToServer(utcDate.toISOString(), timeZone) // post 2014-06-25T17:00:00.000Z, America/Los_Angeles\n```\n\n### `utcToZonedTime`\n\nReturns a `Date` which will format as the local time of any time zone from a specific UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```js\nutcToZonedTime(date: Date|Number|String, timeZone: String): Date\n```\n\nSay the server provided a UTC date/time and a time zone which should be used as initial values\nfor the above form. The date/time picker will take a Date input which will be in the user's\nlocal time zone, but the date value must be that of the target time zone.\n\n```javascript\nimport { utcToZonedTime } from 'date-fns-tz'\n\nconst { isoDate, timeZone } = fetchInitialValues() // 2014-06-25T10:00:00.000Z, America/New_York\n\nconst date = utcToZonedTime(isoDate, timeZone) // In June 10am UTC is 6am in New York (-04:00)\n\nrenderDatePicker(date) // 2014-06-25 06:00:00 (in the system time zone)\nrenderTimeZoneSelect(timeZone) // America/New_York\n```\n\n### `getTimezoneOffset`\n\nReturns the offset in milliseconds between the time zone and UTC time.\n\n```js\ngetTimezoneOffset(timeZone: String, date: Date|Number): number\n```\n\nReturns the time zone offset from UTC time in milliseconds for IANA time zones as well\nas other time zone offset string formats.\n\nFor time zones where daylight savings time is applicable a `Date` should be passed on\nthe second parameter to ensure the offset correctly accounts for DST at that time of\nyear. When omitted, the current date is used.\n\nFor invalid time zones, `NaN` is returned.\n\n```javascript\nimport { getTimezoneOffset } from 'date-fns-tz'\n\nconst result = getTimezoneOffset('-07:00')\n//=> -18000000 (-7 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('Africa/Johannesburg')\n//=> 7200000 (2 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 0, 1))\n//=> -18000000 (-5 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 6, 1))\n//=> -14400000 (-4 * 60 * 60 * 1000)\n```\n\n## Low-level formatting helpers\n\n### `format`\n\nThe `format` function exported from this library is used under the hood by `formatInTimeZone`\nand extends `date-fns/format` with full time zone support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_\n- The `zzzz` Unicode token: _long specific non-location format_\n\nWhen using those tokens with `date-fns/format` it falls back to the GMT time zone format, and\nalways uses the current system's local time zone. For example `zzz` in New York will always return\n`GMT-4` instead of the desired `EST`, and `zzz` in Paris `GMT+2` instead of `CEST`, making the\ntime zone tokens somewhat irrelevant. This extended `format` function returns the proper\nspecific non-location format, e.g. `EST` or `Eastern Standard Time`, and that of the target time\nzone (if provided, see below) rather than the system time zone.\n\nSince a JavaScript `Date` instance cannot convey the time zone information to the `format` function\nit is necessary to pass the `timeZone` value as an option on the third argument of `format`.\n\nSimilar to `date-fns/format`, when an invalid date or time zone is used a `RangeError` is thrown.\n\nTo format a date showing time for a specific time zone other than the system time zone, the\n`format` function can be combined with `utcToZonedTime`. This is what `formatInTimeZone` does\ninternally. _To clarify, the `format` function will never change the underlying date, it must be\nchanged to a zoned time before passing it to `format`._\n\nIn most cases there is no need to use `format` rather than `formatInTimeZone`. The only time\nthis makes sense is when `utcToZonedTime` has been applied to a date once, and you want to\nformat it multiple times to different outputs.\n\n```javascript\nimport { format, utcToZonedTime } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nconst nyDate = utcToZonedTime(date, 'America/New_York')\nconst parisDate = utcToZonedTime(date, 'Europe/Paris')\n\nformat(nyDate, 'yyyy-MM-dd HH:mm:ssXXX', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20-04:00\nformat(nyDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20 EST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/Paris' }) // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 CEST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n### `toDate`\n\nThe `toDate` function can be used to parse a `Date` from a string containing a date and time\nrepresenting time in any time zone by providing an IANA time zone name on the `timeZone` option.\n\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```javascript\nimport { toDate, format } from 'date-fns-tz'\n\n// Offsets in the date string work as usual and take precedence\nconst parsedDate = toDate('2014-10-25T13:46:20+04:00')\nconst parisDate = utcToZonedTime(parsedDate, 'Europe/Paris')\nformat(parisDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Europe/Paris' }) // 2014-10-25 11:46:20+02:00\n\n// Since toDate simply clones a Date instance, the timeZone option is effectively ignored in this case\nconst date = new Date('2014-10-25T13:46:20Z')\nconst clonedDate = toDate(date, { timeZone: 'Europe/Paris' })\nassert(date.valueOf() === clonedDate.valueOf())\n\n// When there is no offset in the date string the timeZone property is used\nconst parsedDate = toDate('2014-10-25T13:46:20', { timeZone: 'Asia/Bangkok' })\nconst bangkokDate = utcToZonedTime(parsedDate, 'Asia/Bangkok')\nformat(bangkokDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Asia/Bangkok' }) // 2014-10-25 13:46:20+07:00\n```\n\n## Usage with Node.js\n\nNode.js supports the `Intl` API and ships with full ICU data included in the binary from v13,\ni.e. this library will just work.\nNode.js v12, which reaches end of life on 30 April 2022, requires running with\n[full ICU data provided at runtime](https://nodejs.org/docs/latest-v12.x/api/intl.html#intl_providing_icu_data_at_runtime).\n\n## Credit\n\nThe idea of using the Intl API for time zone support was inspired by the [Luxon](https://github.com/moment/luxon)\nlibrary.\n\nThe initial port of the idea into date-fns was done by [@benmccan](https://github.com/benmccann) in\n[date-fns/#676](https://github.com/date-fns/date-fns/pull/676).\n\n## License\n\nMIT © Marnus Weststrate\n",
      "readmeFilename": "README.md",
      "gitHead": "220aadaf2cb258c0c8e693dd0d1c2ec2089d529d",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.0-beta.0",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-3fT42mB7ET0ePa7PlCgtf6bDe7bgQBL4aKbSWl1bs8lFgOtS45wY99XtXwr2GQO85Xg4RUEeEmZAF1HpzQ070Q==",
        "shasum": "709a08e7590e2e7c0abfa41320381a42d6d0c7c2",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.0-beta.0.tgz",
        "fileCount": 173,
        "unpackedSize": 207918,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiFV7yACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqGeg/8DWhRDCu/8kXZDZ7fZZC04HplbFAmriI9QwFjFDRyEeGg1At4\r\nrpjV7qv82kLk5sc5IQ/99a3RPpNwGlZR+/nJKjpeW/kvx1QFtr1UYq1MsdbY\r\nmuQmg9lvSYSAPPf0wSrYqzSH2lkrHpKAgRd1KcVP9S3hIXEY1+G03lXxFMf1\r\nwXsbXnHfjNboVUtJZ250yCJqv5HITDqbsVT6ToMwMQJwJqwtVZGTW+ykr4bQ\r\n6pP2cyYbDDSaKLne8srcdmMzKbO/hs7G8pImGRJ30DT+wSaMkIWuO1oX/XDe\r\np9B4k+aF9vhYj9khOb4l8TFNOv3qpjFrmx3nTQI3ejTZ/tLT+LYnS0jIAAzv\r\nqtC1cp/h3vBKVhLA6ziL7eG5mKgIkRLLeYhcVI2mhRHBAJ/zmvNrvdtg0J03\r\nTmqGXzqAA2OaXoh+O8cp4z73mw3pn47DIlMmZwwGGHFdijAxjpR4TwzpIvwg\r\npkeK7SWRFcKKva4QSFuKJoEVbdzTSd4HLfb5cMiN9VDb2UKLPsd54JZGQw++\r\nG0Fmcin0l7Tp0IxEfIF65sajgXDgujq6/YsnoyYOEzFaUULLlghjq72x0rM7\r\nBDiaYpG4TbbUzZlWn4/77USqmBqyj3jdRO+lL8IXQaf/1VNJ9ZclmifX1q1K\r\n9ej07GDzthiDmM9XPW0ndZVDy3lRS7rOlf0=\r\n=SMah\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAO/bSqck9xd0UparDzUSt5WNQt+AP3qVCUhHETrKY/DAiEA8UVhX0hXS+GBNJu5qtYeeZ2VVn26gqy8StI+loe3ZwM="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.0-beta.0_1645567730696_0.9570214131741634"
      },
      "_hasShrinkwrap": false
    },
    "1.3.0-beta.1": {
      "name": "date-fns-tz",
      "version": "1.3.0-beta.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./esm/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "readme": "# date-fns-tz\n\nTime zone support for [date-fns](https://date-fns.org/) v2.0.0 using the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl).\nBy using the browser API no time zone data needs to be included in code bundles. Modern browsers\nand Node.js all support the\n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://github.com/yahoo/date-time-format-timezone) can be used.\n\nIf you do not wish to use a polyfill the time zones can still be specified as offsets\nsuch as '-0200' or '+04:00', but not IANA time zone names.\n\n**Note:** `date-fns` is a peer dependency of this library.\n\nIf you find this library useful, why not\n\n<a href=\"https://www.buymeacoffee.com/marnusw\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n## Table of Contents\n\n- [Overview](#overview)\n- [Date and time zone formatting](#date-and-time-zone-formatting)\n  - [`formatInTimeZone`](#formatintimezone) - Formats a date in the provided time zone,\n    regardless of the system time zone\n- [Time zone offset helpers](#time-zone-offset-helpers)\n  - [`zonedTimeToUtc`](#zonedtimetoutc) - Given a date and any time zone, returns a `Date` with the equivalent UTC time\n  - [`utcToZonedTime`](#utctozonedtime) - Get a date/time representing local time in a given time zone from the UTC date\n  - [`getTimezoneOffset`](#gettimezoneoffset) - Gets the offset in milliseconds between the time zone and UTC time\n- [Low-level formatting helpers](#low-level-formatting-helpers)\n  - [`format`](#format) - Extends `date-fns/format` with support for all time zone tokens,\n    including `z..zzzz`\n  - [`toDate`](#todate) - Can be used to parse a `Date` from a date string representing time in\n    any time zone\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another\ntime zone's local time, one other than the current system's, like on a Node server or when showing\nthe time of an event in a specific time zone, like an event in LA at 8pm PST regardless of where\na user resides.\n\nIn this case there are two relevant pieces of information:\n\n- a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n- the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/New_York`).\n\nLibraries like Moment and Luxon, which provide their own date-time classes, manage these\ntimestamp and time zone values internally. Since `date-fns` always returns a plain JS Date,\nwhich implicitly has the current system's time zone, helper functions are provided for handling\ncommon time zone related use cases.\n\n## Date and time zone formatting\n\n### `formatInTimeZone`\n\nThis function takes a `Date` instance in the system's local time or an ISO8601 string, and\nan IANA time zone name or offset string. It then formats this date in the target time zone\nregardless of the system's local time zone.\n\nIt supports the same format tokens as `date-fns/format`, and adds full support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_, e.g. `EST`\n- The `zzzz` Unicode token: _long specific non-location format_, e.g. `Eastern Standard Time`\n\nUnlike `date-fns/format`, the `z..zzzz`, `x..xxxxx`, `X..XXXXX` and `O..OOO` tokens will all\nprint the formatted value of the provided time zone rather than the system time zone.\n\nAn invalid date or time zone input will result in an `Invalid Date` passed to `date-fns/format`,\nwhich will throw a `RangeError`.\n\nFor most use cases this is the only function from this library you will need.\n\n```javascript\nimport { formatInTimeZone } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ssXXX') // 2014-10-25 06:46:20-04:00\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 06:46:20 EST\nformatInTimeZone(date, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz', { locale: enGB })\n// 2014-10-25 10:46:20 CEST\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzzz', { locale: enGB })\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n## Time zone offset helpers\n\nThese functions are useful when you are not formatting a date yourself, but passing it to\nthird-party code such as a date picker library alongside an input for selecting a time zone.\n\nTo discuss the usage of the time zone helpers let's assume we're writing a system where\nadministrators set up events which will start at a specific time in the venue's local time, and\nthis local time should be shown when accessing the site from anywhere in the world.\n\n### `zonedTimeToUtc`\n\nGiven a date and any time zone, returns a `Date` with the equivalent UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```ts\nzonedTimeToUtc(date: Date|Number|String, timeZone: String): Date\n```\n\nSay a user is asked to input the date/time and time zone of an event. A date/time picker will\ntypically return a Date instance with the chosen date, in the user's local time zone, and a\nselect input might provide the actual IANA time zone name.\n\nIn order to work with this info effectively it is necessary to find the equivalent UTC time:\n\n```javascript\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst date = getDatePickerValue() // e.g. 2014-06-25 10:00:00 (picked in any time zone)\nconst timeZone = getTimeZoneValue() // e.g. America/Los_Angeles\n\nconst utcDate = zonedTimeToUtc(date, timeZone) // In June 10am in Los Angeles is 5pm UTC\n\npostToServer(utcDate.toISOString(), timeZone) // post 2014-06-25T17:00:00.000Z, America/Los_Angeles\n```\n\n### `utcToZonedTime`\n\nReturns a `Date` which will format as the local time of any time zone from a specific UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```js\nutcToZonedTime(date: Date|Number|String, timeZone: String): Date\n```\n\nSay the server provided a UTC date/time and a time zone which should be used as initial values\nfor the above form. The date/time picker will take a Date input which will be in the user's\nlocal time zone, but the date value must be that of the target time zone.\n\n```javascript\nimport { utcToZonedTime } from 'date-fns-tz'\n\nconst { isoDate, timeZone } = fetchInitialValues() // 2014-06-25T10:00:00.000Z, America/New_York\n\nconst date = utcToZonedTime(isoDate, timeZone) // In June 10am UTC is 6am in New York (-04:00)\n\nrenderDatePicker(date) // 2014-06-25 06:00:00 (in the system time zone)\nrenderTimeZoneSelect(timeZone) // America/New_York\n```\n\n### `getTimezoneOffset`\n\nReturns the offset in milliseconds between the time zone and UTC time.\n\n```js\ngetTimezoneOffset(timeZone: String, date: Date|Number): number\n```\n\nReturns the time zone offset from UTC time in milliseconds for IANA time zones as well\nas other time zone offset string formats.\n\nFor time zones where daylight savings time is applicable a `Date` should be passed on\nthe second parameter to ensure the offset correctly accounts for DST at that time of\nyear. When omitted, the current date is used.\n\nFor invalid time zones, `NaN` is returned.\n\n```javascript\nimport { getTimezoneOffset } from 'date-fns-tz'\n\nconst result = getTimezoneOffset('-07:00')\n//=> -18000000 (-7 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('Africa/Johannesburg')\n//=> 7200000 (2 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 0, 1))\n//=> -18000000 (-5 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 6, 1))\n//=> -14400000 (-4 * 60 * 60 * 1000)\n```\n\n## Low-level formatting helpers\n\n### `format`\n\nThe `format` function exported from this library is used under the hood by `formatInTimeZone`\nand extends `date-fns/format` with full time zone support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_\n- The `zzzz` Unicode token: _long specific non-location format_\n\nWhen using those tokens with `date-fns/format` it falls back to the GMT time zone format, and\nalways uses the current system's local time zone. For example `zzz` in New York will always return\n`GMT-4` instead of the desired `EST`, and `zzz` in Paris `GMT+2` instead of `CEST`, making the\ntime zone tokens somewhat irrelevant. This extended `format` function returns the proper\nspecific non-location format, e.g. `EST` or `Eastern Standard Time`, and that of the target time\nzone (if provided, see below) rather than the system time zone.\n\nSince a JavaScript `Date` instance cannot convey the time zone information to the `format` function\nit is necessary to pass the `timeZone` value as an option on the third argument of `format`.\n\nSimilar to `date-fns/format`, when an invalid date or time zone is used a `RangeError` is thrown.\n\nTo format a date showing time for a specific time zone other than the system time zone, the\n`format` function can be combined with `utcToZonedTime`. This is what `formatInTimeZone` does\ninternally. _To clarify, the `format` function will never change the underlying date, it must be\nchanged to a zoned time before passing it to `format`._\n\nIn most cases there is no need to use `format` rather than `formatInTimeZone`. The only time\nthis makes sense is when `utcToZonedTime` has been applied to a date once, and you want to\nformat it multiple times to different outputs.\n\n```javascript\nimport { format, utcToZonedTime } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nconst nyDate = utcToZonedTime(date, 'America/New_York')\nconst parisDate = utcToZonedTime(date, 'Europe/Paris')\n\nformat(nyDate, 'yyyy-MM-dd HH:mm:ssXXX', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20-04:00\nformat(nyDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20 EST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/Paris' }) // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 CEST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n### `toDate`\n\nThe `toDate` function can be used to parse a `Date` from a string containing a date and time\nrepresenting time in any time zone by providing an IANA time zone name on the `timeZone` option.\n\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```javascript\nimport { toDate, format } from 'date-fns-tz'\n\n// Offsets in the date string work as usual and take precedence\nconst parsedDate = toDate('2014-10-25T13:46:20+04:00')\nconst parisDate = utcToZonedTime(parsedDate, 'Europe/Paris')\nformat(parisDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Europe/Paris' }) // 2014-10-25 11:46:20+02:00\n\n// Since toDate simply clones a Date instance, the timeZone option is effectively ignored in this case\nconst date = new Date('2014-10-25T13:46:20Z')\nconst clonedDate = toDate(date, { timeZone: 'Europe/Paris' })\nassert(date.valueOf() === clonedDate.valueOf())\n\n// When there is no offset in the date string the timeZone property is used\nconst parsedDate = toDate('2014-10-25T13:46:20', { timeZone: 'Asia/Bangkok' })\nconst bangkokDate = utcToZonedTime(parsedDate, 'Asia/Bangkok')\nformat(bangkokDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Asia/Bangkok' }) // 2014-10-25 13:46:20+07:00\n```\n\n## Usage with Node.js\n\nNode.js supports the `Intl` API and ships with full ICU data included in the binary from v13,\ni.e. this library will just work.\nNode.js v12, which reaches end of life on 30 April 2022, requires running with\n[full ICU data provided at runtime](https://nodejs.org/docs/latest-v12.x/api/intl.html#intl_providing_icu_data_at_runtime).\n\n## Credit\n\nThe idea of using the Intl API for time zone support was inspired by the [Luxon](https://github.com/moment/luxon)\nlibrary.\n\nThe initial port of the idea into date-fns was done by [@benmccan](https://github.com/benmccann) in\n[date-fns/#676](https://github.com/date-fns/date-fns/pull/676).\n\n## License\n\nMIT © Marnus Weststrate\n",
      "readmeFilename": "README.md",
      "gitHead": "220aadaf2cb258c0c8e693dd0d1c2ec2089d529d",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.0-beta.1",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-XoC/Otecg9sCWnYmde1Ue6JDLpUXooD+mg2ZUfwmznPcaFjvH0OL23shQDOgPRf0tLibpKzKaRYAoorSQFLcHQ==",
        "shasum": "8a3198a794ff99082372f89079d415d7d17ed98f",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.0-beta.1.tgz",
        "fileCount": 173,
        "unpackedSize": 207945,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiFjMNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpHcw/7Bv5zKQyNqi6O89wn8WKjNFdd0XJUkr25Xon7E9Jgf0t+hq95\r\n+r2BWt8kSbQa8za0giYWUGAxW/DqOQ6btsCmFmJvcibzcvcHFzPJPvc982rJ\r\ndou+3GMJFL72JZHlKqw/QdPQJYShmnucJCu/fMQ6nfidfBrKyWHTxf9N4QVy\r\nHaoSxRQLmdKUhDtrCkaZbyYoJzLOBefMgihKqCQqI6y2t+7006FeAHg5fz3R\r\nQE77bGseG3MYm1uzgIVrXaKw1Yzxw8Ms2COALHBov9lbG+JXXsEYNU/EouUg\r\ncpCtAkCLIbNaWBqbv+2o6En82N8iVOfCtXR7GmW18tqKdGXqJiHqHUGX36c9\r\nFgdjwjreW2bsc2gOdSlWdmw6YN86g92w8lMDbHn7Q79QcrfifqJHU4rnup6h\r\nxFw9kbjgPXcJLgIVDozzQbSQ+QYXd+Qmo4YZyWKJCMwFTHOGUqjIeCR3FFRc\r\nK65CqFGTefQzufisb6q3/EE1b55mUgbfdloTMG5ZE/5FvTR4xiLAFalYsQw1\r\n6cX6ftEck8l4kClhuuyK8HLOtDiK1O1cYsTJyfnLFH2lYEQ/3QY+xM0Nkpew\r\nXEc/GkC7k8lB/e+xpKHsuvBntt4sA8ith/T88BKW6b3gvXOsQhIKXqDLkr4I\r\n2DsbA384eW/mB5jBanBnNJjHRd1M1YdEE/U=\r\n=Qwjs\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBL7bPzO8fCIP+ni7V8geLlOA/RFFBiobwJPZGmCMdDoAiAlcLKGO50ImhDT9sy/9+BpGlJmFL+5xFE7qKm/pYAujg=="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.0-beta.1_1645622029266_0.9873834635650172"
      },
      "_hasShrinkwrap": false
    },
    "1.3.0-beta.2": {
      "name": "date-fns-tz",
      "version": "1.3.0-beta.2",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "readme": "# date-fns-tz\n\nTime zone support for [date-fns](https://date-fns.org/) v2.0.0 using the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl).\nBy using the browser API no time zone data needs to be included in code bundles. Modern browsers\nand Node.js all support the\n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://github.com/yahoo/date-time-format-timezone) can be used.\n\nIf you do not wish to use a polyfill the time zones can still be specified as offsets\nsuch as '-0200' or '+04:00', but not IANA time zone names.\n\n**Note:** `date-fns` is a peer dependency of this library.\n\nIf you find this library useful, why not\n\n<a href=\"https://www.buymeacoffee.com/marnusw\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n## Table of Contents\n\n- [Overview](#overview)\n- [Date and time zone formatting](#date-and-time-zone-formatting)\n  - [`formatInTimeZone`](#formatintimezone) - Formats a date in the provided time zone,\n    regardless of the system time zone\n- [Time zone offset helpers](#time-zone-offset-helpers)\n  - [`zonedTimeToUtc`](#zonedtimetoutc) - Given a date and any time zone, returns a `Date` with the equivalent UTC time\n  - [`utcToZonedTime`](#utctozonedtime) - Get a date/time representing local time in a given time zone from the UTC date\n  - [`getTimezoneOffset`](#gettimezoneoffset) - Gets the offset in milliseconds between the time zone and UTC time\n- [Low-level formatting helpers](#low-level-formatting-helpers)\n  - [`format`](#format) - Extends `date-fns/format` with support for all time zone tokens,\n    including `z..zzzz`\n  - [`toDate`](#todate) - Can be used to parse a `Date` from a date string representing time in\n    any time zone\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another\ntime zone's local time, one other than the current system's, like on a Node server or when showing\nthe time of an event in a specific time zone, like an event in LA at 8pm PST regardless of where\na user resides.\n\nIn this case there are two relevant pieces of information:\n\n- a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n- the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/New_York`).\n\nLibraries like Moment and Luxon, which provide their own date-time classes, manage these\ntimestamp and time zone values internally. Since `date-fns` always returns a plain JS Date,\nwhich implicitly has the current system's time zone, helper functions are provided for handling\ncommon time zone related use cases.\n\n## Date and time zone formatting\n\n### `formatInTimeZone`\n\nThis function takes a `Date` instance in the system's local time or an ISO8601 string, and\nan IANA time zone name or offset string. It then formats this date in the target time zone\nregardless of the system's local time zone.\n\nIt supports the same format tokens as `date-fns/format`, and adds full support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_, e.g. `EST`\n- The `zzzz` Unicode token: _long specific non-location format_, e.g. `Eastern Standard Time`\n\nUnlike `date-fns/format`, the `z..zzzz`, `x..xxxxx`, `X..XXXXX` and `O..OOO` tokens will all\nprint the formatted value of the provided time zone rather than the system time zone.\n\nAn invalid date or time zone input will result in an `Invalid Date` passed to `date-fns/format`,\nwhich will throw a `RangeError`.\n\nFor most use cases this is the only function from this library you will need.\n\n```javascript\nimport { formatInTimeZone } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ssXXX') // 2014-10-25 06:46:20-04:00\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 06:46:20 EST\nformatInTimeZone(date, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz', { locale: enGB })\n// 2014-10-25 10:46:20 CEST\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzzz', { locale: enGB })\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n## Time zone offset helpers\n\nThese functions are useful when you are not formatting a date yourself, but passing it to\nthird-party code such as a date picker library alongside an input for selecting a time zone.\n\nTo discuss the usage of the time zone helpers let's assume we're writing a system where\nadministrators set up events which will start at a specific time in the venue's local time, and\nthis local time should be shown when accessing the site from anywhere in the world.\n\n### `zonedTimeToUtc`\n\nGiven a date and any time zone, returns a `Date` with the equivalent UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```ts\nzonedTimeToUtc(date: Date|Number|String, timeZone: String): Date\n```\n\nSay a user is asked to input the date/time and time zone of an event. A date/time picker will\ntypically return a Date instance with the chosen date, in the user's local time zone, and a\nselect input might provide the actual IANA time zone name.\n\nIn order to work with this info effectively it is necessary to find the equivalent UTC time:\n\n```javascript\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst date = getDatePickerValue() // e.g. 2014-06-25 10:00:00 (picked in any time zone)\nconst timeZone = getTimeZoneValue() // e.g. America/Los_Angeles\n\nconst utcDate = zonedTimeToUtc(date, timeZone) // In June 10am in Los Angeles is 5pm UTC\n\npostToServer(utcDate.toISOString(), timeZone) // post 2014-06-25T17:00:00.000Z, America/Los_Angeles\n```\n\n### `utcToZonedTime`\n\nReturns a `Date` which will format as the local time of any time zone from a specific UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```js\nutcToZonedTime(date: Date|Number|String, timeZone: String): Date\n```\n\nSay the server provided a UTC date/time and a time zone which should be used as initial values\nfor the above form. The date/time picker will take a Date input which will be in the user's\nlocal time zone, but the date value must be that of the target time zone.\n\n```javascript\nimport { utcToZonedTime } from 'date-fns-tz'\n\nconst { isoDate, timeZone } = fetchInitialValues() // 2014-06-25T10:00:00.000Z, America/New_York\n\nconst date = utcToZonedTime(isoDate, timeZone) // In June 10am UTC is 6am in New York (-04:00)\n\nrenderDatePicker(date) // 2014-06-25 06:00:00 (in the system time zone)\nrenderTimeZoneSelect(timeZone) // America/New_York\n```\n\n### `getTimezoneOffset`\n\nReturns the offset in milliseconds between the time zone and UTC time.\n\n```js\ngetTimezoneOffset(timeZone: String, date: Date|Number): number\n```\n\nReturns the time zone offset from UTC time in milliseconds for IANA time zones as well\nas other time zone offset string formats.\n\nFor time zones where daylight savings time is applicable a `Date` should be passed on\nthe second parameter to ensure the offset correctly accounts for DST at that time of\nyear. When omitted, the current date is used.\n\nFor invalid time zones, `NaN` is returned.\n\n```javascript\nimport { getTimezoneOffset } from 'date-fns-tz'\n\nconst result = getTimezoneOffset('-07:00')\n//=> -18000000 (-7 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('Africa/Johannesburg')\n//=> 7200000 (2 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 0, 1))\n//=> -18000000 (-5 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 6, 1))\n//=> -14400000 (-4 * 60 * 60 * 1000)\n```\n\n## Low-level formatting helpers\n\n### `format`\n\nThe `format` function exported from this library is used under the hood by `formatInTimeZone`\nand extends `date-fns/format` with full time zone support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_\n- The `zzzz` Unicode token: _long specific non-location format_\n\nWhen using those tokens with `date-fns/format` it falls back to the GMT time zone format, and\nalways uses the current system's local time zone. For example `zzz` in New York will always return\n`GMT-4` instead of the desired `EST`, and `zzz` in Paris `GMT+2` instead of `CEST`, making the\ntime zone tokens somewhat irrelevant. This extended `format` function returns the proper\nspecific non-location format, e.g. `EST` or `Eastern Standard Time`, and that of the target time\nzone (if provided, see below) rather than the system time zone.\n\nSince a JavaScript `Date` instance cannot convey the time zone information to the `format` function\nit is necessary to pass the `timeZone` value as an option on the third argument of `format`.\n\nSimilar to `date-fns/format`, when an invalid date or time zone is used a `RangeError` is thrown.\n\nTo format a date showing time for a specific time zone other than the system time zone, the\n`format` function can be combined with `utcToZonedTime`. This is what `formatInTimeZone` does\ninternally. _To clarify, the `format` function will never change the underlying date, it must be\nchanged to a zoned time before passing it to `format`._\n\nIn most cases there is no need to use `format` rather than `formatInTimeZone`. The only time\nthis makes sense is when `utcToZonedTime` has been applied to a date once, and you want to\nformat it multiple times to different outputs.\n\n```javascript\nimport { format, utcToZonedTime } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nconst nyDate = utcToZonedTime(date, 'America/New_York')\nconst parisDate = utcToZonedTime(date, 'Europe/Paris')\n\nformat(nyDate, 'yyyy-MM-dd HH:mm:ssXXX', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20-04:00\nformat(nyDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20 EST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/Paris' }) // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 CEST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n### `toDate`\n\nThe `toDate` function can be used to parse a `Date` from a string containing a date and time\nrepresenting time in any time zone by providing an IANA time zone name on the `timeZone` option.\n\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```javascript\nimport { toDate, format } from 'date-fns-tz'\n\n// Offsets in the date string work as usual and take precedence\nconst parsedDate = toDate('2014-10-25T13:46:20+04:00')\nconst parisDate = utcToZonedTime(parsedDate, 'Europe/Paris')\nformat(parisDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Europe/Paris' }) // 2014-10-25 11:46:20+02:00\n\n// Since toDate simply clones a Date instance, the timeZone option is effectively ignored in this case\nconst date = new Date('2014-10-25T13:46:20Z')\nconst clonedDate = toDate(date, { timeZone: 'Europe/Paris' })\nassert(date.valueOf() === clonedDate.valueOf())\n\n// When there is no offset in the date string the timeZone property is used\nconst parsedDate = toDate('2014-10-25T13:46:20', { timeZone: 'Asia/Bangkok' })\nconst bangkokDate = utcToZonedTime(parsedDate, 'Asia/Bangkok')\nformat(bangkokDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Asia/Bangkok' }) // 2014-10-25 13:46:20+07:00\n```\n\n## Usage with Node.js\n\nNode.js supports the `Intl` API and ships with full ICU data included in the binary from v13,\ni.e. this library will just work.\nNode.js v12, which reaches end of life on 30 April 2022, requires running with\n[full ICU data provided at runtime](https://nodejs.org/docs/latest-v12.x/api/intl.html#intl_providing_icu_data_at_runtime).\n\n## Credit\n\nThe idea of using the Intl API for time zone support was inspired by the [Luxon](https://github.com/moment/luxon)\nlibrary.\n\nThe initial port of the idea into date-fns was done by [@benmccan](https://github.com/benmccann) in\n[date-fns/#676](https://github.com/date-fns/date-fns/pull/676).\n\n## License\n\nMIT © Marnus Weststrate\n",
      "readmeFilename": "README.md",
      "gitHead": "424a54c8d08883109ae7f37d238c96e96370616b",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.0-beta.2",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-KehX5fla0qdN4BDTMAPNL5Wcw+BQV36B9oTrsBZCa89YR7sr34D6Scd6x+y/gGJLbBLuAynadSVn7VpFCliK4w==",
        "shasum": "29158bbab95efd3186c651b4c915568207f23bd2",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.0-beta.2.tgz",
        "fileCount": 162,
        "unpackedSize": 207856,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiFq05ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmprgw/9GPmW/XXnDzP69Mrbu3kOzOMupLcrzboIOajrBpXYujaeLeiz\r\nqMPlKHAuyKs90xJCWhJwEIOFlQgbjqpXIp/6B38N5cpFmVMInBTGdb2QdhYC\r\nuvwHFejRTHLFwbRkTktLT9H3MiA9D2g6GSivjMDRaxJP9GuC5kc5QBveGl5P\r\nJu4lTE1c6vzxtR9rx3uL1f8OLddM/DUT7oqVivdkJJvXdwLfjJE9kk5qK2SW\r\nJum6CekvP+Z75t4t/y7BiLyeKtk4k7ryqqelJEKOip4ueNK1ipGsr54PvRO6\r\nBHsW5T1G+s4ZPCfpj+o8U4Ac8IF1LZTwpIAjgxsAT5VcXrSYAGkOZPmp9KQp\r\nAduOuthWUbRE3munvl385rBLElNQ3s8RUXd+iT1UK6NL/3DqTvpJ54eyd3yo\r\n0/DxJcaFRK48YTI8wy19q3VR03WavVS6uCMDs8BWkAicCRFkGCLkOt6/NgEt\r\noAalv1jVHzUxsBLG736wTt+sWHmQUia4372XVA/Ut4SEGJwXzS0bKDAFKQsw\r\nDuVJC/yWrjm9TDloLu8Na8m4t5x9GUTjzt/zkPGijeHWtZ7w3oz4w/lA8wy/\r\nDlZgSJ3gEFuC6vaDHGl3uVEPeVfXzdqVfOiFHOBflzC08HiMcocA0i7/GCw6\r\n6fNKawdpc1thXwtAlwcAyKvuJ7negp9qh3M=\r\n=cO1j\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC9rJW5qbEvoW9gJxvCWzLIcq1JTi6gwDUbTUjL7ERT6gIgfqDw3Pm27tDjru9q/Pllu11imCFKHXf16Ym6wbpashk="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.0-beta.2_1645653305019_0.37006094892382135"
      },
      "_hasShrinkwrap": false
    },
    "1.3.0-beta.3": {
      "name": "date-fns-tz",
      "version": "1.3.0-beta.3",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "readme": "# date-fns-tz\n\nTime zone support for [date-fns](https://date-fns.org/) v2.0.0 using the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl).\nBy using the browser API no time zone data needs to be included in code bundles. Modern browsers\nand Node.js all support the\n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://github.com/yahoo/date-time-format-timezone) can be used.\n\nIf you do not wish to use a polyfill the time zones can still be specified as offsets\nsuch as '-0200' or '+04:00', but not IANA time zone names.\n\n**Note:** `date-fns` is a peer dependency of this library.\n\nIf you find this library useful, why not\n\n<a href=\"https://www.buymeacoffee.com/marnusw\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n## Table of Contents\n\n- [Overview](#overview)\n- [Date and time zone formatting](#date-and-time-zone-formatting)\n  - [`formatInTimeZone`](#formatintimezone) - Formats a date in the provided time zone,\n    regardless of the system time zone\n- [Time zone offset helpers](#time-zone-offset-helpers)\n  - [`zonedTimeToUtc`](#zonedtimetoutc) - Given a date and any time zone, returns a `Date` with the equivalent UTC time\n  - [`utcToZonedTime`](#utctozonedtime) - Get a date/time representing local time in a given time zone from the UTC date\n  - [`getTimezoneOffset`](#gettimezoneoffset) - Gets the offset in milliseconds between the time zone and UTC time\n- [Low-level formatting helpers](#low-level-formatting-helpers)\n  - [`format`](#format) - Extends `date-fns/format` with support for all time zone tokens,\n    including `z..zzzz`\n  - [`toDate`](#todate) - Can be used to parse a `Date` from a date string representing time in\n    any time zone\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another\ntime zone's local time, one other than the current system's, like on a Node server or when showing\nthe time of an event in a specific time zone, like an event in LA at 8pm PST regardless of where\na user resides.\n\nIn this case there are two relevant pieces of information:\n\n- a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n- the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/New_York`).\n\nLibraries like Moment and Luxon, which provide their own date-time classes, manage these\ntimestamp and time zone values internally. Since `date-fns` always returns a plain JS Date,\nwhich implicitly has the current system's time zone, helper functions are provided for handling\ncommon time zone related use cases.\n\n## Date and time zone formatting\n\n### `formatInTimeZone`\n\nThis function takes a `Date` instance in the system's local time or an ISO8601 string, and\nan IANA time zone name or offset string. It then formats this date in the target time zone\nregardless of the system's local time zone.\n\nIt supports the same format tokens as `date-fns/format`, and adds full support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_, e.g. `EST`\n- The `zzzz` Unicode token: _long specific non-location format_, e.g. `Eastern Standard Time`\n\nUnlike `date-fns/format`, the `z..zzzz`, `x..xxxxx`, `X..XXXXX` and `O..OOO` tokens will all\nprint the formatted value of the provided time zone rather than the system time zone.\n\nAn invalid date or time zone input will result in an `Invalid Date` passed to `date-fns/format`,\nwhich will throw a `RangeError`.\n\nFor most use cases this is the only function from this library you will need.\n\n```javascript\nimport { formatInTimeZone } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ssXXX') // 2014-10-25 06:46:20-04:00\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 06:46:20 EST\nformatInTimeZone(date, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz', { locale: enGB })\n// 2014-10-25 10:46:20 CEST\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzzz', { locale: enGB })\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n## Time zone offset helpers\n\nThese functions are useful when you are not formatting a date yourself, but passing it to\nthird-party code such as a date picker library alongside an input for selecting a time zone.\n\nTo discuss the usage of the time zone helpers let's assume we're writing a system where\nadministrators set up events which will start at a specific time in the venue's local time, and\nthis local time should be shown when accessing the site from anywhere in the world.\n\n### `zonedTimeToUtc`\n\nGiven a date and any time zone, returns a `Date` with the equivalent UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```ts\nzonedTimeToUtc(date: Date|Number|String, timeZone: String): Date\n```\n\nSay a user is asked to input the date/time and time zone of an event. A date/time picker will\ntypically return a Date instance with the chosen date, in the user's local time zone, and a\nselect input might provide the actual IANA time zone name.\n\nIn order to work with this info effectively it is necessary to find the equivalent UTC time:\n\n```javascript\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst date = getDatePickerValue() // e.g. 2014-06-25 10:00:00 (picked in any time zone)\nconst timeZone = getTimeZoneValue() // e.g. America/Los_Angeles\n\nconst utcDate = zonedTimeToUtc(date, timeZone) // In June 10am in Los Angeles is 5pm UTC\n\npostToServer(utcDate.toISOString(), timeZone) // post 2014-06-25T17:00:00.000Z, America/Los_Angeles\n```\n\n### `utcToZonedTime`\n\nReturns a `Date` which will format as the local time of any time zone from a specific UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```js\nutcToZonedTime(date: Date|Number|String, timeZone: String): Date\n```\n\nSay the server provided a UTC date/time and a time zone which should be used as initial values\nfor the above form. The date/time picker will take a Date input which will be in the user's\nlocal time zone, but the date value must be that of the target time zone.\n\n```javascript\nimport { utcToZonedTime } from 'date-fns-tz'\n\nconst { isoDate, timeZone } = fetchInitialValues() // 2014-06-25T10:00:00.000Z, America/New_York\n\nconst date = utcToZonedTime(isoDate, timeZone) // In June 10am UTC is 6am in New York (-04:00)\n\nrenderDatePicker(date) // 2014-06-25 06:00:00 (in the system time zone)\nrenderTimeZoneSelect(timeZone) // America/New_York\n```\n\n### `getTimezoneOffset`\n\nReturns the offset in milliseconds between the time zone and UTC time.\n\n```js\ngetTimezoneOffset(timeZone: String, date: Date|Number): number\n```\n\nReturns the time zone offset from UTC time in milliseconds for IANA time zones as well\nas other time zone offset string formats.\n\nFor time zones where daylight savings time is applicable a `Date` should be passed on\nthe second parameter to ensure the offset correctly accounts for DST at that time of\nyear. When omitted, the current date is used.\n\nFor invalid time zones, `NaN` is returned.\n\n```javascript\nimport { getTimezoneOffset } from 'date-fns-tz'\n\nconst result = getTimezoneOffset('-07:00')\n//=> -18000000 (-7 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('Africa/Johannesburg')\n//=> 7200000 (2 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 0, 1))\n//=> -18000000 (-5 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 6, 1))\n//=> -14400000 (-4 * 60 * 60 * 1000)\n```\n\n## Low-level formatting helpers\n\n### `format`\n\nThe `format` function exported from this library is used under the hood by `formatInTimeZone`\nand extends `date-fns/format` with full time zone support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_\n- The `zzzz` Unicode token: _long specific non-location format_\n\nWhen using those tokens with `date-fns/format` it falls back to the GMT time zone format, and\nalways uses the current system's local time zone. For example `zzz` in New York will always return\n`GMT-4` instead of the desired `EST`, and `zzz` in Paris `GMT+2` instead of `CEST`, making the\ntime zone tokens somewhat irrelevant. This extended `format` function returns the proper\nspecific non-location format, e.g. `EST` or `Eastern Standard Time`, and that of the target time\nzone (if provided, see below) rather than the system time zone.\n\nSince a JavaScript `Date` instance cannot convey the time zone information to the `format` function\nit is necessary to pass the `timeZone` value as an option on the third argument of `format`.\n\nSimilar to `date-fns/format`, when an invalid date or time zone is used a `RangeError` is thrown.\n\nTo format a date showing time for a specific time zone other than the system time zone, the\n`format` function can be combined with `utcToZonedTime`. This is what `formatInTimeZone` does\ninternally. _To clarify, the `format` function will never change the underlying date, it must be\nchanged to a zoned time before passing it to `format`._\n\nIn most cases there is no need to use `format` rather than `formatInTimeZone`. The only time\nthis makes sense is when `utcToZonedTime` has been applied to a date once, and you want to\nformat it multiple times to different outputs.\n\n```javascript\nimport { format, utcToZonedTime } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nconst nyDate = utcToZonedTime(date, 'America/New_York')\nconst parisDate = utcToZonedTime(date, 'Europe/Paris')\n\nformat(nyDate, 'yyyy-MM-dd HH:mm:ssXXX', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20-04:00\nformat(nyDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20 EST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/Paris' }) // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 CEST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n### `toDate`\n\nThe `toDate` function can be used to parse a `Date` from a string containing a date and time\nrepresenting time in any time zone by providing an IANA time zone name on the `timeZone` option.\n\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```javascript\nimport { toDate, format } from 'date-fns-tz'\n\n// Offsets in the date string work as usual and take precedence\nconst parsedDate = toDate('2014-10-25T13:46:20+04:00')\nconst parisDate = utcToZonedTime(parsedDate, 'Europe/Paris')\nformat(parisDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Europe/Paris' }) // 2014-10-25 11:46:20+02:00\n\n// Since toDate simply clones a Date instance, the timeZone option is effectively ignored in this case\nconst date = new Date('2014-10-25T13:46:20Z')\nconst clonedDate = toDate(date, { timeZone: 'Europe/Paris' })\nassert(date.valueOf() === clonedDate.valueOf())\n\n// When there is no offset in the date string the timeZone property is used\nconst parsedDate = toDate('2014-10-25T13:46:20', { timeZone: 'Asia/Bangkok' })\nconst bangkokDate = utcToZonedTime(parsedDate, 'Asia/Bangkok')\nformat(bangkokDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Asia/Bangkok' }) // 2014-10-25 13:46:20+07:00\n```\n\n## Usage with Node.js\n\nNode.js supports the `Intl` API and ships with full ICU data included in the binary from v13,\ni.e. this library will just work.\nNode.js v12, which reaches end of life on 30 April 2022, requires running with\n[full ICU data provided at runtime](https://nodejs.org/docs/latest-v12.x/api/intl.html#intl_providing_icu_data_at_runtime).\n\n## Credit\n\nThe idea of using the Intl API for time zone support was inspired by the [Luxon](https://github.com/moment/luxon)\nlibrary.\n\nThe initial port of the idea into date-fns was done by [@benmccan](https://github.com/benmccann) in\n[date-fns/#676](https://github.com/date-fns/date-fns/pull/676).\n\n## License\n\nMIT © Marnus Weststrate\n",
      "readmeFilename": "README.md",
      "gitHead": "424a54c8d08883109ae7f37d238c96e96370616b",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.0-beta.3",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-iqErggiNl6Tg45c6aie/kbywp6lr8mPyMUeFnM703nfRkN9Hx5XYWrj0CWeqqtpErvp7qq87LhdX3Oak5uPFAw==",
        "shasum": "0e4f607d21e535d75c731cde7cb582bc6a673b27",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.0-beta.3.tgz",
        "fileCount": 163,
        "unpackedSize": 207879,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiFq4zACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq/NA//Yv+Bc3uaENHuLURfByfeO69CJfkUCDQ3Cj9I+LIeygvWJwWJ\r\n6eIW+r8vJbsl6TW1nUK1pEYkosqRGHnfUoqfyIKxwHjBEapRPt0ma+5X4JJz\r\nQIdJp4iiJ1DML2shqlE/4WVaHQ3kY8qmmW+NNj+9ARQBSZEtc5UqvKekBmFd\r\nJaYqTkaj+yYwXARWNMmDOjL3ihvzq4CEv98rwPNtOSJXobGN2N7yT+P/1Dlr\r\napvH9wGoBbVE99hWQhtdOQUIyz2f9aKgEKT7Dotlm/yySaFn7QsU52XBdb36\r\nfXKlcJtHsudbvn5jKKjYpkcWBQCHdA6+c8KPL/w6cZsBiM31jtwkTSItdIDq\r\nWSR9LCYTgAlfw7G6Q2XLdkXVaRKYV8jM1mJxWcK8mBuGh0MEPoitzyjHzhT3\r\ngdVgFw6cNhS0reeQZRzq6+BuXTntiILkruyJ2HkVTOjDORnasI6+Q/BEhXdX\r\nS41UkSpLUXfUk2e2lYcprE4GJo6HW4UQggToBY2j8/cLUGwAzH/sP9sLbuQ0\r\nMJvQo4WSpIWgtdJLP3B7ATR9bNCd0BEXwhMfECOd7afkU8oGiJpiTgttD/TF\r\neCwonhxNw9rehx2ClHpeQ8rjnvYMbqXW7YhF+cpTDU5Oz2KUcLvfKsGIuj3i\r\nrCL6E0gSzzBKCuarMNoZinlLJD35lz4hO34=\r\n=bfX4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCEJyYeOiAOEAmOAZJOT2wIGlgm9qI5QGfMJ8DO2zDWvwIgPEqdHWQAiDLriGI4bBf3NGmB+dWA+s08Kc/zYaDTC6A="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.0-beta.3_1645653554906_0.8120773598668554"
      },
      "_hasShrinkwrap": false
    },
    "1.3.0": {
      "name": "date-fns-tz",
      "version": "1.3.0",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "c438d29405efa20d5e323b59370da6b8ef44b6d2",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.0",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-r6ye6PmGEvkF467/41qzU71oGwv9kHTnV3vtSZdyV6VThwPID47ZH7FtR7zQWrhgOUWkYySm2ems2w6ZfNUqoA==",
        "shasum": "6c83d4bdf20d54060cf176d96a3ca45043b36a84",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.0.tgz",
        "fileCount": 163,
        "unpackedSize": 208904,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiF2QoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoYlw//XesOuty/VB9Y9DXJaG0vx5b039+G+znvpA7iijW6FJU9MQce\r\nVvtDG1Zgx9g3VEKugeHKHGFkJmi0YxaZID6iFZg8pw4Ap7+44BW6veFqhYzl\r\nogJnIyMcP47CxHHrc1pWUzPyHhNzR2cprMpMcQrRzZ7iJjBdqMoDCj57/VmA\r\nSWvZ8fy/GcWhUa1pPSHDDw41yqfjwt/KBqlXqVr0nVIXzz0iqL2RKCSbn9+G\r\nF7vUk7dNbA85WfGARpT4Gm7Zy768M6l67M/Bd6V2ZKYOWQJJdnbwirPMsU/u\r\ncZ3UqT69nVM/Qh9DQ7qmTtAAbBnSUh3Qt2q8SRnjB+AkAAlQiDgr6fv7V3U9\r\nTw2cbJY24qqYxMSHx7LET4z11v2Hh0xY0iefegWGsY0o+Ok9emZbL6/yRuJr\r\nTS07EOEYsL3WFL+SmnF7bUOXsaVtSFA8vYr8f+dVpTCr8oJiWo4W+1sqtWrj\r\npt8BWSo/EssqtmsDEWwjgp4RTTOIdFRt02gvz91KoFweQDWf3qfbEgVK3W1z\r\n+rxc9b2tk5i2M9Wz5lRknHdQ2ThrCUCFIc0JgsfNg9jgDf64S9nLCQaTYWTQ\r\n1Laf/cXM+jJC17DwHGbOhWBtaUyChWMrnLY+MBBbNQ+aUwrxuPTXI1AhgFkw\r\nhT4kvZzbCalLPrjw4tcilepHgsVZWCh+GgY=\r\n=g2RF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC6+qXwXZidvT4kAtkOmg90NzeOrFVJL8NdENkDHwJS3gIgQonZ2+29iksrMnZkUOSq247KL5zB0f4Xov4o5cbP6us="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.0_1645700136179_0.051840925223007206"
      },
      "_hasShrinkwrap": false
    },
    "1.3.1": {
      "name": "date-fns-tz",
      "version": "1.3.1",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./package.json": "./package.json",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "8baea431b78d17fcf8a10ff4c7e168b3008b9d39",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.1",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-Uy+wph6HcQ0IG8TWbVyXicgDmB1zdvb0CoIknZQaxiTun4uSfxLR+8gSTC2C3KCLq+0fEIuEtJ/ORDRIn6doQw==",
        "shasum": "88b6374e5a74cfb11ec2d2b120cfe0bc02eeb862",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.1.tgz",
        "fileCount": 163,
        "unpackedSize": 208968,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPe6bACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpu3RAAmaGbmW12zDp+mFyQ3a1c1i0NASyWPPXIn5uJhmN8hmokyB/P\r\npUY86gVeaS5c4vHR9UJXrgZq/FiUDP2rAJ8RlZhKivvQAaCGRwb3mBZxt9rS\r\nVT5Atlo1Th41xl6qLaKLI/dmDFN55V8xuijbUdcFFdN1lIRKEAQSX6G38NN4\r\noH/LLNmWerFmY75PddJ+5xh3yag9rZ20QhO7l6mJzoTTulfslUO4SoF5FWh5\r\nRy5C6pXU4XsxakJtxSL8orhSUZ7VXWLtlnub1fx4zAYmkVBLyUlQk5hLO/P7\r\nwcRRxv2ok5AaXYS6odu1mH2E+/VnuJPhglyeHCDjbUvKK0BsL6suI7HWcfAw\r\nW/YsYhZpWWbUzwQ0+aonVrva+ms5O48nEUhtRVpm6uQIo+xsMHzzaLy35NSu\r\nfbx9LANfeYxY+PdAcF5q63wBDM/1qNtd+Ix1asxTQBTdgmoO3t3Vu3rhq20A\r\n3K7nskE2yyNYfSPLkbPvAsxnxfSEjsbjcIDH0E+yd2YwmrnYJhz5EEh/wLzf\r\nNuMEaYLryfIx8aeU7RcECBXOCOQpkwVwURz2MlPzIwOv1EXvzrfoK3B3JUcP\r\nQWlEbdYcgO8pGV+0NBX2tbUwrRLJvsm8T9Cwum7k3LojDI14cb4V21mPoD2h\r\nvrnquBfHMuBMzvEV1ShOzK5a0aNCZpQ23O0=\r\n=FCqm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCQ+1P6l23Esjpgjosxk0i5vkZaiyna2VqGoM//RtCOhgIgWz9YsHs3p1tRbVvB7KIBpVi2c5s7BhlJMFMl0S2910w="
          }
        ]
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.1_1648225947017_0.8302354407066583"
      },
      "_hasShrinkwrap": false
    },
    "1.3.2": {
      "name": "date-fns-tz",
      "version": "1.3.2",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./package.json": "./package.json",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "f32c414205924037c105c8edcb67d1079fca4a93",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.2",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-xSU97ayDLQpi8Db0bR3gmVdn32p5PP8Y0mr20gQd0n/F54hdGRfdnwrr0hJ7j3nTs/Nji1Qr+kf1A2EtisPC9w==",
        "shasum": "e792515992719f3a9c92ff17d824c54d48a9df7c",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.2.tgz",
        "fileCount": 165,
        "unpackedSize": 210589,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFisZFs+5hNy/OIcKmGxz+IDb9DVt4+MPIzP1kVsZxgQAiEAnIZBcpFi3X5VNjo1A8E110WIfdxyfMIrXJ5Y7zykNB8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRbDhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrpVg//SOJCaci2M1C8nGmJif9Z00gOA35cH9w+qlOFK4Za2zYZM+Gd\r\nHlQ6n9SovsFKE9GxTkHvIjvvmIA+JgUGFcuRdaiQei/ncSW4T98vAu//8Zx/\r\nKfEfMBMPUlyziAk8xlS0d7v+87YD0qIdbJcMmU7XOgILBK161ctnmUTRP8FK\r\nlasTbTkVWeJkBn6TntLfd86BId90d1fIukNtxchc6WtMzTKYzu2GuIarZMY9\r\noFVGapRMjPIWh7UuIwXdxt1G1Q7Z4l4W6hrZcW72H7pixumc1aaz6KN6S2D1\r\nRdcPW0zTB/5qMZlCWLVInpPSeI1yaLQdjw0U03JNYLP7kZZ/zmhP/faDb+hA\r\nBhFXmLg17Rn5uYdP5Z9Q+JsikZuDcXJjcpKzf19Z7yJ7knUKYF5x52uRnP2D\r\nHUaseEqijyBSP8EjieYP6NFgXL4h1uPWGeyPP6yKLHBxhR8tjx8duCnipUt2\r\nWM7kQtmaaJqjMGhsikFPHqQQNa4W5+re5966W8lMzm6ynwNDdvaTOVJXf4Cz\r\nnLUfasPpJGSxtK6l/hYRVhBV/uCMn3NM+2YqbbB772xf3WOekfOR39IqZ5hr\r\nscqAKp6YCYX8yFSQ1rxgGQv8X3nQsTk/RSEtiZbv0r+xSc8yI+o7tbkhGdCO\r\nAEzu4i/Eh/4piN6aGYByqqxQmc7TbdVOAUU=\r\n=Mp2S\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.2_1648734433112_0.8510342843133969"
      },
      "_hasShrinkwrap": false
    },
    "1.3.3": {
      "name": "date-fns-tz",
      "version": "1.3.3",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./package.json": "./package.json",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "ab13900b2994d9c6fdaf29b86e70355b9037664d",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.3",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-Gks46gwbSauBQnV3Oofluj1wTm8J0tM7sbSJ9P+cJq/ZnTCpMohTKmmO5Tn+jQ7dyn0+b8G7cY4O2DZ5P/LXcA==",
        "shasum": "7884a4b3ed6cd95bfd81831d608e5ef8be500c86",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.3.tgz",
        "fileCount": 165,
        "unpackedSize": 210599,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC0tSA2yHpuldHvO8185fSs1uhL43xVwVpGjLcX3NzyjAiBHCzTuVXRPbqVF2NXxMGuX57/jK9i7BBkwQyhvcYnJXA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRsOMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrrTw//QzuVZ17Km/CyX7pL1749717WVyTEUSnHtXiAunZf4acqY8g5\r\nNL+VtFeXsjQwZH3ZH7+l3xOrj7o6oZ4lWc2AhoTGpaeX1LrqTDmZyvbqU8ii\r\nW8aFmXUN5TD32iHIDoh7ZWe0uelty7tCi6XaH+RGWCDnMy59cQiBcl+HsoM2\r\n/wo97zwNlMs+9/G3Bfo7lmSqoGCpFGWygbFEkjLYVcRo2lfUBIcK/wG8MNhx\r\nAEoA/ErC0osxiMoRX8Hls8sUYPbfkeIndrNGWDramFgJOwV1umAaW0qn3rsy\r\n51Wo6zh8vCjgFE5zb2d0+ukI3mkZb0AZJDDPA47gg6vFxCA3R+ZUyQx6MotO\r\nF4PPicg280f9ZtkTxBp732r7FjPGS3fT0XueY3dS9az+LaHdySv/JuUNE8oJ\r\n+QxJKAp4deKu5Qjq0zxB1xQr0B22RDqDHDfJYLj30qLY8r8LmFNDAbhVtrAU\r\nYgkxRR70JFoNjvupsLB5G1keaisgkRcwueVPaxqAW+EidMSwRb8lcs9iCBxX\r\nskvIdwnhJO0T9sXet9sUB1Eg3nI5cNblPIFkdNO2FsCQWJjFRmmAkNeXkZa3\r\n7UmjzPn2VuaewRQtyTgtQVdRVKMJ3F6OiOE1fR4EV1CM6nKi8l+hI7qJ0QtB\r\nrlbJmy/TATQgSk2qOg5IkIn2/hlUcYWMRFs=\r\n=Kow8\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.3_1648804747781_0.5690125687339747"
      },
      "_hasShrinkwrap": false
    },
    "1.3.4": {
      "name": "date-fns-tz",
      "version": "1.3.4",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./package.json": "./package.json",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "8dfeaa3e3531a41c00b291e8efa3b8b27faf7e09",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.4",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-O47vEyz85F2ax/ZdhMBJo187RivZGjH6V0cPjPzpm/yi6YffJg4upD/8ibezO11ezZwP3QYlBHh/t4JhRNx0Ow==",
        "shasum": "8b0e75beb771c7e9f1597aba467dc14431bb5403",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.4.tgz",
        "fileCount": 165,
        "unpackedSize": 211232,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDZFXzQe0RtK2kgXwRkXB63J7SxAQVW8Kq9Phfq69EoIQIgZbfdojeKNe1UfDC5DaVMPXnLckdt716v/c/XMZi7hfw="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJialUBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpfHQ/+LJ6hYpr+TkJOqIi2T5xaYGZg1zdYoLPOw8S54WyPiCKptKc+\r\n1CF/MxRi+/my6mgCGfhm4/rK+/9qQHSkdVH3r7IPmU0hgA+OjGTg5+R8uzuS\r\nyl55dx0y5U3HGoFLp+sGNuQZiyu806NJK+8lucC3zyYwWh4mOQxXevnqsjZI\r\nnNycyynNglZK7gEUWLEisRHdEwewUrSY5DEaahDe2KhW+SvvQwc0uHVWyyPv\r\nTyfS5daRPL8mHpf/Vq9nV5ovaiLyPV7yU4whRAoiXqik8yBElJkB3+hte4D7\r\np1e+s+Nd+Hbby6KX3ZauLn8vLwgNJOvBXkfW/x0dAIEurrsx6KUh+U7kHC5N\r\n+AWkCf23HIZgOxcJnOyVRuYS75VOhxaw6QilNLxx8WYe9AArDE9toN0y960x\r\nSEcVNqjCtSAarDkse7PlswskqW/4CLd51bSnXcN8XFYkiDtDnV7WTx9O4GyN\r\nSla+u5uZobLCs594SEAystFlOh7iEaXhYmga7oDENWAPyVIm+BPhGpuFUuxu\r\n6wMsKDzre1CfQAs1dc5h+2buO0Jj2Bydv9quQ9YkV3pebvOt56BtZ51C51WQ\r\n7aswhje11GqgRWkSqr2OCKsFRqTqFwpzzarlapxHSLkaJwJ8A1acrUFQeZ+h\r\nBtXOiztgW/Sp8bQT80pSXBcgkFYXBUeWtBg=\r\n=zHDQ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.4_1651135745348_0.5357126580721026"
      },
      "_hasShrinkwrap": false
    },
    "1.3.5": {
      "name": "date-fns-tz",
      "version": "1.3.5",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./package.json": "./package.json",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "d8f94afc6fb2b5e675ba642de662ee5c8b3660f2",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.5",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-SNhl/fWe7i2HoIB9ejLZhEEJ6ZtRRpOBbzizFrq11K2/iceS9Nk7fPN2VTYVOMgFB9u0f3eidSC4n1xaRONW2A==",
        "shasum": "415086b0095dab80121d66912b93f1dec5729e6e",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.5.tgz",
        "fileCount": 165,
        "unpackedSize": 211368,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFG/YGwyvWuM5h45C8RazuCRt758t/hsVGVmd/31Zb/UAiB4dyub6vVFwgdJ3ZxxVIQq2n/CR3QFZCs6xA4wAarI3Q=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJireFjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr+aRAAoMAZUp6sIJKpZlDVtP0HJgcLBq1zsfajYFIyW4uOsubBGx3s\r\nVC2D0eaDsyfRTZXVMgFEUC+bLj2y1lg0VeYP4b41k8qFukDKCScp/MdohFJZ\r\n2Er3XEjhV7xH5umqEb1Bv+ttoRtL3GJRfOmA7MgmW5IcFJPuVQs9zsNTwR3c\r\ntxlRvBj24YdIp9fsVKLrcAI3N4LRyvan1IY4vIlIstI2mO90mHT27+JWLxgB\r\nxjn00QPF/dMs5F8/JcKrRJZKSd98iCGWZ/NT3+sIOC7ZEns+x5n1te+ydl8m\r\nOXMCjdPbeZ9D6CLniIoFQQ1AyzSRCx36RqVB873WQhcXY5Ez3ebUsaQ7yZ55\r\nVUk2KmRYunW1DU6b4lXgR9GU4d3x7plyNM/FsGJNjRm34UN4AG+9YR4DUw3o\r\n9jHIbEDUhHrL0rA/ajaZsrx4DnwwIKji6Rn84h48QxpzJLjGioYxqkYzKY4n\r\nV96LLc6h1Utp1QUvGIS+9cAAeY6kW7FPEKu0EfnzcHlXCfO7keyDyleQ/5W4\r\nWLdFK0PQ1c57n7xccB4EgmC06JUdQNPC7+ERXN24CDnTohym5znf48MrGQLa\r\nHDFW10CO1cyKiv9CkeGcPkOfgEbUKOkUNRN4wZBMetd7wuZ4JqCOw0ekkxkQ\r\n+EuMTRDzjbEnBR3py3l0j2EwkZajlKU7jRg=\r\n=MsRH\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.5_1655562594979_0.7913498567082742"
      },
      "_hasShrinkwrap": false
    },
    "1.3.6": {
      "name": "date-fns-tz",
      "version": "1.3.6",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./package.json": "./package.json",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "0577249fb6c47ad7b6a84826e90d976dac9ab52e",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.6",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-C8q7mErvG4INw1ZwAFmPlGjEo5Sv4udjKVbTc03zpP9cu6cp5AemFzKhz0V68LGcWEtX5mJudzzg3G04emIxLA==",
        "shasum": "4195a58a2f86eda55ea69fb477f3ed8a6e2188ac",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.6.tgz",
        "fileCount": 165,
        "unpackedSize": 211368,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDhEjNQ1AfKxmOyOlRlrADE2lrBjw+HtL6LtC811BtrvQIgNoEJ/Os0/yHc596FY17rkgmiU03hXR51fqN4UwEDH9I="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJizq4zACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpo6w/+OLrcKgoGFRJbRw9FQ+NKapIvthxIDDINeIHd8RXer/S94GrO\r\npaQvGdIfzazWgVIEsk+woFWHZXd0+SyL4pR+YXLQ3Sw60leKrJuAgFoT2QAp\r\n4mXP4pi4rFevVKYq/rgqY84CUwLd08cwQGmhpf4HfI/k2iblxVEcgBuyiIjh\r\nEnq9MhL3aPCIlE1CqruZSFfDQHcMy0k9qq/dGEoIh1QwZcft0O0difVjJlu7\r\ndmoLnpOH7NCNK2BtMWaO+niu7ONKY65zT40GhMDpnJ4NFpPSOYytM/ki052o\r\niYxYD8rhsO+DsPolAXxHTgxsh95DBrc0VFzrXs75aLwq0hWpImMXlEQMVj/D\r\nxWFiqupWhlKsW2Mvo/zBAS4zb7NVdkGkPBZ9MbTRakAohxtYd9dBLIVSSGH0\r\naV8zbzF3J/omZzQy3KWHhGlPFMgDYDeqRM6r1qgFwgIxxBHQ/sGRjklLXEE/\r\nXaLH2PLo7eGa6f3TaGht9sH7vh4G6nDPjaZQ1MPB8fT94LhwS1UBZ39Ent2V\r\npLyYpgWW7tfTGdAJ7QC9wwWNa9BweguDKSjDh+IQKEuAAfW0AcF1i1TL/wZl\r\n07XTRgL9UGpTcqWi0srQgpS0TjYmEPXYjQwwR4l7yaIDD+hh0kFCnnlpsWjq\r\n+zUa6nedsReTapXr/hyA2x6I73wJ+kGGswQ=\r\n=dtaC\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.6_1657712178928_0.7327057407008142"
      },
      "_hasShrinkwrap": false
    },
    "1.3.7": {
      "name": "date-fns-tz",
      "version": "1.3.7",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./package.json": "./package.json",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "4ced7b8b0a5aad5b08fc3a44476242c82bc3272d",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.7",
      "_nodeVersion": "16.15.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-1t1b8zyJo+UI8aR+g3iqr5fkUHWpd58VBx8J/ZSQ+w7YrGlw80Ag4sA86qkfCXRBLmMc4I2US+aPMd4uKvwj5g==",
        "shasum": "e8e9d2aaceba5f1cc0e677631563081fdcb0e69a",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.7.tgz",
        "fileCount": 165,
        "unpackedSize": 211560,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC8EhSvfuHhoAlJmA8j6lvIioosYIN+JTIys5cytw18qgIhAJX3wVzXWMoWMSGtsPYfbGZzBiEq8oBkZIDX2edM2kTz"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjD8NuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmojcA/8C6qXGLPTTocN8b57a6gvWJULZklngwlL37aCC1I1qev84inH\r\nKAQptSclY0wglsu4kB2VwhEmPVn72QCcHyIFS0tQk/Y6S/B4obv9sCGawfPH\r\nAa01ejpHPVwjf1iJK4bkwnOFi4jT1ye5ZO8LonqYWcgK7i+lhJTACh3xOOdm\r\nTtQ4VXB9pfMAohCITq0PxiPo42pLgyzSkqe8DtWumqS2MpN2tQHjETroA+rx\r\njNsOgFhzXiK/Fq9WpDtSXcp7uSNyY3wzPjMBcAGDDCYZOD7eb7J4L0XrQlQf\r\nmhK1y8CDe76mGlHIM5OSWvi9QTBR6P2wNZA5XxS3UjCIzUY19OlWiL9+fs6D\r\nsf5yuC+CcJkt7OhEsfmvu1n03hlkeFuJnhsoxs38lr9NkdRdqg9l72PjyczE\r\nZG7KpnTwSbVkmhR97Vdf/ljieySatUiveapAuZ4ICsufz96coToDvYnvxezT\r\n2XfI+ijGL4i1C8UBSiS1DwsICzhZ4L4p8Nx66TotLTEnC1aCOP8t039LLaqB\r\nk7/K4QgzUE2n0CeLbyrYr5Nx5lSYHMGFTj2XMow1fWd9vevgmEKZst4inha5\r\nsrC0eilN4cHDRep42ei/oNxcHNUFBLLnTwG3R2pG5i5oXEfHqtdAvF7C3i+u\r\nuhhbTJ1U/D8Bl7IkuZIhfeoKfkkw5InFEfw=\r\n=+2FW\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.7_1661977454366_0.27504333238081924"
      },
      "_hasShrinkwrap": false
    },
    "1.3.8": {
      "name": "date-fns-tz",
      "version": "1.3.8",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        ".": "./index.js",
        "./package.json": "./package.json",
        "./format": "./format/index.js",
        "./formatInTimeZone": "./formatInTimeZone/index.js",
        "./getTimezoneOffset": "./getTimezoneOffset/index.js",
        "./toDate": "./toDate/index.js",
        "./utcToZonedTime": "./utcToZonedTime/index.js",
        "./zonedTimeToUtc": "./zonedTimeToUtc/index.js",
        "./fp": "./fp/index.js",
        "./fp/format": "./fp/format/index.js",
        "./fp/formatInTimeZone": "./fp/formatInTimeZone/index.js",
        "./fp/getTimezoneOffset": "./fp/getTimezoneOffset/index.js",
        "./fp/toDate": "./fp/toDate/index.js",
        "./fp/utcToZonedTime": "./fp/utcToZonedTime/index.js",
        "./fp/zonedTimeToUtc": "./fp/zonedTimeToUtc/index.js",
        "./esm": "./esm/index.js",
        "./esm/format": "./esm/format/index.js",
        "./esm/formatInTimeZone": "./esm/formatInTimeZone/index.js",
        "./esm/getTimezoneOffset": "./esm/getTimezoneOffset/index.js",
        "./esm/toDate": "./esm/toDate/index.js",
        "./esm/utcToZonedTime": "./esm/utcToZonedTime/index.js",
        "./esm/zonedTimeToUtc": "./esm/zonedTimeToUtc/index.js",
        "./esm/fp": "./esm/fp/index.js",
        "./esm/fp/format": "./esm/fp/format/index.js",
        "./esm/fp/formatInTimeZone": "./esm/fp/formatInTimeZone/index.js",
        "./esm/fp/getTimezoneOffset": "./esm/fp/getTimezoneOffset/index.js",
        "./esm/fp/toDate": "./esm/fp/toDate/index.js",
        "./esm/fp/utcToZonedTime": "./esm/fp/utcToZonedTime/index.js",
        "./esm/fp/zonedTimeToUtc": "./esm/fp/zonedTimeToUtc/index.js"
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "cross-env NODE_OPTIONS=\"--openssl-legacy-provider\" karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true NODE_OPTIONS=\"--openssl-legacy-provider\" karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "40bfc9e42a82b27282cf0c9f11e0858df4828f13",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@1.3.8",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "9.1.3",
      "dist": {
        "integrity": "sha512-qwNXUFtMHTTU6CFSFjoJ80W8Fzzp24LntbjFFBgL/faqds4e5mo9mftoRLgr3Vi1trISsg4awSpYVsOQCRnapQ==",
        "shasum": "083e3a4e1f19b7857fa0c18deea6c2bc46ded7b9",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-1.3.8.tgz",
        "fileCount": 165,
        "unpackedSize": 211452,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDmnOpBfJrpEPXs5YNCGRVd89ANCZfNJqdos9x7amryGgIgEZNf3bFGE8KUXEtf/LpbeSg1KiKxehMfYWWi8vv/DR4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj15BxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmothQ/+KDdR05NyZ2baN1nAaqPGE9sGA40/7VE8qAArds3xb6B4Yvtu\r\nHMFfG5oLjbNZ7Ck2IWQOR70xq6TuuSRjFD9IoDpUksBphxYCjztZvHJBVqf0\r\n2KiufI/1qT6gbXdxCykKM7hkV04mJOkynL5bxyh3Rk2vAshh46gltFG44LRO\r\nSXCy/krFRySGz/eE16CvMnSO10mcGNtmorsbAml0U+87gt1TTECha5ziJrPX\r\n3bvnJzXJhOOhwR7RgktkJJVOAq4MHqNfnnm/ArUy3Qf5MBWjeIOM4rh3maQt\r\niVjuge3U6LqJLib61AeY6xtzhaeei/L8YQDmqjMERkAuXye60s9m2GjJWjsp\r\nGHZnA9MnZegZFYiabVOTPuS0YGmVHJ28kjz1NSv81GN/S0bjHpl0FXe2AB1w\r\nP8tihaj3nP4IUP8jem6SHAss0lU3EfdE6cwTzIP0/y91FvQQtB1WZH/gcdXG\r\nRLjVCR5m/XbUBjPuZkJkkr2ZPjFDyfy6G/wtl9qRGDQ6882uh/28fyKnKNuH\r\nXjuZUoSZEwCW2JZsDouD+Ol0897oaj7b+TYS9otR3e7dN4FPDipyvDnNKeBl\r\nbNa2i6Anul+O4NXCB3M3UWgMq1tbxbAPj0DidpSSAkHI00D3pIqws6g9bM/P\r\nxYS0u6XrtR5JxuQ6LKud8sMzgZuW7CvQUys=\r\n=2+2+\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_1.3.8_1675071600874_0.5020529829006923"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0": {
      "name": "date-fns-tz",
      "version": "2.0.0",
      "sideEffects": false,
      "description": "Time zone support for date-fns v2 with the Intl API",
      "author": {
        "name": "Marnus Weststrate",
        "email": "marnusw@gmail.com"
      },
      "license": "MIT",
      "keywords": [
        "date-fns",
        "timezone",
        "time zone",
        "date",
        "time",
        "parse",
        "format",
        "immutable"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/marnusw/date-fns-tz.git"
      },
      "engine": {
        "node": ">= 0.11"
      },
      "type": "commonjs",
      "main": "index.js",
      "module": "esm/index.js",
      "types": "typings.d.ts",
      "exports": {
        "./package.json": "./package.json",
        ".": {
          "types": "./typings.d.ts",
          "import": "./esm/index.js",
          "require": "./index.js"
        },
        "./format": {
          "types": "./format/index.d.ts",
          "import": "./esm/format/index.js",
          "require": "./format/index.js"
        },
        "./formatInTimeZone": {
          "types": "./formatInTimeZone/index.d.ts",
          "import": "./esm/formatInTimeZone/index.js",
          "require": "./formatInTimeZone/index.js"
        },
        "./getTimezoneOffset": {
          "types": "./getTimezoneOffset/index.d.ts",
          "import": "./esm/getTimezoneOffset/index.js",
          "require": "./getTimezoneOffset/index.js"
        },
        "./toDate": {
          "types": "./toDate/index.d.ts",
          "import": "./esm/toDate/index.js",
          "require": "./toDate/index.js"
        },
        "./utcToZonedTime": {
          "types": "./utcToZonedTime/index.d.ts",
          "import": "./esm/utcToZonedTime/index.js",
          "require": "./utcToZonedTime/index.js"
        },
        "./zonedTimeToUtc": {
          "types": "./zonedTimeToUtc/index.d.ts",
          "import": "./esm/zonedTimeToUtc/index.js",
          "require": "./zonedTimeToUtc/index.js"
        },
        "./fp": {
          "types": "./fp/index.d.ts",
          "import": "./esm/fp/index.js",
          "require": "./fp/index.js"
        },
        "./fp/format": {
          "types": "./fp/format/index.d.ts",
          "import": "./esm/fp/format/index.js",
          "require": "./fp/format/index.js"
        },
        "./fp/formatInTimeZone": {
          "types": "./fp/formatInTimeZone/index.d.ts",
          "import": "./esm/fp/formatInTimeZone/index.js",
          "require": "./fp/formatInTimeZone/index.js"
        },
        "./fp/getTimezoneOffset": {
          "types": "./fp/getTimezoneOffset/index.d.ts",
          "import": "./esm/fp/getTimezoneOffset/index.js",
          "require": "./fp/getTimezoneOffset/index.js"
        },
        "./fp/toDate": {
          "types": "./fp/toDate/index.d.ts",
          "import": "./esm/fp/toDate/index.js",
          "require": "./fp/toDate/index.js"
        },
        "./fp/utcToZonedTime": {
          "types": "./fp/utcToZonedTime/index.d.ts",
          "import": "./esm/fp/utcToZonedTime/index.js",
          "require": "./fp/utcToZonedTime/index.js"
        },
        "./fp/zonedTimeToUtc": {
          "types": "./fp/zonedTimeToUtc/index.d.ts",
          "import": "./esm/fp/zonedTimeToUtc/index.js",
          "require": "./fp/zonedTimeToUtc/index.js"
        }
      },
      "scripts": {
        "build": "./scripts/build/build.sh",
        "package": "./scripts/build/package.sh",
        "clean": "rm -rf tmp/package && rm tmp/docs.json",
        "test": "cross-env NODE_OPTIONS=\"--openssl-legacy-provider\" karma start config/karma.js",
        "test:watch": "cross-env TEST_WATCH=true NODE_OPTIONS=\"--openssl-legacy-provider\" karma start config/karma.js",
        "prettier": "prettier . --write",
        "lint": "eslint .",
        "lint-types": "eslint --config=.ts-eslintrc.js typings.d.ts"
      },
      "husky": {
        "hooks": {
          "pre-commit": "lint-staged"
        }
      },
      "lint-staged": {
        "*.js": [
          "eslint"
        ],
        "*.{js,json,md,ts}": [
          "prettier --write"
        ]
      },
      "peerDependencies": {
        "date-fns": ">=2.0.0"
      },
      "devDependencies": {
        "@babel/cli": "^7.15.4",
        "@babel/core": "^7.15.5",
        "@babel/node": "^7.15.4",
        "@babel/plugin-transform-arrow-functions": "^7.14.5",
        "@babel/plugin-transform-block-scoping": "^7.15.3",
        "@babel/plugin-transform-destructuring": "^7.14.7",
        "@babel/plugin-transform-modules-commonjs": "^7.5.0",
        "@babel/plugin-transform-parameters": "^7.4.4",
        "@babel/plugin-transform-template-literals": "^7.4.4",
        "@typescript-eslint/eslint-plugin": "^4.31.0",
        "@typescript-eslint/parser": "^4.31.0",
        "babel-eslint": "^10.1.0",
        "babel-loader": "^8.2.2",
        "babel-plugin-add-module-exports": "^1.0.4",
        "babel-preset-power-assert": "^3.0.0",
        "cross-env": "^7.0.3",
        "date-fns": "^2.23.0",
        "eslint": "^7.11.0",
        "eslint-config-prettier": "^7.2.0",
        "flow-bin": "^0.143.1",
        "fs-promise": "^2.0.3",
        "husky": "^4.3.0",
        "jsdoc-to-markdown": "^7.0.1",
        "json-loader": "^0.5.7",
        "karma": "^3.1.4",
        "karma-benchmark": "^1.0.4",
        "karma-benchmark-reporter": "^0.1.1",
        "karma-chrome-launcher": "2.2",
        "karma-cli": "^1.0.1",
        "karma-mocha": "^1.3.0",
        "karma-mocha-reporter": "^2.2.5",
        "karma-phantomjs-launcher": "^1.0.4",
        "karma-sourcemap-loader": "^0.3.5",
        "karma-webpack": "^4.0.2",
        "lint-staged": "^10.4.0",
        "lodash": "^4.17.15",
        "lodash.clonedeep": "^4.5.0",
        "mocha": "^6.2.1",
        "power-assert": "^1.6.1",
        "prettier": "^2.2.1",
        "typescript": "^4.1.3",
        "webpack": "^4.41.1",
        "webpack-cli": "^3.1.2"
      },
      "gitHead": "4a2db966111ecef97096c093f931f83acf84c322",
      "bugs": {
        "url": "https://github.com/marnusw/date-fns-tz/issues"
      },
      "homepage": "https://github.com/marnusw/date-fns-tz#readme",
      "_id": "date-fns-tz@2.0.0",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "9.1.3",
      "dist": {
        "integrity": "sha512-OAtcLdB9vxSXTWHdT8b398ARImVwQMyjfYGkKD2zaGpHseG2UPHbHjXELReErZFxWdSLph3c2zOaaTyHfOhERQ==",
        "shasum": "1b14c386cb8bc16fc56fe333d4fc34ae1d1099d5",
        "tarball": "https://registry.npmjs.org/date-fns-tz/-/date-fns-tz-2.0.0.tgz",
        "fileCount": 165,
        "unpackedSize": 212240,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDXkMZYR4xhXTE04oHcPQhsuhuUYCRKPPCe0JHVMBqxzwIhAMg7w8fMg8SLTYkwc3VzuDr2MsP59FwDhqk8o6XDTD/M"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj15G9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrurA/7BB86ZtafPZqOCFlq/97p2n3bnkLU/H9pbErhiTb2C4oao3Ol\r\nn+KbMYNTUFil1F0k2VSUDgMFvAylFld1GTmKZajAifQ4wwJgbAQGPXEtMErZ\r\nqu+Hi5syDFaeNFscNBURCealQ2DP871yziz8psqfGViKnK6sqA+tEeJE/h/k\r\noLrbIeEWSEH3lqrxDdXSXiRpMfGftu6xntr6BJjFCaam1y3Tne6hZzN7QWU+\r\nkelCRRxb/rB1LLGG2V+9X5B/t5M1xn2fMIQR3Uq2Ikh8K6RMkzHjcrR1CdiR\r\ngrmUs+0N7DApBSmsp4RBJWN+xeBdj56Wtecu/T+7DDsAJ+pdrv5pghHh7cb9\r\nh3tDqyBvKdi4b/ZNjqJ2wOq6OJbkwrenktPyuobWmzb59OMG07gaS4fLpMiD\r\nGGRxDdXXYNJcS+WMgXvkW8jx3p9bzY+r/JHXnOAiOZiDNyXxZ8OniJq9+tYV\r\np1x/tEFbUeY78WtqGp8gHYUUJWABD3mmK6INtkvXbc3XoWLEAjDSCIkAXtUK\r\nRRVC6D/9g8PjUn1DIIDYrwCEYMj5smdm058J07oImbxB/X++9zCtElXE+kP9\r\nxXMsKDYjg6gSWVsyHZ6t2/QXOErBERjx40zToY+Qd3OWyXvWO9gsTg6IUL6C\r\n8flpm7GQsibLzkN+rq0RcHiJRMfLSq1ACV8=\r\n=LhED\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "marnusw",
        "email": "marnusw@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "marnusw",
          "email": "marnusw@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/date-fns-tz_2.0.0_1675071933173_0.9947727997015954"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2018-11-12T21:09:16.834Z",
    "0.1.0": "2018-11-12T21:09:17.023Z",
    "modified": "2023-01-30T09:45:33.476Z",
    "0.1.1": "2018-11-13T10:08:15.413Z",
    "0.1.2": "2018-12-17T21:16:48.779Z",
    "1.0.0-beta.1": "2019-01-01T18:22:51.719Z",
    "1.0.0": "2019-01-01T19:53:35.018Z",
    "1.0.1": "2019-01-12T12:01:59.749Z",
    "1.0.2": "2019-01-21T07:39:05.768Z",
    "1.0.3": "2019-01-21T08:00:36.677Z",
    "1.0.4": "2019-01-23T07:20:43.004Z",
    "1.0.5": "2019-01-25T08:24:29.425Z",
    "1.0.6-beta.1": "2019-01-25T14:58:33.544Z",
    "1.0.6": "2019-02-02T14:47:54.246Z",
    "1.0.7-beta.1": "2019-02-02T15:09:50.164Z",
    "1.0.7": "2019-02-09T09:34:12.736Z",
    "1.0.8-beta.1": "2019-10-11T07:28:08.938Z",
    "1.0.8": "2019-10-12T14:41:09.092Z",
    "1.0.9": "2019-12-28T16:16:50.123Z",
    "1.0.10": "2020-02-10T10:32:46.676Z",
    "1.0.11": "2020-10-05T13:04:54.324Z",
    "1.0.12": "2020-10-09T16:51:55.977Z",
    "1.1.0": "2021-01-30T11:24:28.648Z",
    "1.1.1": "2021-01-30T11:29:56.237Z",
    "1.1.2": "2021-02-20T13:40:13.027Z",
    "1.1.3": "2021-02-27T11:35:29.425Z",
    "1.1.4": "2021-04-13T21:31:23.742Z",
    "1.1.5": "2021-07-27T07:46:56.756Z",
    "1.1.6": "2021-07-27T16:42:37.649Z",
    "1.1.7": "2021-12-17T11:57:48.755Z",
    "1.2.0": "2021-12-20T14:02:26.469Z",
    "1.2.1": "2021-12-21T10:43:45.340Z",
    "1.2.2": "2021-12-21T10:52:50.152Z",
    "1.3.0-beta.0": "2022-02-22T22:08:50.871Z",
    "1.3.0-beta.1": "2022-02-23T13:13:49.421Z",
    "1.3.0-beta.2": "2022-02-23T21:55:05.172Z",
    "1.3.0-beta.3": "2022-02-23T21:59:15.252Z",
    "1.3.0": "2022-02-24T10:55:36.314Z",
    "1.3.1": "2022-03-25T16:32:27.223Z",
    "1.3.2": "2022-03-31T13:47:13.304Z",
    "1.3.3": "2022-04-01T09:19:08.043Z",
    "1.3.4": "2022-04-28T08:49:05.563Z",
    "1.3.5": "2022-06-18T14:29:55.162Z",
    "1.3.6": "2022-07-13T11:36:19.102Z",
    "1.3.7": "2022-08-31T20:24:14.538Z",
    "1.3.8": "2023-01-30T09:40:01.024Z",
    "2.0.0": "2023-01-30T09:45:33.362Z"
  },
  "maintainers": [
    {
      "name": "marnusw",
      "email": "marnusw@gmail.com"
    }
  ],
  "description": "Time zone support for date-fns v2 with the Intl API",
  "homepage": "https://github.com/marnusw/date-fns-tz#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/marnusw/date-fns-tz.git"
  },
  "author": {
    "name": "Marnus Weststrate",
    "email": "marnusw@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/marnusw/date-fns-tz/issues"
  },
  "license": "MIT",
  "readme": "# date-fns-tz\n\nTime zone support for [date-fns](https://date-fns.org/) v2.0.0 using the\n[Intl API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl).\nBy using the browser API no time zone data needs to be included in code bundles. Modern browsers\nand Node.js all support the\n[necessary features](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat#Browser_compatibility),\nand for those that don't a [polyfill](https://formatjs.io/docs/polyfills/intl-datetimeformat) can be used.\n\nIf you do not wish to use a polyfill the time zones can still be specified as offsets\nsuch as '-0200' or '+04:00', but not IANA time zone names.\n\n**Note:** `date-fns` is a peer dependency of this library.\n\nIf you find this library useful, why not\n\n<a href=\"https://www.buymeacoffee.com/marnusw\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n## ESM and CommonJS\n\nThis library supports CommonJS and native ESM imports. The exports field in [package.json](./package.json)\ndefines the correct entry point depending on project type, so the same import path is used for both.\nMake sure to set the `type` property in your project's `package.json` to either `module`, for ESM, or `commonjs`.\n\nEven when using ESM some CommonJS imports from `date-fns` will be used until they support\nESM natively as well [date-fns#1781](https://github.com/date-fns/date-fns/issues/1781).\nThis is because an ESM project cannot use ESM imports from a library that doesn't specify\n`{\"type\": \"module\"}`.\n\n## Table of Contents\n\n- [Overview](#overview)\n- [Date and time zone formatting](#date-and-time-zone-formatting)\n  - [`formatInTimeZone`](#formatintimezone) - Formats a date in the provided time zone,\n    regardless of the system time zone\n- [Time zone offset helpers](#time-zone-offset-helpers)\n  - [`zonedTimeToUtc`](#zonedtimetoutc) - Given a date and any time zone, returns a `Date` with the equivalent UTC time\n  - [`utcToZonedTime`](#utctozonedtime) - Get a date/time representing local time in a given time zone from the UTC date\n  - [`getTimezoneOffset`](#gettimezoneoffset) - Gets the offset in milliseconds between the time zone and UTC time\n- [Low-level formatting helpers](#low-level-formatting-helpers)\n  - [`format`](#format) - Extends `date-fns/format` with support for all time zone tokens,\n    including `z..zzzz`\n  - [`toDate`](#todate) - Can be used to parse a `Date` from a date string representing time in\n    any time zone\n- [Usage with Android](#usage-with-android)\n\n## Overview\n\nWorking with UTC or ISO date strings is easy, and so is working with JS dates when all times\nare displayed in a user's local time in the browser. The difficulty comes when working with another\ntime zone's local time, one other than the current system's, like on a Node server or when showing\nthe time of an event in a specific time zone, like an event in LA at 8pm PST regardless of where\na user resides.\n\nIn this case there are two relevant pieces of information:\n\n- a fixed moment in time in the form of a timestamp, UTC or ISO date string, and\n- the time zone descriptor, usually an offset or IANA time zone name (e.g. `America/New_York`).\n\nLibraries like Moment and Luxon, which provide their own date-time classes, manage these\ntimestamp and time zone values internally. Since `date-fns` always returns a plain JS Date,\nwhich implicitly has the current system's time zone, helper functions are provided for handling\ncommon time zone related use cases.\n\n## Date and time zone formatting\n\n### `formatInTimeZone`\n\nThis function takes a `Date` instance in the system's local time or an ISO8601 string, and\nan IANA time zone name or offset string. It then formats this date in the target time zone\nregardless of the system's local time zone.\n\nIt supports the same format tokens as `date-fns/format`, and adds full support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_, e.g. `EST`\n- The `zzzz` Unicode token: _long specific non-location format_, e.g. `Eastern Standard Time`\n\nUnlike `date-fns/format`, the `z..zzzz`, `x..xxxxx`, `X..XXXXX` and `O..OOO` tokens will all\nprint the formatted value of the provided time zone rather than the system time zone.\n\nAn invalid date or time zone input will result in an `Invalid Date` passed to `date-fns/format`,\nwhich will throw a `RangeError`.\n\nFor most use cases this is the only function from this library you will need.\n\n```javascript\nimport { formatInTimeZone } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ssXXX') // 2014-10-25 06:46:20-04:00\nformatInTimeZone(date, 'America/New_York', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 06:46:20 EST\nformatInTimeZone(date, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz') // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzz', { locale: enGB })\n// 2014-10-25 10:46:20 CEST\n\nformatInTimeZone(parisDate, 'Europe/Paris', 'yyyy-MM-dd HH:mm:ss zzzz', { locale: enGB })\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n## Time zone offset helpers\n\nThese functions are useful when you are not formatting a date yourself, but passing it to\nthird-party code such as a date picker library alongside an input for selecting a time zone.\n\nTo discuss the usage of the time zone helpers let's assume we're writing a system where\nadministrators set up events which will start at a specific time in the venue's local time, and\nthis local time should be shown when accessing the site from anywhere in the world.\n\n### `zonedTimeToUtc`\n\nGiven a date and any time zone, returns a `Date` with the equivalent UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```ts\nzonedTimeToUtc(date: Date|Number|String, timeZone: String): Date\n```\n\nSay a user is asked to input the date/time and time zone of an event. A date/time picker will\ntypically return a Date instance with the chosen date, in the user's local time zone, and a\nselect input might provide the actual IANA time zone name.\n\nIn order to work with this info effectively it is necessary to find the equivalent UTC time:\n\n```javascript\nimport { zonedTimeToUtc } from 'date-fns-tz'\n\nconst date = getDatePickerValue() // e.g. 2014-06-25 10:00:00 (picked in any time zone)\nconst timeZone = getTimeZoneValue() // e.g. America/Los_Angeles\n\nconst utcDate = zonedTimeToUtc(date, timeZone) // In June 10am in Los Angeles is 5pm UTC\n\npostToServer(utcDate.toISOString(), timeZone) // post 2014-06-25T17:00:00.000Z, America/Los_Angeles\n```\n\n### `utcToZonedTime`\n\nReturns a `Date` which will format as the local time of any time zone from a specific UTC time.\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```js\nutcToZonedTime(date: Date|Number|String, timeZone: String): Date\n```\n\nSay the server provided a UTC date/time and a time zone which should be used as initial values\nfor the above form. The date/time picker will take a Date input which will be in the user's\nlocal time zone, but the date value must be that of the target time zone.\n\n```javascript\nimport { utcToZonedTime } from 'date-fns-tz'\n\nconst { isoDate, timeZone } = fetchInitialValues() // 2014-06-25T10:00:00.000Z, America/New_York\n\nconst date = utcToZonedTime(isoDate, timeZone) // In June 10am UTC is 6am in New York (-04:00)\n\nrenderDatePicker(date) // 2014-06-25 06:00:00 (in the system time zone)\nrenderTimeZoneSelect(timeZone) // America/New_York\n```\n\n### `getTimezoneOffset`\n\nReturns the offset in milliseconds between the time zone and UTC time.\n\n```js\ngetTimezoneOffset(timeZone: String, date: Date|Number): number\n```\n\nReturns the time zone offset from UTC time in milliseconds for IANA time zones as well\nas other time zone offset string formats.\n\nFor time zones where daylight savings time is applicable a `Date` should be passed on\nthe second parameter to ensure the offset correctly accounts for DST at that time of\nyear. When omitted, the current date is used.\n\nFor invalid time zones, `NaN` is returned.\n\n```javascript\nimport { getTimezoneOffset } from 'date-fns-tz'\n\nconst result = getTimezoneOffset('-07:00')\n//=> -18000000 (-7 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('Africa/Johannesburg')\n//=> 7200000 (2 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 0, 1))\n//=> -18000000 (-5 * 60 * 60 * 1000)\nconst result = getTimezoneOffset('America/New_York', new Date(2016, 6, 1))\n//=> -14400000 (-4 * 60 * 60 * 1000)\n```\n\n## Low-level formatting helpers\n\n### `format`\n\nThe `format` function exported from this library is used under the hood by `formatInTimeZone`\nand extends `date-fns/format` with full time zone support for:\n\n- The `z..zzz` Unicode tokens: _short specific non-location format_\n- The `zzzz` Unicode token: _long specific non-location format_\n\nWhen using those tokens with `date-fns/format` it falls back to the GMT time zone format, and\nalways uses the current system's local time zone. For example `zzz` in New York will always return\n`GMT-4` instead of the desired `EST`, and `zzz` in Paris `GMT+2` instead of `CEST`, making the\ntime zone tokens somewhat irrelevant. This extended `format` function returns the proper\nspecific non-location format, e.g. `EST` or `Eastern Standard Time`, and that of the target time\nzone (if provided, see below) rather than the system time zone.\n\nSince a JavaScript `Date` instance cannot convey the time zone information to the `format` function\nit is necessary to pass the `timeZone` value as an option on the third argument of `format`.\n\nSimilar to `date-fns/format`, when an invalid date is used a `RangeError` is thrown. When an invalid\ntime zone is provided _and included in the output_, i.e. with time zone tokens in the format\nstring, it will also throw a `RangeError`.\n\nTo format a date showing time for a specific time zone other than the system time zone, the\n`format` function can be combined with `utcToZonedTime`. This is what `formatInTimeZone` does\ninternally. _To clarify, the `format` function will never change the underlying date, it must be\nchanged to a zoned time before passing it to `format`._\n\nIn most cases there is no need to use `format` rather than `formatInTimeZone`. The only time\nthis makes sense is when `utcToZonedTime` has been applied to a date once, and you want to\nformat it multiple times to different outputs.\n\n```javascript\nimport { format, utcToZonedTime } from 'date-fns-tz'\n\nconst date = new Date('2014-10-25T10:46:20Z')\n\nconst nyDate = utcToZonedTime(date, 'America/New_York')\nconst parisDate = utcToZonedTime(date, 'Europe/Paris')\n\nformat(nyDate, 'yyyy-MM-dd HH:mm:ssXXX', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20-04:00\nformat(nyDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'America/New_York' }) // 2014-10-25 06:46:20 EST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/Paris' }) // 2014-10-25 10:46:20 GMT+2\n\n// The time zone name is generated by the Intl API which works best when a locale is also provided\nimport enGB from 'date-fns/locale/en-GB'\n\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 CEST\nformat(parisDate, 'yyyy-MM-dd HH:mm:ss zzzz', {\n  timeZone: 'Europe/Paris',\n  locale: enGB,\n})\n// 2014-10-25 10:46:20 Central European Summer Time\n```\n\n### `toDate`\n\nThe `toDate` function can be used to parse a `Date` from a string containing a date and time\nrepresenting time in any time zone by providing an IANA time zone name on the `timeZone` option.\n\nAn invalid date string or time zone will result in an `Invalid Date`.\n\n```javascript\nimport { toDate, format } from 'date-fns-tz'\n\n// Offsets in the date string work as usual and take precedence\nconst parsedDate = toDate('2014-10-25T13:46:20+04:00')\nconst parisDate = utcToZonedTime(parsedDate, 'Europe/Paris')\nformat(parisDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Europe/Paris' }) // 2014-10-25 11:46:20+02:00\n\n// Since toDate simply clones a Date instance, the timeZone option is effectively ignored in this case\nconst date = new Date('2014-10-25T13:46:20Z')\nconst clonedDate = toDate(date, { timeZone: 'Europe/Paris' })\nassert(date.valueOf() === clonedDate.valueOf())\n\n// When there is no offset in the date string the timeZone property is used\nconst parsedDate = toDate('2014-10-25T13:46:20', { timeZone: 'Asia/Bangkok' })\nconst bangkokDate = utcToZonedTime(parsedDate, 'Asia/Bangkok')\nformat(bangkokDate, 'yyyy-MM-dd HH:mm:ssxxx', { timeZone: 'Asia/Bangkok' }) // 2014-10-25 13:46:20+07:00\n```\n\n## Usage with Android\n\nThis library works with React Native, however the `Intl` API is not available by default on Android.\n\nIn projects that do not use Hermes, make this change to `android/app/build.gradle`:\n\n```diff\n- def jscFlavor = 'org.webkit:android-jsc:+'\n+ def jscFlavor = 'org.webkit:android-jsc-intl:+'\n```\n\nReact Native does not currently support `Intl` on Android with\nHermes ([facebook/hermes#23](https://github.com/facebook/hermes/issues/23)). The best bet\nseems to be using the [polyfills by Format.JS](https://formatjs.io/docs/polyfills/intl-datetimeformat).\n\n## Usage with Node.js\n\nNode.js supports the `Intl` API and ships with full ICU data included in the binary from v13,\ni.e. this library will just work.\n\nNode.js v12, which reaches end of life on 30 April 2022, requires running with\n[full ICU data provided at runtime](https://nodejs.org/docs/latest-v12.x/api/intl.html#intl_providing_icu_data_at_runtime).\n\n## Credit\n\nThe idea of using the Intl API for time zone support was inspired by the [Luxon](https://github.com/moment/luxon)\nlibrary.\n\nThe initial port of the idea into date-fns was done by [@benmccan](https://github.com/benmccann) in\n[date-fns/#676](https://github.com/date-fns/date-fns/pull/676).\n\n## License\n\nMIT © Marnus Weststrate\n",
  "readmeFilename": "README.md",
  "users": {
    "dgmike": true
  },
  "keywords": [
    "date-fns",
    "timezone",
    "time zone",
    "date",
    "time",
    "parse",
    "format",
    "immutable"
  ]
}