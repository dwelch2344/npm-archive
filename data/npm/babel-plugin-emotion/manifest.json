{
  "_id": "babel-plugin-emotion",
  "_rev": "108-4efefa8f4d3d3101ecb7b97e62457d76",
  "name": "babel-plugin-emotion",
  "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
  "dist-tags": {
    "latest": "11.0.0",
    "next": "11.0.0-next.11",
    "rc": "11.0.0-rc.0",
    "ten": "10.2.2"
  },
  "versions": {
    "7.1.0": {
      "name": "babel-plugin-emotion",
      "version": "7.1.0",
      "description": "The Next Generation of CSS-in-JS ",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "autoprefixer": "^7.1.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^7.1.0",
        "postcss": "^6.0.9",
        "postcss-js": "^1.0.0",
        "postcss-nested": "^2.1.1",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tkh44/emotion.git"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@7.1.0",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-P7DST1aFIbNxMLx5Cj3Ofthbb8e6miEf0XTuiXWZfo7t58yREUQ6yO78r1FJlQd+iGHMHozfWve63Dzj0l4sEg==",
        "shasum": "a426861c50f2c42b9d15aef8796da143752a981b",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-7.1.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDFg/qAJvg1+N+KjntT89zlZrzoTFnc2x5I8FlDoEPtfAiBlXuMutHLhnq07vW4FVrnNphivLnzb83EzfhXG+lJCXg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-7.1.0.tgz_1503012050553_0.1374696681741625"
      },
      "directories": {}
    },
    "7.2.2": {
      "name": "babel-plugin-emotion",
      "version": "7.2.2",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "autoprefixer": "^7.1.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^7.2.2",
        "postcss": "^6.0.9",
        "postcss-js": "^1.0.0",
        "postcss-nested": "^2.1.1",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@7.2.2",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-jfGXY9wNUznWdYweDqhSMoU5U9tZq1tWNy5q2CqNf8O5Vn3cpKpXy3J0OqkcIPoN4kKwxbCwrjL0ckrjg8GbpQ==",
        "shasum": "eae520ef15e4affd87aab761e1c8b48b3385af3e",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-7.2.2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDSXOXXcoYmGEfw05MtadUpTqe98+hm0fMtmtYLiy+eZAiEA2/2YpN/Kjod3jtoOp2sxch9S7BDReU+SoZzb9MKs8/s="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-7.2.2.tgz_1504630036213_0.3342996318824589"
      },
      "directories": {}
    },
    "7.3.0": {
      "name": "babel-plugin-emotion",
      "version": "7.3.0",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "autoprefixer": "^7.1.2",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^7.2.2",
        "postcss": "^6.0.9",
        "postcss-js": "^1.0.0",
        "postcss-nested": "^2.1.1",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@7.3.0",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-NaDwVlx00nltMQidSqJ6/9Pc21AyF/IyrLM61knuSEn3/SJe25nScZWwYD/OcFNHfwJcIKjecupjXXZGMv2utg==",
        "shasum": "cf95b3c72907cc9958aa50693dd2155c40d11543",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-7.3.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIG7TRuRq9dj+3TL/keElc3maKmExaDIS7i60EoDMu9/mAiAvg5URbX8Q6ePkqooF+xneuklYmL/+d4hSG7qMLwjsFw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-7.3.0.tgz_1505319308207_0.8630364567507058"
      },
      "directories": {}
    },
    "7.3.1": {
      "name": "babel-plugin-emotion",
      "version": "7.3.1",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "autoprefixer": "^7.1.2",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^7.3.1",
        "postcss": "^6.0.9",
        "postcss-js": "^1.0.0",
        "postcss-nested": "^2.1.1",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@7.3.1",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-4wNhj9biYCnu/sc8+cXSTh5ReeqJEnMrRZ+gYq2lcu/mtk2kKsHIydmqL+uQfoyzLV2+VapDAS8zTtEsK3mRgg==",
        "shasum": "81c5606b437ec5f314268c7ba3c8a430d1ec5844",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-7.3.1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD/Yv97FrPtVdUQcNtwTR0sVXtnkbUZ3Iljv5DUD0CqQAIhAJrh1VA4MgIBdoFNkVa+Jq8NDUxsvaR+mNfbZ3ZBzb2q"
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-7.3.1.tgz_1505321188488_0.239655795507133"
      },
      "directories": {}
    },
    "7.3.2": {
      "name": "babel-plugin-emotion",
      "version": "7.3.2",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "autoprefixer": "^7.1.2",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^7.3.1",
        "postcss": "^6.0.9",
        "postcss-js": "^1.0.0",
        "postcss-nested": "^2.1.1",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@7.3.2",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-TuSu90IjVxUWSNiurAUm9J5WGxL2uz5lggqL/RUH2y3VXZp7NiRNBivZkJH1To9I/WIjyLwqXHEUf5T+4g5FlA==",
        "shasum": "2d07d990281ac680ef981326debbe115a67d436a",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-7.3.2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCJjVYUSGaKbMb+sPdh/ElYN7SuZFwJenARP34T8w5U5gIgZvWs58Lg1BG8Gzn2Kz5AKt4YLEqkvRrlsx9yRvrdrMY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-7.3.2.tgz_1505392224932_0.9554246983025223"
      },
      "directories": {}
    },
    "8.0.0-0": {
      "name": "babel-plugin-emotion",
      "version": "8.0.0-0",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "autoprefixer": "^7.1.2",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^8.0.0-0",
        "postcss": "^6.0.9",
        "postcss-js": "^1.0.0",
        "postcss-nested": "^2.1.1",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.0-0",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-/IhnZ7O1GpbLyklX6ha1t5vuARua2HKzhRuoJkEaXLNbNyb/OLV5PdHSDfSNoS2vqkbowuPHl3NKMVtsIrxQ7A==",
        "shasum": "10cd2920c5feab79cfa3c231f9e69c82d3cf5546",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.0-0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDfgKh9mmMeFmJ8b4H+87RS+eqqziPhjEIfcoDBfx1BaAIga4ihRUXm50Kx8Pxr8lBZ4aV7MHGU6xfl9giY5wGrS4g="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.0-0.tgz_1505875054226_0.7672233285848051"
      },
      "directories": {}
    },
    "8.0.1-0": {
      "name": "babel-plugin-emotion",
      "version": "8.0.1-0",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "autoprefixer": "^7.1.2",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^8.0.1-0",
        "postcss": "^6.0.9",
        "postcss-js": "^1.0.0",
        "postcss-nested": "^2.1.1",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.1-0",
      "_npmVersion": "5.0.3",
      "_nodeVersion": "8.1.2",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-L4r6ddbGPcgxANtwaMerm3PcnwtDHijFsGN1SFKdRuhp8Iz79vQ0iv6C2oexLLgDuAB/tCLx1+hWU/A/ufKGmw==",
        "shasum": "3075830517b126ec86a4b5015d0961cdb2f2ed34",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.1-0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDiMrKBll13p8KGuHRtSPn07+VBJjLOBJVdVIkbbFXQyAiEAwXLtQNyDhHxTrDYlkJJf2OSpxjDEGLcRalKQtCo5kx4="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.1-0.tgz_1505946707136_0.4621044236700982"
      },
      "directories": {}
    },
    "8.0.2-1": {
      "name": "babel-plugin-emotion",
      "version": "8.0.2-1",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "autoprefixer": "^7.1.2",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^8.0.1-0",
        "postcss": "^6.0.9",
        "postcss-js": "^1.0.0",
        "postcss-nested": "^2.1.1",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.2-1",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-UNeWDO27cODutPnr+s5RMMN6QAQC7mXk+J6NsdAuMn/7ytrlS67/moNBY35dI69yUA/5k76ysJSq5BZZVKOylQ==",
        "shasum": "c5b25471b6d550d8315a57ec3a2eedef2125be47",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.2-1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICcOZZfMsNy8LVLpNevh6cgarer66LM27xuznCFdCX6XAiEAiVREif9JU7WK5BNhG8zk0CKzUcWq91XXw1g4Mdi1nvI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.2-1.tgz_1505960221137_0.870848459424451"
      },
      "directories": {}
    },
    "8.0.2-2": {
      "name": "babel-plugin-emotion",
      "version": "8.0.2-2",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "autoprefixer": "^7.1.2",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^8.0.2-2",
        "postcss": "^6.0.9",
        "postcss-js": "^1.0.0",
        "postcss-nested": "^2.1.1",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.2-2",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-TgAQlAkDrnZEtgFJOqds34JXZ0vLUmfpZztyXmquEB76j3415QbT4qncrZUutU9M08YdX/B1/lO73gQ1qW/DPQ==",
        "shasum": "50822c933614c27486ce4b6111436f6342b0f0af",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.2-2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICiD9m3v84c9Td0kTepvRpkvGZIrWruD7gkM5DZaQxluAiEAhG7+C1BxHoQBU8fjoaRNNpOpLQUT0Ll+JF91pqMA71I="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.2-2.tgz_1506040436834_0.2619068471249193"
      },
      "directories": {}
    },
    "8.0.2-3": {
      "name": "babel-plugin-emotion",
      "version": "8.0.2-3",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "emotion-utils": "^8.0.2-3",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.2-3",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-6i5wAtwFJUFG/vSEV0I7K6XDBJAc2PKiH1cvjb6+mqy9yPiK53lYEWuuzjgsnWHeWGBk6igVz2NW60y+ZyxMAA==",
        "shasum": "4ca0dc33c196d1c6506d2e450a6ee4997dbb06b9",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.2-3.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFrSFhca4SUiNYDIYzb1ruqEm3cJAaLkftmgb6uCVKFwAiEAuSlVCVSU9+hwG3CkkByuLe0KCQjLs/LXlNpNpVU5Nug="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.2-3.tgz_1506045590548_0.4198463037610054"
      },
      "directories": {}
    },
    "8.0.2-5": {
      "name": "babel-plugin-emotion",
      "version": "8.0.2-5",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.2-3",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.2-5",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-pQ9jtqcnzOEaHJWWYAQDp4Jkim7G7YOxZU7EIWyj89gutm27yp0tHkwTdWZTEOcMb7l5MxaZDk1eh+NXZdz4gg==",
        "shasum": "49d5d27dcf7cf6b41f426de06dddf6a8dbe45f5f",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.2-5.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHwTFstFLCIWO10M7r1mFPRB0B5SpqhEpceamfzR2en/AiBBDCQUzoCKUX9l/kPEQkwL/ssyA3A2SVLjAiErRw3Yig=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.2-5.tgz_1506219277461_0.06892239721491933"
      },
      "directories": {}
    },
    "8.0.2-6": {
      "name": "babel-plugin-emotion",
      "version": "8.0.2-6",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.2-3",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.2-6",
      "_npmVersion": "5.0.4",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-8UpydgVTA+RiTLW6RWKhbkUltyRiNhWNVJNznd85OAskvy6oGYuonknWOs6IzcnJKL3ytnVkiecf5ulRkyiOGA==",
        "shasum": "3d6aa8980ef53c7a0de7ef468e5f31fefd2b4682",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.2-6.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDDaTXlC0BlJVpZjbzi+fM7MR/C7O4CDSTKzkhQEqEPigIgcbF4sOl/Oy2LUroH7qjcvw8BjW+ZAJGt0+Zv4TIxwbc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.2-6.tgz_1506323631938_0.08744290750473738"
      },
      "directories": {}
    },
    "8.0.2-7": {
      "name": "babel-plugin-emotion",
      "version": "8.0.2-7",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.2-7",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.2-7",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.1.2",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-on5jlUyVh9FGYlnCjG6LpLahp0BDC0Xu1Z94rYTulqn0DRzO094V1jJYbDPgrxGt9OS4g3XwXSIq4gZzRLOnSQ==",
        "shasum": "5b7fce1fe665b5d8aad1fae778be847a926a815c",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.2-7.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG3AoJ8382MGB8iCBUiSs2PnyHOkqRUeOpyLZdqq6AHLAiEA1vCpC1BdcRCx57Y3YofjMupH1e8MUcIHaqFNf0sx3lI="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.2-7.tgz_1506394868101_0.7039199899882078"
      },
      "directories": {}
    },
    "8.0.2-10": {
      "name": "babel-plugin-emotion",
      "version": "8.0.2-10",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.2-7",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.2-10",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.1.2",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-LlWx/zp0oop+hvr8fEUfyHPPpkgjCRl+0YzxSuU6cYPuZncJQT/VASja9Ujcl6bO4UlYuu8z7w9an4BYI2nCVQ==",
        "shasum": "857ddda66e9f24f84dd7901e5f42e894d44f62e0",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.2-10.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCZ+OV7CtDVtUHiFISOMiXRi6/inMNfgvgD9SybD9+i3AIhAJWhFXKWrG0QHtR5vLfno10EUjMjHLqI85HtVN5wetTq"
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.2-10.tgz_1506710512618_0.4185130207333714"
      },
      "directories": {}
    },
    "8.0.2-11": {
      "name": "babel-plugin-emotion",
      "version": "8.0.2-11",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.2-7",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.2-11",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-9loRvVVJYds3TbJg7WomxAS1cOcb2s6dcQ7GH0Qz0/WaSIqW3FziZM46969BH7P63WihxTCCaICpNxBBHNYMOg==",
        "shasum": "aa8821bbc6f4eefdea00bd9c76810676ec60f4cc",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.2-11.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGmCh0dTNR8dJo3fvbLZxnxdHSnrs7D9lDIpdNFoEXR0AiEA6WpoeklsTjL/HzsmKWTNyOhaag63GT3XTUj5NNYL9+I="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.2-11.tgz_1506748341940_0.8598353720735759"
      },
      "directories": {}
    },
    "8.0.2": {
      "name": "babel-plugin-emotion",
      "version": "8.0.2",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.2-7",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.2",
      "_npmVersion": "5.5.0",
      "_nodeVersion": "8.1.2",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-Gp3MfafmuiQDnceGOLJwUhDFVquYvV1sg7BmGTgu79THgKq5Dmme4t8M6ANHbW/HCShn9hqWoqu1ItQXSrFfzA==",
        "shasum": "0d674bd480c69e6b2d3affccfb654d6f97c6bf04",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEHXHAphy8lPnK9uIJqx0vn1VvUCbCujfyKTuBdBtrPGAiB7qRVD0GMxFv+c5Qy21n5JXihOONQuKhNP59pG/JEaEw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.2.tgz_1507224899226_0.9365113272797316"
      },
      "directories": {}
    },
    "8.0.3": {
      "name": "babel-plugin-emotion",
      "version": "8.0.3",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.2-7",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.3",
      "_npmVersion": "5.0.3",
      "_nodeVersion": "8.1.2",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-2022Zz7fV3vYkxne8OzLnE7/ZpsGMYItAT6gWzqD5IO9Xzwh2mzyTcAIK91t3Sa+hewoISbPsQdsER1gHf6ajw==",
        "shasum": "c80ec839920e8a8b5d43824266c416129d0a31a4",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.3.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEfcvLAKLxBFini4eo+ctCjYHEUImYWQ7s7afUv6D4YoAiAFrX/GWBgviD+aVTio26uA3v2lwGuPA6xynS1q0Bl9ww=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.3.tgz_1507328626039_0.6074289293028414"
      },
      "directories": {}
    },
    "8.0.4": {
      "name": "babel-plugin-emotion",
      "version": "8.0.4",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.2-7",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.4",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-Vfpu73g5078/4cd1c4aOePGPEIfpktOo9Wmh9PHH9NnaXOHl5TezJgF87MI70PEkwQ7MSoMVfvzP2v+ZoGCuYg==",
        "shasum": "e7935423a44a4182137f0e63b89c7bdf0ac80e39",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.4.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEdEqIMJaA2sNLrj3j/4sPsD7G7ynWVDEshKIpetpJ+TAiA6k5rgSmhZGzZQEzVj3StSaz1veyf/4onyHTk+7B2czA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.4.tgz_1507334440651_0.3802975059952587"
      },
      "directories": {}
    },
    "8.0.6": {
      "name": "babel-plugin-emotion",
      "version": "8.0.6",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.6",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.6",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-aCZ1zM1IjGYGmp8py2HsACr8/naT0gOrVSTGg5kI4Hcx/5sa2BQX7XJipC7Lj3kEF7xPnbbEmJCtWFkWeu2Ofg==",
        "shasum": "f86c6065378defd0f6adaacedab45858b2ca6091",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.6.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCvPorhGTXAlyGnctHjwXnUnxbEoK1hkuDO/wEjkINJBQIhAKQdwUwtKH7wcx/MNyKhIfL9YRc5dK6yatYpiAgIZJt2"
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.6.tgz_1507954383605_0.8537804000079632"
      },
      "directories": {}
    },
    "8.0.9": {
      "name": "babel-plugin-emotion",
      "version": "8.0.9",
      "description": "A recommended babel preprocessing plugin for emotion, the The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "babel-generator": "^6.26.0",
        "babel-macros": "^1.0.2",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.9",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.9",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-IkQzmlT5NEfVAdnH9zyWIiC7FhXBM1HbEsbMRZs8VYxOBR7iWI8Bo6Ko/LRzvmTuEoGHmXMx2APa64QPm+SmZA==",
        "shasum": "65a9ead1e9a574fa1b0390ebcea942739761713c",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.9.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAdzAKwao/jmHH+p9Iejw9Beob0JKlzEGMBkekCyi4T0AiA7Y4wc5VxHCVAV/9HDryGRi4gRSM0j9rIK+5gi+oKXlQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.9.tgz_1508749636743_0.2931004916317761"
      },
      "directories": {}
    },
    "8.0.10": {
      "name": "babel-plugin-emotion",
      "version": "8.0.10",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.31",
        "babel-macros": "^1.2.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.10",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.31",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.10",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.4.0",
      "_npmUser": {
        "name": "tkh44",
        "email": "kye.hohenberger@gmail.com"
      },
      "dist": {
        "integrity": "sha512-LX676Bq1tvUnYDtv1Kq7GDenXqEN7hhAA9pmRY83QcSf6cHZaqJUnOz+lL8po2bLarfqbNEvXv257UaVhPqXaQ==",
        "shasum": "9247856d60718f3a741a8487ef907d95a4f5b8a7",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.10.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCFlfcRP3Ta/4qZB/x/T5IlEPYYpC0wZCo0uqwMzG4HNgIgK/b4X9ao9PaZT9/1YG7yAgjkqRjso89aWskzDB+kc4w="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.10.tgz_1510090248487_0.4808969874866307"
      },
      "directories": {}
    },
    "8.0.11": {
      "name": "babel-plugin-emotion",
      "version": "8.0.11",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.31",
        "babel-macros": "^1.2.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.11",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.31",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.11",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-ygv5Qc1l7s55gy2NMg3pD4PRMsKijN3jF6/aihPwzqi6pY+I4Amb9uzcuwVAR/sbGNrClf9GhzIiSXLlBi5mwg==",
        "shasum": "cec7f77e6c596a67a1973f0336f78571f8d18bb7",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.11.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHeVe4vUyxobGbIh+G2iKGXlfCTMAa404JWCYcdyIQ4TAiEAjIFuE7WtZGCRKFJ7rjKYAWvoZ5pyO8pWj0ATXoKeCVo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.11.tgz_1511520314614_0.9938905970193446"
      },
      "directories": {}
    },
    "8.0.12": {
      "name": "babel-plugin-emotion",
      "version": "8.0.12",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.32",
        "babel-macros": "^1.2.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^8.0.12",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://github.com/tkh44/emotion#readme",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/tkh44/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/tkh44/emotion/issues"
      },
      "_id": "babel-plugin-emotion@8.0.12",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-GVxl6Y86I2PPICtFqabf5qvcVc0MD8PJbLujJ9UV1tdC5QoKMe+dZD0DCpdTDEzlOJVwetMu7m+bg66NeGi49w==",
        "shasum": "2ed844001416b0ae2ff787a06b1804ec5f531c89",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-8.0.12.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDAwvKkxL5NQSoZ+dauIKFtAralWV77PprDMwQ6prVSAAIgYNFwOaxVuS01VUg7V93kkHmN9RnpPxbD43AVRefhZKU="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-8.0.12.tgz_1512084599853_0.2251946514006704"
      },
      "directories": {}
    },
    "9.0.0-0": {
      "name": "babel-plugin-emotion",
      "version": "9.0.0-0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.32",
        "babel-macros": "^1.2.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^9.0.0-0",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.0.0-0",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-/Gs2lfHC1U3anWtw2NSZEM06wJde/x1TthxL9CjTDR0xaPaNpA6drVpc0r9wK6GT2+IC9r0NhxriPdaSNd/gkw==",
        "shasum": "94652a610a76884ca6dad43e20410b72ca5362bf",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.0.0-0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCCycZ0thUBgRhmNt4hHaYvTJh+q0Ncf4XQUZSPF8C3QAIhAMBj57JtRdv9KCfO6yLatGgnhWPj3u7avpYOTrSEX2kA"
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-9.0.0-0.tgz_1514000662107_0.7669959189370275"
      },
      "directories": {}
    },
    "9.0.0-1": {
      "name": "babel-plugin-emotion",
      "version": "9.0.0-1",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.32",
        "babel-macros": "^1.2.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^9.0.0-0",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.0.0-1",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-SivOAekhr/I2caq2JQ3fxStGDyvMqJgMRhWok9zgd1XUbT+exCQUx87hk6Vub+4o6as+t3cR9tUcadVE0hOmsw==",
        "shasum": "0d4a012775d2a2b6f4f2122c679c4ab51c27f37b",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.0.0-1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDj5IsH84fdVhAmXC5dKSrvhaETtLq4icJuN3teyR8qBAiEA3DBhlk8JjlwChzNRqtMEE9xpgWqhSmEOKV5oCdqByV4="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-9.0.0-1.tgz_1514005006030_0.44662422803230584"
      },
      "directories": {}
    },
    "9.0.0-2": {
      "name": "babel-plugin-emotion",
      "version": "9.0.0-2",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.32",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^9.0.0-2",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.0.0-2",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-cWyt1jnVm2Knx2A3jW5dgkiKsv1KFagzaTVxq1HDX9e9qntGJaON7fGNSkbNXvSG+MrDty4dbI+8XnNmCV0rWQ==",
        "shasum": "ab14aad0ea06440730ef766b0ead235bd2419b4a",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.0.0-2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC72/siv3Y8WsIb6p7Pk3P2qGJ5xpKooyK5neQysvUiLQIgDMogvzuTjeLM1eTpCib4VTvDPtU3Hm4P2hGlhd3nzPc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-9.0.0-2.tgz_1516145595823_0.7349022964481264"
      },
      "directories": {}
    },
    "9.0.0-3": {
      "name": "babel-plugin-emotion",
      "version": "9.0.0-3",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.32",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^9.0.0-3",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.0.0-3",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.4.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-LdRvF2xja5idKAo6ZRmzezQmWtFxVnSVfdTkOUHD2sNEmFYnk64VNlIJlFSWYMkix06YEZey51gGt5riyWNEtQ==",
        "shasum": "4a2293911c79b6cbea1c822e7ce7bb4635bc12d0",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.0.0-3.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCh66R4E7gPw4CatIYVLIgNOcnSFL6a77fRS2/eIOGoWwIgYxzYjNdfKnG+H4R9d0Y+VFOtKBOkRubMs9k1MsTQbGc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-9.0.0-3.tgz_1517660365635_0.6338775740005076"
      },
      "directories": {}
    },
    "9.0.0": {
      "name": "babel-plugin-emotion",
      "version": "9.0.0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.32",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^9.0.0",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.0.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.4.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-cmfBlqEz4knzWWDRGfC+/NsV1UrqHfXFW4Ehbd6mm7UirIaVerpg3//3elE5arhXtqTp53B9UcDToPF5ckZtbQ==",
        "shasum": "aa8491343fe8685b03b17e00be459c9a84eaf0df",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.0.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAVzAeunQdwCDtwZ/uE71VR1t6BqM00UgiDZg/Kpw0vTAiAzr2v/mz/kVBc1qI2TCRI1FA8suxkVF5+/tyQR9+zgwA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion-9.0.0.tgz_1517720017263_0.9031046344898641"
      },
      "directories": {}
    },
    "9.0.1": {
      "name": "babel-plugin-emotion",
      "version": "9.0.1",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.32",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^9.0.1",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.0.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.4.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-FPqdoRNzbv7nuVLd05b8cXykLGATxAiMzBI72Ps7RjnHySDg8cMldzPX5qmJsUNShpkETSjVAA7yf3T2GtQ9Hw==",
        "shasum": "1c1ec14a5d6f40c64bd68e805f074fea60a580a7",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.0.1.tgz",
        "fileCount": 16,
        "unpackedSize": 80156,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD+otoDR1ZjzL3eWbYnPcO0EdqayX4g3Rxaq4UqmOAXsQIhAKbOeIILCZSyzxLL7rQSwrmZfKXIH0t9/fr/Ew+5Zq+v"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.0.1_1518520227519_0.11571399000995108"
      },
      "_hasShrinkwrap": false
    },
    "9.1.0": {
      "name": "babel-plugin-emotion",
      "version": "9.1.0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.32",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "emotion-utils": "^9.1.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.1.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.6.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-p5WF1ZqYjtXfzi4FMTXftf8svRTrlZOwssYcoWdEXLY+cnxu9hzRk2eN3BAcgtvwPslj003hNKv3fwYeB9ycDA==",
        "shasum": "d0b7598168980f4fbc7b72fd86c49904b613fe79",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.1.0.tgz",
        "fileCount": 16,
        "unpackedSize": 84603,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH+BsvcL3kADwLLCC16rvrDYxSLvKf38oHhpnAyr59kUAiEA4G8/T4IgmQd7DhSbsUUMldNdOFnug5xqTjdKYVH42o8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.1.0_1521839002058_0.7619255456576988"
      },
      "_hasShrinkwrap": false
    },
    "9.1.2": {
      "name": "babel-plugin-emotion",
      "version": "9.1.2",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.32",
        "@emotion/hash": "^0.6.2",
        "@emotion/memoize": "^0.6.1",
        "@emotion/stylis": "^0.6.5",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.1.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.6.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-zc2JeGuXfk0O4Au4JtssH4H7241+BREmFctZoHJ3Z1JekckhkynlpTXc+9ZhysUAjxyjiaXMUgUIIALCzbkFNQ==",
        "shasum": "e26b313fa0fecd0f2cc07b1e4ef05da167e4f740",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.1.2.tgz",
        "fileCount": 16,
        "unpackedSize": 83838,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa1aYdCRA9TVsSAnZWagAAgkUP/3TFgE4UDbHaQwLJHdVg\nRDgIfoZiPqR2hU9TFF56zN0qu3XQHCQyybASp6TQ4zatPGUyWj0zzwiNzt5u\nEv5EnlKtX5ratvRCkNENk2r46ajPcZLRqN/8romapQ70+yAY8pkN75Bp1ni3\nXvsQox5oZvHR+eyLIQucQUTIXww+Wfnr+r6DCqMAwRFlE2wsYaMkHXvCWiSf\nTfg3y+uQ+s/vfna9X//w/v+CZ4ShUPi6DhuZyLpFH9GOC9tZx1968+sa4xBs\nIWj5fOYNAvI9Zie69Cwv65BxhHH9HZSbivZSvGEP5gomO0LHkZpD4TdF1RCo\nR+dp1C5IL9ehueYWLsD/u7bB1vuza8FVoCrnGKlkbGDPB4L7282/EKM+8zLK\nuP3kpcsRVffuTMs1DwxcLsc5sulcqxVZ+drvKvOtj2xmpcudEVT5Asg5iE/+\nC8wXF73ngIiGONNK4oNbWrZAu4SjMZgHwRHqFpAEBi1CnZsDWnovPt4+KgBj\nVFjVmZ5GcL6VO34XnWrgezZrOjooxOLF68B1vmKVJHJSZYywA1iJZloOQPYO\nynBFQSR6SpBUXcY/6bPMTgncbJ2o7on+0+7Emgc/9kPPOw7UST4+I6a4Qja0\n9WzjAhsZmsyGikSZbs9jM5Gs2krc5/dkgNRbT5n+mjzjARWA5/eU/3JCGcpe\nPwOQ\r\n=qSJi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDGGYNcuIctAWgoD9UhAY/9UvWRFhkjjHyh12tbF1NjBgIgJ2Z/3qqo5UJpWOZW1+W5asS8LyJbjrWWcNrBZ8Gn8ww="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.1.2_1523951131829_0.8992716597075969"
      },
      "_hasShrinkwrap": false
    },
    "9.2.0": {
      "name": "babel-plugin-emotion",
      "version": "9.2.0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.40",
        "@emotion/babel-utils": "^0.5.3",
        "@emotion/hash": "^0.6.2",
        "@emotion/memoize": "^0.6.1",
        "@emotion/stylis": "^0.6.5",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.32",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh/",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.2.0",
      "dist": {
        "shasum": "43543dd02c7b5cd89d464aeedef864edb754b852",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.0.tgz",
        "fileCount": 17,
        "unpackedSize": 78995,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGQKFCRA9TVsSAnZWagAAJBgP/3UZQv3/E97p1Qo1nH5R\nfYuaR+scq5KIkRlgHNiCOtQuDIfbOaGbXyh+rhecSkxlwHFRv4NsyYxSE0qY\n2bHWib2Gid/7gdpwgB3PuYuXGqcjetRdiu6KJQ8dTcuNn4UD3WV7pXATmBoe\n6GYfYC23ebHPRkfdVb4igCvRhaozxSq5wA+D9DJrBtuPvjE8sFHabUAV7IPf\nzNTv/tZoF65f+N1LIZNBnFylYDrZ5gQId+y4UPT+wV6dboA67glSvQVIwo9z\n7L8vmZLk8kTZ14t9WToJV3Bf/bSF687Z/o/IFZAegUQBgnsSnl2wbLQuaAL8\n5FcNYsir06rhExcGn+6By4zodY8xJYYQq/4LZTi4qsLtS6fS0of7BQllA6sI\nQKZkrZOUbMCINwlnyM9kjQ+ifVK8M68tW2yZ4/eYzXsfAwunCdyAW9D1C6LS\njmKZmGCbN9AzvJH3YqimOk3BZEzzeBh+C3nIziL5SzwwzrsiTDMEbShzF/3K\nMhBk+DR5RSvXyr7vGxcsi2fHDUJivwpTnK51xtmV27nuYXqHeQg6ExRUeELF\niAdzW8+eeF4BolBqDCLg3+0TLYyyHW2P81hSZ7epNUYDYzVw0qENTLy2Z8cX\nRP1iyq2bF1WD93QRitTw3G69d+TrkYJ+Am1dFw5e0LbZQm0Ch5aPpcHs4MaI\nWb1z\r\n=aG0v\r\n-----END PGP SIGNATURE-----\r\n",
        "integrity": "sha512-jiIRcO1d0pWTUVAxIDHOqhvwU+2oSFHo6ZlBtPKrV4yQuiGNhR6zfAoCiX7W2+2y1RLlA4Otnpb0LDB/28DTmQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCq6EppIEYsbxSaTOSUm/ShxnKUt+7cJVOHFZj6vQbsTAIhALLOVg12CJpvfWgL6gMYolfvZLxLdb9W69+m4Wk7wqP9"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.2.0_1528365700070_0.43953119998764056"
      },
      "_hasShrinkwrap": false
    },
    "9.2.4": {
      "name": "babel-plugin-emotion",
      "version": "9.2.4",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "lib/index.js",
      "files": [
        "src",
        "lib"
      ],
      "scripts": {
        "build": "npm-run-all clean babel",
        "babel": "babel src -d lib",
        "watch": "babel src -d lib --watch",
        "clean": "rimraf lib"
      },
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.40",
        "@emotion/babel-utils": "^0.6.4",
        "@emotion/hash": "^0.6.2",
        "@emotion/memoize": "^0.6.1",
        "@emotion/stylis": "^0.6.10",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "@babel/core": "7.0.0-beta.40",
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-cli": "^6.24.1",
        "npm-run-all": "^4.0.2",
        "rimraf": "^2.6.1"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh/",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.2.4",
      "dist": {
        "shasum": "a4e54a8097f6ba06cbbc7a9063927afafe9fe73a",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.4.tgz",
        "fileCount": 17,
        "unpackedSize": 77592,
        "integrity": "sha512-YN795RIzk96qnDYOkj86jMIB+MviV75S5UCmbctQJcHBc0VdI7W8UhCrjCkUJHqK//V9ul25BZqz0f1UHrrL1A==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFcD5l7XphP49IC1u0+3/s0xKhDWhHSTtNENsgVpdb9sAiAPHD/htN2DE8QaSWhlAmhhbN+M88ab6cEcZQABqz13mQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.2.4_1529614510846_0.02383907336040969"
      },
      "_hasShrinkwrap": false
    },
    "9.2.5": {
      "name": "babel-plugin-emotion",
      "version": "9.2.5",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "files": [
        "src",
        "lib",
        "dist"
      ],
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.51",
        "@emotion/babel-utils": "^0.6.4",
        "@emotion/hash": "^0.6.2",
        "@emotion/memoize": "^0.6.1",
        "@emotion/stylis": "^0.6.10",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh/",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.2.5",
      "dist": {
        "shasum": "0046e03be5c16276f85380476f88c9fcbf7c9536",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.5.tgz",
        "fileCount": 16,
        "unpackedSize": 137649,
        "integrity": "sha512-PUYVIt8Si/OE5CK4NJa51L8QK6BHdppLMnsaAPTpLY0lIktStbv3QsKGVbxJPs1kIYMoF3cL1sTMOMVc/Dq2fg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCoO59FiJRQAIFYx0f9BVPWDwqSKanW8YXBfGNktsjHEQIhAIpWETi57QLshmGeUZ20iM+xfhUSSA6mlqcy8ct3fTC/"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.2.5_1530918170093_0.8519479375836134"
      },
      "_hasShrinkwrap": false
    },
    "9.2.6": {
      "name": "babel-plugin-emotion",
      "version": "9.2.6",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "files": [
        "src",
        "lib",
        "dist"
      ],
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.51",
        "@emotion/babel-utils": "^0.6.4",
        "@emotion/hash": "^0.6.2",
        "@emotion/memoize": "^0.6.1",
        "@emotion/stylis": "^0.6.10",
        "babel-core": "^6.26.3",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.2.6",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "9.6.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-aCRXUPm2pwaUqUtpQ2Gzbn5EeOD2RyUDTQDJl5Yqwg1RLQPs3OvnB6Xt6GUrMomMISxuwFrxuWfBMajHv74UjQ==",
        "shasum": "992d48f316c20610c28a95ae90e6bd193014eec5",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.6.tgz",
        "fileCount": 12,
        "unpackedSize": 137544,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbSsjGCRA9TVsSAnZWagAAZhYP/3oOFs5biLzmZoq8+Z+p\nB1XYIWIlARz7CVGGuYXj69f4k+N1313/xMjx0J70si3tVVqHSm0rj944Ixzw\nzd5HQcpzYO7+GqTtz3vj7VUsFebw05ZQ5mEqie2qMwK+tQWpdFzRZ1iU4zOB\nA4mdsY0rLT1vzSFZrCvSCEI26AFqNyuurFWQ/EpZwNW4LdPw4yiBAuAdKab7\nH5hbJ+FuN0/2tRpkBnt+8RJYdvVRn51L8YEKcsYliV46t8oIEFu9XIzjIBz5\nBGaXbMLlbY+Tvh4cuYTkxsrTDDtGYFum3058e61mC3SH557rvCpoRqQiUKcb\nHA6YidXOdkuzcRsqSTk0BzMEeJZwesfi8+yuXSsVvBZgHk79gJdy2ZdZTas1\nt+hyAYbigvjLfUtHGkUWDbxzMwHLTd09uecWXsNEajfWN83t7Yby2KrVA4p6\nLbVj/MIwUsZ/w0WIK3U+yud/M5zjr6WTRwpRLgpLYhojxYQiAYFDWukDJHz7\n0gRE+W/Ge1bEnXVd+AyDHO03AGjoeZsucrQZGYB628kvmeYMB5oyD8bM3dmO\ntmKtxRFTuqcM5GrdAWwr9qg/0WJfqYE0qBuKehG+ZISZwUhjfgm9LChQS5H9\nCj9N0pQQdp3CccPzIiRRULI59HO9jOwF00qIO1hXyJYJB+En2I8boKe7Ergw\nCOMo\r\n=9iJv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAu4udeVPxD9RiBQgnxNfpa/mKwzwyA1Uo98kNr9+LliAiBH3h5L/HdSjqjh6otmlGFKTx7q/GS0AinqPpdE7mcQow=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.2.6_1531627718683_0.9237517218751627"
      },
      "_hasShrinkwrap": false
    },
    "9.2.8": {
      "name": "babel-plugin-emotion",
      "version": "9.2.8",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "files": [
        "src",
        "lib",
        "dist"
      ],
      "dependencies": {
        "@babel/helper-module-imports": "7.0.0-beta.51",
        "@emotion/babel-utils": "^0.6.4",
        "@emotion/hash": "^0.6.2",
        "@emotion/memoize": "^0.6.1",
        "@emotion/stylis": "^0.7.0",
        "babel-core": "^6.26.3",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.2.8",
      "_npmVersion": "6.3.0",
      "_nodeVersion": "9.6.1",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-m+M0Xim43+y3Egpl0C4Zz5dI0f7JaBi6GZF1vtr1IdODRpxWOx47uzr7qXyuBCG/U/nB2DGaU996of0nJjwWbw==",
        "shasum": "4df55ef10625c391f25b031f7e3006abac359e09",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.8.tgz",
        "fileCount": 11,
        "unpackedSize": 77083,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhSs8CRA9TVsSAnZWagAAeasP/jyE1bTf03/xeNdldWen\nj5GxBhLyiDLk8AhgH4Wh5BY9vwVaOC5KOiGjxdhwWgyVapR9RFNZxGsCzPjH\ndF5fFuqWcSDI0Cg/2YRz45kl3g6Rs0qSAJxOfiMDoOV699sX059iqiqd3zlJ\nYi5xV9I0kLfQQThOsq1X0r3rNxgILvyCHvZLVZ2ilnNY8KyYC/LGgfuYt7VZ\ncIWJ/yhhRZdhAXp7+DoAGt+09/jbYVpDeC2cDUGI8vXXjq64Rvh9fvzuDetu\nviV8lKCCb3axp4CVfmtIUh4BeWII/46V5zm7LANWA53nggV/93n4st6keoet\nmahsHahjzUJrur3ni2lnfNVL+SmG/UXE/0/tWFJmFjJUTpTh8GOQYoPRmIXj\n6W59x1b7euY4tGdln3NdshkJMSHFatEZ6/vIgsNM7ALKn0NOS5vrKv9lcEru\nttQ+WfFcSJ3sSB2M2if/Rbnv3n6PYRrAFAcgdKxletxnRciVJtzKm3Ayethj\nmR0PiIsFRt+eGAEEG8oCgKbbnImyno2ZjgVPd9hMyVKqEggwJmDdotVvc23f\nbBSqddf/eQs9X0Dowi2L4qMEuK27IsY+zQ1UqXsIDpDIja8djhhqLWkpofCK\nNLL0TmkPH34/TNUv7WiF0qmZQATx0dzi77894SenhlH7a/sE0/QdGPN4hLyd\n+kLy\r\n=mEIT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDPMtHkmjh12++shQfTATy3jv6QRMlfqe+ajylc7RiTDwIhAORIZlyi1TT8w/GM0HsT8BsHEUnSPGeDkeo+bhhWfSr/"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.2.8_1535454011792_0.7045853083935807"
      },
      "_hasShrinkwrap": false
    },
    "9.2.9": {
      "name": "babel-plugin-emotion",
      "version": "9.2.9",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/babel-utils": "^0.6.4",
        "@emotion/hash": "^0.6.2",
        "@emotion/memoize": "^0.6.1",
        "@emotion/stylis": "^0.7.0",
        "babel-core": "^6.26.3",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^1.0.0"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.2.9",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-7yefD/nl7zaCaD281JY4zRbMhBE1GnI1/8i+UREjMPDfOSkIC/WEDY/fGKD21T2nnV9LH68OwIby+7l5yjNTpg==",
        "shasum": "7b3c72fd6a333127abafe7fb693bcb421e7f5b9f",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.9.tgz",
        "fileCount": 11,
        "unpackedSize": 77076,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbnjQ0CRA9TVsSAnZWagAAtiMQAKKG6qnjeho5Jhu/y8z7\njIzOvBkN8S/3Nx4NoIyHQeFqeeBvBOG2oZAApwbsaPVrAeLsJoEz1xhMyo+b\n0OCnca2Hi13k/Ndv0QTwAxrjWpnpk3pnAsFa8dGscgvCsp9uiUVL48EWWGpV\n4OX2hffL3FwK/S8RivGfJCE/Vi6aYXqcgNju/jjORirpcmaEapQtJ0Hg2oIc\nslUzFp/5AHX5WE3Lrtf6Z8066YSaJdfowc9ZLa3fXTeUwZVUYnUzJ/5gnl7/\nqF2ytXevMyhTY9OMVj1PSrLxsqEY5Irkh4MCTM0qLNpGkEVfqysX+Zuayekk\nn9L1ybgfRT8vxl9UV1k+YnZXWWSb6XIWGSS983w0KzqLPKWzQdJMWNmylcnL\n8tDgMC6110c1WDpuE54+2j6pSQFPkqxXOO47YHHZHfedNMpJZW2Y7RlPCLwk\nrQD+o4MCMFuWg3Dt31qkMSC1W8ZQjCdqdalQIiF62Oy8B7yOGDzXV7EFMXDF\njNLdcQtBt7J3zFPpOS7wzG9mDvO70U8OWNZB5ap6ZJTg/0WLjRaleR6J3nof\nG/CAOBjA4oaOvYCPbSaTwnnSE7vTvrDbmnEbZICSmB8Bch3MK0nPQCOIzFqu\n40P4tg6DVHdkdGw+ArZ9eOUi1IS+gPM16vE21XYS7c2Yb6KgcqStGjUkZkQl\n0NvJ\r\n=Qjg1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAPFCDuvwWek4WjjxI4cK7bI/FtFBkHxyrAE6KsES78/AiEAljYcMuZKVkCTza+d6+KfPG1ksKGpVQEXQPP0JIrI65Q="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.2.9_1537094708244_0.5255571154738288"
      },
      "_hasShrinkwrap": false
    },
    "9.2.10": {
      "name": "babel-plugin-emotion",
      "version": "9.2.10",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/babel-utils": "^0.6.4",
        "@emotion/hash": "^0.6.2",
        "@emotion/memoize": "^0.6.1",
        "@emotion/stylis": "^0.7.0",
        "babel-core": "^6.26.3",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^2.0.1"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@9.2.10",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.10.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-ezELJPqCSA+FJ1XgUlOFbk1dilM+db610GdX81D+IBiqwEu9l1ifEP7oLslL3bew3LKT+PcbSltNBDvZACBe2g==",
        "shasum": "983c288106cece7ce761df0513683ef0d241c466",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.10.tgz",
        "fileCount": 11,
        "unpackedSize": 77077,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJborVVCRA9TVsSAnZWagAAzR8QAKDScF4bXts0mcYvq5CR\nrvxLeCYOfMfiMFwpA6y8l+oH/8RAZDrR1pu3pb+hxNcxeyaopy6fsNmbea8H\nrkafAPtL40ZGnTkQ+YxwRumMhh83iTqV/IFk7LnX4vWZk742wsVaccF3Wgj8\nlyDGvAJMj61eqcDCzcWmwnGPmAYhpRFMjEhunJQa8O1BA1qW7Dg99AHElPll\nXmx/n3w1RMdnYDwZL9i/xQ2DgA+SRqY7pyWM+prjSh0KGvHbuj5FDVlwCiJP\neSs/EGm82B/52LNGQJfgWqD7q0MD20T3yC7jwxkfYTIxdBXMVkcb38jzuRhv\nsz2Oe6tHmu4W2lwbKoDw52jtMrAnKUIml9rsVk5ZVuGTHiJt0N+UflIftoWR\nDryP85mZwiez0NOY15xeyClm9m2OtNNUxcSzPFhFEL97x97N/9dfJUKNS/NG\ni9gd2IVPmPJ7lFlGbW3u3eWt4Wq1OT3UAeJL66zUv8ux3zNF+NfRfRvrRMr6\ngqYM/F7YhaZpws1NFnPvBOpqdxnIZPB2w0lc2xN3EUnuNP8EoJ916QzlnyTl\npO3CBqMoHQANUSEuexqoiS2e74QYCLwL8IXk7/coSWDHHuPRxLQjR4Iuq5T2\n1kJdzJkANeOvmoq1uIxCiF+ODI3jCebag203hPoEFJHETMfop9aRTTiXSBgU\nbn2K\r\n=aYWX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAHtXdbvkBSONjhoqI8u0sbX156NOZVwtoIl9QTE0PhGAiEA0AGy9mi9KHg/lWwkxXLzSyMoKk9KfIpeHsK82VaQxhc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.2.10_1537389909001_0.2484884225454782"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-really-unsafe-please-do-not-use.0": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-really-unsafe-please-do-not-use.0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/css": "^10.0.0-really-unsafe-please-do-not-use.0",
        "@emotion/hash": "^10.0.0-really-unsafe-please-do-not-use.0",
        "@emotion/memoize": "^10.0.0-really-unsafe-please-do-not-use.0",
        "@emotion/serialize": "^10.0.0-really-unsafe-please-do-not-use.0",
        "@emotion/stylis": "^10.0.0-really-unsafe-please-do-not-use.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "gitHead": "a5f3825603dffd69fddb44bf5f29afd7c49eabd5",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:babel-plugin-emotion-10.0.0-really-unsafe-please-do-not-use.0.tgz",
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        \"sourceMap\": false,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"hoist\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"autoLabel\": true }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n* Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n* Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n* Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n* `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n* `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css.macro'\nimport styled from '@emotion/styled.macro'\n```\n\n[create-react-app issue discussing macros](https://github.com/facebookincubator/create-react-app/issues/2730).\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-really-unsafe-please-do-not-use.0",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-SQugPzU6dK/uwSIlvB+AfRIxmfSQHQ7g6esonbmDvlR8m5gEXobaEuIZgDdXW/ZrGSlci7NfeThq3QiHbJQAIA==",
        "shasum": "8a3e3afa337ec4810488f8d519eb4978cfd13eb0",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-really-unsafe-please-do-not-use.0.tgz",
        "fileCount": 21,
        "unpackedSize": 87314,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrWkVCRA9TVsSAnZWagAAiZAP/3trnHfZHmrstaU3j3LX\nfpvR+1039lM3uokeakcn+Jyu4Htl5b08J7Vt4ct/MrpmErO/fRMDKqpl6Fun\nVP3lUuZUg5Ke/SomLY0ZRdq+9C6yycTKt7TkpDkGksPaijzILdP8+QvTri98\nlbn91KEzRfehhpHiJkpWkIPmTupFTs4H19w8c23k/Rjkxtbuk9DUR9AXsHqT\n2jg4anWpquwE4dTtEQzSC1oTxqOMO9e9pcXKQA/i0H/QfrPhP3R6qQeilWFp\n1VvkDUb6JUjitZTKI1G4kUeeGI3m6kYjXohKKJHj+ASmEm2nSQOPHOIQANhG\nVSziC84gCWIH1w2oGo4H9EMtW3OABTmS4Y0nw91aRU8dZx3XYCElVM76zqaU\nGpIE1jF9EdP/iFEKi+gS9G10FqUJOlZdS1M8zV+KY8cFotP/SEJr4VFGfHbm\n/Kp0u4Nz5azbZEOq6VlmxiplKdRefCT4fXtYsWjJuEFUEXd6K5eXFvPVgoq6\nI5AmniegXi+Ins9btWZQ+w+VoYQpqBKQo5zXzl9B8cBjcVDLltxN4gmspllh\neIkBcS1Bydq5Np+wuRTW9j0aNLAyKItb0hHkdaUlC2PS+F/HVCUkKGomdGP6\nAmQhJ9fWhokoWKPACkKm98s8SRwDmo/czz8+6XVnC1v078xL7w65zeNPrUiq\nm+7L\r\n=6tax\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIG/n5Ug5aiUJdLVEgtqG6U7MS2HgeDdaLQIwllTQ80ZsAiAMtS4IXdA4r6lgVrHeD/q8ByWuKePbC/3Z8epBWVoAlA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-really-unsafe-please-do-not-use.0_1538091285140_0.3115601414846523"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-really-unsafe-please-do-not-use.1": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-really-unsafe-please-do-not-use.1",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/css": "^10.0.0-really-unsafe-please-do-not-use.1",
        "@emotion/hash": "^10.0.0-really-unsafe-please-do-not-use.1",
        "@emotion/memoize": "^10.0.0-really-unsafe-please-do-not-use.1",
        "@emotion/serialize": "^10.0.0-really-unsafe-please-do-not-use.1",
        "@emotion/stylis": "^10.0.0-really-unsafe-please-do-not-use.1",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "gitHead": "2b1bf6ef43eaa9133ba7a9d7c8d96ebc1d3877e2",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:babel-plugin-emotion-10.0.0-really-unsafe-please-do-not-use.1.tgz",
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        \"sourceMap\": false,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"hoist\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"autoLabel\": true }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n* Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n* Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n* Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n* `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n* `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css.macro'\nimport styled from '@emotion/styled.macro'\n```\n\n[create-react-app issue discussing macros](https://github.com/facebookincubator/create-react-app/issues/2730).\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-really-unsafe-please-do-not-use.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-LhmURt48PNML92zN63DEb9CsLJR6ZVPto2CiQFqqOTW36O/ZRVWTe3GwPvdhtKAaNBN992Jat4N6bQ2zNqcklg==",
        "shasum": "95c313bdf73dc5f5c2c44d541178bdcdb6f305ed",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-really-unsafe-please-do-not-use.1.tgz",
        "fileCount": 21,
        "unpackedSize": 87314,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrauoCRA9TVsSAnZWagAAEnAP+wQaCdIOuQCsjnPOKeL2\numYEuRWd1Q84ORENa3xwF4YNB4JpnM9exwdofmbyXzB1FVvq5BjHnnuTBlXT\narsgBI1V/chI9wmHHVIMZT8m/J+DN8GpCHsYB5dfuCqOHA24d6ZRTlOeNCy5\n/29VhnicONGdkmY1ygOzEPGAd0w57HfJtVttk+teB5NM+QYppByp2yRcs+pv\nkl8NnxDI0FRY3CMWwFoREzVvcM98uYkwcA7GfhZjt927kjeTmOvcm0BOmWaB\nfdYSTGiZrmUBybjXWpL3R+Tf1xLosMmNdbCNNOSnV1qRyzMDM92ORgWzeGtR\niSqeKgf7YPI88Q2SA53Cm93bnQKMDyC6p4XXHSj3ypYLtWC0g0FiyAyxZ/HI\nBQx03ephJ3f/BCpWWgtL5qnjvd1DVAh25t+BB6OV+bKglcwVrtf6TAROOSkz\nnRZ5YmWQCeHDssa79T0S2zvzIqR7KQHU7MNvBIBaevxmEhGHiaIUUBX8xtDR\n9ugeDWOBcrBoSBYvuQJJrwLlwzJfyv5VDQtCgRaHGukyqgBJnZWK3TTZYtIM\nGxF32wu5h/F+mJmeK3KlvX4O37wrAPdWphat6YXkxHQdNOrtK5Ec1Eq+uvmv\nRy04P7M5xLb1MJ5plw3Qkz0y1et6fWhB+onq+Hjn/e5SSV6DjZF/CIXx/0Cp\nX58Y\r\n=YCJV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCbF+k10ygXOaYTfvUQYh+MJHe0myGc4jftFTkIUurVVAIhAJ/QOB1CGUSDthatFtB7pcvyutKJKNBB7/yiNiZjRTBS"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-really-unsafe-please-do-not-use.1_1538108328167_0.8107505710772132"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-really-unsafe-please-do-not-use.2": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-really-unsafe-please-do-not-use.2",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/css": "^10.0.0-really-unsafe-please-do-not-use.2",
        "@emotion/hash": "^10.0.0-really-unsafe-please-do-not-use.2",
        "@emotion/memoize": "^10.0.0-really-unsafe-please-do-not-use.2",
        "@emotion/serialize": "^10.0.0-really-unsafe-please-do-not-use.2",
        "@emotion/stylis": "^10.0.0-really-unsafe-please-do-not-use.2",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "gitHead": "0da0de50f6f2c19e46bca7662d1a954d48db1264",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:babel-plugin-emotion-10.0.0-really-unsafe-please-do-not-use.2.tgz",
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        \"sourceMap\": false,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"hoist\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"autoLabel\": true }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n* Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n* Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n* Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n* `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n* `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css.macro'\nimport styled from '@emotion/styled.macro'\n```\n\n[create-react-app issue discussing macros](https://github.com/facebookincubator/create-react-app/issues/2730).\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-really-unsafe-please-do-not-use.2",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-giGEFIIZfSDOtIfQN9m4foE829D6Pu5ZbEyuYfcKb+I0rFRe5s3d0oU72FxDnh8wRwH8Sr/vFUEV+8MUNMGhGw==",
        "shasum": "7479dcc73b33ceb6b49857360ae7891298b0a157",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-really-unsafe-please-do-not-use.2.tgz",
        "fileCount": 21,
        "unpackedSize": 87314,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbrbATCRA9TVsSAnZWagAAAfEP/2FkhDSFgVT6akYT+UVe\n8Fvs2z6CSN/OBMVFoCS5zivyg0kapoDLO0fFSJ3S+oL/KzcX0VWTm5beMS/A\nHHJG/wBgcTmyAykk68eMoJn3PWhpI/oLYSvW//D/ugXJmQJQws8+TtFIrlMU\nmg9VdFcoSqAA5tito2EYixvZ/C6+pXJwf0DxQs8Vv19Arxm23iIIHgq2TCRJ\nk3HyJOnIBSwdzrtq4RJK7yzG0Y0aaV6TYfsZ3n6MBqzM7CjmDiFlN+MgXtPi\n757shjyQmjFqjmKCY/YOdDAia+zFhSra2uy+2pANSN8ulEQofTN4SvC0UGTm\nxSXFixaL7ozSVYneLb/hDCe5cXF5qDWWt9f2bxh+Drixflk94b6SxO3MvzvI\nKXfibhySCUKObWIyDi3PAxArFylgLMEMGwqqytfudr25SVQnsXV3nljrqsBc\n2ZKnSWpYnXMj724RHTyqpiLK8GnHy0pX4drVfu2uJyWmkgWIaCbmHFoGt+K9\nhuUxVXczg7d10dnTL2WfNYo1e0+wYMmfTA7GzwyXgL9dKJQuNDVfqeicCW6G\nvdEZEhOfVqsDYHVpfpuEhb8tzTkuq5/MI+p1kl/2lDbuq/NR3YSXrL3E14Eh\nCh7zyHSkdrv8EyaVFub+1dlsgBi+/HjkuTuuQww4umutUumcTWXXaqnFJPYE\nQ3/Z\r\n=jf/x\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFTtXQeITYOCdcSikpLNiM3+/7gU3xP1tw1ScsvTtGXZAiEAlcH1EFMrylROWKpfu7rorG4dvZ2LT4mug10Y5M2zZQk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-really-unsafe-please-do-not-use.2_1538109458937_0.5743208230991574"
      },
      "_hasShrinkwrap": false
    },
    "9.2.11": {
      "name": "babel-plugin-emotion",
      "version": "9.2.11",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/babel-utils": "^0.6.4",
        "@emotion/hash": "^0.6.2",
        "@emotion/memoize": "^0.6.1",
        "@emotion/stylis": "^0.7.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "find-root": "^1.1.0",
        "mkdirp": "^0.5.1",
        "source-map": "^0.5.7",
        "touch": "^2.0.1"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "gitHead": "206e5f642b13153a7fc85360c3eb7c302d7bda84",
      "_resolved": "",
      "_integrity": "",
      "_from": "file:babel-plugin-emotion-9.2.11.tgz",
      "_id": "babel-plugin-emotion@9.2.11",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-dgCImifnOPPSeXod2znAmgc64NhaaOjGEHROR/M+lmStb3841yK1sgaDYAYMnlvWNz8GnpwIPN0VmNpbWYZ+VQ==",
        "shasum": "319c005a9ee1d15bb447f59fe504c35fd5807728",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.11.tgz",
        "fileCount": 12,
        "unpackedSize": 78985,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbsUPnCRA9TVsSAnZWagAAGuIQAJ0RlTuiJoEeuZftlCmH\nglCS1QHctQTvLIrO2RKF4TdvgXf9wy6ZoXfc3ZY9YzOM6gi3NwpsS6ec9zH4\nrsL6KI34jqLTXmQUbHpkew2UtAZMr4AQGnlW83ohyZ+Y2m3zhGs7E5KCwQh3\nA5kFdrVarFeBhh7u4sX9GGTM0kkjUilnhqA3yuLu9ZTfrVzjAtf/rjlf7y8/\nRLEvrgtANa8Ht/qEcxmnTC0w3C9vmZpSBmD3N6JE92X2eIAnNaFeBgIEZ94k\neaUqPqFi/TbxHTyBmuUZZA/jQipHKek5dJzKMkRAVGNVvf/1UzVoTCdyzuy3\nH82/gkApUktuT1KxAKhVYRaK7xT+/rMzzjljCb3qjKCjaG4/RTKLd2ltN2UE\non/6rapc67EcoY3ZADmcyCm3Zz+TP9XHjXOLq37Jx+0UZjBRYVJMf6y1MqTh\nvYZTULXW3wLxKiGAGAQek6ccoj3xzRV3Tt7nt6L7Co2WwN0zV7g08Xi9XUwL\n8vkaK95ssqnoJRc8p4kH7aJwNH25gxV1dHH4gTMTRPFNCxMC175ztLRUx60T\nfAHh15PQGCATsETNqKh83RhueZo4kiLOD7P55Gfhs+7kraDztGdlE2JchV0f\nOkMlX2ssFS2pHXbYfSM7LckI+YPaaW/xHf6hhxDgoL6yIiNWpTLcw5QKkErV\nm+ze\r\n=5DcC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGEzA4ofcW7ynDccrgoPT0mg4jNkx3o6ad9fBqEb71mwAiEAr6yj5VrCNtQr3JEucFQNW9dvp2e/Ay58lvK3fSg4Ilk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_9.2.11_1538343910370_0.6707437397001736"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.0": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.0",
        "@emotion/stylis": "^0.8.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        \"sourceMap\": false,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"hoist\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"autoLabel\": true }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css.macro'\nimport styled from '@emotion/styled.macro'\n```\n\n[create-react-app issue discussing macros](https://github.com/facebookincubator/create-react-app/issues/2730).\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.0",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-C/uA7iwFrGAEw39T6JwcqmZq2+WBnvpmI/nJlMJ8WbaLzR8BaFem92kMnZKhrgQxn2eDITSaFOZklI6bdkN9kw==",
        "shasum": "0664aeb1fe0fb718691b61db3e364e25cff6ae2b",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.0.tgz",
        "fileCount": 20,
        "unpackedSize": 86653,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbwaA1CRA9TVsSAnZWagAAt+UP/0P9g2/4WlmDu7v79Okq\nbfFLeeeEZ3zo8QetsRKqVeXASBS1E55ELIvRF0Fd9F4JF62yGETEGbN1Qz72\nNGAh5Bj/e4L5roW+20eeFaZrrGw+T9fmSh34aFbFLxSVpPQ2vY9a5idJNRTR\n6tjvaaVrGlBFS0K4VfpLeot0o1Ccx8CPf8Xt1uf1GQaUHKSV+xLLukvyFArN\nNUBa3FT+vSeFs5ylTol/cTEPxDInp4z3bJxzbU/YZN5nsROjPBMzui5zhAka\nAmaH9TH9Dh1e6S6DETlNVAIh9pR2pTIT9mmKwfb69MNtijo4KBQhocTp/8W/\n/VbyBIvctpGj6AjBG+0eGFA6G4ccYsc+iO6u9q/DhMTsRDrQmd4NddkjLQcy\nNGlrwqw7tF854UueEh6bCdVp87A8X+IN5Cd8tQZAr4ccHp4aiOpmJTqqZvfT\nMJ1OwR5Gdst3WctQeIEUT7hppfVZk3Xe8GKVKqNrnph3MBw+W8uLZhps31qG\nNpsd5ODNGSdeAsJZ2BXGtbsSEFNofNwQbztRip6Qsgb5mVB/Z0s6k3alzcIi\n7WrHdbxyXoqLGlYJUSBb5q7ccrzh58CVxFL0hXq28RZoREJog36+Lj3edpZH\nVOFnYWGXaXgbUiSKRj+HraI/ZdFiRfKJ2zVBgz6U3sn5DhJxhC82bEEAn6We\nkoNw\r\n=fKT3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHbQA/x2vaoZECgjh5os76EXwBBpI8enWP5gjTtLkB8TAiAOYn0+199wEc8QPnwxFYxr+xF4tBF3NcVxEnJx7HWP/w=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.0_1539416116666_0.9070357121585699"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.1": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.1",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.0",
        "@emotion/stylis": "^0.8.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        \"sourceMap\": false,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"hoist\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"autoLabel\": true }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css.macro'\nimport styled from '@emotion/styled.macro'\n```\n\n[create-react-app issue discussing macros](https://github.com/facebookincubator/create-react-app/issues/2730).\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-iLDPwlFFLcRBwfDjCMXHLXMY20XNW2iRY710UIdFmJcb/1aVg8LsjI0xL14As4VCiTUwj6A5HoGIZ/UMxTxh7w==",
        "shasum": "873d909bb43a307ca5dfc258ef9b28172adf055c",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.1.tgz",
        "fileCount": 20,
        "unpackedSize": 86653,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxGtyCRA9TVsSAnZWagAAPmEP/3R6Ef5z0iHNRL6gEyMX\no8E90R7PcNP4uZtIaaEhFnbrM+wBvXvBBWf2mK8Yk54YvVZ/INpV/CuHE+W8\nNYaEw6tP2Xe3SlUH3x04/4+bpZPHhl8kCBwAQubnA0xOZg1mbojcMWj7tFGS\n0XS4N19QTxWMh9iJdMXAe3U6kUJKQV6RgjczA6WaZLmq4QSBcv467YHUQOpv\nJpDHh2AGvyhzRcN76fOcPZ2HjaG+8N7DADK+zGDkLYDEDgi9WaSOe7cyBHQ1\nEDlcPjlwl92fpTzHYsgGgWrHgKOpzTgewJR4GgfX9brzlogsY5DiKJ93qvLf\nbSn/yI84B5ZHzY2tqzKX/kupaDstVOE0DXDQSsU2WvIQIwGJxn7+loTjCLU0\nkIetJkgbtk907T+jWyrw8IdHpZffzB44UAJR+gMEIhQ1qsUOUmFT0M5KYpHe\nT6xb/YJ3nvTxniR+z/ZlbP6v/zKRYZCpkuwU/LjzePaXp6uVSdZysG5opk0g\nmHhB+jl1+5ZAIOuwTXpPaJ7BQ3NLKDYx2BzaPWsGt7HJ6cDNGnJS8yr54RgK\njWmm4jsR2edi0OoC4CXbMQ3sYgBzefCZCmLZRxR2KWdgzGl7Ixoo9b8wCwvm\nzyjGvJjXpEbzGZ/rvVZDh0MaehnV1HhqYrowyYBsI6CY712Xi2Cy+cTZjjTK\n+rTg\r\n=IFBv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC/jE0Q9qgNPxOP83nMzBHnx1+42JhTfJq41owy2l1NgwIgE+t+/ze0frqg1UvdDdNL0bgCSUnbiieox8qGb6Vp2aY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.1_1539599217499_0.6991934302043563"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.2": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.2",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.0",
        "@emotion/stylis": "^0.8.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        \"sourceMap\": false,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"hoist\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"autoLabel\": true }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css.macro'\nimport styled from '@emotion/styled.macro'\n```\n\n[create-react-app issue discussing macros](https://github.com/facebookincubator/create-react-app/issues/2730).\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.2",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-Pu4zGJIupuK6l0fg+Tvcw7CbBQmKQz6ZSoOAWXXV/EyagDGdSxdsnWwX3dNX5q8cPKuV5hJDuw1jHJbmdB6MTA==",
        "shasum": "8b66b3673980c524c9998f6cae556f579c660357",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.2.tgz",
        "fileCount": 20,
        "unpackedSize": 86653,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxaJuCRA9TVsSAnZWagAAlwQQAJ9gciIKoYdaxPTeqsLH\nFZBywRAnOCdvPewT1Lm2Kbj4n+vFyOsgERn9GRsA/lsHmqSq+mhCzKgsPqmE\nvDDxPNXtIQefym7llPMvTMrsPNcvMEBxF2n7AVf6r8djNzKEnF3IKt/SKAA1\nHSOKKXrPCZ1/lyeEAx5TH/d/iDS9VWWWgiax8RLzDGxH8RNPONOhaEDmChDm\n3Av0lEA9EcELE3ilyiZ2Bg4gFPJFQQZk+6Q/NA6TNH0sYjilMX2V1HTwWLn1\nsnkVEmUhvlwW0zTrxyoZPoztASIUHnRYE+qPhznR/pwHca6a+CReA/SyJkqk\nezuQCrFQTsB2I173Av6OZ+GL+Dtp6RhWEP6pqIVH+TAtQ1KuadCt1t3hLI75\nFViLbd4IGTki4ElfEC1WYPUFaL7ircnY/DCszX5XXUyed/0A9tAiD5ZfqSc8\nVzZn5VoPSLYP18e7If1ThRFxgi94ucZMEZDJ3jjS49EAUG4oKQeJV55oO/eJ\n3JG1w95kUebcq1umPUiS4HKBrUzCbn0DSqfbtSMdoRGyCIzrgAoig+Aq/pi1\njprIxqvpGbhkpXNF/tJkfA8V0KNpcbBrr0t5kvEpIbpyvNlXpvr35KObD4T2\n8mQh/0oeVDwny8EufYE63cOXCKNpEqF9fzexego6+i/lXmKKn1OdGryld2GS\nM3FG\r\n=6fZx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIElQz9gFojJ/+ZLRz9x5YmxjnuIoKjjzrVrKWM25adm+AiEAy85csjuZRAINly/jzSlp10GisOAd7ZcnhHGFp0Gfe24="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.2_1539678829811_0.6464022091261137"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.3": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.3",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.0",
        "@emotion/stylis": "^0.8.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        \"sourceMap\": false,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"hoist\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"autoLabel\": true }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css.macro'\nimport styled from '@emotion/styled.macro'\n```\n\n[create-react-app issue discussing macros](https://github.com/facebookincubator/create-react-app/issues/2730).\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.3",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-a9VvHEf0jaUkOuwXK/Y3NS48t0fRC4Cl5HfXQw3xfIgq4zNhPxWwplegMirw/WK20QHzL61cD9EBqGTyP94YIA==",
        "shasum": "febad88c5890d1c49ee3309ac8350b586741ab72",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.3.tgz",
        "fileCount": 20,
        "unpackedSize": 86653,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxnsjCRA9TVsSAnZWagAAggEQAKMJsMHCC6qiOsAoUg6+\nEPztfGy/5oCWwydTg+saIw5k0Sb1/ra6GwHbcqKafXnf3lOLrZj3NxxzC2yd\nIRNipiNIR18x6vuKFBMstc8iRudbuNn8+qoS//Y1RhCxsos4z2gGfbMl1+0y\ny9kwELJHv/Qyr4ClmahqNIzkFwNFRjwdg3JGHgn/GVc/FAkPAzlQ1M4Nkc+C\nRN9uFQDJf0R4t9c/4/bRVBY43+j+DchHjwOD1j4DlGkQ7WZLPq+KhOOyiQvf\ndqg16t7IUUU5F+Cska1YiyuW2KdgV2ccnHB0PI5yakbcl9AjnpMu0yuEL10B\ni78FOd0dywFY3ZqHNOvd69fCO00aQzBbaJhxQ81VJqhqpCH9A6FN6ZGhnlE8\n50wLfuTWD/VHslco5nukqOoIIljx8XvoYQWIWJMdEptz6h5H90yb1EYCg2oz\npEBWs7h9ul0l+aWuNOMNeLEwGW+WWC+1qw5SxmE0pyu7ixiRQrdfGVy3G9w+\nNFU5qKatWjQtMV/uNqhxbGzO4v3vIES8e4XEdGqJ3TzGl+UizNwhSuWG4+en\nZQNrzH1SK3B0rUNVVOCDNKP+3CnrBzGupOPnvrt3rIS5dcIQkOkragjg/jqn\nBst5dXyQgEEIgftyqS790rPK7OrjB8mI0b6Be1VnreUAXc0wqVlsfrzhh0kw\nGHal\r\n=qHid\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCG8SKrErpOpG8Yz6UF6Kl34KR4Bh2QYPgrG8KGtiJP2gIgWiKy5R6trVvjiNj3SzDSu3Vv27uexPnsELyo8D61BMU="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.3_1539734306344_0.05319306791056011"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.4": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.4",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.0",
        "@emotion/stylis": "^0.8.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        \"sourceMap\": false,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"hoist\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"autoLabel\": true }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css.macro'\nimport styled from '@emotion/styled.macro'\n```\n\n[create-react-app issue discussing macros](https://github.com/facebookincubator/create-react-app/issues/2730).\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.4",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-UiCcYYb12tk4E5F/4QTKxJCuH4q3jw1Rp+25t6V69lOoGGcV9xNiH0YMgHi5073rfY+Qmi7KrDGm1fwEgk8CpQ==",
        "shasum": "66520edab26896e4b834f549150860297261f082",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.4.tgz",
        "fileCount": 20,
        "unpackedSize": 86653,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxuPjCRA9TVsSAnZWagAAe+gP/jlW8Psgl628FcxMCdOt\nVSppPQjRA0OeMDje2n73UakvNY5tBtcaJ4x6F4+1hBY16Pj4pdJUWPsjs6Sb\nFQJwlwXOLXICLEF8FiEYS03403WyBoRHxB4YeMuqfeJy5uj70z2+QGnrzHGL\n3zl37Ad5njT1Xlal+v7qoUPhDme89eMyn8E7i51X0NY6vCNsglGrCH8/+aQ5\nfsxiNc7JuZzXWiDN3G+8kn0NW+lWSNABgcs2GDlp/uKuLyrt2hTyuXmfGoLR\nlP/dc8vDndqvwOj5okRDduSk2EBffcbhxhd+LBbWVbIYbAu9WN1LRVVLjhSP\nOMYmYtlng/HKgdp1kLVW9u0j/Bx+HQoCU6WARvXjP4wZDTqP4wRqzqD6vTar\nupqtZC8RjTHdf4ppVqjU2XIEyvRl131kTbKrTx2IoQX9nzzZFI2pnqo0Lmm3\nEP9runja/2xI6v5QfGE4fm8esvmRShsVSDtJk7V+HVvQK1otGAwA8oAj+uMj\nTGG3z7YUbDV6R50YUt/3pUIny+KN7wUBOWyXhy49PXsfSkmGBWla7ZOzv4pZ\n1KUTkHbqflKCY20Q3Sm4sy+2vsRbevC1u12QcGOawQ9Rso9In+SjJ7OXjZda\nSUsJXJXxazhdV5kLAZhvx6pLEbNQLaWmvZQdDzEjkJpMOpSZ2ingJRd5akEE\nPnSM\r\n=AsSO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCSiS5I7dVK+j9EifS1mwcXQ19P7rOncV46xYs4yftjyQIhAPilzRQSMOGierxT7hiMwInYxC15JM/IgRwPRjy6M2hR"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.4_1539761122513_0.735479983072403"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.5": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.5",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.0",
        "@emotion/stylis": "^0.8.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        \"sourceMap\": false,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\nUse [Babel's `env` property](https://babeljs.io/docs/usage/babelrc/#env-option)\n\n**.babelrc**\n\n```json\n{\n  \"env\": {\n    \"production\": {\n      \"plugins\": [[\"emotion\", { \"hoist\": true }]]\n    },\n    \"development\": {\n      \"plugins\": [[\"emotion\", { \"sourceMap\": true, \"autoLabel\": true }]]\n    }\n  }\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `false`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css.macro'\nimport styled from '@emotion/styled.macro'\n```\n\n[create-react-app issue discussing macros](https://github.com/facebookincubator/create-react-app/issues/2730).\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.5",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-7B3SGK1FE013v8gESH3DKQgRgd+KadRhosGvzNd6cEtFI0FaHlq1K5X8tbX0Q1ML+7mKBrNWiIJOa8urJ0G10w==",
        "shasum": "91df310a50e866be6536cef83b2dda5a43d00337",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.5.tgz",
        "fileCount": 20,
        "unpackedSize": 86653,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxuYCCRA9TVsSAnZWagAAebYP/3/T56Ob4F9sME41HAoj\nvAmeocKeLDDy9YiUzb+nS1aWbLml0uGVMiMyMGa6KHHNeAMKna9scucbU40L\n0Lb0kYrfG9u+VJ9cw9I2xgMmk2OTPKiMa0Lcm7tC+wX/TY3Ls/KSF/3bIGWi\no+6uwXmsWjHPWP19oal8S0yjGZQaiuO1u+d2yQuFUVYPcoomT+ImSlbc5One\nvTh9y0pcYT56XqtQqJ8lkOD/rcu/TjoY809T5UD3DJIeHRG+RRb4UHI88U/8\n7fm+sC3pYoaMd3gfpAYk0ghFvbDAJkpgAAvvbo1BFAKLP38o8/ZfOG5dlj42\n46Dnnfnfmorapkh9vHX88fjabHw3nDfC/GmqVGe/yobX6Df1d5nhzi8dkIbX\nruLDPOmeNR/YKGD3SaMv6dEQdjuZGkTFysg1Pii/fTyhBXJJRAHoHU0klgXG\nFNEIHP/P6hfAFp1wtEhkFm8b12yAtufDSpih+RtsXdA3LLElDcA0f8JbdFcK\nJ1P3mTZXxGVn7vpOBtJmALmnRU5nwKgDZPV/P/8eIKLKL67Um8gpc6a8tQIg\nJiQADC7qoCcue1LcIW4odBwQIBzDnI0077ryA0QZ/UQPMBJPWsoiA+VuHRjZ\nTdYp0Tb8t7k9MbSUFyUislCe8dQsahxIaZ1KO49Yztq+CJFgVFjppWUuRf5L\ngv3O\r\n=9JH/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCID2UXs4KPXbOboNP4N6apPnozrqxk2HudJOdXKNkOy76AiA/IggjDWlORP+1Bq5O1OZx/bg9gpALUGdI9PCsYpKR1A=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.5_1539761666132_0.1912929906581875"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.6": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.6",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.1",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.6",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.11.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-b5yVFTcvFmGQ3yyLoLVREo92rRyu8Rx2ExeOY8iiny9UGEGQhBBFVtarEM7psb5sMhtnE1UF0JcCsonK6CITig==",
        "shasum": "e7ade4ce677e3c4e72cc1886ab840e7bceed3409",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.6.tgz",
        "fileCount": 20,
        "unpackedSize": 90787,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0/XECRA9TVsSAnZWagAAdooP/j85y3WfxLnAnSKH/FzQ\nE7d7IUAT8iov2+mi6dsnzoxWejusNOQwJYPZKLmF1GLYSDZssd7agRQ1ewgG\nBt7A7uGJyT9fiEaXvBhqjOCRXe5oJDsHZhafWmmqNZK9MQfmkkEKmeBrl0cr\ntppJK0nPaLHqHYBrOoBVf0X3nUCqM/GMJ1CVCOU97BlnUICvVJ2UJs3SGoO2\nHWbWi06vS2/tJDBMUGf86MBIYbIw2xwCe66Bb5wW23xk+DHkxGld85hm1Ei/\nUs8yVLpFEzZvy3jbPTN83SxdM/ex/OdBJ+8enbUsrz+N2ymc5MN6EZ50izV3\nDDtXEykjQ/8g7wY2C7SVXKgZhf0gOJlPh8/uoP4EIG+cPQwnnZQmvQxIMGsf\nv3x9XBHi4OK0RAR+xqHXAgGV9kpLpEXswpqneI9iAyJ/YyPJFUBKibfM/e3U\ngOjPVLcwcz87ujlWRVsCq3ANPWuvWjglgxY/icVZARL/9wYuTptq6APKx3tN\nWZv0V/AUCw2mkU00pUqX3k7pD5UZ1Yg2ySGRzjsNsZYzAewDrotec6teQpWF\nMVahkafYAtlueCHVapH7WusP53aONo+cqe9dZcQP2OqJdoRjxeAmmFODm9CG\ntr/Zj2/cMWIfEP6qb3CPZdUI7fYIJm+1E5jP9ZedZ2lYTo05rO9/aTQXVuHH\nWD/s\r\n=lrVZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHYXRstZqPL2WwFM5M8DFgMY1rCsxEgEQCxDNpzW3iWLAiEA+rxtB0bXAoKo305a216gFuJ4xxwLXnRLVMgypoRKnm8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.6_1540617666813_0.9277394662346952"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.7": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.7",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.2",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.7",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.0.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-sUEBpGbZt94YIcKvw+oALVf4cwGchn39heays+KOim0iG19FDrfgr5QoLI3ypPCWPk678Q5AGLrjeHgJozS83A==",
        "shasum": "04bca6f1c7e20f11b51440d4586338f86baeb90e",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.7.tgz",
        "fileCount": 20,
        "unpackedSize": 90737,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2/0dCRA9TVsSAnZWagAAZkIP/3aTcyfmzroV9fO7b5lh\nss9rQADN0LZslmL6yJ1dbQ2Xj+xnCNjVgnFSIHuHPn6lLU8yJrNtg3x2jFKl\n3wRXDIu8JlekuoQmnoK6W0ec6NrAOXuJGBrl1+JQFtGrs0XIssY7pv/w/ylI\nhHhB0U2/i4L8YD6oLWPAR+k+/E6m2xl1RLiyBZ4EMN5aoGugYrS7NoBDbSIp\nER2r5thXa5n+9OxIRpOfFPt+Cm4vSAn6eFFDWcUvgBxUQMLEVOgXfUSYZTiF\nF1n5HH8AZmVxZJmAeTPmOuouOuUGdViuJGkvNeUaeRe37cQvclOwJ6/BG2pL\nmRVn+ZKD7tMxMdv/j7dRMGdygyWjCOMNTgPgZZ/vfE9ExViVuGl1WfEe7PQX\nnrJIJWB0hl/KCgVMCrJVZXeh9ffFiNUIdx6gPveKtiWLgxhiDD5GRwoJpN1G\n9rSK8HmncvCv1zUoxdVvntybb/gJfuVxYJM+YpVkMbks5MtJ7ZjGn3DBtaHl\nQ+o7xjZyIxjMiyN73ELiTWWCx1j5fJuI2Q9KpJMPTnmDPKCRw8A/XLT4s6Uj\nCOu3oxNsn2Z3gFs3Hnro2Y52oLEeoEiRgu1DuAeOmBGekrSrL+4XfVX+qycI\nX5jJyNI9C76IDhs50ai69XECXdIUETMLHxKeJfyeb3OawVznkwmOrUtEK9F1\ne5G5\r\n=QlRx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGvjR/onACBOQyBqVh4m9wxuziS66GCsS6HJ6WJcfp0dAiASX6eufjbQXxl1JfW7BXoxCbilEGB9gNrLwotNRSDYzQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.7_1541143837094_0.9569392468185094"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.8": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.8",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.3",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.8",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.0.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-duFeS9F9lYKq2teiRQDC3UZt/KVnnlLHbsv6RMlkVbbZ0cJH7rbNrxgWErPh57xJOKCI/PgqJMphr14+PQ0obA==",
        "shasum": "33a3be8c54e3f7cfcbccebafd50bd372a6600857",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.8.tgz",
        "fileCount": 20,
        "unpackedSize": 90737,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb38srCRA9TVsSAnZWagAA888QAJQbny3B5l2MKyFPIqU3\nI7QiprVPyJgigCs+/iNEPb3KGSwS72HR9ImrayIiKCrfo0X3LUvOd7B2b3xX\nkMMFBcFAs5zgNNvrzutygLo0S6LBS7wtcfx49hbUC6WHAiEeg/EzZ/UN+WWN\nWFA8mwzcyWLMQ5zCiyuUkMk2HwdcTBzf8jsp8UfrZMyZlgL2EwgJiuEEEbPC\nYY8/2xVbeO4Xu/92nvupeugTaXf15nict4KAgKP6TZRxnx90h34zgdqpRSzb\nUwSmwGODOEh+7/9ZL7tCUCODtg4kt2TmJFgAPVTTCp5iU2t6sWD1hf9yMY0P\n7TexEv8GW9fAdlfppaC84Ip0V3/aOc/fzvlnkDQBbCJ1e7ivb7e0P+ax4LZ8\nJyG1bll6btz13dTPX7uycR0SChavjqfrDQvBF2wuvpwqwUTrorOxDqNM5PGl\nj0kpuCzr0c+hEKZqR2cas29hcvvTlNypTkJ2UpM7ycxA2NWEtu65BhHzyq6K\nicUmc5+APmGnx7QfiBYGE35s3s5IWU3ZxfeMoH9QmHZwWNqPlR7qHn5qp0e9\nul9GeqSXUY50d56dluOiWCEA6h0Oj8lb7heioI00GQiyaIEPAu2N13OdizUD\noz4eeFzODs6gCjJ5e/Vdf0jHfePyElXbL4iGI7G6Y/7Npy8n/OtjteN3hVP6\ng31K\r\n=170X\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDrDMagcgH0IdqsxIPZTVMGjqekYuHm4YD1Rch9KEuM7gIgCf+wkoSiGM2864ErxTEJUervib9j50Sael8SxWpjYro="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.8_1541393194285_0.4089950538121092"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.9": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.9",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.4",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.9",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-KlCDFqfeEcDhpsqKLm7jI+V39+WQUDAhxv9KPPoUYw9AprOie++G3fQoxzWofa3h7i081xJsn1asln+C90dtIg==",
        "shasum": "66bafbf177f3a6a2ceb889c72a91912aaf5a36bf",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.9.tgz",
        "fileCount": 18,
        "unpackedSize": 37545,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6QjDCRA9TVsSAnZWagAAmHsP/18O0nKyDUORoh4wQ4Nu\n/7xPt4fxZkFw7nolrjig6weK9Kpz0kadQf2inlzLmJ8zCXeO4HePqyAqMUF+\nEdJ0KXATMYr/9tTJYtLVhDoC7iMHxvlxwG41i+nPHYWaTYM/MiqYAxE1w8Hz\noL9AHvHCIg4Sd8BW15vFDnvPatwaUTqx9XKwAWOkqTFrjIcIAkfQx8EfRCbf\nCG0oh3SmTUAbGuYkrUen/YE9TKziLiDgOnHhY17iqTncr5cKfbDZHq0mQ+f5\nb3vbr+Vc2VQc543IEaAEni/dg8gQBgQfAzZ4YXK/WHnusd0r0MBCcmNJ+GjA\nACtJGilDs5URF6UI2+c+qWWCOkFt69euuDT/diQzaMX4c0NkeNh2mPK/BzGg\nLwh4RFQRrBgERU1fQq4G2w3ipwNXlfHYgkt/xwvdo3bWEse/WoZc8W10YK8s\nl/4GePa03VlOSPC13tvf5LQnU+51/e+OCw46ckYIzIHfDmk7HkOynqn1F7KZ\n2jS32c02wPdDQmzS9C9v1oHSmIPDE/YNyLtOwzz3BPq8uNF/g8reTemxIa4c\nvw3QZAPvutmMSQixpJyLVdwQqD/2jgMU4LoSA+FhcNkXhWUYLSkiuEpJIkDH\np7yQSnfK04sho7shVrjoLgBR2ukyRA9xftyJD9tYD/xT0eCGffpKYYPzEIT5\noYEr\r\n=rzOn\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDdMhPO99xxWWdimjYMg4C6dVUYiWnYHU/DkpLv3EO1mgIgSVhNl4LasH1W2Uz3h6aZaaIx62VSGxGq/VTz9BJ3ZPc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.9_1541998786643_0.7090758142732434"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.10": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.10",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.5",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.10",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-v7aBtLsQ5IFQhhBBjs8zrI9jQI7O4wWklF43rAsXhlEe7V15jRvuRYuKhFuBpH94IDnXBfFS6Y5JKhBN6vDI2Q==",
        "shasum": "aac1a59dc7cdd4b723e6e1a34578a1a7e11627be",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.10.tgz",
        "fileCount": 20,
        "unpackedSize": 93310,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6QzOCRA9TVsSAnZWagAAMaQP/1Y3O+lFdpUWCm35iOdn\nXJVMMWXzZiqeVym9yKzXWYrPOQJlN4nkY5tDUxxZeGpldEOTUM0WUsY5IRhs\nwwj4gBPqYAcNYFnspxrq6aLve3it1cdmv2ta/GELG1tpFJzbZ+vLusCc7upK\nQ+xEsS9qrhmkEYT/INj/hFno+bx1rlKPJvPHW1Mf6BiICg2IoZoiXbQiQ34k\nBw2PHWMSLp66uzlk0HRbH5Sfah28NMGatcSaj2v4DIDIhurxmfr4urzV/Gtu\n83q+BVthhpcftP6DYXbVOF4Yt2V7tVBmA618lLWuYTF8X7UGJxYZNzAuSu3g\n5dz1Dt2YPEX7hO/H7pekaJtroHXvuv2bwymaxeGihfALoQ+bOBVvYBTw7ojS\nFFsX2X/yrHdB07+EVM4J5MZePXitJzDx7hcrJqCB9HPsBvdmFPe5URGsQCrJ\nyQJtp4qTJIzWv/s41Et1j4AkaHclk7qV5c/00Eo8NUrWx4jFU6465dVUuDuK\nljcjFH4HSepP/nn6cSFdMA9/fbnGxBWppFHHLgk23h+eKXIgCC7kmlGB1uso\nJz3EfxmpF8/ZGecUdJQL3kwwp315eY1CcIxpc3Aj6bwt6Sp/oLnuyXw/0gpe\nVh9BYwTsnvxvqfI0qDm+HbTqAM7IC9XXdUGDZE0d4Rei8MJLGnF4FIZPGr6W\nlNrj\r\n=+S41\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD51QwXNm1EnWPryElUPMRvwIMkLcGh6ZkQKqrOJ90zPgIgV/f+4cj/bqo/bLcgVxBTecfRu0VS41F6iF9BUDbnYkw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.10_1541999821405_0.8670153828468046"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.11": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.11",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "^0.10.5",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.11",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-D9AOT0lFIVCuZyj3FefoDcnArPdY6LzmMyKDOzpUlgc/adOzwosfjvbxjduE1r7apJN7XjW6iIh9Wtildt7lFg==",
        "shasum": "71b379993b56a88911495dc975a4106e71fbfad0",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.11.tgz",
        "fileCount": 20,
        "unpackedSize": 93310,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6Sp2CRA9TVsSAnZWagAA1L0P/RCGDXvAqY3KCbs+AiU3\n6pJvSfo7pbWw210b8Idv7VOlk9d9Mx6JtlHEHbfE63suSaYooM1GikxQtJHc\ng7k69TgBkIPOCM0S0AQtjQz4Fho33Tj1La5/HLPDVC7G79PSxAM0QA4sUlas\nEDJrXecpTP3wXUlvJTC+mTedVOhpsPY6b2xWD9R49JqlXFyJDdDl/au/q0Vy\nSep7cL6NM4TYXHMSqugGAwEQpq4sajSItbFl9p/NCt5/yDhGJa3kK1bvSt8k\ncvzSbYqZwsGhpoG+sUcZ3XoGdrpvUj0qdWzFr5PDj4p0jkW3GcWrkB576QJ9\nOyEx3y8QrXiTYOIBniNPWx6RKcDI+FNlwdJ/mjegah1HpMGbatNLcEqUC4Uv\nrv+VUFz3oZuDdA9vIR8pQOog4X0l0K1WjymnApdMBzZi99QaMYYkKdmRDPOr\nb758ZF0+94+2OdgxZMt1rOIPwRw3gYbVGQy9aLhpbnE2YfQQxAsmdABJWPBA\nJa21+aL0QehGSc8SCW9WmiNVyCL5eVrd3FeTBel6JbZgDJcETvZNpPYRszqY\nac4E3brhoVPGSs8KqLdCgHUWtGLZHGuz+qeQS8CS1UT4fr5nJBNlE6yJGm3x\ng0ZcLmBNBGbACNlehwUeH5TvPn/7PIlLxZ6t/vOHJM2HpCsfr4oQ15tDkIvz\nPXet\r\n=7ErX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGE1EFAja5wzHADp839Btdceu7d8Q0ix4sIiO2llhQegAiAExfrwUy1H5w8vhUmKt3R3K3hCxMCGU/NHT3fjCuFcBw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.11_1542007413687_0.7783469607200117"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.12": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.12",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/index.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "^0.7.0",
        "@emotion/memoize": "^0.7.0",
        "@emotion/serialize": "0.10.6",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.12",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-4JrSETw10h8cUxeg6z5Oj29TJMMRBb8eAIb9HVcdcv0LUijIeJ1Ewqmi/rpn8pVBKvgCIuQspL6Bj6PP8awCuw==",
        "shasum": "2fb70430f8fabacaa45347d249ba416020436540",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.12.tgz",
        "fileCount": 20,
        "unpackedSize": 93309,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb6l0gCRA9TVsSAnZWagAAw+YQAIsOFnLw0nHtLa01mY5Y\n8Oltp48WkG3chaoiQGXX+JTiHQjdyqN2PAt3hb+T+SJCgrE6XFYVQGZXb9d+\nwxTn9eyIMNE7SZrGqB+x/HFw0SzRQ3LaEC/qRmwMFtbEqNxS+5AiqEtrluJ+\nweeimhrRrGqkXr+pvrYt/YhNoBy6sMGpPf7Mqs/HSV8lenyUZO2fDZKKHgkc\nG0JQKTICVbJut1Y/mBNmolm0VzOpTELFL2dBPa97AFPjGlLmMQNVr27HZM18\nW4bxbhhO3yVHfbMqrXxH5vgbMThmtjRz36wtG5BtQkjwfwN0j4x2asIsXQbs\nLJcP+p+++qzdYWfdNm/2v1ZUr4CFBa/h6vK7KrkSqiYFOSoXCd43H8fLOaOh\nu5XTC7LSggK+gff9tYeWC3lFvmdRaJjXPsvvTLRVZ3rJ1Z4M/eonwrR8kk+a\n7mgO+PN9VMP0uIr8D4uvII239T899mhtNyoTuoz3rIKz9/VAUpdXRb4rswZR\ncQxWVWWjcsgNAAt2cNAqqrfgaI8GMSMDzaMX4+tOcmtircosujU4aO//lPMh\nM3+RN6RNvkxKV7Bv4A+di3NMLemrXFexvm82+Gz75JAhzYfErY0J4MfTWMuI\ngwmyI3CfRxYflu2mhnyl8rfR/f8mBCqEK+BarBNglLfXTaijAC7V2Z/dSUwI\novDA\r\n=JluD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDuoZjbAxyvJcXWyT5E6j5g+LVE8JLHXPDXEgc35jXSuAIhAMVRXQdaLA2wfnP5yT0urMS1ilaEf1PbdfYGt8mHHCZS"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.12_1542085920124_0.4299623128408565"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0-beta.13": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0-beta.13",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "0.11.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "publishConfig": {
        "tag": "next"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.0.0-beta.13",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-9mNJwOFcv6DGPSqQjPhYB19bSQcyqsTeBYCUunofcjOWLtfMYtOuh/cAhVMy/DJRqsgTOL6qnPrk/8DuFzhs6A==",
        "shasum": "f4ee501cdc02ab05ce8d68eb369200d8ed51420e",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0-beta.13.tgz",
        "fileCount": 20,
        "unpackedSize": 93342,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb8/+QCRA9TVsSAnZWagAAnTYQAKSoclE3APwIfMXKKD90\nPtx4GoB96gFEgqePfCq1wm++R5y2FU76zwkH+06jFTJZKm5+hSSnNwsnvQPy\nT4/+OAvuOFJxyqfdwybNEMlJ4TkgVWoe3Al9hQI3XxuL8jmyJdM3szIrAjOz\nUSDQwL60upaZR6v0ub5+xQauuxc32xq4IMI0VJcysUR2BknXDnAvHtdxz8l2\nTWZg3lIwvUZ92xgefJUR9+FE1Ii2kbltumj0oXES8tXnOiM7GW+CHGpqvWNJ\nnHHvJioxx6qU2LfcXaG5R1HKeJtEmjMXA1hJci4/UXKFH5PLTiya6seLBl2r\nIJAFTToRG65mgzrwRBFr/vrwBDWGAl//Qg8kNYIEO4s1fzkUoid8MbHKGnzy\n/1rJgaBOeV4UsbgZ/qK2xMyTyxlCqTPl/ZuH/V6ZDD+VbEAH9CUsZ+ukOFcH\nopKLO+cGEw/FkRVwkwFnO7aQBdehfAXksMC+qnRZ06BUj7zGQUhqmEfGMRc0\nW2mv992CoEICMuGJAratJWEa41ypS4mGKg+labPjbeFs1r0hjWY5dcLPLoIV\nLJewztJ4Bs/oDPKFFSg9qNHgfx3gfmy9qn1tY359cqEaPkm0qvcRxAlYd3fD\nMFtF4Bo4S5rOrviCYrGdb4zSEAmiBurp9mw3q3ke++Irdk9wjvhZ0DzyO/Ax\nyQkL\r\n=+fLI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEJdFgTPydnSVyaRqjENw7QGC2R4Bs+FgSOdrAlKmCVyAiB6tWJjGmgFgfmCzMbDrCXvnRJC+3pQzJbwDjswZaqpuw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0-beta.13_1542717328098_0.07067830158327792"
      },
      "_hasShrinkwrap": false
    },
    "10.0.0": {
      "name": "babel-plugin-emotion",
      "version": "10.0.0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "0.11.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.0",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-O0ykSwaJQVHuZcAd0/TuMbG6QzuArGheL9XeEoQfgBeFlcyrGEj/2JexsCk4iMMiykxW7hfulm0zKy864PWOSw==",
        "shasum": "ceb177a64d5ccba3c28d7de4a0697d0f3a66315f",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.0.tgz",
        "fileCount": 20,
        "unpackedSize": 93706,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb/cn2CRA9TVsSAnZWagAA4bQP/3LKACJYwUOlo/fJq8hl\n3gMMVEH266QXP0Un9Z29KntpbnRDfdMBobMhPNztU4REIMgomQOVKHxvLleC\nJD+WvCzdatTTb2IiSZHqmuH1pDQfXrib1CF2xdAmohX4a9er1fMMWGWAYWJS\nrMqlKkmrSHOFBekSzuSW1QAzG7TPEZyf19BB2HKJ7A2BorwcZZGncAuFSrwJ\nyeK88a2H1l4MmgVm6M3Qi3efmrgaaT+5Bej35Ck1XPd/j11GWvhsb8giyobQ\nz64Qkpn2eh3mB1MVes2K9J2lIklxD3DmFINjUnHMN6c3Bc9qaKr4OAQyYcSF\nSO5eA6II74ky+FfcYpUrlNnmWKa1XHSlg1WOWPl/OJ+ZPTpQKQebtQy7dE/B\n6NgNpEJsqejploUxSpBkz+g1YIHXS0+dgkuBIncgz9B9oGCA7pD5tKLzQj2c\nOUUhd6630wKL/xPyMCdBClwr/B9EKvVdq4YDPn1Q2xazk2UmDn+7YEavj1Zy\nSCjh944C2MeEFA5jB8HvleT06nkaoQqq93LmWo1TIahVbxGLOOrJvGKcsXLd\nQL+Jiqdyugnc3Pq7Krqc+EHNI4uEvOsmuWADtqqYQbqulGFWUJfKEwuu95FE\nU6P+YuciEiKX9k8L3YUNe2lPlkZrAOfAgpbuPpdE7CgyVRdc5JCM8repD5hr\n3hHY\r\n=oFHP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD7U5i/p+gSPpfcv1bzto40iTxhrPugd3+PknPlEgk53QIhAKaYxc/GnCY5pnX+ItXZWAYrstSXTkNDK5w1TCiIVRI1"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.0_1543358966256_0.65270021783241"
      },
      "_hasShrinkwrap": false
    },
    "10.0.2": {
      "name": "babel-plugin-emotion",
      "version": "10.0.2",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "0.11.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.2",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-ltH4s23Q/TqjzfSVzv7qiHu14+IFAhOVwarRza4+5LWlbFTISAAveVbC0aC0rh4Y450jotcyqX+GKdjj+9tnEg==",
        "shasum": "c98e43f9a765931d66ac8ad0849804b6b7e1bd22",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.2.tgz",
        "fileCount": 20,
        "unpackedSize": 93812,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBbSVCRA9TVsSAnZWagAALbQP/0Sf6LL0UMjzeP02iqmZ\nxERJIDxGdw/DEGmW3IZB1lVxnOAo0tJcidNcwWdlASTvFD3uD+fNu8gRhYf1\nTF0cpgvyvfdRHMmo6I6LiFhKeLHqkVHwUhRYwNqJ/N2VCFjE0e6pmBT2lD52\nHws7bhqADyTBTur7vSziY8ITeyjZ/Ac/8eIRAnWIqHjg8+9jJ3OoS8h1kOZY\nF4LMQCMudc+oVCAnBp29avrJfulNLP5Uf7EEmnKbXlXXTeEjrhTsO+S9WL1W\nv18YPr/ShF3eFPVrvH98nyHKaMNAUCvdsaF/9AQN0LVuh68nCiYMRkvY7J9L\nMZp37ZSguGXroH02Pc+7MCsmHD01Br0wdEqYlIw9av1dlUfO7eJW+igNnoue\nfMPNMuTLslpUGDdyAWQjUc7KrKlIFdj/VHFEJ1QnGKtXNohhcxU2ggWoDMsK\n7WATyEcbbc+4rzlD6zPx+aYW07oK7HqVeMj4xO+ZpGiyNAyO1aiNQ0g1NSiJ\nSrXNj2AGgnpv6Qc8GY5VYYAWvDBlDxw3g09QTrvaULi6j2upb7y+xQJrurg1\n/LGrEU90GURDYP8Ct+MyAI+jGSdLIGu8FHVjh1KDpE1pJYZc9NVpCzAE0IsQ\nzCww5mEPU6Rv64xy6iI/sMZr/zgHVSbFOvQUtfC2pnET7QJNu0seS0okpmhA\nKLrY\r\n=s7fe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICA3NwMoad+m0xjC3lqgf0+KZL5dOkZ3IOLxP896y8U7AiEAsMbzMmlq6U93ieqvzfvBezJxJCk7YHcxeqtyjxUA+9w="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.2_1543877780487_0.44053596663753036"
      },
      "_hasShrinkwrap": false
    },
    "10.0.3": {
      "name": "babel-plugin-emotion",
      "version": "10.0.3",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "^0.11.1",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.3",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-i+QTXoYKb261lDeLlJgS7BrAsQrZQmkl2YcHViYZo9XhN+G6zssz7mXNiaxVCr4zst88q2lsxFcSmMAVjRWhgA==",
        "shasum": "548b6e126439cc1b5ead9a4d47f5e78862237f6d",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.3.tgz",
        "fileCount": 20,
        "unpackedSize": 93932,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcCD2ZCRA9TVsSAnZWagAA1yEP/3omMtDYnGgWu5y6FuLb\nudJi0q1FusrKw4LNt+CmIAm6NgEZWGzYgLt+H5MMKSu4H7sNIkOWhUizQh2T\nLHaDakO4e/emRyJ83o0Z1E+PrnCNHhYX/PQj8yeNvgxMzosS0v1cp4Hj2hoX\neIMr3U+JlzpHUpTF/P7xLgC3qdUvQ0BUakzHVTD454rY01KZf1tzTiDOSqRQ\ntB4RLOMbDgDHmj86lJis3wy1NBVZ8IC/Y4LL/hUwXmSP/gi2Jn48iUO3eZuf\nYJjDNEfhwyRmxhIzlD4s7faUny/JE1evD/InNu/vpKhFFkvcN+VGsgPdo5ii\nrcQWNRwItjDOnrW/JO4QpOsPn9jkCubU4KnZOoZU1KeJ++66y5MjdKpVShk5\n9LvLsWI4ANldMNId7Q9l66eztKR2NEvgi2hRJkRL8oB8cdoyRH2Yv67ivCiQ\ndoEmUQqgqp3/OmVDl9SbqVO3+HnmaSVM+Ss7ccFBVcsCHCTdjPsh+hLtJ62M\nfCvLGjMSXAA2/4gewGqIKKzCk9CHjFQfrJcoFjTRvRQkg6kMza2nCBOBVBkF\nkJljGa3bYK1mamc/UVpufyB/Tw646ULjqbV4fG1GUN4wrV1gbv5KvPYLWBEo\ngpzAbTrqnlOPkkYW/KfHu51ORKJXejqV+BgnqS6sbSGU/c6ZgPbZVsmShvcH\naSuz\r\n=gHKl\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEtGc41MYZbro1aQVFVyKns1On9CBZcML5N/Zur01R+rAiBQbDeNFWCiN0QB81YsHipAJuyWeHmCI3cVbAVu7n30Pg=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.3_1544043929219_0.14594344008883198"
      },
      "_hasShrinkwrap": false
    },
    "10.0.4": {
      "name": "babel-plugin-emotion",
      "version": "10.0.4",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "^0.11.2",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.4",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-hahTaxtYLww0sUWQSWjbhwbASy4JoTpsV9TnJh6xpQUZotJwp5kBnzoDeaOKgNff8kYdMU+In1YRgGM3rlOFGg==",
        "shasum": "e9387087728efe25c578b7649e11a2776c97e39c",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.4.tgz",
        "fileCount": 20,
        "unpackedSize": 94143,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcCEHOCRA9TVsSAnZWagAA2ukP/3O1N2k7ouF7IhycvHXr\nQHo2efBZk2lSaHeyk6vMq9+cgq7xb5maAbNP0rcyMKHysphi/hI8hHhnRV46\nfcRRaqcmF6U0psKgMmFefAPZfXfUoLtMNtNbuVEXJAz9OhacuepMEZ3TTCvB\nWfL/3Z5jP8kWJAhCD3J1fcoYUdHjH5NoqYF15Dc8gTjmwvV9wM9O+yPQTtDF\nMQpInsGjsAVshiA2SIXYgGLMr83V6NgsUT3w4b87fatt3RoZ7zBRK6VwlnLc\nrRVWOT8WwxL/Ar0XSgQp8khUHhsDCWzOLLyEvlXICv/gc56veoTzcZwymdP7\n0nhLhggXhVPamTgNR1VThwR2VOeUGogcorX+mnW3HG4CHkQ5GCN1h0iIm+q8\nrRR44w12Ivu3hYWIyJJ+PypTkoDwB/6l+hjnj3s2Lkc+uXhGoRRx1TDl+rQy\n08LpfDoRANu20EbXG6XTmD2HKwhxm1Wc+OEJdIdeYI8sJq7WKfVjcRr+S3Tq\n+f3OBogO44T2xmOBoLpd1mkLzVq7SVpHYVcfiqkPGxHqmw3bNh03IhglDbmm\nclz1u47C+KvtXk5tcQ+7faNAuUF7+IgkeublQAyaU/Qh3YODRdb7Xt8g6CgF\ndgckIO4gTZzr9Zlhr+LJUZEnQHCycVag7VEPKZDZCPEOh+qErgHC+nbNzf/W\nVknF\r\n=XIJ5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDqWbtwVSjyEATFHQhvjqZTew6tF2pChMrl3w/Feg4+KAIgXvvHYQEufpscRv8r0jXimJeWgvjddMSGBZm4ekALvpk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.4_1544045005903_0.6079655366512535"
      },
      "_hasShrinkwrap": false
    },
    "10.0.5": {
      "name": "babel-plugin-emotion",
      "version": "10.0.5",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "^0.11.3",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.5",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-ezct2vKACg4juSV0/A/4QIDJu2+5Sjna/8rX/LXY8D0qG8YEP3fu8pe5FqZ9yFGa8WOJ1sivf3/QKM/5C8naIg==",
        "shasum": "05ec47cde94f984b0b2aebdd41f81876cf9cbb24",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.5.tgz",
        "fileCount": 20,
        "unpackedSize": 98830,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcEv4TCRA9TVsSAnZWagAANtQP/iRr481GHgHmvuZQzqlL\nfNjKVLioZIUCNkxNKLnNPyhva1CilfDLrEPnvkM5mIv8j2SqfAkqrtg/AgxC\noq1tJ7ZY9zAqL2wbQYM2pRMcbcfb308vY8eAuGKjQLqRKlPI52lBXWWZYv0p\ni2fqTSh4+ArhfopR3fvU1jJ3zPudlTNWuT1H5jKOrWCl5E1xakI3R9kCZYz7\nRUxk0JYYxaky9TxjVNCZu5XICOceB/j1Voxm12Xb0GldsTF+NVL+j21XWLXR\nR6t4tfvsyyjkJgJ57LqZR+8L4iX+WA8j7mMKvy2tp2grGZCSiuqJcZzIrPGq\n2AqUktAiAUCUhEcEVPMN+mYDh6vhw7iN3mvO9ohxCTo1F+VAB3FHs3hJMOlI\nOpPPCccCpyqx5+X3/GHec6TdIiMgvW/JO6YgdFkyG+JrB+whGsor6O0qHAJQ\nUtGk6+dbNg1fmc4LLng7TlbX3xYAsCswt5HCdquLfAw2S+7lFb8V2UHPD6kJ\nkcOv8VRrRgXyMW9x4Zo5xbp6YIU2cskQIb/+OqF3QHKIuOkTO+X0BpBe/3aE\nmvEdNEaYPZxVZ93Vyizi/C7kt1U/mlcUSiCfcAXdNJ3vgsntOn0w2jMdZzDn\nR1tRpXvY5Ox/Ay7yw07Ly8C9hiAFtLuLsNpjXdJzSsWpkuhEhX8LcRYNPz3V\nZADY\r\n=YuY4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCjmQzVTd7p43/uXRIVO6+MpF11SLEJ0+6pF82B0yWGmwIhAM1gooPhSQAQ702fWI4CfBv1ZUaHeHdg0F9jZ1Omg8FZ"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.5_1544748563428_0.45761885859899665"
      },
      "_hasShrinkwrap": false
    },
    "10.0.6": {
      "name": "babel-plugin-emotion",
      "version": "10.0.6",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "^0.11.3",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.6",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "11.1.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-JD2st8enZJn8h7W1s8kcb40r3RBCJwV9E8ZAhyyhELUMP8OYwyI9K1rz7MxRi0CoorX15kVo2NXZ+OJ6CeMY8A==",
        "shasum": "fd9bb4a5dc6cf2289b656215dbbc80469fd251b3",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.6.tgz",
        "fileCount": 20,
        "unpackedSize": 100189,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcMoxHCRA9TVsSAnZWagAABFUP/jOhjui9hQrlHAcQJbTZ\nFmMoK9+1JNfNXJisUgfcEohUnxenEiewuHKgJitbKZ4qzyFoKfClCCrHskuA\n55m3WC57UAfBpDyVIzGyx55tswp/Vnb38mXPIrSv6w5lBoW5QC0bh+6Sre9H\nVx/EZaBbT2lx1V1XafS7913OQid9wimm8uTorDCVRubx0ghi0hOyU/qPDo1V\n44dWnFqQ9Cs4puUCWrnCeNiphHMfwykhDBbPNGfXZMXz20wmHSNYwfBwKAil\nXqfbRAJ5h9meM7/VC2fjM7qJHAe2rsmMRTdG4MqYjpnM1zr+0CkZlKl9i2DW\ntr4JZ5NcWR7T4L5fYWBD8KfJNr4Md3gZtpK/a9M6mz5bWBcKgLEhEnfeS113\n9Bsm4HkTHBwFbTttXESrLRkFb64qABeQuHHLnh6tnvGRn9QYAQBw6DxZ/XC9\nVYkJyLqZIGiOtyhtoDE4wLKZeXA1f38fTDoxqzjf8IFYKq7GTonPy+KgEH6U\nwC1zMqDCRkPWIBaP0OhRT8iYpaV7tJJLZ3d9wRp+5Lk+wnoRxTFleoZDtvss\nuEi0e6/67OYdaObLWBZA1OWse5AWTnEPCKGuoGuqpcjy/SOFMF2xvUr5RaBB\n2h5d/LGbOTbFo3VkBDja9Qe23BcNGxFLfV0BuZRZrULa1JUFRI45WtLIhiQN\nxcKG\r\n=mx5x\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD+trzET1RZrgs8b/V2UPF63AYN5Y/BhHE7t2BlN1X4XgIhAKF4NbDry2RdZY4GAdMrwVxQqVcYkIjN3ERNd4yoKCS9"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.6_1546816582761_0.004920746856460934"
      },
      "_hasShrinkwrap": false
    },
    "10.0.7": {
      "name": "babel-plugin-emotion",
      "version": "10.0.7",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "^0.11.4",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.7",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "11.7.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-5PdLJYme3tFN97M3tBbEUS/rJVkS9EMbo7rs7/7BAUEUVMWehm1kb5DEbp16Rs+UsI3rTXRan1iqpL022T8XxA==",
        "shasum": "3634ada6dee762140f27db07387feaec8d2cb619",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.7.tgz",
        "fileCount": 20,
        "unpackedSize": 100189,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcV+P6CRA9TVsSAnZWagAAi04P/1sauQv1X0bjmd/SUBq3\nEA/QpsMycrjXoBv6sk0N7wsY06svgiJuIOHMNYrPEyXM/7pVLNu7JHGeF7fB\ncvCZ73rNpP2sZs/HuE4Goot9atlCfhVfL8IfkqxPFT4MH1ukw/jMR1uJnTsJ\nTCBHNEO0kB/yV5vwPhfs1LQnW6Q7Ez2o1w0ZkXQgJFzwrlLKseCTaHx64tBw\nUW4V3lYpbRq3BE08LCMxawC1TnlJL0gOaxG5n4a3o/Hjr4x6gUExgD/+yMsQ\nZcSKs9cfi0NfgOHMaXXEM+aJo1b9SnvyNncm6o3d5Q17/YB1qeKzwDM+VPkJ\njh9/DNad3xUfxiM9TZNGdEng4fe4J/+nLhkeyxoKkZB945T9MAhY7UAo4UdS\nW70yV3no6L21zmPUr1PWuFAlU3ZOGHZ2b2JxDetYdUaZ/zsDi7LW4DH8inAC\nOylkh9TyMjZHzd3S1gMeeW3+VNAIk2rWnjExvasJ+yEqWGf5eRFgqwFjECLH\nF4isE3iMqncZbteyMVw3zKmwllMTHC3IGpn9M7+pAq3m2lHuJnDKjXUhwvOp\nNmGzkfPu7tksprAImrw+cAP3lICwma4Ik9F0dgFZR7zVoLS4F3TVe4u1xr6G\nvtqjb1CM0gX+p20uA3TK4OogCfp5dxh5pRMAQuM1VPgJK/lFsixMh64AaKMJ\nL3EX\r\n=LVjP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGMZG62mLGiZUdjNOS5VAoHOzu2rEeUmJ/Pneh4ZMndZAiBoAWom9VfuDUOjG/MEZVFVT5PljAuh1Z2z5JW+pECUAA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.7_1549263866354_0.7472267464510156"
      },
      "_hasShrinkwrap": false
    },
    "10.0.8": {
      "name": "babel-plugin-emotion",
      "version": "10.0.8",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "^0.11.5",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.8",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "11.7.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-gHIlhjD+rtXU0BXM7MFwOu/UTv4fFe1Nv4lrxrf8me66ofVUF01ruXJKmpeWrQGZefgRiAOzQoIhXX92zmLOpg==",
        "shasum": "2c83ab21bb2fe1c5f824fa144714cb0d54605c3d",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.8.tgz",
        "fileCount": 20,
        "unpackedSize": 100925,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJchf8cCRA9TVsSAnZWagAAS1gP/1sdDqfyVXt30sUXNxvG\nF5LbXQQfBFaIydVoDbahas2aKaUM/q9mxWXu7T6dHLJYsU9W+jzOii339fUk\n6YNpJNsE3eahecBkuJkv+g+Wl8DofjtORDMIviAgoQPzYDObBttB4TJBPFR7\nzdXB74gu4a+1wJjk+2265x5e4WAbVlKudpUSxhF3xV0ENaGPAhzMYFyRkgLu\net9cZs5FCtS91I6mLg2i8CK0Jja46oY8MjBQL4dbuCRb2bartm4PjecVH332\nkKi/6d6+b1tVXnrza6+h4snrKcfdlPcJYU6nttTRQX6ni38lAh9sJOxvSzSc\n+5V5tA4QG215lE1gad6bb1uFmMruoWPVUVCVs6NLUMu87C1VwLggPaPTFv5G\nBpJY8Ify6/OP6TE2TQyEeZRsToQ7jav3w5aTDFjVQ2+qhsXKHuOYsmBt1y/3\nLXJQqhHzhNGQkqXu0HmpgXX/W8QS/tCsFbnvKZZEc0kEwKn7v1x+umAg2+Zd\njS00yCGiYZgEfUe1MXgBY5SstAceMEKw3+0B34i3RYkLe5UwZK8lQ8O7pd09\nR93HSV3lKwOqC5y6SbOOkxh6NjLVrkOsjTgBVnpMHUwpZqmWridjtMyzY3QF\nSUrseCSJVelhM/joQV2/y3Br0jMBSzJhq/WzcsH24ewAVijQFNB7JApV8T+8\nmEtH\r\n=gQWR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCMiwQfJKOuLPy+kT800K3tnE4D/QKNWq1R2TdR5tFRjQIgfQBhKPX+tClrnWlyw40Ccbyuf5puW99yJQtSb0TFBsY="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.8_1552285467759_0.6786365389499538"
      },
      "_hasShrinkwrap": false
    },
    "10.0.9": {
      "name": "babel-plugin-emotion",
      "version": "10.0.9",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "^0.11.6",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.9",
      "_npmVersion": "6.5.0",
      "_nodeVersion": "11.7.0",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-IfWP12e9/wHtWHxVTzD692Nbcmrmcz2tip7acp6YUqtrP7slAyr5B+69hyZ8jd55GsyNSZwryNnmuDEVe0j+7w==",
        "shasum": "04a0404d5a4084d5296357a393d344c0f8303ae4",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.9.tgz",
        "fileCount": 20,
        "unpackedSize": 102217,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJchgD3CRA9TVsSAnZWagAA0GIP/jN0inJisCKp2RTg4Yzq\nDq9BpL0MFsgoKTIP+BI33ApKZIFjivI2qWL+w1axiBapuE6qY+9oz18YYR9d\nqlmjLH/mOKg+1APGBbMgL5D5oGXfVy7tahHxlGdcf8Dsj/ODxktXf3lTstJm\n4XOcaWu6kVX1EHMARg4O2ltlL3HmX3uRLL9xj0faRH03tbSoOC3A5p3239FJ\nfscIZDSh/xzsT0P6OGAcLM1T9OqIY2BohnksHLuIUUCs/giB+U6JpKwE6QiJ\n8h148m8z5735tG2aCYwJirEUX7qD0oVJKWU5WIwQC3n/qaqXaMMQAInui5ky\n5lsyOfw1lpK9srxqZlQK65HdYxVuAzs1+AB4N0B8M2BPLwykMefrbT61F39H\n7KO1uer0g/1xXhHKSrzp2BUeEbB5LDy/mlfQzcDfOfqIaLykxs/ylu5gQeyl\nxheMmPcLjD9VifX3UnOJyP//O0+ZpIpukqOvDo/RvLGiVwTwhp+OwCk8N6wk\nUxHxZO/90OzUB8yxu6zoIcnBDE3XeVuHGlbwtNspBmvqu3JOit4RJpPB9E67\nM+P7k8xDSk6r7R4Y+XBO6AgT2APddT0VrrCHDCxyYEISQkpoNySsKxzYpjWH\nwDyrVfsWoYxozx7F+tR1xoP/2Cw1XEAq5Ef0ogwdh3VvZFwDYY8r/DrECB7w\n1QtT\r\n=lhr/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDcEP5rp/RqpirzhUA9T5e+F37PPurCibI2mHMnTggj9AiBjVuYPHo0seowQNDh8CRZg31EsQO3bUQLQdVAoeuWVvQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.9_1552285942934_0.3483560618438286"
      },
      "_hasShrinkwrap": false
    },
    "10.0.13": {
      "name": "babel-plugin-emotion",
      "version": "10.0.13",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.1",
        "@emotion/memoize": "0.7.1",
        "@emotion/serialize": "^0.11.6",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.13",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.3",
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "dist": {
        "integrity": "sha512-w8yukWIYDw2ZUzBo7B9t5jh7wsM4NQWqvuZadW4MhVokgw5wsoBRJ59Sa1hMc3UZiatwb0iBNufmRQZVl77I5Q==",
        "shasum": "c4faa1ba8c0fd74a13226ced32876b314ef1d8ab",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.13.tgz",
        "fileCount": 21,
        "unpackedSize": 98300,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc/M5bCRA9TVsSAnZWagAAxo4P/RQAO5M13GsU5HgeDu/p\nHfZmWhmrU8AF+msgw7CatCpHdAdOb1LelfKVPBE1LVGbR1DL1pCPRfH4WTz5\n9BwhgQbjUbGNOjh9InIRfjxJwo91WRS5bhPWtJO8zKbG+a/6fzDYeXYLi5Sp\nkKx4pSxq5cmLKqnyvJLNEH9VW3ELhqppQCWaNv0Xsjf/TsGjMd3NeKL/GEJL\nDbhhloQTXkrh8G94coOsKqbwf0KgKNBN2+jtdIFkdYBNzelUcI0RntBG5o3y\nNLjwoYgHWU28YFexk9QCEkag/joOFHpBNvEKska663hjccVa/BdFy+DgWZFA\n4cDoiiEWbdHpDQIcz0X2Fiq9TJxwUZ+/eryLtOCXgNaP9zhBiH7hKI4SzLNb\n6YuXXQN7qcWq5MTZmq0qNABwBqbHqglcSAMcPRF1MRbpGjgujwh62N6ufEgU\nC+RxAvVQr+qZ3WME2Cd8TQPs+Ut/ioupV9FA0TCE5+AK/B1suUFNQB6JHIev\nFZIh54w4ZL78QLlGhv2FigGodsZKLeJATKnxyAa2htRr6VjozMbvcAtl0ew+\ndO9K5YZ3nR3mO7gkPz0anVTziHys5A61PYwM8KsbCmpQNX/I6uoOxwk91eNx\np218cob9mVVIc1kawu/JW/siRBgQjli9O+oy495MLCiSkQdCV/DPt3iUOHy2\nnAUA\r\n=w99S\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDfIV2PjXJKAXu7cEKuNLEs0dEDQJ2+gC5B9Px4u36SfwIgL+DZ6yfia1QkpkgYHsnixEPj3Ua07vK8V+LpP1/MJFw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.13_1560071771200_0.3990972631904808"
      },
      "_hasShrinkwrap": false
    },
    "10.0.14": {
      "name": "babel-plugin-emotion",
      "version": "10.0.14",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.2",
        "@emotion/memoize": "0.7.2",
        "@emotion/serialize": "^0.11.8",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.14",
      "_nodeVersion": "12.4.0",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-T7hdxJ4xXkKW3OXcizK0pnUJlBeNj/emjQZPDIZvGOuwl2adIgicQWRNkz6BuwKdDTrqaXQn1vayaL6aL8QW5A==",
        "shasum": "c1d0e4621e303507ea7da57daa3cd771939d6df4",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.14.tgz",
        "fileCount": 21,
        "unpackedSize": 98517,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEqlgCRA9TVsSAnZWagAAsuwP/1bMbiAVZAydqBH2Qm6q\nqmnslVF0UoG0oSOtIo2+M6APmKkQorbCxvgz7SaVcyIIP3zfmxvGM357eASN\nT5ciDINlDh2zbnVNLqLEUcdTGwnuz48aPSoZqlL+r/mAthrIjJ5Naj2oNkhP\n6hKcmYJfzO7s7sr2RID43hZ3MKTPprrXh2H0Y51lQsFq3R55duzx911HfNm/\nvmmj1eLkUqrTyOTOIeF4gQAMTrz7jZMqFPDcWMhRB9yUmbPqs0pgiOmgOMRR\n5YTwfHqv2kJ9kUp8tkGgOnv6z543ghmyX5PTCPXihF0LwVmAGbUEBbPv3cCl\n5umFADUErFmJnkZF+Fgg0hUyqMXB0R/wDk4925Ml4KRnyuEKJ442jsVtzWdf\nRxFo6n0lhAL5acy4N3Xt2IjHl93CT+WV21XqtCD+aD/vHyqm1TeNkBJsR5kw\nVT+JjbZpBzbmZR++LDV71ArXpmMdj0BeX6v7VF39FG8EeCD4SEbRp/3a+YUg\nrCC+AVMFMida//A5tjGNXD7oRBgUqXDeFpMokLygYPAbdjLyX6AUv9OrDVFY\nDG4v+wZ/8tvlZnDMCKSvaUFL5OAgH+2YxOAvT9KK2xq1R4qUTaP3t6vHKdXE\nAazpChCGwy0fIc46JQvuo5e9dj7ErpVLHitB/bGdQVO4N3jv/v+KifvroRxs\nxLTC\r\n=sOQ9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHXe/2JyD3s60HUK9ScctBkg4oy8Eun+jTSb10oBDJu+AiAJN7iDAr+9gteIawDlBjVkSBLmoNmbAO55dU8yRhs3PQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.14_1561504095689_0.1865006161893743"
      },
      "_hasShrinkwrap": false
    },
    "10.0.15": {
      "name": "babel-plugin-emotion",
      "version": "10.0.15",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.2",
        "@emotion/memoize": "0.7.2",
        "@emotion/serialize": "^0.11.9",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.15",
      "_nodeVersion": "10.16.0",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-E3W68Zk8EcKpRUDW2tsFKi4gsavapMRjfr2/KKgG3l7l2zZpiKk0BxB59Ul9C0w0ekv6my/ylGOk2WroaqKXPw==",
        "shasum": "2ce5bea191331ef65b3b9ae212a8f0e46ff97616",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.15.tgz",
        "fileCount": 22,
        "unpackedSize": 134016,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdRMeDCRA9TVsSAnZWagAALaAP/A8QK0zlWLUpSmMZM7YM\nsI48WYVJV0PWpEvv6TJNWT1wP/rNXuA75jYH8detmfpdd/K69BxmquRQVEIU\nwwAaghOtriHsewZVe83guNh3GIhQF7/vuK0yT51J1p4Kj/A4q1pb3zHn0oJm\nukBoVNTphf8f9NGg2U1bdd1hF8CJNNivnYMz0QFmempVdNqQ/qyGXk2phRSb\nyHolzaq24uvEE3Uvn6AUO8aylP/biaIQb5Txg/G4O/ul6CB/tVPlf/+31kGg\nzQKN+hXpgSf4n21T1n1+np+ALlQVz1iT+ro3dtmFasJDNp1KJMYdOTW+8znc\nU+DVD22Sn8lah4NQibIevjFVLNq+Z3IdFm2u2UazMweyczgDXckPnV65Cmjn\nQ90bOIyNZEPVfYqoh0REmGGkdQNs079Clgnxoe+WiEF73492UUsUdDJ+2oL8\nNBQpVunrn3ItgjHy0BOTTgTSbq1Q0qIxZdGucE48wODcjqDBLSsco6475Spq\nVaQlSkPFCiPFqWEvtHlEBFF6PpkytPNWD0eSU901qIn4oB6D3L3GdMWtZyAD\nE2rMFmKcK12tSajIdlVIgsZwHK477XS88d4I4K50ewqSJEldy4uQWIfSZJHW\nFNl5v3Uc3SyeHs5n1K1QydMBuXP80YGv+g53aEMNTYGvBJwjRFHNzKPhnZfb\nrtWh\r\n=9zY8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHpFzwN5p7CAtkBbhvPi+gFgOdAPILMg4/TWT8jl0H1JAiAF06dfboGgfI4nBKhWDMnXqqY3DSNQGtTd2qLc4JpWkw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.15_1564788610357_0.4736925133709349"
      },
      "_hasShrinkwrap": false
    },
    "10.0.16": {
      "name": "babel-plugin-emotion",
      "version": "10.0.16",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.2",
        "@emotion/memoize": "0.7.2",
        "@emotion/serialize": "^0.11.9",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.16",
      "_nodeVersion": "10.16.1",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-a01Xrourr/VRpw4KicX9drDwfVGHmw8HmlQk++N4fv0j73EfHKWC1Ah4Vu8s1cTGVvTiwum+UhVpJenV8j03FQ==",
        "shasum": "cb306798058b102a634ca80e69b012caa345bb09",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.16.tgz",
        "fileCount": 22,
        "unpackedSize": 134180,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdVhLpCRA9TVsSAnZWagAAsMEP/2yxMjgW2IDBvzcd/7lC\nyDRK8CMUJKUmDBHucM0Zh8QFC8H0PyHZJGrc8fSWrvwx185MzaanFwq1WfmN\ncrqpfX+zdLSUv4u6UbsMIjuARzLSKdFqi1ybqEFKlv92XSm7y7+TFYtAPhjB\nzkQeyqmNMoJ3pXZi5tIYou6qFP3LhXuL3muPm8xLO/FWZ5tXzkDVqj85ehf4\nBFYy1d3zs85G4OQHGoxCwo76WfZsKQYdu9qlDNmRm/7l39RnhlpV5jYuEBB3\newcHDgARkP/7vOZMrMi7PNQLR5A0YOJsbjVPXI9v8lzdoYpBHOY2B7v6RsUq\nJLdR1zxf4s3jIfLiruI/E5wmnIlV0jAC+9wDFAsa2G9fQrFqVfV+pUIysnoV\nUASKklKF/qBo3vRFRmMyzIw/vRT3PaR4eHnlwtMaFyg0AMpZYxt3XH58WdgI\nHEHL/WlCxqMzdrpH8hRMaSdPfNxJcl5OsZZ+BLPnw8hkm22LFUGfZPnTqa2D\nS/0CgNCyTHBv7vYG6zWnSNdzx/Mb2oO2xDEm6rkTpaf7CdwxrC5TbsjSGrCm\n0MCWmx6K+D52+tC6qx6jb+zlTiV1yLl+J+/9uNMLg9zJw9Y7NBZiS6gK9kcH\n6hUh6yan+jJ33kRAwYX63TlZ4dWiDZ34nA3dSaAccIN/lRmvrHciE0DLPiE1\n8Din\r\n=yeK3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHAE91uGMWZzALnqHAXi4hLQMhac8XwlWz0sumq3fw5rAiB0O8AvUAoLYfdIp/J4DILHVSK+s1KT7B4JrA/vWGYoPA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.16_1565922024909_0.049379046873341936"
      },
      "_hasShrinkwrap": false
    },
    "10.0.17": {
      "name": "babel-plugin-emotion",
      "version": "10.0.17",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.2",
        "@emotion/memoize": "0.7.2",
        "@emotion/serialize": "^0.11.10",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.17",
      "_nodeVersion": "10.16.1",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-KNuBadotqYWpQexHhHOu7M9EV1j2c+Oh/JJqBfEQDusD6mnORsCZKHkl+xYwK82CPQ/23wRrsBIEYnKjtbMQJw==",
        "shasum": "5673fbed7b1ed61b4b98d5530f33c8a4d1b08484",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.17.tgz",
        "fileCount": 22,
        "unpackedSize": 134624,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdawg6CRA9TVsSAnZWagAArjQQAI5zOOE0zyixsEUwbV8n\nJM10e51SbvMGeYS1WVGtvBDERJIvBPrL4na1i/TvXBjNRTHL4No+NJVePnb7\nLyTaamb27oMnK09h2lEdKu82+ZQjpd0zCWTUjawPcymzINOCSIcEFAlYtBb4\nxJW/FLTmK/ZXAo7mexaaIwI25tszcIhJw5zI6SXSwAWQX12T6t5KgfaSoXdQ\nWXsRzaiPVeP3hG23HMTnMpHkOPmJgd1SuwruUmbmj4JMs/H1NxeNPjYjhojL\nFUiAj/rMRt98v9rEDF9hYFlkMR26n+GIOGT8F77UiP1/gc/rJkmHnh8ylXEw\nbXX5xLvfkAfUvB/ZmT5GyCwnOfgJmXO17oQ3hZAGpEB9B3zZO/JYwq10uAUB\nV2Y+hEmRO/z8/gRZehuN8EeidWZRhpfL+noTeoPAsbKW2sMzSTkx1zZ1fL1M\n5n3zVsryd5rzDs53IveSsj6kGPnpOntlDeaF0YGz4sDGN11kshLHrWfoCjUQ\ngeoiQWoHf1GKOOWTNlGiWKW/9NCs0m9yUj0z5FM9l93/0taKKEfSKFpHdGUF\n1L9j/yogJM/0VV6RgJx0wnc0a47qPt2Tfne13ruB+AFGNthwIyu4lkaBlmFV\nkmiwZ6579U2ALDgSbYg/rgb/uJ4oCgVJSXZZKBOaquhwOo0/BBXcm9nqjXvv\nEBjp\r\n=3BtT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDyQ5xJHfeN3mo7XVupZURYgZOl53QR92GDtqnG3Qo8/gIgFUnqRSspTtZJMQKl1kRh2jjrBWXqS58nBE6dWBMrvNE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "mitchellhamilton",
        "email": "mitchell@mitchellhamilton.me"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.17_1567295545438_0.4179433246253832"
      },
      "_hasShrinkwrap": false
    },
    "10.0.19": {
      "name": "babel-plugin-emotion",
      "version": "10.0.19",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.11",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.19",
      "_nodeVersion": "10.16.3",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-1pJb5uKN/gx6bi3gGr588Krj49sxARI9KmxhtMUa+NRJb6lR3OfC51mh3NlWRsOqdjWlT4cSjnZpnFq5K3T5ZA==",
        "shasum": "67b9b213f7505c015f163a387a005c12c502b1de",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.19.tgz",
        "fileCount": 22,
        "unpackedSize": 134754,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdgNbHCRA9TVsSAnZWagAAn+EQAJXMcauf0VKmBxQwGTVd\nCRjimNreD69Q843md9EL31v8Ehjhmwgc+drGBGLrJ3+OpAdhm6yp/0Yfkiod\nG8exQc6BOVGt4fNOSPMDcpWl+P6xLN28tb6SOg/FNMhaaM+k/nRTlhlX9neb\nACngdZVmKtpz5yFa6fVZuroa4TOQwJCBgh4VWSkosxwXg0lph+ymC1xUwieo\nF22dAOd+5Ha+03PHiPZwCm5nFIPT0ESEoXlDyO2KffQPhvv+RY+IYNTt98Rj\ngRFhmN4nKcPgL6vUli3FzUO5lqidKhBGshi9yUCZzXzBbog5jvAszq9lHjHT\nvW/88rqs+Ha2E5x09Sbx28pL0g11X56pUZiAEm4juotgwD/JplV3iFtRHh/Y\nS2pE6bdy1gAqMopxqUNI8g0BjNBp85GlVYKiQ5fHpJY8/kHA0DXTTMYZr+xG\ncJxzFjl7jB5QGusyj6/JX15jpsaGGIGUtz//NICatzysqfoXHcVB0GuoUHW7\n5pVcurXFQ6nYA/8kXjvLRo0nZ2sdKrzrrgGOo4rk7TjlXDZYHRrMYMx2Bb9X\nkmB+rNrCq+gmDV3E+fjSvxPV/LxD36qGabPqLq/JtskKLsZP4QfguBeWPToT\nascDUV71x48qUuVtMeHP2nCIgl9yRSohQ4kYr61oa/VXDTal3Xfv6rBvwGT8\nD55l\r\n=4n6S\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCA6y9w3YboyQ2eakQ1Vh1xVIn6u4ZcXRgC9GDfFF4hHAIhAIUMudfCKqkxNYCg/vTxbN53bDCocDxopqBIUB45H3p4"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.19_1568724678351_0.5806895676000159"
      },
      "_hasShrinkwrap": false
    },
    "10.0.20": {
      "name": "babel-plugin-emotion",
      "version": "10.0.20",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.11",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.20",
      "_nodeVersion": "10.16.3",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-Lmyc1wk+zdvz9LY0IZub51fwTxsptxdvBR7aGGmPit9PX7suYUtndFcge945TNqcz7MZxbMxlo52RaRxH+3wiw==",
        "shasum": "635766d390b7923bb0c01bfbb87529e0ff35478b",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.20.tgz",
        "fileCount": 22,
        "unpackedSize": 135321,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdlSsGCRA9TVsSAnZWagAAyn0P/21QR1c65fIe/fXGK5AN\n/QJwqc0Gosre10pR60TQ6MCJkgHucZr/y8zlUq+EOfPXQmZLCKMm9p7eMKnK\n9ILZN5cnAides+v5x/cLdv5d3WU1QAmDkMkl2i+bgtsmVUiK04uzBV1S5bgs\nxg6/UOLNe/TXZma5Cz5O2ajl2yYxR6cKeYEFqRUwD8QUuT9lPvgcEwgqhcnf\nBa8KHyXa4oUBCldvcLt10wCw28mkl/BPJ938AW/52kWfqijxM9/BRzbgcl2c\nMPLTqHe2b1rGatR6ZdpfxyvtW/WanBJJ/p3uQG/0jZKQM+Lh2G6qpAz8gHhn\nqG5PaqTDcfHqxy7CWxNNI4lxisioWCy08gdqxBvNcReMmYTKEmnLIbYIdhiE\nUIe+JiOF2gT75GDkeKSIFBWQmRpSXxtDXHI61WIwysCjLY9K41DgQdZNPO6V\npY8Rhobdl8U6aoGYWOXscJjFOH2qq3Xxiw65eB9T/MxTO5vYsZHT5Lzy7R70\ngCweKUgCRs6dIoe8EQup0htmaSkLm/DaGG8npNVgV5oHhH4tK1PuUJodvDqj\njEx818W19lMEyIXSbhNbB2na6KAXXLAHmaRauRFJW2CtJRqnknyUqOjStKSN\nX/pzQKLFSLzGpitu7+K8AxApD1N9qLZUFDni5F96Dm747NSOkLimYdCJRNk5\nAGan\r\n=ij1Y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBO7XxmCUD3RQZDfHzxzrUVWdlGVC3yWp5w+m2OP240rAiAlwpiLgsh8VRunWsbWW+exZ2DCk9s/24o2ma7pN+Gj/Q=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.20_1570056965350_0.22107384317272927"
      },
      "_hasShrinkwrap": false
    },
    "10.0.21": {
      "name": "babel-plugin-emotion",
      "version": "10.0.21",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.11",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.21",
      "_nodeVersion": "10.16.3",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-03o+T6sfVAJhNDcSdLapgv4IeewcFPzxlvBUVdSf7o5PI57ZSxoDvmy+ZulVWSu+rOWAWkEejNcsb29TuzJHbg==",
        "shasum": "9ebeb12edeea3e60a5476b0e07c9868605e65968",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.21.tgz",
        "fileCount": 23,
        "unpackedSize": 141679,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdmRqKCRA9TVsSAnZWagAAGPAP/iVwq4O6Q2LjzJ9ErkAa\n+gVoIAkj8Sa4s/3VmKmhl7FfKARPrJt+6w7dBPjedYkRNJUe80U14WbXi1Zo\nZA4pho+Y+VKVGSV1wifcnIuJXv2E1Dw7RAXPgpjVFRqNaGEdeaNcZb2FL1Iz\na2NtAsIcPLGFKmuMosRx65qFwTppxfEr4cD8KfH9/sChX0YyEvWvpB27G4jO\nmaoRLeDt1D+jypnj01z5ieMdx1sFowre3Bp6b21Qlq3wCEFXBIo3b7n1j5iK\nRoF7NuIESL7TKo4hkrwsuXHaK1EWZHeTGfiaLuFapLFtAIuZyoyFDQ87FR7c\npCAS1Oj3wQ7+qZm9jUb+GZ8F6nK3WyT0kZzo8ErF9SK35ZH65JX080MTO+zv\nhum2KIhkgPmlbOYPrf4/aWcb6V4mN54rwgDE/rpFIZgPYyy8xtcHwny74yxV\nBJu4PHm4t7D5dnN0jbLLR0o9X7Ko0GWW/DpzVrNLmVukAgT21ZLILqAsqpc7\nCeIM+OpLb0IxSWU1IicCehgnLQBIER6drUjkH7w8j/aoD3IFDTiNDC/3wEYu\nzKIVIqOaFmuIZObR6iRxovFdqCdKCk2PPuqSf63CRA8V2BVvLZSOWljTWh7L\nKbHt777ACSks730SvQllNvHeYkWyZK5Q2JvwZqV7cZMFElFpb9AyXEDcsXq8\nd00+\r\n=0Ix/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDPAgrj4m2cquUhXSWx7pmSm7OVaINj6reV7nk73qzxZwIgfaQI7msRPGsP8uEApobKemdn/kYY2I7FLHZsjOatWYA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.21_1570314890177_0.41508407689155535"
      },
      "_hasShrinkwrap": false
    },
    "10.0.22": {
      "name": "babel-plugin-emotion",
      "version": "10.0.22",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.12",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.22",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-e3Yo9+GD6ovrcZlt2Unjgfyy0gfdz0+8httltToWL+biFMhLPPT1PJlc0GHy9i+vtPSrTBNY2hawfPJnuG2L3g==",
        "shasum": "7860b39f96dcc1b79e326987ce29d4fcfff96f52",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.22.tgz",
        "fileCount": 23,
        "unpackedSize": 142398,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdsEYRCRA9TVsSAnZWagAAZMQP/iXy7SNMW6gL+aPh7E8P\n5UXyJ5OO+1eQCd54Un00naxrTQrz1BDjd0CwVjcqAUzhX1REQ4cC/1ZCRe1p\noaIVFPvCcZbzoUAMACMl+op+aEtdCWZpDRHoz/f3zW7v09j5+r4QHmZCniRk\nWHRy/XUtLSyJJX26dQVc+BspLoI3gVsu/kYHOnNEdhmhLfHk7amW6lStQawx\nERkelAKEwXJVAiimmeit7eGm1VyCQ+T3SzdGhIjhriIcY/ZxlknwZi2veGAp\n1iB8iT4SS+7/+MOK9LI0kfDyeNiMSjRlkREPcj9B6JURF3BxlKyRkpSce3O7\nPX2fqp5vlcQSWaiGrLsn9UVPDvKHsxDvNGutGymlkHfLGNd1sZ89bzIjaMKR\nzj4VNTyVJLpyHQQ9bqraCkc3LFqERlwykn1VCKmoUuq3+nvjn/N6kB9tuZ0K\n3nvPmfm7anyGV5bElA0WeMLDg1kwNQNC40q2cajBGhUpIwZ6McYpZlov4ydk\ng+PeUhQxEyeDCDEb8fUiPyMMj8/jd3BgEUd/iqmLUGm50HYrV8yoOsKr+fl5\nZrJdQsWnhQ+CkFvJidyW9OBymiCc7XpAzBQvn9M+ekToPzKpap13Hy8IHEoC\n/+wzMtObtfHWa/zQFaN3crdFmdlb096haIIn++hcOGcmawFgjaccdboKQ9YX\nyGyl\r\n=tqz/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCf9IulNEBpTlnjCjBXXTnMsJEWTSW530ih8xcbNLGGCgIgN32EwZ3QI9RsXLGu5Ekkog5JVpkRGhAluKxw9kiKFqc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.22_1571833360592_0.2582477926619895"
      },
      "_hasShrinkwrap": false
    },
    "10.0.23": {
      "name": "babel-plugin-emotion",
      "version": "10.0.23",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.14",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.23",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-1JiCyXU0t5S2xCbItejCduLGGcKmF3POT0Ujbexog2MI4IlRcIn/kWjkYwCUZlxpON0O5FC635yPl/3slr7cKQ==",
        "shasum": "040d40bf61dcab6d31dd6043d10e180240b8515b",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.23.tgz",
        "fileCount": 23,
        "unpackedSize": 147869,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJduCZSCRA9TVsSAnZWagAA2SEP/0W+oZD4S7UxRlpbsNqI\nyXqmJxHuVFrmvDTdMcAIhXsDuL5M5QH1U9Qqru/J54yRSShZdI52KZvXRkxe\njO0xC47i+clObnPam++msqaw3ywQWDyPxDDNLBvc/SOsYg0cAnkfPxvxijLH\n0OHSz0sAX5IxxZOrsBlylZU63+yRBf2Xvc2sdY7Isg2rzUTFIW5mLSNzWIWu\nCnV9oOGhXF2qnTUQBsGWbRhpJwQnI5QVxfuZaAupSobNNMmoesxOtZKKVGHE\nyAHVb9OR8Xcb/HBV4JMaiW85dekbrBBEc69LiNPDkq6xBTcLc6yTC13lvTiV\nhDWXIqd0wM2TjgA27zt40Hyd374otxfvubT6Aa2/2lNSFbGLc966gIkh8b+z\nxh7xY+5/LOZEvWkLTcRU/RVP3F75zHTe5tpndWs1dlw3HQkiCa/6oVyqGDdJ\n8+EaKbMNXLgAGHyl0VwJc6spPs7jq/huuqMPDkkKZUwPhSYor8P+g7CZAbZv\ngh2+F6mLRDu7+N/hueFCYTNk9viRE5nT9oLEGx/TeCK41tAL/dAZFjV4hNSI\nMRMqmu4mdrQ0fZ482WmxpEZqX7LvGYnXfcNZoSzcmiWnylJoFEy2bminutdH\ne9SbNpaVUHSfYHZDC+tumUgaW/pNs/iflOrQ2DTXc//bFaYkVzc0uupNahVD\nxXX/\r\n=zL0u\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGVJL92ZZ5sUp3QLAu9J0Xb5XdpTyIzhh2Qa6F10FB5MAiEAsFY4jqfFBOBa4HwnItHcV4cE0vwp+2o14nZXp+gYhXs="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.23_1572349514598_0.8945791944793491"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.0": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0-next.0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.14",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n- `[dirname]` - name of the directory containing the file where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@11.0.0-next.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-rcorsF5kKlcTKBS0SzvKpGDetRx56JJkwXU/so3sd8gexlnHikgmJUKdeKyGjYxKVHb2LEgVFxeJwsn1wf/XXw==",
        "shasum": "93636a71b7d69d29ccc783e68094b15dc5b2fad7",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0-next.0.tgz",
        "fileCount": 23,
        "unpackedSize": 151201,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdvzoOCRA9TVsSAnZWagAAyakP/2w5z5MsXtg5FxZDdG4D\nhjfjOI/sId38ulTwYerP8r3AjWbZYsV7Q3dx+dj+gvJ2RUfefwXzArI57dOJ\n4SxEKWAKx/6srdOVssq8i3TGSLms0OHAmRyOUOqMYS0Rrx57CYICPZkab/6t\nWPJNH+ozVgJwkAxAvnDOXuJOeZVkIyHEFVNXXU3l2+NWHiCOf2Rd1T+B11rv\nlUfd3s+KKBRR8Vms8z8HVycyQ1nVkL3oBHtq8vmPGOQqGIfxTx33l6XvjBU6\nAz064JTS79cxNmFt3XfuMAYotFHoA1y8yg9dtBwCbUHW6+UI2kAEkj5kzVYp\nld3K5fYG0YFA7nz87SZ1dzt5k7OAfZP7zugjuDJUWz6esAvgxco1Vo4uDTlu\nOmECOOSvApvgjrrnwG3FhwmjJMluuVTpHqFQHhAEb90w2aM4Q0rUoMUbplPQ\nPCpOOe4K//CEKL+Xtfw7OW1ys2QiHvhI3SyJn1bMmedvCUmNzL7oQCH2kqqf\nZET8VIQJ/xdjVErWqtBI1gLkt23+37O/C8o/okNtM4S39jij55FUiZxjlhZF\n6do0ZNNsEEeHB9YJTmleylObEU/BQUyCTkkhhiFgB1JrecQivbJle3cVckEy\n3kC//Nx8tCOSa0Gjh45lI+c7yW3O+eby4jcrg1pi1nZ5n5l9o5MZvYMdvuC1\nnTi/\r\n=9OqH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCMZly6PjsPEudp0Lfe+1//wbrDErc29cVxNdQFW5lbZwIhANYfpkIOwIObT+AHRMglhpCx7prCwuhmUF6SomO1x7FU"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0-next.0_1572813326218_0.6182786083654133"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.1": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0-next.1",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^1.0.0-next.0",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n- `[dirname]` - name of the directory containing the file where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@11.0.0-next.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-OABDBUxaIlJMh5aPKhvfn19AaIqOZI74AmqOlPOCzNZtUJ6xva8tUZ8TMSsSJXY0h7YaMn7VrEtMQsw/o92cnw==",
        "shasum": "f83d0fa5ffdaad41d70fa7b69ba775318bed9dd4",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0-next.1.tgz",
        "fileCount": 23,
        "unpackedSize": 151458,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdwdrCCRA9TVsSAnZWagAAwb8P/0F6+960iZDvbuS9QkRS\nSw9ZSI4L9L+39uUZZEalDMI6ELlsh/W5upnnBwUg9ojowGzA1sc33zXjkDOq\nXaxVmBigIZfDzgFB8n9N6DLlMKr7pu2chmAn1rfdZMR2LIyvR1DVkK+KipFP\nzFEabKo9obh2HgsfLqduaqE4NpExG87TPErxKV9jRNOcDsY6ALjKiT4KLBLN\nqns92u3gf7BJnMHXCLb/gDbEvtRxaoboiEJGLYs1vitH8lEP7+lBXuCjHuE/\nDUmhLsAb516Ne7Xss6VJT3S8XGk1hCt7zB8pkUhQbvAnZDVR3qVD4F3SyINr\n8YIR/Krqs97HLeqGATcD8p4RYU+26o3bBF2i+DsGKfztWv24uDKDzzQRrdoF\n244+uy6n7XOX5kaIqgPZCnLxofL0lcJosqQY1T4F/ZaCz9y4eUGO3cgPNvir\nTM2xYrtXu8ZTmSfxnYubQAeDZTxNFrdS5dv5c/uAkGdCdcHlE/ChB6YFTELI\nVC5dxURarltbuEx4u2UPlBTettjBGypJo/yz/eSGosgQtxxkzOhFEveXl83z\nJPnItwr56FKmA+nGtsnBlohfsY6ntIQ2dhxMMAq820GPdEXq1wERLY6G9jro\np5nxDefMYiZrqZSgBR0H9OyjeoVAgsCZqraTYY0uy3H5/lukOcAAYmELdvQf\n18y4\r\n=kGSk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3/nQr0VWre+gY7pRW0fnPB4GXq1/Np8/jPpunUhqbIQIhAORG64XqSchKB+rkUMnC9PE/wBJn3WAOkQkEfWJ8oQ0a"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0-next.1_1572985538283_0.9942107584342119"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.3": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0-next.3",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "dependencies": {
        "@babel/helper-module-imports": "^7.7.0",
        "@babel/runtime": "^7.7.2",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.15-next.1",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n- `[dirname]` - name of the directory containing the file where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n### `importMap`\n\nThis option allows you to tell babel-plugin-emotion what imports it should look at to determine what it should transform so if you re-export Emotion's exports, you can still use the Babel transforms\n\nAn example config:\n\n```json\n{\n  \"my-package\": {\n    \"anotherExport\": {\n      \"canonicalImport\": [\"@emotion/styled\", \"default\"],\n      \"styledBaseImport\": [\"my-package/base\", \"anotherExport\"]\n    }\n  },\n  \"some-package\": {\n    \"someExport\": {\n      \"canonicalImport\": [\"@emotion/core\", \"css\"]\n    },\n    \"thisIsTheJsxExport\": {\n      \"canonicalImport\": [\"@emotion/core\", \"jsx\"]\n    }\n  }\n}\n```\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@11.0.0-next.3",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-ErmLv8soCdCQcP+6emRcmy8tX4eGxImjN7WRJ8UxuedgoYhTuJu8fwLKmCfekQLthS2OFOnZDoWipRi+9gG8HQ==",
        "shasum": "de30f460a15fc2b293d3fdd4a207c37bc617d9e3",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0-next.3.tgz",
        "fileCount": 25,
        "unpackedSize": 164629,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdxpL4CRA9TVsSAnZWagAAFFsQAJtk/wMmWbYCkfaawA7v\ndeTNePYyesHq91Z0Z4/Euty8nGFC5PElQ+AY3qxk31UM4+7mzIuXehwfvTAR\nfnh+2/UVMvOh3Ci4khNAQGB+igECuKyx2g8IvWURRIH8jJ1vNlBt9R9nNQCc\njUnU9ZZyCfMio+AHB2GWS2s1k1ioMw0eUlTGNOpEl3YRjiX4c1tvYEjDsCOY\nB3uyvr13s9f/yeYp2yk0pVQFxStVL6ANvYciyLu2d3UE483LKnJgDrlRCe0m\nWtjcSDxCDTZDf0Xtw7K6anFFhTAHsc73njc5Bzx91DVB66Xd8ltFGgBDupKD\nu0ISN0CbJCGx88qMz7o/tTeV+K18pA4OmzYJmf68S+u2PIEu3K8Z/zmASHq/\nloJWKcXG5FtEXrow+W/zuqqgP5KiPVh14gYjzMrryxtlFMsSp4MLA6vGk1aZ\nGt1rCEgeyOa+VRyOBIpMpmWLgHw7Y4aCgcX8vbCaJzNqTFHygFAHJahLNkli\nbec8wOa3lxM7ynBj2Bteq02ADXY/sUfyHdIFcOpBMvFHjvNU8/xHmNwY6RC2\nkZyOLB25YbK4g/YUvI5ggZ9MLrZTU+8NI9O4g4mtJtKekeZZgh1SsO6yTFQJ\noUFkJh08U4Pvn4TLOdfWkxICJLXi+R5HkzBJJT6Ojo3wiG7hyG9Vzxgv4eUR\nVG2B\r\n=qB6/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCT6NtyjdnHlwPyXY39EfVkklmr4VMAmW+pAedsmSQw9wIgMQOCyf4wZ3iujXb7wGrZvCydtegkEWBm/B4xm9M5Jj8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0-next.3_1573294839826_0.014412315905720119"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.4": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0-next.4",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "dependencies": {
        "@babel/helper-module-imports": "^7.7.0",
        "@babel/plugin-syntax-jsx": "^7.2.0",
        "@babel/runtime": "^7.7.2",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.15-next.1",
        "babel-plugin-macros": "^2.0.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.7.2",
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n- `[dirname]` - name of the directory containing the file where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n### `importMap`\n\nThis option allows you to tell babel-plugin-emotion what imports it should look at to determine what it should transform so if you re-export Emotion's exports, you can still use the Babel transforms\n\nAn example config:\n\n```json\n{\n  \"my-package\": {\n    \"anotherExport\": {\n      \"canonicalImport\": [\"@emotion/styled\", \"default\"],\n      \"styledBaseImport\": [\"my-package/base\", \"anotherExport\"]\n    }\n  },\n  \"some-package\": {\n    \"someExport\": {\n      \"canonicalImport\": [\"@emotion/core\", \"css\"]\n    },\n    \"thisIsTheJsxExport\": {\n      \"canonicalImport\": [\"@emotion/core\", \"jsx\"]\n    }\n  }\n}\n```\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@11.0.0-next.4",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-ODL7uC2FZgzutzvfRGjyyDcDpdLZ7qDZKyQy6tVa3S/HrJ+bqDYE+xQNXlNanoVUJJkC0TfLtu4gpt71wtRSJg==",
        "shasum": "f755740e8ae80b1e6abaa46131ce0d4b5aec5402",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0-next.4.tgz",
        "fileCount": 25,
        "unpackedSize": 164511,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdy94vCRA9TVsSAnZWagAAnSoP/0v3y9WrAnLApKdnJSqG\nj6xICiIZJvXtyk2om4h1hH+4jvE8Vv+0k25Ff+QOIlFFp5HBqM6//sIqlYL6\n4tSIfe8hWjQvjJ9B1lLgUmWJxXbtqnfSB2Cv52nhMAJJpb0jloNMa9Bqt2vs\n+/nHKM8/dMzgP4yoktbDNtUUScDzZ7NYuJ1yvYOKXDMluOT/EXinvB/A63Sa\ngRkSf8kTdX+UdMupfnrHYS/XLFzwdgZ+zM01Tgr/Do5TZQ2C9vDTf8eHM/Oo\npwRMsly5RND6Lp9f3QitOWBdD8vF3iWfEDfBSgfcGr2MnFZFcAfd8nvuc6vz\nR6tU+j7rkYJsWLD/xSKP3HH65KgSC9lhwGXh88EHLgRX+OPVvxgVv75z1XVt\n9mRImgvHmiDIUNQ4A+ZOpzZsLF9OPp4QA3K1F4TAgRZpKf0DF+A0rna/VKKK\nabpyhPG9Ydkj9c9UKLx8HST85cuhGRmsFBFXD8pcv0HM6ZAMbE3pVmereM4b\nptcYESR/KcCeVgTUqWSHM2pkXQhGSku3ncHjt/gRDZhsyH//osR6h7wNA8iP\nybxIvKR38qJE7Nm2HaF01aosyTnxRcBelmEHpMOjI6QyHCiyXMNZKfSZtLvW\nMejC7WETrarelJdmtRHFo7YMJ4pUJlNUQRK4mdHfj6hyZpQvSIsj9eBaajC5\nPB/d\r\n=AjZS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDn6+TU9BtWwGdgKTPGMxTC304AV8YbkiBtSfJ5ssUhyAIgDcRrPVl3fmgNZZIle/QJQssy6UtwwSS9l9cVqoelhjU="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0-next.4_1573641775153_0.6331123834487158"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.6": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0-next.6",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "dependencies": {
        "@babel/helper-module-imports": "^7.7.0",
        "@babel/plugin-syntax-jsx": "^7.2.0",
        "@babel/runtime": "^7.7.2",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.15-next.1",
        "babel-plugin-macros": "^2.6.1",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.7.2",
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n- `[dirname]` - name of the directory containing the file where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n### `importMap`\n\nThis option allows you to tell babel-plugin-emotion what imports it should look at to determine what it should transform so if you re-export Emotion's exports, you can still use the Babel transforms\n\nAn example config:\n\n```json\n{\n  \"my-package\": {\n    \"anotherExport\": {\n      \"canonicalImport\": [\"@emotion/styled\", \"default\"],\n      \"styledBaseImport\": [\"my-package/base\", \"anotherExport\"]\n    }\n  },\n  \"some-package\": {\n    \"someExport\": {\n      \"canonicalImport\": [\"@emotion/core\", \"css\"]\n    },\n    \"thisIsTheJsxExport\": {\n      \"canonicalImport\": [\"@emotion/core\", \"jsx\"]\n    }\n  }\n}\n```\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport { jsx, css, Global, keyframes } from '@emotion/core/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@11.0.0-next.6",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-5l3VWm1qNky/7RsjmvN2QRgdB1oK3Ddo8wSkXpwe+2UAMtmqufUduQ4gR0Li6kyYz1Xg3OKccUDzzCtKkFKUxw==",
        "shasum": "77a6e612163f5e116ace933edbc8ff34bd1b628c",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0-next.6.tgz",
        "fileCount": 25,
        "unpackedSize": 174355,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd3FlRCRA9TVsSAnZWagAAYtcP/28IyElchM2QIIHa4T8o\nYKUdDlbAipJuGgqE2CYfXnWOspsIXxy+RTd1D4h3d3ZWGURP+oJERsxCsn2o\nbd2badwRzXdoLIDE8N/iBYEDX4lK1WQoAvjw7GnFfUEu1naaGT/R8PWDJWAJ\nYy7A3XIX2DoGfLtSH/Ao4zUzXLVvlbwvOYgMGA6ebLIJfmNb2d3dUmvlU6qC\nFValJIP3Ygyk2TORQSQmsXMqsxdyfZND07QpWabyjQK85M2gyhFO6OcBKloN\n8FxEQVq+pvaiVqX4D971g1sJMtZMHSfXHtGqHBgU/fyU8NpD1dcGFsqf3y9Q\nIBUPVf1OkY2ElhSP9k68XW7EZLssgQ8tDhCNv0aoZkbA3pHSXqHr7x1f6Nmz\nh53Ag9asiGSfpYLbuUzAU/j6B2UY19S0t9STpfnQUCt98FX9RWSv9ud1W7W9\n1rgjX0Pd5fjQ+7lOI8zTGNr3z39iqT4C29uhf9fN7voBVwFg7qgwjy0cpDJM\nIO+rKty8S4cAPzSgTNVUpXXf5QpxVPxjzCFbdQZ525kxEB8zVbFj4++u0RMj\nrojUITB1nPQWSpBUwynkYnBVrJjHkc+CK7RBKOtpIfZ5Tw08OdTsdS4v7TrR\n2PUkN8Z7mfBWL/Cu0cnrpVwFEteHU3EUsHj25RJsBxdoYgnDpsBSScBQTYKE\nwTrE\r\n=Ov6r\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDB12M+W5xIECe0cAthVwAtEB8D1SSjds8JRctxiFjiPQIgAO3zj+JgWn8U6rP26W5qkwluVNm0ENE61/OTddV0WHo="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0-next.6_1574721870672_0.15769166117771105"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.8": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0-next.8",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "dependencies": {
        "@babel/helper-module-imports": "^7.7.0",
        "@babel/plugin-syntax-jsx": "^7.2.0",
        "@babel/runtime": "^7.7.2",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.12.0-next.3",
        "babel-plugin-macros": "^2.6.1",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.7.2",
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n- `[dirname]` - name of the directory containing the file where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: [filename]--[local]\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true`.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n### `importMap`\n\nThis option allows you to tell babel-plugin-emotion what imports it should look at to determine what it should transform so if you re-export Emotion's exports, you can still use the Babel transforms\n\nAn example config:\n\n```json\n{\n  \"my-package\": {\n    \"anotherExport\": {\n      \"canonicalImport\": [\"@emotion/styled\", \"default\"],\n      \"styledBaseImport\": [\"my-package/base\", \"anotherExport\"]\n    }\n  },\n  \"some-package\": {\n    \"someExport\": {\n      \"canonicalImport\": [\"@emotion/core\", \"css\"]\n    },\n    \"thisIsTheJsxExport\": {\n      \"canonicalImport\": [\"@emotion/core\", \"jsx\"]\n    }\n  }\n}\n```\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport { jsx, css, Global, keyframes } from '@emotion/core/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@11.0.0-next.8",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-Te9s06AJRg57b0QJKJ55H1SUojyb483cC8L/17RckOBhQj2ZIvqCI7Ctth7qvzw2M3XhXlu8IfN1jeVx2Da8rQ==",
        "shasum": "098e99d9e4b2d9e4a6b88a754531d7eff807b54c",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0-next.8.tgz",
        "fileCount": 25,
        "unpackedSize": 179992,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd7BaZCRA9TVsSAnZWagAAVXEP/i3fp0YOphudvcxUyM57\nwqpe3PwehCBLgGRXiZyc7/96JL4RvaWvnLDJrVjffDq9QAKTdWUF8yW2HZoI\nKQfITB3Q6mEn0KsLjlQ9fIjxLaGgCuRwD4REvJrTrKpRuMXcguqx27Pwd033\nLuFBYORj9MRcnt0u2sLj0RppGr1usaRSRYi3OgfTywJwxrEqtmFQsdw266L9\nok+MjFbYDBcDWwSx+WibiorjGy4yGoWqt02F/XhCs2eptLa2PtmobJPp+MTd\nOtz7GXp/CaPxKX1iAdjDXVIl3HjLedkrVCFZdWdIO0zP3Q+Jp4iNyCyRXZwy\nlL2mFsLHrdb3+jYpJy+MkYjnI1EsE7zH6SQe1Z00uuvsD3+dBhkATciPmMqh\np2GNYy26CN43HUGCyJxT3iCzwVt2dVA6CIOpUckQj4c3dPRwRiz56E1Zvic0\nQz3l0S6PEBKq1oeMayuCl3ksf863iFLVx1pU7ZzylgfetU+d+aSRqtcFI5/k\n0paL8WA0jECX7p8X0uzMqgDpSYCQuSAec4Bm89lW/eO4Ye7c669e2xEYYGyX\nuAFhr+JYbIVsO/t3yOtJslGMPXuy7uAo9VU+dakx87VcJx16UU/iQGLzacD+\nawOFQyOHzVkHhF+W/6K/Iq2TWC2P6hAG2nzNvApByJTtvMEVhKtuyljN/Flh\ntwpD\r\n=6AfO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHF/9wGQMbyi9L5jcmxfoMubrPqVaU+khBa3b4Jvbr2aAiAgrE3Uz4fgd1upIb4a7fMrh6f7KCObL/oE2aLnq9nKSQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0-next.8_1575753368433_0.18403752029164"
      },
      "_hasShrinkwrap": false
    },
    "10.0.27": {
      "name": "babel-plugin-emotion",
      "version": "10.0.27",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.4",
        "@emotion/memoize": "0.7.4",
        "@emotion/serialize": "^0.11.15",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.27",
      "_nodeVersion": "10.18.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-SUNYcT4FqhOqvwv0z1oeYhqgheU8qrceLojuHyX17ngo7WtWqN5I9l3IGHzf21Xraj465CVzF4IvOlAF+3ed0A==",
        "shasum": "59001cf5de847c1d61f2079cd906a90a00d3184f",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.27.tgz",
        "fileCount": 24,
        "unpackedSize": 149423,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd//gWCRA9TVsSAnZWagAAEXQQAIRbqpSbg7gGemgZunPg\nzI2aW3+8EwpFcXk5wzo2dSNuKojxFVOk2STuPlZYlB9t0jGIR6gbynUuZ9go\n3q5v3Qr+4p0aeh0bpeAFh58l7C3qgJS7BYLT5qVtSV282uM65r9KHphKtksy\nw4UuDaQ3pVHdmu0ACG0RD3SthYkBzcORmqSzj+XaZ7mbDLqwLK4VZ42ge9CG\nGa5ZTEf5CVwENGUA8nkGbCv84WzIvEGUQlZyMnQkbprT0Th5x00/o3yzUA3V\ncIdD0rI8ZsjnTbHGdFEOqH7JX4UPUjX6Z78/VzF6Tp6IPNxnqUD38QTGzfIX\nWps2XtWYKQrVfK2tV8lr+dNNEfXdsSw+H6KUW4rP1n9F8nJ+uKGlYIR9LFFA\nd/67Y0Zkrn8lBP+Zxv+9WphK6x6NIe/kGnsWuHv/JMRldE7yh++LWRsGdXKF\nZZISlFt+2iMVLwS+DzGu/Putaegzn7baksPYbd7JPLeZF0z7TK582GPpQaR5\n5AJffbgTPsushMC1WfA4Yz4gEqfnVffUwtYdGbP3tm3rgmUbHi7yN2GBBO8t\nok+w56LDj+9JrA5kxwX0nh+K32JjVvvU9p0RaQDDGcSF1RzXHOdIuDkN4NJh\nIqBIdZgSfW0VrLaQM8PvpRHzmRECC/yNCgW8oxlof5+I3y+2boMUHKSypEpn\noaIB\r\n=lSQZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDVNqDbwIqEIxdr5EpLQS/uDyL/lA9koQAaMeYHbPgQ7gIhANz/LPnSon+eeyDNRC1tW+Aud/pDr/lO0wzh1PDQqHjh"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.27_1577056277855_0.9318630174492732"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.10": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0-next.10",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "dependencies": {
        "@babel/helper-module-imports": "^7.7.0",
        "@babel/plugin-syntax-jsx": "^7.2.0",
        "@babel/runtime": "^7.7.2",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.12.0-next.3",
        "babel-plugin-macros": "^2.6.1",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.7.2",
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "ERROR: No README data found!",
      "_id": "babel-plugin-emotion@11.0.0-next.10",
      "_nodeVersion": "10.18.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-CTyvz48YJ0GHxrQlI0XaT+EB1blcZpzxDU8KYZ+xaoDu3QdVc6uVc8xL8qjdRpVp+wGPEklVCaf5aXXaPf3ZEg==",
        "shasum": "05ddadeb8b46b3160fa216f7bdea2dffdc7df595",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0-next.10.tgz",
        "fileCount": 6,
        "unpackedSize": 11652,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeEjdkCRA9TVsSAnZWagAAi1QP/1OFNdd/QSvHPHp/P4Op\njD52O4bkcwt1YRb6OMaEXm/EgLohs7V8nJ/O/gZDUcTr293ptgEfzLRrQRAn\nFTi+BXGaW7n2EkQ4f7W/cVwqXl5J8hai6e5jGWWP2fooGcFtE9//Xl3n6QT3\ngugcgvdB71ENBdbyxLy+RjVKt6rtV1c5HpDmnwXttcvbfVGnwnccDI8QzD3e\nrzRBmp85np9r7PI/+T9JsS0ZZxaw5jS9ZiV4lFebUpgyaEsJ2voWfRO5FuDP\ntRksDt5n6XHy/0R4ScFUMYUwmyGRICG0m84OxwaMlZY2DQXwG221BcH4GsMN\neEuuc+nO8qJeHh1pdXxaKpoX2PNuBfep3/GhMT42QsVkzgPproO9mveqzqQy\n28K4HmWLLZTRHqFLpBobUJJME2TuO8KjvDq1RpVXhyqnRMsdy5QsD++kcOPm\nQoNP9Ci8AIx/mMxKWQwvsz6xT6+eIDf+wrNyp4Yg1RkG4WFKqsnsmd9u5MWT\nZWM49671qUx/5ZQuj/VhwwE4g7Qquv+39xTZx2wCMZwGi3Vga7u8C1eWrYk6\ntcik3wpcuS4eZVdF4QE8GF/ABJXkrGkeVL4sV7/sTAjN185UvcslVoiTZMEs\nr4kRhLYROPzyLU4DwmQOZTK3RcbjEKZztLQXH6rTWnb8gBSoKjxJ8Zg/Y9dw\nnnpe\r\n=jtnp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDSZ/HcrrHi7CIBF/lRkElZMJvtl2v72xrlN+Vzo22HgQIhANwZX0CDyxW6/1JmcV99ttLKBZj6S3oDQlAJQ5iVIYnI"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0-next.10_1578252132390_0.48872013115523183"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-next.11": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0-next.11",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "dependencies": {
        "@babel/helper-module-imports": "^7.7.0",
        "@babel/plugin-syntax-jsx": "^7.2.0",
        "@babel/runtime": "^7.7.2",
        "@emotion/hash": "0.7.3",
        "@emotion/memoize": "0.7.3",
        "@emotion/serialize": "^0.11.15-next.4",
        "babel-plugin-macros": "^2.6.1",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      },
      "devDependencies": {
        "@babel/core": "^7.7.2",
        "babel-check-duplicated-nodes": "^1.0.0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "ERROR: No README data found!",
      "_id": "babel-plugin-emotion@11.0.0-next.11",
      "_nodeVersion": "10.18.1",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-Z8FZzr9RFeL8qsh9ThapU1e9O9tWODDePAPGjj79zziKp9bayxft4dT5AEZC1uaHcJkCKWhtPSaO7GRRaORqaA==",
        "shasum": "ec96d617de59dfd39e5e8fd2c70cc7f8b6e0b8a6",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0-next.11.tgz",
        "fileCount": 6,
        "unpackedSize": 11856,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeIFtaCRA9TVsSAnZWagAAZ8MQAJZ6gUBTqOw2F0xoJGDl\nqDP1f52k+frEkK2W8q5IYep/XHzWfAmVwHvro0iGJwkL7E7hnJvLaasgNGEd\nq9BXMKlQOtWYFH2ZpP56KlexWoL/xtCnctS/SUs2yd4GYWsuJ7XNll8XuPLW\nWMro2XolkwEHNamRYNKP4CAupidr2EPWzHzPU1I/zpaYSwTuyPwrb8IwG/P7\n3AEU4eiS5ad0/aS1nuSjkMdG/addPqKp8vWbRB7R3HGnUvbapy03kNjFBX/m\nMueWx6YigxpvS0TQ4oiFp24PMxdmyq+/H3rwZzu11zykREQOvPN03FZXFB4s\nGUamVXq8NHPzDZrIml7KcfQ44lpsaYzy417KC136gzpzLHc5nJIql3p/wBVE\nM7fygXeyufwBER90T53nB3h2gec1TyPecbvDeMXYR1BNHQm/UOY6c/yoRune\nG6jLjNCNgWwTg9LhbKOqydVp4gRvCZ6YfWdYnNw/rPS/q34rUgXvRarU8Dx7\nbPX4maS2ntPhtfDMauwjF1DcAuepOeprI9UA5yEh8cl3klfiSe085RrsSssC\n3Aa/k1n+hHfGyAuZEW2dpsscFGKL8nYYRe7PDqpIvVonIQB3jRusam72eizD\nOnn09LT/5p6jv0cGPQdQ+7reFX360rFPCDz8/LKKFPU4fvz8dIFf6wrKHrbv\nniHL\r\n=AkB9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDIXqJeXIRG5IuMeXvYZ6X9z+mK87I5W+8hzIzQYnsLbAiBMBNPOzHMY8e5L0QQHxtuBlIJYl/vPLBKYMcKRlamCfA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0-next.11_1579178842168_0.6694447329110242"
      },
      "_hasShrinkwrap": false
    },
    "10.0.28": {
      "name": "babel-plugin-emotion",
      "version": "10.0.28",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.7.4",
        "@emotion/memoize": "0.7.4",
        "@emotion/serialize": "^0.11.15",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.28",
      "_nodeVersion": "10.19.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-h25EMmPxYVNOgsEkGIjCv2Ok+HzW/e/b5lf2v2U17T9k6y6g0ku3TG9b+jy94ZrqMh+b/njRF4uOQrwVr28QfQ==",
        "shasum": "731133577795ea04e5b1d11aff247fa0ad3fd364",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.28.tgz",
        "fileCount": 24,
        "unpackedSize": 152733,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeWABNCRA9TVsSAnZWagAAAvkQAJ2Z2DpPoSJgh8rKy4sR\nQ69SkwoZyoTkQwwLKDl1WBdnRpv+48CcT/CQfftQBvsuYCuyHAZ6W1G0C0/m\nym6+13PFdoorSkyMUKpMJg8PNLweNfSHuHqDxtN6HSfbc+3ZOqMX2iRv7hkk\n7Ncy8pNyiteS3RQ3OevvBkge7fb6vLip2vvCEgG6V04+I4Of+/DhOZ2dzRP4\nhyLqBeVDw+DLVB8jZUYUWd0stbWUhNT8kTrVZ3sWH/Cl+E+2PfM6jdXsZNiD\nBTAR560S1sqD99JXtRNABnlxWmZ8jKbupu6JxbVnTF4nLC1nkuDoHVMxgTHd\nu9XEvFtSIubhmAjCQHZKAO/+Ymm7KXwrTk+7/KFn1jrLQnAtVLqf7Q8d8CO7\ns5Avln/fkYBLoGYcWp5eyNO9njgtgpwFLNPtSXJmxy1sFgViTdxMxiIflmwv\nr8RlAAqO8I2sB0z7hb2CEnLBU6CvaDOS1QOQKy7Xq1scAu+2aGqJzpHJUcgI\nOvnb4DxvdYs5fMujwMk/uaMfYvbu275GZr+YF7khu+5UjSbrgGiPXLFMJKFm\nIgpb4IXaUrCqlefxHVcxAcMreZlUBqUkEp14nHiPneET2OQcK20oUWpd3G5o\nMrIAFPGZHxMi+QYiVZpsdZfnlmzMh/ci6IpZKiexLj0ORovlnkk33ryjTLTl\nmdxK\r\n=Wbxx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDxxriO5ZiwxbTHrBb8d/IoJVIBY6+GiyxHELgJHxugdwIgZ/RQjEsCaVEx+SkAJWvzWUzQpV/9kiazO2VT2WRgVo0="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.28_1582825549201_0.10089240219198592"
      },
      "_hasShrinkwrap": false
    },
    "10.0.29": {
      "name": "babel-plugin-emotion",
      "version": "10.0.29",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.8.0",
        "@emotion/memoize": "0.7.4",
        "@emotion/serialize": "^0.11.16",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.29",
      "_nodeVersion": "10.19.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-7Jpi1OCxjyz0k163lKtqP+LHMg5z3S6A7vMBfHnF06l2unmtsOmFDzZBpGf0CWo1G4m8UACfVcDJiSiRuu/cSw==",
        "shasum": "89d8e497091fcd3d10331f097f1471e4cc3f35b4",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.29.tgz",
        "fileCount": 24,
        "unpackedSize": 152945,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeXNzbCRA9TVsSAnZWagAAwvAP/ibRJn9PyjnLbIS9Ty0u\nRZxyQlVvHy1YxIE2pY14QevpQcDAThD+hDg9vbZ+8YqxuEihGyvtLmpLtPY/\ns5UP+uou/maeSRcVIef7hgjhwkqX8dE42AQ+uM9LZYeGQ5zTvQmADNSS4Q/V\nMM/bDKb/pCnWGyJ3sgB22HgO/EvUHA1KdjRwf5CeHw+60u4cwF3gpohZ5tQz\nQoRv4RA/hftpBGr86eLbaP89nMWU9DXLqnuHwh/Kdb3FAEGELgp80XLgeFhy\nDE2ISzupcdR4lBZ09dDIE8DjvHJ552Ad6r/2H/lSEmxqSCZz/NQn4OaiiaI3\nVFl1IHdk6L50kyRojyY5Of4gsSj6Atb4olC3AgP8+dN07DfGafLiqZDoOmKY\nfi+rPqR8tcPRnhGe03yx1FlVUqR+83v/cuNI3pFqXydxJn+ISMyamcA7kBbQ\n5DotSrJxSrwFb/yf1qJnoNxcbOpK9T3oSMpMNC3WsLLxaR6loaG+65Uege/9\nJhEAp/+L70MBNsiwqjWJzeq/ZWZiztDQpxAyonDU5trp7YzS8UR9ETQPFEop\ngd5oQ2Pr4mrqbsXlxBFi5D0erEVRu7hoFQ1pYuGncFL1iczItUq5480h+n1R\nlv/eWyHgQgaAp4lopDSAj6wH8JoFs4FyasG6dcAQA9SiBE3TXTVfGOuuWGGy\nuzak\r\n=9h8u\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB/g37O6VEOmqGGW132ld0Koqc+rLCGN/poSc/YR0zQ0AiEAmF3ojBn6fXE/oAqPIVmXvwB4RJdUEh8G9mMMw//5K9E="
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.29_1583144154755_0.740539762982096"
      },
      "_hasShrinkwrap": false
    },
    "10.0.33": {
      "name": "babel-plugin-emotion",
      "version": "10.0.33",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.8.0",
        "@emotion/memoize": "0.7.4",
        "@emotion/serialize": "^0.11.16",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@10.0.33",
      "_nodeVersion": "10.19.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-bxZbTTGz0AJQDHm8k6Rf3RQJ8tX2scsfsRyKVgAbiUPUNIRtlK+7JxP+TAd1kRLABFxe0CFm2VdK4ePkoA9FxQ==",
        "shasum": "ce1155dcd1783bbb9286051efee53f4e2be63e03",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.0.33.tgz",
        "fileCount": 24,
        "unpackedSize": 159193,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJehvUPCRA9TVsSAnZWagAA1qAP/2f2cKV4G81BwpC0kuOS\n32yFyashlpkwxkxb0td6E9FI3KXnpOGhTRAhf5N70UlOrwiyRrIN5ec5J4X6\nUjPoQD9T9s8ReM4bUgSjW2/HM8KOQQ6bGu2n3DXjxJPYl0TLoX/iDu2EnfUf\nSdiuzFRVv/EH3/GDvynZQVwZtN/9qVFgJNzduywNbUyjys3xXUcy0+j28HyV\njjZZkmmQBGIJ0y5C+OzjH7v7951JsLDqjhniFOCiGt4UuEBCQTGyPbkXbbNY\nwisjv2xUAkhdeOej7PvfR4bgr44v458x9wmVwJsQria0FJlZ7XYcpZn+9/ZY\nFtX2LHSsmsZTKRMmES5wBgPNyqy1yU+gyWxqWCA2I25guavhGAKMd19lTtjY\nJuAiZNuOZF1DvH2UToRa3dY6/hzfuzA98MRGdlI7IbkVjAChmyFxsYDoiiyF\nFVUsK2eqO+u+X/KPH2pF158QbFlKgXrhC+I78f8QFO6CxBtncZgcNCEfQ5Fq\nNUPKOBFViLHtm7SoPITvD9WargFR2WJLu7VnJEmArrJ/cHpe9cC5++NDkikE\nGaJ5FSem96too2aS88duh1QakGazJ61d6BzYw1vbJkIsJXWFU3HKKnubFcel\nJ1DtwmSOCiYqhlQM8EjVM/QyDA9p/BKuOPAFKT6s6qzyl5jN+WPNA1DpqDxM\nYbR3\r\n=GJfZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCJE1FMBXNe0ONEqtNkrNYPzfncgTJaCSuPzBTkAq8KVwIhAKmDj0g2OvO8oyX5QgN8zjaEVmFGvdmiaxMX2zsJuelN"
          }
        ]
      },
      "maintainers": [
        {
          "email": "mitchell+emotion-release-bot@hamil.town",
          "name": "emotion-release-bot"
        },
        {
          "email": "mitchell@mitchellhamilton.me",
          "name": "mitchellhamilton"
        },
        {
          "email": "kye.hohenberger@gmail.com",
          "name": "tkh44"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.0.33_1585902863066_0.2763552354174057"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0-rc.0": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0-rc.0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "ERROR: No README data found!",
      "_id": "babel-plugin-emotion@11.0.0-rc.0",
      "_nodeVersion": "10.22.1",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-zvhijmdEDHtrcmEyj9SQtUmgVfvTZJItd2V0n6v+Me9sf9Btk5sIncDesuQCJm1r8i8fn+F2dw1ixw7WMFgDxA==",
        "shasum": "71246cb086f8370d0eaf240e38aa52f7feee6bb8",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0-rc.0.tgz",
        "fileCount": 6,
        "unpackedSize": 13549,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfgw41CRA9TVsSAnZWagAAljAP/i05X3hmxCiBDzsNB8pn\nK6c+NU9UMdhvTFD2lcy21Sh6aT98FT3VVLNZMsAwhfvqmkcmx6IIliS3s1Ld\nFKRrlBSR8ryLREt9BeS4UfYAJPkyGZs3lCq2xAbpDFZDSyKIIqxNfEhNDgeU\nXwkrqHKrkjRcPBq2kQjGTf4JLtZVIELx4HKIqCmgs/4bfSQuH785i0ld7dW5\nQu/h5Cr6IHInCfWkxlgoppyl6s9RaT0lFODpxklbkOmy0TQ7u4xY51p2aJ0C\nwQgt22f6dp+kYD5MoPCyfiWuLW9p5oQnbskX/V3Xuqf7yG0dab3u/QkYhNAM\nfn8E3pAR2UC6uiOqyjLkOdJwLAGN5QleHoMGGzFimnAURDT5RGaSwPLK8LtN\nO0+CzF9d8TR/Q5ysW1btKHYFvRSGBai6f7rWwmcgFlVC0y+H9HYOh88Rj5EC\nlWAsUCMBaowD9Y3mh996quPSM0+UOuz0HP8HCWpweC3eXNG99odrdmehfV9i\n57v9rLM03Z2e0jjQsg0m4R+8+mZ760vYsDwD/ZGqO20aQmTkI3rIO6DvS1iw\njzKVPzcUh7RkzOeXkfsVQHHVUQVFenMEuvSJMuR0MzeR1J8m870RFsBbvUyR\nRebRznox5XXTi1NRlu+uACduw9lyZ1qTwWFJw0Yzf+LhSEGxU/nlBtgWOzVz\n/794\r\n=aubB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE8AQA5TnrPIzVjyU05uLQiSe5t/YGpMFLN/Qi5pEU1gAiEA7rXAOGEYl+BYm2BgLeU+t7rcv+DJnkiQhNQ/OchKLDo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "emotion-release-bot",
          "email": "mitchell+emotion-release-bot@hamil.town"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        },
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        }
      ],
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0-rc.0_1602424372781_0.12140284446055638"
      },
      "_hasShrinkwrap": false
    },
    "11.0.0": {
      "name": "babel-plugin-emotion",
      "version": "11.0.0",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "scripts": {
        "test:typescript": "exit 0"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "_id": "babel-plugin-emotion@11.0.0",
      "_nodeVersion": "10.23.0",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-cVD32sIXlidaqQBr7vw0uD2o58uBeD8jILDJ2yAGT1fOmgYcE5iX27bTVMV6meiUZarIAh1iAyTqrEWV+V2dqQ==",
        "shasum": "f362c9fe05493821ab8995cd5a8e7be6504b73a9",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-11.0.0.tgz",
        "fileCount": 6,
        "unpackedSize": 13952,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfrIWqCRA9TVsSAnZWagAAJ94P/RG7932QATlJTvUuOutY\nJ9FyhjYfVQHIctpV7yP6lDitqCvEazLuv1tRP/UkuJUNFJHkPYPhjWe64qU6\n3BUUwQp3MWbHGpbV54xhn6AKzBGJDp9ZmI3TD87jXwPZTQ+0kik+32s3iaVF\nFSAEzMIDxuO36NhjnXHIJ5fQS/DNFXmO5AeOkv8/OvzFlMbmMhgO68Gcpz0V\nkEmoTw8LMF0Ne/O4ZnAQBkxwolf1o3G9nKUZ/DBJoCNxsVojvNuQ5Ii709wx\noEsQTvTbdTHk1LlZRm/e/p9mZod9urHjJJ60hU0IISAFLItbiev435Wq8EOM\nMKmnUoWg68QUA4AKG8VmECjDubtxUmfIr69tRT6ax6cTYgrSdY6sh5XIiSt1\nIzwaQ/yryDLI9j9h8TerueftrvwjJwiwDqwOYEwoG6pZ3jq8RDA6UdUcJuIX\nDGxKtecmwaRN6pxs9cqIaMgABNufRdcZGH3kXDjHkMlSxMm4hI910IDXza4b\nqjAQQUghj4xxb/RQwe0fWSvdjcmrP4ygwzLQ2vvPbRvqXNCm5O5NB/tuKoDx\nH6WQJepByi/dFJLDxTE4LApQN5cEyHo4lkYdC8M66ZbZjjCczltJG2SQ16kO\nZzw9uGk0xq3+JxCH5/OOmFhiugRXdhIblEylZsr0XVNjqf4L9i+wpA8H6OnU\nD8C6\r\n=4zP1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAJ1f7M+4EFSRv8c9L+HYZuyJ5ytum4HRoi6YracyT/FAiAyJp9M9VaTHoErj1MI4Rz1WzAj/DMh8fFw1LuHu8nWcA=="
          }
        ]
      },
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "andarist",
          "email": "mateuszburzynski@gmail.com"
        },
        {
          "name": "emotion-release-bot",
          "email": "mitchell+emotion-release-bot@hamil.town"
        },
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        },
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_11.0.0_1605141929762_0.9274572138123551"
      },
      "_hasShrinkwrap": false
    },
    "10.2.2": {
      "name": "babel-plugin-emotion",
      "version": "10.2.2",
      "description": "A recommended babel preprocessing plugin for emotion, The Next Generation of CSS-in-JS.",
      "main": "dist/babel-plugin-emotion.cjs.js",
      "module": "dist/babel-plugin-emotion.esm.js",
      "dependencies": {
        "@babel/helper-module-imports": "^7.0.0",
        "@emotion/hash": "0.8.0",
        "@emotion/memoize": "0.7.4",
        "@emotion/serialize": "^0.11.16",
        "babel-plugin-macros": "^2.0.0",
        "babel-plugin-syntax-jsx": "^6.18.0",
        "convert-source-map": "^1.5.0",
        "escape-string-regexp": "^1.0.5",
        "find-root": "^1.1.0",
        "source-map": "^0.5.7"
      },
      "devDependencies": {
        "babel-check-duplicated-nodes": "^1.0.0",
        "babel-core": "^6.26.3"
      },
      "author": {
        "name": "Kye Hohenberger"
      },
      "homepage": "https://emotion.sh",
      "license": "MIT",
      "repository": {
        "type": "git",
        "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
      },
      "keywords": [
        "styles",
        "emotion",
        "react",
        "css",
        "css-in-js"
      ],
      "bugs": {
        "url": "https://github.com/emotion-js/emotion/issues"
      },
      "readme": "# babel-plugin-emotion\n\n> Babel plugin for the minification and optimization of emotion styles.\n\n`babel-plugin-emotion` is highly recommended, but not required in version 8 and\nabove of `emotion`.\n\n## Features\n\n<table>\n  <thead>\n    <tr>\n      <th>Feature/Syntax</th>\n      <th>Native</th>\n      <th>Babel Plugin Required</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>css``</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><code>css(...)</code></td>\n      <td align=\"center\">✅</td>\n      <td align=\"center\"></td>\n      <td>Generally used for object styles.</td>\n    </tr>\n    <tr>\n      <td>components as selectors</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Allows an emotion component to be <a href=\"https://emotion.sh/docs/styled#targeting-another-emotion-component\">used as a CSS selector</a>.</td>\n    </tr>\n    <tr>\n      <td>Minification</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Any leading/trailing space between properties in your <code>css</code> and <code>styled</code> blocks is removed. This can reduce the size of your final bundle.</td>\n    </tr>\n    <tr>\n      <td>Dead Code Elimination</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Uglifyjs will use the injected <code>/*#__PURE__*/</code> flag comments to mark your <code>css</code> and <code>styled</code> blocks as candidates for dead code elimination.</td>\n    </tr>\n    <tr>\n      <td>Source Maps</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>When enabled, navigate directly to the style declaration in your javascript file.</td>\n    </tr>\n    <tr>\n      <td>Contextual Class Names</td>\n      <td align=\"center\"></td>\n      <td align=\"center\">✅</td>\n      <td>Generated class names include the name of the variable or component they were defined in.</td>\n    </tr>\n  </tbody>\n</table>\n\n## Example\n\n**In**\n\n```javascript\nconst myStyles = css`\n  font-size: 20px;\n  @media (min-width: 420px) {\n    color: blue;\n    ${css`\n      width: 96px;\n      height: 96px;\n    `};\n    line-height: 26px;\n  }\n  background: green;\n  ${{ backgroundColor: 'hotpink' }};\n`\n```\n\n**Out**\n\n```javascript\nconst myStyles = /* #__PURE__ */ css(\n  'font-size:20px;@media(min-width:420px){color:blue;',\n  /* #__PURE__ */ css('width:96px;height:96px;'),\n  ';line-height:26px;}background:green;',\n  { backgroundColor: 'hotpink' },\n  ';'\n)\n```\n\n## Installation\n\n```bash\nyarn add --dev babel-plugin-emotion\n```\n\nor if you prefer npm\n\n```bash\nnpm install --save-dev babel-plugin-emotion\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\nWith options:\n\n_Defaults Shown_\n\n```js\n{\n  \"plugins\": [\n    [\n      \"emotion\",\n      {\n        // sourceMap is on by default but source maps are dead code eliminated in production\n        \"sourceMap\": true,\n        \"autoLabel\": process.env.NODE_ENV !== 'production',\n        \"labelFormat\": \"[local]\",\n        \"cssPropOptimization\": true\n      }\n    ]\n  ]\n}\n```\n\nRecommended Setup\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"emotion\"]\n}\n```\n\n### Via CLI\n\n```bash\nbabel --plugins babel-plugin-emotion script.js\n```\n\n### Via Node API\n\n```javascript\nrequire('@babel/core').transform('code', {\n  plugins: ['babel-plugin-emotion']\n})\n```\n\n## Options\n\n### `sourceMap`\n\n`boolean`, defaults to `true`.\n\nThis option enables the following:\n\n- Injected source maps for use in browser dev tools\n\n[**Documentation**](https://emotion.sh/docs/source-maps)\n\n> Note:\n>\n> Source maps are on by default in babel-plugin-emotion but they will be removed in production builds\n\n### `autoLabel`\n\n`boolean`, defaults to `process.env.NODE_ENV !== 'production'`.\n\nThis option enables the following:\n\n- Automatically adds the `label` property to styles so that class names\n  generated by `css` or `styled` include the name of the variable the result is\n  assigned to.\n- Please note that non word characters in the variable will be removed\n  (Eg. `iconStyles$1` will become `iconStyles1`) because `$` is not valid\n  [CSS ClassName Selector](https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors#449000)\n\n#### css\n\n**In**\n\n```javascript\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css({ color: 'brown' }, 'label:brownStyles;')\n```\n\n`brownStyles`'s value would be `css-1q8eu9e-brownStyles`\n\n### `labelFormat`\n\n`string`, defaults to `\"[local]\"`.\n\nThis option only works when `autoLabel` is set to `true`. It allows you to\ndefine the format of the resulting `label`. The format is defined via string where\nvariable parts are enclosed in square brackets `[]`.\nFor example `labelFormat: \"my-classname--[local]\"`, where `[local]` will be replaced\nwith the name of the variable the result is assigned to.\n\nAllowed values:\n\n- `[local]` - the name of the variable the result of the `css` or `styled` expression is assigned to.\n- `[filename]` - name of the file (without extension) where `css` or `styled` expression is located.\n- `[dirname]` - name of the directory containing the file where `css` or `styled` expression is located.\n\nThis format only affects the label property of the expression, meaning that the `css` prefix and hash will\nbe prepended automatically.\n\n#### css\n\n**In**\n\n```javascript\n// BrownView.js\n// autoLabel: true\n// labelFormat: '[filename]--[local]'\nconst brownStyles = css({ color: 'brown' })\n```\n\n**Out**\n\n```javascript\nconst brownStyles = /*#__PURE__*/ css(\n  { color: 'brown' },\n  'label:BrownView--brownStyles;'\n)\n```\n\n`BrownView--brownStyles`'s value would be `css-hash-BrownView--brownStyles`\n\n#### styled\n\n**In**\n\n```javascript\nconst H1 = styled.h1({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n**Out**\n\n```javascript\nconst H1 = /*#__PURE__*/ styled('h1', {\n  label: 'H1'\n})({\n  borderRadius: '50%',\n  transition: 'transform 400ms ease-in-out',\n  boxSizing: 'border-box',\n  display: 'flex',\n  ':hover': {\n    transform: 'scale(1.2)'\n  }\n})\n```\n\n`H1`'s class name attribute would be `css-hash-H1`\n\n### `instances`\n\n`Array<string>`, defaults to\n\n```jsx\n;['emotion']\n```\n\nThis option allows `babel-plugin-emotion` to know which imports to treat as\nemotion imports and transform as such. This option is **only** required if you\nuse a custom instance of emotion created with `create-emotion` or you're\nimporting emotion from somewhere other than the paths above. Relative paths are\nresolved relative to `process.cwd()`(the current working directory).\n\n[**Documentation**](https://emotion.sh/docs/instances)\n\n### `cssPropOptimization`\n\n`boolean`, defaults to `true` if an import from `@emotion/core` is found in a file.\n\nThis option assumes that you are using something to make `@emotion/core`'s `jsx` function work for all jsx. If you are not doing so and you do not want such optimizations to occur, disable this option.\n\n## Babel Macros\n\nInstead of using `babel-plugin-emotion`, you can use emotion with [`babel-plugin-macros`](https://github.com/kentcdodds/babel-plugin-macros). Add `babel-plugin-macros` to your babel config (which is included in Create React App 2.0) and use the imports/packages shown below.\n\n```jsx\nimport styled from 'react-emotion/macro'\nimport { css, keyframes, injectGlobal, flush, hydrate } from 'emotion/macro'\nimport css from '@emotion/css/macro'\nimport styled from '@emotion/styled/macro'\n```\n",
      "readmeFilename": "README.md",
      "_id": "babel-plugin-emotion@10.2.2",
      "_nodeVersion": "10.23.2",
      "_npmVersion": "6.10.2",
      "dist": {
        "integrity": "sha512-SMSkGoqTbTyUTDeuVuPIWifPdUGkTk1Kf9BWRiXIOIcuyMfsdp2EjeiiFvOzX8NOBvEh/ypKYvUh2rkgAJMCLA==",
        "shasum": "a1fe3503cff80abfd0bdda14abd2e8e57a79d17d",
        "tarball": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-10.2.2.tgz",
        "fileCount": 24,
        "unpackedSize": 160511,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgIxDJCRA9TVsSAnZWagAAUyAP/0EpSt22g/PQYMNmGolK\nYx5yHQ0ooKgukPPRODXx8vVi/PhbBXUeIoTzV877AmBmeduNl5DV/uhndWkI\nLOxzTxRs4eTYTwQYW58zc3W1hEuUOD7rUW15Xck4/LyMnK1wRK+Hyy+SMsFa\na7i2XuO8KSPN0JqIbZIFI32AiXR3x0KZ3e7zRKISULgdKnZURUMHA/Qu9CUl\n75IxEy15Ibn/dzqc1yBPwCBBe65jh6u57ZOBRlRKWHTIStKsG6GcL8/22fr2\nhN29fGlZqYXhYCVy1tU2oVapPkW+DFcxoTTexAWmeGosqOSzYuKaKAP8jywG\nca0mJdfvLgdzL2XznIQgXqWzpFSmkYUCDh9bTBVAskvscUXP8HqUQynq1kXc\nEiVf86aXfkRgKiAxL8+81CpzshGp16q077irs3NBsqowaPsG+Yyopxgq1eF1\nglehT7Z4Qzx/h3UV/0ye6st43m0HFEAW6NiPshHZzj4AVPq6XaTqkikKIMhH\nJqmF4H1iv+PcuGXs/pVW33Mz/O8TkUxIDrDUwQOCEqA3AtH6JypR6/wHY/aD\nicIT3WAZC+jRaXEvknKQaF9R8+0QjsK5SoGIp3hYpO+e6iQRQFmcZNZl07OL\ndHBx1IeXOb1BrnYQOYkACKKEgTeFRsk97RNjq6yxvLKb4hogCHigkrQVb/Uo\nSv4f\r\n=D64y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCvGXYnxACUrNywv0iLn2aWQxFZAbPkRJOqGhMuaApMVgIgIf2nayWPntz7wU3c2GEfJI6dEHxE3hgyywHOTJq8nNA="
          }
        ]
      },
      "_npmUser": {
        "name": "emotion-release-bot",
        "email": "mitchell+emotion-release-bot@hamil.town"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "tkh44",
          "email": "kye.hohenberger@gmail.com"
        },
        {
          "name": "mitchellhamilton",
          "email": "mitchell@mitchellhamilton.me"
        },
        {
          "name": "emotion-release-bot",
          "email": "mitchell+emotion-release-bot@hamil.town"
        },
        {
          "name": "andarist",
          "email": "mateuszburzynski@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/babel-plugin-emotion_10.2.2_1612910792799_0.7158552640704048"
      },
      "_hasShrinkwrap": false
    }
  },
  "readme": "",
  "maintainers": [
    {
      "email": "npm@emmas.town",
      "name": "emmatown"
    },
    {
      "email": "kye.hohenberger@gmail.com",
      "name": "tkh44"
    },
    {
      "email": "emotion-release-bot@hamil.town",
      "name": "emotion-release-bot"
    },
    {
      "email": "mateuszburzynski@gmail.com",
      "name": "andarist"
    }
  ],
  "time": {
    "modified": "2022-11-17T04:05:01.852Z",
    "created": "2017-08-17T23:20:50.915Z",
    "7.1.0": "2017-08-17T23:20:50.915Z",
    "7.2.2": "2017-09-05T16:47:17.351Z",
    "7.3.0": "2017-09-13T16:15:10.523Z",
    "7.3.1": "2017-09-13T16:46:29.543Z",
    "7.3.2": "2017-09-14T12:30:25.010Z",
    "8.0.0-0": "2017-09-20T02:37:34.354Z",
    "8.0.1-0": "2017-09-20T22:31:48.109Z",
    "8.0.2-1": "2017-09-21T02:17:01.540Z",
    "8.0.2-2": "2017-09-22T00:33:56.950Z",
    "8.0.2-3": "2017-09-22T01:59:50.679Z",
    "8.0.2-5": "2017-09-24T02:14:37.569Z",
    "8.0.2-6": "2017-09-25T07:13:52.031Z",
    "8.0.2-7": "2017-09-26T03:01:09.936Z",
    "8.0.2-10": "2017-09-29T18:41:53.465Z",
    "8.0.2-11": "2017-09-30T05:12:22.012Z",
    "8.0.2": "2017-10-05T17:35:00.178Z",
    "8.0.3": "2017-10-06T22:23:46.962Z",
    "8.0.4": "2017-10-07T00:00:40.717Z",
    "8.0.6": "2017-10-14T04:13:03.735Z",
    "8.0.9": "2017-10-23T09:07:17.110Z",
    "8.0.10": "2017-11-07T21:30:49.538Z",
    "8.0.11": "2017-11-24T10:45:14.705Z",
    "8.0.12": "2017-11-30T23:30:00.634Z",
    "9.0.0-0": "2017-12-23T03:44:22.216Z",
    "9.0.0-1": "2017-12-23T04:56:46.457Z",
    "9.0.0-2": "2018-01-16T23:33:16.491Z",
    "9.0.0-3": "2018-02-03T12:19:25.860Z",
    "9.0.0": "2018-02-04T04:53:37.410Z",
    "9.0.1": "2018-02-13T11:10:27.606Z",
    "9.1.0": "2018-03-23T21:03:22.148Z",
    "9.1.2": "2018-04-17T07:45:31.972Z",
    "9.2.0": "2018-06-07T10:01:40.276Z",
    "9.2.4": "2018-06-21T20:55:10.979Z",
    "9.2.5": "2018-07-06T23:02:50.143Z",
    "9.2.6": "2018-07-15T04:08:38.797Z",
    "9.2.8": "2018-08-28T11:00:11.907Z",
    "9.2.9": "2018-09-16T10:45:08.361Z",
    "9.2.10": "2018-09-19T20:45:09.136Z",
    "10.0.0-really-unsafe-please-do-not-use.0": "2018-09-27T23:34:45.243Z",
    "10.0.0-really-unsafe-please-do-not-use.1": "2018-09-28T04:18:48.246Z",
    "10.0.0-really-unsafe-please-do-not-use.2": "2018-09-28T04:37:39.078Z",
    "9.2.11": "2018-09-30T21:45:10.528Z",
    "10.0.0-beta.0": "2018-10-13T07:35:16.831Z",
    "10.0.0-beta.1": "2018-10-15T10:26:57.658Z",
    "10.0.0-beta.2": "2018-10-16T08:33:50.055Z",
    "10.0.0-beta.3": "2018-10-16T23:58:26.609Z",
    "10.0.0-beta.4": "2018-10-17T07:25:22.625Z",
    "10.0.0-beta.5": "2018-10-17T07:34:26.295Z",
    "10.0.0-beta.6": "2018-10-27T05:21:07.973Z",
    "10.0.0-beta.7": "2018-11-02T07:30:37.224Z",
    "10.0.0-beta.8": "2018-11-05T04:46:34.434Z",
    "10.0.0-beta.9": "2018-11-12T04:59:46.847Z",
    "10.0.0-beta.10": "2018-11-12T05:17:01.846Z",
    "10.0.0-beta.11": "2018-11-12T07:23:33.808Z",
    "10.0.0-beta.12": "2018-11-13T05:12:00.231Z",
    "10.0.0-beta.13": "2018-11-20T12:35:28.269Z",
    "10.0.0": "2018-11-27T22:49:26.372Z",
    "10.0.2": "2018-12-03T22:56:20.635Z",
    "10.0.3": "2018-12-05T21:05:29.358Z",
    "10.0.4": "2018-12-05T21:23:26.087Z",
    "10.0.5": "2018-12-14T00:49:23.585Z",
    "10.0.6": "2019-01-06T23:16:22.911Z",
    "10.0.7": "2019-02-04T07:04:26.464Z",
    "10.0.8": "2019-03-11T06:24:27.925Z",
    "10.0.9": "2019-03-11T06:32:23.121Z",
    "10.0.13": "2019-06-09T09:16:11.448Z",
    "10.0.14": "2019-06-25T23:08:15.846Z",
    "10.0.15": "2019-08-02T23:30:10.526Z",
    "10.0.16": "2019-08-16T02:20:25.058Z",
    "10.0.17": "2019-08-31T23:52:25.620Z",
    "10.0.19": "2019-09-17T12:51:18.492Z",
    "10.0.20": "2019-10-02T22:56:05.527Z",
    "10.0.21": "2019-10-05T22:34:50.297Z",
    "10.0.22": "2019-10-23T12:22:40.741Z",
    "10.0.23": "2019-10-29T11:45:22.148Z",
    "11.0.0-next.0": "2019-11-03T20:35:26.405Z",
    "11.0.0-next.1": "2019-11-05T20:25:38.537Z",
    "11.0.0-next.3": "2019-11-09T10:20:39.979Z",
    "11.0.0-next.4": "2019-11-13T10:42:55.343Z",
    "11.0.0-next.6": "2019-11-25T22:44:30.837Z",
    "11.0.0-next.8": "2019-12-07T21:16:08.546Z",
    "10.0.27": "2019-12-22T23:11:18.143Z",
    "11.0.0-next.10": "2020-01-05T19:22:12.553Z",
    "11.0.0-next.11": "2020-01-16T12:47:22.326Z",
    "10.0.28": "2020-02-27T17:45:49.291Z",
    "10.0.29": "2020-03-02T10:15:54.892Z",
    "10.0.33": "2020-04-03T08:34:23.201Z",
    "11.0.0-rc.0": "2020-10-11T13:52:52.892Z",
    "11.0.0": "2020-11-12T00:45:29.947Z",
    "10.2.2": "2021-02-09T22:46:32.933Z"
  },
  "homepage": "https://emotion.sh",
  "keywords": [
    "styles",
    "emotion",
    "react",
    "css",
    "css-in-js"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin-emotion"
  },
  "author": {
    "name": "Kye Hohenberger"
  },
  "bugs": {
    "url": "https://github.com/emotion-js/emotion/issues"
  },
  "license": "MIT",
  "readmeFilename": "",
  "users": {
    "gamersdelight": true,
    "arcticicestudio": true,
    "qddegtya": true
  }
}