{
  "_id": "@openzeppelin/contracts-upgradeable",
  "_rev": "80-1e76b2538eb599fe22a2c5da2c956500",
  "name": "@openzeppelin/contracts-upgradeable",
  "dist-tags": {
    "latest": "5.0.2"
  },
  "versions": {
    "3.2.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.2.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@3.2.0",
      "_nodeVersion": "10.22.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-f2q4FjT84ixIl8MUo9WbCMSBtV9T52c8QbrCfzoCBbDwEuVjf9jnvm1JETAWSC9Q9oLcUXpRFBMavb1B23tx1g==",
        "shasum": "fb6959659e7585f419060ea1c546c0c11f1d0582",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.2.0.tgz",
        "fileCount": 147,
        "unpackedSize": 1044633,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfrYe6CRA9TVsSAnZWagAAvrUP/1QrxlEZ1C6w6VRg6rZc\nDXmvXx1ScqPuWdyVPyWBpknY5NnTeBFFKRtf9MqlC5EqJvCl1A3XI2GlsHFT\nqQwsZpzUF/+8H7DAzrNAGHGCeM61908uiZ9N7OT3LNvpQ0UgzEDbAEWMCcBD\nRhL6dx7HvvdsNsrc/nmUesPonWStXBGwHzoJOqcZ2MiYmgdw2nGJwzicywB/\nqpulGEClxIZGZKVc07ck8B8YWJM+oUBDQsbxEJCpJ7W9Lgu4sxm9oO7CQ1+J\nL8WcKuAJ6hJ9egbQuf1PXXmiA8LNbncpFE//u0rkwb956N1g8BJEL86wTb9J\nlKhrqiSisXADzTWske4Pn2iCPNAEyi+g2U3J9swodVI5QJ+X42JtRxUuRPGj\nQOZgk7nqw3TTl2tpKDBvqIH2eGrzQQsI9zjfzcWEX9nKEh3x6wzVIjXFpWKO\nbkF2cCVJ3S7jUM/TEHVMxi1BNxRPMe8KkBWNVPS5Kee5mg3/EmDUfC65yFlB\nv8e4d5DPBp5OpUJ95LbgZDzaLR8XLmOf7l6fvGIKwE+ci1buHEPjDjzKMivZ\nzdqTUHIwV/vOpRvDMxP3JIefiX8T0Cbo1W8LYb0NG2+dDTSmupwEgVBPfcCX\nRR3/pMbIrpn7q3fE27gvVi55QJPKkwXym4o2WREQ5yZpgs+4U29VL80NFL4i\nErwr\r\n=zcio\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFOVGrZyJvwT3yDxRlXoBE9FADq5JJYMnxfRCchBrGwnAiEAt+WY/DOaOm9Merfkv+ljmMF/0AcJKq6IWtFY2/n71RY="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.2.0_1605207994102_0.3163945859671551"
      },
      "_hasShrinkwrap": false
    },
    "3.2.2-solc-0.7": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.2.2-solc-0.7",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for xref:upgrades-plugins::writing-upgradeable.adoc[Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\n## Contribute\n\nOpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@3.2.2-solc-0.7",
      "_nodeVersion": "10.22.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-RJYc9/0flESCDzGel0sTiIP+QicpUJpqI+x5JJ+mOO6y1Uk8MVnr8BD2i6NEje8GWuezdFtrPpyGF1N/OztWAg==",
        "shasum": "dd25222317d3da6c01a4fb575df99c5ae3a97ba0",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.2.2-solc-0.7.tgz",
        "fileCount": 147,
        "unpackedSize": 1036929,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfssFjCRA9TVsSAnZWagAAFu0P/0tV+LdoGNjHq58AyrZE\nVQGjID+z0FF9D+YjkD4QdfY19gy0BQpSODm3J0EgMhO76aTPrZNMrFNL0dqU\nDn5FjIDpSFy9IczzriaDHhVhSC683Cz8vRtG7HqpWaBasPF+f9rxjB7xdcqT\nXZ+BbYGiJYkKnv6cuIoiwdtDylZZIm6/buVSuB2HJuFEXzi9gb4RjVr1r7KO\nYBG5WVXsZGXKiuClrP2RZAsOsN2chFxvIvksN3gyfkv4idreWbX8S9h/h0cY\nLCRW+THA5dUMCaixLRFbh/iM8MWlQIicRtVD5iLv1yTCu4uW87dK1rTi6n66\nw43SHgZGbvodjVV5vHL+YcE31ugqopnMKUJ+oxIYaZ9IPSccpBZ6AAp2raw8\n9anpngO7W787qJ5RuPfV1C5SjwSFmD4nksNE9skqc3rogt/jfDsmXqR71RL0\nhq5WsfbPsgZJAuLemUtcqfDNnWpiTrZPfQQbvVDl8LHVoSRUKWDlTVBm1/Mj\np4XNie/eSerpPHGNhJ1z4j0YrO02+RhnEfjBjogSBqTbztS5Vlhz2tWTQnoq\nBUuRfwN/0OMMrSz8rYgnxAoyVA5SVHn6L9oLtoMvoAQIzGV21o+PpPz/XvgO\nx+mE1dWAiqOmo+eFRLDRCM4k82sgwHW4AIHPC2qoJWtyzZ5I+SESC2YWAMTl\nmWPk\r\n=68CN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCqKYtIDt8HXj1sFt35GVBtC90kaadwF0f5PV4lse0wWwIgQLxl8Ay1+hj9jrjlfPzKOzAbAam92PofU/yiTE+GIeQ="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.2.2-solc-0.7_1605550435355_0.9496963765467101"
      },
      "_hasShrinkwrap": false
    },
    "3.3.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.3.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@3.3.0",
      "_nodeVersion": "10.22.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-kJeNuKauR4xH52Yo3GdXXAOW4CWyWdm7VXcJFe63G8TRb45ISSnkt/gXwUa8zzEYqokQrwNZYoH/iGYfUlp6wA==",
        "shasum": "a536c6ff107d21319490e6cb699e555a3edcf6ea",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.3.0.tgz",
        "fileCount": 149,
        "unpackedSize": 1117441,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfwRSqCRA9TVsSAnZWagAA5WgP/Rk55GomWx7wKeEaZli1\nwEOiFLXfSxDzQ0YPhoCFdRrgvjrFduExe0xuUHzjyul6c1mAP+KWgn3phFQ3\npj819HPN1wwwpAFTPbuayeWKA67wT1Vz2QGPQl3z8flttZ8nB5iowTrVVTeu\nDZ1jUB2zH/+5yp+yjg868zAbS4FPqueSuM6i8tp6RqXctoFE2F/MOXpj1g2D\nM7AyaUGcXh7vJwkZGWkyuKX+BPr6R1o1PP8V7sEjhQSQs5/kp1Be8Q2DMuNP\nQ6bMkzyRl1X9ovlLqPOSc9pfcEpe08kHjuFFZtKnQade494Q394BqQuMhWot\nKzh5ysGKIBQwMekYkU1M4TpVXCWUUkkSysnZ8HIgC6v9NwqKLnhuqu66N8kk\nb+jr6NyWFZk/7ChnXJUwmj3PkZ8C/tJ/cEhLifZDFLexmx5YkwmHACN2JnyF\nJ59AaRrCEK6wPNR3DjP+11Jsg0lp39Nfy4XiyPOI3JXtBem/aiOnuewF1iM8\ncjqWQgwjifec5WSGPnr6UhWWEhnedlh7oOr8T6QcuIvPykQ+Vf32bQTV4Y3c\n+VzZRPf3hcMAF5s4vQIbJyWOXrgYtSULkOyOgki9l5yjMAfxPy/fxwBPLhIg\n+3tV4W41MIPvikeyvyfimllntIfxPseVwe2u+s7yeOAgXrjkJ28zAw8g9aiU\nsW62\r\n=BuuU\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDFKJRRrGgq7RTW35id+Zjvvz+lVbxo9VPnieIXzL8I5QIhANerNOZ0k+gA8icBpJJ/akgWkugnt361N/z546QcCqKW"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.3.0_1606489257822_0.485381988184747"
      },
      "_hasShrinkwrap": false
    },
    "3.3.0-solc-0.7": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.3.0-solc-0.7",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") public {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\n## Contribute\n\nOpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@3.3.0-solc-0.7",
      "_nodeVersion": "10.22.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-meHKaAnTQMjP7yzW8XGRhWoyERohILeoUI1FW0rXCvPSxTEjXuE5q8LDiVgn4VciN/yUJHjKi+Ju3LqH3Qm3CA==",
        "shasum": "3a51cd53f7049f16a1a5ab2855944ad9cf808b14",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.3.0-solc-0.7.tgz",
        "fileCount": 149,
        "unpackedSize": 1115878,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfwSSOCRA9TVsSAnZWagAAUdYQAIpDHBHapk4QaQoPqGpF\nWQ0OmLgznHUyOo2VMsm49MY5CNW0qhR2BiEBR69A+GpvSwxWE1AF1RHtraKu\n4DqZ/StJKLAyvR+KvBiIrlj7KYwkFsdoJB85WZq14meFlR9V2+qnYbT3ydXZ\nh/duCtlHmxXb7T7Gp10bbQCVqWx0MM0aJtmKMzpclQJaMI55Fs6//xAUW+F3\nkCT4RWMcofsL+lwbHYPdJKcxzCFR/pV1x/oKWsQREzHfeMMJn4nv5Qvgvy1n\nTrlBWCkXZGxmx7/Bw7MbCKzL1Udtmltmw790g/R/plQwAI9MIcm+gV4EGEFh\nZ+JoPXVbdcuHDSFcXG6g1fCttThbjcaXym7TNyUcxl60FlAVU4O5yGE/QjC+\nqyebDH63VkLYmIe/Gh1bLCrlPi6JIG1w67MVjpKGuGJxUV4d72HI/nxf5T4E\nt3zCpVik0LL0/WMwjAz+Aoo2E/kPNTShGqpaTbivkNoowOZe/Bk49c+1mN+c\nqGJbWNsMTbyRXTwTkvgZjcueP5zaAnlMQFzmw7FgzgnY8M9/dHVozBmZyjQA\ntY+m/fXk4hQtD/OUuFB5Y9XpzbwNtxfV2w+2DtuMxrjJxjh98DYZuGgAn6uR\nV76madHEMg3v7sFPaPs0zcdFK2YNnzp77Jo+2YJ2L8gjpL/VeJuuFFjZZnoK\nVLbZ\r\n=x/Dp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEzTCE0dxgaY4r1eDZq2r8CzBVlqpBCdjp6De81SsVTaAiEA0c07jCVf5lJ0gQzY2Xc19cNcVWkSVDwlHEGGroyNPW8="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.3.0-solc-0.7_1606493325620_0.05971816093816651"
      },
      "_hasShrinkwrap": false
    },
    "3.4.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.4.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@3.4.0-rc.0",
      "_nodeVersion": "12.20.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-gAAo7xi0w86AQJmQhJgwhjDRri1B7anR2aPss9hrkEKPtX/OyvFfNP0nfo5zTZ2G3aO1DliNPxf7OH1ibI3XgA==",
        "shasum": "bc575ec139e090bc1730bac29abba2c4932e671e",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.4.0-rc.0.tgz",
        "fileCount": 162,
        "unpackedSize": 1260663,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGaauCRA9TVsSAnZWagAAQoQP/iNhIXmcrvzUrxdTvNY4\n43Zy4i7KE4nqQIv93Oxv1MZMmtfxaNwGswLroIjqN8DkYlPLsFpkxghmCgQw\noss5ULM41pF7fj8GNmlJvusH6DbyE7gb/ighkt+wfUmt6/ftnfi1ELv1vYMp\nxZgYIygPabb6O0w29NWSEjTWg55qLGsZN5f3yNqW8/FqPLQLIWx7R22fT/gm\nzyr9la2q2rgohhDo2bSne56VxxX8c02+QxAESocAK2/Iw4LGZo5UQ8MiyeHR\nbZnp6AhTg3crEKL5TASVLOd2lC8AQtfulZP08dx2VKXAxs+GPM2K6EciMJlx\n7JcBW5yuMqTgQ8VK9a7ZPzsoTHkGhilcGX3i4obLh2WQAE9CxMVaPDRyV92M\nxSTz1GkS+Gfs3YlGlf3F64MhEgylZ2gKZpqjYjqy5Ur9Vfnkx5ioW7Yt+Zyj\n3BvE/V/hh/CiWD+oKZ9cRN7mN3YkOS5GUm/vYq3wp5eRo5MeoSsDzxsgFa0e\nxh2bo3Q4ajkG+c63/UmxL43m0iLbi4/8BeWje5Muy/Rgmjg8JCaZDPpOh6eB\nf7Tq+mKtYgwRNrpct/E8CMAcURtx7vH6eODug7ilO5j7QnnQwQdqeBLt7UzS\ndwjN8HpfsDNgNzgzMdke46rjwHFT8ZJaBHg8FOGLCP4I0Q+x6z8+6vGzaMJ6\nnm3O\r\n=AMmq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIC0+H/Y2QpHeM0GGbHk+75ixREdX6cH/qsUjxlY+HLwYAiEAj5Pbo9hPME9KLVghKfvq25RFsiSHA52o3aWH86OrOU8="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.4.0-rc.0_1612293805854_0.808927502377222"
      },
      "_hasShrinkwrap": false
    },
    "3.4.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.4.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@3.4.0",
      "_nodeVersion": "12.20.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-7wBcbukDqWZt/B1zjb7zyeWq+AC7rx7nGln7/hPxHdKd8PAiiteXd51Cp2KmGP8qaY0/TXh/fQLsA082LWp8Zw==",
        "shasum": "7674c73c643a509f1b90c509e3e72fe9aae02aeb",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.4.0.tgz",
        "fileCount": 162,
        "unpackedSize": 1260658,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGay7CRA9TVsSAnZWagAATBwQAJuGHLMxcbfott/q3MTZ\nHqwq95YBqcKg9X3S6nL+zz+fce4Y6DQ3izZwwDcKzcvd8sKiXPM2rn5CE9WQ\njA0NvUQU5hBB7j00w0YbKxY8LqW5iYaLBXuEE05XCO/2NeaG3pXUjrqhf4Cb\nyoW+QX9ik5OU/Yg5NQ1eAZOnU9qARcLY7IRT+Y6jmyTUENC7km4Wy2Yg//uM\nH/Db20KrcbN0zYakspwhtKsJi2gVZLDyoFoji0XcVXaYxGXTHrlPaA/WeXWW\nHZo/qhEaPeVn/sIIJNDA6rQQuQ48kuuzX3mXhlDulWpfQBejE/41tb/1vnb9\nzAPAFt5uxBWGH4zNlSazajQjTR7el6fh/uMQ48BSp3bw+/h3ASNLCBYjEU3d\nKEy9Pqw4ftANwSrTVLhD1V7bDmTltelLIJpnmMyLIczoDFXUz6EwVvtyk4wy\n+nR6y1gmfmD3+qhw8CCFE0CagXqEzzCIIxWrAbqgRZNWP2mpyanZhCNA376Y\nPycK4lJSx2qLEa9iPiSoU8K6smsbUM3aK+UU/TJQR5e/bW9OHQJP5PeF0/3A\nEHh0JyLD6Bv25ZdVNhsrXPMGtrBnSZFq9Hi5erXSTKpOcPxGbYv0X4hTNdYb\na5n5s7EOyC6si8ye467DeB6vs0m69IsfHimFjoRQ0dHdYi1nJs3IQhNoF7dh\nUnbq\r\n=IpRI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAWTgVwTPBXudYwtBQbBbnVaToUv2nAp4mjHELhBPB03AiAx73vp4U1q3j33uSaJED6JvTTr6HWtTTagZsw099oIww=="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.4.0_1612295355254_0.3602759395873676"
      },
      "_hasShrinkwrap": false
    },
    "3.4.0-solc-0.7": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.4.0-solc-0.7",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") public {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\n## Contribute\n\nOpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@3.4.0-solc-0.7",
      "_nodeVersion": "12.20.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-tBI1s1pe8nYQetni6xWkqisJHGJazyy16t5vmPHsilhvHrNt8y8waB5WjOSwtOr1b7bY28s/MK/WJoaGAFGnhA==",
        "shasum": "36005c23653732913d9fee2b081604a58e801634",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.4.0-solc-0.7.tgz",
        "fileCount": 169,
        "unpackedSize": 1226855,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGa0YCRA9TVsSAnZWagAA8AgP/39dDwvPRbYnMl8MOMEL\nocDkBE/AoN2671LeLn762Oor++ObA+F191iSfOqHOvo8UrX4Wg47eyzdRT5h\nZ39/EeS7f1ZaNdJhUJS/U6QdW147KfnJN6gOLwHlHRv6r79afQw1S/QUy1HX\nwwb+uSAsGLWJX4Yu0XnhHNRq3WmVLdbv90JgSp7RIShwOUkoOfmvlMqv/MBS\n6VrQIcNeSCubPSg6U3jpcGRPwzpy7OXwvmXuuEBrKlujdpctz6wq/i5plvb8\n9vlFEorioBSwRQjUu7RjisV66Wkxkdzq9MGTwOO2Qi+P0F/8/xeAASRF/yXX\nfaaHxl1rNSmkDIcaereoVJHoryh7ypgHepBrPdPfOaDPmGwptAfY5wmyc11i\n4U5M1x+NsH11Xk/b/pNjieTNbuejAMsQD9/uKguJfQcpI1skBVwyPC1G4lkt\nw5itKXe3trVzSGiYDCuxBMsc9PuCmzBtQ0e0oCbGdoZjVddj+Br4Z1SlY+u3\nd6t5SESpElXznMzGMxOLQMTvTWxP7MAxJkOzslZm0q/Dm9MC1WjTzXz1jwDn\nGc0PNB7t6FDJC7DMRzGkOqFwF5SZBAdOEZ676ZxLkRBI0c+xc0u3245OrdC7\np3HXtdF6lUh/bFZvD9OifMhV7PSaMEXw+dFJfNd3nQqn+oycq7aWXpW8r4aX\npTls\r\n=6wI3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGfkqq+/SoVuBrkhJNGXP5/vAzEyjs7M/cWNchQlBIyyAiEA+wbnioXATfyItn1QW8bDYKia5NPeuHbiAZwOeqiJNoM="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.4.0-solc-0.7_1612295447501_0.0559118382721997"
      },
      "_hasShrinkwrap": false,
      "deprecated": "This version does not contain upgradeable contracts. Install @openzeppelin/contracts-upgradeable@3.4.1-solc-0.7-2"
    },
    "3.4.0-solc-0.7-2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.4.0-solc-0.7-2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") public {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\n## Contribute\n\nOpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@3.4.0-solc-0.7-2",
      "_nodeVersion": "12.20.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-AdHXrccUmo4xLDSYJQRTPBxaPgJfguwCdrzgK5z7szoJMtSfCsc/xzzOymQioDd0AP+MA2ZCv6VWw3VrVYyccg==",
        "shasum": "d21b6aee86bb6a155a4ae91620ddfce95c5c7bd6",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.4.0-solc-0.7-2.tgz",
        "fileCount": 162,
        "unpackedSize": 1259020,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGbBPCRA9TVsSAnZWagAAP5QP/0taXYv8wKlUO3uGptOK\nORzknyHmL9dRJZE7KCXWAHcvO2bBws6SaYhoFqcxUhaJeHeoFnV5odKA9naO\nXYeQihGyGMpkuIGyawaI3tSJoccCFTJbFWjvCWYIcTkCHLSSDgSZXfzXXauo\n9mnrN5hCvR8RvHb+7dh5BgTBxcNEBAmAMK4lacvBwY12eUyvNue+z4Nlaty8\n3js2+ZHsOuunYxqsJKnSfvdBx/GPy/nqRwld5s8eaeZtr6LRAvRGOT5+/rpb\nIQ6icOQnhPtbhisALPLodfoULt8kd9+aN6Gfpp7VHZ305IB07tnHNin7lhhi\nCJEgqz/Rkgm/zX3uemuit4S4ny6i+jFWuDbkEWDW9ALlVdNMlB21NPAMNFLl\nX+K88/hHxWf1pNKN5VlWmA1fAYQnPG5KTqFh8T1kZ8H6uvZzhApgJWbCnhyD\n0MNDbV/eUe/wPcxrJ8L4X2cdo2PNK4AUF84BxRsZAh0xkDlZe1F9wemzBSbF\nkgafuO76iQCwA2m2q85GbRCFYZym/4RJ+3JjCL8zwggqAMQCxC0g19h4QwdZ\npAYOvpbBiZhDir2CUtMDdytzKSQkimVTt0T8fExvHrnym38EpOnawddAC/Ex\nA4lACLYo6uwNeXXA403vAixusTbLOYKGgNjkQkTjPL2s1UiK6bduB552nPSt\nS/bE\r\n=tk4G\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH+gPmrYmQBT+aBDyqclSS4htSKQGf9g71Qh2b3Ja/V5AiEAnUbHN92zbYbNLPzl0BQ+ffyzKolFb1TTtxLkPcLlcM4="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.4.0-solc-0.7-2_1612296271166_0.6796862630257943"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0-beta.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.0.0-beta.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\n## Contribute\n\nOpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@4.0.0-beta.0",
      "_nodeVersion": "10.24.0",
      "_npmVersion": "7.5.2",
      "dist": {
        "integrity": "sha512-bVk/SK6911W0bUVygpqblaJRTij9GpZ+3mn/tW/H2nLl2yz83cvw/e8sXgYJBhClhWL/JlX6FmXmaim877Mr9w==",
        "shasum": "f4d4eafa44837c5c4570afc4da9f064c7c15a00c",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.0.0-beta.0.tgz",
        "fileCount": 148,
        "unpackedSize": 1181994,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNcqmCRA9TVsSAnZWagAA+w4P/1xiWOqjV6Rgm50HS7iR\n0nEegj817Mba2mv6UpGqqNr69PntbtOQqxdqb9TK6MMqQWX1oqGbANIGh13u\nKR1jlGfB4cbDhRayseVs+5kk0WKrAjjeuhvoG5pkmFncGNdwGmMLE2hmGmSG\nzw3hA2JS7YNZprhSGUCDtJojIcNo6oEf41XO6xNpTCABY8Aw1wZST7JY8y9b\n7AIgNQhJTN90U/5DQ9pMLIPHyYCm3MNwDLQsU8b/PPgxKM5GbH/wDtEUIpq1\nzrxHHqNojUXTpwwTcm96GlrRTx4JxVkc/aAwK64UBmWT/ZUSDM5FJwWaPBg0\nipM8mqLxEF6Gc0M51XAuLhnpVhU0QQvFD+M/eSS/3pvsCS0d0jXGWkDG6ZuP\nYF/w5dZ11m2klS/yeHieJyrwMD68ZYsyo1vCz7rQenxNAkCn8OnctqrLFWto\njX57vXqd+vr+MRLJWN+YqcPrifHwbTrtKrU/DYZxEO/YCYvC+6eKpPKvG/DZ\n1yTfEWX03YnVlczPxkGdKwKcOY6WblMm2oessiGlJN11/EXOsdgLP0rGFc0q\nSwFE1xDVLTedP5AiY+tD8ON2FkLgp/SiZGYuQdyYTudglK2sBJaG7C6JUylu\nSzEAIzILCInfC+ZIk8nov6HcpNJqRCjKGhmt1a1kc06PS7NKasYIIiaREwcA\nbPXw\r\n=ecaK\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAeRv0lXVARHW0eMGXC9pFdoOQkvQJ8fDItRRflf6j+OAiBdRWbb1fwDDl9Agyz4gbInywBeKhFK2dw2nYDDjxpl6g=="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.0.0-beta.0_1614138021753_0.07580309553404407"
      },
      "_hasShrinkwrap": false
    },
    "3.4.1-solc-0.7": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.4.1-solc-0.7",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") public {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\n## Contribute\n\nOpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@3.4.1-solc-0.7",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-27rj1U69XYH5XIvTFkofrfYnvg4P6PWSijH+4jiqruZvZvnGf/wdTbpJr6AfZ9fU0KWNtRa2wPo8GfJllTxyfA==",
        "shasum": "782b147f77d3b1ed187701d4f78093e561e47248",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.4.1-solc-0.7.tgz",
        "fileCount": 162,
        "unpackedSize": 1259018,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgP/AgCRA9TVsSAnZWagAAip4P/AmkNEbx+b7Ob7FwVbJK\nbKMVgt4ZOAGvNWJzNEmmqBNg+41gvnBJTlRlA4rpCfsdwOMrsLNzLpwOpjbp\nU3VdAZl7jv0XIqZgbTOkh2HdDgvjUBNiXPIWN33BkcR2hsXwME0+ho10GFb1\nVPXk/4Q3n5RlFpCXS2r5PFy70R4Q5wR9QuNLirbS1V8qYKjgCqx+7HEFkxsW\nTsNc5CvIUktRJ3AW2NErSD3E4fEq0PQoz9YSISTxla6tboaiRZY4smpC4AeQ\nUv638Fx7zZ+DU3ZDUa0xk8EAKmIxDhrNgESYxgF8fyD+zklP7ode3Fp38x1g\nymVGJgQqVgQ+NXbUbMD5lUo+HDP+gpPSnT9QRfuExHnYToONhtrEIK4Jro6d\nOPTCBGdpbtOwTiY/ZEjKU5A/B5PgWUmvpXhwXec88QvMIbgMCBfSwV8ocKEO\nauPMr6QHcABDfkB96qo/8r449cYWiCSiyDHRc+xQLaqgI+9OTgfd9qeyK3NR\n91YdjYUemmzpjawVL7w6FSTmiH5IitUUSvrN9b6XN2OaZAtIU3Zqbo6W8UUX\n1RCEb7wH08ATcsb4q8KKP18U/8bDmNk9emxuwe/1V3Xy4jARnwptQVDGXKLx\nYX9MwueULiSCrWAyHbz/gLCwTcDeR2qZV7dyAquF7mCSeTO1lXf8uWPLkOF0\n76+F\r\n=J3Sq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCNXYlWKn+ke3QdXmsowtdZebLKfUGWhBshuSTNT3h+mQIgLPqDH+7FCfX6dVUJiKQXuPPnsFtc5U793kF5bBwRRiY="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.4.1-solc-0.7_1614802976470_0.1936572896528832"
      },
      "_hasShrinkwrap": false,
      "deprecated": "This version was not properly published, use instead 3.4.1-solc-0.7-2"
    },
    "3.4.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.4.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@3.4.1",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-wBGlUzEkOxcj/ghtcF2yKc8ZYh+PTUtm1mK38zoENulJ6aplij7eH8quo3lMugfzPJy+V6V5qI8QhdQmCn7hkQ==",
        "shasum": "38dfdfa86fda0a088c6fcdebe6870cfaf897b471",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.4.1.tgz",
        "fileCount": 162,
        "unpackedSize": 1260773,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgP/BfCRA9TVsSAnZWagAA//IP/1X7j8ZscYmEQHfU0GA9\nViJ+8+spFSGin6N3OZ4bgdJ1qDyEfB/8zbcP67mqHu8kI3z/bvJPl3e0ehyt\nlKEdCx2xfkaoW8mgD0TJlVkUSN7VhKGIdc3Bi3/NoIeT1/RJ7HP9oGgASbVd\n9XizLMgJBAT8Kd8+pIsYmuR92NsiMivYDKRYXRvqEqOn5GND0zZYuG8nwO/B\nbLt24GGWvFz8XO9NSWEH9q5ibp/JgKmAJKnrDucsU25IIYk1AtN4SNGeCJUJ\nDoNV0w5My3hVV1hHnb0h5/SajvCGLBSGZtH7kPo+v55bsOWMtVq6HTWfnLjx\nioBtgi0AQx4+7KKmnHEs7Sf77WxFsTSQCV6MsFZpzc2UpoxV7nOwSEfwLVgQ\nx8c0xzZ+/pjZmObFrm7h/BWkvNNyRNXDnPnNwVOg6t5v6Ht14znpzmOi9pvi\n0MrZn/+xCjNOWLHAePW4gSoorklKc4Bi2FcIbRrtrofZ5yr59cpZkjAMHay/\nlo2IcSU921+ajflGJPsF11Bh5iXmuXlQvDogNrDykws5twSfCtg0d0ErafvV\n1blbo7gqlw8edWIlmiI5+/lmhgWrVac9ZRxlMxrw6oc9WmX6/cmLzHE+qeHq\nUOKLpvofZLXnImbxtCDp5x4rOVmlzRbUwH3iHpMfZrCZzBjCpvcQEkP1/IOX\nfTnq\r\n=q6lg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDNaHKSmGlyF/KbFdIr3Y97YZCA578fdj8d/0BF/I3UogIhAMMHYVjJa3PEmmsWDPnGgb+WA4qLoH94ncIOhEBlU1eY"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.4.1_1614803038264_0.9287382728414935"
      },
      "_hasShrinkwrap": false
    },
    "3.4.1-solc-0.7-2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.4.1-solc-0.7-2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") public {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\n## Contribute\n\nOpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@3.4.1-solc-0.7-2",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-hGbNTTlkcsRhMdJ+IMAWKn5uI1IK9yvJamZpQou1aOjgr+VOFo7eqdiqs+Dwv8fGzN7L/Wdg4XqiW3vGqTHk3g==",
        "shasum": "8d46f2310560d3756bd5235e20f4e50caa947e92",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.4.1-solc-0.7-2.tgz",
        "fileCount": 162,
        "unpackedSize": 1259135,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgQCNJCRA9TVsSAnZWagAARn4P/1Qgm+BsLrlYq82YDIEs\nMLbTs3YU9AGa4hkqbb0fRGKPnT/dTpK5Ktq62Z8OO4sVSQO2PXwHpvQw2RaS\npsnX1BjgYEjhJ47LbL4CuPzkCjsGN2tTBR2qdkwq3TK3jDa/GOmVbeGNTjz8\nQxmqpqwPJoBEXYvvzxySofzPIkaS4Iuarqln7Z+SpgcKR252xTfGJcg1WeQV\n6GgU2StIkD88jllFDIvOaOswjZfGVFt3tAFqXzYQsS6bH3OgEjAeIJUms/NP\noX8IXzVlTByFFETpiivCevkwI+Ran92bXlyh5SDl2XWPyar1k9tlm0iWle7p\nGy/OoFWM8kt5i39RZMu9JizEiaDrDZvfUve9q7laup1fF4j9oU/98u53p2PR\nYOQL33O8LIH2FeTLyc7xGNRuRqK2gjUnO4ee5tGlOXJtHnDrosrzPYjaXW6P\nnSwDASdGqM6xIF59gOYCF3LKLRFV6O6QIzqnyAadrVNIwfIBbTLuFV0lDkty\nlefk5O6D0DlzP5ThoSthon366XeLH/zuuHVJYbzTUZ4ENhYVFhNSCDryre1z\nt/b8T2l5NcKbFFBqt6XDbI9rfMkiOvUHUKJlyGfiLLbTuHL9E2QkNKKIcLpN\n/btI7EGNAC+ZtReUNPY2A0UN1lh7yMrym7+KDhY80U/2snijTwCSg04ZTqaA\nZ6vK\r\n=Jjxi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDbVE8Bnagwhbb1YA6zNPUBobVqFumb4SuxgLsx3QOuhQIhAIFgSCyg53wPDiNSTIAq09jUwv4YaTaJoYTR2fePKXYE"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.4.1-solc-0.7-2_1614816073202_0.008843618485243177"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.0.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\n## Contribute\n\nOpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@4.0.0-rc.0",
      "_nodeVersion": "15.11.0",
      "_npmVersion": "7.6.0",
      "dist": {
        "integrity": "sha512-uaA+CrSj/lis46SewE23K/k2PUl7cQrjpsg6WjusPPyo4o5PlwQcQCVE3898P+DcMbkIrzPN1MwBl0O6iqFrMA==",
        "shasum": "95430e6d496872b25466dcb018bf3a42dba0961b",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.0.0-rc.0.tgz",
        "fileCount": 152,
        "unpackedSize": 921688,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgS+HuCRA9TVsSAnZWagAAbNwQAKMcYTfxA1a2J01wMirL\nOnV5jGwECgenxUf3zTV9Q+giYpoQogN/qraGytuQpH7nH0bx7gR163Yj+/oC\nr9lKbYGp0HUidEwHI1YNoARmkbZ1JkJxBR0Wy1IUWcBhr5+oHGnNE77BZPa3\ncoqJSmQRUpZ7L+DwzkcRPX2eMrAkUawlA7adWJr1/7Zect/bs02odtpz8DHA\n8yixARovTVKpqH1nJoFnh80/1s4WvdFQ7WtMfUDYOC5KGThy7QzlhCR3nmGC\n3ZnNPaEIrylDQhse6NmZ3kppCmkntH4HUvo6X3+anoHXs1ZFaNKKweunaGDx\nencmRvkBnIKMmtTrywqfBflEBrnJKm2/TYjpAGVR64VXXT6ZBK87MVmBNMiC\nZV1L0fRU1XyXVwfWtcI1POjYGobNESOGF6mvz2tRv6hjfbUQfmGVYes091P9\nuk2v8ZVIUD59DJxGZfsDCayM62GRa7hbHMVcfk+Y0ho0gN6GPKSPoVVIzSD6\n+vTMGLNp2kEiSEUiVUDdiezPGACqMhbn5OZCbT3UWPtg56trwvACeuzwvbKY\n+QCFsZJyogx7JTAem01r26SRNpg30ntGFTL6tulTPthMNvmdCK2fTk7aE3Dv\nUnoD4obvXdNj/KxJGTZL8ciTwDBL7XDTccznF8gWzMCKEZ7Y1GeNUTtPKocb\nGDHa\r\n=LCQh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCZ6sDvtXj4LPnWf+u9OoZ+YGqe6W6YyHvrwJ7EJVf0LgIgXPSYc6SrkJNWS81jpGwSkkuF/ok5xN7sx/csQL9SvIQ="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.0.0-rc.0_1615585773865_0.7182917508602693"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.0.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.0.0",
      "_nodeVersion": "10.24.0",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-T5tO/KD++m+Ph74ppPPmNuhyrvNcsMDgQWt+pGshNJMsTf9UvmhBNyyOqVAL91UeuqDI0FHAbBV1+NnMg7ffFA==",
        "shasum": "11edb64933c43ab3eab2a84abe5e3ccf2981c4c7",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.0.0.tgz",
        "fileCount": 163,
        "unpackedSize": 944806,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgWglOCRA9TVsSAnZWagAA91kP/1ifu+UwgbGtMm4+UKlZ\nsR8Gn9+FA/2CvJ5pTuvbaFYX5zDenITV+zz3cGIMerLDVV7qmqnfCf4JRlVL\nUMgvPr5NmKuk7dv7WrHoDhDBJT37LDbZua336PpsIrqmLkhMPY3zmdLOOQzy\naA/k0NkXXpcC8E5It1sXXhCwiKaaFtsqjuLB77Zbml2VnCU62J0YVwkYSDhO\nSeN7sbYL5OH4ONo4hc0bJEcPQJm4+G18rKLYJeys3OpUhSgT/mvKd8QsPOhQ\n9LKL8h58bjr0yN1ACjk8d0TP+AFYNUFXS9J8hchrXZIp3DUkPON9JjHwrvJu\n+HKa59iPGr4/SAZDnZAWEOvAOfPyiExQN7jssmhYHd5JJGjadTUadU8l9JNn\nF20IZCCoztHLzgWmFU7sj2ISHt9kENtDOS3sEcEl56Jkf2x7uiM4j6kcSmY3\nol6vG3iJaMw7mwbJR2BGc3VgYmaeKyNMMcDkHvNAvV0/ODLc5/DbYICEJ+CE\nYc40yB5p+e7U2EG8VyodpbI9OdxLT3CgWTG6VSj4Y59qg6sPw9aCtO1POhwq\ndlzVnvqdFhdy5H6XtN8Lp/PyMERZ+SFVkwIim6epTngbPUCwxxZ/TwRVszSO\n/v7vElOJTbXqfEf9KPy85Vi4byDom/KI4s+MT+xguaIA4wgf7GBNbCjNQr5s\nazQj\r\n=0RHD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICUZYxCFpIVGxSI6TxaRwNcLwwMAxUWKoJFv/fCY1bpcAiEAgFBwgb2LsJ9je1HtfIZwkDJ9frExZMaRYk+8k2zImow="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.0.0_1616513357784_0.3308877878213512"
      },
      "_hasShrinkwrap": false
    },
    "4.1.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.1.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n> :warning: **Warning**\n>\n> There will be storage incompatibilities across major versions of this package, which makes it unsafe to upgrade a deployed contract from one major version to another, for example from 3.4.0 to 4.0.0.\n> \n> Similarly, it is not safe to upgrade from `@openzeppelin/contracts-ethereum-package` (a similar previous package) to `@openzeppelin/contracts-upgradeable`.\n>\n> **It is strongly encouraged to use these contracts together with a tool that can automatically guarantee the safety of an upgradeable contract, such as the [OpenZeppelin Upgrades Plugins](https://github.com/OpenZeppelin/openzeppelin-upgrades).**\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\n## Contribute\n\nOpenZeppelin exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@4.1.0-rc.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "7.10.0",
      "dist": {
        "integrity": "sha512-Y9zqJR5QDMsJ/3P8G65f/aNJo+i6EIgp9j/OVd0GE/AkWnGn6R1JQFCqI5bWkPRNiP5Gs36afU+on5ll+S+kEw==",
        "shasum": "008cbfee3da7d543885e5c8efd8a7b1af9f4b994",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.1.0-rc.0.tgz",
        "fileCount": 173,
        "unpackedSize": 961615,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJghxjCCRA9TVsSAnZWagAA1YAQAIcKOEGP5hds5/gaCuAB\n7adVrmKYiZ1iQ0xq0MpRgT7H5ldEJI8OcvqOC+rh1K1cCLy8lKI8o1n+YLAu\nFR+YObFLBrDqhZOuUr6TMl918/BXQxh5qAbJOuLBmGe5ON7vklThqpFgT6Ov\ndDYu19NtRugvF94mGJiWgAUpPOipmwrnbqHlx8DEpFy6UpMB+32/SGv5c3ff\n33YtdNmZPlhaPo/yP+ggV38kE8k66nEXTqMwSzm0W2DH/m25NNk5lgqCkUx8\nZRTbc6QoOVN0IMYfU5PEc4UHoBt7raYcqfsBKAnHQiL0GRtL7bB6rxgeiuUQ\nbWDCFjLGjMOItHAPW0k40CEbmicWmerpDAvNBWvU+lta34N05kbMVwTbNvyn\nluodhksRYOl+DotibMwnzSOLr3A7UkLj+cQt35RjYj7hVATp2bu/Rcyb5U4V\nPmUyJTx4lEgwPKpfDN1G/pFshDiIok4Misu9VkrtzKo6Dt+DY+NeXZOtePbH\nazy8Ac6p12e5tT+yCl3dEOI67Kqn8ZqCsZnpOQ5oXWzeTsdTZcFHntq5KnZ3\nNivU89msvJte7qWq2pMqSCqOTJrUKeX5rYL7ZSvr70uQ+xS01dGhOZepOlqt\nw804LzH8iy2lX0FJDYXQVz2CQXvY2I3AAaJUgxexeaOl1N2sBfDFh36qIP6P\n53kM\r\n=F7z4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHQBmdXq33DR0wxtWlft8/Xsxw9ZZu6+Bl/XqGUysHe8AiEAz8iVCRaT81FyzNrfT4qhNbimhUuQqE+O7D4X7/P/i6M="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.1.0-rc.0_1619466434309_0.37579151683054746"
      },
      "_hasShrinkwrap": false
    },
    "4.1.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.1.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.1.0",
      "_nodeVersion": "14.16.1",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-QZSvbYqNpU/x60vARhq/jghh97VWjml3NAlKfu4u1XehvpEBbHVXJyKTBSZtZY7jviG305jOczEisnN8VeOMcw==",
        "shasum": "36a6113ceeda278ae14f740280e5388161dfd383",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.1.0.tgz",
        "fileCount": 184,
        "unpackedSize": 987673,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgi0KvCRA9TVsSAnZWagAA8KUP/0FInHlAbZx73ugxJH3T\n1EHogKFIo6VnZuP/uO0e+sJBrnHqbH+hof4ZUsqYFy8+siPwDPTvZY09lst2\nPJrdVimt4l1k+0rOzR9QWd/9aoWDyX+x5ckRS+/N6c9DezwYQpVVWGZt0HkM\nmpfxDlzvbR3WEuUZgPJ5nv+oh2zPkv+hB1ZGbsptLCFpDfJWT724j3r1Q16F\nsNL3Vp7ADBog1xB1njA8jX87xljpOvkHPus49Hp7vb9l2m53+dE93n3b5fKD\nACLYyb3Dry4v+Y52sj/nG8BNqnODS5eJeGWi2w8ZWFJgVbj8+4CRTxn0S030\ndhkwcdvcgOA1DSYBbyjC959se1LKViLBEtNzvjjz6CuakO96X/jn3GbGWbQL\nX7peKtjemC26D78+zSYIJ5Usj5xe1978pc5OTAeDVggzNJWvWiJYWruIfCx9\n/oQpT2Mhb6mApWMG0t58GAQV3gNG7K2V6ZRTy3JUMjvV3AQlEsgXewTpGwaC\n0iHFyKjhpOKkpqsji3IsDoufggFLOZkvRuG/hf8Kbn20pjskchuoWlZw5y0J\nZfDHwVcNAWby9M3VhRfEeZr5CJE+XziF3p2BnLLL9432nglMBfoJqjmDSuvv\nwG11srxnxjSWJmeCsQQlynC+DWQt37rQZwPoIkncPNEmJ7pND/tlL24OG+op\n51L1\r\n=wp/p\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC1amGZHgXvP2Nkx9mAsHewjTceIRp4S2qdRBKscMMhbwIgJnf7qmL73O7eLfLuh8SEhJz1HKZrGJuDUR5OISs54tE="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.1.0_1619739310519_0.4099029269579413"
      },
      "_hasShrinkwrap": false
    },
    "4.2.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.2.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.2.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-vn0hoUqQzgOLzLZwFgh+w/D5hzJHX8F7X/7t/gZdSQYIEXMyGpXUwkr5A3eoAeoc42f/n7yDhwusvBmNknM41Q==",
        "shasum": "3b12d6fe9d51e563c8a6ae39c96c1d32c5d0fa4a",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.2.0.tgz",
        "fileCount": 194,
        "unpackedSize": 1052144,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg5f3FCRA9TVsSAnZWagAAD6YP/jU49MhjkQ6QzidrwZvr\npVhF0kpILnpNaToKBW8Z/e9c1t8hXo0o51sEYNZMmet0wKdWInQ8tZ8KQb5Q\nQGAHcOianFBCnN9ZCfXD0nx6Yv4APbax+BK+pKR7nECRUhJdkSSVU3F6qUi5\nN3hboGgis4mem3lHGcOkPeAwHqMWj/Ug3cDi0hB806PgERAKSA7cCpFzBQzq\nkP0mHJY4xDHOpx/har3vABnC7MDkLqRWYRj1NoDXGsgmtlG3fl3HvsnQO5GP\n9hsRyxNcQqWITt4+qLXqHlAqJKcIW5ne+CqHQpEj+6/9RM+0gfO2xTFLDarW\n8v40s9XVNYyqTNneF0+b/2QtRIJ69HrGEhUWCfpm/GeqVjVqbcqZTur79pBP\n/ODkSYaSzjYmDFNrYMB2e8fLm26cQ6Z5P+3L75wnf+AglOrbsuTjUI+x5+/x\nAKpHcSTzyyMIkFyDcNOSVrZmciZma/1Zr00wuwApUAqUhJBmeM6D3iQZEpvW\nRw9I0t7eMcr9WjJ0oSAU3rMsM+eS4Df8AiTEaqQSgbhaJlC5nqS4VbN+a1Ys\ncYuW3V7dNtq8lbgUkgY9bfJLkTlrhaEKwyuchdw0MDjR7iEaRq0mApLOetOF\nLpqBfBZG8AgoMT7GUGMYcgxWtr2Isr6/zvoUMglmpvd/MJF/iB38C+6NLUCE\nnKIo\r\n=5C3S\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDovLWTG6/1/DwDPcXoXRO8Wu279vtZVnqXaadM6qpnEwIhAMyqUavqcEduGOdegKpn1r0W8rp+Vj5nFKEvXgVJmnvm"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.2.0_1625685445250_0.7909345478631222"
      },
      "_hasShrinkwrap": false
    },
    "4.3.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.3.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n> :warning: **Warning**\n>\n> There will be storage incompatibilities across major versions of this package, which makes it unsafe to upgrade a deployed contract from one major version to another, for example from 3.4.0 to 4.0.0.\n> \n> Similarly, it is not safe to upgrade from `@openzeppelin/contracts-ethereum-package` (a similar previous package) to `@openzeppelin/contracts-upgradeable`.\n>\n> **It is strongly encouraged to use these contracts together with a tool that can automatically guarantee the safety of an upgradeable contract, such as the [OpenZeppelin Upgrades Plugins](https://github.com/OpenZeppelin/openzeppelin-upgrades).**\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\nCritical bug fixes will be backported to past major releases.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "_id": "@openzeppelin/contracts-upgradeable@4.3.0-rc.0",
      "_nodeVersion": "16.6.1",
      "_npmVersion": "6.14.14",
      "dist": {
        "integrity": "sha512-lVseeQYCmJUtsqw5lg+3YYhLU+majzytTtQ4lmszK5ycsrOvEDBroNeOqxLlBhk+XEk4ifSQ7d3IObJ7Y9u8CA==",
        "shasum": "7e75e935dbb887a08f913c47c269010b7a92a9f6",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.3.0-rc.0.tgz",
        "fileCount": 251,
        "unpackedSize": 1322298,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhFExACRA9TVsSAnZWagAACNYP/0y2nf1eOYtbn6sKDUV0\n9lqu+++bNMOBMOFhP0lwmuSBRg6n93OSw9QvyhC/05gSIZG5CSjG0wkYoL2P\nlYEb98Ew5ShvhJ2z+EjuTkRp3XKLKoIIjo5J5j/OvzcpaOFZqM5NyA0FdQqJ\nvBhw7mQrswu7hCVP8c6W+xXYcsiIIiWWow6pLUsMxCIke8SN254nZDJCl5yI\n6KqSYAVZ/QINg45BT4LxbKWlxsU3U1zZYYYlzFVb0aX5OQT/D0/kCguhDbZJ\nv+HQ0rI1+jN3BmcxOYNuKlEYiURRt+j31KNQCiPQpY6ednj4WTj7khyw1nsy\n/hXHhcZygRaSdB05RpSnOKZ4Yp7252sIGX9LtaxCZFEFvE9uhuzW1RPKlxbS\nlF3Tm0PpCxU2iyqKKGJWA0XVIBB9ZR1kA9prjSV3CwjwV+C5BwPl3SX6HC6i\nPjKoQTOsn+CcI/GDxzLyBgFXykuaS2Y1dOyS38EuHi42Z69A9UDtmrFMgQLS\nAeZpN+yWVf0KWA63KjPAItjQnMqEGmAdy3YKIKgegz6uYRUHqw05YBI70Hfz\nmNrkleBmFpihojOKL2lyeLXO+wB2Um2SV1F1NYtSRLjROm53uU+94sN7fvaW\nKWWBhXFauDMAfbBeTvAd51WoY235f0J3JZ+7HUhsVvAzeA6QprJZxLYLy2Tr\nO94k\r\n=vDw5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCo/QwQfzYWYfrQ5GJD0HyvXuj7p5TJJvFT98qrtH11XgIhAL9krdXmNhTOSl+36dFzwzl7wC1EjQesxjzevwNiTR57"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.3.0-rc.0_1628720192466_0.6467179345664451"
      },
      "_hasShrinkwrap": false
    },
    "4.3.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.3.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.3.0",
      "_nodeVersion": "16.6.1",
      "_npmVersion": "6.14.14",
      "dist": {
        "integrity": "sha512-kNplrFl2rg1VP6JzneYNJZpytJmE7VmgtyR0j6GiaP9qHupzkZWgS+L45AhK2DJupBq2wQ+t9LsVzOavvWgl9Q==",
        "shasum": "4225f108361e152f292ef65c44b58b709047aea8",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.3.0.tgz",
        "fileCount": 251,
        "unpackedSize": 1322389,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhG9kuCRA9TVsSAnZWagAAUl4P/jsd/LaP60cMXF91h/Xc\nmKlTMXQ+2KBcC/Pk5HJ32My3F7HU+B7dXf1Qoson23aiEMAQAn0cWqgF2uFW\nY6gtBT/emVwm06FROOwaxkLRH+k3W0fGsULjKrFO46NxG7HpX14r4L6aJUq7\nd7SOyMvlFe+nDYKtu0paI1T5qumat+wdY415mV+28aerA+aMa5PSxHQ45S9c\niUtwMVykHFE2GWcUH5XDEjM0Skv5zzIkKC5F+zfBUTyUYiKZSUyulDC59lli\nf4ZdhN6pKGBhqgTcBVSg01U+kFQBfEbQsV6UgNhd5vZvi2TcHEc5UQuaOeHM\nqX/gii5PlnC1QSBFBH55sE0PeJowMzn6XFF8S6X1FhdFfM6p93IdVXVy1nx1\noYn1IF8nlnBi5+GtXftAVeFWQfXsVGQwtfWNJ59FM+e4gtF/YVsJ52P1t6s/\n0Kk0TWlt5EsrjdLmJd9UuFzrswxInFh8iAEHNU6G4tY41dT+FbFZ78UHxZ9r\nqtkfvDFHLeevBWbtcdCAq0Pl6I+VehCuh3XzTEhnnBYf23NGTCcMQkblmMgg\nwaRNr5LOiy76YYjJ/ha3Ck4L3rUk4j1tYoOZykYUC1dSdBKMFA/T9wSMceo6\n2rGulvcZIc44kr2DbiOQb1Ih4RT8qXnduogydlngCTZby7ULga0GMOIZFjc0\nHqgV\r\n=7JI/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD2pOkuIfVzm83aSqX9ZF/b0NMzP1ZvO4FOKEjzKA3+rgIgRz6uyVPRxGonGlueZ6evb3O+Blc/cPZROGgLsNo4gX4="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.3.0_1629215021905_0.39695115895076105"
      },
      "_hasShrinkwrap": false
    },
    "4.3.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.3.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.3.1",
      "_nodeVersion": "16.7.0",
      "_npmVersion": "7.20.3",
      "dist": {
        "integrity": "sha512-vqS3gb1J5xlKc+7a931a5Qmg3HDR168E6aCfPY6lPrdFZV4TymN2+HVJNCqCo+KP2UMYDtqRsXu+KB/0L0E34g==",
        "shasum": "d2fdbacd010f9bc2228d58f9d3d3db4e49818ea6",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.3.1.tgz",
        "fileCount": 239,
        "unpackedSize": 1291232,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKAW2CRA9TVsSAnZWagAAvLUQAIAkgyzZvTfGAcGI54gX\nj4WDrwGI+bkvg99Eqv9HW6InhfOYFWkLFBnfDuD8Kk9Ii7O7ceg03DI403cO\niyevl3YbBLXCw3Z4S3QegY8fvN0ajd0+rgZvKER0hA1YXRTqG+jxAKkd3ZdG\ndsYT/vejJNeD3gHXu4DfnHmAiZ0UQuQf8jNK5s/rZouf/t3p9nGnLfhVDKT6\nsjBPWptUEQtmGaNggp9jBHH1KXe7JOevqhXK2t/y3NqEyXriIzda5w9sioz8\n/SNrENzcVbQ3vM5vEfNKXR8+9M+w977eC1S9820W2+aYuNU8riKgRHB8zWX+\nzFQl1oev+17kBNAvoXJmO2AspUbioEvEhcSpOAYT2HGr0bOT7s+9KT4JabPr\naiPMTy7fgCc7oJvRmjEs2EQAXUNxjXX2oQi5XAYUlUIomFhhS2aUQJwyiAJJ\nhQAFQASKX+pa+QBQBN95bbXj1xF9zQJC9USrquxe5AA2qFhEZqy4kXoZu/Vl\nARbWjvTJdXO/DpfPFAY8N44JaDRDNpiGvtWo6DwD3EW8TH2aGc3irrfeYRWj\nicYKiZxG6cPhdMcjrb2rYgz3CKr+TlAjbuejHRMKea+dsNaworaGr+r30T9J\nRUq9//U7cky+EtN/YJlr+LyRlJ3UpNUceFPRZFk64lnOxd3bn6nlh26fv7lU\njQqt\r\n=VzY9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC9PMXJuiStMSJ2jbNnF77xCt/haAqE7KjNBd4AFQz31wIgdpjUSlIfRSVqR5nrSZIVmHxaBmKzjtxVoMwl4eub+Sc="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.3.1_1630012854705_0.9307492773734745"
      },
      "_hasShrinkwrap": false
    },
    "3.4.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.4.2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@3.4.2",
      "_nodeVersion": "16.7.0",
      "_npmVersion": "7.20.3",
      "dist": {
        "integrity": "sha512-mDlBS17ymb2wpaLcrqRYdnBAmP1EwqhOXMvqWk2c5Q1N1pm5TkiCtXM9Xzznh4bYsQBq0aIWEkFFE2+iLSN1Tw==",
        "shasum": "2c2a1b0fa748235a1f495b6489349776365c51b3",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.4.2.tgz",
        "fileCount": 208,
        "unpackedSize": 1336448,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKAhCCRA9TVsSAnZWagAAtBAP/2z6ZFa68FtSGwnTMipY\nBUjuCDIkgYeUmHF+OZM1I3Pb8PxyBzCMXeCgLdjCDIbTdgGFnk5SlhI+eEZO\np/c4FdAGHv6CofSMeyEJ8qiQzJHn5KEr07irZirNPOSUJMiqng53y1ZzFeKv\n4SPJBZL4JZvcwvXS3mHo46dVFlAXmW44QrhXnc3gbgrDCBhGuYuVrG4T34lL\nC40JItsguvmTJiRjQCE1rpfXpg+E0zg+00/gVAK3bDY25DJI/LXe1Yc9fb1I\n4xmSJZpLUnjKwF1/bwdBwa3q/12TMAK4sLs88xbWHARpRjksfCciw4Of+gfq\nSmpnHuATXmgk0m48huzzs2QdJtE+OD0aqKW6UZEOV1GVCcxavg+I7AewXDFy\nU4ZIUk2T8qWZ1rMcTuLz9guitfEII9Vxji8cwFTBtVT2GLGo0LtcOdwQrkTy\nQX8OU8IwocHWn9z4OletaXKXBis0IWcrWgRblRulO+z0Zo+VuRygpC9CMWfj\nEdm3Bk93T0SZ7FzEh+HUfO7kiGdW5AaZiN4ZNdsV+AIhEpRYcwsBa52LgOpa\nGMIGwkU7v0YU6aqFm7WWu51lVaLSZy83ZxYH6/0Q+OzBO1bfJ3tpBM4QPki2\nyNm4Ggsq/Uhjw2zqi+N/XwN5zOclorxLqIqcXdeJphE1Ukr90+1cIFy6vWS7\naLcU\r\n=Lrwo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFsinJifSUgO4OYndJYtdzq6cI4cKzkq4WSUvJYkJ1m9AiBs/mu5w5w4JKDU0EZ7Ni0OX8yWx51Ao/LElgsbtAF16A=="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.4.2_1630013506825_0.45660973563957796"
      },
      "_hasShrinkwrap": false
    },
    "3.4.2-solc-0.7": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "3.4.2-solc-0.7",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@3.4.2-solc-0.7",
      "_nodeVersion": "16.7.0",
      "_npmVersion": "7.20.3",
      "dist": {
        "integrity": "sha512-I5iKKS8U9L1XdSxsNAIBQekN0U9hTgdleoyntIdR7Jy3U/z/NZ/1oUM0v5HnUMrmn/bXLvYL94rBvaLF++Ndnw==",
        "shasum": "9a5cdaf9f65bcd9a3b7e865f44a6f672afe7785e",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-3.4.2-solc-0.7.tgz",
        "fileCount": 208,
        "unpackedSize": 1334368,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKAmFCRA9TVsSAnZWagAAc+oP/3D5/PPqmaAMI1JYavYU\nPFb2raisA/AfRFZr6qXy/y4HunPOO5U5LSE4pVxFgSkX6EPEq2rW8seOvyJ/\nErP8H4RDuts4FI+IZN05DIRy8ZbO8LbjXkFgCgQdar1KuCQB86HrGoq9QoGv\nqNrSyIdWj2mO0optahJ9EQpmh359cFqMhWunFff4HJIpqXInrkISpr9Y60Q8\nLWNvhlLq1bBIpgMh3+GqEFlqZ5dGVcfN2W/APpijEUiO/HYlGG/nH4oaqtEN\ng08EvIHjRlxocWE14QeAtXDfDYNah8YLW2CgSB04/bQkaT5CJzNAbJvijaze\n8FuQ0bx67W1k4svu7VqpSRHrMAX0n4HwF5duCSghQadrhpF1mLI9QVuDVmzR\n9548kc+YpyokupXB6+xxAO8pHj3bXeCxnrKZdPD0ouag78VeWoINImqrRcMY\nA0dAoc6EAxiZhuD7q6KQ9QMi/5aiRkOi36mtM9tDT9mcjhlgCJdYXvbZPYB7\njUAg9KeUC+nAmd94Nf+KPyNsfhmyQwSA+pASBIuIYlqWtnYtNHiD2tPq+Rfl\nBOzKtdPo9npMN5dqqwIneeetUvzvus+zHh6gDNT/yONy6xe1v9qEGcpY5dib\nzc5AuJPt5Mm1YtFxgKGR1Jl+zXzao4UfDsF4jd8aXHNcL14WtXdBnPtkKAsI\n1LEb\r\n=RSHJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCDLXAbUyT1jw7q1XQilOf0sMjMRfoimk6SXFzElGPGzwIgCXBs7zwcLsb6Pq3d4zvTyujIBysV2LPluDDV7YPcNp0="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_3.4.2-solc-0.7_1630013829689_0.6060209082586503"
      },
      "_hasShrinkwrap": false
    },
    "4.3.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.3.2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "5c21639dc39b9062310ee3ca30aa2c3a4feccd8f",
      "_id": "@openzeppelin/contracts-upgradeable@4.3.2",
      "_nodeVersion": "16.9.0",
      "_npmVersion": "7.21.1",
      "dist": {
        "integrity": "sha512-i/pOaOtcqDk4UqsrOv735uYyTbn6dvfiuVu5hstsgV6c4ZKUtu88/31zT2BzkCg+3JfcwOfgg2TtRKVKKZIGkQ==",
        "shasum": "92df481362e366c388fc02133cf793029c744cea",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.3.2.tgz",
        "fileCount": 239,
        "unpackedSize": 1292132,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhQREfCRA9TVsSAnZWagAAo88P/jh5I09C1BbbLd2o+0y9\nNKw8YW5sGJ64aW6FxruqIMhLVN8tfKAvDLbgOOv7pJ15C1WaCzQpLuJvA4Rj\npNyw32NglzdRr35yGhd/5bXYvpxVo9hz/W+pk17xucZxZBTTlO7EmvlQ+TWb\n5f61FRn7uLMUDZbUw2fEJdCs23EaRey7Opmj1eGjMj352+04kn3qmWC+QQkk\nYu20pFpvmaukbLevmQVeU9nNN70+O96oPKxfTe3+zIhtMKz5dJiGQdzXKiyI\nf7LBoZpDqIXOH5D8aAxacoM8mp38hb2wR6JNaJuF9O34vviwxPgMqwjsWw4C\n5Uo+g7RcXXjJmdL3173bSC3eWkfm49iQNLm4451PVpQXzacHSn8U7wVjlEfM\nH+PR4tfnG4e0ufDD3utUnWXM5e3Lp8GiDeXgfpO/a/bE/ydduaZbSTtTfsdD\ncY2W/W6yRga+yp74z2q0MWD4TPh+YhwFqfxZ8eOqGAs7GovVV4opcju1AD9E\nzJ32OHZqg+/pKr/MVNEok0AlwFTSvTY1k9QPTGlCxIkhRYAEoPkzp6Z0lHor\n9OPBNvb/Cbw4ju+CWYQzZkiilznYFOqZRbsCro9vbasFR1VG3pnx56g+Ujds\nOBktzF7VPmklLq5UTuvMcqUjEZkMHPs/URfl0HeK0LyLQ/3s+N/ltfyiWFkU\ngGK9\r\n=SxUp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFN9dCHyjC/c4tileuLbFVacUjaAzFhH2rRIh/V5SGs6AiEAjBfpfzztiGM3SOJCoVcjsqRTVieFKhMa4EeXSrkxIyc="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.3.2_1631654175456_0.5484337733246869"
      },
      "_hasShrinkwrap": false
    },
    "4.3.3": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.3.3",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "ebf264cc4b812e6557ed7d539e947211acd5670c",
      "_id": "@openzeppelin/contracts-upgradeable@4.3.3",
      "_nodeVersion": "16.12.0",
      "_npmVersion": "8.1.0",
      "dist": {
        "integrity": "sha512-2ELsJkBQ0xirVQnx0utl3N+/iTPF+S0r3j0IVQIMG0HgAWreFXumY+yhGcwSV5JZ/yNNAXWR4mjIYRH/FEgu2Q==",
        "shasum": "dfd8ac012fd7f53ece4b31b736fcab09565a2615",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.3.3.tgz",
        "fileCount": 239,
        "unpackedSize": 1291536,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDt7vgkaRH2WdukdXap3L1Qyc9aeCjfzTP+kex4xDSUHwIhAOs4/fE4cXqEKxP9uUxEiZFWwwaWUEjPtoRIAvhz631U"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.3.3_1636752070304_0.7599740674675581"
      },
      "_hasShrinkwrap": false
    },
    "4.4.0-rc.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.4.0-rc.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n> :warning: **Warning**\n>\n> There will be storage incompatibilities across major versions of this package, which makes it unsafe to upgrade a deployed contract from one major version to another, for example from 3.4.0 to 4.0.0.\n> \n> Similarly, it is not safe to upgrade from `@openzeppelin/contracts-ethereum-package` (a similar previous package) to `@openzeppelin/contracts-upgradeable`.\n>\n> **It is strongly encouraged to use these contracts together with a tool that can automatically guarantee the safety of an upgradeable contract, such as the [OpenZeppelin Upgrades Plugins](https://github.com/OpenZeppelin/openzeppelin-upgrades).**\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nPlease report any security issues you find to security@openzeppelin.org.\n\nCritical bug fixes will be backported to past major releases.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "gitHead": "39a2c938900d2ae242654fac69d3867fc2eb53c4",
      "_id": "@openzeppelin/contracts-upgradeable@4.4.0-rc.1",
      "_nodeVersion": "16.12.0",
      "_npmVersion": "8.1.0",
      "dist": {
        "integrity": "sha512-LntmcuZPn8rFyu7PnzmQTzjZ7X+Ev0R5cu8V42ZN+VQ9VLw9BpM0y5cXlhHOXpjb75Ob0KRWwObwl8ZZcmUgfw==",
        "shasum": "e7064c5ead578cb8007621fd598dc2642f51d9ea",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.4.0-rc.1.tgz",
        "fileCount": 243,
        "unpackedSize": 1352934,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhk7/mCRA9TVsSAnZWagAAoIQQAJXNnAQMxhObVZecrut2\n5uXUOl1sLnNvW2qryFrHljILehLiAFFLZhUEL7vHfXf/IPf49R89RexvleKz\nkB8sUcJFrRHxzLI3uJPIXYHuFbXHY2xToswBb+nC1IpcO6mcyEZRF2goDSbQ\n7qBeb75T+U2cljQeEZPup4dp9iFww000e00DLaxYvBUez1yBoiHBO9ijPhqN\nobYwbsGleke9elMoE6HwPV1pT1dw/sbNGa6QxdAxi4mo60mhzTFhQEc9fnOP\nA6o0WcYGDkt+rOkXlFKDHHCwvGKcU302e18E0o9TfV48limecrLoz1cxv0ui\n9Ush2K5Re/ev0KaUz1WGYZpK34sR4TC2AYJxa+kb9bog+Uzocz4puB6M7HeY\niM0mQ3UsJ4hZMm+PN1a/jKXzY9p1tMXc3EA0GW52hT5BcS6kUhEagNikIzwC\n7Ghx7WlJevGVaV2PS967FLMeJp7yAj5Y8dnEYfYJk+CB+FWlo/kOfx1iot0x\neP0UAyhq3GZpkxR+uCPHcNucxVVGvpNviYTcX0lGkxmbTHBBOk5/dM0mZiTf\nuS3EoQbkjNiizTXhDQJYMPH9yalrMKXYkq9B1sel+h4CrJzkigS5Saf2n7iY\nKSKDPrHHDvAQLTn1XEpIAJ14PIN9zBwirluu4bdaHUDvEyxUxrINX1dSskmR\nypgJ\r\n=6Xkk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHt8/rg15EZlhZNnqgb9uDAQ4xRyPkAAK1GHKhft6hoZAiEAyqN88AY4Di7TDDtTNoF2cgKRoa+1JgTH/wLcfCjmITM="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.4.0-rc.1_1637072870124_0.7794269221400107"
      },
      "_hasShrinkwrap": false
    },
    "4.4.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.4.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "6e8820d5a421120c11fd125b145d00cf126a38df",
      "_id": "@openzeppelin/contracts-upgradeable@4.4.0",
      "_nodeVersion": "16.13.0",
      "_npmVersion": "8.1.0",
      "dist": {
        "integrity": "sha512-hIEyWJHu7bDTv6ckxOaV+K3+7mVzhjtyvp3QSaz56Rk5PscXtPAbkiNTb3yz6UJCWHPWpxVyULVgZ6RubuFEZg==",
        "shasum": "85161d87c840c5bce2b6ed0c727b407e774852ae",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.4.0.tgz",
        "fileCount": 243,
        "unpackedSize": 1352403,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhn+vqCRA9TVsSAnZWagAAnXsP/jiDQZSR2ZoXTB/5aQUQ\ndIefYPIWSSvuf46Gazo6AxfaktVLzDv5qql8RfCo3qCu/h69mS1iJb36mmn7\n2CCjSoB+dMBaw6TAIgfD7hLyLPTKEsp8vDh/mOfA6pXuFLdY4HgiU0UBlQ00\nYPGZ1RdMF6SyH4arwZp0fWgX+zQXqsYERq2WVj8OX/qjT8Ac1EwyeeN7gum5\nmspcbaomj51q1poDphDuBf8vYmkEPyK0InOoYJNqe8quuYMh3cyaLfftNYpr\n49KVAJY2ENtv4TClprB3faKwRnUrB9naG/1KS1yG7iyNDMabZHQDrWFRSFeN\nBEnWkBtPW1jQB/YvJbmM6b+1zYydPPX15NVj+Nt/7uvi6oF3e+IVSy4xQKUQ\ntQYGhuffz/mFxJdIEkUsaXaEsNIaF2+vFc8B9t2rrm9lL29YpjMRUprNYJrO\nzaCF3iOTY1XIui00TevI47MRjPWYCoN11Q9pz892EsuI2yeoqfBSkK2KS+3X\n1euFWp3k3N915FRT11d0+kwfQS5AJsFGuKdmOpvpmkVC6q64toi4PyicBcAn\nsH5uiD0T3g6wR8Ki0Ty8KleqGF1xOoKx43bjUziP/vQxjGA5/RdfMD6UzC9X\nUQltMOvXNynXJWA6I4bRvTyp+lcysNJO2Q5rY+Bandnv1JeVMNfxMdMOqtDm\n34an\r\n=ERKS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDXrZCPYNVhr/W4ffI5zSwaH7f56L5+I3vvyShM7DgEDwIhAIKuPThMqDjvB6y2UP/ZwFSJUOIOhEnWEcP5mFaKXCUx"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.4.0_1637870570513_0.9989242410215304"
      },
      "_hasShrinkwrap": false
    },
    "4.4.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.4.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.4.1",
      "_nodeVersion": "12.22.7",
      "_npmVersion": "6.14.15",
      "dist": {
        "integrity": "sha512-84dUN+TBY42D52BzUc4RHxU4KORs8Ys7dj3nH0WX1QKtlS6rrN45gL+sxaotkPdCqFLVLPyj+kd8GfJ4puxVjA==",
        "shasum": "5d2c0e82cc1f94ee38a27572217ef103d5c3d0ef",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.4.1.tgz",
        "fileCount": 255,
        "unpackedSize": 1381230,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhuNZHCRA9TVsSAnZWagAA3a4QAJ8zTGwqMUYp19yq5Hpj\nJXgi5a3jVtRmXwS8DdwxztajZvopBjy7nt2EG9Hz5j/Aec3QyilY9tIljrSn\nrAAUhqrxe32bKqw8fUBFFrrI6Q/CXJiQp5gEyu0WV/SSANbBJUaXbuyHCqG6\nk0Fh7EflFMa5PtK9CNpJfq87cwpIscEovkrp60/6ax1krm5B6T5BmV38PKtj\nb0cdSewPvG6eedLIwPngrUi/yA677bgJBhBkB98AMU1X6zbnkBgarkkJWHUZ\nSb6LxYeqNGqToZ/XR0l6N+CWsxRJdiWRM0VpkPoTYSVsZRmbKlaH6A0Kz5qa\n2zGP/2j/AAkY/HJRe2YiJENs1tijRojnZGAqDCbmDql23pNp0FvSz9ZfJwfD\nB9Al8mGlgiO/jImF2Ptn7Bh9w8EbPGdgUYI0cDJ6LZuXAC6jA2e6v6QzOkk2\nw0BEBoXZxFwWM7yuz9gLRQ2okVMUFdnMxhenoawPe896AAndTxfL2A5sO8W3\njri8YFryupywy/kL6MN6CP8YhHttWlNNmZ41ZeWab4rFl9TrbpyarXekxSUP\nS/vOHwJGOMd9HX87yB1N2ryM42ChT8CGNpaNxyU7jcrpNrEr15WEtFkqDade\nEG9j8XUkHfnM0niKthm/xfCwhgTz5qqxkZ10CnX4y95vkL+29x5FxMhoWI+G\nxaRG\r\n=ArGR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCV6skHzCD8igITvmHhTOH0rcSGR/VuOBN1N+XgPB7YhQIgV/Op+SzxVxRu7obxqf+h85zD7FkiwL0/8DVh1B2rwkk="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.4.1_1639503431433_0.6015834808222502"
      },
      "_hasShrinkwrap": false
    },
    "4.4.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.4.2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "06ab69e525435f2f4487e72676522fda670244cb",
      "_id": "@openzeppelin/contracts-upgradeable@4.4.2",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "8.1.2",
      "dist": {
        "integrity": "sha512-bavxs18L47EmcdnL9I6DzsVSUJO+0/zD6zH7/6qG7QRBugvR3VNVZR+nMvuZlCNwuTTnCa3apR00PYzYr/efAw==",
        "shasum": "748a5986a02548ef541cabc2ce8c67a890044c40",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.4.2.tgz",
        "fileCount": 243,
        "unpackedSize": 1349233,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh3g7NCRA9TVsSAnZWagAA1kAQAJdu8Fwa5VMT/5Lb8MGe\ntWxx9st9OPsTtpdyU+eY2iwuNhXu2weSuzf/d4zMECKPOI/bZmBKjYSWxiB2\nOhuKLerfdB0gA1QX5Z+oM7+0jQkyE0Ng6XfM8iIuLv5MYoCEHQKJupg5e8Ck\n1IiIZpjUFbnXSvSf9EG1Yjsnsv2v4bd9AkLRi+02qUwKR1j3Wi+V7KhAzUbC\nesLAyE9+2qelurfYZe2g4OBr08aKoKiK4PCfU0MhRS7c+7gakrm2vl4Qi6Jo\n6dX/0uxOg8gqRuGsMgdPT0wHN85CTrnta3dZ6C4LgARghQqNW9r4hMhjPTp1\n/PfEuKMDi4BlsZraACPVH57AQFd0gaC8e2ksDK/Uunwrqh+qcOuSB2WrYvuq\nGrnPQRA9wb7DuURcXFN5lZX/z4ipWt8sSoihvG0pT2NAwtXSkzr7I1xf6uwi\nkm0RXQrvIkj+SsaVooCuuB/nVmPTwIFs4LXViDvTL5UK36yoEglkuw1O8u0y\nh7gn6xgzs/pofMEludWqzQxAnTdWMoKAuZzIZDn3p6UjkBahuFNenlgTRwo2\nqN6uxiFhYZlwrotgR7C0uWfBuIxYwryaIvEWwX4E599U4FD6k0SL/QSEzASA\n+gYRo81Ux66ECuHRSeS6Mu3hRoywpr5KcRnpUNMzhvi0kcd9a/RVQsalat+J\nXq/u\r\n=My//\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDzvTG69w6Lz0tqhoRVCRT9L4QArO4PHFaqAWfBfHXT5gIhAJE29+kKe9S7bzHQJpm/jxHVbNwCLOFPD83FAGhajDiU"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.4.2_1641942733215_0.18916381388447445"
      },
      "_hasShrinkwrap": false
    },
    "4.5.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.5.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n> :warning: **Warning**\n>\n> There will be storage incompatibilities across major versions of this package, which makes it unsafe to upgrade a deployed contract from one major version to another, for example from 3.4.0 to 4.0.0.\n> \n> Similarly, it is not safe to upgrade from `@openzeppelin/contracts-ethereum-package` (a similar previous package) to `@openzeppelin/contracts-upgradeable`.\n>\n> **It is strongly encouraged to use these contracts together with a tool that can automatically guarantee the safety of an upgradeable contract, such as the [OpenZeppelin Upgrades Plugins](https://github.com/OpenZeppelin/openzeppelin-upgrades).**\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nWe have a [**bug bounty program** on Immunefi](https://www.immunefi.com/bounty/openzeppelin). Please report any security issues you find through the Immunefi dashboard, or reach out to security@openzeppelin.com.\n\nCritical bug fixes will be backported to past major releases.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "gitHead": "37c366503eb5d22094f1a7ccace1b0a698688dbf",
      "_id": "@openzeppelin/contracts-upgradeable@4.5.0-rc.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "8.1.2",
      "dist": {
        "integrity": "sha512-rplAyaAk5aAUCJLqh9GkV64gFsobPMGgPVSC9cWc+MIRoG3Q67+U1JoqGCTd3rUAJCTBpH4Hnf/QT0qe5rht9Q==",
        "shasum": "f74114c3acf728db5d288fa859649f809dfbfb09",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.5.0-rc.0.tgz",
        "fileCount": 263,
        "unpackedSize": 1435445,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh4LPkCRA9TVsSAnZWagAAPeUP/1oBk0wfqEyR5IKNfj/m\nYMq3s22BOO7xj3SyJ8JhlXPLESpha9bnEeycdTdo6toe6FhT+eEdobb+cD5i\neo0CWL4SlC4rIe+uKyLJaiekRugGR9RoNd+44eiTePBT1eBybCMAQNF2URBO\naxrA5uBgWZdjWeDk8DWRe9fQWD4ebgUAYizcx9C2Mx3SBLahSmCDSt3J4eV5\n1D2iMAo/yax4qEkHhaXgg01FRIi8VMCp6m66AgoHL+2PijJj1yagTDreWFAf\nq2cQt1b+rxTWVam+vjPQQ1LZUPdlCABVxkvMaFRHNHFZ5IvCmSaMmdP5eKwr\nhTWYUOkoM3ETChIKZjhkBRrRuQYiyy1vTOMh2Y4j3Sa/Nd/sS9Y534v8f4d2\nOP38CXMOn9scWm0tBgJ8VOiBNIuq8aH1fSvkJQLuB9EAbMilJPXZhP5UNi4B\nYUjVw/Tlv6KxnL5SlI0/VZX8bIWIvCGvsgGPUap1u6RtumpQhGhNpRgrSdzE\nkftZBay4Bc2DX6oDjLQk+BrZMhR+BJQVSUUBBGuIhOO+1u8tyLnppM3Dv1KY\nJrvAReWO45thPO4eOtd+8LRNgL6RMVmyLVMXa6ogWBSe47xTkx1j6iwWShzq\neyfe1Ufw2u3MqTJdxh10lyz/foTs6sk3nSWZmGtE4AENr2NdZCm9Gj8qSLpr\nz//A\r\n=qpxe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCoL8L+Zi8ICvoXGh5LwuayDIAtjmyphCbS4v3g75mqiAIgYgQstTPUdp9QH5nnpCLChdLlVKfAp8SLabAhoDV3u5c="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.5.0-rc.0_1642116067627_0.1742472908977868"
      },
      "_hasShrinkwrap": false
    },
    "4.5.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.5.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "ac9661a4957daf94f1512d710e7a7c4df2cb7385",
      "_id": "@openzeppelin/contracts-upgradeable@4.5.0",
      "_nodeVersion": "16.13.2",
      "_npmVersion": "8.1.2",
      "dist": {
        "integrity": "sha512-5540xxycH2aDFI3e+5Mqd0GDeozkSKSEaNWoM65l90OYxZxOs9YQMqa+b4fR+363BXXSXoC1DTXut2TuqViwPA==",
        "shasum": "1aceb1303611e3b8e416e031bb9f8f211fbbbf8b",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.5.0.tgz",
        "fileCount": 263,
        "unpackedSize": 1446526,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiBBGNCRA9TVsSAnZWagAAqB0P/RsFT1ZzBgNce5Eett+h\nYznBLdb70CRyavd3CXB6xkYzGcrjgOaNqDBaxSwNn1XfdWLbNMK9xLWP+nOE\n+z6NvF4LEiyXvY3YB1mdYxnUHrbIZjUfTTFs4dpK7WmjqlIYYVW72UXjBP6T\nTvQZhy13fZJGgnZlC68Amn69vnO2zMG4NPdyJ9ygmgOHceRS4zKGmYMbzy2T\nRnlzxjrXkgqNf3N9hQtfW27F0XA7iQfsunZDPIoR+rfWG84ZVsp4UU3fpSAV\n3KOiRPVnKV6GvNXq8+ZIQhoKbPcVlOOr9x+V0+NCopbHvy60iRfDcOV/7ylI\noTphsff3RsAG2jn15W8CJiAyCBnhP/MUZ5okZJCNmLL9GLw8wNVwIhozQYQa\nVOsoeZVe0PSZ92L+DZqIxfgnCKbuWfK+G5DJQhScd7nsgqRfKTkfU0u8Gy7N\nGb6cnJo0YmbSLCjXy/Tc1hvKGr4AKRk/nZSc+ml3FF2iqq07IS847Ap9g9Hb\nOL+c+5YNUJdKx0lGQRtoRvJ5exuzWHX9LMtvexK1KItyCmV09f1Dz1DjA4xX\nKmHbviQ33R165eG4qw1vF7Z40WVEwOgG4iXCRJJy7WUG/KcFPokchiWdleRL\nOyLmq+GXMAdFFEOPYWxypb8A/ATPQFreoXJGQm2tBgAwkDIHSQ+eW5J3v8PO\nrt1D\r\n=Lh7Z\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEYc50BVUW1MEBqEzW5EI/o5wP0vmf8GQZPzKl7ZW4+QAiBMGZ1N7v/VF16xPkr0bLbVvsR29ke/I2NFuEhjFTweNg=="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.5.0_1644433805566_0.3069358700797602"
      },
      "_hasShrinkwrap": false
    },
    "4.5.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.5.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "0d96e3df453dab07e63a210d72cd22d886a1b035",
      "_id": "@openzeppelin/contracts-upgradeable@4.5.1",
      "_nodeVersion": "16.13.2",
      "_npmVersion": "8.1.2",
      "dist": {
        "integrity": "sha512-xcKycsSyFauIGMhSeeTJW/Jzz9jZUJdiFNP9Wo/9VhMhw8t5X0M92RY6x176VfcIWsxURMHFWOJVTlFA78HI/w==",
        "shasum": "dc354082460eb34f5833afdecfab46538b208c4f",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.5.1.tgz",
        "fileCount": 263,
        "unpackedSize": 1446871,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiBozyCRA9TVsSAnZWagAAtswP/0c6ue0BsJ+gKYya8+By\nTgZD6r3BtaBfPxahn7vYDEcPjq1orlyTTpbv35P7nh9BfKedi6RrBGFdj78p\nBtipSaQm5pX6ofT+Bl6fijGC3RVihInSlS1imLtY9EzxeptSp/BXTNMyE43U\n2ds7w2iFCfbgTRywwI3G7eqinF/yxs7ecCs80EyLdGP19cPOGLMrXK+oGGzH\nQ/HUfXpx7Dhrc76NR/hX+pJcpi286R+mzTY8TCg4jBV4nlkwAAgW3VxjjK7m\nKkUUlFydAiiUvUce2XinQfExtUXyhWhpGTH6nTDuE7ufpvnqRj8c2XON/2nr\nFZaQmcQVesZ5rLlBjJGrQG6JKb1ckzKHpRBGKfEmNPDO+HfaFWJR+PPkE4g0\noSWBDkZ5z8f2+0U4c3pQ3QnmGvCogt1tmd+60O/VgwD4ut4xZo90rBH91zTr\nsQt7XVANX6C6HYZrBv40vNmsZQTCMKDhi5NgdsyLBCMvpxNyw7c6F9XKbn5p\nRIUmt6QDhWU0lEkUew0tz9SLkFOu0wcJFBwl8QGliKcfReAdVWLEMxuw2CGk\nRgmgLqljvJV65uGN6lsMyStnyYjGss1kE0NJPJQdkzYg0Lir7DQCVIp6CvZn\n2vRHGl5F++JGA+XhSYVBVZB48pNaAPpXPfQarlFMQ28e8cMVVK3kndzAv8W8\n0I+1\r\n=be58\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBnJIbUzj6Up2z5U4Uykv+/E7162T+9EGqYR60LzSgvvAiANEpidhb2J91q/Sp1Yn/qwfX5tgLNJ9HxO5VNhuhYtug=="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.5.1_1644596466033_0.6513970890014595"
      },
      "_hasShrinkwrap": false
    },
    "4.5.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.5.2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "1e5e9b0fec1248cff2131425655ead33483f5164",
      "_id": "@openzeppelin/contracts-upgradeable@4.5.2",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-xgWZYaPlrEOQo3cBj97Ufiuv79SPd8Brh4GcFYhPgb6WvAq4ppz8dWKL6h+jLAK01rUqMRp/TS9AdXgAeNvCLA==",
        "shasum": "90d9e47bacfd8693bfad0ac8a394645575528d05",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.5.2.tgz",
        "fileCount": 263,
        "unpackedSize": 1446970,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiH9UJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrMcRAAg7ud0qY/xEOOyW48DXdfQ9lIOihcJwJJ3T9Pqp+hqYNrCvmf\r\nNRUDkkoXyyA51pDeiu3YYrQkZC7BOwolM2Xx2dRDNpRQRUdoT/jG/e32DXYh\r\n6RboHoMesqRVadgnfTsPqReMwm9fxQRwCIKZ/wXPQ2ejMKZ3CDwMb3KhXb6b\r\ntqX1txxVmRC0VRO7q/DNNoh3Th40ch6mP/lfVnYoBZNMl7zw5xGADf6gVzge\r\ntGH3ZVMLl6jNxPksSaOoZYWIsi+1/WuUzHsJ8cj14tRbCp/7LHFieDM+TuNd\r\n+mXycloX457tgN3pAAGwS454m9XHosF/w34aAjooK6n6TdjknqH3hEswOgxL\r\n/MF8iPT/hGE15vSilxt1XURH6Gfg0E2xadVp2U0c8NtDCwWqyYzQrdY1yCOB\r\ngCCwGMByBxrImZHorlqiSxs+M4G0oIm9URv7kXz8TLDAniFgjXARa3BUCe4v\r\njUXcW/y6gx7hzDNL3jqFrUfoonVixQEbAz75wu/+xRwnqBX/eloWSvDG0hOg\r\n0zi1rZPtu0OcyoSnIBu/poeGbskgqoofbGQXWNyNtpD+JOfTMDf6NanIRHQF\r\n7revlHP2vt2V1IuzVlhLmWOTkWM5oVGTinvtPS2POdViswRYtx10eP0p1Bgf\r\nALGo8vxSC9Qr8dWz+dUmAPWmakg0DLmUmUo=\r\n=nw6R\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDePxopTwenAPk1ooPJUgzR4EnTVIiHsPQBXptZ4lwt+gIgToSwjVcoGgp/XY1ns1MmDjbv2zLeJ+Jg1fo7PaVURik="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.5.2_1646253320802_0.39202332553892294"
      },
      "_hasShrinkwrap": false
    },
    "4.6.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.6.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n> :warning: **Warning**\n>\n> There will be storage incompatibilities across major versions of this package, which makes it unsafe to upgrade a deployed contract from one major version to another, for example from 3.4.0 to 4.0.0.\n> \n> Similarly, it is not safe to upgrade from `@openzeppelin/contracts-ethereum-package` (a similar previous package) to `@openzeppelin/contracts-upgradeable`.\n>\n> **It is strongly encouraged to use these contracts together with a tool that can automatically guarantee the safety of an upgradeable contract, such as the [OpenZeppelin Upgrades Plugins](https://github.com/OpenZeppelin/openzeppelin-upgrades).**\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means your contracts won't break unexpectedly when upgrading to a newer minor version.\n\nAn alternative to npm is to use the GitHub repository `openzeppelin/openzeppelin-contracts` to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nWe have a [**bug bounty program** on Immunefi](https://www.immunefi.com/bounty/openzeppelin). Please report any security issues you find through the Immunefi dashboard, or reach out to security@openzeppelin.com.\n\nCritical bug fixes will be backported to past major releases.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "gitHead": "e1424bdd0b23b162105e4ff80d5702ece8f229f1",
      "_id": "@openzeppelin/contracts-upgradeable@4.6.0-rc.0",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-IQo98b6AlCGqpdgW1pxsUucqMu8x6WFJmusKMS4qoaVm3cifA/aQM/klHIAdr3pmVeZRjIM1gywQU85jzWEnAA==",
        "shasum": "80b6dcff3167ab2f86f9d08e6bd60c0332a5fee5",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.6.0-rc.0.tgz",
        "fileCount": 307,
        "unpackedSize": 1679977,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDDLEmC2lTg1DrqEMzFpP9jpvdo3U0QMhSoh2iyefI5cQIhAPC3SutHt32MtJCpInjMlGdw/eub3ZSV6EqZnfxjnGkU"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiR2U/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq13Q//dgx8z7ZTOeogPNVjAVTaEVPB8zAQQFE5WMlaNrugKhnMhZuH\r\nMK7rLQmSCrgMLHO0t+NI/CzeNea/0/GorLo0cqSBW2QrU/zHSltStcrllPmd\r\nFS0GDvO6L3uKbjW+wUCcblyt+JE6Oj1+AOXcP85Qxt4FQAUXVDcBKJ7tLuPB\r\nEi+m/t/z1HDH/tnUze4fbjKkXxX2NWZDNvLEG04CKRxdFzB61VgNkM0wJbhK\r\nUn6Pjv3dn3IAgrr37Ur8EHpOfIf+ZvbDFLgjoNkCb5yx3Q2DqDrRJ6LCqqNX\r\nxUX9r6wYd1dCnKDW8b2D4Yz6+9T2j33egHGUiHo9fw4DQcfhfGJAVq5qg4lp\r\nEeD/kN+fYFhRhEeDz6GYL6AeUvLc9WGAjuh5EuFiP3dSh3rMeSRJADxlejop\r\nNcSqc2tQAAK02jOBA9XazTBVaW1A55m6fx2yYBdB4rErtJ0Sr8OMIYQxwNdg\r\nehFIkOVYzmfxHSdKC3lYMHX4M3heb8359RywGo7BEcNxHagqwH36ltRv3t9r\r\nomwqpDWXfizknAiBjwX8hK6/6jhBywM65yyGUFUapjaIP3hfau+BQdRqWM5l\r\nRhEezC57YBr+h6W1QtpCpZfpNaGt5fIsYmaqmFUL3uoiRX3IosLbjgiS9B0A\r\ndRxDdH6V7AIvWu/uoK+geJ/bKaXD42HlT+U=\r\n=Cmiw\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.6.0-rc.0_1648846143593_0.41986748457109613"
      },
      "_hasShrinkwrap": false
    },
    "4.6.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.6.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "51e11611c40ec1ad772e2a075cdc8487bbadf8ad",
      "_id": "@openzeppelin/contracts-upgradeable@4.6.0",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-5OnVuO4HlkjSCJO165a4i2Pu1zQGzMs//o54LPrwUgxvEO2P3ax1QuaSI0cEHHTveA77guS0PnNugpR2JMsPfA==",
        "shasum": "1bf55f230f008554d4c6fe25eb165b85112108b0",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.6.0.tgz",
        "fileCount": 309,
        "unpackedSize": 1731832,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDafdbYATN4QnphYG6dF3/kgieg2TOXkvxKfznLiuwEkwIhAMYXeAQU7k5qn1cyzgHHUvZcrwONu/GHrhONnnpqlMnm"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJicEYxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqoaQ//X4pv/bN8Ind5zBZfKIMowZk9MX1AYFsNnzvcmyXRFH2sDq4I\r\n4V6pXRh7tvGzJmzQ/xBULl6vGUMZ2Ov2UEVz4KCYTJTwZ27hRDy9YqQ8qs02\r\nBUHjlhDbpDsCOl6tOVvbLcQ3z7bJdxyhnbayHeZjV7ij0yHGoNisXWvpIds2\r\n9QYsARRdv3x0PMxRjxl3JEUfkiKaVhjslKlTyykwDIEhThCHtEBhDJZfTKhk\r\nKRYyy5X6ztTQW7zGYmCHC81NQoRzlkaE9/3NeU2AVyw67gDySlEGWwQ+ITO8\r\nA74zaIgBqocdAYPX43sPCCVumfseoeMn3IrjWQjeAiJk2tOCbyRibsBUKfgI\r\n2+lSBOPok+X5t6sYPjOX5GPPW4qBUX02cZYlwL79fDJY0qj+vUVPLOAh1WEA\r\nHBuXaGYlvmZW8NeaewORB+4wFH1bbvsZH8D0Gm6XQJMCk6+vlpIEq+3fSJ/6\r\n+CrRAv3ExS7J8xhAOBecf15mY4veijORlLJZvWZpRSnwHtV1b14yIBRh9ajX\r\nRRgvxElsZsuWn9sBRJw3+OqpNmZag6aqyCQcqady5WpDZtSviq4wM5k6RspB\r\nhslArNky+MIVk7uVUO+8b1FtuPwQ3fzHsm9Hiv0tXA6U9IN8uGLjZqt1e0nn\r\noQ7Ie6Gofg0juDFdV2wcopjk4og49ZTO9ak=\r\n=MzZb\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "amxx",
        "email": "hadrien.croubois@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.6.0_1651525169288_0.08387977267816349"
      },
      "_hasShrinkwrap": false
    },
    "4.7.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.7.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts/upgradeable)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts-upgradeable.svg)](https://www.npmjs.org/package/@openzeppelin/contracts-upgradeable)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n> :warning: **Warning**\n>\n> There will be storage incompatibilities across major versions of this package, which makes it unsafe to upgrade a deployed contract from one major version to another, for example from 3.4.0 to 4.0.0.\n> \n> Similarly, it is not safe to upgrade from `@openzeppelin/contracts-ethereum-package` (a similar previous package) to `@openzeppelin/contracts-upgradeable`.\n>\n> **It is strongly encouraged to use these contracts together with a tool that can automatically guarantee the safety of an upgradeable contract, such as the [OpenZeppelin Upgrades Plugins](https://github.com/OpenZeppelin/openzeppelin-upgrades).**\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means your contracts won't break unexpectedly when upgrading to a newer minor version.\n\nAn alternative to npm is to use the GitHub repository `openzeppelin/openzeppelin-contracts` to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources, nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [docs site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools, including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices.. The following articles provide great background reading, though please note, some of the referenced tools have changed as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nWe have a [**bug bounty program** on Immunefi](https://www.immunefi.com/bounty/openzeppelin). Please report any security issues you find through the Immunefi dashboard, or reach out to security@openzeppelin.com.\n\nCritical bug fixes will be backported to past major releases.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "gitHead": "366f3daf7517fbc9f64368de389aa5db8aa729a7",
      "_id": "@openzeppelin/contracts-upgradeable@4.7.0-rc.0",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-Ei5fYk/xy3cyzWBgRShN/rIk2TtlFZ8Oqx4P7YiavqMlvBrK8vki2qxlwflwdliJ1rt+cDT1pzx/KloAXnGrOA==",
        "shasum": "f98531801be41c0ca7ce693929f5aa26ab3bda1c",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.7.0-rc.0.tgz",
        "fileCount": 313,
        "unpackedSize": 1826584,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAEy0/G5msvX8k0QkXjG1ngeAQ812HZFdfoNG/iQ7AJRAiBw+N/0fT+uAyEH3Q7dlvMAtL35JjvqLHuyx2/QJN/zUg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJio897ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqnSg/+M/pGmzro6uNJbQHVcek81yIp8OjRASXuMyCStpPtJUIJBVAG\r\nJwf6TQ1vpsLkMEAlh7G5ZJ4Vrmg3MZ50+gkIo1XzhNLU0q9nkoVNtxNJWL5z\r\nXlgoID6vr4kRKHUl+j3d9aVVJi/7VOC4kMRmDzX7KhPdemVVZyObOk3r0q8D\r\niA+3G67wH7Zs3gBn0zqma06FFhQX9hJjktH7MHL8PjaF21waxGlKk503am7B\r\naO695eK4rnrRZhibwe7dYZG+VAxyz93KexJQjOWpt6A4fJB1vbWJIn4tDxdA\r\nqZQNfw15Jxa4mfjIIJgiSX0qaJrqpDRzFQsuXVBnZhVb7X61kNxyMb1DjWN6\r\n9qHWXowjVBst6v+KX/AkMfrcsoY0EZR2loaZ1YGAiBChqWpvYI5i4K01nOQs\r\nk7REvuzA+WCM52CnCnU+cxf+eVh6ulvIpY0QaEnLgqVri0Gbi1So4diIx6q9\r\nWI1R8+JJyP3uMFHMu06WvmypChIK528HlKyP0JblGG3jcde+42OPYDZtgzyE\r\nLrQ5Dcdnd66TxX78xuNU7v+UhB3eKzxKHDY0SXA31w4lfD6LyKls/Kp9ASED\r\n7cRINwHJ+73JDoG9lYxZXpSHa7rP2ShS69Sl1U2Gg7BLPqASSHBnQzNSF3uf\r\n9r7D6lLWa2qufhNRFFfH3wcaN8+S8aXXtas=\r\n=b9kU\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.7.0-rc.0_1654902651105_0.2033255417076476"
      },
      "_hasShrinkwrap": false
    },
    "4.7.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.7.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "6b9807b0639e1dd75e07fa062e9432eb3f35dd8c",
      "_id": "@openzeppelin/contracts-upgradeable@4.7.0",
      "_nodeVersion": "16.10.0",
      "_npmVersion": "7.24.0",
      "dist": {
        "integrity": "sha512-wO3PyoAaAV/rA77cK8H4c3SbO98QylTjfiFxyvURUZKTFLV180rnAvna1x7/Nxvt0Gqv+jt1sXKC7ygxsq8iCw==",
        "shasum": "6437261286879d353f6de7bf3ac8216bef8a486d",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.7.0.tgz",
        "fileCount": 313,
        "unpackedSize": 1829178,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEdPgWCxBt59PQEAd69O77nqWVX7O6/U/4etTcubUesBAiAXEFkrmHV/tUhj2PBOQSw1joc19FKiC9T6NTgzHz7yHg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivbjhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrk9A//bNjnz1eMTK9yHG5ZwK3WGUcvzAQxTwdPKP1BA1pqFKBkbpy7\r\n+iOyGEWEtiYJ517zybu5t5X55ZWSr9dK4hSPHzX5MHZ5/zLpNp1xa/uJukT4\r\nqriv/oh8zYcPbzsABHh3QsuJbuV3cPilNfwDCPN7ntfsX/df9PkaqynY9yV3\r\nMQqHzxiVhPJNJbimTVYVLZFcGhDeHMGVoUeelkiRfYX5w5yn30SR1q7ydqMj\r\nyGRsPqt8Tgk4bNY6/VWG74SPrllXDFMzXThqLToOMfbPVWS+aSPNAUjn95Lu\r\nlFFyJdyFDCpju3pn0ESZ0awHWV0/lSewcwydHf0p8BVS47ClCVsYWuN8j+JO\r\nc17iOFXCmtS91B1dfAaWP2za2nR8GsjqB0MhpMGDbGMw1begRVBWYxLu4A/g\r\ngEvoQmQcr69Xd9sBomJgHqkJf5aYq0bE9SfJHmmZWVIpXiDuI1WAaHGtBgoF\r\n3XzdvKfTAwJ8og7TDqjTd3qutzQdN2BMGoXjiUQAlCV0Nqmg7+1g3/wjCkwK\r\nA21rfJijYO2H1tT8dARAZ1x45rpEP+TZHkVOAnoB5md9GSPfuiC0JOpM0+bf\r\nTE/VV/8JPJH2cmQ/Kcjea3Xvag7ctb1/FzISOrTtZgJtu8GpMDZl9hX+S9wz\r\nv2Btj2mRN8llFysWs1S+2yjOg9VtKGVn3tQ=\r\n=t9ux\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "amxx",
        "email": "hadrien.croubois@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.7.0_1656600801381_0.7882566299986744"
      },
      "_hasShrinkwrap": false
    },
    "4.7.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.7.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "da834e3976e5421747bdb76ed40c51463a132c74",
      "_id": "@openzeppelin/contracts-upgradeable@4.7.1",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-5EFiZld3DYFd8aTL8eeMnhnaWh1/oXLXFNuFMrgF3b1DNPshF3LCyO7VR6lc+gac2URJ0BlVcZoCfkk/3MoEfg==",
        "shasum": "f63fc384255d6ac139e0a2561aa207fd7c14183c",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.7.1.tgz",
        "fileCount": 313,
        "unpackedSize": 1829234,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICviUftNzOjhL848lTPHardVwhqL6GCx+ZP+3LuAuIjaAiEAvYPtpHzmY4I3KuE70utqG9jnHx5rBf2X4ZmCQx6+Z/A="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2A7JACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrbAQ/+OU/jclmoaxQBdDXhKO4T1eYhBsKrM4AS0miXDnfMDUhMi5kc\r\nvKfbax09hcoTKIFzbOl6W27vlOnJmYI5ta+KKW4boq5q8zH+yM8Ux0l7JqLt\r\nWTRxRizGruUVLZuJ8p9rO4Q/Ca9Rz13sHdU+h7YoS2/dx0vlz1awYLNswzyX\r\n1zVYhJrBIdEDbZEOxA8sKPReBCEQoabUe8Nn/yw2VFh/bluo8obLt6QaI9Zn\r\nCcr+X5gB8iIqGWHqsDQyKsEMNYAyISAnsQdcmriPPaL1WLE29S0rN1bD6Dmh\r\nQBve7rcPgaL1nT32aUbQ37Z2lmblRhATFlg1pdjjKQSWDsr5y7BQTz+Frcn6\r\n72Z65qw00lV7iyBGbVqFcMyf3H4rS5H6Pxgta1QVoW/oIaoI0a81TxVJ+PuU\r\nrpVwCotfrxIIDT8OasB86lX5UoHupvWvSzssSFoktm4tGCe82mnncURJCLuA\r\nqmMBrMHkcxnGjANoLJBcbIIrhMZwnc9KGI/GewW3iTkg023VG0Nqr7LwSNsQ\r\nHAi3nJ4LXXZa895E0TUUGo7fplOZxQaINgtpxXvce//AKny3w/VyktTCPhpQ\r\nWjgOS2knVUAqubPmJU2p+kq/X0nKzoXOGCkPHqW60UdlgMQM/Tl5rptIg6Ts\r\ns9Ariih04ViyFzqXLuNPjhKvTbiHNYaMiTU=\r\n=Si0y\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.7.1_1658326729177_0.5527282307125356"
      },
      "_hasShrinkwrap": false
    },
    "4.7.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.7.2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "12ad9ea7c8e8e78f6eba9ad71ad156645d3c5b4c",
      "_id": "@openzeppelin/contracts-upgradeable@4.7.2",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-3dgc6qVmFch/uOmlmKnw5/v3JxwXcZD4T10/9CI1OUbX8AqjoZrBGKfxN1z3QxnIXRU/X31/BItJezJSDDTe7Q==",
        "shasum": "414096e21f048200cbb7ad4fe4c6de2e822513bf",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.7.2.tgz",
        "fileCount": 313,
        "unpackedSize": 1831342,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC+NqbW92vpb3leEQmO/RHpUAQ/9UgQjk06bsbP2/8EdQIhAPH9jbCNbzdDKx7yI/+OQCIQgeLo/F27oOiDMU2RMvUB"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4aUtACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrnUxAAgD95UImcH8KI+AzhQ32VEzaIVmoJsDE2fCTMato+NygLhz1c\r\n2MdpDPJjPpFN1u7j2xNjb3ru+qOuAgmcQFOUFVLpNvU9phojrBhVpGPlRpDd\r\npo+YOdAHbo7zW1S6DU3kmb075BTbkj8WfYs1veKIqu8rj/SvHscb1Tk5rdW2\r\nNj3oJXbGCCuUW3aGhV41kTr3cDUTmZGUWmB2pX/c3RBDQUPl1h4WoGcHkTdC\r\nXleV4b+cTjD4g0Vc8682ajnIbpiJPIMdmJaeXxnbr0qagN2Idcs/WzZJuW11\r\nDR6wI1EzApc09HjuQ8eakOj3vnGfRW22RjwG8nTl9pH8eaQ6YYdTCPRv1fFf\r\nwMm2gDYkHiLx+zRDrVIYsRkXSR4Qi2NLE2hrFCi+S/xeuwxwqAOZuDkmxX68\r\nA7JaPhjtHm/IKnB0QbrMyR1Ukwq2q6/qUuBPHdMWvNIMD8J1+KsRkWgs1Dhx\r\nuElIixW3MwSgPErNwP9y1wUkH2vl1IypChV8u8E+XjAIpwea/vbcc+JpyvEO\r\nPmdLTRzPZvjX4e5iHrTHYzIXMaEbNvRfw+tY1R05+IreM7cvUv9Y8cC6jJ/M\r\n7whWyR+1bi5vnlWHMc/6g3FCHHW6CTKmFczGJvjr51E69IiwQDTQ1i/EosMf\r\nWYvcL2bVqo8Gc3ySr3C6OW6aba5YNPLJXAY=\r\n=8QsG\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.7.2_1658955053141_0.822649607635991"
      },
      "_hasShrinkwrap": false
    },
    "4.7.3": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.7.3",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "0a2cb9a445c365870ed7a8ab461b12acf3e27d63",
      "_id": "@openzeppelin/contracts-upgradeable@4.7.3",
      "_nodeVersion": "16.15.1",
      "_npmVersion": "8.11.0",
      "dist": {
        "integrity": "sha512-+wuegAMaLcZnLCJIvrVUDzA9z/Wp93f0Dla/4jJvIhijRrPabjQbZe6fWiECLaJyfn5ci9fqf9vTw3xpQOad2A==",
        "shasum": "f1d606e2827d409053f3e908ba4eb8adb1dd6995",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.7.3.tgz",
        "fileCount": 313,
        "unpackedSize": 1830303,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCV+ygaRPrqKVfc8Xtp+NDvpaHXYxS2a4HjDWzrhOgbWQIgS7nKAkRvG4zwSGsOq/foqifr+BDnfFI68XIsWhkwJHM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi9AKvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrdrw//bSM0We85xs/xHoKPta3uWccaXPJhYolyqmHJz6DSW0RVYBf2\r\nkM2ka0OeXy2unfWtmoMxBAJtDHfZMoc4TCqtTVzci5/4PCkl4h/K3+OInqT0\r\nMqUoIHCETHAtE9d1HZ+pi81RKYyFOmeJAYzou/sPwkNls3dP7Y+lUgkJk+AK\r\nzXFC8KB3oIXAe3JDctAAkVgh6o9ifHreQsI5PM02ChuazJZuXRdtAT4O0/Z7\r\nZ/60bdwtVTh5WTlYL4v85Tw8yG66FBccrm7pwQr/ILurKUzuu6JXt8mmRv1i\r\nXvgELWaSp9tMzC1E81G8NAyBGbK4WqPHCrFZxMlXiCc1tP47u6mFlyF5O5yf\r\nCyrugEd0jUoKhsMiFdTp8XArAXGZ6S8kEaembd9KhRNULoZ5G1DT0njkCt6q\r\nVSO/feI7OlmxoaTw9AyGYmiChzyRhLd47rvkrSMmh60CM4T3HE3CCaSG+RoZ\r\nKEL2qRBCF5qTgSiXP2u/rNL3RP9tW8fN9A82zDsHDSLkHaPGIovkH+zcBgNg\r\nUMZC0D8rknQeVKfp+44/j1BeQ7lXoKf4ePus/Epi4kARaYTO2yYV3d3mu8Ke\r\nDJDGgt8eFRE9X+XjhWolGDibyWb6AhkmgfDndTUQSnLs8ocy/QSBZ35rxTfy\r\n3L6li77wT+Q//uJOjWnSyzgf9nOSW6J/cpU=\r\n=bE8C\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.7.3_1660158639243_0.146398063513292"
      },
      "_hasShrinkwrap": false
    },
    "4.8.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.8.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![gitpoap badge](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n> :warning: **Warning**\n>\n> There will be storage incompatibilities across major versions of this package, which makes it unsafe to upgrade a deployed contract from one major version to another, for example from 3.4.0 to 4.0.0.\n> \n> Similarly, it is not safe to upgrade from `@openzeppelin/contracts-ethereum-package` (a similar previous package) to `@openzeppelin/contracts-upgradeable`.\n>\n> **It is strongly encouraged to use these contracts together with a tool that can automatically guarantee the safety of an upgradeable contract, such as the [OpenZeppelin Upgrades Plugins](https://github.com/OpenZeppelin/openzeppelin-upgrades).**\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means that your contracts won't break unexpectedly when upgrading to a newer minor version.\n\nAn alternative to npm is to use the GitHub repository (`openzeppelin/openzeppelin-contracts`) to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nWe have a [**bug bounty program** on Immunefi](https://www.immunefi.com/bounty/openzeppelin). Please report any security issues you find through the Immunefi dashboard, or reach out to security@openzeppelin.com.\n\nCritical bug fixes will be backported to past major releases.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "gitHead": "2b2c0f9a0a9b8ce7801e7eb9e332fa8ad0603f9a",
      "_id": "@openzeppelin/contracts-upgradeable@4.8.0-rc.0",
      "_nodeVersion": "18.8.0",
      "_npmVersion": "8.18.0",
      "dist": {
        "integrity": "sha512-ccnIognyrw7Sb6S1nXwVJDThwCueiYwH4XDZT9brjyJGuPEYbtS21pby9rRyGFbtP6eJbOKTr4uFtN9rsFZ9bw==",
        "shasum": "e9297dc854419c2ceb65efbe6c4454841a15a074",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.8.0-rc.0.tgz",
        "fileCount": 320,
        "unpackedSize": 1883593,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDNzqsiwLM7RrNTlzfq8LSdyFOV+N9Nntn1lSofSW+TewIgAYvk2WtSXh1CF/YbVqa6fd/GlkcRNsAG3aLbwPfY0Rw="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjIRZHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpoag//UEQiWYcuYxhEMaQTvhBeyZPcJ7ErtBb0eOi0/PE/JBFWhw2v\r\n41tSu/6i9kvC52D4wSw+Pf0Uh3GH5tp8tNP2+VyzvXZ/NI1QqQ+drlzX9I19\r\nlBeQjr6XoW0mSyEufHMLJ1cnc644tQxkbPnkpthf9KKLAhmaRh0Pvlazx3gs\r\n0/7cumz9LPOpovELiU4LLtYAeEEtFDvqCPIybcM+7n4pWEE6P04z/me/cj2h\r\nHlWAgFYMPFRFzUV3DLJlR9fjOdJle9I/00J3/9/G4pMR0Vq9mYSFiR06Odu6\r\n+D0O1XZMDQ+5ODd/iBuDHr9Jp+RtLi89pFSRMzIqZ+K93jIs4L2hVh/T1B0p\r\n/nPhHM0zrd/5Y9g9Ri4cT0tgQXUgqUrFiKx1aYX8MTdHwWD2j9PpqHk+E4Yo\r\nfsJQc1qpAnX4hUrvL9vWRciNhYgpKX9T4ioLb8QCpv6geqW4v3WFpbNQft/u\r\n/4yKBS6eCuB202UTyiQUeXs//hWijTdknvytCeqMF3YFI4/a/Fvuz5VDRDiT\r\n5RbI9eT0/SgvOu5ZB2KmG1VXX2HPnbLCb8ATnT9vrEVVp4MOoJ9hcc+vIGpl\r\nOy9B0tUDtOJ8irLFCJTJ8MNfi6sQd+tD1M0S/POM3U1qkLlZ4wjxOKx33M7Q\r\nUyLTCBiuTULpUZ+qgLit7s2YizH5cKR4bcU=\r\n=30w7\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.8.0-rc.0_1663112775078_0.13477315059328876"
      },
      "_hasShrinkwrap": false
    },
    "4.8.0-rc.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.8.0-rc.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "5b9af35fedc3d58802bded917193b55aa068a2ca",
      "_id": "@openzeppelin/contracts-upgradeable@4.8.0-rc.1",
      "_nodeVersion": "18.9.1",
      "_npmVersion": "8.19.1",
      "dist": {
        "integrity": "sha512-yywl0OC8ZGyRLDf0hQqGt2qtm5DZcDf6CggfE+J0bNw2mF6ySaXW6lovAZwXI/frtevUGog4WKNm6EPXtpoh3A==",
        "shasum": "2f8dfa64ce04f92f7e7409117b82e051bb4d1caa",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.8.0-rc.1.tgz",
        "fileCount": 321,
        "unpackedSize": 1884981,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCID0NAKDb+h6sc4Ridi/JQ/FxpUIKEK3MyPT0VbMwITWHAiAmOEkFqetNFY1EjgVqvwFQQqMV/wzlDCeDL7oIUV8xLQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjL11+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmovcw/+OmjS+cwTgPi7tNNmKV2Dp41tCJ8gJ5jQMeZbyEt0dLAzCtuj\r\n9gDynfyyY4cqRduqr3og8CecbF/wrGE/68K9omMo0X9w6g8WftdBNcQqiG8k\r\nBmqbdylyXYCdVFo/bOQElt53+8XenwubIEL0xVJXeBUuRnjA60j1uIWZe9PT\r\n/WnTmc9xNvYYF1hLwGxIEaje5KPuGVeCVWQgzSH2JmqfnTgx1f45PX739Njw\r\nekn2yLaxuc+gqXWxuz3bNZODPDYCEZX+QZ+j6Ts8qB9WSoHKg3ylZU9UjwJ/\r\nkDUN9afWpBXcGi0DRxLh0HQx59icBQJTr16PNTaDxIRZ/FB3bca6Nn3NSy5c\r\nbc6NzuThRMJDbgukJPeVMNnFSQr7QixxQwKKcahuluMD/n2efWRHuse0+gxx\r\nPKkQrcVxHgbrsLjDDyvN+lmChx/XM009OVWiaX2AWTvo59Lb/ctL+8Vqx6Ds\r\nrw3i7N3QhEmjV3W17Qm5TtoDQm03MN/UOBReP67mZO8yRB0xDnB6S7+2QzO+\r\nke072n3ggBXIEH6zejwyRyM3GqI1Crs7v1srOAiWC+fZCF4mhRfijNiJzPRH\r\nuE0NtuvI7yN888RHypwc9muVTQ8/gXy29CDSd3dEdsPoyuZZu8EIhpghpFce\r\nXMvJUSrkglHUBjzCH5frhGQlabZAbLYAby8=\r\n=FfvL\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.8.0-rc.1_1664048510568_0.16840584858108532"
      },
      "_hasShrinkwrap": false
    },
    "4.8.0-rc.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.8.0-rc.2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"icon.svg\" alt=\"OpenZeppelin\" height=\"40px\" align=\"left\"> OpenZeppelin Contracts Upgradeable\n\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-blue)](https://docs.openzeppelin.com/contracts)\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![gitpoap badge](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n\nThis repository hosts the Upgradeable variant of [OpenZeppelin Contracts], meant for use in upgradeable contracts. This variant is available as separate package called `@openzeppelin/contracts-upgradeable`.\n\n[OpenZeppelin Contracts]: https://github.com/OpenZeppelin/openzeppelin-contracts\n\nIt follows all of the rules for [Writing Upgradeable Contracts]: constructors are replaced by initializer functions, state variables are initialized in initializer functions, and we additionally check for storage incompatibilities across minor versions.\n\n[Writing Upgradeable Contracts]: https://docs.openzeppelin.com/upgrades-plugins/writing-upgradeable\n\n> :warning: **Warning**\n>\n> There will be storage incompatibilities across major versions of this package, which makes it unsafe to upgrade a deployed contract from one major version to another, for example from 3.4.0 to 4.0.0.\n> \n> Similarly, it is not safe to upgrade from `@openzeppelin/contracts-ethereum-package` (a similar previous package) to `@openzeppelin/contracts-upgradeable`.\n>\n> **It is strongly encouraged to use these contracts together with a tool that can automatically guarantee the safety of an upgradeable contract, such as the [OpenZeppelin Upgrades Plugins](https://github.com/OpenZeppelin/openzeppelin-upgrades).**\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n## Overview\n\n### Installation\n\n```console\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means that your contracts won't break unexpectedly when upgrading to a newer minor version.\n\nAn alternative to npm is to use the GitHub repository (`openzeppelin/openzeppelin-contracts`) to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.\n\n### Usage\n\nThe package replicates the structure of the main OpenZeppelin Contracts package, but every file and contract has the suffix `Upgradeable`.\n\n```diff\n-import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n+import \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n \n-contract MyCollectible is ERC721 {\n+contract MyCollectible is ERC721Upgradeable {\n```\n\nConstructors are replaced by internal initializer functions following the naming convention `__{ContractName}_init`. Since these are internal, you must always define your own public initializer function and call the parent initializer of the contract you extend.\n\n```diff\n-    constructor() ERC721(\"MyCollectible\", \"MCO\") {\n+    function initialize() initializer public {\n+        __ERC721_init(\"MyCollectible\", \"MCO\");\n     }\n```\n\n> **Caution**\n>\n> Use with multiple inheritance requires special care. Initializer functions are not linearized by the compiler like constructors. Because of this, each `__{ContractName}_init` function embeds the linearized calls to all parent initializers. As a consequence, calling two of these `init` functions can potentially initialize the same contract twice.\n>\n> The function `__{ContractName}_init_unchained` found in every contract is the initializer function minus the calls to parent initializers, and can be used to avoid the double initialization problem, but doing this manually is not recommended. We hope to be able to implement safety checks for this in future versions of the Upgrades Plugins.\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Gas Station Network](https://docs.openzeppelin.com/contracts/gsn): let your users interact with your contracts without having to pay for gas themselves.\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com), and developed following our high standards for code quality and security. OpenZeppelin Contracts is meant to provide tested and community-audited code, but please use common sense when doing anything that deals with real money! We take no responsibility for your implementation decisions and any security problems you might experience.\n\nThe core development principles and strategies that OpenZeppelin Contracts is based on include: security in depth, simple and modular code, clarity-driven naming conventions, comprehensive unit testing, pre-and-post-condition sanity checks, code consistency, and regular audits.\n\nThe latest audit was done on October 2018 on version 2.0.0.\n\nWe have a [**bug bounty program** on Immunefi](https://www.immunefi.com/bounty/openzeppelin). Please report any security issues you find through the Immunefi dashboard, or reach out to security@openzeppelin.com.\n\nCritical bug fixes will be backported to past major releases.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n",
      "readmeFilename": "README.md",
      "gitHead": "f8f576fcdc6edc6c5c412b72f2222f8ddb7a2312",
      "_id": "@openzeppelin/contracts-upgradeable@4.8.0-rc.2",
      "_nodeVersion": "18.10.0",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-RWiJX2VZtM6pxTcW/bzYbgGutjQPsp0d7BFOAAmRGtHaDTPqrPEefNNYANmpyUBmXKdpYoM8lP46V+QX1AfAAQ==",
        "shasum": "27f04f0148bef5314fad7cd41d12775e7ea37c1b",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.8.0-rc.2.tgz",
        "fileCount": 321,
        "unpackedSize": 1911694,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEMeuaufrfVB/gwrbEdpR2EtDLHhWAV5rOv15kB+MxohAiBLG/X22SdDhKIcG7C+i3U9F8Hq1n652SSnYCKGqkn9Iw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjVzwqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmquQg/8CMPMds3tyGiRUvVZapwmPRzmOvCM+UHJMb9cAZpkfPuL18AU\r\njg2Is1zV7oUcdtFpBIPfnkAM/MUik2k2Cc9KdL6RFT7qXhh38fBv8s7blMCd\r\nx6lc71MAkPEXWlfDCccFjGMeDsxhGsZRf7bFRGFCnEitTDUvV6/Xh3ozHnhR\r\nGxB6HSey852rW483TJkzCcSfEnf7V1ah2U+amCJQ5/8HKCJ3MPFyRZSFipKI\r\nK3JwebtuyuuSp8XApe6Who0lERiJUpGcmANigbOwOCphoTAzYhuiUf4GtLaM\r\njOTqmkY9mpY1b2WbN6DNqSWc6E3UsIGmpOZ49POlc2uRk/8ntVXwdCDLi7cZ\r\n6lhDSdD26iCWx9fdivE3r8tmgmPzHt905qHHCfafejA9HotxunSJfjsgNV4l\r\nkZoM4rmHOqgiiz7kKinIBX0MWHXib3Y2vIN4ModceLiV+vr86wysuQHkBqMZ\r\ngeeei5utEWKAw/kO/0uVKSgOklX5u8x4f/dQ+RTf0stEZ1LYV4BWrshy1peh\r\n7sLJbaoBwNW2+OCORBTCKmAsCcSsoKu3DGWZdPE5iVyjCtTRuXimckWK5Cwl\r\nU/zE4YzhaAHPHt1lU6e40Mid2wQhkFeLVbq8lTAtJsjbCCZUanCVBR2X1ggw\r\n+5swk0Sd2bjad4mzr0mekE/jWDCJvfdXIAQ=\r\n=wzna\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.8.0-rc.2_1666661418056_0.13440766700358098"
      },
      "_hasShrinkwrap": false
    },
    "4.8.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.8.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "65420cb9c943c32eb7e8c9da60183a413d90067a",
      "_id": "@openzeppelin/contracts-upgradeable@4.8.0",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-5GeFgqMiDlqGT8EdORadp1ntGF0qzWZLmEY7Wbp/yVhN7/B3NNzCxujuI77ktlyG81N3CUZP8cZe3ZAQ/cW10w==",
        "shasum": "26688982f46969018e3ed3199e72a07c8d114275",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.8.0.tgz",
        "fileCount": 321,
        "unpackedSize": 1911367,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFKMWTe5r/1cEpjztxNjn2MS7vp+snKwR24sJTgecwBNAiATNY7bjZGNixVvRnbAATlcYrBetXsB2QbCvl6WNJcsrA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjamn5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqnVw/+PmganVvIrX6UUETGZAoiM3MSUOWMWdR3zKPgZqJYjgBDb7tD\r\nzavug7rQ4bb3O7st5lQgLBD7Ifd1HwKQkrD5guGzIZPAQPaCdFAtJ1hX1LAd\r\n+LAVhqB9o2MkYyZgjfMGllSIVqJC6CacUgcPLRfBioBRw5mhKzkaXmcTWBTU\r\nPiXbjAcGVw+H9smxPkQNcrMflzOZas6F1Ou3Z8Qc0+BVMQaqFzL2dc0WjXXc\r\n1LCF9DSBbSgPAgMLRuaDN2Eqyyreq0cTF3BJXtcvpZADUsCUchbf/WjrwV0q\r\nycDcJIRUmdmfOfSglAsDR4l4+pALymkYZ1XQQy/qJUdPZRAUPGqTbiXvqjXl\r\n2oLhamG8+9dHgEuFBMt9b0SxpSm7+W6DfMD/UrYvcLZNBpOlLx8qhp5Dm0V4\r\nCh7C7nZVhPxbQ5UccnmcBplMDp5pkWcv9AQfm/Wa+nIQDuRYRCiZ3beOTmRQ\r\nR8S+6bZtMKP43qOM7uWPd89zsiS4WJEObHQBgLXb/fTi3noEPNu95u8iR4HY\r\n1o78va8PlEctKCNc2IjhHxGiyf4S+WFyJNPaouF717E5iTdzwsle7po8JLnK\r\nEOPoj3HRk9JVN1GnmI9WsBze7UGQ1LagAAbe05E4S5KdvusCLg5/9MBTj786\r\nRVf39tpWaEaeADzvy1iidzxpo9oG6DWJ69A=\r\n=V3Ef\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.8.0_1667918328923_0.647830148690385"
      },
      "_hasShrinkwrap": false
    },
    "4.8.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.8.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "7ec6d2a3117eb3487a5f9029203e80ceb89bd984",
      "_id": "@openzeppelin/contracts-upgradeable@4.8.1",
      "_nodeVersion": "18.13.0",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-1wTv+20lNiC0R07jyIAbHU7TNHKRwGiTGRfiNnA8jOWjKT98g5OgLpYWOi40Vgpk8SPLA9EvfJAbAeIyVn+7Bw==",
        "shasum": "363f7dd08f25f8f77e16d374350c3d6b43340a7a",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.8.1.tgz",
        "fileCount": 321,
        "unpackedSize": 1912890,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDOHpMyqhDJvJL3K/gTqIOQDFBS7sdB1UMPyiiHMsKD5gIhAMu9/RswN6jODMXrOytOnFJFzFwZ7tidrJ2S0V2P5GFX"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjwalMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp1Qw/+LDShwBHzK67e2OC1hAsN7PuCuvcBvMZDNN3Qtah5srNqtQ7I\r\na8h+PhOwf4cy3RIYlIPnSXayFoBYINvarfhA5+uiXM2+ifjl5szgcWyORH+/\r\nku6IjaWWXyuD1EOnoNnxliKH70XJbnstxnSGV06Fn51CF0NDN4bVwKHJWgXU\r\ntxk6R36WcPDNeThPrfnwIjSeWsPt75ePpGlNYR3/VawjwW/wVpaCok1pjO5b\r\npOw2kw4zxbnA7K44OHl5eXDA92O6u4fex1noYzWOPkYE8hYdljx5ogFLg/ak\r\nEMrp3LBsx5aQnNCHXfDC8voIZXwGQuWMLCIemNIO2GrL8K0PpUpoVCQcfJ/x\r\ndkv4uZpTZ7MEx8N8AdLnB4uzo0OEpdi173Nr3K2StYM6E13h3jI5AgGJDvPX\r\nr9QrJDf+pdK6/g4S2BpBJ4PiXTKUzC6dZi7XFzHnhvbOwIqLD0/pJ8o5Mt9Z\r\nHAAYEauf2lpMTviakFq9UfB1E4gNwVtBAudwpU9DGMe9aGo+CXHDDb5cl1nQ\r\nq145YQpIltH8BSjhCSzrTJ8Xdrqyymh1k+d7qviivjsXZpMJpDGw+EkxnLG7\r\nSCYvMTovoa81h4P+4dH5uTi/BRygcKY8Ror4svRUmdo/pQBUXL0Jsp6WD1I3\r\nhU3yFmy9sS6MPEdGYdlERF88Bi+GRdjz6Y4=\r\n=t+wv\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.8.1_1673636172434_0.030051076934872523"
      },
      "_hasShrinkwrap": false
    },
    "4.8.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.8.2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.8.2",
      "_integrity": "sha512-zIggnBwemUmmt9IS73qxi+tumALxCY4QEs3zLCII78k0Gfse2hAOdAkuAeLUzvWUpneMUfFE5sGHzEUSTvn4Ag==",
      "_resolved": "/home/frangio/oz/ug-contracts/contracts/openzeppelin-contracts-upgradeable-4.8.2.tgz",
      "_from": "file:/home/frangio/oz/ug-contracts/contracts/openzeppelin-contracts-upgradeable-4.8.2.tgz",
      "_nodeVersion": "18.14.2",
      "_npmVersion": "9.5.0",
      "dist": {
        "integrity": "sha512-zIggnBwemUmmt9IS73qxi+tumALxCY4QEs3zLCII78k0Gfse2hAOdAkuAeLUzvWUpneMUfFE5sGHzEUSTvn4Ag==",
        "shasum": "edef522bdbc46d478481391553bababdd2199e27",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.8.2.tgz",
        "fileCount": 340,
        "unpackedSize": 1951378,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAyshEkBlrhBzeckoSktStNwgpTztO4cSsnGPKD52/frAiEA6Va4Nx6ccHKkPDFYc7YCOdo8iWaAcy17zz7LSv1eAPY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkAS/OACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmriEw//aFD/o/ZlYtuM/mi2GBILhHAkIsG9b/Kq/Iq+s0Vzlh2xN7BL\r\nSa6Hj39wI6SCqmKm0gwBZxTjo0eswFLEcPxPM/pAZN2x25Wt5a3zuryzXMR0\r\nnAPJQkUZI8vIbUXijjo7SNFlRGsIC9MCBEnPacTTkyVM/am79ChqXBHK9dH0\r\nFtMd9wrQBshlyPIU8LKJjUF4V/6FFB0K7RI/V17A0GiDB5KvJUGCM8AuAZ5B\r\noKXt5bAZUvd0mtqKx+AdbrUIf/BI0vb+YSVVpt53JqX9+S9igK/WkPSmijYs\r\ne/s+iDXX8km9yzmdq6IgkxZZGwZUdqvGWvCa/lB9mz+199Tc2nFkhhKdq5yK\r\nMXu9k/MQ1iQ51QxvT+j/Xb4nkc2d2H1jFc+gbgfYFT3H52/fWlgxKtR40VJM\r\ncFDsHU27ONlmkMfs1dEQTHGiv22+CgAcS/brRzNtrtS7BIQ+rORUvyaFs6pB\r\nZ2+L+wJxfBYgR0xT8rKYkrgswKV8ZLP8pnafVkTpTTA3H6YcVTLbztTZb6CI\r\nMvcnBDcd8XZliek2DrcWgX5cT2DShJR7o/3Jurio83LNYE0HuSe42fc7TrC6\r\nrEg/fxg0Ffu1uoKYuxiMGJd9LtOGXb5RvXmdPxt11wLamATocNdrr439WEPh\r\nCsXa0A/jJkQXrP1OBh/KbzRBFQS4+FhenB4=\r\n=6LNy\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.8.2_1677799373878_0.5488874511658262"
      },
      "_hasShrinkwrap": false
    },
    "4.8.3": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.8.3",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.8.3",
      "_integrity": "sha512-SXDRl7HKpl2WDoJpn7CK/M9U4Z8gNXDHHChAKh0Iz+Wew3wu6CmFYBeie3je8V0GSXZAIYYwUktSrnW/kwVPtg==",
      "_resolved": "/home/frangio/oz/ug-contracts/contracts/openzeppelin-contracts-upgradeable-4.8.3.tgz",
      "_from": "file:contracts/openzeppelin-contracts-upgradeable-4.8.3.tgz",
      "_nodeVersion": "18.15.0",
      "_npmVersion": "9.5.0",
      "dist": {
        "integrity": "sha512-SXDRl7HKpl2WDoJpn7CK/M9U4Z8gNXDHHChAKh0Iz+Wew3wu6CmFYBeie3je8V0GSXZAIYYwUktSrnW/kwVPtg==",
        "shasum": "6b076a7b751811b90fe3a172a7faeaa603e13a3f",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.8.3.tgz",
        "fileCount": 342,
        "unpackedSize": 1953490,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHZUvduB3oIun6pM1FwgDe44LHoYTKnRwdy+AQOaHT0GAiEA5nS9+G9w/teot73aSIE9k9tRAGOL3O1AzXTAdxaYb1c="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkOGi9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqy+Q/9HmUx1xXJQU4MP5u/DZkmXyRE/Tc+A9fnxyJ4lNcumHCrOn3+\r\nMj0TEpFjkHUvCG+nj4JiO8BUAqsdckO/iMCB0REy+kWhx1HUtXzRhROdcK9w\r\nFFtXEU/fHNs8llWmcz2hBxn8tXRAtAbiJZNRID4S5CCWZnV3yV5KiLFJaahg\r\nb9JKJUkyhe0dqmo+k0uMp6Vs72Ua8iOT/JWHRjdx6AqiJ8sWsktHEVrNzjAZ\r\nrLFTqQbEHWyNj+QQuTJl8y5b+4LJ/CpZj2ck6E51WZVldnpRxLsdwIWozSq7\r\nx3UmaNfc9nZSIPbDVi5D5tbwgRWOO3hmCwL/EIca3M58mGYXzZt00HXUW6Xk\r\nQ89OaK07Yno9Cj0y3Zb6WcKQSnY6gcvSyNw5EZf3Noz3w43Md2s0ACSIvciv\r\nFloXjj3aKLHVeaY/s9cRilp4gb++pDUXUuNSO0XmS7YkNUHf+ByVUnOGvTNf\r\nq3NaeozbeNsUSyop9njH6mZKwQzuPBxNWZQzlPAaeIAGpXbp9dp9HpUVGbtR\r\nu6HFUxrPCDEQVCykdLwYxCTG3N+qABZH98DiN3Kd4+wG4WfIF6HJc7liLWLH\r\np2nJxLxcJfy6wJqBT5qcJcy9XVDiqOXVFcq+mTAFCtrwJRv8wubMvhqjGgcI\r\ngf0GT6a1W3YnvYX8iy/9arXbNi5z1eVQa5Q=\r\n=L1X4\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.8.3_1681418428731_0.6547434593298267"
      },
      "_hasShrinkwrap": false
    },
    "4.9.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.9.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"logo.svg\" alt=\"OpenZeppelin\" height=\"40px\">\n\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![GitPOAPs](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-yellow)](https://docs.openzeppelin.com/contracts)\n[![Forum](https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow)](https://docs.openzeppelin.com/contracts)\n\n**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.\n\n * Implementations of standards like [ERC20](https://docs.openzeppelin.com/contracts/erc20) and [ERC721](https://docs.openzeppelin.com/contracts/erc721).\n * Flexible [role-based permissioning](https://docs.openzeppelin.com/contracts/access-control) scheme.\n * Reusable [Solidity components](https://docs.openzeppelin.com/contracts/utilities) to build custom contracts and complex decentralized systems.\n\n:mage: **Not sure how to get started?** Check out [Contracts Wizard](https://wizard.openzeppelin.com/) â€” an interactive smart contract generator.\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n> **Note**\n> You are looking at the upgradeable variant of OpenZeppelin Contracts. Be sure to review the documentation on [Using OpenZeppelin Contracts with Upgrades](https://docs.openzeppelin.com/contracts/4.x/upgradeable).\n\n## Overview\n\n### Installation\n\n```\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means that your contracts won't break unexpectedly when upgrading to a newer minor version.\n\nAn alternative to npm is to use the GitHub repository (`openzeppelin/openzeppelin-contracts-upgradeable`) to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.\n\n### Usage\n\nOnce installed, you can use the contracts in the library by importing them:\n\n```solidity\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n\ncontract MyCollectible is ERC721Upgradeable {\n    function initialize() initializer public {\n        __ERC721_init(\"MyCollectible\", \"MCO\");\n    }\n}\n```\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com) with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.\n\nThe security policy is detailed in [`SECURITY.md`](./SECURITY.md), and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a [bug bounty program on Immunefi](https://immunefi.com/bounty/openzeppelin) to reward the responsible disclosure of vulnerabilities.\n\nThe engineering guidelines we follow to promote project quality can be found in [`GUIDELINES.md`](./GUIDELINES.md).\n\nPast audits can be found in [`audits/`](./audits).\n\nSmart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.\n\nOpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n\n## Legal\n\nYour use of this Project is governed by the terms found at www.openzeppelin.com/tos (the \"Terms\").\n",
      "readmeFilename": "README.md",
      "gitHead": "8c82bcba80d612226f4b523ace1ecdc4f0583c0b",
      "_id": "@openzeppelin/contracts-upgradeable@4.9.0-rc.0",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-hRm6WziXov05aligxC4SyifTzb8c9YBkr8SkTVfHXK3j058T+fFPAT+LQV06oltXw8wbI2KATtoebSvgZJMRVQ==",
        "shasum": "2aa52fad16ef8a5231dbb8ae66281c08d55a8c58",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.9.0-rc.0.tgz",
        "fileCount": 363,
        "unpackedSize": 2101450,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICBPWZwearlfDLZuFEKi4BehyRWkPO4ujqpkJgOpvjVMAiB1fHMZw3pMMnH+lObELALM4+YVntMzFSUiOxisUwZaeQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.9.0-rc.0_1683665235933_0.24237202725099571"
      },
      "_hasShrinkwrap": false
    },
    "4.9.0-rc.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.9.0-rc.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"logo.svg\" alt=\"OpenZeppelin\" height=\"40px\">\n\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![GitPOAPs](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-yellow)](https://docs.openzeppelin.com/contracts)\n[![Forum](https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow)](https://docs.openzeppelin.com/contracts)\n\n**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.\n\n * Implementations of standards like [ERC20](https://docs.openzeppelin.com/contracts/erc20) and [ERC721](https://docs.openzeppelin.com/contracts/erc721).\n * Flexible [role-based permissioning](https://docs.openzeppelin.com/contracts/access-control) scheme.\n * Reusable [Solidity components](https://docs.openzeppelin.com/contracts/utilities) to build custom contracts and complex decentralized systems.\n\n:mage: **Not sure how to get started?** Check out [Contracts Wizard](https://wizard.openzeppelin.com/) â€” an interactive smart contract generator.\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n> **Note**\n> You are looking at the upgradeable variant of OpenZeppelin Contracts. Be sure to review the documentation on [Using OpenZeppelin Contracts with Upgrades](https://docs.openzeppelin.com/contracts/4.x/upgradeable).\n\n## Overview\n\n### Installation\n\n```\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means that your contracts won't break unexpectedly when upgrading to a newer minor version.\n\nAn alternative to npm is to use the GitHub repository (`openzeppelin/openzeppelin-contracts-upgradeable`) to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.\n\n### Usage\n\nOnce installed, you can use the contracts in the library by importing them:\n\n```solidity\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n\ncontract MyCollectible is ERC721Upgradeable {\n    function initialize() initializer public {\n        __ERC721_init(\"MyCollectible\", \"MCO\");\n    }\n}\n```\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com) with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.\n\nThe security policy is detailed in [`SECURITY.md`](./SECURITY.md), and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a [bug bounty program on Immunefi](https://immunefi.com/bounty/openzeppelin) to reward the responsible disclosure of vulnerabilities.\n\nThe engineering guidelines we follow to promote project quality can be found in [`GUIDELINES.md`](./GUIDELINES.md).\n\nPast audits can be found in [`audits/`](./audits).\n\nSmart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.\n\nOpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n\n## Legal\n\nYour use of this Project is governed by the terms found at www.openzeppelin.com/tos (the \"Terms\").\n",
      "readmeFilename": "README.md",
      "gitHead": "d3140631f50060d9627930484e4e299543494d15",
      "_id": "@openzeppelin/contracts-upgradeable@4.9.0-rc.1",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-cCFORVEvQLumCExRAqbJxRu+YB7IycpMNRqDb9ocy07Q+r/GwjtNgfq3ByFvHt3dhZjioXqzKymlqLKrJ5eTWQ==",
        "shasum": "e4bbcb63411c7d323fa84b75a32fcb1899115f4b",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.9.0-rc.1.tgz",
        "fileCount": 363,
        "unpackedSize": 2101522,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFaO91QnzbzUhVObrpez+piZFHzHDMRUK34RF1gBfYJyAiAUD5xsO7XmcCMScBHrRjyGBA6j1uvYxp1gmorR+Qv05w=="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.9.0-rc.1_1684350324570_0.30008844170413607"
      },
      "_hasShrinkwrap": false
    },
    "4.9.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.9.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "f6febd79e2a3a17e26969dd0d450c6ebd64bf459",
      "_id": "@openzeppelin/contracts-upgradeable@4.9.0",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-+6i2j6vr2fdudTqkBvG+UOosankukxYzg3WN1nqU7ijjQ5A4osWaD3ip6CEz6YvDoSdZgcFVZoiGr7zRlUUoZw==",
        "shasum": "70aaef469c8ac5bb0ff781480f3d321cbf7be3a8",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.9.0.tgz",
        "fileCount": 363,
        "unpackedSize": 2101022,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD9FTE7jdhhZ/wrYeJ9ZdmxP+IMmTJpPjleQDI1kkdEPgIhAPv1DG0e1ZdQGEYqN5edEjRU4sRtMu98CcTJv5HdkA8r"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.9.0_1684866631210_0.6468159559724205"
      },
      "_hasShrinkwrap": false
    },
    "4.9.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.9.1",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "43b82754979c35abcd3ccad7b795754146c62ade",
      "_id": "@openzeppelin/contracts-upgradeable@4.9.1",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-UZf5/VdaBA/0kxF7/gg+2UrC8k+fbgiUM0Qw1apAhwpBWBxULbsHw0ZRMgT53nd6N8hr53XFjhcWNeTRGIiCVw==",
        "shasum": "03e33b8059ce43884995e69e4479f5a7f084b404",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.9.1.tgz",
        "fileCount": 363,
        "unpackedSize": 2104819,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDLkTpIetKsQek/OHjmUdV77/oA/8ZlFZmVNLwAIaOuvQIhAIj21JMZl2B2nbVfshQZ2GNiyJAhjWLLtvvLLHf9aNFK"
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.9.1_1686102636258_0.26583857719319814"
      },
      "_hasShrinkwrap": false
    },
    "4.9.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.9.2",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "bc95521e34dcd49792065e264a7ad2b5a86f0091",
      "_id": "@openzeppelin/contracts-upgradeable@4.9.2",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "9.5.1",
      "dist": {
        "integrity": "sha512-siviV3PZV/fHfPaoIC51rf1Jb6iElkYWnNYZ0leO23/ukXuvOyoC/ahy8jqiV7g+++9Nuo3n/rk5ajSN/+d/Sg==",
        "shasum": "a817c75688f8daede420052fbcb34e52482e769e",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.9.2.tgz",
        "fileCount": 363,
        "unpackedSize": 2105049,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEm73tbza3FyNkRLawhcELnUUT5XmUz0BUbsGkNSyA7qAiEA8D3eFYwkM79jeDpMpNoiIpR4I9PYIacagw5AsCaY4xA="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.9.2_1686949343664_0.7958044973439593"
      },
      "_hasShrinkwrap": false
    },
    "4.9.3": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.9.3",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "gitHead": "3d4c0d5741b131c231e558d7a6213392ab3672a5",
      "_id": "@openzeppelin/contracts-upgradeable@4.9.3",
      "_nodeVersion": "18.17.0",
      "_npmVersion": "9.6.7",
      "dist": {
        "integrity": "sha512-jjaHAVRMrE4UuZNfDwjlLGDxTHWIOwTJS2ldnc278a0gevfXfPr8hxKEVBGFBE96kl2G3VHDZhUimw/+G3TG2A==",
        "shasum": "ff17a80fb945f5102571f8efecb5ce5915cc4811",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.9.3.tgz",
        "fileCount": 363,
        "unpackedSize": 2105122,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDGT16v8kPEeq0CwzCfBdJgdxghU4Rlp5dtUM7NyAzTxwIgQHui7KvGlNs2rb2mf5rYG2SJveDEdtZmNiRpsf8u4Dc="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.9.3_1690579245955_0.9259428039616155"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-rc.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "5.0.0-rc.0",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "> **Warning**\n> Version 5.0 is under active development. The code in this branch is not recommended for use.\n\n# <img src=\"logo.svg\" alt=\"OpenZeppelin\" height=\"40px\">\n\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![GitPOAPs](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-yellow)](https://docs.openzeppelin.com/contracts)\n[![Forum](https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow)](https://docs.openzeppelin.com/contracts)\n\n**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.\n\n * Implementations of standards like [ERC20](https://docs.openzeppelin.com/contracts/erc20) and [ERC721](https://docs.openzeppelin.com/contracts/erc721).\n * Flexible [role-based permissioning](https://docs.openzeppelin.com/contracts/access-control) scheme.\n * Reusable [Solidity components](https://docs.openzeppelin.com/contracts/utilities) to build custom contracts and complex decentralized systems.\n\n:mage: **Not sure how to get started?** Check out [Contracts Wizard](https://wizard.openzeppelin.com/) â€” an interactive smart contract generator.\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n> **Note**\n> You are looking at the upgradeable variant of OpenZeppelin Contracts. Be sure to review the documentation on [Using OpenZeppelin Contracts with Upgrades](https://docs.openzeppelin.com/contracts/4.x/upgradeable).\n\n## Overview\n\n### Installation\n\n#### Hardhat, Truffle (npm)\n\n```\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means that your contracts won't break unexpectedly when upgrading to a newer minor version.\n\n#### Foundry (git)\n\n> **Warning** When installing via git, it is a common error to use the `master` branch. This is a development branch that should be avoided in favor of tagged releases. The release process involves security measures that the `master` branch does not guarantee.\n\n> **Warning** Foundry installs the latest version initially, but subsequent `forge update` commands will use the `master` branch.\n\n```\n$ forge install OpenZeppelin/openzeppelin-contracts-upgradeable\n```\n\nAdd `@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/` in `remappings.txt.` \n\n### Usage\n\nOnce installed, you can use the contracts in the library by importing them:\n\n```solidity\npragma solidity ^0.8.20;\n\nimport {ERC721Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n\ncontract MyCollectible is ERC721Upgradeable {\n    function initialize() initializer public {\n        __ERC721_init(\"MyCollectible\", \"MCO\");\n    }\n}\n```\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com) with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.\n\nThe [OpenZeppelin Contracts Security Center](https://contracts.openzeppelin.com/security) contains more details about the secure development process.\n\nThe security policy is detailed in [`SECURITY.md`](./SECURITY.md) as well, and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a [bug bounty program on Immunefi](https://immunefi.com/bounty/openzeppelin) to reward the responsible disclosure of vulnerabilities.\n\nThe engineering guidelines we follow to promote project quality can be found in [`GUIDELINES.md`](./GUIDELINES.md).\n\nPast audits can be found in [`audits/`](./audits).\n\nSmart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.\n\nOpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n\n## Legal\n\nYour use of this Project is governed by the terms found at www.openzeppelin.com/tos (the \"Terms\").\n",
      "readmeFilename": "README.md",
      "gitHead": "02e83002437d0e80056f64d0c2dd9582d37e2c9e",
      "_id": "@openzeppelin/contracts-upgradeable@5.0.0-rc.0",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-ZwL1Ywd9Wg6WSIOIkFHPf1Ysf+pxuxtCtPLOQT1AzJSbk76c72YmDMP5gfWjxWJU2ewu7ODBF7SE2TkH0Zywyw==",
        "shasum": "2f8c55d1ea84d352648a974fd3389ffb321e2d31",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-5.0.0-rc.0.tgz",
        "fileCount": 267,
        "unpackedSize": 1719049,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDiqhDA8drB0ImEJ2azrVryiauKGHUZBt8XoGa/xaJQeAiEA/5unAOqmVkYIXthNEV1m6UpfZ9+9+cuP7e+xF7O7ogw="
          }
        ]
      },
      "_npmUser": {
        "name": "ernestognw",
        "email": "ernesto@openzeppelin.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ernestognw",
          "email": "ernesto@openzeppelin.com"
        },
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_5.0.0-rc.0_1695138615183_0.6190825061538423"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-rc.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "5.0.0-rc.1",
      "scripts": {
        "prepack": "bash ../scripts/prepack.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "peerDependencies": {
        "@openzeppelin/contracts": "5.0.0-rc.1"
      },
      "_id": "@openzeppelin/contracts-upgradeable@5.0.0-rc.1",
      "readme": "> [!NOTE]\n> Version 5.0 is currently in release candidate period. Bug bounty rewards are boosted 50% until the release.  \n> [See more details on Immunefi.](https://immunefi.com/bounty/openzeppelin/)\n\n# <img src=\"logo.svg\" alt=\"OpenZeppelin\" height=\"40px\">\n\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![GitPOAPs](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-yellow)](https://docs.openzeppelin.com/contracts)\n[![Forum](https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow)](https://docs.openzeppelin.com/contracts)\n\n**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.\n\n * Implementations of standards like [ERC20](https://docs.openzeppelin.com/contracts/erc20) and [ERC721](https://docs.openzeppelin.com/contracts/erc721).\n * Flexible [role-based permissioning](https://docs.openzeppelin.com/contracts/access-control) scheme.\n * Reusable [Solidity components](https://docs.openzeppelin.com/contracts/utilities) to build custom contracts and complex decentralized systems.\n\n:mage: **Not sure how to get started?** Check out [Contracts Wizard](https://wizard.openzeppelin.com/) â€” an interactive smart contract generator.\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n> [!IMPORTANT]\n> OpenZeppelin Contracts uses semantic versioning to communicate backwards compatibility of its API and storage layout. For upgradeable contracts, the storage layout of different major versions should be assumed incompatible, for example, it is unsafe to upgrade from 4.9.3 to 5.0.0. Learn more at [Backwards Compatibility](https://docs.openzeppelin.com/contracts/backwards-compatibility).\n\n+> [!NOTE]\n+> You are looking at the upgradeable variant of OpenZeppelin Contracts. Be sure to review the documentation on [Using OpenZeppelin Contracts with Upgrades](https://docs.openzeppelin.com/contracts/upgradeable).\n+\n## Overview\n\n### Installation\n\n#### Hardhat, Truffle (npm)\n\n```\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n#### Foundry (git)\n\n> [!WARNING]\n> When installing via git, it is a common error to use the `master` branch. This is a development branch that should be avoided in favor of tagged releases. The release process involves security measures that the `master` branch does not guarantee.\n\n> [!WARNING]\n> Foundry installs the latest version initially, but subsequent `forge update` commands will use the `master` branch.\n\n```\n$ forge install OpenZeppelin/openzeppelin-contracts-upgradeable\n```\n\nAdd `@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/` in `remappings.txt.` \n\n### Usage\n\nOnce installed, you can use the contracts in the library by importing them:\n\n```solidity\npragma solidity ^0.8.20;\n\nimport {ERC721Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n\ncontract MyCollectible is ERC721Upgradeable {\n    function initialize() initializer public {\n        __ERC721_init(\"MyCollectible\", \"MCO\");\n    }\n}\n```\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com) with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.\n\nThe [OpenZeppelin Contracts Security Center](https://contracts.openzeppelin.com/security) contains more details about the secure development process.\n\nThe security policy is detailed in [`SECURITY.md`](./SECURITY.md) as well, and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a [bug bounty program on Immunefi](https://immunefi.com/bounty/openzeppelin) to reward the responsible disclosure of vulnerabilities.\n\nThe engineering guidelines we follow to promote project quality can be found in [`GUIDELINES.md`](./GUIDELINES.md).\n\nPast audits can be found in [`audits/`](./audits).\n\nSmart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.\n\nOpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n\n## Legal\n\nYour use of this Project is governed by the terms found at www.openzeppelin.com/tos (the \"Terms\").\n",
      "readmeFilename": "README.md",
      "gitHead": "464f8fd567a7efb1bcfcce124e883ab76453c858",
      "_nodeVersion": "20.6.1",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-1AkR6DypFjJP4rLY2WVFltYbHxm1/qdyotYjH9kFB4UMV+8rK1jdhNDnpVUzCAXJwcVYVBR7LGaYnkLD4T10Ag==",
        "shasum": "20110355ae7fe5707bf272300cdadb1f2e7ac89a",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-5.0.0-rc.1.tgz",
        "fileCount": 116,
        "unpackedSize": 1195877,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHc2cmT3qvrjyoN3LAQmUq1UfNJwDrm0Cfgdegklzv80AiBWniSwIE6EpwvIJrJm0CtihCkb1a/TkvogVLwjbSU6mA=="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ernestognw",
          "email": "ernesto@openzeppelin.com"
        },
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_5.0.0-rc.1_1695946139522_0.2611472596786968"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0-rc.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "5.0.0-rc.2",
      "scripts": {
        "prepack": "bash ../scripts/prepack.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "peerDependencies": {
        "@openzeppelin/contracts": "5.0.0-rc.2"
      },
      "_id": "@openzeppelin/contracts-upgradeable@5.0.0-rc.2",
      "readme": "> [!NOTE]\n> Version 5.0 is currently in release candidate period. Bug bounty rewards are boosted 50% until the release.  \n> [See more details on Immunefi.](https://immunefi.com/bounty/openzeppelin/)\n\n# <img src=\"logo.svg\" alt=\"OpenZeppelin\" height=\"40px\">\n\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![GitPOAPs](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-yellow)](https://docs.openzeppelin.com/contracts)\n[![Forum](https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow)](https://docs.openzeppelin.com/contracts)\n\n**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.\n\n * Implementations of standards like [ERC20](https://docs.openzeppelin.com/contracts/erc20) and [ERC721](https://docs.openzeppelin.com/contracts/erc721).\n * Flexible [role-based permissioning](https://docs.openzeppelin.com/contracts/access-control) scheme.\n * Reusable [Solidity components](https://docs.openzeppelin.com/contracts/utilities) to build custom contracts and complex decentralized systems.\n\n:mage: **Not sure how to get started?** Check out [Contracts Wizard](https://wizard.openzeppelin.com/) â€” an interactive smart contract generator.\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n> [!IMPORTANT]\n> OpenZeppelin Contracts uses semantic versioning to communicate backwards compatibility of its API and storage layout. For upgradeable contracts, the storage layout of different major versions should be assumed incompatible, for example, it is unsafe to upgrade from 4.9.3 to 5.0.0. Learn more at [Backwards Compatibility](https://docs.openzeppelin.com/contracts/backwards-compatibility).\n\n+> [!NOTE]\n+> You are looking at the upgradeable variant of OpenZeppelin Contracts. Be sure to review the documentation on [Using OpenZeppelin Contracts with Upgrades](https://docs.openzeppelin.com/contracts/upgradeable).\n+\n## Overview\n\n### Installation\n\n#### Hardhat, Truffle (npm)\n\n```\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\n#### Foundry (git)\n\n> [!WARNING]\n> When installing via git, it is a common error to use the `master` branch. This is a development branch that should be avoided in favor of tagged releases. The release process involves security measures that the `master` branch does not guarantee.\n\n> [!WARNING]\n> Foundry installs the latest version initially, but subsequent `forge update` commands will use the `master` branch.\n\n```\n$ forge install OpenZeppelin/openzeppelin-contracts-upgradeable\n```\n\nAdd `@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/` in `remappings.txt.` \n\n### Usage\n\nOnce installed, you can use the contracts in the library by importing them:\n\n```solidity\npragma solidity ^0.8.20;\n\nimport {ERC721Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n\ncontract MyCollectible is ERC721Upgradeable {\n    function initialize() initializer public {\n        __ERC721_init(\"MyCollectible\", \"MCO\");\n    }\n}\n```\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com) with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.\n\nThe [OpenZeppelin Contracts Security Center](https://contracts.openzeppelin.com/security) contains more details about the secure development process.\n\nThe security policy is detailed in [`SECURITY.md`](./SECURITY.md) as well, and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a [bug bounty program on Immunefi](https://immunefi.com/bounty/openzeppelin) to reward the responsible disclosure of vulnerabilities.\n\nThe engineering guidelines we follow to promote project quality can be found in [`GUIDELINES.md`](./GUIDELINES.md).\n\nPast audits can be found in [`audits/`](./audits).\n\nSmart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.\n\nOpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n\n## Legal\n\nYour use of this Project is governed by the terms found at www.openzeppelin.com/tos (the \"Terms\").\n",
      "readmeFilename": "README.md",
      "gitHead": "d18b22f7e5aa4c468a462ae141b5820dcdbe88e0",
      "_nodeVersion": "20.6.1",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-7Q3mssot18sveJ7qm/jQENlQEwFn7zfQfyMWDw0ZyCwDUIyLr9/RBKFmp6X0pqXvEFc99/z5UgkpVjFp2Bci9w==",
        "shasum": "508830c1b66a1cf40a855b3f10bf1411c6afba31",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-5.0.0-rc.2.tgz",
        "fileCount": 128,
        "unpackedSize": 1219242,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFOG39ass9pOurNaLtOjwLsp0E4tm07z6cIyUMtFAgPcAiEAsu73+bp+GJ6dE6QbHoqroIE+fqpZ7OLO6TsYgGCAuyE="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ernestognw",
          "email": "ernesto@openzeppelin.com"
        },
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_5.0.0-rc.2_1696278980640_0.35317817562826437"
      },
      "_hasShrinkwrap": false
    },
    "5.0.0": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "5.0.0",
      "scripts": {
        "prepack": "bash ../scripts/prepack.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "peerDependencies": {
        "@openzeppelin/contracts": "5.0.0"
      },
      "_id": "@openzeppelin/contracts-upgradeable@5.0.0",
      "gitHead": "625fb3c2b2696f1747ba2e72d1e1113066e6c177",
      "_nodeVersion": "20.6.1",
      "_npmVersion": "9.8.1",
      "dist": {
        "integrity": "sha512-D54RHzkOKHQ8xUssPgQe2d/U92mwaiBDY7qCCVGq6VqwQjsT3KekEQ3bonev+BLP30oZ0R1U6YC8/oLpizgC5Q==",
        "shasum": "859c00c55f04b6dda85b3c88bce507d65019888f",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-5.0.0.tgz",
        "fileCount": 128,
        "unpackedSize": 1210879,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICQJGQmPtv44t7jqPixO57Bosc0QZsuCsyrZpoTQMVmwAiEAqtO4Ei0DOmYgYjDWqFtD8fYG7CRp9OJm0GUDGh+1Tvw="
          }
        ]
      },
      "_npmUser": {
        "name": "frangio",
        "email": "frangio.1@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ernestognw",
          "email": "ernesto@openzeppelin.com"
        },
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_5.0.0_1696529221563_0.38164560601488207"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "5.0.1",
      "scripts": {
        "prepack": "bash ../scripts/prepack.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "peerDependencies": {
        "@openzeppelin/contracts": "5.0.1"
      },
      "_id": "@openzeppelin/contracts-upgradeable@5.0.1",
      "gitHead": "fbdb824a735891908d5588b28e0da5852d7ed7ba",
      "_nodeVersion": "18.18.0",
      "_npmVersion": "10.2.3",
      "dist": {
        "integrity": "sha512-MvaLoPnVcoZr/qqZP+4cl9piuR4gg0iIGgxVSZ/AL1iId3M6IdEHzz9Naw5Lirl4KKBI6ciTVnX07yL4dOMIJg==",
        "shasum": "ebc163cbed2de6b8b69bff628261d18deb912a81",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-5.0.1.tgz",
        "fileCount": 128,
        "unpackedSize": 1212662,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDHrQCRk9R2hkAtqr9bW54yuRHRhAT8U4m7WlKpPrVH/wIgc+x400mnLesGeS9MtVzoQPM5tdH+9rolHXfvyU0BqBw="
          }
        ]
      },
      "_npmUser": {
        "name": "amxx",
        "email": "hadrien.croubois@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ernestognw",
          "email": "ernesto@openzeppelin.com"
        },
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_5.0.1_1701992729621_0.2952895033666081"
      },
      "_hasShrinkwrap": false
    },
    "4.9.4": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.9.4",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.9.4",
      "gitHead": "f55babcbeef1d1c42c8e0f8884abcd6663a7909f",
      "_nodeVersion": "18.18.0",
      "_npmVersion": "10.2.3",
      "dist": {
        "integrity": "sha512-sVlteLCQ1RMgz7xbuhz/PRtBGT3oAPqmk1a/QWx+aeBibp+hFFeYodZJNXR7fs/4jbRQsXzPh1kuQ6RwMCCEMQ==",
        "shasum": "202222fa94fd85bd0a5794ead73acc63d815b55b",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.9.4.tgz",
        "fileCount": 363,
        "unpackedSize": 2110110,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGHuYPY3EqcREjJE4tKa3eGTuNf0fmZa/oN6HTegnD/4AiBAwz+wXVWix8y+PTwS7+z2QF9p6wt0WMsJ55hi+6jq4A=="
          }
        ]
      },
      "_npmUser": {
        "name": "amxx",
        "email": "hadrien.croubois@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ernestognw",
          "email": "ernesto@openzeppelin.com"
        },
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.9.4_1701995419298_0.26574394316060146"
      },
      "_hasShrinkwrap": false,
      "deprecated": "Duplicated line in Multicall.sol"
    },
    "4.9.5": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.9.5",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "readme": "# <img src=\"logo.svg\" alt=\"OpenZeppelin\" height=\"40px\">\n\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![GitPOAPs](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-yellow)](https://docs.openzeppelin.com/contracts)\n[![Forum](https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow)](https://docs.openzeppelin.com/contracts)\n\n**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.\n\n * Implementations of standards like [ERC20](https://docs.openzeppelin.com/contracts/erc20) and [ERC721](https://docs.openzeppelin.com/contracts/erc721).\n * Flexible [role-based permissioning](https://docs.openzeppelin.com/contracts/access-control) scheme.\n * Reusable [Solidity components](https://docs.openzeppelin.com/contracts/utilities) to build custom contracts and complex decentralized systems.\n\n:mage: **Not sure how to get started?** Check out [Contracts Wizard](https://wizard.openzeppelin.com/) â€” an interactive smart contract generator.\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n> **Note**\n> You are looking at the upgradeable variant of OpenZeppelin Contracts. Be sure to review the documentation on [Using OpenZeppelin Contracts with Upgrades](https://docs.openzeppelin.com/contracts/4.x/upgradeable).\n\n## Overview\n\n### Installation\n\n```\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means that your contracts won't break unexpectedly when upgrading to a newer minor version.\n\nAn alternative to npm is to use the GitHub repository (`openzeppelin/openzeppelin-contracts-upgradeable`) to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.\n\n### Usage\n\nOnce installed, you can use the contracts in the library by importing them:\n\n```solidity\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n\ncontract MyCollectible is ERC721Upgradeable {\n    function initialize() initializer public {\n        __ERC721_init(\"MyCollectible\", \"MCO\");\n    }\n}\n```\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com) with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.\n\nThe security policy is detailed in [`SECURITY.md`](./SECURITY.md), and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a [bug bounty program on Immunefi](https://immunefi.com/bounty/openzeppelin) to reward the responsible disclosure of vulnerabilities.\n\nThe engineering guidelines we follow to promote project quality can be found in [`GUIDELINES.md`](./GUIDELINES.md).\n\nPast audits can be found in [`audits/`](./audits).\n\nSmart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.\n\nOpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n\n## Legal\n\nYour use of this Project is governed by the terms found at www.openzeppelin.com/tos (the \"Terms\").\n",
      "readmeFilename": "README.md",
      "gitHead": "a40cb0bda838c2ef3dfc252c179f5c37c32e80c4",
      "_id": "@openzeppelin/contracts-upgradeable@4.9.5",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-f7L1//4sLlflAN7fVzJLoRedrf5Na3Oal5PZfIq55NFcVZ90EpV1q5xOvL4lFvg3MNICSDr2hH0JUBxwlxcoPg==",
        "shasum": "572b5da102fc9be1d73f34968e0ca56765969812",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.9.5.tgz",
        "fileCount": 344,
        "unpackedSize": 2072242,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF7bWniBZoW9EcygKfg4NKRjNq6c8tglJ1H3gLmbfv8EAiEAj+KBB8hEIfkwKXPcH4vFp473syp13qU5AExx/bXyBi4="
          }
        ]
      },
      "_npmUser": {
        "name": "ernestognw",
        "email": "ernesto@openzeppelin.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ernestognw",
          "email": "ernesto@openzeppelin.com"
        },
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.9.5_1702051078800_0.07760439978784373"
      },
      "_hasShrinkwrap": false
    },
    "5.0.2": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "5.0.2",
      "scripts": {
        "prepack": "bash ../scripts/prepack.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "peerDependencies": {
        "@openzeppelin/contracts": "5.0.2"
      },
      "_id": "@openzeppelin/contracts-upgradeable@5.0.2",
      "gitHead": "723f8cab09cdae1aca9ec9cc1cfa040c2d4b06c1",
      "_nodeVersion": "20.11.0",
      "_npmVersion": "10.2.4",
      "dist": {
        "integrity": "sha512-0MmkHSHiW2NRFiT9/r5Lu4eJq5UJ4/tzlOgYXNAIj/ONkQTVnz22pLxDvp4C4uZ9he7ZFvGn3Driptn1/iU7tQ==",
        "shasum": "3e5321a2ecdd0b206064356798c21225b6ec7105",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-5.0.2.tgz",
        "fileCount": 128,
        "unpackedSize": 1215933,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEOcfmR3x94Y9azq1SWFZmS9jEZZG5HUNSh3X3qEuZKKAiBEobQ3H/QHflLz0Yc8o39KVVuIL4Y0jnrYZhRXUfZDYA=="
          }
        ]
      },
      "_npmUser": {
        "name": "amxx",
        "email": "hadrien.croubois@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ernestognw",
          "email": "ernesto@openzeppelin.com"
        },
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_5.0.2_1709227667929_0.1385506316400913"
      },
      "_hasShrinkwrap": false
    },
    "4.9.6": {
      "name": "@openzeppelin/contracts-upgradeable",
      "description": "Secure Smart Contract library for Solidity",
      "version": "4.9.6",
      "scripts": {
        "prepare": "bash ../scripts/prepare-contracts-package.sh",
        "prepare-docs": "cd ..; npm run prepare-docs"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
      },
      "keywords": [
        "solidity",
        "ethereum",
        "smart",
        "contracts",
        "security",
        "zeppelin"
      ],
      "author": {
        "name": "OpenZeppelin Community",
        "email": "maintainers@openzeppelin.org"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
      },
      "homepage": "https://openzeppelin.com/contracts/",
      "_id": "@openzeppelin/contracts-upgradeable@4.9.6",
      "readme": "# <img src=\"logo.svg\" alt=\"OpenZeppelin\" height=\"40px\">\n\n[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)\n[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![GitPOAPs](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)\n[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-yellow)](https://docs.openzeppelin.com/contracts)\n[![Forum](https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow)](https://docs.openzeppelin.com/contracts)\n\n**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.\n\n * Implementations of standards like [ERC20](https://docs.openzeppelin.com/contracts/erc20) and [ERC721](https://docs.openzeppelin.com/contracts/erc721).\n * Flexible [role-based permissioning](https://docs.openzeppelin.com/contracts/access-control) scheme.\n * Reusable [Solidity components](https://docs.openzeppelin.com/contracts/utilities) to build custom contracts and complex decentralized systems.\n\n:mage: **Not sure how to get started?** Check out [Contracts Wizard](https://wizard.openzeppelin.com/) â€” an interactive smart contract generator.\n\n:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) â€” a secure platform for automating and monitoring your operations.\n\n> **Note**\n> You are looking at the upgradeable variant of OpenZeppelin Contracts. Be sure to review the documentation on [Using OpenZeppelin Contracts with Upgrades](https://docs.openzeppelin.com/contracts/4.x/upgradeable).\n\n## Overview\n\n### Installation\n\n```\n$ npm install @openzeppelin/contracts-upgradeable\n```\n\nOpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means that your contracts won't break unexpectedly when upgrading to a newer minor version.\n\nAn alternative to npm is to use the GitHub repository (`openzeppelin/openzeppelin-contracts-upgradeable`) to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.\n\n### Usage\n\nOnce installed, you can use the contracts in the library by importing them:\n\n```solidity\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\n\ncontract MyCollectible is ERC721Upgradeable {\n    function initialize() initializer public {\n        __ERC721_init(\"MyCollectible\", \"MCO\");\n    }\n}\n```\n\n_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._\n\nTo keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.\n\n## Learn More\n\nThe guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:\n\n* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.\n* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).\n* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.\n\nThe [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).\n\nFinally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.\n\n* [The Hitchhikerâ€™s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.\n* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.\n* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.\n\n## Security\n\nThis project is maintained by [OpenZeppelin](https://openzeppelin.com) with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.\n\nThe security policy is detailed in [`SECURITY.md`](./SECURITY.md), and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a [bug bounty program on Immunefi](https://immunefi.com/bounty/openzeppelin) to reward the responsible disclosure of vulnerabilities.\n\nThe engineering guidelines we follow to promote project quality can be found in [`GUIDELINES.md`](./GUIDELINES.md).\n\nPast audits can be found in [`audits/`](./audits).\n\nSmart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.\n\nOpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.\n\n## Contribute\n\nOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!\n\n## License\n\nOpenZeppelin Contracts is released under the [MIT License](LICENSE).\n\n## Legal\n\nYour use of this Project is governed by the terms found at www.openzeppelin.com/tos (the \"Terms\").\n",
      "readmeFilename": "README.md",
      "gitHead": "2d081f24cac1a867f6f73d512f2022e1fa987854",
      "_nodeVersion": "20.11.0",
      "_npmVersion": "10.2.4",
      "dist": {
        "integrity": "sha512-m4iHazOsOCv1DgM7eD7GupTJ+NFVujRZt1wzddDPSVGpWdKq1SKkla5htKG7+IS4d2XOCtzkUNwRZ7Vq5aEUMA==",
        "shasum": "38b21708a719da647de4bb0e4802ee235a0d24df",
        "tarball": "https://registry.npmjs.org/@openzeppelin/contracts-upgradeable/-/contracts-upgradeable-4.9.6.tgz",
        "fileCount": 363,
        "unpackedSize": 2110376,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCID7+aq7Wr9JZ+rdhXuEL1ZHnT9byYEyszJ2ixE2KFToQAiEA/5Sqnry0B2DmmfdJ3wWq8tsAeR3UN1DkSdAyOVqdpTo="
          }
        ]
      },
      "_npmUser": {
        "name": "amxx",
        "email": "hadrien.croubois@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "ernestognw",
          "email": "ernesto@openzeppelin.com"
        },
        {
          "name": "ericglau",
          "email": "ericglau@outlook.com"
        },
        {
          "name": "frangio",
          "email": "frangio.1@gmail.com"
        },
        {
          "name": "amxx",
          "email": "hadrien.croubois@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/contracts-upgradeable_4.9.6_1709228215553_0.5740589751611229"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2020-11-12T19:06:33.869Z",
    "3.2.0": "2020-11-12T19:06:34.273Z",
    "modified": "2024-02-29T17:37:24.124Z",
    "3.2.2-solc-0.7": "2020-11-16T18:13:55.522Z",
    "3.3.0": "2020-11-27T15:00:58.084Z",
    "3.3.0-solc-0.7": "2020-11-27T16:08:45.832Z",
    "3.4.0-rc.0": "2021-02-02T19:23:26.106Z",
    "3.4.0": "2021-02-02T19:49:15.391Z",
    "3.4.0-solc-0.7": "2021-02-02T19:50:47.695Z",
    "3.4.0-solc-0.7-2": "2021-02-02T20:04:31.324Z",
    "4.0.0-beta.0": "2021-02-24T03:40:21.915Z",
    "3.4.1-solc-0.7": "2021-03-03T20:22:56.618Z",
    "3.4.1": "2021-03-03T20:23:58.722Z",
    "3.4.1-solc-0.7-2": "2021-03-04T00:01:13.488Z",
    "4.0.0-rc.0": "2021-03-12T21:49:34.074Z",
    "4.0.0": "2021-03-23T15:29:17.881Z",
    "4.1.0-rc.0": "2021-04-26T19:47:14.482Z",
    "4.1.0": "2021-04-29T23:35:10.745Z",
    "4.2.0": "2021-07-07T19:17:25.463Z",
    "4.3.0-rc.0": "2021-08-11T22:16:32.673Z",
    "4.3.0": "2021-08-17T15:43:42.074Z",
    "4.3.1": "2021-08-26T21:20:54.904Z",
    "3.4.2": "2021-08-26T21:31:46.985Z",
    "3.4.2-solc-0.7": "2021-08-26T21:37:09.856Z",
    "4.3.2": "2021-09-14T21:16:15.652Z",
    "4.3.3": "2021-11-12T21:21:10.533Z",
    "4.4.0-rc.1": "2021-11-16T14:27:50.332Z",
    "4.4.0": "2021-11-25T20:02:50.718Z",
    "4.4.1": "2021-12-14T17:37:11.621Z",
    "4.4.2": "2022-01-11T23:12:13.478Z",
    "4.5.0-rc.0": "2022-01-13T23:21:08.065Z",
    "4.5.0": "2022-02-09T19:10:05.780Z",
    "4.5.1": "2022-02-11T16:21:06.249Z",
    "4.5.2": "2022-03-02T20:35:21.108Z",
    "4.6.0-rc.0": "2022-04-01T20:49:03.859Z",
    "4.6.0": "2022-05-02T20:59:29.585Z",
    "4.7.0-rc.0": "2022-06-10T23:10:51.335Z",
    "4.7.0": "2022-06-30T14:53:21.681Z",
    "4.7.1": "2022-07-20T14:18:49.378Z",
    "4.7.2": "2022-07-27T20:50:53.391Z",
    "4.7.3": "2022-08-10T19:10:39.498Z",
    "4.8.0-rc.0": "2022-09-13T23:46:15.268Z",
    "4.8.0-rc.1": "2022-09-24T19:41:50.757Z",
    "4.8.0-rc.2": "2022-10-25T01:30:18.325Z",
    "4.8.0": "2022-11-08T14:38:49.159Z",
    "4.8.1": "2023-01-13T18:56:12.686Z",
    "4.8.2": "2023-03-02T23:22:54.136Z",
    "4.8.3": "2023-04-13T20:40:29.027Z",
    "4.9.0-rc.0": "2023-05-09T20:47:16.161Z",
    "4.9.0-rc.1": "2023-05-17T19:05:24.847Z",
    "4.9.0": "2023-05-23T18:30:31.476Z",
    "4.9.1": "2023-06-07T01:50:36.621Z",
    "4.9.2": "2023-06-16T21:02:23.910Z",
    "4.9.3": "2023-07-28T21:20:46.270Z",
    "5.0.0-rc.0": "2023-09-19T15:50:15.419Z",
    "5.0.0-rc.1": "2023-09-29T00:08:59.874Z",
    "5.0.0-rc.2": "2023-10-02T20:36:20.939Z",
    "5.0.0": "2023-10-05T18:07:01.840Z",
    "5.0.1": "2023-12-07T23:45:29.885Z",
    "4.9.4": "2023-12-08T00:30:19.681Z",
    "4.9.5": "2023-12-08T15:57:59.160Z",
    "5.0.2": "2024-02-29T17:27:48.094Z",
    "4.9.6": "2024-02-29T17:36:55.865Z"
  },
  "maintainers": [
    {
      "name": "ernestognw",
      "email": "ernesto@openzeppelin.com"
    },
    {
      "name": "ericglau",
      "email": "ericglau@outlook.com"
    },
    {
      "name": "frangio",
      "email": "frangio.1@gmail.com"
    },
    {
      "name": "amxx",
      "email": "hadrien.croubois@gmail.com"
    }
  ],
  "description": "Secure Smart Contract library for Solidity",
  "homepage": "https://openzeppelin.com/contracts/",
  "keywords": [
    "solidity",
    "ethereum",
    "smart",
    "contracts",
    "security",
    "zeppelin"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git"
  },
  "author": {
    "name": "OpenZeppelin Community",
    "email": "maintainers@openzeppelin.org"
  },
  "bugs": {
    "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/issues"
  },
  "license": "MIT",
  "readme": "",
  "readmeFilename": "",
  "users": {
    "takez0": true
  }
}